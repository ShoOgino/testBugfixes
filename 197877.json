{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#log(int).mjava","commits":[{"id":"3c528d38c8d9b2452e932321931b11e7c19a96d5","date":1185353698,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#log(int).mjava","pathOld":"/dev/null","sourceNew":"  private void log (int count) {\n    if (logStep<0) {\n      // init once per instance\n      logStep = getRunData().getConfig().get(\"doc.writeline.log.step\", DEFAULT_WRITELINE_DOC_LOG_STEP);\n    }\n    if (logStep>0 && (count%logStep)==0) {\n      System.out.println(\"--> \"+Thread.currentThread().getName()+\" processed (add) \"+count+\" docs\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4bea909b475e3f9d726f4fee3c27d3c870b9027","date":1239875190,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#log(int).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#log(int).mjava","sourceNew":"  private void log(int count) {\n    // logStep is initialized in the ctor to a positive value. If the config\n    // file indicates no logging, or contains an invalid value, logStep is init\n    // to Integer.MAX_VALUE, so that logging will not occur (at least for the\n    // first Integer.MAX_VALUE records).\n    if (count % logStep == 0) {\n      System.out.println(\"--> \" + Thread.currentThread().getName()\n          + \" processed (write line) \" + count + \" docs\");\n    }\n  }\n\n","sourceOld":"  private void log (int count) {\n    if (logStep<0) {\n      // init once per instance\n      logStep = getRunData().getConfig().get(\"doc.writeline.log.step\", DEFAULT_WRITELINE_DOC_LOG_STEP);\n    }\n    if (logStep>0 && (count%logStep)==0) {\n      System.out.println(\"--> \"+Thread.currentThread().getName()+\" processed (add) \"+count+\" docs\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b","date":1245355139,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#log(int).mjava","sourceNew":null,"sourceOld":"  private void log(int count) {\n    // logStep is initialized in the ctor to a positive value. If the config\n    // file indicates no logging, or contains an invalid value, logStep is init\n    // to Integer.MAX_VALUE, so that logging will not occur (at least for the\n    // first Integer.MAX_VALUE records).\n    if (count % logStep == 0) {\n      System.out.println(\"--> \" + Thread.currentThread().getName()\n          + \" processed (write line) \" + count + \" docs\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3c528d38c8d9b2452e932321931b11e7c19a96d5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b":["c4bea909b475e3f9d726f4fee3c27d3c870b9027"],"c4bea909b475e3f9d726f4fee3c27d3c870b9027":["3c528d38c8d9b2452e932321931b11e7c19a96d5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6944b9fa6d8ef96b83ae2d3a4332d03b3857355b"]},"commit2Childs":{"3c528d38c8d9b2452e932321931b11e7c19a96d5":["c4bea909b475e3f9d726f4fee3c27d3c870b9027"],"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3c528d38c8d9b2452e932321931b11e7c19a96d5"],"c4bea909b475e3f9d726f4fee3c27d3c870b9027":["6944b9fa6d8ef96b83ae2d3a4332d03b3857355b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}