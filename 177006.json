{"path":"backwards/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","pathOld":"/dev/null","sourceNew":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n    \t  message(\"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory);\n        if (infoStream != null)\n          message(\"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        setRollbackSegmentInfos(pendingCommit);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        deleter.decRef(pendingCommit);\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null)\n        message(\"commit: pendingCommit == null; skip\");\n\n    if (infoStream != null)\n      message(\"commit: done\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","pathOld":"backwards/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","sourceNew":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n    \t  message(\"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory);\n        if (infoStream != null)\n          message(\"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        setRollbackSegmentInfos(pendingCommit);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        deleter.decRef(pendingCommit);\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null)\n        message(\"commit: pendingCommit == null; skip\");\n\n    if (infoStream != null)\n      message(\"commit: done\");\n  }\n\n","sourceOld":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n    \t  message(\"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory);\n        if (infoStream != null)\n          message(\"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        setRollbackSegmentInfos(pendingCommit);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        deleter.decRef(pendingCommit);\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null)\n        message(\"commit: pendingCommit == null; skip\");\n\n    if (infoStream != null)\n      message(\"commit: done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}