{"path":"lucene/core/src/java/org/apache/lucene/index/CodecReader#getChildResources().mjava","commits":[{"id":"505bff044e47a553f461b6f4484d1d08faf4ac85","date":1420728783,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CodecReader#getChildResources().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getChildResources().mjava","sourceNew":"  @Override\n  public Collection<Accountable> getChildResources() {\n    ensureOpen();\n    List<Accountable> resources = new ArrayList<>();\n    \n    // terms/postings\n    resources.add(Accountables.namedAccountable(\"postings\", getPostingsReader()));\n    \n    // norms\n    if (getNormsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"norms\", getNormsReader()));\n    }\n    \n    // docvalues\n    if (getDocValuesReader() != null) {\n      resources.add(Accountables.namedAccountable(\"docvalues\", getDocValuesReader()));\n    }\n    \n    // stored fields\n    if (getFieldsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"stored fields\", getFieldsReader()));\n    }\n\n    // term vectors\n    if (getTermVectorsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"term vectors\", getTermVectorsReader()));\n    }\n    \n    return Collections.unmodifiableList(resources);\n  }\n\n","sourceOld":"  @Override\n  public Collection<Accountable> getChildResources() {\n    ensureOpen();\n    List<Accountable> resources = new ArrayList<>();\n    resources.add(Accountables.namedAccountable(\"postings\", core.fields));\n    if (core.normsProducer != null) {\n      resources.add(Accountables.namedAccountable(\"norms\", core.normsProducer));\n    }\n    if (docValuesProducer != null) {\n      resources.add(Accountables.namedAccountable(\"docvalues\", docValuesProducer));\n    }\n    if (getFieldsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"stored fields\", getFieldsReader()));\n    }\n    if (getTermVectorsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"term vectors\", getTermVectorsReader()));\n    }\n    return Collections.unmodifiableList(resources);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1904709ea0185dc04e3d77ea01c79e909caf2796","date":1447006699,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CodecReader#getChildResources().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/CodecReader#getChildResources().mjava","sourceNew":"  @Override\n  public Collection<Accountable> getChildResources() {\n    ensureOpen();\n    List<Accountable> resources = new ArrayList<>();\n    \n    // terms/postings\n    resources.add(Accountables.namedAccountable(\"postings\", getPostingsReader()));\n    \n    // norms\n    if (getNormsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"norms\", getNormsReader()));\n    }\n    \n    // docvalues\n    if (getDocValuesReader() != null) {\n      resources.add(Accountables.namedAccountable(\"docvalues\", getDocValuesReader()));\n    }\n    \n    // stored fields\n    if (getFieldsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"stored fields\", getFieldsReader()));\n    }\n\n    // term vectors\n    if (getTermVectorsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"term vectors\", getTermVectorsReader()));\n    }\n\n    // dimensional values\n    if (getDimensionalReader() != null) {\n      resources.add(Accountables.namedAccountable(\"dimensional values\", getDimensionalReader()));\n    }\n    \n    return Collections.unmodifiableList(resources);\n  }\n\n","sourceOld":"  @Override\n  public Collection<Accountable> getChildResources() {\n    ensureOpen();\n    List<Accountable> resources = new ArrayList<>();\n    \n    // terms/postings\n    resources.add(Accountables.namedAccountable(\"postings\", getPostingsReader()));\n    \n    // norms\n    if (getNormsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"norms\", getNormsReader()));\n    }\n    \n    // docvalues\n    if (getDocValuesReader() != null) {\n      resources.add(Accountables.namedAccountable(\"docvalues\", getDocValuesReader()));\n    }\n    \n    // stored fields\n    if (getFieldsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"stored fields\", getFieldsReader()));\n    }\n\n    // term vectors\n    if (getTermVectorsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"term vectors\", getTermVectorsReader()));\n    }\n    \n    return Collections.unmodifiableList(resources);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7277addaa5100a3b464703b0a0efb5a993ff5999","date":1447264320,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CodecReader#getChildResources().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/CodecReader#getChildResources().mjava","sourceNew":"  @Override\n  public Collection<Accountable> getChildResources() {\n    ensureOpen();\n    final List<Accountable> resources = new ArrayList<>(6);\n    \n    // terms/postings\n    resources.add(Accountables.namedAccountable(\"postings\", getPostingsReader()));\n    \n    // norms\n    if (getNormsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"norms\", getNormsReader()));\n    }\n    \n    // docvalues\n    if (getDocValuesReader() != null) {\n      resources.add(Accountables.namedAccountable(\"docvalues\", getDocValuesReader()));\n    }\n    \n    // stored fields\n    if (getFieldsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"stored fields\", getFieldsReader()));\n    }\n\n    // term vectors\n    if (getTermVectorsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"term vectors\", getTermVectorsReader()));\n    }\n\n    // dimensional values\n    if (getDimensionalReader() != null) {\n      resources.add(Accountables.namedAccountable(\"dimensional values\", getDimensionalReader()));\n    }\n    \n    return Collections.unmodifiableList(resources);\n  }\n\n","sourceOld":"  @Override\n  public Collection<Accountable> getChildResources() {\n    ensureOpen();\n    List<Accountable> resources = new ArrayList<>();\n    \n    // terms/postings\n    resources.add(Accountables.namedAccountable(\"postings\", getPostingsReader()));\n    \n    // norms\n    if (getNormsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"norms\", getNormsReader()));\n    }\n    \n    // docvalues\n    if (getDocValuesReader() != null) {\n      resources.add(Accountables.namedAccountable(\"docvalues\", getDocValuesReader()));\n    }\n    \n    // stored fields\n    if (getFieldsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"stored fields\", getFieldsReader()));\n    }\n\n    // term vectors\n    if (getTermVectorsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"term vectors\", getTermVectorsReader()));\n    }\n\n    // dimensional values\n    if (getDimensionalReader() != null) {\n      resources.add(Accountables.namedAccountable(\"dimensional values\", getDimensionalReader()));\n    }\n    \n    return Collections.unmodifiableList(resources);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cab7a79353f33d1a94cd307bf33aa5148601ebe6","date":1453391888,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CodecReader#getChildResources().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/CodecReader#getChildResources().mjava","sourceNew":"  @Override\n  public Collection<Accountable> getChildResources() {\n    ensureOpen();\n    final List<Accountable> resources = new ArrayList<>(6);\n    \n    // terms/postings\n    resources.add(Accountables.namedAccountable(\"postings\", getPostingsReader()));\n    \n    // norms\n    if (getNormsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"norms\", getNormsReader()));\n    }\n    \n    // docvalues\n    if (getDocValuesReader() != null) {\n      resources.add(Accountables.namedAccountable(\"docvalues\", getDocValuesReader()));\n    }\n    \n    // stored fields\n    if (getFieldsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"stored fields\", getFieldsReader()));\n    }\n\n    // term vectors\n    if (getTermVectorsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"term vectors\", getTermVectorsReader()));\n    }\n\n    // points\n    if (getPointReader() != null) {\n      resources.add(Accountables.namedAccountable(\"points\", getPointReader()));\n    }\n    \n    return Collections.unmodifiableList(resources);\n  }\n\n","sourceOld":"  @Override\n  public Collection<Accountable> getChildResources() {\n    ensureOpen();\n    final List<Accountable> resources = new ArrayList<>(6);\n    \n    // terms/postings\n    resources.add(Accountables.namedAccountable(\"postings\", getPostingsReader()));\n    \n    // norms\n    if (getNormsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"norms\", getNormsReader()));\n    }\n    \n    // docvalues\n    if (getDocValuesReader() != null) {\n      resources.add(Accountables.namedAccountable(\"docvalues\", getDocValuesReader()));\n    }\n    \n    // stored fields\n    if (getFieldsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"stored fields\", getFieldsReader()));\n    }\n\n    // term vectors\n    if (getTermVectorsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"term vectors\", getTermVectorsReader()));\n    }\n\n    // dimensional values\n    if (getDimensionalReader() != null) {\n      resources.add(Accountables.namedAccountable(\"dimensional values\", getDimensionalReader()));\n    }\n    \n    return Collections.unmodifiableList(resources);\n  }\n\n","bugFix":null,"bugIntro":["4522ffca5a1f420c6a02198c9332d7c596a30ca5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4522ffca5a1f420c6a02198c9332d7c596a30ca5","date":1457270822,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CodecReader#getChildResources().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/CodecReader#getChildResources().mjava","sourceNew":"  @Override\n  public Collection<Accountable> getChildResources() {\n    ensureOpen();\n    final List<Accountable> resources = new ArrayList<>(6);\n    \n    // terms/postings\n    resources.add(Accountables.namedAccountable(\"postings\", getPostingsReader()));\n    \n    // norms\n    if (getNormsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"norms\", getNormsReader()));\n    }\n    \n    // docvalues\n    if (getDocValuesReader() != null) {\n      resources.add(Accountables.namedAccountable(\"docvalues\", getDocValuesReader()));\n    }\n    \n    // stored fields\n    if (getFieldsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"stored fields\", getFieldsReader()));\n    }\n\n    // term vectors\n    if (getTermVectorsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"term vectors\", getTermVectorsReader()));\n    }\n\n    // points\n    if (getPointsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"points\", getPointsReader()));\n    }\n    \n    return Collections.unmodifiableList(resources);\n  }\n\n","sourceOld":"  @Override\n  public Collection<Accountable> getChildResources() {\n    ensureOpen();\n    final List<Accountable> resources = new ArrayList<>(6);\n    \n    // terms/postings\n    resources.add(Accountables.namedAccountable(\"postings\", getPostingsReader()));\n    \n    // norms\n    if (getNormsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"norms\", getNormsReader()));\n    }\n    \n    // docvalues\n    if (getDocValuesReader() != null) {\n      resources.add(Accountables.namedAccountable(\"docvalues\", getDocValuesReader()));\n    }\n    \n    // stored fields\n    if (getFieldsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"stored fields\", getFieldsReader()));\n    }\n\n    // term vectors\n    if (getTermVectorsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"term vectors\", getTermVectorsReader()));\n    }\n\n    // points\n    if (getPointReader() != null) {\n      resources.add(Accountables.namedAccountable(\"points\", getPointReader()));\n    }\n    \n    return Collections.unmodifiableList(resources);\n  }\n\n","bugFix":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4522ffca5a1f420c6a02198c9332d7c596a30ca5":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["7277addaa5100a3b464703b0a0efb5a993ff5999"],"7277addaa5100a3b464703b0a0efb5a993ff5999":["1904709ea0185dc04e3d77ea01c79e909caf2796"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1904709ea0185dc04e3d77ea01c79e909caf2796":["505bff044e47a553f461b6f4484d1d08faf4ac85"],"505bff044e47a553f461b6f4484d1d08faf4ac85":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4522ffca5a1f420c6a02198c9332d7c596a30ca5"]},"commit2Childs":{"4522ffca5a1f420c6a02198c9332d7c596a30ca5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["4522ffca5a1f420c6a02198c9332d7c596a30ca5"],"7277addaa5100a3b464703b0a0efb5a993ff5999":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["505bff044e47a553f461b6f4484d1d08faf4ac85"],"1904709ea0185dc04e3d77ea01c79e909caf2796":["7277addaa5100a3b464703b0a0efb5a993ff5999"],"505bff044e47a553f461b6f4484d1d08faf4ac85":["1904709ea0185dc04e3d77ea01c79e909caf2796"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}