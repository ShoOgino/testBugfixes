{"path":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOptimizeExceptions().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOptimizeExceptions().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    RAMDirectory startDir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(startDir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n    ((LogMergePolicy) w.getMergePolicy()).setMergeFactor(100);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockRAMDirectory dir = new MockRAMDirectory(startDir);\n      IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT));\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      w.close();\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    RAMDirectory startDir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(startDir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n    ((LogMergePolicy) w.getMergePolicy()).setMergeFactor(100);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockRAMDirectory dir = new MockRAMDirectory(startDir);\n      IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT));\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      w.close();\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ab99e8c71442b92c320e218141dee04a9b91ce8","date":1269203801,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOptimizeExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    RAMDirectory startDir = new MockRAMDirectory();\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockRAMDirectory dir = new MockRAMDirectory(startDir);\n      conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT));\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      w.close();\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    RAMDirectory startDir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(startDir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n    ((LogMergePolicy) w.getMergePolicy()).setMergeFactor(100);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockRAMDirectory dir = new MockRAMDirectory(startDir);\n      IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT));\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      w.close();\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOptimizeExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    RAMDirectory startDir = new MockRAMDirectory();\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockRAMDirectory dir = new MockRAMDirectory(startDir);\n      conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      w.close();\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    RAMDirectory startDir = new MockRAMDirectory();\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockRAMDirectory dir = new MockRAMDirectory(startDir);\n      conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT));\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      w.close();\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOptimizeExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    RAMDirectory startDir = new MockRAMDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockRAMDirectory dir = new MockRAMDirectory(startDir);\n      conf = newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0, 0);\n      w.close();\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    RAMDirectory startDir = new MockRAMDirectory();\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockRAMDirectory dir = new MockRAMDirectory(startDir);\n      conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      w.close();\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","date":1281477834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOptimizeExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    MockRAMDirectory startDir = new MockRAMDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockRAMDirectory dir = new MockRAMDirectory(startDir);\n      conf = newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0, 0);\n      w.close();\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    RAMDirectory startDir = new MockRAMDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockRAMDirectory dir = new MockRAMDirectory(startDir);\n      conf = newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0, 0);\n      w.close();\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOptimizeExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    MockRAMDirectory startDir = newDirectory(random);\n    IndexWriterConfig conf = newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockRAMDirectory dir = new MockRAMDirectory(startDir);\n      conf = newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0, 0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    MockRAMDirectory startDir = new MockRAMDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockRAMDirectory dir = new MockRAMDirectory(startDir);\n      conf = newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0, 0);\n      w.close();\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a05409176bd65129d67a785ee70e881e238a9aef","date":1282582843,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOptimizeExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory(random);\n    IndexWriterConfig conf = newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(new RAMDirectory(startDir));\n      conf = newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0, 0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    MockRAMDirectory startDir = newDirectory(random);\n    IndexWriterConfig conf = newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockRAMDirectory dir = new MockRAMDirectory(startDir);\n      conf = newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0, 0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOptimizeExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0, 0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory(random);\n    IndexWriterConfig conf = newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(new RAMDirectory(startDir));\n      conf = newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0, 0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd4c4b2a55a46d2c45e3de4514f08e33215caa21","date":1288902330,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0, 0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0, 0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testOptimizeExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0, 0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    Directory startDir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(new RAMDirectory(startDir));\n      conf = newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergeScheduler(new ConcurrentMergeScheduler());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      dir.setRandomIOExceptionRate(0, 0);\n      w.close();\n      dir.close();\n    }\n    startDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOptimizeExceptions().mjava","sourceNew":null,"sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    RAMDirectory startDir = new MockRAMDirectory();\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2);\n    ((LogMergePolicy) conf.getMergePolicy()).setMergeFactor(100);\n    IndexWriter w = new IndexWriter(startDir, conf);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockRAMDirectory dir = new MockRAMDirectory(startDir);\n      conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n      ((ConcurrentMergeScheduler) conf.getMergeScheduler()).setSuppressExceptions();\n      w = new IndexWriter(dir, conf);\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      w.close();\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"7ab99e8c71442b92c320e218141dee04a9b91ce8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"85a883878c0af761245ab048babc63d099f835f3":["1f653cfcf159baeaafe5d01682a911e95bba4012","fd4c4b2a55a46d2c45e3de4514f08e33215caa21"],"d572389229127c297dd1fa5ce4758e1cec41e799":["7ab99e8c71442b92c320e218141dee04a9b91ce8"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d572389229127c297dd1fa5ce4758e1cec41e799","fd4c4b2a55a46d2c45e3de4514f08e33215caa21"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["a05409176bd65129d67a785ee70e881e238a9aef"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd4c4b2a55a46d2c45e3de4514f08e33215caa21":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"a05409176bd65129d67a785ee70e881e238a9aef":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["d572389229127c297dd1fa5ce4758e1cec41e799"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fd4c4b2a55a46d2c45e3de4514f08e33215caa21"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["a05409176bd65129d67a785ee70e881e238a9aef"],"7ab99e8c71442b92c320e218141dee04a9b91ce8":["d572389229127c297dd1fa5ce4758e1cec41e799"],"85a883878c0af761245ab048babc63d099f835f3":[],"d572389229127c297dd1fa5ce4758e1cec41e799":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b21422ff1d1d56499dec481f193b402e5e8def5b"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"1f653cfcf159baeaafe5d01682a911e95bba4012":["85a883878c0af761245ab048babc63d099f835f3","fd4c4b2a55a46d2c45e3de4514f08e33215caa21"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"fd4c4b2a55a46d2c45e3de4514f08e33215caa21":["85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a05409176bd65129d67a785ee70e881e238a9aef":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7ab99e8c71442b92c320e218141dee04a9b91ce8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}