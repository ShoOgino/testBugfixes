{"path":"lucene/core/src/java/org/apache/lucene/store/DataInput#skipBytes(long).mjava","commits":[{"id":"c7bda8b8b6640dd6438d931c8f9432366011a094","date":1397113958,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/DataInput#skipBytes(long).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Skip over <code>numBytes</code> bytes. The contract on this method is that it\n   * should have the same behavior as reading the same number of bytes into a\n   * buffer and discarding its content. Negative values of <code>numBytes</code>\n   * are not supported.\n   */\n  public void skipBytes(final long numBytes) throws IOException {\n    if (numBytes < 0) {\n      throw new IllegalArgumentException(\"numBytes must be >= 0, got \" + numBytes);\n    }\n    if (skipBuffer == null) {\n      skipBuffer = new byte[SKIP_BUFFER_SIZE];\n    }\n    assert skipBuffer.length == SKIP_BUFFER_SIZE;\n    for (long skipped = 0; skipped < numBytes; ) {\n      final int step = (int) Math.min(SKIP_BUFFER_SIZE, numBytes - skipped);\n      readBytes(skipBuffer, 0, step, false);\n      skipped += step;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bda8b8b6640dd6438d931c8f9432366011a094":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c7bda8b8b6640dd6438d931c8f9432366011a094"]},"commit2Childs":{"c7bda8b8b6640dd6438d931c8f9432366011a094":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7bda8b8b6640dd6438d931c8f9432366011a094"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}