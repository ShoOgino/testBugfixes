{"path":"lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer#getMaxScore(int).mjava","commits":[{"id":"523cc6563c99a55527ef7993efc5413c6648852d","date":1518704038,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer#getMaxScore(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer#maxScore().mjava","sourceNew":"  @Override\n  public float getMaxScore(int upTo) throws IOException {\n    return maxScore;\n  }\n\n","sourceOld":"  @Override\n  public float maxScore() {\n    return maxScore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b559eeae2a2a767f75666f9b692659cfe1bf631","date":1533724482,"type":3,"author":"Jim Ferenczi","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer#getMaxScore(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer#getMaxScore(int).mjava","sourceNew":"  @Override\n  public float getMaxScore(int upTo) throws IOException {\n    float scoreMax = 0;\n    double otherScoreSum = 0;\n    for (Scorer scorer : subScorers) {\n      if (scorer.docID() <= upTo) {\n        float subScore = scorer.getMaxScore(upTo);\n        if (subScore >= scoreMax) {\n          otherScoreSum += scoreMax;\n          scoreMax = subScore;\n        } else {\n          otherScoreSum += subScore;\n        }\n      }\n    }\n\n    if (tieBreakerMultiplier == 0) {\n      return scoreMax;\n    } else {\n      // The error of sums depends on the order in which values are summed up. In\n      // order to avoid this issue, we compute an upper bound of the value that\n      // the sum may take. If the max relative error is b, then it means that two\n      // sums are always within 2*b of each other.\n      otherScoreSum *= (1 + 2 * MathUtil.sumRelativeErrorBound(subScorers.size() - 1));\n      return (float) (scoreMax + otherScoreSum * tieBreakerMultiplier);\n    }\n  }\n\n","sourceOld":"  @Override\n  public float getMaxScore(int upTo) throws IOException {\n    return maxScore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5b559eeae2a2a767f75666f9b692659cfe1bf631":["523cc6563c99a55527ef7993efc5413c6648852d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"523cc6563c99a55527ef7993efc5413c6648852d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5b559eeae2a2a767f75666f9b692659cfe1bf631"]},"commit2Childs":{"5b559eeae2a2a767f75666f9b692659cfe1bf631":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["523cc6563c99a55527ef7993efc5413c6648852d"],"523cc6563c99a55527ef7993efc5413c6648852d":["5b559eeae2a2a767f75666f9b692659cfe1bf631"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}