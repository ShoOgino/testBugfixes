{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsReader#skipField(ByteArrayDataInput,int).mjava","commits":[{"id":"7d1467e0527cb2aeb9d7a05c26948ac9d82d81fa","date":1349450075,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsReader#skipField(ByteArrayDataInput,int).mjava","pathOld":"/dev/null","sourceNew":"  private static void skipField(ByteArrayDataInput in, int bits) throws IOException {\n    switch (bits & TYPE_MASK) {\n      case BYTE_ARR:\n      case STRING:\n        final int length = in.readVInt();\n        in.skipBytes(length);\n        break;\n      case NUMERIC_INT:\n      case NUMERIC_FLOAT:\n        in.readInt();\n        break;\n      case NUMERIC_LONG:\n      case NUMERIC_DOUBLE:\n        in.readLong();\n        break;\n      default:\n        throw new AssertionError(\"Unknown type flag: \" + Integer.toHexString(bits));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5e04b732c631a77cbbd25b6ce43c2a8abb1e9e69","date":1352818449,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsReader#skipField(ByteArrayDataInput,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsReader#skipField(ByteArrayDataInput,int).mjava","sourceNew":"  private static void skipField(ByteArrayDataInput in, int bits) throws IOException {\n    switch (bits & TYPE_MASK) {\n      case BYTE_ARR:\n      case STRING:\n        final int length = in.readVInt();\n        in.skipBytes(length);\n        break;\n      case NUMERIC_INT:\n      case NUMERIC_FLOAT:\n        in.readInt();\n        break;\n      case NUMERIC_LONG:\n      case NUMERIC_DOUBLE:\n        in.readLong();\n        break;\n      default:\n        throw new AssertionError(\"Unknown type flag: \" + Integer.toHexString(bits));\n    }\n  }\n\n","sourceOld":"  private static void skipField(ByteArrayDataInput in, int bits) throws IOException {\n    switch (bits & TYPE_MASK) {\n      case BYTE_ARR:\n      case STRING:\n        final int length = in.readVInt();\n        in.skipBytes(length);\n        break;\n      case NUMERIC_INT:\n      case NUMERIC_FLOAT:\n        in.readInt();\n        break;\n      case NUMERIC_LONG:\n      case NUMERIC_DOUBLE:\n        in.readLong();\n        break;\n      default:\n        throw new AssertionError(\"Unknown type flag: \" + Integer.toHexString(bits));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsReader#skipField(ByteArrayDataInput,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsReader#skipField(ByteArrayDataInput,int).mjava","sourceNew":"  private static void skipField(ByteArrayDataInput in, int bits) throws IOException {\n    switch (bits & TYPE_MASK) {\n      case BYTE_ARR:\n      case STRING:\n        final int length = in.readVInt();\n        in.skipBytes(length);\n        break;\n      case NUMERIC_INT:\n      case NUMERIC_FLOAT:\n        in.readInt();\n        break;\n      case NUMERIC_LONG:\n      case NUMERIC_DOUBLE:\n        in.readLong();\n        break;\n      default:\n        throw new AssertionError(\"Unknown type flag: \" + Integer.toHexString(bits));\n    }\n  }\n\n","sourceOld":"  private static void skipField(ByteArrayDataInput in, int bits) throws IOException {\n    switch (bits & TYPE_MASK) {\n      case BYTE_ARR:\n      case STRING:\n        final int length = in.readVInt();\n        in.skipBytes(length);\n        break;\n      case NUMERIC_INT:\n      case NUMERIC_FLOAT:\n        in.readInt();\n        break;\n      case NUMERIC_LONG:\n      case NUMERIC_DOUBLE:\n        in.readLong();\n        break;\n      default:\n        throw new AssertionError(\"Unknown type flag: \" + Integer.toHexString(bits));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5e04b732c631a77cbbd25b6ce43c2a8abb1e9e69":["7d1467e0527cb2aeb9d7a05c26948ac9d82d81fa"],"7d1467e0527cb2aeb9d7a05c26948ac9d82d81fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["7d1467e0527cb2aeb9d7a05c26948ac9d82d81fa","5e04b732c631a77cbbd25b6ce43c2a8abb1e9e69"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5e04b732c631a77cbbd25b6ce43c2a8abb1e9e69"]},"commit2Childs":{"5e04b732c631a77cbbd25b6ce43c2a8abb1e9e69":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7d1467e0527cb2aeb9d7a05c26948ac9d82d81fa":["5e04b732c631a77cbbd25b6ce43c2a8abb1e9e69","407687e67faf6e1f02a211ca078d8e3eed631027"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7d1467e0527cb2aeb9d7a05c26948ac9d82d81fa"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}