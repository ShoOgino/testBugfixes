{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/quality/Judge#validateData(QualityQuery[],PrintWriter).mjava","commits":[{"id":"df2d68685a69bd82bf79243e28623c0775eb7bd8","date":1185567892,"type":0,"author":"Doron Cohen","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/quality/Judge#validateData(QualityQuery[],PrintWriter).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Validate that queries and this Judge match each other.\n   * To be perfectly valid, this Judge must have some data for each and every \n   * input quality query, and must not have any data on any other quality query.  \n   * <b>Note</b>: the quality benchmark run would not fail in case of imperfect\n   * validity, just a warning message would be logged.  \n   * @param qq quality queries to be validated.\n   * @param logger if not null, validation issues are logged.\n   * @return true if perfectly valid, false if not.\n   */\n  public boolean validateData (QualityQuery qq[], PrintWriter logger);\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/quality/Judge#validateData(QualityQuery[],PrintWriter).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/quality/Judge#validateData(QualityQuery[],PrintWriter).mjava","sourceNew":"  /**\n   * Validate that queries and this Judge match each other.\n   * To be perfectly valid, this Judge must have some data for each and every \n   * input quality query, and must not have any data on any other quality query.  \n   * <b>Note</b>: the quality benchmark run would not fail in case of imperfect\n   * validity, just a warning message would be logged.  \n   * @param qq quality queries to be validated.\n   * @param logger if not null, validation issues are logged.\n   * @return true if perfectly valid, false if not.\n   */\n  public boolean validateData (QualityQuery qq[], PrintWriter logger);\n\n","sourceOld":"  /**\n   * Validate that queries and this Judge match each other.\n   * To be perfectly valid, this Judge must have some data for each and every \n   * input quality query, and must not have any data on any other quality query.  \n   * <b>Note</b>: the quality benchmark run would not fail in case of imperfect\n   * validity, just a warning message would be logged.  \n   * @param qq quality queries to be validated.\n   * @param logger if not null, validation issues are logged.\n   * @return true if perfectly valid, false if not.\n   */\n  public boolean validateData (QualityQuery qq[], PrintWriter logger);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"df2d68685a69bd82bf79243e28623c0775eb7bd8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["df2d68685a69bd82bf79243e28623c0775eb7bd8"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["df2d68685a69bd82bf79243e28623c0775eb7bd8"],"df2d68685a69bd82bf79243e28623c0775eb7bd8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}