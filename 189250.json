{"path":"lucene/monitor/src/test/org/apache/lucene/monitor/TestCachePurging#testQueryCacheCanBePurged().mjava","commits":[{"id":"7c529b189e09de25455d82ebd7260748cf11ee14","date":1560415257,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/monitor/src/test/org/apache/lucene/monitor/TestCachePurging#testQueryCacheCanBePurged().mjava","pathOld":"/dev/null","sourceNew":"  public void testQueryCacheCanBePurged() throws IOException {\n\n    final AtomicInteger purgeCount = new AtomicInteger();\n    MonitorUpdateListener listener = new MonitorUpdateListener() {\n      @Override\n      public void onPurge() {\n        purgeCount.incrementAndGet();\n      }\n    };\n\n    try (Monitor monitor = new Monitor(ANALYZER)) {\n      MonitorQuery[] queries = new MonitorQuery[]{\n          new MonitorQuery(\"1\", parse(\"test1 test4\")),\n          new MonitorQuery(\"2\", parse(\"test2\")),\n          new MonitorQuery(\"3\", parse(\"test3\"))\n      };\n      monitor.addQueryIndexUpdateListener(listener);\n      monitor.register(queries);\n      assertThat(monitor.getQueryCount(), is(3));\n      assertThat(monitor.getDisjunctCount(), is(4));\n      assertThat(monitor.getQueryCacheStats().cachedQueries, is(4));\n\n      Document doc = new Document();\n      doc.add(newTextField(\"field\", \"test1 test2 test3\", Field.Store.NO));\n      assertThat(monitor.match(doc, QueryMatch.SIMPLE_MATCHER).getMatchCount(), is(3));\n\n      monitor.deleteById(\"1\");\n      assertThat(monitor.getQueryCount(), is(2));\n      assertThat(monitor.getQueryCacheStats().cachedQueries, is(4));\n      assertThat(monitor.match(doc, QueryMatch.SIMPLE_MATCHER).getMatchCount(), is(2));\n\n      monitor.purgeCache();\n      assertThat(monitor.getQueryCacheStats().cachedQueries, is(2));\n\n      MatchingQueries<QueryMatch> result = monitor.match(doc, QueryMatch.SIMPLE_MATCHER);\n      assertThat(result.getMatchCount(), is(2));\n      assertTrue(purgeCount.get() > 0);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7c529b189e09de25455d82ebd7260748cf11ee14":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7c529b189e09de25455d82ebd7260748cf11ee14"]},"commit2Childs":{"7c529b189e09de25455d82ebd7260748cf11ee14":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c529b189e09de25455d82ebd7260748cf11ee14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}