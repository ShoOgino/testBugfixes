{"path":"lucene/queries/src/test/org/apache/lucene/queries/TermsFilterTest#testSingleFieldEquals().mjava","commits":[{"id":"dc5ed460ebaaf11698c901fe109e5d382145964d","date":1394525988,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TermsFilterTest#testSingleFieldEquals().mjava","pathOld":"/dev/null","sourceNew":"  public void testSingleFieldEquals() {\n    // Two terms with the same hash code\n    assertEquals(\"AaAaBB\".hashCode(), \"BBBBBB\".hashCode());\n    TermsFilter left = termsFilter(true, new Term(\"id\", \"AaAaAa\"), new Term(\"id\", \"AaAaBB\"));\n    TermsFilter right = termsFilter(true, new Term(\"id\", \"AaAaAa\"), new Term(\"id\", \"BBBBBB\"));\n    assertFalse(left.equals(right));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a58bbbe1c866963764d3f15d3a26a6a85f6c6af4","date":1394564625,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TermsFilterTest#testSingleFieldEquals().mjava","pathOld":"/dev/null","sourceNew":"  public void testSingleFieldEquals() {\n    // Two terms with the same hash code\n    assertEquals(\"AaAaBB\".hashCode(), \"BBBBBB\".hashCode());\n    TermsFilter left = termsFilter(true, new Term(\"id\", \"AaAaAa\"), new Term(\"id\", \"AaAaBB\"));\n    TermsFilter right = termsFilter(true, new Term(\"id\", \"AaAaAa\"), new Term(\"id\", \"BBBBBB\"));\n    assertFalse(left.equals(right));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2042d3e27841c5b60112990fc33559e10ccf6dd","date":1424537395,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TermsQueryTest#testSingleFieldEquals().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TermsFilterTest#testSingleFieldEquals().mjava","sourceNew":"  public void testSingleFieldEquals() {\n    // Two terms with the same hash code\n    assertEquals(\"AaAaBB\".hashCode(), \"BBBBBB\".hashCode());\n    TermsQuery left = termsQuery(true, new Term(\"id\", \"AaAaAa\"), new Term(\"id\", \"AaAaBB\"));\n    TermsQuery right = termsQuery(true, new Term(\"id\", \"AaAaAa\"), new Term(\"id\", \"BBBBBB\"));\n    assertFalse(left.equals(right));\n  }\n\n","sourceOld":"  public void testSingleFieldEquals() {\n    // Two terms with the same hash code\n    assertEquals(\"AaAaBB\".hashCode(), \"BBBBBB\".hashCode());\n    TermsFilter left = termsFilter(true, new Term(\"id\", \"AaAaAa\"), new Term(\"id\", \"AaAaBB\"));\n    TermsFilter right = termsFilter(true, new Term(\"id\", \"AaAaAa\"), new Term(\"id\", \"BBBBBB\"));\n    assertFalse(left.equals(right));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a58bbbe1c866963764d3f15d3a26a6a85f6c6af4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","dc5ed460ebaaf11698c901fe109e5d382145964d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dc5ed460ebaaf11698c901fe109e5d382145964d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c2042d3e27841c5b60112990fc33559e10ccf6dd":["dc5ed460ebaaf11698c901fe109e5d382145964d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c2042d3e27841c5b60112990fc33559e10ccf6dd"]},"commit2Childs":{"a58bbbe1c866963764d3f15d3a26a6a85f6c6af4":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a58bbbe1c866963764d3f15d3a26a6a85f6c6af4","dc5ed460ebaaf11698c901fe109e5d382145964d"],"dc5ed460ebaaf11698c901fe109e5d382145964d":["a58bbbe1c866963764d3f15d3a26a6a85f6c6af4","c2042d3e27841c5b60112990fc33559e10ccf6dd"],"c2042d3e27841c5b60112990fc33559e10ccf6dd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a58bbbe1c866963764d3f15d3a26a6a85f6c6af4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}