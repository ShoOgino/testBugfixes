{"path":"src/java/org/apache/lucene/index/DocumentsWriter.ByteBlockPool#nextBuffer().mjava","commits":[{"id":"4350b17bd363cd13a95171b8df1ca62ea4c3e71c","date":1183562198,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentsWriter.ByteBlockPool#nextBuffer().mjava","pathOld":"/dev/null","sourceNew":"    public void nextBuffer() {\n      bufferUpto++;\n      if (bufferUpto == buffers.length) {\n        byte[][] newBuffers = new byte[(int) (bufferUpto*1.5)][];\n        System.arraycopy(buffers, 0, newBuffers, 0, bufferUpto);\n        buffers = newBuffers;\n      }\n      buffer = buffers[bufferUpto] = getByteBlock();\n      Arrays.fill(buffer, (byte) 0);\n\n      byteUpto = 0;\n      byteOffset += BYTE_BLOCK_SIZE;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["73e2b87a1fb2410ca6afdb008ba85e3303905100","5fbbea84521522b6234b88a014f4dc5c10b7b153"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5fbbea84521522b6234b88a014f4dc5c10b7b153","date":1199988713,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentsWriter.ByteBlockPool#nextBuffer().mjava","pathOld":"src/java/org/apache/lucene/index/DocumentsWriter.ByteBlockPool#nextBuffer().mjava","sourceNew":"    public void nextBuffer() {\n      bufferUpto++;\n      if (bufferUpto == buffers.length) {\n        byte[][] newBuffers = new byte[(int) (bufferUpto*1.5)][];\n        System.arraycopy(buffers, 0, newBuffers, 0, bufferUpto);\n        buffers = newBuffers;\n      }\n      buffer = buffers[bufferUpto] = getByteBlock();\n\n      byteUpto = 0;\n      byteOffset += BYTE_BLOCK_SIZE;\n    }\n\n","sourceOld":"    public void nextBuffer() {\n      bufferUpto++;\n      if (bufferUpto == buffers.length) {\n        byte[][] newBuffers = new byte[(int) (bufferUpto*1.5)][];\n        System.arraycopy(buffers, 0, newBuffers, 0, bufferUpto);\n        buffers = newBuffers;\n      }\n      buffer = buffers[bufferUpto] = getByteBlock();\n      Arrays.fill(buffer, (byte) 0);\n\n      byteUpto = 0;\n      byteOffset += BYTE_BLOCK_SIZE;\n    }\n\n","bugFix":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"73e2b87a1fb2410ca6afdb008ba85e3303905100","date":1200854126,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentsWriter.ByteBlockPool#nextBuffer().mjava","pathOld":"src/java/org/apache/lucene/index/DocumentsWriter.ByteBlockPool#nextBuffer().mjava","sourceNew":"    public void nextBuffer() {\n      if (1+bufferUpto == buffers.length) {\n        byte[][] newBuffers = new byte[(int) (buffers.length*1.5)][];\n        System.arraycopy(buffers, 0, newBuffers, 0, buffers.length);\n        buffers = newBuffers;\n      }\n      buffer = buffers[1+bufferUpto] = getByteBlock();\n      bufferUpto++;\n\n      byteUpto = 0;\n      byteOffset += BYTE_BLOCK_SIZE;\n    }\n\n","sourceOld":"    public void nextBuffer() {\n      bufferUpto++;\n      if (bufferUpto == buffers.length) {\n        byte[][] newBuffers = new byte[(int) (bufferUpto*1.5)][];\n        System.arraycopy(buffers, 0, newBuffers, 0, bufferUpto);\n        buffers = newBuffers;\n      }\n      buffer = buffers[bufferUpto] = getByteBlock();\n\n      byteUpto = 0;\n      byteOffset += BYTE_BLOCK_SIZE;\n    }\n\n","bugFix":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"bugIntro":["0c19c518b507af5ddfff924b46930af2d7312040"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0c19c518b507af5ddfff924b46930af2d7312040","date":1204288967,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentsWriter.ByteBlockPool#nextBuffer().mjava","pathOld":"src/java/org/apache/lucene/index/DocumentsWriter.ByteBlockPool#nextBuffer().mjava","sourceNew":"    public void nextBuffer() {\n      if (1+bufferUpto == buffers.length) {\n        byte[][] newBuffers = new byte[(int) (buffers.length*1.5)][];\n        System.arraycopy(buffers, 0, newBuffers, 0, buffers.length);\n        buffers = newBuffers;\n      }\n      buffer = buffers[1+bufferUpto] = getByteBlock(trackAllocations);\n      bufferUpto++;\n\n      byteUpto = 0;\n      byteOffset += BYTE_BLOCK_SIZE;\n    }\n\n","sourceOld":"    public void nextBuffer() {\n      if (1+bufferUpto == buffers.length) {\n        byte[][] newBuffers = new byte[(int) (buffers.length*1.5)][];\n        System.arraycopy(buffers, 0, newBuffers, 0, buffers.length);\n        buffers = newBuffers;\n      }\n      buffer = buffers[1+bufferUpto] = getByteBlock();\n      bufferUpto++;\n\n      byteUpto = 0;\n      byteOffset += BYTE_BLOCK_SIZE;\n    }\n\n","bugFix":["73e2b87a1fb2410ca6afdb008ba85e3303905100"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a0af3a442be522899177e5e11384a45a6784a3f","date":1205348952,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/index/DocumentsWriter.ByteBlockPool#nextBuffer().mjava","sourceNew":null,"sourceOld":"    public void nextBuffer() {\n      if (1+bufferUpto == buffers.length) {\n        byte[][] newBuffers = new byte[(int) (buffers.length*1.5)][];\n        System.arraycopy(buffers, 0, newBuffers, 0, buffers.length);\n        buffers = newBuffers;\n      }\n      buffer = buffers[1+bufferUpto] = getByteBlock(trackAllocations);\n      bufferUpto++;\n\n      byteUpto = 0;\n      byteOffset += BYTE_BLOCK_SIZE;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"73e2b87a1fb2410ca6afdb008ba85e3303905100":["5fbbea84521522b6234b88a014f4dc5c10b7b153"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5fbbea84521522b6234b88a014f4dc5c10b7b153":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"5a0af3a442be522899177e5e11384a45a6784a3f":["0c19c518b507af5ddfff924b46930af2d7312040"],"4350b17bd363cd13a95171b8df1ca62ea4c3e71c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5a0af3a442be522899177e5e11384a45a6784a3f"],"0c19c518b507af5ddfff924b46930af2d7312040":["73e2b87a1fb2410ca6afdb008ba85e3303905100"]},"commit2Childs":{"73e2b87a1fb2410ca6afdb008ba85e3303905100":["0c19c518b507af5ddfff924b46930af2d7312040"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"5fbbea84521522b6234b88a014f4dc5c10b7b153":["73e2b87a1fb2410ca6afdb008ba85e3303905100"],"5a0af3a442be522899177e5e11384a45a6784a3f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4350b17bd363cd13a95171b8df1ca62ea4c3e71c":["5fbbea84521522b6234b88a014f4dc5c10b7b153"],"0c19c518b507af5ddfff924b46930af2d7312040":["5a0af3a442be522899177e5e11384a45a6784a3f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}