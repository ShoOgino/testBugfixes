{"path":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","sourceNew":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), new ArrayList(h.getCore().getSearchComponents().values()));\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), new ArrayList(h.getCore().getSearchComponents().values()));\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","sourceNew":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), new ArrayList(h.getCore().getSearchComponents().values()));\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), new ArrayList(h.getCore().getSearchComponents().values()));\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","sourceNew":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), new ArrayList(h.getCore().getSearchComponents().values()));\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), new ArrayList(h.getCore().getSearchComponents().values()));\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f08557cdb6c60ac7b88a9342c983a20cd236e74f","date":1330954480,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","sourceNew":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(SolrSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), new ArrayList(h.getCore().getSearchComponents().values()));\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), new ArrayList(h.getCore().getSearchComponents().values()));\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","sourceNew":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(SolrSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), new ArrayList(h.getCore().getSearchComponents().values()));\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), new ArrayList(h.getCore().getSearchComponents().values()));\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9aea0485ecacb6734c17da2d02569816c23a69c1","date":1425707735,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","sourceNew":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(SolrSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    List<SearchComponent> components = new ArrayList<>();\n    for (String name : h.getCore().getSearchComponents().keySet()) {\n      components.add(h.getCore().getSearchComponent(name));\n    }\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), components);\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(SolrSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), new ArrayList(h.getCore().getSearchComponents().values()));\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","sourceNew":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(SolrSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    List<SearchComponent> components = new ArrayList<>();\n    for (String name : h.getCore().getSearchComponents().keySet()) {\n      components.add(h.getCore().getSearchComponent(name));\n    }\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), components);\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(SolrSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), new ArrayList(h.getCore().getSearchComponents().values()));\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ff704ef91e9ae30ca59babb23ece85720701b60","date":1498684964,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","sourceNew":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"/spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(SolrSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"/spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    List<SearchComponent> components = new ArrayList<>();\n    for (String name : h.getCore().getSearchComponents().keySet()) {\n      components.add(h.getCore().getSearchComponent(name));\n    }\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), components);\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(SolrSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    List<SearchComponent> components = new ArrayList<>();\n    for (String name : h.getCore().getSearchComponents().keySet()) {\n      components.add(h.getCore().getSearchComponent(name));\n    }\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), components);\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","sourceNew":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"/spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(SolrSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"/spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    List<SearchComponent> components = new ArrayList<>();\n    for (String name : h.getCore().getSearchComponents().keySet()) {\n      components.add(h.getCore().getSearchComponent(name));\n    }\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), components);\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(SolrSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    List<SearchComponent> components = new ArrayList<>();\n    for (String name : h.getCore().getSearchComponents().keySet()) {\n      components.add(h.getCore().getSearchComponent(name));\n    }\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), components);\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","sourceNew":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"/spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(SolrSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"/spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    List<SearchComponent> components = new ArrayList<>();\n    for (String name : h.getCore().getSearchComponents().keySet()) {\n      components.add(h.getCore().getSearchComponent(name));\n    }\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), components);\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(SolrSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    List<SearchComponent> components = new ArrayList<>();\n    for (String name : h.getCore().getSearchComponents().keySet()) {\n      components.add(h.getCore().getSearchComponent(name));\n    }\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), components);\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba055e19afc289adcb5bedaf68513793a7254012","date":1591268575,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","sourceNew":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"/spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(SolrSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"/spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    List<SearchComponent> components = new ArrayList<>();\n    for (String name : h.getCore().getSearchComponents().keySet()) {\n      components.add(h.getCore().getSearchComponent(name));\n    }\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), components);\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n    checker.close();\n  }\n\n","sourceOld":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"/spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(SolrSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"/spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    List<SearchComponent> components = new ArrayList<>();\n    for (String name : h.getCore().getSearchComponents().keySet()) {\n      components.add(h.getCore().getSearchComponent(name));\n    }\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), components);\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","sourceNew":"  @Test\n  @SuppressWarnings({\"unchecked\"})\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"/spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList args = new NamedList();\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(SolrSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"/spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    List<SearchComponent> components = new ArrayList<>();\n    for (String name : h.getCore().getSearchComponents().keySet()) {\n      components.add(h.getCore().getSearchComponent(name));\n    }\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), components);\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n    checker.close();\n  }\n\n","sourceOld":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"/spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(SolrSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"/spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    List<SearchComponent> components = new ArrayList<>();\n    for (String name : h.getCore().getSearchComponents().keySet()) {\n      components.add(h.getCore().getSearchComponent(name));\n    }\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), components);\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n    checker.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["c26f00b574427b55127e869b935845554afde1fa","f08557cdb6c60ac7b88a9342c983a20cd236e74f"],"f08557cdb6c60ac7b88a9342c983a20cd236e74f":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"30c8e5574b55d57947e989443dfde611646530ee":["9aea0485ecacb6734c17da2d02569816c23a69c1","28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["9aea0485ecacb6734c17da2d02569816c23a69c1","5ff704ef91e9ae30ca59babb23ece85720701b60"],"e98520789adb1d5ad05afb4956eca0944a929688":["ba055e19afc289adcb5bedaf68513793a7254012"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["f08557cdb6c60ac7b88a9342c983a20cd236e74f","9aea0485ecacb6734c17da2d02569816c23a69c1"],"ba055e19afc289adcb5bedaf68513793a7254012":["28288370235ed02234a64753cdbf0c6ec096304a"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9aea0485ecacb6734c17da2d02569816c23a69c1":["f08557cdb6c60ac7b88a9342c983a20cd236e74f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"5ff704ef91e9ae30ca59babb23ece85720701b60":["9aea0485ecacb6734c17da2d02569816c23a69c1"]},"commit2Childs":{"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"c26f00b574427b55127e869b935845554afde1fa":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","f08557cdb6c60ac7b88a9342c983a20cd236e74f"],"f08557cdb6c60ac7b88a9342c983a20cd236e74f":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","9aea0485ecacb6734c17da2d02569816c23a69c1"],"30c8e5574b55d57947e989443dfde611646530ee":[],"28288370235ed02234a64753cdbf0c6ec096304a":["30c8e5574b55d57947e989443dfde611646530ee","ba055e19afc289adcb5bedaf68513793a7254012"],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"ba055e19afc289adcb5bedaf68513793a7254012":["e98520789adb1d5ad05afb4956eca0944a929688"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"9aea0485ecacb6734c17da2d02569816c23a69c1":["30c8e5574b55d57947e989443dfde611646530ee","28288370235ed02234a64753cdbf0c6ec096304a","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","5ff704ef91e9ae30ca59babb23ece85720701b60"],"5ff704ef91e9ae30ca59babb23ece85720701b60":["28288370235ed02234a64753cdbf0c6ec096304a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","30c8e5574b55d57947e989443dfde611646530ee","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}