{"path":"lucene/core/src/test/org/apache/lucene/document/BaseXYShapeTestCase#nextPoints().mjava","commits":[{"id":"09c1e6d465800c73af60624bf9d4459a19f7940c","date":1579293280,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/BaseXYShapeTestCase#nextPoints().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/BaseXYShapeTestCase#nextPoints().mjava","sourceNew":"  @Override\n  protected Object[] nextPoints() {\n    int numPoints = TestUtil.nextInt(random(), 1, 20);\n    float[][] points = new float[numPoints][2];\n    for (int i = 0; i < numPoints; i++) {\n      points[i][0] = (float) ShapeTestUtil.nextDouble();\n      points[i][1] = (float) ShapeTestUtil.nextDouble();\n    }\n    return points;\n  }\n\n","sourceOld":"  @Override\n  protected Object[] nextPoints() {\n    int numPoints = TestUtil.nextInt(random(), 1, 20);\n    float[][] points = new float[numPoints][2];\n    for (int i = 0; i < numPoints; i++) {\n      points[i][0] = (float) ShapeTestUtil.nextDouble();\n      points[i][1] = (float) ShapeTestUtil.nextDouble();\n    }\n    return points;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"617d6d4150e0fb2acef8980ce51e3b8e628fb200","date":1580326292,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/BaseXYShapeTestCase#nextPoints().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/BaseXYShapeTestCase#nextPoints().mjava","sourceNew":"  @Override\n  protected Object[] nextPoints() {\n    Random random = random();\n    int numPoints = TestUtil.nextInt(random, 1, 20);\n    float[][] points = new float[numPoints][2];\n    for (int i = 0; i < numPoints; i++) {\n      points[i][0] = (float) ShapeTestUtil.nextDouble(random);\n      points[i][1] = (float) ShapeTestUtil.nextDouble(random);\n    }\n    return points;\n  }\n\n","sourceOld":"  @Override\n  protected Object[] nextPoints() {\n    int numPoints = TestUtil.nextInt(random(), 1, 20);\n    float[][] points = new float[numPoints][2];\n    for (int i = 0; i < numPoints; i++) {\n      points[i][0] = (float) ShapeTestUtil.nextDouble();\n      points[i][1] = (float) ShapeTestUtil.nextDouble();\n    }\n    return points;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a4d14322963cbbe599706c6c272d5cba0817ea32","date":1581676750,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/BaseXYShapeTestCase#nextPoints().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/BaseXYShapeTestCase#nextPoints().mjava","sourceNew":"  @Override\n  protected Object[] nextPoints() {\n    Random random = random();\n    int numPoints = TestUtil.nextInt(random, 1, 20);\n    float[][] points = new float[numPoints][2];\n    for (int i = 0; i < numPoints; i++) {\n      points[i][0] =  ShapeTestUtil.nextFloat(random);\n      points[i][1] =  ShapeTestUtil.nextFloat(random);\n    }\n    return points;\n  }\n\n","sourceOld":"  @Override\n  protected Object[] nextPoints() {\n    Random random = random();\n    int numPoints = TestUtil.nextInt(random, 1, 20);\n    float[][] points = new float[numPoints][2];\n    for (int i = 0; i < numPoints; i++) {\n      points[i][0] = (float) ShapeTestUtil.nextDouble(random);\n      points[i][1] = (float) ShapeTestUtil.nextDouble(random);\n    }\n    return points;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f66eaefcdea9f8ffcf9508f78556159d61b8e3df","date":1581695213,"type":3,"author":"Erick Erickson","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/document/BaseXYShapeTestCase#nextPoints().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/BaseXYShapeTestCase#nextPoints().mjava","sourceNew":"  @Override\n  protected Object[] nextPoints() {\n    Random random = random();\n    int numPoints = TestUtil.nextInt(random, 1, 20);\n    float[][] points = new float[numPoints][2];\n    for (int i = 0; i < numPoints; i++) {\n      points[i][0] =  ShapeTestUtil.nextFloat(random);\n      points[i][1] =  ShapeTestUtil.nextFloat(random);\n    }\n    return points;\n  }\n\n","sourceOld":"  @Override\n  protected Object[] nextPoints() {\n    Random random = random();\n    int numPoints = TestUtil.nextInt(random, 1, 20);\n    float[][] points = new float[numPoints][2];\n    for (int i = 0; i < numPoints; i++) {\n      points[i][0] = (float) ShapeTestUtil.nextDouble(random);\n      points[i][1] = (float) ShapeTestUtil.nextDouble(random);\n    }\n    return points;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f66eaefcdea9f8ffcf9508f78556159d61b8e3df":["617d6d4150e0fb2acef8980ce51e3b8e628fb200","a4d14322963cbbe599706c6c272d5cba0817ea32"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c1e6d465800c73af60624bf9d4459a19f7940c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"617d6d4150e0fb2acef8980ce51e3b8e628fb200":["09c1e6d465800c73af60624bf9d4459a19f7940c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f66eaefcdea9f8ffcf9508f78556159d61b8e3df"],"a4d14322963cbbe599706c6c272d5cba0817ea32":["617d6d4150e0fb2acef8980ce51e3b8e628fb200"]},"commit2Childs":{"f66eaefcdea9f8ffcf9508f78556159d61b8e3df":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09c1e6d465800c73af60624bf9d4459a19f7940c"],"09c1e6d465800c73af60624bf9d4459a19f7940c":["617d6d4150e0fb2acef8980ce51e3b8e628fb200"],"617d6d4150e0fb2acef8980ce51e3b8e628fb200":["f66eaefcdea9f8ffcf9508f78556159d61b8e3df","a4d14322963cbbe599706c6c272d5cba0817ea32"],"a4d14322963cbbe599706c6c272d5cba0817ea32":["f66eaefcdea9f8ffcf9508f78556159d61b8e3df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}