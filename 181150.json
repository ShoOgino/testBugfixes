{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testReaderParentArray().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testReaderParentArray().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testReaderParentArray().mjava","sourceNew":"  /**  Tests TaxonomyReader's getParentArray() method. We do not test this\n    method directly, but rather just compare its results to those from\n    other methods (which we have already tested above).\n   */\n  @Test\n  public void testReaderParentArray() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    tw.close();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    int[] parents = tr.getParentArray();\n    assertEquals(tr.getSize(), parents.length);\n    for (int i=0; i<tr.getSize(); i++) {\n      assertEquals(tr.getParent(i), parents[i]);\n    }\n    tr.close();\n    indexDir.close();\n  }\n\n","sourceOld":"  /**  Tests TaxonomyReader's getParentArray() method. We do not test this\n    method directly, but rather just compare its results to those from\n    other methods (which we have already tested above).\n   */\n  @Test\n  public void testReaderParentArray() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    tw.close();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    int[] parents = tr.getParentArray();\n    assertEquals(tr.getSize(), parents.length);\n    for (int i=0; i<tr.getSize(); i++) {\n      assertEquals(tr.getParent(i), parents[i]);\n    }\n    tr.close();\n    indexDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d58d08788c3fd51172ba34474cca42499d6391b","date":1354802133,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testReaderParentArray().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testReaderParentArray().mjava","sourceNew":"  /**  Tests TaxonomyReader's getParentArray() method. We do not test this\n    method directly, but rather just compare its results to those from\n    other methods (which we have already tested above).\n   */\n  @Test\n  public void testReaderParentArray() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    tw.close();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    int[] parents = tr.getParallelTaxonomyArrays().parents();\n    assertEquals(tr.getSize(), parents.length);\n    for (int i=0; i<tr.getSize(); i++) {\n      assertEquals(tr.getParent(i), parents[i]);\n    }\n    tr.close();\n    indexDir.close();\n  }\n\n","sourceOld":"  /**  Tests TaxonomyReader's getParentArray() method. We do not test this\n    method directly, but rather just compare its results to those from\n    other methods (which we have already tested above).\n   */\n  @Test\n  public void testReaderParentArray() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    tw.close();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    int[] parents = tr.getParentArray();\n    assertEquals(tr.getSize(), parents.length);\n    for (int i=0; i<tr.getSize(); i++) {\n      assertEquals(tr.getParent(i), parents[i]);\n    }\n    tr.close();\n    indexDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testReaderParentArray().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testReaderParentArray().mjava","sourceNew":"  /**  Tests TaxonomyReader's getParentArray() method. We do not test this\n    method directly, but rather just compare its results to those from\n    other methods (which we have already tested above).\n   */\n  @Test\n  public void testReaderParentArray() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    tw.close();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    int[] parents = tr.getParallelTaxonomyArrays().parents();\n    assertEquals(tr.getSize(), parents.length);\n    for (int i=0; i<tr.getSize(); i++) {\n      assertEquals(tr.getParent(i), parents[i]);\n    }\n    tr.close();\n    indexDir.close();\n  }\n\n","sourceOld":"  /**  Tests TaxonomyReader's getParentArray() method. We do not test this\n    method directly, but rather just compare its results to those from\n    other methods (which we have already tested above).\n   */\n  @Test\n  public void testReaderParentArray() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    tw.close();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    int[] parents = tr.getParentArray();\n    assertEquals(tr.getSize(), parents.length);\n    for (int i=0; i<tr.getSize(); i++) {\n      assertEquals(tr.getParent(i), parents[i]);\n    }\n    tr.close();\n    indexDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29e1a91414f603bce5a59a5cb61fa8603997de87","date":1363597288,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testReaderParentArray().mjava","sourceNew":null,"sourceOld":"  /**  Tests TaxonomyReader's getParentArray() method. We do not test this\n    method directly, but rather just compare its results to those from\n    other methods (which we have already tested above).\n   */\n  @Test\n  public void testReaderParentArray() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    tw.close();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    int[] parents = tr.getParallelTaxonomyArrays().parents();\n    assertEquals(tr.getSize(), parents.length);\n    for (int i=0; i<tr.getSize(); i++) {\n      assertEquals(tr.getParent(i), parents[i]);\n    }\n    tr.close();\n    indexDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["b89678825b68eccaf09e6ab71675fc0b0af1e099","3d58d08788c3fd51172ba34474cca42499d6391b"],"3d58d08788c3fd51172ba34474cca42499d6391b":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"29e1a91414f603bce5a59a5cb61fa8603997de87":["3d58d08788c3fd51172ba34474cca42499d6391b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["29e1a91414f603bce5a59a5cb61fa8603997de87"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["407687e67faf6e1f02a211ca078d8e3eed631027","3d58d08788c3fd51172ba34474cca42499d6391b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"3d58d08788c3fd51172ba34474cca42499d6391b":["407687e67faf6e1f02a211ca078d8e3eed631027","29e1a91414f603bce5a59a5cb61fa8603997de87"],"29e1a91414f603bce5a59a5cb61fa8603997de87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}