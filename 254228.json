{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/IndexedDISICacheFactory#ramBytesUsed().mjava","commits":[{"id":"fb9d1512598fc72005b830d5e2b88e61a0f4b374","date":1543843391,"type":0,"author":"Toke Eskildsen","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/IndexedDISICacheFactory#ramBytesUsed().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public long ramBytesUsed() {\n    long mem = RamUsageEstimator.shallowSizeOf(this) +\n        RamUsageEstimator.shallowSizeOf(disiPool);\n    for (Map.Entry<Long, IndexedDISICache> cacheEntry: disiPool.entrySet()) {\n      mem += RamUsageEstimator.shallowSizeOf(cacheEntry);\n      mem += RamUsageEstimator.sizeOf(cacheEntry.getKey());\n      mem += cacheEntry.getValue().ramBytesUsed();\n    }\n    return mem;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"02d47321ea7c7780a0e0cb7a3676d109d9d62542","date":1543843794,"type":3,"author":"Toke Eskildsen","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/IndexedDISICacheFactory#ramBytesUsed().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/IndexedDISICacheFactory#ramBytesUsed().mjava","sourceNew":"  @Override\n  public long ramBytesUsed() {\n    long mem = RamUsageEstimator.shallowSizeOf(this) +\n        RamUsageEstimator.shallowSizeOf(disiPool) +\n        RamUsageEstimator.shallowSizeOf(vBPVPool);\n    for (Map.Entry<Long, IndexedDISICache> cacheEntry: disiPool.entrySet()) {\n      mem += RamUsageEstimator.shallowSizeOf(cacheEntry);\n      mem += RamUsageEstimator.sizeOf(cacheEntry.getKey());\n      mem += cacheEntry.getValue().ramBytesUsed();\n    }\n    for (Map.Entry<String, VaryingBPVJumpTable> cacheEntry: vBPVPool.entrySet()) {\n      String key = cacheEntry.getKey();\n      mem += RamUsageEstimator.shallowSizeOf(cacheEntry);\n      mem += RamUsageEstimator.shallowSizeOf(key)+key.length()*2;\n      mem += cacheEntry.getValue().ramBytesUsed();\n    }\n    return mem;\n  }\n\n","sourceOld":"  @Override\n  public long ramBytesUsed() {\n    long mem = RamUsageEstimator.shallowSizeOf(this) +\n        RamUsageEstimator.shallowSizeOf(disiPool);\n    for (Map.Entry<Long, IndexedDISICache> cacheEntry: disiPool.entrySet()) {\n      mem += RamUsageEstimator.shallowSizeOf(cacheEntry);\n      mem += RamUsageEstimator.sizeOf(cacheEntry.getKey());\n      mem += cacheEntry.getValue().ramBytesUsed();\n    }\n    return mem;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e86b9927b3acb1937be9daf7b71fe0733edc2206","date":1544534047,"type":3,"author":"Toke Eskildsen","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/IndexedDISICacheFactory#ramBytesUsed().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/IndexedDISICacheFactory#ramBytesUsed().mjava","sourceNew":"  @Override\n  public long ramBytesUsed() {\n    long mem = RamUsageEstimator.shallowSizeOf(this) +\n        RamUsageEstimator.shallowSizeOf(disiPool);\n    for (Map.Entry<Long, IndexedDISICache> cacheEntry: disiPool.entrySet()) {\n      mem += RamUsageEstimator.shallowSizeOf(cacheEntry);\n      mem += RamUsageEstimator.sizeOf(cacheEntry.getKey());\n      mem += cacheEntry.getValue().ramBytesUsed();\n    }\n    return mem;\n  }\n\n","sourceOld":"  @Override\n  public long ramBytesUsed() {\n    long mem = RamUsageEstimator.shallowSizeOf(this) +\n        RamUsageEstimator.shallowSizeOf(disiPool) +\n        RamUsageEstimator.shallowSizeOf(vBPVPool);\n    for (Map.Entry<Long, IndexedDISICache> cacheEntry: disiPool.entrySet()) {\n      mem += RamUsageEstimator.shallowSizeOf(cacheEntry);\n      mem += RamUsageEstimator.sizeOf(cacheEntry.getKey());\n      mem += cacheEntry.getValue().ramBytesUsed();\n    }\n    for (Map.Entry<String, VaryingBPVJumpTable> cacheEntry: vBPVPool.entrySet()) {\n      String key = cacheEntry.getKey();\n      mem += RamUsageEstimator.shallowSizeOf(cacheEntry);\n      mem += RamUsageEstimator.shallowSizeOf(key)+key.length()*2;\n      mem += cacheEntry.getValue().ramBytesUsed();\n    }\n    return mem;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c74cb19c6e988ccfef4286a1f3f0e5930f0863e","date":1544534277,"type":4,"author":"Toke Eskildsen","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/IndexedDISICacheFactory#ramBytesUsed().mjava","sourceNew":null,"sourceOld":"  @Override\n  public long ramBytesUsed() {\n    long mem = RamUsageEstimator.shallowSizeOf(this) +\n        RamUsageEstimator.shallowSizeOf(disiPool);\n    for (Map.Entry<Long, IndexedDISICache> cacheEntry: disiPool.entrySet()) {\n      mem += RamUsageEstimator.shallowSizeOf(cacheEntry);\n      mem += RamUsageEstimator.sizeOf(cacheEntry.getKey());\n      mem += cacheEntry.getValue().ramBytesUsed();\n    }\n    return mem;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cfd70c9571310639a77f0123aea0db41077d9bb6","date":1544538617,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/IndexedDISICacheFactory#ramBytesUsed().mjava","sourceNew":null,"sourceOld":"  @Override\n  public long ramBytesUsed() {\n    long mem = RamUsageEstimator.shallowSizeOf(this) +\n        RamUsageEstimator.shallowSizeOf(disiPool) +\n        RamUsageEstimator.shallowSizeOf(vBPVPool);\n    for (Map.Entry<Long, IndexedDISICache> cacheEntry: disiPool.entrySet()) {\n      mem += RamUsageEstimator.shallowSizeOf(cacheEntry);\n      mem += RamUsageEstimator.sizeOf(cacheEntry.getKey());\n      mem += cacheEntry.getValue().ramBytesUsed();\n    }\n    for (Map.Entry<String, VaryingBPVJumpTable> cacheEntry: vBPVPool.entrySet()) {\n      String key = cacheEntry.getKey();\n      mem += RamUsageEstimator.shallowSizeOf(cacheEntry);\n      mem += RamUsageEstimator.shallowSizeOf(key)+key.length()*2;\n      mem += cacheEntry.getValue().ramBytesUsed();\n    }\n    return mem;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cfd70c9571310639a77f0123aea0db41077d9bb6":["02d47321ea7c7780a0e0cb7a3676d109d9d62542","5c74cb19c6e988ccfef4286a1f3f0e5930f0863e"],"02d47321ea7c7780a0e0cb7a3676d109d9d62542":["fb9d1512598fc72005b830d5e2b88e61a0f4b374"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fb9d1512598fc72005b830d5e2b88e61a0f4b374":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5c74cb19c6e988ccfef4286a1f3f0e5930f0863e":["e86b9927b3acb1937be9daf7b71fe0733edc2206"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cfd70c9571310639a77f0123aea0db41077d9bb6"],"e86b9927b3acb1937be9daf7b71fe0733edc2206":["02d47321ea7c7780a0e0cb7a3676d109d9d62542"]},"commit2Childs":{"cfd70c9571310639a77f0123aea0db41077d9bb6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"02d47321ea7c7780a0e0cb7a3676d109d9d62542":["cfd70c9571310639a77f0123aea0db41077d9bb6","e86b9927b3acb1937be9daf7b71fe0733edc2206"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fb9d1512598fc72005b830d5e2b88e61a0f4b374"],"fb9d1512598fc72005b830d5e2b88e61a0f4b374":["02d47321ea7c7780a0e0cb7a3676d109d9d62542"],"5c74cb19c6e988ccfef4286a1f3f0e5930f0863e":["cfd70c9571310639a77f0123aea0db41077d9bb6"],"e86b9927b3acb1937be9daf7b71fe0733edc2206":["5c74cb19c6e988ccfef4286a1f3f0e5930f0863e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}