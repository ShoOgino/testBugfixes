{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.SimpleTVTermsEnum#seekCeil(BytesRef).mjava","commits":[{"id":"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8","date":1373996650,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.SimpleTVTermsEnum#seekCeil(BytesRef).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.SimpleTVTermsEnum#seekCeil(BytesRef,boolean).mjava","sourceNew":"    @Override\n    public SeekStatus seekCeil(BytesRef text) throws IOException {\n      iterator = terms.tailMap(text).entrySet().iterator();\n      if (!iterator.hasNext()) {\n        return SeekStatus.END;\n      } else {\n        return next().equals(text) ? SeekStatus.FOUND : SeekStatus.NOT_FOUND;\n      }\n    }\n\n","sourceOld":"    @Override\n    public SeekStatus seekCeil(BytesRef text, boolean useCache) throws IOException {\n      iterator = terms.tailMap(text).entrySet().iterator();\n      if (!iterator.hasNext()) {\n        return SeekStatus.END;\n      } else {\n        return next().equals(text) ? SeekStatus.FOUND : SeekStatus.NOT_FOUND;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":1,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.SimpleTVTermsEnum#seekCeil(BytesRef).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.SimpleTVTermsEnum#seekCeil(BytesRef,boolean).mjava","sourceNew":"    @Override\n    public SeekStatus seekCeil(BytesRef text) throws IOException {\n      iterator = terms.tailMap(text).entrySet().iterator();\n      if (!iterator.hasNext()) {\n        return SeekStatus.END;\n      } else {\n        return next().equals(text) ? SeekStatus.FOUND : SeekStatus.NOT_FOUND;\n      }\n    }\n\n","sourceOld":"    @Override\n    public SeekStatus seekCeil(BytesRef text, boolean useCache) throws IOException {\n      iterator = terms.tailMap(text).entrySet().iterator();\n      if (!iterator.hasNext()) {\n        return SeekStatus.END;\n      } else {\n        return next().equals(text) ? SeekStatus.FOUND : SeekStatus.NOT_FOUND;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["eee5f2a24465d2c9a5f86ab84b7c35041a30fda8"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","eee5f2a24465d2c9a5f86ab84b7c35041a30fda8"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}