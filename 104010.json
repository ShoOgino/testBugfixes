{"path":"src/java/org/apache/solr/search/QueryParsing.StrParser#getDouble().mjava","commits":[{"id":"aa4607364a2fc156ffb717ddc21d860e466ac7fd","date":1258218641,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/search/QueryParsing.StrParser#getDouble().mjava","pathOld":"/dev/null","sourceNew":"    double getDouble() throws ParseException {\n      eatws();\n      char[] arr = new char[end-pos];\n      int i;\n      for (i=0; i<arr.length; i++) {\n        char ch = val.charAt(pos);\n        if ( (ch>='0' && ch<='9')\n             || ch=='+' || ch=='-'\n             || ch=='.' || ch=='e' || ch=='E'\n        ) {\n          pos++;\n          arr[i]=ch;\n        } else {\n          break;\n        }\n      }\n\n      return Double.parseDouble(new String(arr,0,i));\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"32ef722831135736529762b4b97a13dd58b06f66","date":1260567610,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/search/QueryParsing.StrParser#getDouble().mjava","pathOld":"src/java/org/apache/solr/search/QueryParsing.StrParser#getDouble().mjava","sourceNew":"    double getDouble() throws ParseException {\n      eatws();\n      char[] arr = new char[end - pos];\n      int i;\n      for (i = 0; i < arr.length; i++) {\n        char ch = val.charAt(pos);\n        if ((ch >= '0' && ch <= '9')\n                || ch == '+' || ch == '-'\n                || ch == '.' || ch == 'e' || ch == 'E'\n                ) {\n          pos++;\n          arr[i] = ch;\n        } else {\n          break;\n        }\n      }\n\n      return Double.parseDouble(new String(arr, 0, i));\n    }\n\n","sourceOld":"    double getDouble() throws ParseException {\n      eatws();\n      char[] arr = new char[end-pos];\n      int i;\n      for (i=0; i<arr.length; i++) {\n        char ch = val.charAt(pos);\n        if ( (ch>='0' && ch<='9')\n             || ch=='+' || ch=='-'\n             || ch=='.' || ch=='e' || ch=='E'\n        ) {\n          pos++;\n          arr[i]=ch;\n        } else {\n          break;\n        }\n      }\n\n      return Double.parseDouble(new String(arr,0,i));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/QueryParsing.StrParser#getDouble().mjava","pathOld":"src/java/org/apache/solr/search/QueryParsing.StrParser#getDouble().mjava","sourceNew":"    double getDouble() throws ParseException {\n      eatws();\n      char[] arr = new char[end - pos];\n      int i;\n      for (i = 0; i < arr.length; i++) {\n        char ch = val.charAt(pos);\n        if ((ch >= '0' && ch <= '9')\n                || ch == '+' || ch == '-'\n                || ch == '.' || ch == 'e' || ch == 'E'\n                ) {\n          pos++;\n          arr[i] = ch;\n        } else {\n          break;\n        }\n      }\n\n      return Double.parseDouble(new String(arr, 0, i));\n    }\n\n","sourceOld":"    double getDouble() throws ParseException {\n      eatws();\n      char[] arr = new char[end - pos];\n      int i;\n      for (i = 0; i < arr.length; i++) {\n        char ch = val.charAt(pos);\n        if ((ch >= '0' && ch <= '9')\n                || ch == '+' || ch == '-'\n                || ch == '.' || ch == 'e' || ch == 'E'\n                ) {\n          pos++;\n          arr[i] = ch;\n        } else {\n          break;\n        }\n      }\n\n      return Double.parseDouble(new String(arr, 0, i));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"32ef722831135736529762b4b97a13dd58b06f66":["aa4607364a2fc156ffb717ddc21d860e466ac7fd"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["32ef722831135736529762b4b97a13dd58b06f66"],"aa4607364a2fc156ffb717ddc21d860e466ac7fd":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"32ef722831135736529762b4b97a13dd58b06f66":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["aa4607364a2fc156ffb717ddc21d860e466ac7fd"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"aa4607364a2fc156ffb717ddc21d860e466ac7fd":["32ef722831135736529762b4b97a13dd58b06f66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}