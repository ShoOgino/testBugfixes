{"path":"lucene/test-framework/src/java/org/apache/lucene/index/RandomPostingsTester#getSeedPostings(String,long,boolean,Bits,IndexOptions,boolean).mjava","commits":[{"id":"3e8715d826e588419327562287d5d6a8040d63d6","date":1427987148,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomPostingsTester#getSeedPostings(String,long,boolean,Bits,IndexOptions,boolean).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BasePostingsFormatTestCase#getSeedPostings(String,long,boolean,IndexOptions,boolean).mjava","sourceNew":"  public static SeedPostings getSeedPostings(String term, long seed, boolean withLiveDocs, Bits globalLiveDocs, IndexOptions options, boolean allowPayloads) {\n    int minDocFreq, maxDocFreq;\n    if (term.startsWith(\"big_\")) {\n      minDocFreq = LuceneTestCase.RANDOM_MULTIPLIER * 50000;\n      maxDocFreq = LuceneTestCase.RANDOM_MULTIPLIER * 70000;\n    } else if (term.startsWith(\"medium_\")) {\n      minDocFreq = LuceneTestCase.RANDOM_MULTIPLIER * 3000;\n      maxDocFreq = LuceneTestCase.RANDOM_MULTIPLIER * 6000;\n    } else if (term.startsWith(\"low_\")) {\n      minDocFreq = LuceneTestCase.RANDOM_MULTIPLIER;\n      maxDocFreq = LuceneTestCase.RANDOM_MULTIPLIER * 40;\n    } else {\n      minDocFreq = 1;\n      maxDocFreq = 3;\n    }\n\n    return new SeedPostings(seed, minDocFreq, maxDocFreq, withLiveDocs ? globalLiveDocs : null, options, allowPayloads);\n  }\n\n","sourceOld":"  private static SeedPostings getSeedPostings(String term, long seed, boolean withLiveDocs, IndexOptions options, boolean allowPayloads) {\n    int minDocFreq, maxDocFreq;\n    if (term.startsWith(\"big_\")) {\n      minDocFreq = RANDOM_MULTIPLIER * 50000;\n      maxDocFreq = RANDOM_MULTIPLIER * 70000;\n    } else if (term.startsWith(\"medium_\")) {\n      minDocFreq = RANDOM_MULTIPLIER * 3000;\n      maxDocFreq = RANDOM_MULTIPLIER * 6000;\n    } else if (term.startsWith(\"low_\")) {\n      minDocFreq = RANDOM_MULTIPLIER;\n      maxDocFreq = RANDOM_MULTIPLIER * 40;\n    } else {\n      minDocFreq = 1;\n      maxDocFreq = 3;\n    }\n\n    return new SeedPostings(seed, minDocFreq, maxDocFreq, withLiveDocs ? globalLiveDocs : null, options, allowPayloads);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2638f781be724518ff6c2263d14a48cf6e68017","date":1427989059,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomPostingsTester#getSeedPostings(String,long,boolean,Bits,IndexOptions,boolean).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BasePostingsFormatTestCase#getSeedPostings(String,long,boolean,IndexOptions,boolean).mjava","sourceNew":"  public static SeedPostings getSeedPostings(String term, long seed, boolean withLiveDocs, Bits globalLiveDocs, IndexOptions options, boolean allowPayloads) {\n    int minDocFreq, maxDocFreq;\n    if (term.startsWith(\"big_\")) {\n      minDocFreq = LuceneTestCase.RANDOM_MULTIPLIER * 50000;\n      maxDocFreq = LuceneTestCase.RANDOM_MULTIPLIER * 70000;\n    } else if (term.startsWith(\"medium_\")) {\n      minDocFreq = LuceneTestCase.RANDOM_MULTIPLIER * 3000;\n      maxDocFreq = LuceneTestCase.RANDOM_MULTIPLIER * 6000;\n    } else if (term.startsWith(\"low_\")) {\n      minDocFreq = LuceneTestCase.RANDOM_MULTIPLIER;\n      maxDocFreq = LuceneTestCase.RANDOM_MULTIPLIER * 40;\n    } else {\n      minDocFreq = 1;\n      maxDocFreq = 3;\n    }\n\n    return new SeedPostings(seed, minDocFreq, maxDocFreq, withLiveDocs ? globalLiveDocs : null, options, allowPayloads);\n  }\n\n","sourceOld":"  private static SeedPostings getSeedPostings(String term, long seed, boolean withLiveDocs, IndexOptions options, boolean allowPayloads) {\n    int minDocFreq, maxDocFreq;\n    if (term.startsWith(\"big_\")) {\n      minDocFreq = RANDOM_MULTIPLIER * 50000;\n      maxDocFreq = RANDOM_MULTIPLIER * 70000;\n    } else if (term.startsWith(\"medium_\")) {\n      minDocFreq = RANDOM_MULTIPLIER * 3000;\n      maxDocFreq = RANDOM_MULTIPLIER * 6000;\n    } else if (term.startsWith(\"low_\")) {\n      minDocFreq = RANDOM_MULTIPLIER;\n      maxDocFreq = RANDOM_MULTIPLIER * 40;\n    } else {\n      minDocFreq = 1;\n      maxDocFreq = 3;\n    }\n\n    return new SeedPostings(seed, minDocFreq, maxDocFreq, withLiveDocs ? globalLiveDocs : null, options, allowPayloads);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomPostingsTester#getSeedPostings(String,long,IndexOptions,boolean).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/RandomPostingsTester#getSeedPostings(String,long,boolean,Bits,IndexOptions,boolean).mjava","sourceNew":"  public static SeedPostings getSeedPostings(String term, long seed, IndexOptions options, boolean allowPayloads) {\n    int minDocFreq, maxDocFreq;\n    if (term.startsWith(\"big_\")) {\n      minDocFreq = LuceneTestCase.RANDOM_MULTIPLIER * 50000;\n      maxDocFreq = LuceneTestCase.RANDOM_MULTIPLIER * 70000;\n    } else if (term.startsWith(\"medium_\")) {\n      minDocFreq = LuceneTestCase.RANDOM_MULTIPLIER * 3000;\n      maxDocFreq = LuceneTestCase.RANDOM_MULTIPLIER * 6000;\n    } else if (term.startsWith(\"low_\")) {\n      minDocFreq = LuceneTestCase.RANDOM_MULTIPLIER;\n      maxDocFreq = LuceneTestCase.RANDOM_MULTIPLIER * 40;\n    } else {\n      minDocFreq = 1;\n      maxDocFreq = 3;\n    }\n\n    return new SeedPostings(seed, minDocFreq, maxDocFreq, options, allowPayloads);\n  }\n\n","sourceOld":"  public static SeedPostings getSeedPostings(String term, long seed, boolean withLiveDocs, Bits globalLiveDocs, IndexOptions options, boolean allowPayloads) {\n    int minDocFreq, maxDocFreq;\n    if (term.startsWith(\"big_\")) {\n      minDocFreq = LuceneTestCase.RANDOM_MULTIPLIER * 50000;\n      maxDocFreq = LuceneTestCase.RANDOM_MULTIPLIER * 70000;\n    } else if (term.startsWith(\"medium_\")) {\n      minDocFreq = LuceneTestCase.RANDOM_MULTIPLIER * 3000;\n      maxDocFreq = LuceneTestCase.RANDOM_MULTIPLIER * 6000;\n    } else if (term.startsWith(\"low_\")) {\n      minDocFreq = LuceneTestCase.RANDOM_MULTIPLIER;\n      maxDocFreq = LuceneTestCase.RANDOM_MULTIPLIER * 40;\n    } else {\n      minDocFreq = 1;\n      maxDocFreq = 3;\n    }\n\n    return new SeedPostings(seed, minDocFreq, maxDocFreq, withLiveDocs ? globalLiveDocs : null, options, allowPayloads);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["3e8715d826e588419327562287d5d6a8040d63d6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d2638f781be724518ff6c2263d14a48cf6e68017":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3e8715d826e588419327562287d5d6a8040d63d6"],"3e8715d826e588419327562287d5d6a8040d63d6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f4464508ee83288c8c4585b533f9faaa93aa314"]},"commit2Childs":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d2638f781be724518ff6c2263d14a48cf6e68017","3e8715d826e588419327562287d5d6a8040d63d6"],"d2638f781be724518ff6c2263d14a48cf6e68017":[],"3e8715d826e588419327562287d5d6a8040d63d6":["0f4464508ee83288c8c4585b533f9faaa93aa314","d2638f781be724518ff6c2263d14a48cf6e68017"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d2638f781be724518ff6c2263d14a48cf6e68017","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}