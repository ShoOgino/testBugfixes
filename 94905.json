{"path":"solr/core/src/java/org/apache/solr/filestore/DistribPackageStore#get(String,Consumer[FileEntry],boolean).mjava","commits":[{"id":"849dbf8570155b8e5fd03d8c2274a0a60491051c","date":1570859954,"type":1,"author":"noble","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/filestore/DistribPackageStore#get(String,Consumer[FileEntry],boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/filestore/DistribPackageStore#get(String,Consumer[FileEntry]).mjava","sourceNew":"  @Override\n  public void get(String path, Consumer<FileEntry> consumer, boolean fetchmissing) throws IOException {\n    File file = getRealpath(path).toFile();\n    String simpleName = file.getName();\n    if (isMetaDataFile(simpleName)) {\n      try (InputStream is = new FileInputStream(file)) {\n        consumer.accept(new FileEntry(null, null, path) {\n          //no metadata for metadata file\n          @Override\n          public InputStream getInputStream() {\n            return is;\n          }\n        });\n      }\n      return;\n    }\n\n    new FileInfo(path).readData(consumer);\n  }\n\n","sourceOld":"  @Override\n  public synchronized void get(String path, Consumer<FileEntry> consumer) throws IOException {\n    File file = getRealpath(path).toFile();\n    String simpleName = file.getName();\n    if (isMetaDataFile(simpleName)) {\n      try (InputStream is = new FileInputStream(file)) {\n        consumer.accept(new FileEntry(null, null, path) {\n          //no metadata for metadata file\n          @Override\n          public InputStream getInputStream() {\n            return is;\n          }\n        });\n      }\n      return;\n    }\n\n    new FileInfo(path).readData(consumer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":0,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/filestore/DistribPackageStore#get(String,Consumer[FileEntry],boolean).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void get(String path, Consumer<FileEntry> consumer, boolean fetchmissing) throws IOException {\n    File file = getRealpath(path).toFile();\n    String simpleName = file.getName();\n    if (isMetaDataFile(simpleName)) {\n      try (InputStream is = new FileInputStream(file)) {\n        consumer.accept(new FileEntry(null, null, path) {\n          //no metadata for metadata file\n          @Override\n          public InputStream getInputStream() {\n            return is;\n          }\n        });\n      }\n      return;\n    }\n\n    new FileInfo(path).readData(consumer);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"849dbf8570155b8e5fd03d8c2274a0a60491051c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["849dbf8570155b8e5fd03d8c2274a0a60491051c"],"b0b597c65628ca9e73913a07e81691f8229bae35":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","849dbf8570155b8e5fd03d8c2274a0a60491051c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["849dbf8570155b8e5fd03d8c2274a0a60491051c","b0b597c65628ca9e73913a07e81691f8229bae35"],"849dbf8570155b8e5fd03d8c2274a0a60491051c":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}