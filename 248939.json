{"path":"src/java/org/apache/lucene/analysis/Token#equals(Object).mjava","commits":[{"id":"7e2cb543b41c145f33390f460ee743d6693c9c6c","date":1219243087,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/Token#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"  public boolean equals(Object obj) {\n    if (obj == this)\n      return true;\n\n    if (obj instanceof Token) {\n      Token other = (Token) obj;\n\n      initTermBuffer();\n      other.initTermBuffer();\n      \n      if (termLength == other.termLength &&\n          startOffset == other.startOffset &&\n          endOffset == other.endOffset && \n          flags == other.flags &&\n          positionIncrement == other.positionIncrement &&\n          subEqual(type, other.type) &&\n          subEqual(payload, other.payload)) {\n        for(int i=0;i<termLength;i++)\n          if (termBuffer[i] != other.termBuffer[i])\n            return false;\n        return true;\n      } else\n        return false;\n    } else\n      return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/Token#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/analysis/Token#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object obj) {\n    if (obj == this)\n      return true;\n\n    if (obj instanceof Token) {\n      Token other = (Token) obj;\n\n      initTermBuffer();\n      other.initTermBuffer();\n      \n      if (termLength == other.termLength &&\n          startOffset == other.startOffset &&\n          endOffset == other.endOffset && \n          flags == other.flags &&\n          positionIncrement == other.positionIncrement &&\n          subEqual(type, other.type) &&\n          subEqual(payload, other.payload)) {\n        for(int i=0;i<termLength;i++)\n          if (termBuffer[i] != other.termBuffer[i])\n            return false;\n        return true;\n      } else\n        return false;\n    } else\n      return false;\n  }\n\n","sourceOld":"  public boolean equals(Object obj) {\n    if (obj == this)\n      return true;\n\n    if (obj instanceof Token) {\n      Token other = (Token) obj;\n\n      initTermBuffer();\n      other.initTermBuffer();\n      \n      if (termLength == other.termLength &&\n          startOffset == other.startOffset &&\n          endOffset == other.endOffset && \n          flags == other.flags &&\n          positionIncrement == other.positionIncrement &&\n          subEqual(type, other.type) &&\n          subEqual(payload, other.payload)) {\n        for(int i=0;i<termLength;i++)\n          if (termBuffer[i] != other.termBuffer[i])\n            return false;\n        return true;\n      } else\n        return false;\n    } else\n      return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66dab5a56cf3f9a3724b15a119a30fd77cbcb662","date":1268038828,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/Token#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/analysis/Token#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object obj) {\n    if (obj == this)\n      return true;\n\n    if (obj instanceof Token) {\n      final Token other = (Token) obj;\n      return (startOffset == other.startOffset &&\n          endOffset == other.endOffset && \n          flags == other.flags &&\n          positionIncrement == other.positionIncrement &&\n          (type == null ? other.type == null : type.equals(other.type)) &&\n          (payload == null ? other.payload == null : payload.equals(other.payload)) &&\n          super.equals(obj)\n      );\n    } else\n      return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (obj == this)\n      return true;\n\n    if (obj instanceof Token) {\n      Token other = (Token) obj;\n\n      initTermBuffer();\n      other.initTermBuffer();\n      \n      if (termLength == other.termLength &&\n          startOffset == other.startOffset &&\n          endOffset == other.endOffset && \n          flags == other.flags &&\n          positionIncrement == other.positionIncrement &&\n          subEqual(type, other.type) &&\n          subEqual(payload, other.payload)) {\n        for(int i=0;i<termLength;i++)\n          if (termBuffer[i] != other.termBuffer[i])\n            return false;\n        return true;\n      } else\n        return false;\n    } else\n      return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/Token#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/analysis/Token#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object obj) {\n    if (obj == this)\n      return true;\n\n    if (obj instanceof Token) {\n      final Token other = (Token) obj;\n      return (startOffset == other.startOffset &&\n          endOffset == other.endOffset && \n          flags == other.flags &&\n          positionIncrement == other.positionIncrement &&\n          (type == null ? other.type == null : type.equals(other.type)) &&\n          (payload == null ? other.payload == null : payload.equals(other.payload)) &&\n          super.equals(obj)\n      );\n    } else\n      return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (obj == this)\n      return true;\n\n    if (obj instanceof Token) {\n      final Token other = (Token) obj;\n      return (startOffset == other.startOffset &&\n          endOffset == other.endOffset && \n          flags == other.flags &&\n          positionIncrement == other.positionIncrement &&\n          (type == null ? other.type == null : type.equals(other.type)) &&\n          (payload == null ? other.payload == null : payload.equals(other.payload)) &&\n          super.equals(obj)\n      );\n    } else\n      return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8a9e385641d717e641408d8fbbc62be8fc766357":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"66dab5a56cf3f9a3724b15a119a30fd77cbcb662":["8a9e385641d717e641408d8fbbc62be8fc766357"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["66dab5a56cf3f9a3724b15a119a30fd77cbcb662"]},"commit2Childs":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["8a9e385641d717e641408d8fbbc62be8fc766357"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"8a9e385641d717e641408d8fbbc62be8fc766357":["66dab5a56cf3f9a3724b15a119a30fd77cbcb662"],"66dab5a56cf3f9a3724b15a119a30fd77cbcb662":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}