{"path":"solr/core/src/test/org/apache/solr/search/TestSolrCoreParser#testApacheLuceneSolr().mjava","commits":[{"id":"ea044716a20bca6a9e1bc4121a7a28454dc0896b","date":1483967143,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrCoreParser#testApacheLuceneSolr().mjava","pathOld":"/dev/null","sourceNew":"  public void testApacheLuceneSolr() throws IOException, ParserException {\n    final String fieldName = \"contents\";\n    final Query query = parseXmlString(\"<ApacheLuceneSolr fieldName='\"+fieldName+\"'/>\");\n    assertTrue(query instanceof SpanNearQuery);\n    final SpanNearQuery snq = (SpanNearQuery)query;\n    assertEquals(fieldName, snq.getField());\n    assertEquals(42, snq.getSlop());\n    assertFalse(snq.isInOrder());\n    assertEquals(3, snq.getClauses().length);\n    assertTrue(snq.getClauses()[0] instanceof SpanTermQuery);\n    assertTrue(snq.getClauses()[1] instanceof SpanTermQuery);\n    assertTrue(snq.getClauses()[2] instanceof SpanTermQuery);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrCoreParser#testApacheLuceneSolr().mjava","pathOld":"/dev/null","sourceNew":"  public void testApacheLuceneSolr() throws IOException, ParserException {\n    final String fieldName = \"contents\";\n    final Query query = parseXmlString(\"<ApacheLuceneSolr fieldName='\"+fieldName+\"'/>\");\n    assertTrue(query instanceof SpanNearQuery);\n    final SpanNearQuery snq = (SpanNearQuery)query;\n    assertEquals(fieldName, snq.getField());\n    assertEquals(42, snq.getSlop());\n    assertFalse(snq.isInOrder());\n    assertEquals(3, snq.getClauses().length);\n    assertTrue(snq.getClauses()[0] instanceof SpanTermQuery);\n    assertTrue(snq.getClauses()[1] instanceof SpanTermQuery);\n    assertTrue(snq.getClauses()[2] instanceof SpanTermQuery);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8adbe9599e1f40415314d303714aa799ccedcbfa","date":1485884320,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrCoreParser#testApacheLuceneSolr().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolrCoreParser#testApacheLuceneSolr().mjava","sourceNew":"  public void testApacheLuceneSolr() throws IOException, ParserException {\n    final String fieldName = \"contents\";\n    final Query query = parseXmlString(\"<ApacheLuceneSolr fieldName='\"+fieldName+\"'/>\");\n    checkApacheLuceneSolr(query, fieldName);\n  }\n\n","sourceOld":"  public void testApacheLuceneSolr() throws IOException, ParserException {\n    final String fieldName = \"contents\";\n    final Query query = parseXmlString(\"<ApacheLuceneSolr fieldName='\"+fieldName+\"'/>\");\n    assertTrue(query instanceof SpanNearQuery);\n    final SpanNearQuery snq = (SpanNearQuery)query;\n    assertEquals(fieldName, snq.getField());\n    assertEquals(42, snq.getSlop());\n    assertFalse(snq.isInOrder());\n    assertEquals(3, snq.getClauses().length);\n    assertTrue(snq.getClauses()[0] instanceof SpanTermQuery);\n    assertTrue(snq.getClauses()[1] instanceof SpanTermQuery);\n    assertTrue(snq.getClauses()[2] instanceof SpanTermQuery);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c3523a0ab04c3002eee3896c75ea5f10f388bcc","date":1485968422,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrCoreParser#testApacheLuceneSolr().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolrCoreParser#testApacheLuceneSolr().mjava","sourceNew":"  public void testApacheLuceneSolr() throws IOException, ParserException {\n    final String fieldName = \"contents\";\n    final Query query = parseXmlString(\"<ApacheLuceneSolr fieldName='\"+fieldName+\"'/>\");\n    checkApacheLuceneSolr(query, fieldName);\n  }\n\n","sourceOld":"  public void testApacheLuceneSolr() throws IOException, ParserException {\n    final String fieldName = \"contents\";\n    final Query query = parseXmlString(\"<ApacheLuceneSolr fieldName='\"+fieldName+\"'/>\");\n    assertTrue(query instanceof SpanNearQuery);\n    final SpanNearQuery snq = (SpanNearQuery)query;\n    assertEquals(fieldName, snq.getField());\n    assertEquals(42, snq.getSlop());\n    assertFalse(snq.isInOrder());\n    assertEquals(3, snq.getClauses().length);\n    assertTrue(snq.getClauses()[0] instanceof SpanTermQuery);\n    assertTrue(snq.getClauses()[1] instanceof SpanTermQuery);\n    assertTrue(snq.getClauses()[2] instanceof SpanTermQuery);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8adbe9599e1f40415314d303714aa799ccedcbfa":["ea044716a20bca6a9e1bc4121a7a28454dc0896b"],"ea044716a20bca6a9e1bc4121a7a28454dc0896b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","8adbe9599e1f40415314d303714aa799ccedcbfa"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ea044716a20bca6a9e1bc4121a7a28454dc0896b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8adbe9599e1f40415314d303714aa799ccedcbfa"]},"commit2Childs":{"8adbe9599e1f40415314d303714aa799ccedcbfa":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ea044716a20bca6a9e1bc4121a7a28454dc0896b":["8adbe9599e1f40415314d303714aa799ccedcbfa","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ea044716a20bca6a9e1bc4121a7a28454dc0896b","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":[],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}