{"path":"solr/core/src/java/org/apache/solr/analysis/KeepWordFilterFactory#inform(ResourceLoader).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/analysis/KeepWordFilterFactory#inform(ResourceLoader).mjava","pathOld":"solr/src/java/org/apache/solr/analysis/KeepWordFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  public void inform(ResourceLoader loader) {\n    String wordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\", false);\n    enablePositionIncrements = getBoolean(\"enablePositionIncrements\",false);\n\n    if (wordFiles != null) {\n      try {\n        words = getWordSet(loader, wordFiles, ignoreCase);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) {\n    String wordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\", false);\n    enablePositionIncrements = getBoolean(\"enablePositionIncrements\",false);\n\n    if (wordFiles != null) {\n      try {\n        words = getWordSet(loader, wordFiles, ignoreCase);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/analysis/KeepWordFilterFactory#inform(ResourceLoader).mjava","pathOld":"solr/src/java/org/apache/solr/analysis/KeepWordFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  public void inform(ResourceLoader loader) {\n    String wordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\", false);\n    enablePositionIncrements = getBoolean(\"enablePositionIncrements\",false);\n\n    if (wordFiles != null) {\n      try {\n        words = getWordSet(loader, wordFiles, ignoreCase);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) {\n    String wordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\", false);\n    enablePositionIncrements = getBoolean(\"enablePositionIncrements\",false);\n\n    if (wordFiles != null) {\n      try {\n        words = getWordSet(loader, wordFiles, ignoreCase);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/analysis/KeepWordFilterFactory#inform(ResourceLoader).mjava","pathOld":"solr/src/java/org/apache/solr/analysis/KeepWordFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  public void inform(ResourceLoader loader) {\n    String wordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\", false);\n    enablePositionIncrements = getBoolean(\"enablePositionIncrements\",false);\n\n    if (wordFiles != null) {\n      try {\n        words = getWordSet(loader, wordFiles, ignoreCase);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) {\n    String wordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\", false);\n    enablePositionIncrements = getBoolean(\"enablePositionIncrements\",false);\n\n    if (wordFiles != null) {\n      try {\n        words = getWordSet(loader, wordFiles, ignoreCase);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"39d25aba1848c644c6d22b943d3d66f661445ac7","date":1335238294,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/analysis/KeepWordFilterFactory#inform(ResourceLoader).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/KeepWordFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  public void inform(ResourceLoader loader) {\n    String wordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\", false);\n    enablePositionIncrements = getBoolean(\"enablePositionIncrements\",false);\n\n    if (wordFiles != null) {\n      try {\n        words = getWordSet(loader, wordFiles, ignoreCase);\n      } catch (IOException e) {\n        throw new InitializationException(\"IOException thrown while loading words\", e);\n      }\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) {\n    String wordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\", false);\n    enablePositionIncrements = getBoolean(\"enablePositionIncrements\",false);\n\n    if (wordFiles != null) {\n      try {\n        words = getWordSet(loader, wordFiles, ignoreCase);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3241e06e642196396b80bb293acd9c0814d079e0","date":1343094999,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/KeepWordFilterFactory#inform(ResourceLoader).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/KeepWordFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  public void inform(ResourceLoader loader) {\n    String wordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\", false);\n    enablePositionIncrements = getBoolean(\"enablePositionIncrements\",false);\n\n    if (wordFiles != null) {\n      try {\n        words = getWordSet(loader, wordFiles, ignoreCase);\n      } catch (IOException e) {\n        throw new InitializationException(\"IOException thrown while loading words\", e);\n      }\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) {\n    String wordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\", false);\n    enablePositionIncrements = getBoolean(\"enablePositionIncrements\",false);\n\n    if (wordFiles != null) {\n      try {\n        words = getWordSet(loader, wordFiles, ignoreCase);\n      } catch (IOException e) {\n        throw new InitializationException(\"IOException thrown while loading words\", e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a1a22b1ad88b436661458df567f3fdb446392a4","date":1343224444,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/KeepWordFilterFactory#inform(ResourceLoader).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/KeepWordFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  public void inform(ResourceLoader loader) {\n    String wordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\", false);\n    enablePositionIncrements = getBoolean(\"enablePositionIncrements\",false);\n\n    if (wordFiles != null) {\n      try {\n        words = getWordSet(loader, wordFiles, ignoreCase);\n      } catch (IOException e) {\n        throw new InitializationException(\"IOException thrown while loading words\", e);\n      }\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) {\n    String wordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\", false);\n    enablePositionIncrements = getBoolean(\"enablePositionIncrements\",false);\n\n    if (wordFiles != null) {\n      try {\n        words = getWordSet(loader, wordFiles, ignoreCase);\n      } catch (IOException e) {\n        throw new InitializationException(\"IOException thrown while loading words\", e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/analysis/KeepWordFilterFactory#inform(ResourceLoader).mjava","sourceNew":null,"sourceOld":"  public void inform(ResourceLoader loader) {\n    String wordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\", false);\n    enablePositionIncrements = getBoolean(\"enablePositionIncrements\",false);\n\n    if (wordFiles != null) {\n      try {\n        words = getWordSet(loader, wordFiles, ignoreCase);\n      } catch (IOException e) {\n        throw new InitializationException(\"IOException thrown while loading words\", e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/analysis/KeepWordFilterFactory#inform(ResourceLoader).mjava","sourceNew":null,"sourceOld":"  public void inform(ResourceLoader loader) {\n    String wordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\", false);\n    enablePositionIncrements = getBoolean(\"enablePositionIncrements\",false);\n\n    if (wordFiles != null) {\n      try {\n        words = getWordSet(loader, wordFiles, ignoreCase);\n      } catch (IOException e) {\n        throw new InitializationException(\"IOException thrown while loading words\", e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aba371508186796cc6151d8223a5b4e16d02e26e":["39d25aba1848c644c6d22b943d3d66f661445ac7","5a1a22b1ad88b436661458df567f3fdb446392a4"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["39d25aba1848c644c6d22b943d3d66f661445ac7","5a1a22b1ad88b436661458df567f3fdb446392a4"],"39d25aba1848c644c6d22b943d3d66f661445ac7":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["39d25aba1848c644c6d22b943d3d66f661445ac7","3241e06e642196396b80bb293acd9c0814d079e0"],"3241e06e642196396b80bb293acd9c0814d079e0":["39d25aba1848c644c6d22b943d3d66f661445ac7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5a1a22b1ad88b436661458df567f3fdb446392a4"]},"commit2Childs":{"aba371508186796cc6151d8223a5b4e16d02e26e":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["39d25aba1848c644c6d22b943d3d66f661445ac7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"39d25aba1848c644c6d22b943d3d66f661445ac7":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","5a1a22b1ad88b436661458df567f3fdb446392a4","3241e06e642196396b80bb293acd9c0814d079e0"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"5a1a22b1ad88b436661458df567f3fdb446392a4":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3241e06e642196396b80bb293acd9c0814d079e0":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}