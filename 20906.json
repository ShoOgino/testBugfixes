{"path":"lucene/core/src/java/org/apache/lucene/index/PointValues#intersect(String,IntersectVisitor).mjava","commits":[{"id":"cab7a79353f33d1a94cd307bf33aa5148601ebe6","date":1453391888,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PointValues#intersect(String,IntersectVisitor).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DimensionalValues#intersect(String,IntersectVisitor).mjava","sourceNew":"  /** Finds all documents and points matching the provided visitor.\n   *  This method does not enforce live docs, so it's up to the caller\n   *  to test whether each document is deleted, if necessary. */\n  public abstract void intersect(String fieldName, IntersectVisitor visitor) throws IOException;\n\n","sourceOld":"  /** Finds all documents and points matching the provided visitor.\n   *  This method does not enforce live docs, so it's up to the caller\n   *  to test whether each document is deleted, if necessary. */\n  public abstract void intersect(String fieldName, IntersectVisitor visitor) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62339417213032946b38beec9a9f355681c24fa6","date":1455981009,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PointValues#intersect(String,IntersectVisitor).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PointValues#intersect(String,IntersectVisitor).mjava","sourceNew":"  /** Finds all documents and points matching the provided visitor.\n   *  This method does not enforce live documents, so it's up to the caller\n   *  to test whether each document is deleted, if necessary. */\n  public abstract void intersect(String fieldName, IntersectVisitor visitor) throws IOException;\n\n","sourceOld":"  /** Finds all documents and points matching the provided visitor.\n   *  This method does not enforce live docs, so it's up to the caller\n   *  to test whether each document is deleted, if necessary. */\n  public abstract void intersect(String fieldName, IntersectVisitor visitor) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"367f57e2ee85b7f7e28cfe73370a22cf67624f65","date":1476778467,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PointValues#intersect(IntersectVisitor).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PointValues#intersect(String,IntersectVisitor).mjava","sourceNew":"  /** Finds all documents and points matching the provided visitor.\n   *  This method does not enforce live documents, so it's up to the caller\n   *  to test whether each document is deleted, if necessary. */\n  public abstract void intersect(IntersectVisitor visitor) throws IOException;\n\n","sourceOld":"  /** Finds all documents and points matching the provided visitor.\n   *  This method does not enforce live documents, so it's up to the caller\n   *  to test whether each document is deleted, if necessary. */\n  public abstract void intersect(String fieldName, IntersectVisitor visitor) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/PointValues#intersect(String,IntersectVisitor).mjava","sourceNew":null,"sourceOld":"  /** Finds all documents and points matching the provided visitor.\n   *  This method does not enforce live documents, so it's up to the caller\n   *  to test whether each document is deleted, if necessary. */\n  public abstract void intersect(String fieldName, IntersectVisitor visitor) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"62339417213032946b38beec9a9f355681c24fa6":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"367f57e2ee85b7f7e28cfe73370a22cf67624f65":["62339417213032946b38beec9a9f355681c24fa6"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["62339417213032946b38beec9a9f355681c24fa6","367f57e2ee85b7f7e28cfe73370a22cf67624f65"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["367f57e2ee85b7f7e28cfe73370a22cf67624f65"]},"commit2Childs":{"62339417213032946b38beec9a9f355681c24fa6":["367f57e2ee85b7f7e28cfe73370a22cf67624f65","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["62339417213032946b38beec9a9f355681c24fa6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"367f57e2ee85b7f7e28cfe73370a22cf67624f65":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}