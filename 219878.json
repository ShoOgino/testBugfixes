{"path":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntFieldValueCollector#finish().mjava","commits":[{"id":"8ced52befdc8d88d90766aadbaac496f3fd0e4ee","date":1421070034,"type":1,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntFieldValueCollector#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingFieldValueCollector#finish().mjava","sourceNew":"    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n      this.collapseValues = contexts[currentContext].reader().getNumericDocValues(this.collapseField);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapseStrategy.getCollapsedSet(), 0); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      IntLongOpenHashMap cmap = collapseStrategy.getCollapseMap();\n      LongArrayList docScores = collapseStrategy.getDocScores();\n      FloatArrayList nullScores = collapseStrategy.getNullScores();\n      MergeBoost mergeBoost = collapseStrategy.getMergeBoost();\n      float nullScore = collapseStrategy.getNullScore();\n\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          this.collapseValues = contexts[currentContext].reader().getNumericDocValues(this.collapseField);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n\n        if(this.needsScores){\n          int collapseValue = (int)collapseValues.get(contextDoc);\n          if(collapseValue != nullValue) {\n            long pointerValue = cmap.get(collapseValue);\n            //Unpack the pointer\n            int pointer = (int)(pointerValue>>32);\n            long docScore = docScores.get(pointer);\n            //Unpack the score\n            dummy.score = Float.intBitsToFloat(((int)docScore));\n          } else if (mergeBoost != null && mergeBoost.boost(globalDoc)) {\n            //Its an elevated doc so no score is needed\n            dummy.score = 0F;\n          } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n            dummy.score = nullScore;\n          } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n            dummy.score = nullScores.get(nullScoreIndex++);\n          }\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","sourceOld":"    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(fieldValueCollapse.getCollapsedSet(), 0); // cost is not useful here\n      int docId = -1;\n      int nullScoreIndex = 0;\n      float[] scores = fieldValueCollapse.getScores();\n      FloatArrayList nullScores = fieldValueCollapse.getNullScores();\n      float nullScore = fieldValueCollapse.getNullScore();\n      while((docId = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        if(this.needsScores){\n          int ord = values.getOrd(docId);\n          if(ord > -1) {\n            dummy.score = scores[ord];\n          } else if (boostDocs != null && boostDocs.containsKey(docId)) {\n            //It's an elevated doc so no score is needed\n            dummy.score = 0F;\n          } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n            dummy.score = nullScore;\n          } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n            dummy.score = nullScores.get(nullScoreIndex++);\n          }\n        }\n\n        while(docId >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n        }\n\n        int contextDoc = docId-currentDocBase;\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a9c4a5022409b649909f75244642a57739b3598","date":1422812185,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntFieldValueCollector#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntFieldValueCollector#finish().mjava","sourceNew":"    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n      this.collapseValues = contexts[currentContext].reader().getNumericDocValues(this.collapseField);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapseStrategy.getCollapsedSet(), 0); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      IntIntOpenHashMap cmap = collapseStrategy.getCollapseMap();\n      int[] docs = collapseStrategy.getDocs();\n      float[] scores = collapseStrategy.getScores();\n      FloatArrayList nullScores = collapseStrategy.getNullScores();\n      MergeBoost mergeBoost = collapseStrategy.getMergeBoost();\n      float nullScore = collapseStrategy.getNullScore();\n\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          this.collapseValues = contexts[currentContext].reader().getNumericDocValues(this.collapseField);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n\n        if(this.needsScores){\n          int collapseValue = (int)collapseValues.get(contextDoc);\n          if(collapseValue != nullValue) {\n            int pointer = cmap.get(collapseValue);\n            dummy.score = scores[pointer];\n          } else if (mergeBoost != null && mergeBoost.boost(globalDoc)) {\n            //Its an elevated doc so no score is needed\n            dummy.score = 0F;\n          } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n            dummy.score = nullScore;\n          } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n            dummy.score = nullScores.get(nullScoreIndex++);\n          }\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","sourceOld":"    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n      this.collapseValues = contexts[currentContext].reader().getNumericDocValues(this.collapseField);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapseStrategy.getCollapsedSet(), 0); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      IntLongOpenHashMap cmap = collapseStrategy.getCollapseMap();\n      LongArrayList docScores = collapseStrategy.getDocScores();\n      FloatArrayList nullScores = collapseStrategy.getNullScores();\n      MergeBoost mergeBoost = collapseStrategy.getMergeBoost();\n      float nullScore = collapseStrategy.getNullScore();\n\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          this.collapseValues = contexts[currentContext].reader().getNumericDocValues(this.collapseField);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n\n        if(this.needsScores){\n          int collapseValue = (int)collapseValues.get(contextDoc);\n          if(collapseValue != nullValue) {\n            long pointerValue = cmap.get(collapseValue);\n            //Unpack the pointer\n            int pointer = (int)(pointerValue>>32);\n            long docScore = docScores.get(pointer);\n            //Unpack the score\n            dummy.score = Float.intBitsToFloat(((int)docScore));\n          } else if (mergeBoost != null && mergeBoost.boost(globalDoc)) {\n            //Its an elevated doc so no score is needed\n            dummy.score = 0F;\n          } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n            dummy.score = nullScore;\n          } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n            dummy.score = nullScores.get(nullScoreIndex++);\n          }\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87","date":1440409984,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntFieldValueCollector#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntFieldValueCollector#finish().mjava","sourceNew":"    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n      this.collapseValues = contexts[currentContext].reader().getNumericDocValues(this.collapseField);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapseStrategy.getCollapsedSet(), 0); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      IntIntHashMap cmap = collapseStrategy.getCollapseMap();\n      int[] docs = collapseStrategy.getDocs();\n      float[] scores = collapseStrategy.getScores();\n      FloatArrayList nullScores = collapseStrategy.getNullScores();\n      MergeBoost mergeBoost = collapseStrategy.getMergeBoost();\n      float nullScore = collapseStrategy.getNullScore();\n\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          this.collapseValues = contexts[currentContext].reader().getNumericDocValues(this.collapseField);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n\n        if(this.needsScores){\n          int collapseValue = (int)collapseValues.get(contextDoc);\n          if(collapseValue != nullValue) {\n            int pointer = cmap.get(collapseValue);\n            dummy.score = scores[pointer];\n          } else if (mergeBoost != null && mergeBoost.boost(globalDoc)) {\n            //Its an elevated doc so no score is needed\n            dummy.score = 0F;\n          } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n            dummy.score = nullScore;\n          } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n            dummy.score = nullScores.get(nullScoreIndex++);\n          }\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","sourceOld":"    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n      this.collapseValues = contexts[currentContext].reader().getNumericDocValues(this.collapseField);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapseStrategy.getCollapsedSet(), 0); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      IntIntOpenHashMap cmap = collapseStrategy.getCollapseMap();\n      int[] docs = collapseStrategy.getDocs();\n      float[] scores = collapseStrategy.getScores();\n      FloatArrayList nullScores = collapseStrategy.getNullScores();\n      MergeBoost mergeBoost = collapseStrategy.getMergeBoost();\n      float nullScore = collapseStrategy.getNullScore();\n\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          this.collapseValues = contexts[currentContext].reader().getNumericDocValues(this.collapseField);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n\n        if(this.needsScores){\n          int collapseValue = (int)collapseValues.get(contextDoc);\n          if(collapseValue != nullValue) {\n            int pointer = cmap.get(collapseValue);\n            dummy.score = scores[pointer];\n          } else if (mergeBoost != null && mergeBoost.boost(globalDoc)) {\n            //Its an elevated doc so no score is needed\n            dummy.score = 0F;\n          } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n            dummy.score = nullScore;\n          } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n            dummy.score = nullScores.get(nullScoreIndex++);\n          }\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0201bd24de8c2e43ffd97115399c48fbcc83836","date":1447713745,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntFieldValueCollector#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntFieldValueCollector#finish().mjava","sourceNew":"    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n      this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapseStrategy.getCollapsedSet(), 0); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      IntIntHashMap cmap = collapseStrategy.getCollapseMap();\n      int[] docs = collapseStrategy.getDocs();\n      float[] scores = collapseStrategy.getScores();\n      FloatArrayList nullScores = collapseStrategy.getNullScores();\n      MergeBoost mergeBoost = collapseStrategy.getMergeBoost();\n      float nullScore = collapseStrategy.getNullScore();\n\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n\n        if(this.needsScores){\n          int collapseValue = (int)collapseValues.get(contextDoc);\n          if(collapseValue != nullValue) {\n            int pointer = cmap.get(collapseValue);\n            dummy.score = scores[pointer];\n          } else if (mergeBoost != null && mergeBoost.boost(globalDoc)) {\n            //Its an elevated doc so no score is needed\n            dummy.score = 0F;\n          } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n            dummy.score = nullScore;\n          } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n            dummy.score = nullScores.get(nullScoreIndex++);\n          }\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","sourceOld":"    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n      this.collapseValues = contexts[currentContext].reader().getNumericDocValues(this.collapseField);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapseStrategy.getCollapsedSet(), 0); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      IntIntHashMap cmap = collapseStrategy.getCollapseMap();\n      int[] docs = collapseStrategy.getDocs();\n      float[] scores = collapseStrategy.getScores();\n      FloatArrayList nullScores = collapseStrategy.getNullScores();\n      MergeBoost mergeBoost = collapseStrategy.getMergeBoost();\n      float nullScore = collapseStrategy.getNullScore();\n\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          this.collapseValues = contexts[currentContext].reader().getNumericDocValues(this.collapseField);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n\n        if(this.needsScores){\n          int collapseValue = (int)collapseValues.get(contextDoc);\n          if(collapseValue != nullValue) {\n            int pointer = cmap.get(collapseValue);\n            dummy.score = scores[pointer];\n          } else if (mergeBoost != null && mergeBoost.boost(globalDoc)) {\n            //Its an elevated doc so no score is needed\n            dummy.score = 0F;\n          } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n            dummy.score = nullScore;\n          } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n            dummy.score = nullScores.get(nullScoreIndex++);\n          }\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntFieldValueCollector#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntFieldValueCollector#finish().mjava","sourceNew":"    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n      this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapseStrategy.getCollapsedSet(), 0); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      IntIntHashMap cmap = collapseStrategy.getCollapseMap();\n      int[] docs = collapseStrategy.getDocs();\n      float[] scores = collapseStrategy.getScores();\n      FloatArrayList nullScores = collapseStrategy.getNullScores();\n      MergeBoost mergeBoost = collapseStrategy.getMergeBoost();\n      float nullScore = collapseStrategy.getNullScore();\n\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n\n        if(this.needsScores){\n          int collapseDocID = collapseValues.docID();\n          if (collapseDocID < contextDoc) {\n            collapseDocID = collapseValues.advance(contextDoc);\n          }\n\n          int collapseValue;\n          if (collapseDocID == contextDoc) {\n            collapseValue = (int) collapseValues.longValue();\n          } else {\n            collapseValue = 0;\n          }\n          \n          if(collapseValue != nullValue) {\n            int pointer = cmap.get(collapseValue);\n            dummy.score = scores[pointer];\n          } else if (mergeBoost != null && mergeBoost.boost(globalDoc)) {\n            //Its an elevated doc so no score is needed\n            dummy.score = 0F;\n          } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n            dummy.score = nullScore;\n          } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n            dummy.score = nullScores.get(nullScoreIndex++);\n          }\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","sourceOld":"    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n      this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapseStrategy.getCollapsedSet(), 0); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      IntIntHashMap cmap = collapseStrategy.getCollapseMap();\n      int[] docs = collapseStrategy.getDocs();\n      float[] scores = collapseStrategy.getScores();\n      FloatArrayList nullScores = collapseStrategy.getNullScores();\n      MergeBoost mergeBoost = collapseStrategy.getMergeBoost();\n      float nullScore = collapseStrategy.getNullScore();\n\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n\n        if(this.needsScores){\n          int collapseValue = (int)collapseValues.get(contextDoc);\n          if(collapseValue != nullValue) {\n            int pointer = cmap.get(collapseValue);\n            dummy.score = scores[pointer];\n          } else if (mergeBoost != null && mergeBoost.boost(globalDoc)) {\n            //Its an elevated doc so no score is needed\n            dummy.score = 0F;\n          } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n            dummy.score = nullScore;\n          } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n            dummy.score = nullScores.get(nullScoreIndex++);\n          }\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntFieldValueCollector#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntFieldValueCollector#finish().mjava","sourceNew":"    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n      this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapseStrategy.getCollapsedSet(), 0); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      IntIntHashMap cmap = collapseStrategy.getCollapseMap();\n      int[] docs = collapseStrategy.getDocs();\n      float[] scores = collapseStrategy.getScores();\n      FloatArrayList nullScores = collapseStrategy.getNullScores();\n      MergeBoost mergeBoost = collapseStrategy.getMergeBoost();\n      float nullScore = collapseStrategy.getNullScore();\n\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n\n        if(this.needsScores){\n          int collapseDocID = collapseValues.docID();\n          if (collapseDocID < contextDoc) {\n            collapseDocID = collapseValues.advance(contextDoc);\n          }\n\n          int collapseValue;\n          if (collapseDocID == contextDoc) {\n            collapseValue = (int) collapseValues.longValue();\n          } else {\n            collapseValue = 0;\n          }\n          \n          if(collapseValue != nullValue) {\n            int pointer = cmap.get(collapseValue);\n            dummy.score = scores[pointer];\n          } else if (mergeBoost != null && mergeBoost.boost(globalDoc)) {\n            //Its an elevated doc so no score is needed\n            dummy.score = 0F;\n          } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n            dummy.score = nullScore;\n          } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n            dummy.score = nullScores.get(nullScoreIndex++);\n          }\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","sourceOld":"    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n      this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapseStrategy.getCollapsedSet(), 0); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      IntIntHashMap cmap = collapseStrategy.getCollapseMap();\n      int[] docs = collapseStrategy.getDocs();\n      float[] scores = collapseStrategy.getScores();\n      FloatArrayList nullScores = collapseStrategy.getNullScores();\n      MergeBoost mergeBoost = collapseStrategy.getMergeBoost();\n      float nullScore = collapseStrategy.getNullScore();\n\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n\n        if(this.needsScores){\n          int collapseValue = (int)collapseValues.get(contextDoc);\n          if(collapseValue != nullValue) {\n            int pointer = cmap.get(collapseValue);\n            dummy.score = scores[pointer];\n          } else if (mergeBoost != null && mergeBoost.boost(globalDoc)) {\n            //Its an elevated doc so no score is needed\n            dummy.score = 0F;\n          } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n            dummy.score = nullScore;\n          } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n            dummy.score = nullScores.get(nullScoreIndex++);\n          }\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntFieldValueCollector#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntFieldValueCollector#finish().mjava","sourceNew":"    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n      this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapseStrategy.getCollapsedSet(), 0); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      IntIntHashMap cmap = collapseStrategy.getCollapseMap();\n      int[] docs = collapseStrategy.getDocs();\n      float[] scores = collapseStrategy.getScores();\n      FloatArrayList nullScores = collapseStrategy.getNullScores();\n      MergeBoost mergeBoost = collapseStrategy.getMergeBoost();\n      float nullScore = collapseStrategy.getNullScore();\n\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n\n        if(this.needsScores){\n          int collapseDocID = collapseValues.docID();\n          if (collapseDocID < contextDoc) {\n            collapseDocID = collapseValues.advance(contextDoc);\n          }\n\n          int collapseValue;\n          if (collapseDocID == contextDoc) {\n            collapseValue = (int) collapseValues.longValue();\n          } else {\n            collapseValue = 0;\n          }\n          \n          if(collapseValue != nullValue) {\n            int pointer = cmap.get(collapseValue);\n            dummy.score = scores[pointer];\n          } else if (mergeBoost != null && mergeBoost.boost(globalDoc)) {\n            //Its an elevated doc so no score is needed\n            dummy.score = 0F;\n          } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n            dummy.score = nullScore;\n          } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n            dummy.score = nullScores.get(nullScoreIndex++);\n          }\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","sourceOld":"    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n      this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapseStrategy.getCollapsedSet(), 0); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      IntIntHashMap cmap = collapseStrategy.getCollapseMap();\n      int[] docs = collapseStrategy.getDocs();\n      float[] scores = collapseStrategy.getScores();\n      FloatArrayList nullScores = collapseStrategy.getNullScores();\n      MergeBoost mergeBoost = collapseStrategy.getMergeBoost();\n      float nullScore = collapseStrategy.getNullScore();\n\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n\n        if(this.needsScores){\n          int collapseValue = (int)collapseValues.get(contextDoc);\n          if(collapseValue != nullValue) {\n            int pointer = cmap.get(collapseValue);\n            dummy.score = scores[pointer];\n          } else if (mergeBoost != null && mergeBoost.boost(globalDoc)) {\n            //Its an elevated doc so no score is needed\n            dummy.score = 0F;\n          } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n            dummy.score = nullScore;\n          } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n            dummy.score = nullScores.get(nullScoreIndex++);\n          }\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c62352c33f77624124d1cbf58a1291da78141f7","date":1518514846,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntFieldValueCollector#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntFieldValueCollector#finish().mjava","sourceNew":"    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n      this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapseStrategy.getCollapsedSet(), 0); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      IntIntHashMap cmap = collapseStrategy.getCollapseMap();\n      int[] docs = collapseStrategy.getDocs();\n      float[] scores = collapseStrategy.getScores();\n      FloatArrayList nullScores = collapseStrategy.getNullScores();\n      MergeBoost mergeBoost = collapseStrategy.getMergeBoost();\n      float nullScore = collapseStrategy.getNullScore();\n\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n\n        if(this.needsScores){\n          int collapseValue;\n          if (collapseValues.advanceExact(contextDoc)) {\n            collapseValue = (int) collapseValues.longValue();\n          } else {\n            collapseValue = 0;\n          }\n          \n          if(collapseValue != nullValue) {\n            int pointer = cmap.get(collapseValue);\n            dummy.score = scores[pointer];\n          } else if (mergeBoost != null && mergeBoost.boost(globalDoc)) {\n            //Its an elevated doc so no score is needed\n            dummy.score = 0F;\n          } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n            dummy.score = nullScore;\n          } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n            dummy.score = nullScores.get(nullScoreIndex++);\n          }\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","sourceOld":"    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n      this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapseStrategy.getCollapsedSet(), 0); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      IntIntHashMap cmap = collapseStrategy.getCollapseMap();\n      int[] docs = collapseStrategy.getDocs();\n      float[] scores = collapseStrategy.getScores();\n      FloatArrayList nullScores = collapseStrategy.getNullScores();\n      MergeBoost mergeBoost = collapseStrategy.getMergeBoost();\n      float nullScore = collapseStrategy.getNullScore();\n\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n\n        if(this.needsScores){\n          int collapseDocID = collapseValues.docID();\n          if (collapseDocID < contextDoc) {\n            collapseDocID = collapseValues.advance(contextDoc);\n          }\n\n          int collapseValue;\n          if (collapseDocID == contextDoc) {\n            collapseValue = (int) collapseValues.longValue();\n          } else {\n            collapseValue = 0;\n          }\n          \n          if(collapseValue != nullValue) {\n            int pointer = cmap.get(collapseValue);\n            dummy.score = scores[pointer];\n          } else if (mergeBoost != null && mergeBoost.boost(globalDoc)) {\n            //Its an elevated doc so no score is needed\n            dummy.score = 0F;\n          } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n            dummy.score = nullScore;\n          } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n            dummy.score = nullScores.get(nullScoreIndex++);\n          }\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bfcdec9fcf0409223f35c5ec3bc14094314941b4","date":1518533599,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntFieldValueCollector#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntFieldValueCollector#finish().mjava","sourceNew":"    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n      this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapseStrategy.getCollapsedSet(), 0); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      IntIntHashMap cmap = collapseStrategy.getCollapseMap();\n      int[] docs = collapseStrategy.getDocs();\n      float[] scores = collapseStrategy.getScores();\n      FloatArrayList nullScores = collapseStrategy.getNullScores();\n      MergeBoost mergeBoost = collapseStrategy.getMergeBoost();\n      float nullScore = collapseStrategy.getNullScore();\n\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n\n        if(this.needsScores){\n          int collapseValue;\n          if (collapseValues.advanceExact(contextDoc)) {\n            collapseValue = (int) collapseValues.longValue();\n          } else {\n            collapseValue = 0;\n          }\n          \n          if(collapseValue != nullValue) {\n            int pointer = cmap.get(collapseValue);\n            dummy.score = scores[pointer];\n          } else if (mergeBoost != null && mergeBoost.boost(globalDoc)) {\n            //Its an elevated doc so no score is needed\n            dummy.score = 0F;\n          } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n            dummy.score = nullScore;\n          } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n            dummy.score = nullScores.get(nullScoreIndex++);\n          }\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","sourceOld":"    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n      this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapseStrategy.getCollapsedSet(), 0); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      IntIntHashMap cmap = collapseStrategy.getCollapseMap();\n      int[] docs = collapseStrategy.getDocs();\n      float[] scores = collapseStrategy.getScores();\n      FloatArrayList nullScores = collapseStrategy.getNullScores();\n      MergeBoost mergeBoost = collapseStrategy.getMergeBoost();\n      float nullScore = collapseStrategy.getNullScore();\n\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n\n        if(this.needsScores){\n          int collapseDocID = collapseValues.docID();\n          if (collapseDocID < contextDoc) {\n            collapseDocID = collapseValues.advance(contextDoc);\n          }\n\n          int collapseValue;\n          if (collapseDocID == contextDoc) {\n            collapseValue = (int) collapseValues.longValue();\n          } else {\n            collapseValue = 0;\n          }\n          \n          if(collapseValue != nullValue) {\n            int pointer = cmap.get(collapseValue);\n            dummy.score = scores[pointer];\n          } else if (mergeBoost != null && mergeBoost.boost(globalDoc)) {\n            //Its an elevated doc so no score is needed\n            dummy.score = 0F;\n          } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n            dummy.score = nullScore;\n          } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n            dummy.score = nullScores.get(nullScoreIndex++);\n          }\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6dbd758f2776b0129f6b3641b6490ddc68d7b0f3","date":1536316907,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntFieldValueCollector#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntFieldValueCollector#finish().mjava","sourceNew":"    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n      this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      ScoreAndDoc dummy = new ScoreAndDoc();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapseStrategy.getCollapsedSet(), 0); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      IntIntHashMap cmap = collapseStrategy.getCollapseMap();\n      int[] docs = collapseStrategy.getDocs();\n      float[] scores = collapseStrategy.getScores();\n      FloatArrayList nullScores = collapseStrategy.getNullScores();\n      MergeBoost mergeBoost = collapseStrategy.getMergeBoost();\n      float nullScore = collapseStrategy.getNullScore();\n\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n\n        if(this.needsScores){\n          int collapseValue;\n          if (collapseValues.advanceExact(contextDoc)) {\n            collapseValue = (int) collapseValues.longValue();\n          } else {\n            collapseValue = 0;\n          }\n          \n          if(collapseValue != nullValue) {\n            int pointer = cmap.get(collapseValue);\n            dummy.score = scores[pointer];\n          } else if (mergeBoost != null && mergeBoost.boost(globalDoc)) {\n            //Its an elevated doc so no score is needed\n            dummy.score = 0F;\n          } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n            dummy.score = nullScore;\n          } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n            dummy.score = nullScores.get(nullScoreIndex++);\n          }\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","sourceOld":"    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n      this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapseStrategy.getCollapsedSet(), 0); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      IntIntHashMap cmap = collapseStrategy.getCollapseMap();\n      int[] docs = collapseStrategy.getDocs();\n      float[] scores = collapseStrategy.getScores();\n      FloatArrayList nullScores = collapseStrategy.getNullScores();\n      MergeBoost mergeBoost = collapseStrategy.getMergeBoost();\n      float nullScore = collapseStrategy.getNullScore();\n\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n\n        if(this.needsScores){\n          int collapseValue;\n          if (collapseValues.advanceExact(contextDoc)) {\n            collapseValue = (int) collapseValues.longValue();\n          } else {\n            collapseValue = 0;\n          }\n          \n          if(collapseValue != nullValue) {\n            int pointer = cmap.get(collapseValue);\n            dummy.score = scores[pointer];\n          } else if (mergeBoost != null && mergeBoost.boost(globalDoc)) {\n            //Its an elevated doc so no score is needed\n            dummy.score = 0F;\n          } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n            dummy.score = nullScore;\n          } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n            dummy.score = nullScores.get(nullScoreIndex++);\n          }\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3575e61fd7df2bbcce8b977a23d3d67aa423ce62","date":1586507050,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntFieldValueCollector#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntFieldValueCollector#finish().mjava","sourceNew":"    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n      this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      ScoreAndDoc dummy = new ScoreAndDoc();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapseStrategy.getCollapsedSet(), 0); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      IntIntHashMap cmap = collapseStrategy.getCollapseMap();\n      IntFloatDynamicMap scores = collapseStrategy.getScores();\n      FloatArrayList nullScores = collapseStrategy.getNullScores();\n      MergeBoost mergeBoost = collapseStrategy.getMergeBoost();\n      float nullScore = collapseStrategy.getNullScore();\n\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n\n        if(this.needsScores){\n          int collapseValue;\n          if (collapseValues.advanceExact(contextDoc)) {\n            collapseValue = (int) collapseValues.longValue();\n          } else {\n            collapseValue = 0;\n          }\n          \n          if(collapseValue != nullValue) {\n            int pointer = cmap.get(collapseValue);\n            dummy.score = scores.get(pointer);\n          } else if (mergeBoost != null && mergeBoost.boost(globalDoc)) {\n            //Its an elevated doc so no score is needed\n            dummy.score = 0F;\n          } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n            dummy.score = nullScore;\n          } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n            dummy.score = nullScores.get(nullScoreIndex++);\n          }\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","sourceOld":"    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n      this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      ScoreAndDoc dummy = new ScoreAndDoc();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapseStrategy.getCollapsedSet(), 0); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      IntIntHashMap cmap = collapseStrategy.getCollapseMap();\n      int[] docs = collapseStrategy.getDocs();\n      float[] scores = collapseStrategy.getScores();\n      FloatArrayList nullScores = collapseStrategy.getNullScores();\n      MergeBoost mergeBoost = collapseStrategy.getMergeBoost();\n      float nullScore = collapseStrategy.getNullScore();\n\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n\n        if(this.needsScores){\n          int collapseValue;\n          if (collapseValues.advanceExact(contextDoc)) {\n            collapseValue = (int) collapseValues.longValue();\n          } else {\n            collapseValue = 0;\n          }\n          \n          if(collapseValue != nullValue) {\n            int pointer = cmap.get(collapseValue);\n            dummy.score = scores[pointer];\n          } else if (mergeBoost != null && mergeBoost.boost(globalDoc)) {\n            //Its an elevated doc so no score is needed\n            dummy.score = 0F;\n          } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n            dummy.score = nullScore;\n          } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n            dummy.score = nullScores.get(nullScoreIndex++);\n          }\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a813b523bf76aa0a68013d636b6eb53cedb142a4","date":1601387389,"type":3,"author":"Guna Sekhar Dora Kovvuru","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntFieldValueCollector#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntFieldValueCollector#finish().mjava","sourceNew":"    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n      this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      ScoreAndDoc dummy = new ScoreAndDoc();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapseStrategy.getCollapsedSet(), 0); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      IntIntHashMap cmap = collapseStrategy.getCollapseMap();\n      IntFloatDynamicMap scores = collapseStrategy.getScores();\n      FloatArrayList nullScores = collapseStrategy.getNullScores();\n      MergeBoost mergeBoost = collapseStrategy.getMergeBoost();\n      float nullScore = collapseStrategy.getNullScore();\n\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n\n        if(this.needsScores){\n          int collapseValue;\n          if (collapseValues.advanceExact(contextDoc)) {\n            collapseValue = (int) collapseValues.longValue();\n          } else {\n            collapseValue = 0;\n          }\n          \n          if(collapseValue != nullValue) {\n            int pointer = cmap.get(collapseValue);\n            dummy.score = scores.get(pointer);\n          } else if (mergeBoost != null && mergeBoost.boost(globalDoc)) {\n            //Its an elevated doc so no score is needed\n            dummy.score = 0F;\n          } else if (nullPolicy == NullPolicy.COLLAPSE.getCode()) {\n            dummy.score = nullScore;\n          } else if(nullPolicy == NullPolicy.EXPAND.getCode()) {\n            dummy.score = nullScores.get(nullScoreIndex++);\n          }\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","sourceOld":"    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n      this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      ScoreAndDoc dummy = new ScoreAndDoc();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapseStrategy.getCollapsedSet(), 0); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      IntIntHashMap cmap = collapseStrategy.getCollapseMap();\n      IntFloatDynamicMap scores = collapseStrategy.getScores();\n      FloatArrayList nullScores = collapseStrategy.getNullScores();\n      MergeBoost mergeBoost = collapseStrategy.getMergeBoost();\n      float nullScore = collapseStrategy.getNullScore();\n\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          this.collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.collapseField);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n\n        if(this.needsScores){\n          int collapseValue;\n          if (collapseValues.advanceExact(contextDoc)) {\n            collapseValue = (int) collapseValues.longValue();\n          } else {\n            collapseValue = 0;\n          }\n          \n          if(collapseValue != nullValue) {\n            int pointer = cmap.get(collapseValue);\n            dummy.score = scores.get(pointer);\n          } else if (mergeBoost != null && mergeBoost.boost(globalDoc)) {\n            //Its an elevated doc so no score is needed\n            dummy.score = 0F;\n          } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n            dummy.score = nullScore;\n          } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n            dummy.score = nullScores.get(nullScoreIndex++);\n          }\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6c62352c33f77624124d1cbf58a1291da78141f7":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"3575e61fd7df2bbcce8b977a23d3d67aa423ce62":["6dbd758f2776b0129f6b3641b6490ddc68d7b0f3"],"6dbd758f2776b0129f6b3641b6490ddc68d7b0f3":["bfcdec9fcf0409223f35c5ec3bc14094314941b4"],"bfcdec9fcf0409223f35c5ec3bc14094314941b4":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6c62352c33f77624124d1cbf58a1291da78141f7"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0201bd24de8c2e43ffd97115399c48fbcc83836","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a813b523bf76aa0a68013d636b6eb53cedb142a4":["3575e61fd7df2bbcce8b977a23d3d67aa423ce62"],"a0201bd24de8c2e43ffd97115399c48fbcc83836":["1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87"],"8ced52befdc8d88d90766aadbaac496f3fd0e4ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a0201bd24de8c2e43ffd97115399c48fbcc83836","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["a0201bd24de8c2e43ffd97115399c48fbcc83836"],"0a9c4a5022409b649909f75244642a57739b3598":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"],"1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87":["0a9c4a5022409b649909f75244642a57739b3598"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a813b523bf76aa0a68013d636b6eb53cedb142a4"]},"commit2Childs":{"6c62352c33f77624124d1cbf58a1291da78141f7":["bfcdec9fcf0409223f35c5ec3bc14094314941b4"],"3575e61fd7df2bbcce8b977a23d3d67aa423ce62":["a813b523bf76aa0a68013d636b6eb53cedb142a4"],"6dbd758f2776b0129f6b3641b6490ddc68d7b0f3":["3575e61fd7df2bbcce8b977a23d3d67aa423ce62"],"bfcdec9fcf0409223f35c5ec3bc14094314941b4":["6dbd758f2776b0129f6b3641b6490ddc68d7b0f3"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"a0201bd24de8c2e43ffd97115399c48fbcc83836":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"a813b523bf76aa0a68013d636b6eb53cedb142a4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8ced52befdc8d88d90766aadbaac496f3fd0e4ee":["0a9c4a5022409b649909f75244642a57739b3598"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["6c62352c33f77624124d1cbf58a1291da78141f7","bfcdec9fcf0409223f35c5ec3bc14094314941b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"0a9c4a5022409b649909f75244642a57739b3598":["1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87"],"1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87":["a0201bd24de8c2e43ffd97115399c48fbcc83836"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}