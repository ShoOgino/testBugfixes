{"path":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testPointInSetQueryToString().mjava","commits":[{"id":"96ae115468a08fb03270562a0121761d73c2c8c1","date":1456307437,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testPointInSetQueryToString().mjava","pathOld":"/dev/null","sourceNew":"  public void testPointInSetQueryToString() throws Exception {\n    // int\n    assertEquals(\"int:{-42 18}\", IntPoint.newSetQuery(\"int\", -42, 18).toString());\n\n    // long\n    assertEquals(\"long:{-42 18}\", LongPoint.newSetQuery(\"long\", -42L, 18L).toString());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a577e4497932469db8eefa9fbecf4cb9265be98","date":1456321690,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testPointInSetQueryToString().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testPointInSetQueryToString().mjava","sourceNew":"  public void testPointInSetQueryToString() throws Exception {\n    // int\n    assertEquals(\"int:{-42 18}\", IntPoint.newSetQuery(\"int\", -42, 18).toString());\n\n    // long\n    assertEquals(\"long:{-42 18}\", LongPoint.newSetQuery(\"long\", -42L, 18L).toString());\n\n    // float\n    assertEquals(\"float:{-42.0 18.0}\", FloatPoint.newSetQuery(\"float\", -42.0f, 18.0f).toString());\n\n    // double\n    assertEquals(\"double:{-42.0 18.0}\", DoublePoint.newSetQuery(\"double\", -42.0, 18.0).toString());\n  }\n\n","sourceOld":"  public void testPointInSetQueryToString() throws Exception {\n    // int\n    assertEquals(\"int:{-42 18}\", IntPoint.newSetQuery(\"int\", -42, 18).toString());\n\n    // long\n    assertEquals(\"long:{-42 18}\", LongPoint.newSetQuery(\"long\", -42L, 18L).toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f429037bedccb27766e77f5e772b291a8d1bc97c","date":1456353956,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testPointInSetQueryToString().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testPointInSetQueryToString().mjava","sourceNew":"  public void testPointInSetQueryToString() throws Exception {\n    // int\n    assertEquals(\"int:{-42 18}\", IntPoint.newSetQuery(\"int\", -42, 18).toString());\n\n    // long\n    assertEquals(\"long:{-42 18}\", LongPoint.newSetQuery(\"long\", -42L, 18L).toString());\n\n    // float\n    assertEquals(\"float:{-42.0 18.0}\", FloatPoint.newSetQuery(\"float\", -42.0f, 18.0f).toString());\n\n    // double\n    assertEquals(\"double:{-42.0 18.0}\", DoublePoint.newSetQuery(\"double\", -42.0, 18.0).toString());\n\n    // binary\n    assertEquals(\"bytes:{[12] [2a]}\", BinaryPoint.newSetQuery(\"bytes\", new byte[] {42}, new byte[] {18}).toString());\n  }\n\n","sourceOld":"  public void testPointInSetQueryToString() throws Exception {\n    // int\n    assertEquals(\"int:{-42 18}\", IntPoint.newSetQuery(\"int\", -42, 18).toString());\n\n    // long\n    assertEquals(\"long:{-42 18}\", LongPoint.newSetQuery(\"long\", -42L, 18L).toString());\n\n    // float\n    assertEquals(\"float:{-42.0 18.0}\", FloatPoint.newSetQuery(\"float\", -42.0f, 18.0f).toString());\n\n    // double\n    assertEquals(\"double:{-42.0 18.0}\", DoublePoint.newSetQuery(\"double\", -42.0, 18.0).toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868f63baffb79407d4b49f3c0be8dc4725ffc6e1","date":1456423715,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testPointInSetQueryToString().mjava","pathOld":"/dev/null","sourceNew":"  public void testPointInSetQueryToString() throws Exception {\n    // int\n    assertEquals(\"int:{-42 18}\", IntPoint.newSetQuery(\"int\", -42, 18).toString());\n\n    // long\n    assertEquals(\"long:{-42 18}\", LongPoint.newSetQuery(\"long\", -42L, 18L).toString());\n\n    // float\n    assertEquals(\"float:{-42.0 18.0}\", FloatPoint.newSetQuery(\"float\", -42.0f, 18.0f).toString());\n\n    // double\n    assertEquals(\"double:{-42.0 18.0}\", DoublePoint.newSetQuery(\"double\", -42.0, 18.0).toString());\n\n    // binary\n    assertEquals(\"bytes:{[12] [2a]}\", BinaryPoint.newSetQuery(\"bytes\", new byte[] {42}, new byte[] {18}).toString());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4a577e4497932469db8eefa9fbecf4cb9265be98":["96ae115468a08fb03270562a0121761d73c2c8c1"],"f429037bedccb27766e77f5e772b291a8d1bc97c":["4a577e4497932469db8eefa9fbecf4cb9265be98"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"868f63baffb79407d4b49f3c0be8dc4725ffc6e1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f429037bedccb27766e77f5e772b291a8d1bc97c"],"96ae115468a08fb03270562a0121761d73c2c8c1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["868f63baffb79407d4b49f3c0be8dc4725ffc6e1"]},"commit2Childs":{"4a577e4497932469db8eefa9fbecf4cb9265be98":["f429037bedccb27766e77f5e772b291a8d1bc97c"],"f429037bedccb27766e77f5e772b291a8d1bc97c":["868f63baffb79407d4b49f3c0be8dc4725ffc6e1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["868f63baffb79407d4b49f3c0be8dc4725ffc6e1","96ae115468a08fb03270562a0121761d73c2c8c1"],"868f63baffb79407d4b49f3c0be8dc4725ffc6e1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"96ae115468a08fb03270562a0121761d73c2c8c1":["4a577e4497932469db8eefa9fbecf4cb9265be98"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}