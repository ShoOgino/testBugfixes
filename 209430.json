{"path":"solr/core/src/java/org/apache/solr/analysis/SlowSynonymFilterFactory#loadRules(String,ResourceLoader).mjava","commits":[{"id":"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c","date":1310389132,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/analysis/SlowSynonymFilterFactory#loadRules(String,ResourceLoader).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/SynonymFilterFactory#loadRules(String,ResourceLoader).mjava","sourceNew":"  /**\n   * @return a list of all rules\n   */\n  protected Iterable<String> loadRules( String synonyms, ResourceLoader loader ) {\n    List<String> wlist=null;\n    try {\n      File synonymFile = new File(synonyms);\n      if (synonymFile.exists()) {\n        wlist = loader.getLines(synonyms);\n      } else  {\n        List<String> files = StrUtils.splitFileNames(synonyms);\n        wlist = new ArrayList<String>();\n        for (String file : files) {\n          List<String> lines = loader.getLines(file.trim());\n          wlist.addAll(lines);\n        }\n      }\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n    return wlist;\n  }\n\n","sourceOld":"  /**\n   * @return a list of all rules\n   */\n  protected Iterable<String> loadRules( String synonyms, ResourceLoader loader ) {\n    List<String> wlist=null;\n    try {\n      File synonymFile = new File(synonyms);\n      if (synonymFile.exists()) {\n        wlist = loader.getLines(synonyms);\n      } else  {\n        List<String> files = StrUtils.splitFileNames(synonyms);\n        wlist = new ArrayList<String>();\n        for (String file : files) {\n          List<String> lines = loader.getLines(file.trim());\n          wlist.addAll(lines);\n        }\n      }\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n    return wlist;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"39d25aba1848c644c6d22b943d3d66f661445ac7","date":1335238294,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/analysis/SlowSynonymFilterFactory#loadRules(String,ResourceLoader).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/SlowSynonymFilterFactory#loadRules(String,ResourceLoader).mjava","sourceNew":"  /**\n   * @return a list of all rules\n   */\n  protected Iterable<String> loadRules( String synonyms, ResourceLoader loader ) {\n    List<String> wlist=null;\n    try {\n      File synonymFile = new File(synonyms);\n      if (synonymFile.exists()) {\n        wlist = loader.getLines(synonyms);\n      } else  {\n        List<String> files = StrUtils.splitFileNames(synonyms);\n        wlist = new ArrayList<String>();\n        for (String file : files) {\n          List<String> lines = loader.getLines(file.trim());\n          wlist.addAll(lines);\n        }\n      }\n    } catch (IOException e) {\n      throw new InitializationException(\"IOException thrown while loading synonym rules\", e);\n    }\n    return wlist;\n  }\n\n","sourceOld":"  /**\n   * @return a list of all rules\n   */\n  protected Iterable<String> loadRules( String synonyms, ResourceLoader loader ) {\n    List<String> wlist=null;\n    try {\n      File synonymFile = new File(synonyms);\n      if (synonymFile.exists()) {\n        wlist = loader.getLines(synonyms);\n      } else  {\n        List<String> files = StrUtils.splitFileNames(synonyms);\n        wlist = new ArrayList<String>();\n        for (String file : files) {\n          List<String> lines = loader.getLines(file.trim());\n          wlist.addAll(lines);\n        }\n      }\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n    return wlist;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/analysis/SlowSynonymFilterFactory#loadRules(String,ResourceLoader).mjava","sourceNew":null,"sourceOld":"  /**\n   * @return a list of all rules\n   */\n  protected Iterable<String> loadRules( String synonyms, ResourceLoader loader ) {\n    List<String> wlist=null;\n    try {\n      File synonymFile = new File(synonyms);\n      if (synonymFile.exists()) {\n        wlist = loader.getLines(synonyms);\n      } else  {\n        List<String> files = StrUtils.splitFileNames(synonyms);\n        wlist = new ArrayList<String>();\n        for (String file : files) {\n          List<String> lines = loader.getLines(file.trim());\n          wlist.addAll(lines);\n        }\n      }\n    } catch (IOException e) {\n      throw new InitializationException(\"IOException thrown while loading synonym rules\", e);\n    }\n    return wlist;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["39d25aba1848c644c6d22b943d3d66f661445ac7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"39d25aba1848c644c6d22b943d3d66f661445ac7":["44d6f0ab53c1962856b9f48dedb7a2a6cc18905c"],"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"]},"commit2Childs":{"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["44d6f0ab53c1962856b9f48dedb7a2a6cc18905c"],"39d25aba1848c644c6d22b943d3d66f661445ac7":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c":["39d25aba1848c644c6d22b943d3d66f661445ac7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}