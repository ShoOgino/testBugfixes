{"path":"solr/core/src/test/org/apache/solr/analytics/NoFacetTest#missingDefaultTest().mjava","commits":[{"id":"ff403346522eaa9de75403763e297e83a3ea585c","date":1384904731,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/NoFacetTest#missingDefaultTest().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void missingDefaultTest() throws Exception { \n    //Int\n    long intResult = (Long)getStatResult(response, \"misr\", \"long\", \"int_id\");\n    assertEquals(intMissing,intResult);\n\n    //Long\n    long longResult = (Long)getStatResult(response, \"misr\", \"long\", \"long_ld\");\n    assertEquals(longMissing,longResult);\n\n    //Float\n    long floatResult = (Long)getStatResult(response, \"misr\", \"long\", \"float_fd\");\n    assertEquals(floatMissing,floatResult);\n\n    //Double\n    long doubleResult = (Long)getStatResult(response, \"misr\", \"long\", \"double_dd\");\n    assertEquals(doubleMissing,doubleResult);\n\n    //Date\n    long dateResult = (Long)getStatResult(response, \"misr\", \"long\", \"date_dtd\");\n    assertEquals(dateMissing,dateResult);\n\n    //String\n    long stringResult = (Long)getStatResult(response, \"misr\", \"long\", \"string_sd\");\n    assertEquals(stringMissing, stringResult);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2408d2a60b59b9f5d910383ce065127078892c04","date":1385328825,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/NoFacetTest#missingDefaultTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/NoFacetTest#missingDefaultTest().mjava","sourceNew":"  @Test\n  public void missingDefaultTest() throws Exception { \n    //Int\n    long intResult = (Long)getStatResult(\"misr\", \"int_id\", VAL_TYPE.LONG);\n    assertEquals(intMissing,intResult);\n\n    //Long\n    long longResult = (Long)getStatResult(\"misr\", \"long_ld\", VAL_TYPE.LONG);\n    assertEquals(longMissing,longResult);\n\n    //Float\n    long floatResult = (Long)getStatResult(\"misr\", \"float_fd\", VAL_TYPE.LONG);\n    assertEquals(floatMissing,floatResult);\n\n    //Double\n    long doubleResult = (Long)getStatResult(\"misr\", \"double_dd\", VAL_TYPE.LONG);\n    assertEquals(doubleMissing,doubleResult);\n\n    //Date\n    long dateResult = (Long)getStatResult(\"misr\", \"date_dtd\", VAL_TYPE.LONG);\n    assertEquals(dateMissing,dateResult);\n\n    //String\n    long stringResult = (Long)getStatResult(\"misr\", \"string_sd\", VAL_TYPE.LONG);\n    assertEquals(stringMissing, stringResult);\n  }\n\n","sourceOld":"  @Test\n  public void missingDefaultTest() throws Exception { \n    //Int\n    long intResult = (Long)getStatResult(response, \"misr\", \"long\", \"int_id\");\n    assertEquals(intMissing,intResult);\n\n    //Long\n    long longResult = (Long)getStatResult(response, \"misr\", \"long\", \"long_ld\");\n    assertEquals(longMissing,longResult);\n\n    //Float\n    long floatResult = (Long)getStatResult(response, \"misr\", \"long\", \"float_fd\");\n    assertEquals(floatMissing,floatResult);\n\n    //Double\n    long doubleResult = (Long)getStatResult(response, \"misr\", \"long\", \"double_dd\");\n    assertEquals(doubleMissing,doubleResult);\n\n    //Date\n    long dateResult = (Long)getStatResult(response, \"misr\", \"long\", \"date_dtd\");\n    assertEquals(dateMissing,dateResult);\n\n    //String\n    long stringResult = (Long)getStatResult(response, \"misr\", \"long\", \"string_sd\");\n    assertEquals(stringMissing, stringResult);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d840db4e4ec73c3ff5d5457046c6854cc630e26","date":1385608650,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/NoFacetTest#missingDefaultTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/NoFacetTest#missingDefaultTest().mjava","sourceNew":"  @Test\n  public void missingDefaultTest() throws Exception { \n    //Int\n    long intResult = (Long)getStatResult(\"misr\", \"int_id\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), intMissing,intResult);\n\n    //Long\n    long longResult = (Long)getStatResult(\"misr\", \"long_ld\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), longMissing,longResult);\n\n    //Float\n    long floatResult = (Long)getStatResult(\"misr\", \"float_fd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), floatMissing,floatResult);\n\n    //Double\n    long doubleResult = (Long)getStatResult(\"misr\", \"double_dd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), doubleMissing,doubleResult);\n\n    //Date\n    long dateResult = (Long)getStatResult(\"misr\", \"date_dtd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), dateMissing,dateResult);\n\n    //String\n    long stringResult = (Long)getStatResult(\"misr\", \"string_sd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), stringMissing, stringResult);\n  }\n\n","sourceOld":"  @Test\n  public void missingDefaultTest() throws Exception { \n    //Int\n    long intResult = (Long)getStatResult(\"misr\", \"int_id\", VAL_TYPE.LONG);\n    assertEquals(intMissing,intResult);\n\n    //Long\n    long longResult = (Long)getStatResult(\"misr\", \"long_ld\", VAL_TYPE.LONG);\n    assertEquals(longMissing,longResult);\n\n    //Float\n    long floatResult = (Long)getStatResult(\"misr\", \"float_fd\", VAL_TYPE.LONG);\n    assertEquals(floatMissing,floatResult);\n\n    //Double\n    long doubleResult = (Long)getStatResult(\"misr\", \"double_dd\", VAL_TYPE.LONG);\n    assertEquals(doubleMissing,doubleResult);\n\n    //Date\n    long dateResult = (Long)getStatResult(\"misr\", \"date_dtd\", VAL_TYPE.LONG);\n    assertEquals(dateMissing,dateResult);\n\n    //String\n    long stringResult = (Long)getStatResult(\"misr\", \"string_sd\", VAL_TYPE.LONG);\n    assertEquals(stringMissing, stringResult);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analytics/NoFacetTest#missingDefaultTest().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void missingDefaultTest() throws Exception { \n    //Int\n    long intResult = (Long)getStatResult(\"misr\", \"int_id\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), intMissing,intResult);\n\n    //Long\n    long longResult = (Long)getStatResult(\"misr\", \"long_ld\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), longMissing,longResult);\n\n    //Float\n    long floatResult = (Long)getStatResult(\"misr\", \"float_fd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), floatMissing,floatResult);\n\n    //Double\n    long doubleResult = (Long)getStatResult(\"misr\", \"double_dd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), doubleMissing,doubleResult);\n\n    //Date\n    long dateResult = (Long)getStatResult(\"misr\", \"date_dtd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), dateMissing,dateResult);\n\n    //String\n    long stringResult = (Long)getStatResult(\"misr\", \"string_sd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), stringMissing, stringResult);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f719faa74f7213d4a395510dbc1f1b7cb178484","date":1410881394,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/NoFacetTest#missingDefaultTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/NoFacetTest#missingDefaultTest().mjava","sourceNew":"  @Test\n  public void missingDefaultTest() throws Exception { \n    //Int\n    long intResult = (Long)getStatResult(\"misr\", \"int_id\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), intMissing,intResult);\n\n    //Long\n    long longResult = (Long)getStatResult(\"misr\", \"long_ld\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), longMissing,longResult);\n\n    //Float\n    long floatResult = (Long)getStatResult(\"misr\", \"float_fd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), floatMissing,floatResult);\n\n    //Double\n    long doubleResult = (Long)getStatResult(\"misr\", \"double_dd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), doubleMissing,doubleResult);\n\n    //Date\n    long dateResult = (Long)getStatResult(\"misr\", \"date_dtd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), dateMissing,dateResult);\n\n    //String\n    long stringResult = (Long)getStatResult(\"misr\", \"string_sd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), stringMissing, stringResult);\n  }\n\n","sourceOld":"  @Test\n  public void missingDefaultTest() throws Exception { \n    //Int\n    long intResult = (Long)getStatResult(\"misr\", \"int_id\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), intMissing,intResult);\n\n    //Long\n    long longResult = (Long)getStatResult(\"misr\", \"long_ld\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), longMissing,longResult);\n\n    //Float\n    long floatResult = (Long)getStatResult(\"misr\", \"float_fd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), floatMissing,floatResult);\n\n    //Double\n    long doubleResult = (Long)getStatResult(\"misr\", \"double_dd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), doubleMissing,doubleResult);\n\n    //Date\n    long dateResult = (Long)getStatResult(\"misr\", \"date_dtd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), dateMissing,dateResult);\n\n    //String\n    long stringResult = (Long)getStatResult(\"misr\", \"string_sd\", VAL_TYPE.LONG);\n    assertEquals(getRawResponse(), stringMissing, stringResult);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2d840db4e4ec73c3ff5d5457046c6854cc630e26"],"2408d2a60b59b9f5d910383ce065127078892c04":["ff403346522eaa9de75403763e297e83a3ea585c"],"ff403346522eaa9de75403763e297e83a3ea585c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2d840db4e4ec73c3ff5d5457046c6854cc630e26":["2408d2a60b59b9f5d910383ce065127078892c04"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["2d840db4e4ec73c3ff5d5457046c6854cc630e26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f719faa74f7213d4a395510dbc1f1b7cb178484"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","ff403346522eaa9de75403763e297e83a3ea585c"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"2408d2a60b59b9f5d910383ce065127078892c04":["2d840db4e4ec73c3ff5d5457046c6854cc630e26"],"ff403346522eaa9de75403763e297e83a3ea585c":["2408d2a60b59b9f5d910383ce065127078892c04"],"2d840db4e4ec73c3ff5d5457046c6854cc630e26":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","0f719faa74f7213d4a395510dbc1f1b7cb178484"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}