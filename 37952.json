{"path":"lucene/core/src/java/org/apache/lucene/codecs/NumericDocValuesConsumer#merge(MergeState,List[NumericDocValues]).mjava","commits":[{"id":"4b53a9a930ee01857178a1b512fbab24642f3fa8","date":1354471097,"type":2,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/NumericDocValuesConsumer#merge(MergeState,List[NumericDocValues]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BinaryDocValuesConsumer#merge(MergeState).mjava","sourceNew":"  public int merge(MergeState mergeState, List<NumericDocValues> toMerge) throws IOException {\n    int docCount = 0;\n    for (int readerIDX=0;readerIDX<toMerge.size();readerIDX++) {\n      AtomicReader reader = mergeState.readers.get(readerIDX);\n      int maxDoc = reader.maxDoc();\n      Bits liveDocs = reader.getLiveDocs();\n      NumericDocValues values = toMerge.get(readerIDX);\n      for (int i = 0; i < maxDoc; i++) {\n        if (liveDocs == null || liveDocs.get(i)) {\n          add(values.get(i));\n        }\n        docCount++;\n        mergeState.checkAbort.work(300);\n      }\n    }\n    finish();\n    return docCount;\n  }\n\n","sourceOld":"  public int merge(MergeState mergeState) throws IOException {\n    int docCount = 0;\n    final BytesRef bytes = new BytesRef();\n    for (AtomicReader reader : mergeState.readers) {\n      final int maxDoc = reader.maxDoc();\n      final Bits liveDocs = reader.getLiveDocs();\n\n      BinaryDocValues source = reader.getBinaryDocValues(mergeState.fieldInfo.name);\n      if (source == null) {\n        source = new BinaryDocValues.EMPTY(maxDoc);\n      }\n\n      for (int i = 0; i < maxDoc; i++) {\n        if (liveDocs == null || liveDocs.get(i)) {\n          source.get(i, bytes);\n          add(bytes);\n        }\n        docCount++;\n        mergeState.checkAbort.work(300);\n      }\n    }\n    finish();\n    return docCount;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"32fb848e256860b63adc9c2b068f386032c77b67","date":1357587205,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/NumericDocValuesConsumer#merge(MergeState,List[NumericDocValues]).mjava","sourceNew":null,"sourceOld":"  public int merge(MergeState mergeState, List<NumericDocValues> toMerge) throws IOException {\n    int docCount = 0;\n    for (int readerIDX=0;readerIDX<toMerge.size();readerIDX++) {\n      AtomicReader reader = mergeState.readers.get(readerIDX);\n      int maxDoc = reader.maxDoc();\n      Bits liveDocs = reader.getLiveDocs();\n      NumericDocValues values = toMerge.get(readerIDX);\n      for (int i = 0; i < maxDoc; i++) {\n        if (liveDocs == null || liveDocs.get(i)) {\n          add(values.get(i));\n        }\n        docCount++;\n        mergeState.checkAbort.work(300);\n      }\n    }\n    finish();\n    return docCount;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4b53a9a930ee01857178a1b512fbab24642f3fa8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"32fb848e256860b63adc9c2b068f386032c77b67":["4b53a9a930ee01857178a1b512fbab24642f3fa8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4b53a9a930ee01857178a1b512fbab24642f3fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4b53a9a930ee01857178a1b512fbab24642f3fa8":["32fb848e256860b63adc9c2b068f386032c77b67"],"32fb848e256860b63adc9c2b068f386032c77b67":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["32fb848e256860b63adc9c2b068f386032c77b67","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}