{"path":"src/java/org/apache/lucene/search/Query#createQueryWeight(Searcher).mjava","commits":[{"id":"052fac7830290bd38a04cddee1a121ee07656b56","date":1245780702,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Query#createQueryWeight(Searcher).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Expert: Constructs an appropriate {@link QueryWeight} implementation for\n   * this query.\n   * \n   * <p>\n   * Only implemented by primitive queries, which re-write to themselves.\n   */\n  public QueryWeight createQueryWeight(Searcher searcher) throws IOException {\n    throw new UnsupportedOperationException();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b36c2a5e053ad7397260115fc56148248ae21fa","date":1245935585,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Query#createQueryWeight(Searcher).mjava","pathOld":"src/java/org/apache/lucene/search/Query#createQueryWeight(Searcher).mjava","sourceNew":"  /**\n   * Expert: Constructs an appropriate {@link QueryWeight} implementation for\n   * this query.\n   * <p>\n   * Only implemented by primitive queries, which re-write to themselves.\n   * <p>\n   * <b>NOTE:</b> in 3.0 this method will throw\n   * {@link UnsupportedOperationException}. It is implemented now by calling\n   * {@link #createWeight(Searcher)} for backwards compatibility, for\n   * {@link Query} implementations that did not override it yet (but did\n   * override {@link #createWeight(Searcher)}).\n   */\n  // TODO (3.0): change to throw UnsupportedOperationException.\n  public QueryWeight createQueryWeight(Searcher searcher) throws IOException {\n    return new QueryWeightWrapper(weight(searcher));\n  }\n\n","sourceOld":"  /**\n   * Expert: Constructs an appropriate {@link QueryWeight} implementation for\n   * this query.\n   * \n   * <p>\n   * Only implemented by primitive queries, which re-write to themselves.\n   */\n  public QueryWeight createQueryWeight(Searcher searcher) throws IOException {\n    throw new UnsupportedOperationException();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e43b9b184aa8424126c7aec1f54a6e402cb3c29d","date":1245963431,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Query#createQueryWeight(Searcher).mjava","pathOld":"src/java/org/apache/lucene/search/Query#createQueryWeight(Searcher).mjava","sourceNew":"  /**\n   * Expert: Constructs an appropriate {@link QueryWeight} implementation for\n   * this query.\n   * <p>\n   * Only implemented by primitive queries, which re-write to themselves.\n   * <p>\n   * <b>NOTE:</b> in 3.0 this method will throw\n   * {@link UnsupportedOperationException}. It is implemented now by calling\n   * {@link #createWeight(Searcher)} for backwards compatibility, for\n   * {@link Query} implementations that did not override it yet (but did\n   * override {@link #createWeight(Searcher)}).\n   */\n  // TODO (3.0): change to throw UnsupportedOperationException.\n  public QueryWeight createQueryWeight(Searcher searcher) throws IOException {\n    return new QueryWeightWrapper(createWeight(searcher));\n  }\n\n","sourceOld":"  /**\n   * Expert: Constructs an appropriate {@link QueryWeight} implementation for\n   * this query.\n   * <p>\n   * Only implemented by primitive queries, which re-write to themselves.\n   * <p>\n   * <b>NOTE:</b> in 3.0 this method will throw\n   * {@link UnsupportedOperationException}. It is implemented now by calling\n   * {@link #createWeight(Searcher)} for backwards compatibility, for\n   * {@link Query} implementations that did not override it yet (but did\n   * override {@link #createWeight(Searcher)}).\n   */\n  // TODO (3.0): change to throw UnsupportedOperationException.\n  public QueryWeight createQueryWeight(Searcher searcher) throws IOException {\n    return new QueryWeightWrapper(weight(searcher));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe941135bdfc28c81e20b4d21422f8726af34925","date":1250040150,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/Query#createQueryWeight(Searcher).mjava","sourceNew":null,"sourceOld":"  /**\n   * Expert: Constructs an appropriate {@link QueryWeight} implementation for\n   * this query.\n   * <p>\n   * Only implemented by primitive queries, which re-write to themselves.\n   * <p>\n   * <b>NOTE:</b> in 3.0 this method will throw\n   * {@link UnsupportedOperationException}. It is implemented now by calling\n   * {@link #createWeight(Searcher)} for backwards compatibility, for\n   * {@link Query} implementations that did not override it yet (but did\n   * override {@link #createWeight(Searcher)}).\n   */\n  // TODO (3.0): change to throw UnsupportedOperationException.\n  public QueryWeight createQueryWeight(Searcher searcher) throws IOException {\n    return new QueryWeightWrapper(createWeight(searcher));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b36c2a5e053ad7397260115fc56148248ae21fa":["052fac7830290bd38a04cddee1a121ee07656b56"],"e43b9b184aa8424126c7aec1f54a6e402cb3c29d":["7b36c2a5e053ad7397260115fc56148248ae21fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fe941135bdfc28c81e20b4d21422f8726af34925":["e43b9b184aa8424126c7aec1f54a6e402cb3c29d"],"052fac7830290bd38a04cddee1a121ee07656b56":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fe941135bdfc28c81e20b4d21422f8726af34925"]},"commit2Childs":{"7b36c2a5e053ad7397260115fc56148248ae21fa":["e43b9b184aa8424126c7aec1f54a6e402cb3c29d"],"e43b9b184aa8424126c7aec1f54a6e402cb3c29d":["fe941135bdfc28c81e20b4d21422f8726af34925"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["052fac7830290bd38a04cddee1a121ee07656b56"],"fe941135bdfc28c81e20b4d21422f8726af34925":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"052fac7830290bd38a04cddee1a121ee07656b56":["7b36c2a5e053ad7397260115fc56148248ae21fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}