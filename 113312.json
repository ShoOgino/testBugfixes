{"path":"solr/contrib/solr-mr/src/java/org/apache/solr/hadoop/MapReduceIndexerTool#addInputFilesRecursively(Path,Writer,FileSystem,PathFilter).mjava","commits":[{"id":"d6e604e9030fb0cabf0c5a85ae6039921a81419c","date":1386009743,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/solr-mr/src/java/org/apache/solr/hadoop/MapReduceIndexerTool#addInputFilesRecursively(Path,Writer,FileSystem,PathFilter).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Add the specified file to the input set, if path is a directory then\n   * add the files contained therein.\n   */\n  private long addInputFilesRecursively(Path path, Writer writer, FileSystem fs, PathFilter pathFilter) throws IOException {\n    long numFiles = 0;\n    for (FileStatus stat : fs.listStatus(path, pathFilter)) {\n      LOG.debug(\"Adding path {}\", stat.getPath());\n      if (stat.isDirectory()) {\n        numFiles += addInputFilesRecursively(stat.getPath(), writer, fs, pathFilter);\n      } else {\n        writer.write(stat.getPath().toString() + \"\\n\");\n        numFiles++;\n      }\n    }\n    return numFiles;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70f91c8322fbffe3a3a897ef20ea19119cac10cd","date":1386170124,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/map-reduce/src/java/org/apache/solr/hadoop/MapReduceIndexerTool#addInputFilesRecursively(Path,Writer,FileSystem,PathFilter).mjava","pathOld":"solr/contrib/solr-mr/src/java/org/apache/solr/hadoop/MapReduceIndexerTool#addInputFilesRecursively(Path,Writer,FileSystem,PathFilter).mjava","sourceNew":"  /**\n   * Add the specified file to the input set, if path is a directory then\n   * add the files contained therein.\n   */\n  private long addInputFilesRecursively(Path path, Writer writer, FileSystem fs, PathFilter pathFilter) throws IOException {\n    long numFiles = 0;\n    for (FileStatus stat : fs.listStatus(path, pathFilter)) {\n      LOG.debug(\"Adding path {}\", stat.getPath());\n      if (stat.isDirectory()) {\n        numFiles += addInputFilesRecursively(stat.getPath(), writer, fs, pathFilter);\n      } else {\n        writer.write(stat.getPath().toString() + \"\\n\");\n        numFiles++;\n      }\n    }\n    return numFiles;\n  }\n\n","sourceOld":"  /**\n   * Add the specified file to the input set, if path is a directory then\n   * add the files contained therein.\n   */\n  private long addInputFilesRecursively(Path path, Writer writer, FileSystem fs, PathFilter pathFilter) throws IOException {\n    long numFiles = 0;\n    for (FileStatus stat : fs.listStatus(path, pathFilter)) {\n      LOG.debug(\"Adding path {}\", stat.getPath());\n      if (stat.isDirectory()) {\n        numFiles += addInputFilesRecursively(stat.getPath(), writer, fs, pathFilter);\n      } else {\n        writer.write(stat.getPath().toString() + \"\\n\");\n        numFiles++;\n      }\n    }\n    return numFiles;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70f91c8322fbffe3a3a897ef20ea19119cac10cd":["d6e604e9030fb0cabf0c5a85ae6039921a81419c"],"d6e604e9030fb0cabf0c5a85ae6039921a81419c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["70f91c8322fbffe3a3a897ef20ea19119cac10cd"]},"commit2Childs":{"70f91c8322fbffe3a3a897ef20ea19119cac10cd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d6e604e9030fb0cabf0c5a85ae6039921a81419c":["70f91c8322fbffe3a3a897ef20ea19119cac10cd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d6e604e9030fb0cabf0c5a85ae6039921a81419c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}