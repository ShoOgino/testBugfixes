{"path":"solr/core/src/test/org/apache/solr/search/ChooseOneWordQueryBuilder#implGetQuery(Element,boolean).mjava","commits":[{"id":"8adbe9599e1f40415314d303714aa799ccedcbfa","date":1485884320,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/ChooseOneWordQueryBuilder#implGetQuery(Element,boolean).mjava","pathOld":"/dev/null","sourceNew":"  public Query implGetQuery(Element e, boolean span) throws ParserException {\n    Term term = null;\n    final String fieldName = DOMUtils.getAttributeWithInheritanceOrFail(e, \"fieldName\");\n    for (Node node = e.getFirstChild(); node != null; node = node.getNextSibling()) {\n      if (node.getNodeType() == Node.ELEMENT_NODE &&\n          node.getNodeName().equals(\"Word\")) {\n        final String word = DOMUtils.getNonBlankTextOrFail((Element) node);\n        final Term t = new Term(fieldName, word);\n        if (term == null || term.text().length() < t.text().length()) {\n          term = t;\n        }\n      }\n    }\n    return (span ? new SpanTermQuery(term) : new TermQuery(term));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c3523a0ab04c3002eee3896c75ea5f10f388bcc","date":1485968422,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/ChooseOneWordQueryBuilder#implGetQuery(Element,boolean).mjava","pathOld":"/dev/null","sourceNew":"  public Query implGetQuery(Element e, boolean span) throws ParserException {\n    Term term = null;\n    final String fieldName = DOMUtils.getAttributeWithInheritanceOrFail(e, \"fieldName\");\n    for (Node node = e.getFirstChild(); node != null; node = node.getNextSibling()) {\n      if (node.getNodeType() == Node.ELEMENT_NODE &&\n          node.getNodeName().equals(\"Word\")) {\n        final String word = DOMUtils.getNonBlankTextOrFail((Element) node);\n        final Term t = new Term(fieldName, word);\n        if (term == null || term.text().length() < t.text().length()) {\n          term = t;\n        }\n      }\n    }\n    return (span ? new SpanTermQuery(term) : new TermQuery(term));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8adbe9599e1f40415314d303714aa799ccedcbfa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8adbe9599e1f40415314d303714aa799ccedcbfa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8adbe9599e1f40415314d303714aa799ccedcbfa"]},"commit2Childs":{"8adbe9599e1f40415314d303714aa799ccedcbfa":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8adbe9599e1f40415314d303714aa799ccedcbfa","7c3523a0ab04c3002eee3896c75ea5f10f388bcc"],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}