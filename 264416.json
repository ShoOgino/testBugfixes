{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLengthFilter#testFilterNoPosIncr().mjava","commits":[{"id":"f714d3d16beb7d9cc74e7ae85c110a7976c62938","date":1296412234,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLengthFilter#testFilterNoPosIncr().mjava","pathOld":"/dev/null","sourceNew":"  public void testFilterNoPosIncr() throws Exception {\n    TokenStream stream = new WhitespaceTokenizer(TEST_VERSION_CURRENT, \n        new StringReader(\"short toolong evenmuchlongertext a ab toolong foo\"));\n    LengthFilter filter = new LengthFilter(false, stream, 2, 6);\n    assertTokenStreamContents(filter,\n      new String[]{\"short\", \"ab\", \"foo\"},\n      new int[]{1, 1, 1}\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["fcbc12aa8147f5203ca283e7252ba4280d6ffd16"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLengthFilter#testFilterNoPosIncr().mjava","pathOld":"/dev/null","sourceNew":"  public void testFilterNoPosIncr() throws Exception {\n    TokenStream stream = new WhitespaceTokenizer(TEST_VERSION_CURRENT, \n        new StringReader(\"short toolong evenmuchlongertext a ab toolong foo\"));\n    LengthFilter filter = new LengthFilter(false, stream, 2, 6);\n    assertTokenStreamContents(filter,\n      new String[]{\"short\", \"ab\", \"foo\"},\n      new int[]{1, 1, 1}\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLengthFilter#testFilterNoPosIncr().mjava","pathOld":"/dev/null","sourceNew":"  public void testFilterNoPosIncr() throws Exception {\n    TokenStream stream = new WhitespaceTokenizer(TEST_VERSION_CURRENT, \n        new StringReader(\"short toolong evenmuchlongertext a ab toolong foo\"));\n    LengthFilter filter = new LengthFilter(false, stream, 2, 6);\n    assertTokenStreamContents(filter,\n      new String[]{\"short\", \"ab\", \"foo\"},\n      new int[]{1, 1, 1}\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fcbc12aa8147f5203ca283e7252ba4280d6ffd16","date":1305663400,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLengthFilter#testFilterNoPosIncr().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLengthFilter#testFilterNoPosIncr().mjava","sourceNew":"  public void testFilterNoPosIncr() throws Exception {\n    TokenStream stream = new MockTokenizer(\n        new StringReader(\"short toolong evenmuchlongertext a ab toolong foo\"), MockTokenizer.WHITESPACE, false);\n    LengthFilter filter = new LengthFilter(false, stream, 2, 6);\n    assertTokenStreamContents(filter,\n      new String[]{\"short\", \"ab\", \"foo\"},\n      new int[]{1, 1, 1}\n    );\n  }\n\n","sourceOld":"  public void testFilterNoPosIncr() throws Exception {\n    TokenStream stream = new WhitespaceTokenizer(TEST_VERSION_CURRENT, \n        new StringReader(\"short toolong evenmuchlongertext a ab toolong foo\"));\n    LengthFilter filter = new LengthFilter(false, stream, 2, 6);\n    assertTokenStreamContents(filter,\n      new String[]{\"short\", \"ab\", \"foo\"},\n      new int[]{1, 1, 1}\n    );\n  }\n\n","bugFix":["f714d3d16beb7d9cc74e7ae85c110a7976c62938"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLengthFilter#testFilterNoPosIncr().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLengthFilter#testFilterNoPosIncr().mjava","sourceNew":"  public void testFilterNoPosIncr() throws Exception {\n    TokenStream stream = new MockTokenizer(\n        new StringReader(\"short toolong evenmuchlongertext a ab toolong foo\"), MockTokenizer.WHITESPACE, false);\n    LengthFilter filter = new LengthFilter(false, stream, 2, 6);\n    assertTokenStreamContents(filter,\n      new String[]{\"short\", \"ab\", \"foo\"},\n      new int[]{1, 1, 1}\n    );\n  }\n\n","sourceOld":"  public void testFilterNoPosIncr() throws Exception {\n    TokenStream stream = new WhitespaceTokenizer(TEST_VERSION_CURRENT, \n        new StringReader(\"short toolong evenmuchlongertext a ab toolong foo\"));\n    LengthFilter filter = new LengthFilter(false, stream, 2, 6);\n    assertTokenStreamContents(filter,\n      new String[]{\"short\", \"ab\", \"foo\"},\n      new int[]{1, 1, 1}\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLengthFilter#testFilterNoPosIncr().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLengthFilter#testFilterNoPosIncr().mjava","sourceNew":"  public void testFilterNoPosIncr() throws Exception {\n    TokenStream stream = new MockTokenizer(\n        new StringReader(\"short toolong evenmuchlongertext a ab toolong foo\"), MockTokenizer.WHITESPACE, false);\n    LengthFilter filter = new LengthFilter(false, stream, 2, 6);\n    assertTokenStreamContents(filter,\n      new String[]{\"short\", \"ab\", \"foo\"},\n      new int[]{1, 1, 1}\n    );\n  }\n\n","sourceOld":"  public void testFilterNoPosIncr() throws Exception {\n    TokenStream stream = new WhitespaceTokenizer(TEST_VERSION_CURRENT, \n        new StringReader(\"short toolong evenmuchlongertext a ab toolong foo\"));\n    LengthFilter filter = new LengthFilter(false, stream, 2, 6);\n    assertTokenStreamContents(filter,\n      new String[]{\"short\", \"ab\", \"foo\"},\n      new int[]{1, 1, 1}\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLengthFilter#testFilterNoPosIncr().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLengthFilter#testFilterNoPosIncr().mjava","sourceNew":"  public void testFilterNoPosIncr() throws Exception {\n    TokenStream stream = new MockTokenizer(\n        new StringReader(\"short toolong evenmuchlongertext a ab toolong foo\"), MockTokenizer.WHITESPACE, false);\n    LengthFilter filter = new LengthFilter(false, stream, 2, 6);\n    assertTokenStreamContents(filter,\n      new String[]{\"short\", \"ab\", \"foo\"},\n      new int[]{1, 1, 1}\n    );\n  }\n\n","sourceOld":"  public void testFilterNoPosIncr() throws Exception {\n    TokenStream stream = new MockTokenizer(\n        new StringReader(\"short toolong evenmuchlongertext a ab toolong foo\"), MockTokenizer.WHITESPACE, false);\n    LengthFilter filter = new LengthFilter(false, stream, 2, 6);\n    assertTokenStreamContents(filter,\n      new String[]{\"short\", \"ab\", \"foo\"},\n      new int[]{1, 1, 1}\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fcbc12aa8147f5203ca283e7252ba4280d6ffd16":["f714d3d16beb7d9cc74e7ae85c110a7976c62938"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["fcbc12aa8147f5203ca283e7252ba4280d6ffd16"],"f714d3d16beb7d9cc74e7ae85c110a7976c62938":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["29ef99d61cda9641b6250bf9567329a6e65f901d","fcbc12aa8147f5203ca283e7252ba4280d6ffd16"],"a3776dccca01c11e7046323cfad46a3b4a471233":["f714d3d16beb7d9cc74e7ae85c110a7976c62938","fcbc12aa8147f5203ca283e7252ba4280d6ffd16"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f714d3d16beb7d9cc74e7ae85c110a7976c62938"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f714d3d16beb7d9cc74e7ae85c110a7976c62938"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"fcbc12aa8147f5203ca283e7252ba4280d6ffd16":["b89678825b68eccaf09e6ab71675fc0b0af1e099","c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f714d3d16beb7d9cc74e7ae85c110a7976c62938":["fcbc12aa8147f5203ca283e7252ba4280d6ffd16","a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["c3a8a449466c1ff7ce2274fe73dab487256964b4"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f714d3d16beb7d9cc74e7ae85c110a7976c62938","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}