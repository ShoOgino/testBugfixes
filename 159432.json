{"path":"lucene/core/src/java/org/apache/lucene/search/similarities/DefaultSimilarity#setDiscountOverlaps(boolean).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/DefaultSimilarity#setDiscountOverlaps(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/similarities/DefaultSimilarity#setDiscountOverlaps(boolean).mjava","sourceNew":"  /** Determines whether overlap tokens (Tokens with\n   *  0 position increment) are ignored when computing\n   *  norm.  By default this is true, meaning overlap\n   *  tokens do not count when computing norms.\n   *\n   *  @lucene.experimental\n   *\n   *  @see #computeNorm\n   */\n  public void setDiscountOverlaps(boolean v) {\n    discountOverlaps = v;\n  }\n\n","sourceOld":"  /** Determines whether overlap tokens (Tokens with\n   *  0 position increment) are ignored when computing\n   *  norm.  By default this is true, meaning overlap\n   *  tokens do not count when computing norms.\n   *\n   *  @lucene.experimental\n   *\n   *  @see #computeNorm\n   */\n  public void setDiscountOverlaps(boolean v) {\n    discountOverlaps = v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81d0720146de53dd3a4a023d2a3d1089d86d748d","date":1442268215,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/ClassicSimilarity#setDiscountOverlaps(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/DefaultSimilarity#setDiscountOverlaps(boolean).mjava","sourceNew":"  /** Determines whether overlap tokens (Tokens with\n   *  0 position increment) are ignored when computing\n   *  norm.  By default this is true, meaning overlap\n   *  tokens do not count when computing norms.\n   *\n   *  @lucene.experimental\n   *\n   *  @see #computeNorm\n   */\n  public void setDiscountOverlaps(boolean v) {\n    discountOverlaps = v;\n  }\n\n","sourceOld":"  /** Determines whether overlap tokens (Tokens with\n   *  0 position increment) are ignored when computing\n   *  norm.  By default this is true, meaning overlap\n   *  tokens do not count when computing norms.\n   *\n   *  @lucene.experimental\n   *\n   *  @see #computeNorm\n   */\n  public void setDiscountOverlaps(boolean v) {\n    discountOverlaps = v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["81d0720146de53dd3a4a023d2a3d1089d86d748d"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["81d0720146de53dd3a4a023d2a3d1089d86d748d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}