{"path":"solr/core/src/test/org/apache/solr/handler/component/DistributedQueryComponentOptimizationTest#testDistribSinglePass().mjava","commits":[{"id":"5ebf70dabe6279454c5ff460bdea3f0dc2814a86","date":1463672611,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedQueryComponentOptimizationTest#testDistribSinglePass().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testDistribSinglePass() throws Exception {\n\n    QueryResponse rsp = cluster.getSolrClient().query(COLLECTION,\n        new SolrQuery(\"q\", \"*:*\", \"fl\", \"id,test_sS,score\", \"sort\", \"payload asc\", \"rows\", \"20\", \"distrib.singlePass\", \"true\"));\n    assertFieldValues(rsp.getResults(), id, \"7\", \"1\", \"6\", \"4\", \"2\", \"10\", \"12\", \"3\", \"5\", \"9\", \"8\", \"13\", \"19\", \"11\");\n    assertFieldValues(rsp.getResults(), \"test_sS\", \"27\", \"21\", \"26\", \"24\", \"22\", \"30\", \"32\", \"23\", \"25\", \"29\", \"28\", \"33\", null, \"31\");\n\n\n    QueryResponse nonDistribRsp = cluster.getSolrClient().query(COLLECTION,\n        new SolrQuery(\"q\", \"*:*\", \"fl\", \"id,test_sS,score\", \"sort\", \"payload asc\", \"rows\", \"20\"));\n    compareResponses(rsp, nonDistribRsp); // make sure distrib and distrib.singlePass return the same thing\n\n    nonDistribRsp = cluster.getSolrClient().query(COLLECTION,\n        new SolrQuery(\"q\", \"*:*\", \"fl\", \"score\", \"sort\", \"payload asc\", \"rows\", \"20\"));\n    rsp = cluster.getSolrClient().query(COLLECTION,\n        new SolrQuery(\"q\", \"*:*\", \"fl\", \"score\", \"sort\", \"payload asc\", \"rows\", \"20\", \"distrib.singlePass\", \"true\"));\n    compareResponses(rsp, nonDistribRsp); // make sure distrib and distrib.singlePass return the same thing\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedQueryComponentOptimizationTest#testDistribSinglePass().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testDistribSinglePass() throws Exception {\n\n    QueryResponse rsp = cluster.getSolrClient().query(COLLECTION,\n        new SolrQuery(\"q\", \"*:*\", \"fl\", \"id,test_sS,score\", \"sort\", \"payload asc\", \"rows\", \"20\", \"distrib.singlePass\", \"true\"));\n    assertFieldValues(rsp.getResults(), id, \"7\", \"1\", \"6\", \"4\", \"2\", \"10\", \"12\", \"3\", \"5\", \"9\", \"8\", \"13\", \"19\", \"11\");\n    assertFieldValues(rsp.getResults(), \"test_sS\", \"27\", \"21\", \"26\", \"24\", \"22\", \"30\", \"32\", \"23\", \"25\", \"29\", \"28\", \"33\", null, \"31\");\n\n\n    QueryResponse nonDistribRsp = cluster.getSolrClient().query(COLLECTION,\n        new SolrQuery(\"q\", \"*:*\", \"fl\", \"id,test_sS,score\", \"sort\", \"payload asc\", \"rows\", \"20\"));\n    compareResponses(rsp, nonDistribRsp); // make sure distrib and distrib.singlePass return the same thing\n\n    nonDistribRsp = cluster.getSolrClient().query(COLLECTION,\n        new SolrQuery(\"q\", \"*:*\", \"fl\", \"score\", \"sort\", \"payload asc\", \"rows\", \"20\"));\n    rsp = cluster.getSolrClient().query(COLLECTION,\n        new SolrQuery(\"q\", \"*:*\", \"fl\", \"score\", \"sort\", \"payload asc\", \"rows\", \"20\", \"distrib.singlePass\", \"true\"));\n    compareResponses(rsp, nonDistribRsp); // make sure distrib and distrib.singlePass return the same thing\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedQueryComponentOptimizationTest#testDistribSinglePass().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testDistribSinglePass() throws Exception {\n\n    QueryResponse rsp = cluster.getSolrClient().query(COLLECTION,\n        new SolrQuery(\"q\", \"*:*\", \"fl\", \"id,test_sS,score\", \"sort\", \"payload asc\", \"rows\", \"20\", \"distrib.singlePass\", \"true\"));\n    assertFieldValues(rsp.getResults(), id, \"7\", \"1\", \"6\", \"4\", \"2\", \"10\", \"12\", \"3\", \"5\", \"9\", \"8\", \"13\", \"19\", \"11\");\n    assertFieldValues(rsp.getResults(), \"test_sS\", \"27\", \"21\", \"26\", \"24\", \"22\", \"30\", \"32\", \"23\", \"25\", \"29\", \"28\", \"33\", null, \"31\");\n\n\n    QueryResponse nonDistribRsp = cluster.getSolrClient().query(COLLECTION,\n        new SolrQuery(\"q\", \"*:*\", \"fl\", \"id,test_sS,score\", \"sort\", \"payload asc\", \"rows\", \"20\"));\n    compareResponses(rsp, nonDistribRsp); // make sure distrib and distrib.singlePass return the same thing\n\n    nonDistribRsp = cluster.getSolrClient().query(COLLECTION,\n        new SolrQuery(\"q\", \"*:*\", \"fl\", \"score\", \"sort\", \"payload asc\", \"rows\", \"20\"));\n    rsp = cluster.getSolrClient().query(COLLECTION,\n        new SolrQuery(\"q\", \"*:*\", \"fl\", \"score\", \"sort\", \"payload asc\", \"rows\", \"20\", \"distrib.singlePass\", \"true\"));\n    compareResponses(rsp, nonDistribRsp); // make sure distrib and distrib.singlePass return the same thing\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5ebf70dabe6279454c5ff460bdea3f0dc2814a86":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5ebf70dabe6279454c5ff460bdea3f0dc2814a86"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5ebf70dabe6279454c5ff460bdea3f0dc2814a86","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"5ebf70dabe6279454c5ff460bdea3f0dc2814a86":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}