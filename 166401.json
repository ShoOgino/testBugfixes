{"path":"lucene/src/test/org/apache/lucene/util/fst/TestFSTs#toBytesRef(IntsRef).mjava","commits":[{"id":"8be6e1e4fbbc94d90b78f175c03ff389b6949373","date":1306674752,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/fst/TestFSTs#toBytesRef(IntsRef).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs#toBytesRef(IntsRef).mjava","sourceNew":"  private static BytesRef toBytesRef(IntsRef ir) {\n    BytesRef br = new BytesRef(ir.length);\n    for(int i=0;i<ir.length;i++) {\n      int x = ir.ints[ir.offset+i];\n      assert x >= 0 && x <= 255;\n      br.bytes[i] = (byte) x;\n    }\n    br.length = ir.length;\n    return br;\n  }\n\n","sourceOld":"  private static BytesRef toBytesRef(IntsRef ir) {\n    BytesRef br = new BytesRef(ir.length);\n    for(int i=0;i<ir.length;i++) {\n      int x = ir.ints[ir.offset+i];\n      assert x >= 0 && x <= 255;\n      br.bytes[i] = (byte) x;\n    }\n    br.length = ir.length;\n    return br;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/fst/TestFSTs#toBytesRef(IntsRef).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs#toBytesRef(IntsRef).mjava","sourceNew":"  private static BytesRef toBytesRef(IntsRef ir) {\n    BytesRef br = new BytesRef(ir.length);\n    for(int i=0;i<ir.length;i++) {\n      int x = ir.ints[ir.offset+i];\n      assert x >= 0 && x <= 255;\n      br.bytes[i] = (byte) x;\n    }\n    br.length = ir.length;\n    return br;\n  }\n\n","sourceOld":"  private static BytesRef toBytesRef(IntsRef ir) {\n    BytesRef br = new BytesRef(ir.length);\n    for(int i=0;i<ir.length;i++) {\n      int x = ir.ints[ir.offset+i];\n      assert x >= 0 && x <= 255;\n      br.bytes[i] = (byte) x;\n    }\n    br.length = ir.length;\n    return br;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/fst/TestFSTs#toBytesRef(IntsRef).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs#toBytesRef(IntsRef).mjava","sourceNew":"  private static BytesRef toBytesRef(IntsRef ir) {\n    BytesRef br = new BytesRef(ir.length);\n    for(int i=0;i<ir.length;i++) {\n      int x = ir.ints[ir.offset+i];\n      assert x >= 0 && x <= 255;\n      br.bytes[i] = (byte) x;\n    }\n    br.length = ir.length;\n    return br;\n  }\n\n","sourceOld":"  private static BytesRef toBytesRef(IntsRef ir) {\n    BytesRef br = new BytesRef(ir.length);\n    for(int i=0;i<ir.length;i++) {\n      int x = ir.ints[ir.offset+i];\n      assert x >= 0 && x <= 255;\n      br.bytes[i] = (byte) x;\n    }\n    br.length = ir.length;\n    return br;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/fst/TestFSTs#toBytesRef(IntsRef).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/fst/TestFSTs#toBytesRef(IntsRef).mjava","sourceNew":"  private static BytesRef toBytesRef(IntsRef ir) {\n    BytesRef br = new BytesRef(ir.length);\n    for(int i=0;i<ir.length;i++) {\n      int x = ir.ints[ir.offset+i];\n      assert x >= 0 && x <= 255;\n      br.bytes[i] = (byte) x;\n    }\n    br.length = ir.length;\n    return br;\n  }\n\n","sourceOld":"  private static BytesRef toBytesRef(IntsRef ir) {\n    BytesRef br = new BytesRef(ir.length);\n    for(int i=0;i<ir.length;i++) {\n      int x = ir.ints[ir.offset+i];\n      assert x >= 0 && x <= 255;\n      br.bytes[i] = (byte) x;\n    }\n    br.length = ir.length;\n    return br;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8be6e1e4fbbc94d90b78f175c03ff389b6949373":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8be6e1e4fbbc94d90b78f175c03ff389b6949373"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["8be6e1e4fbbc94d90b78f175c03ff389b6949373"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8be6e1e4fbbc94d90b78f175c03ff389b6949373"]},"commit2Childs":{"8be6e1e4fbbc94d90b78f175c03ff389b6949373":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","3a119bbc8703c10faa329ec201c654b3a35a1e3e","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8be6e1e4fbbc94d90b78f175c03ff389b6949373","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}