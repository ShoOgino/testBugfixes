{"path":"modules/queries/src/java/org/apache/lucene/queries/mlt/MoreLikeThis#describeParams().mjava","commits":[{"id":"b7bae1b88906b69dec0d80b1a7afc3c98ec50fa1","date":1310609231,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/mlt/MoreLikeThis#describeParams().mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThis#describeParams().mjava","sourceNew":"  /**\n   * Describe the parameters that control how the \"more like this\" query is formed.\n   */\n  public String describeParams() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"\\t\").append(\"maxQueryTerms  : \").append(maxQueryTerms).append(\"\\n\");\n    sb.append(\"\\t\").append(\"minWordLen     : \").append(minWordLen).append(\"\\n\");\n    sb.append(\"\\t\").append(\"maxWordLen     : \").append(maxWordLen).append(\"\\n\");\n    sb.append(\"\\t\").append(\"fieldNames     : \");\n    String delim = \"\";\n    for (String fieldName : fieldNames) {\n      sb.append(delim).append(fieldName);\n      delim = \", \";\n    }\n    sb.append(\"\\n\");\n    sb.append(\"\\t\").append(\"boost          : \").append(boost).append(\"\\n\");\n    sb.append(\"\\t\").append(\"minTermFreq    : \").append(minTermFreq).append(\"\\n\");\n    sb.append(\"\\t\").append(\"minDocFreq     : \").append(minDocFreq).append(\"\\n\");\n    return sb.toString();\n  }\n\n","sourceOld":"  /**\n   * Describe the parameters that control how the \"more like this\" query is formed.\n   */\n  public String describeParams() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"\\t\").append(\"maxQueryTerms  : \").append(maxQueryTerms).append(\"\\n\");\n    sb.append(\"\\t\").append(\"minWordLen     : \").append(minWordLen).append(\"\\n\");\n    sb.append(\"\\t\").append(\"maxWordLen     : \").append(maxWordLen).append(\"\\n\");\n    sb.append(\"\\t\").append(\"fieldNames     : \");\n    String delim = \"\";\n    for (String fieldName : fieldNames) {\n      sb.append(delim).append(fieldName);\n      delim = \", \";\n    }\n    sb.append(\"\\n\");\n    sb.append(\"\\t\").append(\"boost          : \").append(boost).append(\"\\n\");\n    sb.append(\"\\t\").append(\"minTermFreq    : \").append(minTermFreq).append(\"\\n\");\n    sb.append(\"\\t\").append(\"minDocFreq     : \").append(minDocFreq).append(\"\\n\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/mlt/MoreLikeThis#describeParams().mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/mlt/MoreLikeThis#describeParams().mjava","sourceNew":"  /**\n   * Describe the parameters that control how the \"more like this\" query is formed.\n   */\n  public String describeParams() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"\\t\").append(\"maxQueryTerms  : \").append(maxQueryTerms).append(\"\\n\");\n    sb.append(\"\\t\").append(\"minWordLen     : \").append(minWordLen).append(\"\\n\");\n    sb.append(\"\\t\").append(\"maxWordLen     : \").append(maxWordLen).append(\"\\n\");\n    sb.append(\"\\t\").append(\"fieldNames     : \");\n    String delim = \"\";\n    for (String fieldName : fieldNames) {\n      sb.append(delim).append(fieldName);\n      delim = \", \";\n    }\n    sb.append(\"\\n\");\n    sb.append(\"\\t\").append(\"boost          : \").append(boost).append(\"\\n\");\n    sb.append(\"\\t\").append(\"minTermFreq    : \").append(minTermFreq).append(\"\\n\");\n    sb.append(\"\\t\").append(\"minDocFreq     : \").append(minDocFreq).append(\"\\n\");\n    return sb.toString();\n  }\n\n","sourceOld":"  /**\n   * Describe the parameters that control how the \"more like this\" query is formed.\n   */\n  public String describeParams() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"\\t\").append(\"maxQueryTerms  : \").append(maxQueryTerms).append(\"\\n\");\n    sb.append(\"\\t\").append(\"minWordLen     : \").append(minWordLen).append(\"\\n\");\n    sb.append(\"\\t\").append(\"maxWordLen     : \").append(maxWordLen).append(\"\\n\");\n    sb.append(\"\\t\").append(\"fieldNames     : \");\n    String delim = \"\";\n    for (String fieldName : fieldNames) {\n      sb.append(delim).append(fieldName);\n      delim = \", \";\n    }\n    sb.append(\"\\n\");\n    sb.append(\"\\t\").append(\"boost          : \").append(boost).append(\"\\n\");\n    sb.append(\"\\t\").append(\"minTermFreq    : \").append(minTermFreq).append(\"\\n\");\n    sb.append(\"\\t\").append(\"minDocFreq     : \").append(minDocFreq).append(\"\\n\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["b7bae1b88906b69dec0d80b1a7afc3c98ec50fa1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7bae1b88906b69dec0d80b1a7afc3c98ec50fa1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b7bae1b88906b69dec0d80b1a7afc3c98ec50fa1"],"b7bae1b88906b69dec0d80b1a7afc3c98ec50fa1":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}