{"path":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter#writeDoc(SortDoc,List[LeafReaderContext],FieldWriter[],FixedBitSet[],Writer).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter#writeDoc(SortDoc,List[LeafReaderContext],FieldWriter[],FixedBitSet[],Writer).mjava","pathOld":"/dev/null","sourceNew":"  protected void writeDoc(SortDoc sortDoc,\n                          List<LeafReaderContext> leaves,\n                          FieldWriter[] fieldWriters,\n                          FixedBitSet[] sets,\n                          Writer out) throws IOException{\n\n    int ord = sortDoc.ord;\n    FixedBitSet set = sets[ord];\n    set.clear(sortDoc.docId);\n    LeafReaderContext context = leaves.get(ord);\n    boolean needsComma = false;\n    for(FieldWriter fieldWriter : fieldWriters) {\n      if(needsComma) {\n        out.write(',');\n      }\n      fieldWriter.write(sortDoc.docId, context.reader(), out);\n      needsComma = true;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bf0d17d4afd2792a63ee45b11039e70a4e4bb4a9","date":1454264470,"type":3,"author":"jbernste","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter#writeDoc(SortDoc,List[LeafReaderContext],FieldWriter[],FixedBitSet[],Writer).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter#writeDoc(SortDoc,List[LeafReaderContext],FieldWriter[],FixedBitSet[],Writer).mjava","sourceNew":"  protected void writeDoc(SortDoc sortDoc,\n                          List<LeafReaderContext> leaves,\n                          FieldWriter[] fieldWriters,\n                          FixedBitSet[] sets,\n                          Writer out) throws IOException{\n\n    int ord = sortDoc.ord;\n    FixedBitSet set = sets[ord];\n    set.clear(sortDoc.docId);\n    LeafReaderContext context = leaves.get(ord);\n    int fieldIndex = 0;\n    for(FieldWriter fieldWriter : fieldWriters) {\n      if(fieldWriter.write(sortDoc.docId, context.reader(), out, fieldIndex)){\n        ++fieldIndex;\n      }\n    }\n  }\n\n","sourceOld":"  protected void writeDoc(SortDoc sortDoc,\n                          List<LeafReaderContext> leaves,\n                          FieldWriter[] fieldWriters,\n                          FixedBitSet[] sets,\n                          Writer out) throws IOException{\n\n    int ord = sortDoc.ord;\n    FixedBitSet set = sets[ord];\n    set.clear(sortDoc.docId);\n    LeafReaderContext context = leaves.get(ord);\n    boolean needsComma = false;\n    for(FieldWriter fieldWriter : fieldWriters) {\n      if(needsComma) {\n        out.write(',');\n      }\n      fieldWriter.write(sortDoc.docId, context.reader(), out);\n      needsComma = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter#writeDoc(SortDoc,List[LeafReaderContext],FieldWriter[],FixedBitSet[],Writer).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter#writeDoc(SortDoc,List[LeafReaderContext],FieldWriter[],FixedBitSet[],Writer).mjava","sourceNew":"  protected void writeDoc(SortDoc sortDoc,\n                          List<LeafReaderContext> leaves,\n                          FieldWriter[] fieldWriters,\n                          FixedBitSet[] sets,\n                          Writer out) throws IOException{\n\n    int ord = sortDoc.ord;\n    FixedBitSet set = sets[ord];\n    set.clear(sortDoc.docId);\n    LeafReaderContext context = leaves.get(ord);\n    int fieldIndex = 0;\n    for(FieldWriter fieldWriter : fieldWriters) {\n      if(fieldWriter.write(sortDoc.docId, context.reader(), out, fieldIndex)){\n        ++fieldIndex;\n      }\n    }\n  }\n\n","sourceOld":"  protected void writeDoc(SortDoc sortDoc,\n                          List<LeafReaderContext> leaves,\n                          FieldWriter[] fieldWriters,\n                          FixedBitSet[] sets,\n                          Writer out) throws IOException{\n\n    int ord = sortDoc.ord;\n    FixedBitSet set = sets[ord];\n    set.clear(sortDoc.docId);\n    LeafReaderContext context = leaves.get(ord);\n    boolean needsComma = false;\n    for(FieldWriter fieldWriter : fieldWriters) {\n      if(needsComma) {\n        out.write(',');\n      }\n      fieldWriter.write(sortDoc.docId, context.reader(), out);\n      needsComma = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"50f05d6b69cfaabd51b5d26cba4e3122f51fff83","date":1478603228,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SortingResponseWriter[ExportWriter]#writeDoc(SortDoc,List[LeafReaderContext],FieldWriter[],FixedBitSet[],Writer).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter#writeDoc(SortDoc,List[LeafReaderContext],FieldWriter[],FixedBitSet[],Writer).mjava","sourceNew":"  protected void writeDoc(SortDoc sortDoc,\n                          List<LeafReaderContext> leaves,\n                          FieldWriter[] fieldWriters,\n                          FixedBitSet[] sets,\n                          Writer out) throws IOException{\n\n    int ord = sortDoc.ord;\n    FixedBitSet set = sets[ord];\n    set.clear(sortDoc.docId);\n    LeafReaderContext context = leaves.get(ord);\n    int fieldIndex = 0;\n    for(FieldWriter fieldWriter : fieldWriters) {\n      if(fieldWriter.write(sortDoc.docId, context.reader(), out, fieldIndex)){\n        ++fieldIndex;\n      }\n    }\n  }\n\n","sourceOld":"  protected void writeDoc(SortDoc sortDoc,\n                          List<LeafReaderContext> leaves,\n                          FieldWriter[] fieldWriters,\n                          FixedBitSet[] sets,\n                          Writer out) throws IOException{\n\n    int ord = sortDoc.ord;\n    FixedBitSet set = sets[ord];\n    set.clear(sortDoc.docId);\n    LeafReaderContext context = leaves.get(ord);\n    int fieldIndex = 0;\n    for(FieldWriter fieldWriter : fieldWriters) {\n      if(fieldWriter.write(sortDoc.docId, context.reader(), out, fieldIndex)){\n        ++fieldIndex;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199dfa410f1fdbfd3294106b04096cce5ed34b21","date":1478812506,"type":5,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/ExportWriter#writeDoc(SortDoc,List[LeafReaderContext],EntryWriter).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter#writeDoc(SortDoc,List[LeafReaderContext],FieldWriter[],FixedBitSet[],Writer).mjava","sourceNew":"  protected void writeDoc(SortDoc sortDoc,\n                          List<LeafReaderContext> leaves,\n                          EntryWriter ew) throws IOException {\n\n    int ord = sortDoc.ord;\n    FixedBitSet set = sets[ord];\n    set.clear(sortDoc.docId);\n    LeafReaderContext context = leaves.get(ord);\n    int fieldIndex = 0;\n    for (FieldWriter fieldWriter : fieldWriters) {\n      if (fieldWriter.write(sortDoc.docId, context.reader(), ew, fieldIndex)) {\n        ++fieldIndex;\n      }\n    }\n  }\n\n","sourceOld":"  protected void writeDoc(SortDoc sortDoc,\n                          List<LeafReaderContext> leaves,\n                          FieldWriter[] fieldWriters,\n                          FixedBitSet[] sets,\n                          Writer out) throws IOException{\n\n    int ord = sortDoc.ord;\n    FixedBitSet set = sets[ord];\n    set.clear(sortDoc.docId);\n    LeafReaderContext context = leaves.get(ord);\n    int fieldIndex = 0;\n    for(FieldWriter fieldWriter : fieldWriters) {\n      if(fieldWriter.write(sortDoc.docId, context.reader(), out, fieldIndex)){\n        ++fieldIndex;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"50f05d6b69cfaabd51b5d26cba4e3122f51fff83":["bf0d17d4afd2792a63ee45b11039e70a4e4bb4a9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["c9fb5f46e264daf5ba3860defe623a89d202dd87","bf0d17d4afd2792a63ee45b11039e70a4e4bb4a9"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["bf0d17d4afd2792a63ee45b11039e70a4e4bb4a9","50f05d6b69cfaabd51b5d26cba4e3122f51fff83"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["50f05d6b69cfaabd51b5d26cba4e3122f51fff83"],"bf0d17d4afd2792a63ee45b11039e70a4e4bb4a9":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"50f05d6b69cfaabd51b5d26cba4e3122f51fff83":["199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"199dfa410f1fdbfd3294106b04096cce5ed34b21":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","bf0d17d4afd2792a63ee45b11039e70a4e4bb4a9"],"bf0d17d4afd2792a63ee45b11039e70a4e4bb4a9":["50f05d6b69cfaabd51b5d26cba4e3122f51fff83","1e6acbaae7af722f17204ceccf0f7db5753eccf3","199dfa410f1fdbfd3294106b04096cce5ed34b21"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}