{"path":"src/solrj/org/apache/solr/client/solrj/util/ClientUtils#toContentStreams(String,String).mjava","commits":[{"id":"e3602d5eab954caecc726ab136ad580ac1ceb917","date":1228676831,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/solrj/org/apache/solr/client/solrj/util/ClientUtils#toContentStreams(String,String).mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/util/ClientUtils#toContentStreams(String,String).mjava","sourceNew":"  /**\n   * Take a string and make it an iterable ContentStream\n   */\n  public static Collection<ContentStream> toContentStreams( final String str, final String contentType )\n  {\n    if( str == null )\n      return null;\n\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>( 1 );\n    ContentStreamBase ccc = new ContentStreamBase.StringStream( str );\n    ccc.setContentType( contentType );\n    streams.add( ccc );\n    return streams;\n  }\n\n","sourceOld":"  /**\n   * Take a string and make it an iterable ContentStream\n   */\n  public static Collection<ContentStream> toContentStreams( final String str, final String contentType )\n  {\n    if( str == null )\n      return null;\n\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>( 1 );\n    ContentStreamBase ccc = new ContentStreamBase.StringStream( str );\n    ccc.setContentType( contentType );\n    streams.add( ccc );\n    return streams;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/solrj/org/apache/solr/client/solrj/util/ClientUtils#toContentStreams(String,String).mjava","pathOld":"src/solrj/org/apache/solr/client/solrj/util/ClientUtils#toContentStreams(String,String).mjava","sourceNew":"  /**\n   * Take a string and make it an iterable ContentStream\n   */\n  public static Collection<ContentStream> toContentStreams( final String str, final String contentType )\n  {\n    if( str == null )\n      return null;\n\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>( 1 );\n    ContentStreamBase ccc = new ContentStreamBase.StringStream( str );\n    ccc.setContentType( contentType );\n    streams.add( ccc );\n    return streams;\n  }\n\n","sourceOld":"  /**\n   * Take a string and make it an iterable ContentStream\n   */\n  public static Collection<ContentStream> toContentStreams( final String str, final String contentType )\n  {\n    if( str == null )\n      return null;\n\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>( 1 );\n    ContentStreamBase ccc = new ContentStreamBase.StringStream( str );\n    ccc.setContentType( contentType );\n    streams.add( ccc );\n    return streams;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}