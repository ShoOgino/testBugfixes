{"path":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#getNumCommits(CommonsHttpSolrServer).mjava","commits":[{"id":"d9652a1b09ee0e7d6533fdfedf1d7c4d9036b49d","date":1330786058,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#getNumCommits(CommonsHttpSolrServer).mjava","pathOld":"/dev/null","sourceNew":"  private Long getNumCommits(CommonsHttpSolrServer solrServer) throws MalformedURLException,\n      SolrServerException, IOException {\n    CommonsHttpSolrServer server = new CommonsHttpSolrServer(solrServer.getBaseURL());\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"qt\", \"/admin/mbeans?key=updateHandler&stats=true\");\n    // use generic request to avoid extra processing of queries\n    QueryRequest req = new QueryRequest(params);\n    NamedList<Object> resp = server.request(req);\n    NamedList mbeans = (NamedList) resp.get(\"solr-mbeans\");\n    NamedList uhandlerCat = (NamedList) mbeans.get(\"UPDATEHANDLER\");\n    NamedList uhandler = (NamedList) uhandlerCat.get(\"updateHandler\");\n    NamedList stats = (NamedList) uhandler.get(\"stats\");\n    Long commits = (Long) stats.get(\"commits\");\n    System.out.println(\"resp:\" + resp);\n    return commits;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e90f09c8e56fa270cdbf5adc76067c67249dac10","date":1330792705,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#getNumCommits(CommonsHttpSolrServer).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#getNumCommits(CommonsHttpSolrServer).mjava","sourceNew":"  private Long getNumCommits(CommonsHttpSolrServer solrServer) throws MalformedURLException,\n      SolrServerException, IOException {\n    CommonsHttpSolrServer server = new CommonsHttpSolrServer(solrServer.getBaseURL());\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"qt\", \"/admin/mbeans?key=updateHandler&stats=true\");\n    // use generic request to avoid extra processing of queries\n    QueryRequest req = new QueryRequest(params);\n    NamedList<Object> resp = server.request(req);\n    NamedList mbeans = (NamedList) resp.get(\"solr-mbeans\");\n    NamedList uhandlerCat = (NamedList) mbeans.get(\"UPDATEHANDLER\");\n    NamedList uhandler = (NamedList) uhandlerCat.get(\"updateHandler\");\n    NamedList stats = (NamedList) uhandler.get(\"stats\");\n    Long commits = (Long) stats.get(\"commits\");\n\n    return commits;\n  }\n\n","sourceOld":"  private Long getNumCommits(CommonsHttpSolrServer solrServer) throws MalformedURLException,\n      SolrServerException, IOException {\n    CommonsHttpSolrServer server = new CommonsHttpSolrServer(solrServer.getBaseURL());\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"qt\", \"/admin/mbeans?key=updateHandler&stats=true\");\n    // use generic request to avoid extra processing of queries\n    QueryRequest req = new QueryRequest(params);\n    NamedList<Object> resp = server.request(req);\n    NamedList mbeans = (NamedList) resp.get(\"solr-mbeans\");\n    NamedList uhandlerCat = (NamedList) mbeans.get(\"UPDATEHANDLER\");\n    NamedList uhandler = (NamedList) uhandlerCat.get(\"updateHandler\");\n    NamedList stats = (NamedList) uhandler.get(\"stats\");\n    Long commits = (Long) stats.get(\"commits\");\n    System.out.println(\"resp:\" + resp);\n    return commits;\n  }\n\n","bugFix":null,"bugIntro":["7ea7454b4afcb5dc9f7504f83d77b134df2b7c57"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#getNumCommits(CommonsHttpSolrServer).mjava","pathOld":"/dev/null","sourceNew":"  private Long getNumCommits(CommonsHttpSolrServer solrServer) throws MalformedURLException,\n      SolrServerException, IOException {\n    CommonsHttpSolrServer server = new CommonsHttpSolrServer(solrServer.getBaseURL());\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"qt\", \"/admin/mbeans?key=updateHandler&stats=true\");\n    // use generic request to avoid extra processing of queries\n    QueryRequest req = new QueryRequest(params);\n    NamedList<Object> resp = server.request(req);\n    NamedList mbeans = (NamedList) resp.get(\"solr-mbeans\");\n    NamedList uhandlerCat = (NamedList) mbeans.get(\"UPDATEHANDLER\");\n    NamedList uhandler = (NamedList) uhandlerCat.get(\"updateHandler\");\n    NamedList stats = (NamedList) uhandler.get(\"stats\");\n    Long commits = (Long) stats.get(\"commits\");\n\n    return commits;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7321b77a7bc3edfebd637ef273e9dfaa9969eba6","date":1333023097,"type":5,"author":"Sami Siren","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#getNumCommits(HttpSolrServer).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#getNumCommits(CommonsHttpSolrServer).mjava","sourceNew":"  private Long getNumCommits(HttpSolrServer solrServer) throws MalformedURLException,\n      SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(solrServer.getBaseURL());\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"qt\", \"/admin/mbeans?key=updateHandler&stats=true\");\n    // use generic request to avoid extra processing of queries\n    QueryRequest req = new QueryRequest(params);\n    NamedList<Object> resp = server.request(req);\n    NamedList mbeans = (NamedList) resp.get(\"solr-mbeans\");\n    NamedList uhandlerCat = (NamedList) mbeans.get(\"UPDATEHANDLER\");\n    NamedList uhandler = (NamedList) uhandlerCat.get(\"updateHandler\");\n    NamedList stats = (NamedList) uhandler.get(\"stats\");\n    Long commits = (Long) stats.get(\"commits\");\n\n    return commits;\n  }\n\n","sourceOld":"  private Long getNumCommits(CommonsHttpSolrServer solrServer) throws MalformedURLException,\n      SolrServerException, IOException {\n    CommonsHttpSolrServer server = new CommonsHttpSolrServer(solrServer.getBaseURL());\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"qt\", \"/admin/mbeans?key=updateHandler&stats=true\");\n    // use generic request to avoid extra processing of queries\n    QueryRequest req = new QueryRequest(params);\n    NamedList<Object> resp = server.request(req);\n    NamedList mbeans = (NamedList) resp.get(\"solr-mbeans\");\n    NamedList uhandlerCat = (NamedList) mbeans.get(\"UPDATEHANDLER\");\n    NamedList uhandler = (NamedList) uhandlerCat.get(\"updateHandler\");\n    NamedList stats = (NamedList) uhandler.get(\"stats\");\n    Long commits = (Long) stats.get(\"commits\");\n\n    return commits;\n  }\n\n","bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"e90f09c8e56fa270cdbf5adc76067c67249dac10":["d9652a1b09ee0e7d6533fdfedf1d7c4d9036b49d"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e90f09c8e56fa270cdbf5adc76067c67249dac10"],"d9652a1b09ee0e7d6533fdfedf1d7c4d9036b49d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["e90f09c8e56fa270cdbf5adc76067c67249dac10"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"]},"commit2Childs":{"e90f09c8e56fa270cdbf5adc76067c67249dac10":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"d9652a1b09ee0e7d6533fdfedf1d7c4d9036b49d":["e90f09c8e56fa270cdbf5adc76067c67249dac10"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","d9652a1b09ee0e7d6533fdfedf1d7c4d9036b49d"],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}