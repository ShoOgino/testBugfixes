{"path":"lucene/core/src/java/org/apache/lucene/util/FixedBitSet.FixedBitSetIterator#nextDoc().mjava","commits":[{"id":"3995f83351082af8ae83bb017e63c56818fc1568","date":1392047063,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/FixedBitSet.FixedBitSetIterator#nextDoc().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public int nextDoc() throws IOException {\n      if (doc == NO_MORE_DOCS || ++doc >= numBits) {\n        return doc = NO_MORE_DOCS;\n      }\n      int i = doc >> 6;\n      final int subIndex = doc & 0x3f;      // index within the word\n      long word = bits[i] >> subIndex;  // skip all the bits to the right of index\n      \n      if (word != 0) {\n        return doc = doc + Long.numberOfTrailingZeros(word);\n      }\n      \n      while (++i < numWords) {\n        word = bits[i];\n        if (word != 0) {\n          return doc = (i << 6) + Long.numberOfTrailingZeros(word);\n        }\n      }\n      \n      return doc = NO_MORE_DOCS;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a69cf7f1b4cac5d5b1363402b565cd535f13e6a1","date":1392536197,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/FixedBitSet.FixedBitSetIterator#nextDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/FixedBitSet.FixedBitSetIterator#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() {\n      if (doc == NO_MORE_DOCS || ++doc >= numBits) {\n        return doc = NO_MORE_DOCS;\n      }\n      int i = doc >> 6;\n      final int subIndex = doc & 0x3f;      // index within the word\n      long word = bits[i] >> subIndex;  // skip all the bits to the right of index\n      \n      if (word != 0) {\n        return doc = doc + Long.numberOfTrailingZeros(word);\n      }\n      \n      while (++i < numWords) {\n        word = bits[i];\n        if (word != 0) {\n          return doc = (i << 6) + Long.numberOfTrailingZeros(word);\n        }\n      }\n      \n      return doc = NO_MORE_DOCS;\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() throws IOException {\n      if (doc == NO_MORE_DOCS || ++doc >= numBits) {\n        return doc = NO_MORE_DOCS;\n      }\n      int i = doc >> 6;\n      final int subIndex = doc & 0x3f;      // index within the word\n      long word = bits[i] >> subIndex;  // skip all the bits to the right of index\n      \n      if (word != 0) {\n        return doc = doc + Long.numberOfTrailingZeros(word);\n      }\n      \n      while (++i < numWords) {\n        word = bits[i];\n        if (word != 0) {\n          return doc = (i << 6) + Long.numberOfTrailingZeros(word);\n        }\n      }\n      \n      return doc = NO_MORE_DOCS;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55cd30e9e9e71e141455bae8e74401676f036658","date":1406760593,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/FixedBitSet.FixedBitSetIterator#nextDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/FixedBitSet.FixedBitSetIterator#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() {\n      if (doc == NO_MORE_DOCS || ++doc >= numBits) {\n        return doc = NO_MORE_DOCS;\n      }\n      int i = doc >> 6;\n      long word = bits[i] >> doc;  // skip all the bits to the right of index\n      \n      if (word != 0) {\n        return doc = doc + Long.numberOfTrailingZeros(word);\n      }\n      \n      while (++i < numWords) {\n        word = bits[i];\n        if (word != 0) {\n          return doc = (i << 6) + Long.numberOfTrailingZeros(word);\n        }\n      }\n      \n      return doc = NO_MORE_DOCS;\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() {\n      if (doc == NO_MORE_DOCS || ++doc >= numBits) {\n        return doc = NO_MORE_DOCS;\n      }\n      int i = doc >> 6;\n      final int subIndex = doc & 0x3f;      // index within the word\n      long word = bits[i] >> subIndex;  // skip all the bits to the right of index\n      \n      if (word != 0) {\n        return doc = doc + Long.numberOfTrailingZeros(word);\n      }\n      \n      while (++i < numWords) {\n        word = bits[i];\n        if (word != 0) {\n          return doc = (i << 6) + Long.numberOfTrailingZeros(word);\n        }\n      }\n      \n      return doc = NO_MORE_DOCS;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d17035b3b6e3a8b5fb11ad1d447bc1124a06635b","date":1413468113,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/FixedBitSet.FixedBitSetIterator#nextDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/FixedBitSet.FixedBitSetIterator#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() {\n      return advance(doc + 1);\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() {\n      if (doc == NO_MORE_DOCS || ++doc >= numBits) {\n        return doc = NO_MORE_DOCS;\n      }\n      int i = doc >> 6;\n      long word = bits[i] >> doc;  // skip all the bits to the right of index\n      \n      if (word != 0) {\n        return doc = doc + Long.numberOfTrailingZeros(word);\n      }\n      \n      while (++i < numWords) {\n        word = bits[i];\n        if (word != 0) {\n          return doc = (i << 6) + Long.numberOfTrailingZeros(word);\n        }\n      }\n      \n      return doc = NO_MORE_DOCS;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a22eafe3f72a4c2945eaad9547e6c78816978f4","date":1413956657,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/FixedBitSet.FixedBitSetIterator#nextDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/FixedBitSet.FixedBitSetIterator#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() {\n      return advance(doc + 1);\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() {\n      if (doc == NO_MORE_DOCS || ++doc >= numBits) {\n        return doc = NO_MORE_DOCS;\n      }\n      int i = doc >> 6;\n      long word = bits[i] >> doc;  // skip all the bits to the right of index\n      \n      if (word != 0) {\n        return doc = doc + Long.numberOfTrailingZeros(word);\n      }\n      \n      while (++i < numWords) {\n        word = bits[i];\n        if (word != 0) {\n          return doc = (i << 6) + Long.numberOfTrailingZeros(word);\n        }\n      }\n      \n      return doc = NO_MORE_DOCS;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e","date":1414135939,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/FixedBitSet.FixedBitSetIterator#nextDoc().mjava","sourceNew":null,"sourceOld":"    @Override\n    public int nextDoc() {\n      return advance(doc + 1);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a22eafe3f72a4c2945eaad9547e6c78816978f4":["55cd30e9e9e71e141455bae8e74401676f036658","d17035b3b6e3a8b5fb11ad1d447bc1124a06635b"],"a69cf7f1b4cac5d5b1363402b565cd535f13e6a1":["3995f83351082af8ae83bb017e63c56818fc1568"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e":["d17035b3b6e3a8b5fb11ad1d447bc1124a06635b"],"55cd30e9e9e71e141455bae8e74401676f036658":["a69cf7f1b4cac5d5b1363402b565cd535f13e6a1"],"d17035b3b6e3a8b5fb11ad1d447bc1124a06635b":["55cd30e9e9e71e141455bae8e74401676f036658"],"3995f83351082af8ae83bb017e63c56818fc1568":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0abcec02c9851c46c70a75bd42fb6e4d5348ac9e"]},"commit2Childs":{"0a22eafe3f72a4c2945eaad9547e6c78816978f4":[],"a69cf7f1b4cac5d5b1363402b565cd535f13e6a1":["55cd30e9e9e71e141455bae8e74401676f036658"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3995f83351082af8ae83bb017e63c56818fc1568"],"55cd30e9e9e71e141455bae8e74401676f036658":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","d17035b3b6e3a8b5fb11ad1d447bc1124a06635b"],"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d17035b3b6e3a8b5fb11ad1d447bc1124a06635b":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","0abcec02c9851c46c70a75bd42fb6e4d5348ac9e"],"3995f83351082af8ae83bb017e63c56818fc1568":["a69cf7f1b4cac5d5b1363402b565cd535f13e6a1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}