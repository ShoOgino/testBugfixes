{"path":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","sourceNew":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n    \t  message(\"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory);\n        if (infoStream != null)\n          message(\"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        setRollbackSegmentInfos(pendingCommit);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        deleter.decRef(pendingCommit);\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null)\n        message(\"commit: pendingCommit == null; skip\");\n\n    if (infoStream != null)\n      message(\"commit: done\");\n  }\n\n","sourceOld":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n    \t  message(\"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory);\n        if (infoStream != null)\n          message(\"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        setRollbackSegmentInfos(pendingCommit);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        deleter.decRef(pendingCommit);\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null)\n        message(\"commit: pendingCommit == null; skip\");\n\n    if (infoStream != null)\n      message(\"commit: done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ef87af8c7bd0f8429622b83aa74202383f2e757","date":1280262785,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","sourceNew":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n        message(\"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory);\n        if (infoStream != null)\n          message(\"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        setRollbackSegmentInfos(pendingCommit);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        deleter.decRef(pendingCommit);\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null)\n        message(\"commit: pendingCommit == null; skip\");\n\n    if (infoStream != null)\n      message(\"commit: done\");\n  }\n\n","sourceOld":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n    \t  message(\"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory);\n        if (infoStream != null)\n          message(\"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        setRollbackSegmentInfos(pendingCommit);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        deleter.decRef(pendingCommit);\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null)\n        message(\"commit: pendingCommit == null; skip\");\n\n    if (infoStream != null)\n      message(\"commit: done\");\n  }\n\n","bugFix":["2993c85d947e3191bba14229ea72fd5675d048e2"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"975460c64e0309e8a78d230321879ec18e65dc0a","date":1281550753,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","sourceNew":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n    \t  message(\"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory);\n        if (infoStream != null)\n          message(\"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        setRollbackSegmentInfos(pendingCommit);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        // Matches the incRef done in startCommit:\n        deleter.decRef(pendingCommit);\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null)\n        message(\"commit: pendingCommit == null; skip\");\n\n    if (infoStream != null)\n      message(\"commit: done\");\n  }\n\n","sourceOld":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n    \t  message(\"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory);\n        if (infoStream != null)\n          message(\"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        setRollbackSegmentInfos(pendingCommit);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        deleter.decRef(pendingCommit);\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null)\n        message(\"commit: pendingCommit == null; skip\");\n\n    if (infoStream != null)\n      message(\"commit: done\");\n  }\n\n","bugFix":null,"bugIntro":["47d5b6b2c183bf4deaffb52b7cb8dec16c8dcf0f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"257da767277782760db0814096b999899995b2b1","date":1289498882,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","sourceNew":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n    \t  message(\"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory);\n        if (infoStream != null)\n          message(\"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        setRollbackSegmentInfos(pendingCommit);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        // Matches the incRef done in startCommit:\n        deleter.decRef(pendingCommit);\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null) {\n      message(\"commit: pendingCommit == null; skip\");\n    }\n\n    if (infoStream != null) {\n      message(\"commit: done\");\n    }\n  }\n\n","sourceOld":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n    \t  message(\"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory);\n        if (infoStream != null)\n          message(\"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        setRollbackSegmentInfos(pendingCommit);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        // Matches the incRef done in startCommit:\n        deleter.decRef(pendingCommit);\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null)\n        message(\"commit: pendingCommit == null; skip\");\n\n    if (infoStream != null)\n      message(\"commit: done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","sourceNew":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n    \t  message(\"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory);\n        if (infoStream != null)\n          message(\"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        setRollbackSegmentInfos(pendingCommit);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        // Matches the incRef done in startCommit:\n        deleter.decRef(pendingCommit);\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null) {\n      message(\"commit: pendingCommit == null; skip\");\n    }\n\n    if (infoStream != null) {\n      message(\"commit: done\");\n    }\n  }\n\n","sourceOld":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n    \t  message(\"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory);\n        if (infoStream != null)\n          message(\"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        setRollbackSegmentInfos(pendingCommit);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        // Matches the incRef done in startCommit:\n        deleter.decRef(pendingCommit);\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null)\n        message(\"commit: pendingCommit == null; skip\");\n\n    if (infoStream != null)\n      message(\"commit: done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","sourceNew":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n    \t  message(\"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory);\n        if (infoStream != null)\n          message(\"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        setRollbackSegmentInfos(pendingCommit);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        // Matches the incRef done in startCommit:\n        deleter.decRef(pendingCommit);\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null) {\n      message(\"commit: pendingCommit == null; skip\");\n    }\n\n    if (infoStream != null) {\n      message(\"commit: done\");\n    }\n  }\n\n","sourceOld":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n        message(\"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory);\n        if (infoStream != null)\n          message(\"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        setRollbackSegmentInfos(pendingCommit);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        deleter.decRef(pendingCommit);\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null)\n        message(\"commit: pendingCommit == null; skip\");\n\n    if (infoStream != null)\n      message(\"commit: done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"786a4d25ca958a1f315a9d6a74f0441fdafcd522","date":1305734256,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","sourceNew":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n    \t  message(\"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory);\n        if (infoStream != null)\n          message(\"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        rollbackSegments = segmentInfos.createBackupSegmentInfos(true);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        // Matches the incRef done in startCommit:\n        deleter.decRef(pendingCommit);\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null) {\n      message(\"commit: pendingCommit == null; skip\");\n    }\n\n    if (infoStream != null) {\n      message(\"commit: done\");\n    }\n  }\n\n","sourceOld":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n    \t  message(\"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory);\n        if (infoStream != null)\n          message(\"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        setRollbackSegmentInfos(pendingCommit);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        // Matches the incRef done in startCommit:\n        deleter.decRef(pendingCommit);\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null) {\n      message(\"commit: pendingCommit == null; skip\");\n    }\n\n    if (infoStream != null) {\n      message(\"commit: done\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0035862d07d72e7309c9297dec37bee2112db2d5","date":1305735389,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","sourceNew":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n    \t  message(\"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory);\n        if (infoStream != null)\n          message(\"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        rollbackSegments = pendingCommit.createBackupSegmentInfos(true);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        // Matches the incRef done in startCommit:\n        deleter.decRef(pendingCommit);\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null) {\n      message(\"commit: pendingCommit == null; skip\");\n    }\n\n    if (infoStream != null) {\n      message(\"commit: done\");\n    }\n  }\n\n","sourceOld":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n    \t  message(\"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory);\n        if (infoStream != null)\n          message(\"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        rollbackSegments = segmentInfos.createBackupSegmentInfos(true);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        // Matches the incRef done in startCommit:\n        deleter.decRef(pendingCommit);\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null) {\n      message(\"commit: pendingCommit == null; skip\");\n    }\n\n    if (infoStream != null) {\n      message(\"commit: done\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","sourceNew":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n    \t  message(\"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory);\n        if (infoStream != null)\n          message(\"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        rollbackSegments = segmentInfos.createBackupSegmentInfos(true);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        // Matches the incRef done in startCommit:\n        deleter.decRef(pendingCommit);\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null) {\n      message(\"commit: pendingCommit == null; skip\");\n    }\n\n    if (infoStream != null) {\n      message(\"commit: done\");\n    }\n  }\n\n","sourceOld":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n    \t  message(\"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory);\n        if (infoStream != null)\n          message(\"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        setRollbackSegmentInfos(pendingCommit);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        // Matches the incRef done in startCommit:\n        deleter.decRef(pendingCommit);\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null) {\n      message(\"commit: pendingCommit == null; skip\");\n    }\n\n    if (infoStream != null) {\n      message(\"commit: done\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","sourceNew":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n    \t  message(\"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory);\n        if (infoStream != null)\n          message(\"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        rollbackSegments = pendingCommit.createBackupSegmentInfos(true);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        // Matches the incRef done in startCommit:\n        deleter.decRef(pendingCommit);\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null) {\n      message(\"commit: pendingCommit == null; skip\");\n    }\n\n    if (infoStream != null) {\n      message(\"commit: done\");\n    }\n  }\n\n","sourceOld":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n    \t  message(\"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory);\n        if (infoStream != null)\n          message(\"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        setRollbackSegmentInfos(pendingCommit);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        // Matches the incRef done in startCommit:\n        deleter.decRef(pendingCommit);\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null) {\n      message(\"commit: pendingCommit == null; skip\");\n    }\n\n    if (infoStream != null) {\n      message(\"commit: done\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a","date":1306150983,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","sourceNew":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n    \t  message(\"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory);\n        if (infoStream != null)\n          message(\"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        rollbackSegments = pendingCommit.createBackupSegmentInfos(true);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        // Matches the incRef done in startCommit:\n        deleter.decRef(pendingCommit);\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null) {\n      message(\"commit: pendingCommit == null; skip\");\n    }\n\n    if (infoStream != null) {\n      message(\"commit: done\");\n    }\n  }\n\n","sourceOld":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n    \t  message(\"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory);\n        if (infoStream != null)\n          message(\"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        rollbackSegments = segmentInfos.createBackupSegmentInfos(true);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        // Matches the incRef done in startCommit:\n        deleter.decRef(pendingCommit);\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null) {\n      message(\"commit: pendingCommit == null; skip\");\n    }\n\n    if (infoStream != null) {\n      message(\"commit: done\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","sourceNew":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n    \t  message(\"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory, codec);\n        if (infoStream != null)\n          message(\"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        rollbackSegments = pendingCommit.createBackupSegmentInfos(true);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        // Matches the incRef done in startCommit:\n        deleter.decRef(pendingCommit);\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null) {\n      message(\"commit: pendingCommit == null; skip\");\n    }\n\n    if (infoStream != null) {\n      message(\"commit: done\");\n    }\n  }\n\n","sourceOld":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n    \t  message(\"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory);\n        if (infoStream != null)\n          message(\"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        rollbackSegments = pendingCommit.createBackupSegmentInfos(true);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        // Matches the incRef done in startCommit:\n        deleter.decRef(pendingCommit);\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null) {\n      message(\"commit: pendingCommit == null; skip\");\n    }\n\n    if (infoStream != null) {\n      message(\"commit: done\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","sourceNew":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n          infoStream.message(\"IW\", \"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory, codec);\n        if (infoStream != null)\n          infoStream.message(\"IW\", \"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        rollbackSegments = pendingCommit.createBackupSegmentInfos(true);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        // Matches the incRef done in startCommit:\n        deleter.decRef(pendingCommit);\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null) {\n      infoStream.message(\"IW\", \"commit: pendingCommit == null; skip\");\n    }\n\n    if (infoStream != null) {\n      infoStream.message(\"IW\", \"commit: done\");\n    }\n  }\n\n","sourceOld":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n    \t  message(\"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory, codec);\n        if (infoStream != null)\n          message(\"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        rollbackSegments = pendingCommit.createBackupSegmentInfos(true);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        // Matches the incRef done in startCommit:\n        deleter.decRef(pendingCommit);\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null) {\n      message(\"commit: pendingCommit == null; skip\");\n    }\n\n    if (infoStream != null) {\n      message(\"commit: done\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"47d5b6b2c183bf4deaffb52b7cb8dec16c8dcf0f","date":1322512504,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","sourceNew":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n          infoStream.message(\"IW\", \"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory, codec);\n        if (infoStream != null)\n          infoStream.message(\"IW\", \"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        rollbackSegments = pendingCommit.createBackupSegmentInfos(true);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        // Matches the incRef done in prepareCommit:\n        deleter.decRef(filesToCommit);\n        filesToCommit = null;\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null) {\n      infoStream.message(\"IW\", \"commit: pendingCommit == null; skip\");\n    }\n\n    if (infoStream != null) {\n      infoStream.message(\"IW\", \"commit: done\");\n    }\n  }\n\n","sourceOld":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n          infoStream.message(\"IW\", \"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory, codec);\n        if (infoStream != null)\n          infoStream.message(\"IW\", \"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        rollbackSegments = pendingCommit.createBackupSegmentInfos(true);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        // Matches the incRef done in startCommit:\n        deleter.decRef(pendingCommit);\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null) {\n      infoStream.message(\"IW\", \"commit: pendingCommit == null; skip\");\n    }\n\n    if (infoStream != null) {\n      infoStream.message(\"IW\", \"commit: done\");\n    }\n  }\n\n","bugFix":["975460c64e0309e8a78d230321879ec18e65dc0a","455aeff4fef915340c5b19d71d5e147034e83093"],"bugIntro":["cefe924a3b76c22b7df9a075329750871699af6b","25e07bf0d9fa18cd8f0185e309d09a873c45017c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"58c6bbc222f074c844e736e6fb23647e3db9cfe3","date":1322743940,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","sourceNew":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        infoStream.message(\"IW\", \"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory, codec);\n        if (infoStream.isEnabled(\"IW\"))\n          infoStream.message(\"IW\", \"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        rollbackSegments = pendingCommit.createBackupSegmentInfos(true);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        // Matches the incRef done in prepareCommit:\n        deleter.decRef(filesToCommit);\n        filesToCommit = null;\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else {\n      infoStream.message(\"IW\", \"commit: pendingCommit == null; skip\");\n    }\n\n    infoStream.message(\"IW\", \"commit: done\");\n  }\n\n","sourceOld":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream != null)\n          infoStream.message(\"IW\", \"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory, codec);\n        if (infoStream != null)\n          infoStream.message(\"IW\", \"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        rollbackSegments = pendingCommit.createBackupSegmentInfos(true);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        // Matches the incRef done in prepareCommit:\n        deleter.decRef(filesToCommit);\n        filesToCommit = null;\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else if (infoStream != null) {\n      infoStream.message(\"IW\", \"commit: pendingCommit == null; skip\");\n    }\n\n    if (infoStream != null) {\n      infoStream.message(\"IW\", \"commit: done\");\n    }\n  }\n\n","bugFix":null,"bugIntro":["25e07bf0d9fa18cd8f0185e309d09a873c45017c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c5df35ab57c223ea11aec64b53bf611904f3dced","date":1323640545,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","sourceNew":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream.isEnabled(\"IW\")) {\n          infoStream.message(\"IW\", \"commit: pendingCommit != null\");\n        }\n        pendingCommit.finishCommit(directory, codec);\n        if (infoStream.isEnabled(\"IW\")) {\n          infoStream.message(\"IW\", \"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        }\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        rollbackSegments = pendingCommit.createBackupSegmentInfos(true);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        // Matches the incRef done in prepareCommit:\n        deleter.decRef(filesToCommit);\n        filesToCommit = null;\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else {\n      if (infoStream.isEnabled(\"IW\")) {\n        infoStream.message(\"IW\", \"commit: pendingCommit == null; skip\");\n      }\n    }\n\n    if (infoStream.isEnabled(\"IW\")) {\n      infoStream.message(\"IW\", \"commit: done\");\n    }\n  }\n\n","sourceOld":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        infoStream.message(\"IW\", \"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory, codec);\n        if (infoStream.isEnabled(\"IW\"))\n          infoStream.message(\"IW\", \"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        rollbackSegments = pendingCommit.createBackupSegmentInfos(true);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        // Matches the incRef done in prepareCommit:\n        deleter.decRef(filesToCommit);\n        filesToCommit = null;\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else {\n      infoStream.message(\"IW\", \"commit: pendingCommit == null; skip\");\n    }\n\n    infoStream.message(\"IW\", \"commit: done\");\n  }\n\n","bugFix":null,"bugIntro":["25e07bf0d9fa18cd8f0185e309d09a873c45017c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","date":1323720782,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","sourceNew":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream.isEnabled(\"IW\")) {\n          infoStream.message(\"IW\", \"commit: pendingCommit != null\");\n        }\n        pendingCommit.finishCommit(directory, codec);\n        if (infoStream.isEnabled(\"IW\")) {\n          infoStream.message(\"IW\", \"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        }\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        rollbackSegments = pendingCommit.createBackupSegmentInfos(true);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        // Matches the incRef done in prepareCommit:\n        deleter.decRef(filesToCommit);\n        filesToCommit = null;\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else {\n      if (infoStream.isEnabled(\"IW\")) {\n        infoStream.message(\"IW\", \"commit: pendingCommit == null; skip\");\n      }\n    }\n\n    if (infoStream.isEnabled(\"IW\")) {\n      infoStream.message(\"IW\", \"commit: done\");\n    }\n  }\n\n","sourceOld":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        infoStream.message(\"IW\", \"commit: pendingCommit != null\");\n        pendingCommit.finishCommit(directory, codec);\n        if (infoStream.isEnabled(\"IW\"))\n          infoStream.message(\"IW\", \"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        rollbackSegments = pendingCommit.createBackupSegmentInfos(true);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        // Matches the incRef done in prepareCommit:\n        deleter.decRef(filesToCommit);\n        filesToCommit = null;\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else {\n      infoStream.message(\"IW\", \"commit: pendingCommit == null; skip\");\n    }\n\n    infoStream.message(\"IW\", \"commit: done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#finishCommit().mjava","sourceNew":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream.isEnabled(\"IW\")) {\n          infoStream.message(\"IW\", \"commit: pendingCommit != null\");\n        }\n        pendingCommit.finishCommit(directory, codec);\n        if (infoStream.isEnabled(\"IW\")) {\n          infoStream.message(\"IW\", \"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        }\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        rollbackSegments = pendingCommit.createBackupSegmentInfos(true);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        // Matches the incRef done in prepareCommit:\n        deleter.decRef(filesToCommit);\n        filesToCommit = null;\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else {\n      if (infoStream.isEnabled(\"IW\")) {\n        infoStream.message(\"IW\", \"commit: pendingCommit == null; skip\");\n      }\n    }\n\n    if (infoStream.isEnabled(\"IW\")) {\n      infoStream.message(\"IW\", \"commit: done\");\n    }\n  }\n\n","sourceOld":"  private synchronized final void finishCommit() throws CorruptIndexException, IOException {\n\n    if (pendingCommit != null) {\n      try {\n        if (infoStream.isEnabled(\"IW\")) {\n          infoStream.message(\"IW\", \"commit: pendingCommit != null\");\n        }\n        pendingCommit.finishCommit(directory, codec);\n        if (infoStream.isEnabled(\"IW\")) {\n          infoStream.message(\"IW\", \"commit: wrote segments file \\\"\" + pendingCommit.getCurrentSegmentFileName() + \"\\\"\");\n        }\n        lastCommitChangeCount = pendingCommitChangeCount;\n        segmentInfos.updateGeneration(pendingCommit);\n        segmentInfos.setUserData(pendingCommit.getUserData());\n        rollbackSegments = pendingCommit.createBackupSegmentInfos(true);\n        deleter.checkpoint(pendingCommit, true);\n      } finally {\n        // Matches the incRef done in prepareCommit:\n        deleter.decRef(filesToCommit);\n        filesToCommit = null;\n        pendingCommit = null;\n        notifyAll();\n      }\n\n    } else {\n      if (infoStream.isEnabled(\"IW\")) {\n        infoStream.message(\"IW\", \"commit: pendingCommit == null; skip\");\n      }\n    }\n\n    if (infoStream.isEnabled(\"IW\")) {\n      infoStream.message(\"IW\", \"commit: done\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"c5df35ab57c223ea11aec64b53bf611904f3dced":["58c6bbc222f074c844e736e6fb23647e3db9cfe3"],"975460c64e0309e8a78d230321879ec18e65dc0a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"58c6bbc222f074c844e736e6fb23647e3db9cfe3":["47d5b6b2c183bf4deaffb52b7cb8dec16c8dcf0f"],"5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a":["c3a8a449466c1ff7ce2274fe73dab487256964b4","0035862d07d72e7309c9297dec37bee2112db2d5"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c5df35ab57c223ea11aec64b53bf611904f3dced"],"06584e6e98d592b34e1329b384182f368d2025e8":["7b91922b55d15444d554721b352861d028eb8278"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":["58c6bbc222f074c844e736e6fb23647e3db9cfe3","c5df35ab57c223ea11aec64b53bf611904f3dced"],"85a883878c0af761245ab048babc63d099f835f3":["975460c64e0309e8a78d230321879ec18e65dc0a","257da767277782760db0814096b999899995b2b1"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5ef87af8c7bd0f8429622b83aa74202383f2e757","257da767277782760db0814096b999899995b2b1"],"7b91922b55d15444d554721b352861d028eb8278":["0035862d07d72e7309c9297dec37bee2112db2d5"],"786a4d25ca958a1f315a9d6a74f0441fdafcd522":["257da767277782760db0814096b999899995b2b1"],"257da767277782760db0814096b999899995b2b1":["975460c64e0309e8a78d230321879ec18e65dc0a"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["85a883878c0af761245ab048babc63d099f835f3","786a4d25ca958a1f315a9d6a74f0441fdafcd522"],"0035862d07d72e7309c9297dec37bee2112db2d5":["786a4d25ca958a1f315a9d6a74f0441fdafcd522"],"a3776dccca01c11e7046323cfad46a3b4a471233":["257da767277782760db0814096b999899995b2b1","0035862d07d72e7309c9297dec37bee2112db2d5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5ef87af8c7bd0f8429622b83aa74202383f2e757":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"47d5b6b2c183bf4deaffb52b7cb8dec16c8dcf0f":["06584e6e98d592b34e1329b384182f368d2025e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c5df35ab57c223ea11aec64b53bf611904f3dced":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","93ccd971aca7fb61b7f1b946e44714cfc80bfc7c"],"975460c64e0309e8a78d230321879ec18e65dc0a":["85a883878c0af761245ab048babc63d099f835f3","257da767277782760db0814096b999899995b2b1"],"58c6bbc222f074c844e736e6fb23647e3db9cfe3":["c5df35ab57c223ea11aec64b53bf611904f3dced","93ccd971aca7fb61b7f1b946e44714cfc80bfc7c"],"5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"06584e6e98d592b34e1329b384182f368d2025e8":["47d5b6b2c183bf4deaffb52b7cb8dec16c8dcf0f"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":[],"85a883878c0af761245ab048babc63d099f835f3":["c3a8a449466c1ff7ce2274fe73dab487256964b4"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"7b91922b55d15444d554721b352861d028eb8278":["06584e6e98d592b34e1329b384182f368d2025e8"],"786a4d25ca958a1f315a9d6a74f0441fdafcd522":["c3a8a449466c1ff7ce2274fe73dab487256964b4","0035862d07d72e7309c9297dec37bee2112db2d5"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a"],"257da767277782760db0814096b999899995b2b1":["85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","786a4d25ca958a1f315a9d6a74f0441fdafcd522","a3776dccca01c11e7046323cfad46a3b4a471233"],"0035862d07d72e7309c9297dec37bee2112db2d5":["5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a","7b91922b55d15444d554721b352861d028eb8278","a3776dccca01c11e7046323cfad46a3b4a471233"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"5ef87af8c7bd0f8429622b83aa74202383f2e757":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"47d5b6b2c183bf4deaffb52b7cb8dec16c8dcf0f":["58c6bbc222f074c844e736e6fb23647e3db9cfe3"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["975460c64e0309e8a78d230321879ec18e65dc0a","5ef87af8c7bd0f8429622b83aa74202383f2e757"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a","93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}