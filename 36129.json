{"path":"solr/core/src/test/org/apache/solr/response/transform/TestExplainDocTransformer#testStyle().mjava","commits":[{"id":"19bf60a801349f46a8b7f11b8e1187ac2a9fb3d7","date":1564979655,"type":0,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/transform/TestExplainDocTransformer#testStyle().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testStyle() throws Exception {\n    // this doesn't validate the explain response but checks if explain response is returned in expected format\n\n    // when not style is passed then default style should be used\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id,[explain]\"), \"//result/doc[1]/str[@name='id'][.='1']\",\n        \"boolean(//result/doc[1]/str[@name='[explain]'])\");\n\n    // doc transformer defined in solrconfig without style\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id,[explain1]\"), \"//result/doc[1]/str[@name='id'][.='1']\",\n        \"boolean(//result/doc[1]/str[@name='[explain1]'])\");\n\n    // doc transformer defined in solrconfig with style=nl\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id,[explainNL]\"), \"//result/doc[1]/str[@name='id'][.='1']\",\n        \"boolean(//result/doc[1]/lst[@name='[explainNL]'])\");\n\n    // doc transformer defined in solrconfig with style=nl\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id,[explainText]\"), \"//result/doc[1]/str[@name='id'][.='1']\",\n        \"boolean(//result/doc[1]/str[@name='[explainText]'])\");\n\n    // passing style as parameter at runtime\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id,[explainText style=nl]\"), \"//result/doc[1]/str[@name='id'][.='1']\",\n        \"boolean(//result/doc[1]/lst[@name='[explainText]'])\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":0,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/transform/TestExplainDocTransformer#testStyle().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testStyle() throws Exception {\n    // this doesn't validate the explain response but checks if explain response is returned in expected format\n\n    // when not style is passed then default style should be used\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id,[explain]\"), \"//result/doc[1]/str[@name='id'][.='1']\",\n        \"boolean(//result/doc[1]/str[@name='[explain]'])\");\n\n    // doc transformer defined in solrconfig without style\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id,[explain1]\"), \"//result/doc[1]/str[@name='id'][.='1']\",\n        \"boolean(//result/doc[1]/str[@name='[explain1]'])\");\n\n    // doc transformer defined in solrconfig with style=nl\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id,[explainNL]\"), \"//result/doc[1]/str[@name='id'][.='1']\",\n        \"boolean(//result/doc[1]/lst[@name='[explainNL]'])\");\n\n    // doc transformer defined in solrconfig with style=nl\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id,[explainText]\"), \"//result/doc[1]/str[@name='id'][.='1']\",\n        \"boolean(//result/doc[1]/str[@name='[explainText]'])\");\n\n    // passing style as parameter at runtime\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id,[explainText style=nl]\"), \"//result/doc[1]/str[@name='id'][.='1']\",\n        \"boolean(//result/doc[1]/lst[@name='[explainText]'])\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","date":1565097295,"type":0,"author":"Jan HÃ¸ydahl","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/transform/TestExplainDocTransformer#testStyle().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testStyle() throws Exception {\n    // this doesn't validate the explain response but checks if explain response is returned in expected format\n\n    // when not style is passed then default style should be used\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id,[explain]\"), \"//result/doc[1]/str[@name='id'][.='1']\",\n        \"boolean(//result/doc[1]/str[@name='[explain]'])\");\n\n    // doc transformer defined in solrconfig without style\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id,[explain1]\"), \"//result/doc[1]/str[@name='id'][.='1']\",\n        \"boolean(//result/doc[1]/str[@name='[explain1]'])\");\n\n    // doc transformer defined in solrconfig with style=nl\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id,[explainNL]\"), \"//result/doc[1]/str[@name='id'][.='1']\",\n        \"boolean(//result/doc[1]/lst[@name='[explainNL]'])\");\n\n    // doc transformer defined in solrconfig with style=nl\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id,[explainText]\"), \"//result/doc[1]/str[@name='id'][.='1']\",\n        \"boolean(//result/doc[1]/str[@name='[explainText]'])\");\n\n    // passing style as parameter at runtime\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id,[explainText style=nl]\"), \"//result/doc[1]/str[@name='id'][.='1']\",\n        \"boolean(//result/doc[1]/lst[@name='[explainText]'])\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"19bf60a801349f46a8b7f11b8e1187ac2a9fb3d7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","19bf60a801349f46a8b7f11b8e1187ac2a9fb3d7"],"f8061ddd97f3352007d927dae445884a6f3d857b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","19bf60a801349f46a8b7f11b8e1187ac2a9fb3d7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["19bf60a801349f46a8b7f11b8e1187ac2a9fb3d7"]},"commit2Childs":{"19bf60a801349f46a8b7f11b8e1187ac2a9fb3d7":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["19bf60a801349f46a8b7f11b8e1187ac2a9fb3d7","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":[],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}