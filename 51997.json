{"path":"src/test/org/apache/lucene/util/TestOpenBitSet#testBitUtils().mjava","commits":[{"id":"3524179bfbe71b824c5bfea8fee07d5c0fbd7a62","date":1227649187,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/TestOpenBitSet#testBitUtils().mjava","pathOld":"/dev/null","sourceNew":"  public void testBitUtils()\n  {\n    long num = 100000;\n    assertEquals( 5, BitUtil.ntz(num) );\n    assertEquals( 5, BitUtil.ntz2(num) );\n    assertEquals( 5, BitUtil.ntz3(num) );\n    \n    num = 10;\n    assertEquals( 1, BitUtil.ntz(num) );\n    assertEquals( 1, BitUtil.ntz2(num) );\n    assertEquals( 1, BitUtil.ntz3(num) );\n\n    for (int i=0; i<64; i++) {\n      num = 1L << i;\n      assertEquals( i, BitUtil.ntz(num) );\n      assertEquals( i, BitUtil.ntz2(num) );\n      assertEquals( i, BitUtil.ntz3(num) );\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb1066f2afe9450585d0d10063ea4450085236f1","date":1233870820,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/TestOpenBitSet#testBitUtils().mjava","pathOld":"src/test/org/apache/lucene/util/TestOpenBitSet#testBitUtils().mjava","sourceNew":"  public void testBitUtils()\n  {\n    rand = newRandom();\n    long num = 100000;\n    assertEquals( 5, BitUtil.ntz(num) );\n    assertEquals( 5, BitUtil.ntz2(num) );\n    assertEquals( 5, BitUtil.ntz3(num) );\n    \n    num = 10;\n    assertEquals( 1, BitUtil.ntz(num) );\n    assertEquals( 1, BitUtil.ntz2(num) );\n    assertEquals( 1, BitUtil.ntz3(num) );\n\n    for (int i=0; i<64; i++) {\n      num = 1L << i;\n      assertEquals( i, BitUtil.ntz(num) );\n      assertEquals( i, BitUtil.ntz2(num) );\n      assertEquals( i, BitUtil.ntz3(num) );\n    }\n  }\n\n","sourceOld":"  public void testBitUtils()\n  {\n    long num = 100000;\n    assertEquals( 5, BitUtil.ntz(num) );\n    assertEquals( 5, BitUtil.ntz2(num) );\n    assertEquals( 5, BitUtil.ntz3(num) );\n    \n    num = 10;\n    assertEquals( 1, BitUtil.ntz(num) );\n    assertEquals( 1, BitUtil.ntz2(num) );\n    assertEquals( 1, BitUtil.ntz3(num) );\n\n    for (int i=0; i<64; i++) {\n      num = 1L << i;\n      assertEquals( i, BitUtil.ntz(num) );\n      assertEquals( i, BitUtil.ntz2(num) );\n      assertEquals( i, BitUtil.ntz3(num) );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/TestOpenBitSet#testBitUtils().mjava","pathOld":"src/test/org/apache/lucene/util/TestOpenBitSet#testBitUtils().mjava","sourceNew":"  public void testBitUtils()\n  {\n    rand = newRandom();\n    long num = 100000;\n    assertEquals( 5, BitUtil.ntz(num) );\n    assertEquals( 5, BitUtil.ntz2(num) );\n    assertEquals( 5, BitUtil.ntz3(num) );\n    \n    num = 10;\n    assertEquals( 1, BitUtil.ntz(num) );\n    assertEquals( 1, BitUtil.ntz2(num) );\n    assertEquals( 1, BitUtil.ntz3(num) );\n\n    for (int i=0; i<64; i++) {\n      num = 1L << i;\n      assertEquals( i, BitUtil.ntz(num) );\n      assertEquals( i, BitUtil.ntz2(num) );\n      assertEquals( i, BitUtil.ntz3(num) );\n    }\n  }\n\n","sourceOld":"  public void testBitUtils()\n  {\n    rand = newRandom();\n    long num = 100000;\n    assertEquals( 5, BitUtil.ntz(num) );\n    assertEquals( 5, BitUtil.ntz2(num) );\n    assertEquals( 5, BitUtil.ntz3(num) );\n    \n    num = 10;\n    assertEquals( 1, BitUtil.ntz(num) );\n    assertEquals( 1, BitUtil.ntz2(num) );\n    assertEquals( 1, BitUtil.ntz3(num) );\n\n    for (int i=0; i<64; i++) {\n      num = 1L << i;\n      assertEquals( i, BitUtil.ntz(num) );\n      assertEquals( i, BitUtil.ntz2(num) );\n      assertEquals( i, BitUtil.ntz3(num) );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cb1066f2afe9450585d0d10063ea4450085236f1":["3524179bfbe71b824c5bfea8fee07d5c0fbd7a62"],"3524179bfbe71b824c5bfea8fee07d5c0fbd7a62":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cb1066f2afe9450585d0d10063ea4450085236f1"]},"commit2Childs":{"cb1066f2afe9450585d0d10063ea4450085236f1":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3524179bfbe71b824c5bfea8fee07d5c0fbd7a62":["cb1066f2afe9450585d0d10063ea4450085236f1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3524179bfbe71b824c5bfea8fee07d5c0fbd7a62"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}