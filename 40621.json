{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedInputIterator#SortedInputIterator(InputIterator,Comparator[BytesRef]).mjava","commits":[{"id":"41aee74b5f91a096e3fd950f4a336bc763f0e7a7","date":1381772070,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedInputIterator#SortedInputIterator(InputIterator,Comparator[BytesRef]).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedTermFreqPayloadIteratorWrapper#SortedTermFreqPayloadIteratorWrapper(TermFreqPayloadIterator,Comparator[BytesRef]).mjava","sourceNew":"  /**\n   * Creates a new sorted wrapper, sorting by BytesRef\n   * (ascending) then cost (ascending).\n   */\n  public SortedInputIterator(InputIterator source, Comparator<BytesRef> comparator) throws IOException {\n    this.hasPayloads = source.hasPayloads();\n    this.source = source;\n    this.comparator = comparator;\n    this.reader = sort();\n  }\n\n","sourceOld":"  /**\n   * Creates a new sorted wrapper, sorting by BytesRef\n   * (ascending) then cost (ascending).\n   */\n  public SortedTermFreqPayloadIteratorWrapper(TermFreqPayloadIterator source, Comparator<BytesRef> comparator) throws IOException {\n    this.hasPayloads = source.hasPayloads();\n    this.source = source;\n    this.comparator = comparator;\n    this.reader = sort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58d0345a28bb6b4be59c38e6a77e2cc0e615ee4b","date":1395588343,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedInputIterator#SortedInputIterator(InputIterator,Comparator[BytesRef]).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedInputIterator#SortedInputIterator(InputIterator,Comparator[BytesRef]).mjava","sourceNew":"  /**\n   * Creates a new sorted wrapper, sorting by BytesRef\n   * (ascending) then cost (ascending).\n   */\n  public SortedInputIterator(InputIterator source, Comparator<BytesRef> comparator) throws IOException {\n    this.hasPayloads = source.hasPayloads();\n    this.hasContexts = source.hasContexts();\n    this.source = source;\n    this.comparator = comparator;\n    this.reader = sort();\n  }\n\n","sourceOld":"  /**\n   * Creates a new sorted wrapper, sorting by BytesRef\n   * (ascending) then cost (ascending).\n   */\n  public SortedInputIterator(InputIterator source, Comparator<BytesRef> comparator) throws IOException {\n    this.hasPayloads = source.hasPayloads();\n    this.source = source;\n    this.comparator = comparator;\n    this.reader = sort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"867e3d9153fb761456b54a9dcce566e1545c5ef6","date":1444903098,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedInputIterator#SortedInputIterator(Directory,String,InputIterator,Comparator[BytesRef]).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedInputIterator#SortedInputIterator(InputIterator,Comparator[BytesRef]).mjava","sourceNew":"  /**\n   * Creates a new sorted wrapper, sorting by BytesRef\n   * (ascending) then cost (ascending).\n   */\n  public SortedInputIterator(Directory tempDir, String tempFileNamePrefix, InputIterator source, Comparator<BytesRef> comparator) throws IOException {\n    this.hasPayloads = source.hasPayloads();\n    this.hasContexts = source.hasContexts();\n    this.source = source;\n    this.comparator = comparator;\n    this.tempDir = tempDir;\n    this.tempFileNamePrefix = tempFileNamePrefix;\n    this.reader = sort();\n  }\n\n","sourceOld":"  /**\n   * Creates a new sorted wrapper, sorting by BytesRef\n   * (ascending) then cost (ascending).\n   */\n  public SortedInputIterator(InputIterator source, Comparator<BytesRef> comparator) throws IOException {\n    this.hasPayloads = source.hasPayloads();\n    this.hasContexts = source.hasContexts();\n    this.source = source;\n    this.comparator = comparator;\n    this.reader = sort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"58d0345a28bb6b4be59c38e6a77e2cc0e615ee4b":["41aee74b5f91a096e3fd950f4a336bc763f0e7a7"],"41aee74b5f91a096e3fd950f4a336bc763f0e7a7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["58d0345a28bb6b4be59c38e6a77e2cc0e615ee4b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["867e3d9153fb761456b54a9dcce566e1545c5ef6"]},"commit2Childs":{"58d0345a28bb6b4be59c38e6a77e2cc0e615ee4b":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"41aee74b5f91a096e3fd950f4a336bc763f0e7a7":["58d0345a28bb6b4be59c38e6a77e2cc0e615ee4b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["41aee74b5f91a096e3fd950f4a336bc763f0e7a7"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}