{"path":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","commits":[{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DistributedUpdateProcessor getInstance(SolrQueryRequest req,\n      SolrQueryResponse rsp, UpdateRequestProcessor next) {\n\n    return new DistributedUpdateProcessor(req, rsp, next);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DistributedUpdateProcessor getInstance(SolrQueryRequest req,\n      SolrQueryResponse rsp, UpdateRequestProcessor next) {\n\n    return new DistributedUpdateProcessor(req, rsp, next);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DistributedUpdateProcessor getInstance(SolrQueryRequest req,\n      SolrQueryResponse rsp, UpdateRequestProcessor next) {\n\n    return new DistributedUpdateProcessor(req, rsp, next);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"543992c52fe295c8b15aafe4b066e7e3a9a42c48","date":1510862949,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","sourceNew":"  @Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req,\n      SolrQueryResponse rsp, UpdateRequestProcessor next) {\n    // note: will sometimes return DURP (no overhead) instead of wrapping\n    return TimePartitionedUpdateProcessor.wrap(req, rsp,\n        new DistributedUpdateProcessor(req, rsp, next));\n  }\n\n","sourceOld":"  @Override\n  public DistributedUpdateProcessor getInstance(SolrQueryRequest req,\n      SolrQueryResponse rsp, UpdateRequestProcessor next) {\n\n    return new DistributedUpdateProcessor(req, rsp, next);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5613a70439d5d429f0689c2c5a21615e58deff97","date":1512102314,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","sourceNew":"  @Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req,\n      SolrQueryResponse rsp, UpdateRequestProcessor next) {\n    // note: will sometimes return DURP (no overhead) instead of wrapping\n    return TimeRoutedAliasUpdateProcessor.wrap(req, rsp,\n        new DistributedUpdateProcessor(req, rsp, next));\n  }\n\n","sourceOld":"  @Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req,\n      SolrQueryResponse rsp, UpdateRequestProcessor next) {\n    // note: will sometimes return DURP (no overhead) instead of wrapping\n    return TimePartitionedUpdateProcessor.wrap(req, rsp,\n        new DistributedUpdateProcessor(req, rsp, next));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"849083f8095b1ffaff05a66e0b1e024617b9968d","date":1536291524,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","sourceNew":"  @Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req,\n      SolrQueryResponse rsp, UpdateRequestProcessor next) {\n    // note: will sometimes return DURP (no overhead) instead of wrapping\n    return TimeRoutedAliasUpdateProcessor.wrap(req,\n        new DistributedUpdateProcessor(req, rsp, next));\n  }\n\n","sourceOld":"  @Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req,\n      SolrQueryResponse rsp, UpdateRequestProcessor next) {\n    // note: will sometimes return DURP (no overhead) instead of wrapping\n    return TimeRoutedAliasUpdateProcessor.wrap(req, rsp,\n        new DistributedUpdateProcessor(req, rsp, next));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b627755385655c7cd3fb296f17593658805cf4d5","date":1552455143,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","sourceNew":"  @Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req,\n      SolrQueryResponse rsp, UpdateRequestProcessor next) {\n    // note: will sometimes return DURP (no overhead) instead of wrapping\n    return RoutedAliasUpdateProcessor.wrap(req,\n        new DistributedUpdateProcessor(req, rsp, next));\n  }\n\n","sourceOld":"  @Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req,\n      SolrQueryResponse rsp, UpdateRequestProcessor next) {\n    // note: will sometimes return DURP (no overhead) instead of wrapping\n    return TimeRoutedAliasUpdateProcessor.wrap(req,\n        new DistributedUpdateProcessor(req, rsp, next));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d70e774cb25c8a8d2c3e5e84200f235f9168d87","date":1553016391,"type":3,"author":"Bar Rotstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","sourceNew":"  @Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req,\n      SolrQueryResponse rsp, UpdateRequestProcessor next) {\n\n    final boolean isZkAware = req.getCore().getCoreContainer().isZooKeeperAware();\n\n    DistributedUpdateProcessor distribUpdateProcessor =\n        isZkAware ?\n            new DistributedZkUpdateProcessor(req, rsp, next) :\n            new DistributedUpdateProcessor(req, rsp, next);\n    // note: will sometimes return DURP (no overhead) instead of wrapping\n    return RoutedAliasUpdateProcessor.wrap(req,\n        distribUpdateProcessor);\n  }\n\n","sourceOld":"  @Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req,\n      SolrQueryResponse rsp, UpdateRequestProcessor next) {\n    // note: will sometimes return DURP (no overhead) instead of wrapping\n    return RoutedAliasUpdateProcessor.wrap(req,\n        new DistributedUpdateProcessor(req, rsp, next));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0d22ac6a4146774c1bc8400160fc0b6150294e92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"849083f8095b1ffaff05a66e0b1e024617b9968d":["5613a70439d5d429f0689c2c5a21615e58deff97"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"b627755385655c7cd3fb296f17593658805cf4d5":["849083f8095b1ffaff05a66e0b1e024617b9968d"],"5613a70439d5d429f0689c2c5a21615e58deff97":["543992c52fe295c8b15aafe4b066e7e3a9a42c48"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"543992c52fe295c8b15aafe4b066e7e3a9a42c48":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"9d70e774cb25c8a8d2c3e5e84200f235f9168d87":["b627755385655c7cd3fb296f17593658805cf4d5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9d70e774cb25c8a8d2c3e5e84200f235f9168d87"]},"commit2Childs":{"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"849083f8095b1ffaff05a66e0b1e024617b9968d":["b627755385655c7cd3fb296f17593658805cf4d5"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","543992c52fe295c8b15aafe4b066e7e3a9a42c48"],"5613a70439d5d429f0689c2c5a21615e58deff97":["849083f8095b1ffaff05a66e0b1e024617b9968d"],"b627755385655c7cd3fb296f17593658805cf4d5":["9d70e774cb25c8a8d2c3e5e84200f235f9168d87"],"543992c52fe295c8b15aafe4b066e7e3a9a42c48":["5613a70439d5d429f0689c2c5a21615e58deff97"],"9d70e774cb25c8a8d2c3e5e84200f235f9168d87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}