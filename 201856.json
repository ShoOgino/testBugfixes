{"path":"lucene/src/java/org/apache/lucene/index/SegmentMerger#mergeDocValuesType(TypePromoter,IndexDocValues).mjava","commits":[{"id":"23c3a6c2ecb0c99396936e72e8998df877ea9ad5","date":1323268151,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#mergeDocValuesType(TypePromoter,IndexDocValues).mjava","pathOld":"/dev/null","sourceNew":"  // returns an updated typepromoter (tracking type and size) given a previous one,\n  // and a newly encountered docvalues\n  private TypePromoter mergeDocValuesType(TypePromoter previous, IndexDocValues docValues) {\n    TypePromoter incoming = TypePromoter.create(docValues.type(),  docValues.getValueSize());\n    if (previous == null) {\n      previous = TypePromoter.getIdentityPromoter();\n    }\n    TypePromoter promoted = previous.promote(incoming);\n    if (promoted == null) {\n      // type is incompatible: promote to BYTES_VAR_STRAIGHT\n      return TypePromoter.create(ValueType.BYTES_VAR_STRAIGHT, TypePromoter.VAR_TYPE_VALUE_SIZE);\n    } else {\n      return promoted;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","date":1323449025,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#mergeDocValuesType(TypePromoter,DocValues).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#mergeDocValuesType(TypePromoter,IndexDocValues).mjava","sourceNew":"  // returns an updated typepromoter (tracking type and size) given a previous one,\n  // and a newly encountered docvalues\n  private TypePromoter mergeDocValuesType(TypePromoter previous, DocValues docValues) {\n    TypePromoter incoming = TypePromoter.create(docValues.type(),  docValues.getValueSize());\n    if (previous == null) {\n      previous = TypePromoter.getIdentityPromoter();\n    }\n    TypePromoter promoted = previous.promote(incoming);\n    if (promoted == null) {\n      // type is incompatible: promote to BYTES_VAR_STRAIGHT\n      return TypePromoter.create(DocValues.Type.BYTES_VAR_STRAIGHT, TypePromoter.VAR_TYPE_VALUE_SIZE);\n    } else {\n      return promoted;\n    }\n  }\n\n","sourceOld":"  // returns an updated typepromoter (tracking type and size) given a previous one,\n  // and a newly encountered docvalues\n  private TypePromoter mergeDocValuesType(TypePromoter previous, IndexDocValues docValues) {\n    TypePromoter incoming = TypePromoter.create(docValues.type(),  docValues.getValueSize());\n    if (previous == null) {\n      previous = TypePromoter.getIdentityPromoter();\n    }\n    TypePromoter promoted = previous.promote(incoming);\n    if (promoted == null) {\n      // type is incompatible: promote to BYTES_VAR_STRAIGHT\n      return TypePromoter.create(ValueType.BYTES_VAR_STRAIGHT, TypePromoter.VAR_TYPE_VALUE_SIZE);\n    } else {\n      return promoted;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["23c3a6c2ecb0c99396936e72e8998df877ea9ad5"],"23c3a6c2ecb0c99396936e72e8998df877ea9ad5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["23c3a6c2ecb0c99396936e72e8998df877ea9ad5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":[],"23c3a6c2ecb0c99396936e72e8998df877ea9ad5":["1e59c344a45b9502f40ec44f5fe4e20ed2291dbe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}