{"path":"solr/core/src/java/org/apache/solr/store/hdfs/HdfsDirectory#createOutput(String,IOContext).mjava","commits":[{"id":"849494cf2f3a96af5c8c84995108ddd8456fcd04","date":1372277913,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/store/hdfs/HdfsDirectory#createOutput(String,IOContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public IndexOutput createOutput(String name, IOContext context)\n      throws IOException {\n    if (SEGMENTS_GEN.equals(name)) {\n      return NULL_WRITER;\n    }\n    HdfsFileWriter writer = new HdfsFileWriter(getFileSystem(), new Path(\n        hdfsDirPath, name));\n    return new HdfsIndexOutput(writer);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7899db4b86e3ecfd1097a44cd8b3fa6e7501870","date":1373535276,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/store/hdfs/HdfsDirectory#createOutput(String,IOContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/store/hdfs/HdfsDirectory#createOutput(String,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput createOutput(String name, IOContext context)\n      throws IOException {\n    if (SEGMENTS_GEN.equals(name)) {\n      return new NullIndexOutput();\n    }\n    HdfsFileWriter writer = new HdfsFileWriter(getFileSystem(), new Path(\n        hdfsDirPath, name));\n    return new HdfsIndexOutput(writer);\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput createOutput(String name, IOContext context)\n      throws IOException {\n    if (SEGMENTS_GEN.equals(name)) {\n      return NULL_WRITER;\n    }\n    HdfsFileWriter writer = new HdfsFileWriter(getFileSystem(), new Path(\n        hdfsDirPath, name));\n    return new HdfsIndexOutput(writer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/store/hdfs/HdfsDirectory#createOutput(String,IOContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public IndexOutput createOutput(String name, IOContext context)\n      throws IOException {\n    if (SEGMENTS_GEN.equals(name)) {\n      return new NullIndexOutput();\n    }\n    HdfsFileWriter writer = new HdfsFileWriter(getFileSystem(), new Path(\n        hdfsDirPath, name));\n    return new HdfsIndexOutput(writer);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bce1e2aee8b16573bc0d091471e4660d140b5823","date":1400533696,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/store/hdfs/HdfsDirectory#createOutput(String,IOContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/store/hdfs/HdfsDirectory#createOutput(String,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput createOutput(String name, IOContext context) throws IOException {\n    if (SEGMENTS_GEN.equals(name)) {\n      return new NullIndexOutput();\n    }\n    return new HdfsFileWriter(getFileSystem(), new Path(hdfsDirPath, name));\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput createOutput(String name, IOContext context)\n      throws IOException {\n    if (SEGMENTS_GEN.equals(name)) {\n      return new NullIndexOutput();\n    }\n    HdfsFileWriter writer = new HdfsFileWriter(getFileSystem(), new Path(\n        hdfsDirPath, name));\n    return new HdfsIndexOutput(writer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7605579001505896d48b07160075a5c8b8e128e","date":1400758727,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/store/hdfs/HdfsDirectory#createOutput(String,IOContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/store/hdfs/HdfsDirectory#createOutput(String,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput createOutput(String name, IOContext context) throws IOException {\n    if (SEGMENTS_GEN.equals(name)) {\n      return new NullIndexOutput();\n    }\n    return new HdfsFileWriter(getFileSystem(), new Path(hdfsDirPath, name));\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput createOutput(String name, IOContext context)\n      throws IOException {\n    if (SEGMENTS_GEN.equals(name)) {\n      return new NullIndexOutput();\n    }\n    HdfsFileWriter writer = new HdfsFileWriter(getFileSystem(), new Path(\n        hdfsDirPath, name));\n    return new HdfsIndexOutput(writer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46e4a8bdfbafda795ef9c39a2bc2d47095770299","date":1410411846,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/store/hdfs/HdfsDirectory#createOutput(String,IOContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/store/hdfs/HdfsDirectory#createOutput(String,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput createOutput(String name, IOContext context) throws IOException {\n    return new HdfsFileWriter(getFileSystem(), new Path(hdfsDirPath, name));\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput createOutput(String name, IOContext context) throws IOException {\n    if (SEGMENTS_GEN.equals(name)) {\n      return new NullIndexOutput();\n    }\n    return new HdfsFileWriter(getFileSystem(), new Path(hdfsDirPath, name));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"867e3d9153fb761456b54a9dcce566e1545c5ef6","date":1444903098,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/store/hdfs/HdfsDirectory#createOutput(String,IOContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/store/hdfs/HdfsDirectory#createOutput(String,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput createOutput(String name, IOContext context) throws IOException {\n    return new HdfsFileWriter(getFileSystem(), new Path(hdfsDirPath, name), name);\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput createOutput(String name, IOContext context) throws IOException {\n    return new HdfsFileWriter(getFileSystem(), new Path(hdfsDirPath, name));\n  }\n\n","bugFix":null,"bugIntro":["2b8f040f61e63785acc59bcba27db5c8e7cf0dae"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2b8f040f61e63785acc59bcba27db5c8e7cf0dae","date":1580841315,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/store/hdfs/HdfsDirectory#createOutput(String,IOContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/store/hdfs/HdfsDirectory#createOutput(String,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput createOutput(String name, IOContext context) throws IOException {\n    try {\n      return new HdfsFileWriter(getFileSystem(), new Path(hdfsDirPath, name), name);\n    } catch (FileAlreadyExistsException e) {\n      java.nio.file.FileAlreadyExistsException ex = new java.nio.file.FileAlreadyExistsException(e.getMessage());\n      ex.initCause(e);\n      throw ex;\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput createOutput(String name, IOContext context) throws IOException {\n    return new HdfsFileWriter(getFileSystem(), new Path(hdfsDirPath, name), name);\n  }\n\n","bugFix":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bce1e2aee8b16573bc0d091471e4660d140b5823":["b7899db4b86e3ecfd1097a44cd8b3fa6e7501870"],"849494cf2f3a96af5c8c84995108ddd8456fcd04":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"46e4a8bdfbafda795ef9c39a2bc2d47095770299":["bce1e2aee8b16573bc0d091471e4660d140b5823"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b7899db4b86e3ecfd1097a44cd8b3fa6e7501870"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2b8f040f61e63785acc59bcba27db5c8e7cf0dae":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"b7605579001505896d48b07160075a5c8b8e128e":["b7899db4b86e3ecfd1097a44cd8b3fa6e7501870","bce1e2aee8b16573bc0d091471e4660d140b5823"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["46e4a8bdfbafda795ef9c39a2bc2d47095770299"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2b8f040f61e63785acc59bcba27db5c8e7cf0dae"],"b7899db4b86e3ecfd1097a44cd8b3fa6e7501870":["849494cf2f3a96af5c8c84995108ddd8456fcd04"]},"commit2Childs":{"bce1e2aee8b16573bc0d091471e4660d140b5823":["46e4a8bdfbafda795ef9c39a2bc2d47095770299","b7605579001505896d48b07160075a5c8b8e128e"],"849494cf2f3a96af5c8c84995108ddd8456fcd04":["b7899db4b86e3ecfd1097a44cd8b3fa6e7501870"],"46e4a8bdfbafda795ef9c39a2bc2d47095770299":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["849494cf2f3a96af5c8c84995108ddd8456fcd04","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"2b8f040f61e63785acc59bcba27db5c8e7cf0dae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b7605579001505896d48b07160075a5c8b8e128e":[],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["2b8f040f61e63785acc59bcba27db5c8e7cf0dae"],"b7899db4b86e3ecfd1097a44cd8b3fa6e7501870":["bce1e2aee8b16573bc0d091471e4660d140b5823","37a0f60745e53927c4c876cfe5b5a58170f0646c","b7605579001505896d48b07160075a5c8b8e128e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","b7605579001505896d48b07160075a5c8b8e128e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}