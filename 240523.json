{"path":"lucene/src/test/org/apache/lucene/search/TestThreadSafe.Thr#loadDoc(IndexReader).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestThreadSafe.Thr#loadDoc(IndexReader).mjava","pathOld":"src/test/org/apache/lucene/search/TestThreadSafe.Thr#loadDoc(IndexReader).mjava","sourceNew":"    void loadDoc(IndexReader ir) throws IOException {\n      // beware of deleted docs in the future\n      Document doc = ir.document(rand.nextInt(ir.maxDoc()),\n                new FieldSelector() {\n                  public FieldSelectorResult accept(String fieldName) {\n                    switch(rand.nextInt(2)) {\n                      case 0: return FieldSelectorResult.LAZY_LOAD;\n                      case 1: return FieldSelectorResult.LOAD;\n                      // TODO: add other options\n                      default: return FieldSelectorResult.LOAD;\n                    }\n                  }\n                }\n              );\n\n      List<Fieldable> fields = doc.getFields();\n      for (final Fieldable f : fields ) {\n        validateField(f);\n      }\n\n    }\n\n","sourceOld":"    void loadDoc(IndexReader ir) throws IOException {\n      // beware of deleted docs in the future\n      Document doc = ir.document(rand.nextInt(ir.maxDoc()),\n                new FieldSelector() {\n                  public FieldSelectorResult accept(String fieldName) {\n                    switch(rand.nextInt(2)) {\n                      case 0: return FieldSelectorResult.LAZY_LOAD;\n                      case 1: return FieldSelectorResult.LOAD;\n                      // TODO: add other options\n                      default: return FieldSelectorResult.LOAD;\n                    }\n                  }\n                }\n              );\n\n      List<Fieldable> fields = doc.getFields();\n      for (final Fieldable f : fields ) {\n        validateField(f);\n      }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/search/TestThreadSafe.Thr#loadDoc(IndexReader).mjava","sourceNew":null,"sourceOld":"    void loadDoc(IndexReader ir) throws IOException {\n      // beware of deleted docs in the future\n      Document doc = ir.document(rand.nextInt(ir.maxDoc()),\n                new FieldSelector() {\n                  public FieldSelectorResult accept(String fieldName) {\n                    switch(rand.nextInt(2)) {\n                      case 0: return FieldSelectorResult.LAZY_LOAD;\n                      case 1: return FieldSelectorResult.LOAD;\n                      // TODO: add other options\n                      default: return FieldSelectorResult.LOAD;\n                    }\n                  }\n                }\n              );\n\n      List<Fieldable> fields = doc.getFields();\n      for (final Fieldable f : fields ) {\n        validateField(f);\n      }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}