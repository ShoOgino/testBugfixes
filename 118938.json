{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/FuzzyCompletionQuery#createWeight(IndexSearcher,boolean).mjava","commits":[{"id":"8c33f6677a2078739058f81eca1df69d12cd62b0","date":1432799589,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/FuzzyCompletionQuery#createWeight(IndexSearcher,boolean).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    CompletionTokenStream stream = (CompletionTokenStream) analyzer.tokenStream(getField(), getTerm().text());\n    Automaton a = stream.toAutomaton(unicodeAware);\n    final Set<IntsRef> refs = Operations.getFiniteStrings(a, -1);\n    assert refs.size() > 0;\n    Automaton automaton = toLevenshteinAutomata(refs);\n    if (unicodeAware) {\n      Automaton utf8automaton = new UTF32ToUTF8().convert(automaton);\n      utf8automaton = Operations.determinize(utf8automaton, maxDeterminizedStates);\n      automaton = utf8automaton;\n    }\n    return new FuzzyCompletionWeight(searcher.getIndexReader(), this, automaton, refs);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66756ce4574b3c2fdc15740945140daf28792f5f","date":1433261481,"type":3,"author":"Areek Zillur","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/FuzzyCompletionQuery#createWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/FuzzyCompletionQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    CompletionTokenStream stream = (CompletionTokenStream) analyzer.tokenStream(getField(), getTerm().text());\n    Automaton a = stream.toAutomaton(unicodeAware);\n    final Set<IntsRef> refs = Operations.getFiniteStrings(a, -1);\n    assert refs.size() > 0;\n    Automaton automaton = toLevenshteinAutomata(refs);\n    if (unicodeAware) {\n      Automaton utf8automaton = new UTF32ToUTF8().convert(automaton);\n      utf8automaton = Operations.determinize(utf8automaton, maxDeterminizedStates);\n      automaton = utf8automaton;\n    }\n    return new FuzzyCompletionWeight(this, automaton, refs);\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    CompletionTokenStream stream = (CompletionTokenStream) analyzer.tokenStream(getField(), getTerm().text());\n    Automaton a = stream.toAutomaton(unicodeAware);\n    final Set<IntsRef> refs = Operations.getFiniteStrings(a, -1);\n    assert refs.size() > 0;\n    Automaton automaton = toLevenshteinAutomata(refs);\n    if (unicodeAware) {\n      Automaton utf8automaton = new UTF32ToUTF8().convert(automaton);\n      utf8automaton = Operations.determinize(utf8automaton, maxDeterminizedStates);\n      automaton = utf8automaton;\n    }\n    return new FuzzyCompletionWeight(searcher.getIndexReader(), this, automaton, refs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"35fa550f45857d99d3d6d743420ee54b4d0c37f8","date":1436039255,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/FuzzyCompletionQuery#createWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/FuzzyCompletionQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    CompletionTokenStream stream = (CompletionTokenStream) analyzer.tokenStream(getField(), getTerm().text());\n    Set<IntsRef> refs = new HashSet<>();\n    Automaton automaton = toLevenshteinAutomata(stream.toAutomaton(unicodeAware), refs);\n    if (unicodeAware) {\n      Automaton utf8automaton = new UTF32ToUTF8().convert(automaton);\n      utf8automaton = Operations.determinize(utf8automaton, maxDeterminizedStates);\n      automaton = utf8automaton;\n    }\n    // TODO Accumulating all refs is bad, because the resulting set may be very big.\n    // TODO Better iterate over automaton again inside FuzzyCompletionWeight?\n    return new FuzzyCompletionWeight(this, automaton, refs);\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    CompletionTokenStream stream = (CompletionTokenStream) analyzer.tokenStream(getField(), getTerm().text());\n    Automaton a = stream.toAutomaton(unicodeAware);\n    final Set<IntsRef> refs = Operations.getFiniteStrings(a, -1);\n    assert refs.size() > 0;\n    Automaton automaton = toLevenshteinAutomata(refs);\n    if (unicodeAware) {\n      Automaton utf8automaton = new UTF32ToUTF8().convert(automaton);\n      utf8automaton = Operations.determinize(utf8automaton, maxDeterminizedStates);\n      automaton = utf8automaton;\n    }\n    return new FuzzyCompletionWeight(this, automaton, refs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"02e175abd2c4c1611c5a9647486ae8ba249a94c1","date":1468327116,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/FuzzyCompletionQuery#createWeight(IndexSearcher,boolean,float).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/FuzzyCompletionQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n    CompletionTokenStream stream = (CompletionTokenStream) analyzer.tokenStream(getField(), getTerm().text());\n    Set<IntsRef> refs = new HashSet<>();\n    Automaton automaton = toLevenshteinAutomata(stream.toAutomaton(unicodeAware), refs);\n    if (unicodeAware) {\n      Automaton utf8automaton = new UTF32ToUTF8().convert(automaton);\n      utf8automaton = Operations.determinize(utf8automaton, maxDeterminizedStates);\n      automaton = utf8automaton;\n    }\n    // TODO Accumulating all refs is bad, because the resulting set may be very big.\n    // TODO Better iterate over automaton again inside FuzzyCompletionWeight?\n    return new FuzzyCompletionWeight(this, automaton, refs);\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    CompletionTokenStream stream = (CompletionTokenStream) analyzer.tokenStream(getField(), getTerm().text());\n    Set<IntsRef> refs = new HashSet<>();\n    Automaton automaton = toLevenshteinAutomata(stream.toAutomaton(unicodeAware), refs);\n    if (unicodeAware) {\n      Automaton utf8automaton = new UTF32ToUTF8().convert(automaton);\n      utf8automaton = Operations.determinize(utf8automaton, maxDeterminizedStates);\n      automaton = utf8automaton;\n    }\n    // TODO Accumulating all refs is bad, because the resulting set may be very big.\n    // TODO Better iterate over automaton again inside FuzzyCompletionWeight?\n    return new FuzzyCompletionWeight(this, automaton, refs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/FuzzyCompletionQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":null,"sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    CompletionTokenStream stream = (CompletionTokenStream) analyzer.tokenStream(getField(), getTerm().text());\n    Set<IntsRef> refs = new HashSet<>();\n    Automaton automaton = toLevenshteinAutomata(stream.toAutomaton(unicodeAware), refs);\n    if (unicodeAware) {\n      Automaton utf8automaton = new UTF32ToUTF8().convert(automaton);\n      utf8automaton = Operations.determinize(utf8automaton, maxDeterminizedStates);\n      automaton = utf8automaton;\n    }\n    // TODO Accumulating all refs is bad, because the resulting set may be very big.\n    // TODO Better iterate over automaton again inside FuzzyCompletionWeight?\n    return new FuzzyCompletionWeight(this, automaton, refs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"35fa550f45857d99d3d6d743420ee54b4d0c37f8":["66756ce4574b3c2fdc15740945140daf28792f5f"],"66756ce4574b3c2fdc15740945140daf28792f5f":["8c33f6677a2078739058f81eca1df69d12cd62b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["35fa550f45857d99d3d6d743420ee54b4d0c37f8"],"8c33f6677a2078739058f81eca1df69d12cd62b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["35fa550f45857d99d3d6d743420ee54b4d0c37f8","02e175abd2c4c1611c5a9647486ae8ba249a94c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["02e175abd2c4c1611c5a9647486ae8ba249a94c1"]},"commit2Childs":{"35fa550f45857d99d3d6d743420ee54b4d0c37f8":["02e175abd2c4c1611c5a9647486ae8ba249a94c1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"66756ce4574b3c2fdc15740945140daf28792f5f":["35fa550f45857d99d3d6d743420ee54b4d0c37f8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8c33f6677a2078739058f81eca1df69d12cd62b0"],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8c33f6677a2078739058f81eca1df69d12cd62b0":["66756ce4574b3c2fdc15740945140daf28792f5f"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}