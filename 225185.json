{"path":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#uploadConfigDir(File,String).mjava","commits":[{"id":"e4b636de9d648a57c06c19d05a2344be9a96ee11","date":1420139952,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#uploadConfigDir(File,String).mjava","pathOld":"/dev/null","sourceNew":"  public void uploadConfigDir(File configDir, String configName) throws IOException, KeeperException, InterruptedException {\n    try(SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null)) {\n      ZkController.uploadConfigDir(zkClient, configDir, configName);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c8a2521797f14d1d697a17a0069f5619cd211a6","date":1424361535,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#uploadConfigDir(File,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#uploadConfigDir(File,String).mjava","sourceNew":"  public void uploadConfigDir(File configDir, String configName) throws IOException, KeeperException, InterruptedException {\n    try(SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null)) {\n      ZkConfigManager manager = new ZkConfigManager(zkClient);\n      manager.uploadConfigDir(configDir.toPath(), configName);\n    }\n  }\n\n","sourceOld":"  public void uploadConfigDir(File configDir, String configName) throws IOException, KeeperException, InterruptedException {\n    try(SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null)) {\n      ZkController.uploadConfigDir(zkClient, configDir, configName);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9f1a5871b8ff5e2e0c0bf62340337c7f3801cffe","date":1452379366,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#uploadConfigDir(File,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#uploadConfigDir(File,String).mjava","sourceNew":"  public void uploadConfigDir(File configDir, String configName) throws IOException, KeeperException, InterruptedException {\n    try(SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, AbstractZkTestCase.TIMEOUT, null)) {\n      ZkConfigManager manager = new ZkConfigManager(zkClient);\n      manager.uploadConfigDir(configDir.toPath(), configName);\n    }\n  }\n\n","sourceOld":"  public void uploadConfigDir(File configDir, String configName) throws IOException, KeeperException, InterruptedException {\n    try(SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null)) {\n      ZkConfigManager manager = new ZkConfigManager(zkClient);\n      manager.uploadConfigDir(configDir.toPath(), configName);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e89a32cc825033ebae8bb9e1c6877c2d9d76749e","date":1476790453,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#uploadConfigDir(File,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#uploadConfigDir(File,String).mjava","sourceNew":"  /**\n   * @deprecated Use {@link #uploadConfigSet(Path, String)}\n   */\n  @Deprecated\n  public void uploadConfigDir(File configDir, String configName) throws IOException, KeeperException, InterruptedException {\n    uploadConfigSet(configDir.toPath(), configName);\n  }\n\n","sourceOld":"  public void uploadConfigDir(File configDir, String configName) throws IOException, KeeperException, InterruptedException {\n    try(SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, AbstractZkTestCase.TIMEOUT, null)) {\n      ZkConfigManager manager = new ZkConfigManager(zkClient);\n      manager.uploadConfigDir(configDir.toPath(), configName);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b66303389c8fb5f8671f51333b0f2eee428be1b","date":1476790458,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#uploadConfigDir(File,String).mjava","sourceNew":null,"sourceOld":"  /**\n   * @deprecated Use {@link #uploadConfigSet(Path, String)}\n   */\n  @Deprecated\n  public void uploadConfigDir(File configDir, String configName) throws IOException, KeeperException, InterruptedException {\n    uploadConfigSet(configDir.toPath(), configName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#uploadConfigDir(File,String).mjava","sourceNew":null,"sourceOld":"  public void uploadConfigDir(File configDir, String configName) throws IOException, KeeperException, InterruptedException {\n    try(SolrZkClient zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, AbstractZkTestCase.TIMEOUT, null)) {\n      ZkConfigManager manager = new ZkConfigManager(zkClient);\n      manager.uploadConfigDir(configDir.toPath(), configName);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e89a32cc825033ebae8bb9e1c6877c2d9d76749e":["9f1a5871b8ff5e2e0c0bf62340337c7f3801cffe"],"e4b636de9d648a57c06c19d05a2344be9a96ee11":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9f1a5871b8ff5e2e0c0bf62340337c7f3801cffe":["6c8a2521797f14d1d697a17a0069f5619cd211a6"],"6c8a2521797f14d1d697a17a0069f5619cd211a6":["e4b636de9d648a57c06c19d05a2344be9a96ee11"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["9f1a5871b8ff5e2e0c0bf62340337c7f3801cffe","3b66303389c8fb5f8671f51333b0f2eee428be1b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3b66303389c8fb5f8671f51333b0f2eee428be1b"],"3b66303389c8fb5f8671f51333b0f2eee428be1b":["e89a32cc825033ebae8bb9e1c6877c2d9d76749e"]},"commit2Childs":{"e89a32cc825033ebae8bb9e1c6877c2d9d76749e":["3b66303389c8fb5f8671f51333b0f2eee428be1b"],"e4b636de9d648a57c06c19d05a2344be9a96ee11":["6c8a2521797f14d1d697a17a0069f5619cd211a6"],"9f1a5871b8ff5e2e0c0bf62340337c7f3801cffe":["e89a32cc825033ebae8bb9e1c6877c2d9d76749e","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e4b636de9d648a57c06c19d05a2344be9a96ee11"],"6c8a2521797f14d1d697a17a0069f5619cd211a6":["9f1a5871b8ff5e2e0c0bf62340337c7f3801cffe"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"3b66303389c8fb5f8671f51333b0f2eee428be1b":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}