{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest#testInvalidShardNamesRejectedWhenCreatingImplicitCollection().mjava","commits":[{"id":"ac97ea104d893f16aab430d9904473bc1f233f3c","date":1496249396,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest#testInvalidShardNamesRejectedWhenCreatingImplicitCollection().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testInvalidShardNamesRejectedWhenCreatingImplicitCollection() {\n    final SolrException e = expectThrows(SolrException.class, () -> {\n        CollectionAdminRequest.createCollectionWithImplicitRouter(\"fine\", \"fine\", \"invalid$shard@name\",1,0,0);\n      });\n    final String exceptionMessage = e.getMessage();\n    assertTrue(exceptionMessage.contains(\"Invalid shard\"));\n    assertTrue(exceptionMessage.contains(\"invalid$shard@name\"));\n    assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3217321f3e1d7922898c6c633d17acfa840d6875","date":1496257480,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest#testInvalidShardNamesRejectedWhenCreatingImplicitCollection().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testInvalidShardNamesRejectedWhenCreatingImplicitCollection() {\n    final SolrException e = expectThrows(SolrException.class, () -> {\n        CollectionAdminRequest.createCollectionWithImplicitRouter(\"fine\", \"fine\", \"invalid$shard@name\",1,0,0);\n      });\n    final String exceptionMessage = e.getMessage();\n    assertTrue(exceptionMessage.contains(\"Invalid shard\"));\n    assertTrue(exceptionMessage.contains(\"invalid$shard@name\"));\n    assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42dc7f2d60851668d9efa2d12baa1d4ebe54b12f","date":1496281877,"type":0,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest#testInvalidShardNamesRejectedWhenCreatingImplicitCollection().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testInvalidShardNamesRejectedWhenCreatingImplicitCollection() {\n    final SolrException e = expectThrows(SolrException.class, () -> {\n        CollectionAdminRequest.createCollectionWithImplicitRouter(\"fine\", \"fine\", \"invalid$shard@name\",1,0,0);\n      });\n    final String exceptionMessage = e.getMessage();\n    assertTrue(exceptionMessage.contains(\"Invalid shard\"));\n    assertTrue(exceptionMessage.contains(\"invalid$shard@name\"));\n    assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest#testInvalidShardNamesRejectedWhenCreatingImplicitCollection().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testInvalidShardNamesRejectedWhenCreatingImplicitCollection() {\n    final SolrException e = expectThrows(SolrException.class, () -> {\n        CollectionAdminRequest.createCollectionWithImplicitRouter(\"fine\", \"fine\", \"invalid$shard@name\",1,0,0);\n      });\n    final String exceptionMessage = e.getMessage();\n    assertTrue(exceptionMessage.contains(\"Invalid shard\"));\n    assertTrue(exceptionMessage.contains(\"invalid$shard@name\"));\n    assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cba13865da71de3b9b0937fcbc66d726089356d","date":1537507909,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest#testInvalidShardNamesRejectedWhenCreatingImplicitCollection().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest#testInvalidShardNamesRejectedWhenCreatingImplicitCollection().mjava","sourceNew":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testInvalidShardNamesRejectedWhenCreatingImplicitCollection() {\n    final SolrException e = expectThrows(SolrException.class, () -> {\n        CollectionAdminRequest.createCollectionWithImplicitRouter(\"fine\", \"fine\", \"invalid$shard@name\",1,0,0);\n      });\n    final String exceptionMessage = e.getMessage();\n    assertTrue(exceptionMessage.contains(\"Invalid shard\"));\n    assertTrue(exceptionMessage.contains(\"invalid$shard@name\"));\n    assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidShardNamesRejectedWhenCreatingImplicitCollection() {\n    final SolrException e = expectThrows(SolrException.class, () -> {\n        CollectionAdminRequest.createCollectionWithImplicitRouter(\"fine\", \"fine\", \"invalid$shard@name\",1,0,0);\n      });\n    final String exceptionMessage = e.getMessage();\n    assertTrue(exceptionMessage.contains(\"Invalid shard\"));\n    assertTrue(exceptionMessage.contains(\"invalid$shard@name\"));\n    assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d35c84fdef07284c122012ca4000d3b7285a66e","date":1545962630,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest#testInvalidShardNamesRejectedWhenCreatingImplicitCollection().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest#testInvalidShardNamesRejectedWhenCreatingImplicitCollection().mjava","sourceNew":"  @Test\n  // commented out on: 24-Dec-2018   @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testInvalidShardNamesRejectedWhenCreatingImplicitCollection() {\n    final SolrException e = expectThrows(SolrException.class, () -> {\n        CollectionAdminRequest.createCollectionWithImplicitRouter(\"fine\", \"fine\", \"invalid$shard@name\",1,0,0);\n      });\n    final String exceptionMessage = e.getMessage();\n    assertTrue(exceptionMessage.contains(\"Invalid shard\"));\n    assertTrue(exceptionMessage.contains(\"invalid$shard@name\"));\n    assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n  }\n\n","sourceOld":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testInvalidShardNamesRejectedWhenCreatingImplicitCollection() {\n    final SolrException e = expectThrows(SolrException.class, () -> {\n        CollectionAdminRequest.createCollectionWithImplicitRouter(\"fine\", \"fine\", \"invalid$shard@name\",1,0,0);\n      });\n    final String exceptionMessage = e.getMessage();\n    assertTrue(exceptionMessage.contains(\"Invalid shard\"));\n    assertTrue(exceptionMessage.contains(\"invalid$shard@name\"));\n    assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","42dc7f2d60851668d9efa2d12baa1d4ebe54b12f"],"ac97ea104d893f16aab430d9904473bc1f233f3c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cba13865da71de3b9b0937fcbc66d726089356d":["3217321f3e1d7922898c6c633d17acfa840d6875"],"3217321f3e1d7922898c6c633d17acfa840d6875":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ac97ea104d893f16aab430d9904473bc1f233f3c"],"42dc7f2d60851668d9efa2d12baa1d4ebe54b12f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3217321f3e1d7922898c6c633d17acfa840d6875"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8d35c84fdef07284c122012ca4000d3b7285a66e"],"8d35c84fdef07284c122012ca4000d3b7285a66e":["4cba13865da71de3b9b0937fcbc66d726089356d"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"ac97ea104d893f16aab430d9904473bc1f233f3c":["3217321f3e1d7922898c6c633d17acfa840d6875"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","ac97ea104d893f16aab430d9904473bc1f233f3c","3217321f3e1d7922898c6c633d17acfa840d6875","42dc7f2d60851668d9efa2d12baa1d4ebe54b12f"],"4cba13865da71de3b9b0937fcbc66d726089356d":["8d35c84fdef07284c122012ca4000d3b7285a66e"],"3217321f3e1d7922898c6c633d17acfa840d6875":["4cba13865da71de3b9b0937fcbc66d726089356d","42dc7f2d60851668d9efa2d12baa1d4ebe54b12f"],"42dc7f2d60851668d9efa2d12baa1d4ebe54b12f":["e9017cf144952056066919f1ebc7897ff9bd71b1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"8d35c84fdef07284c122012ca4000d3b7285a66e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}