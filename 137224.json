{"path":"solr/core/src/test/org/apache/solr/search/similarities/TestSweetSpotSimilarityFactory#computeNorm(Similarity,int).mjava","commits":[{"id":"615370d2b876c3435773b5174df2e2242ad7981a","date":1495117651,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/similarities/TestSweetSpotSimilarityFactory#computeNorm(Similarity,int).mjava","pathOld":"/dev/null","sourceNew":"  private static float computeNorm(Similarity sim, int length) throws IOException {\n    String value = IntStream.range(0, length).mapToObj(i -> \"a\").collect(Collectors.joining(\" \"));\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig().setSimilarity(sim));\n    w.addDocument(Collections.singleton(newTextField(\"foo\", value, Store.NO)));\n    DirectoryReader reader = DirectoryReader.open(w);\n    w.close();\n    IndexSearcher searcher = new IndexSearcher(reader);\n    searcher.setSimilarity(sim);\n    Explanation expl = searcher.explain(new TermQuery(new Term(\"foo\", \"a\")), 0);\n    reader.close();\n    dir.close();\n    Explanation norm = findExplanation(expl, \"fieldNorm\");\n    assertNotNull(norm);\n    return norm.getValue();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/similarities/TestSweetSpotSimilarityFactory#computeNorm(Similarity,int).mjava","pathOld":"/dev/null","sourceNew":"  private static float computeNorm(Similarity sim, int length) throws IOException {\n    String value = IntStream.range(0, length).mapToObj(i -> \"a\").collect(Collectors.joining(\" \"));\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig().setSimilarity(sim));\n    w.addDocument(Collections.singleton(newTextField(\"foo\", value, Store.NO)));\n    DirectoryReader reader = DirectoryReader.open(w);\n    w.close();\n    IndexSearcher searcher = new IndexSearcher(reader);\n    searcher.setSimilarity(sim);\n    Explanation expl = searcher.explain(new TermQuery(new Term(\"foo\", \"a\")), 0);\n    reader.close();\n    dir.close();\n    Explanation norm = findExplanation(expl, \"fieldNorm\");\n    assertNotNull(norm);\n    return norm.getValue();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf","date":1514891219,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/similarities/TestSweetSpotSimilarityFactory#computeNorm(Similarity,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/similarities/TestSweetSpotSimilarityFactory#computeNorm(Similarity,int).mjava","sourceNew":"  private static float computeNorm(Similarity sim, int length) throws IOException {\n    String value = IntStream.range(0, length).mapToObj(i -> \"a\").collect(Collectors.joining(\" \"));\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig().setSimilarity(sim));\n    w.addDocument(Collections.singleton(newTextField(\"foo\", value, Store.NO)));\n    DirectoryReader reader = DirectoryReader.open(w);\n    w.close();\n    IndexSearcher searcher = new IndexSearcher(reader);\n    searcher.setSimilarity(sim);\n    Explanation expl = searcher.explain(new TermQuery(new Term(\"foo\", \"a\")), 0);\n    reader.close();\n    dir.close();\n    Explanation norm = findExplanation(expl, \"fieldNorm\");\n    assertNotNull(norm);\n    return norm.getValue().floatValue();\n  }\n\n","sourceOld":"  private static float computeNorm(Similarity sim, int length) throws IOException {\n    String value = IntStream.range(0, length).mapToObj(i -> \"a\").collect(Collectors.joining(\" \"));\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig().setSimilarity(sim));\n    w.addDocument(Collections.singleton(newTextField(\"foo\", value, Store.NO)));\n    DirectoryReader reader = DirectoryReader.open(w);\n    w.close();\n    IndexSearcher searcher = new IndexSearcher(reader);\n    searcher.setSimilarity(sim);\n    Explanation expl = searcher.explain(new TermQuery(new Term(\"foo\", \"a\")), 0);\n    reader.close();\n    dir.close();\n    Explanation norm = findExplanation(expl, \"fieldNorm\");\n    assertNotNull(norm);\n    return norm.getValue();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","615370d2b876c3435773b5174df2e2242ad7981a"],"615370d2b876c3435773b5174df2e2242ad7981a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf":["615370d2b876c3435773b5174df2e2242ad7981a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"615370d2b876c3435773b5174df2e2242ad7981a":["e9017cf144952056066919f1ebc7897ff9bd71b1","b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf"],"b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","615370d2b876c3435773b5174df2e2242ad7981a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}