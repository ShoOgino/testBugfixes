{"path":"solr/core/src/java/org/apache/solr/cloud/Overseer.CloudStateUpdater#getAssignedId(CloudState,String,CoreState).mjava","commits":[{"id":"f5d497ef5f4afb803f608c705a49782def2f7082","date":1327943814,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.CloudStateUpdater#getAssignedId(CloudState,String,CoreState).mjava","pathOld":"/dev/null","sourceNew":"      /*\n       * Return an already assigned id or null if not assigned\n       */\n      private String getAssignedId(final CloudState state, final String nodeName,\n          final CoreState coreState) {\n        final String key = coreState.getProperties().get(ZkStateReader.NODE_NAME_PROP) + \"_\" +  coreState.getProperties().get(ZkStateReader.CORE_NAME_PROP);\n        Map<String, Slice> slices = state.getSlices(coreState.getCollectionName());\n        if (slices != null) {\n          for (Slice slice : slices.values()) {\n            if (slice.getShards().get(key) != null) {\n              return slice.getName();\n            }\n          }\n        }\n        return null;\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b6fdfce35d0adb18836cf8711abe487a934df33","date":1327946200,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.CloudStateUpdater#getAssignedId(CloudState,String,CoreState).mjava","pathOld":"/dev/null","sourceNew":"      /*\n       * Return an already assigned id or null if not assigned\n       */\n      private String getAssignedId(final CloudState state, final String nodeName,\n          final CoreState coreState) {\n        final String key = coreState.getProperties().get(ZkStateReader.NODE_NAME_PROP) + \"_\" +  coreState.getProperties().get(ZkStateReader.CORE_NAME_PROP);\n        Map<String, Slice> slices = state.getSlices(coreState.getCollectionName());\n        if (slices != null) {\n          for (Slice slice : slices.values()) {\n            if (slice.getShards().get(key) != null) {\n              return slice.getName();\n            }\n          }\n        }\n        return null;\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"410e066f093e407222d9681429d209084e783149","date":1327958394,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.CloudStateUpdater#getAssignedId(CloudState,String,CoreState).mjava","pathOld":"/dev/null","sourceNew":"      /*\n       * Return an already assigned id or null if not assigned\n       */\n      private String getAssignedId(final CloudState state, final String nodeName,\n          final CoreState coreState) {\n        final String key = coreState.getProperties().get(ZkStateReader.NODE_NAME_PROP) + \"_\" +  coreState.getProperties().get(ZkStateReader.CORE_NAME_PROP);\n        Map<String, Slice> slices = state.getSlices(coreState.getCollectionName());\n        if (slices != null) {\n          for (Slice slice : slices.values()) {\n            if (slice.getShards().get(key) != null) {\n              return slice.getName();\n            }\n          }\n        }\n        return null;\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5093a9e893633cc091cf2f729d7863671c2b715","date":1339132888,"type":5,"author":"Sami Siren","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.CloudStateUpdater#getAssignedId(CloudState,String,ZkNodeProps).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.CloudStateUpdater#getAssignedId(CloudState,String,CoreState).mjava","sourceNew":"      /*\n       * Return an already assigned id or null if not assigned\n       */\n      private String getAssignedId(final CloudState state, final String nodeName,\n          final ZkNodeProps coreState) {\n        final String key = coreState.get(ZkStateReader.NODE_NAME_PROP) + \"_\" +  coreState.get(ZkStateReader.CORE_NAME_PROP);\n        Map<String, Slice> slices = state.getSlices(coreState.get(ZkStateReader.COLLECTION_PROP));\n        if (slices != null) {\n          for (Slice slice : slices.values()) {\n            if (slice.getShards().get(key) != null) {\n              return slice.getName();\n            }\n          }\n        }\n        return null;\n      }\n\n","sourceOld":"      /*\n       * Return an already assigned id or null if not assigned\n       */\n      private String getAssignedId(final CloudState state, final String nodeName,\n          final CoreState coreState) {\n        final String key = coreState.getProperties().get(ZkStateReader.NODE_NAME_PROP) + \"_\" +  coreState.getProperties().get(ZkStateReader.CORE_NAME_PROP);\n        Map<String, Slice> slices = state.getSlices(coreState.getCollectionName());\n        if (slices != null) {\n          for (Slice slice : slices.values()) {\n            if (slice.getShards().get(key) != null) {\n              return slice.getName();\n            }\n          }\n        }\n        return null;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"410e066f093e407222d9681429d209084e783149":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f5d497ef5f4afb803f608c705a49782def2f7082"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a5093a9e893633cc091cf2f729d7863671c2b715":["f5d497ef5f4afb803f608c705a49782def2f7082"],"5b6fdfce35d0adb18836cf8711abe487a934df33":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f5d497ef5f4afb803f608c705a49782def2f7082"],"f5d497ef5f4afb803f608c705a49782def2f7082":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a5093a9e893633cc091cf2f729d7863671c2b715"]},"commit2Childs":{"410e066f093e407222d9681429d209084e783149":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["410e066f093e407222d9681429d209084e783149","5b6fdfce35d0adb18836cf8711abe487a934df33","f5d497ef5f4afb803f608c705a49782def2f7082"],"a5093a9e893633cc091cf2f729d7863671c2b715":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5b6fdfce35d0adb18836cf8711abe487a934df33":[],"f5d497ef5f4afb803f608c705a49782def2f7082":["410e066f093e407222d9681429d209084e783149","a5093a9e893633cc091cf2f729d7863671c2b715","5b6fdfce35d0adb18836cf8711abe487a934df33"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["410e066f093e407222d9681429d209084e783149","5b6fdfce35d0adb18836cf8711abe487a934df33","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}