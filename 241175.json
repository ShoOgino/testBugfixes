{"path":"src/java/org/apache/solr/handler/SnapPuller#modifyIndexProps(String).mjava","commits":[{"id":"f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349","date":1224582283,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SnapPuller#modifyIndexProps(String).mjava","pathOld":"/dev/null","sourceNew":"  private void modifyIndexProps(String snap) {\n    LOG.info(\"New index installed. Updating index properties...\");\n    File idxprops = new File(solrCore.getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    if (idxprops.exists()) {\n      InputStream is = null;\n      try {\n        is = new FileInputStream(idxprops);\n        p.load(is);\n      } catch (Exception e) {\n        LOG.error(\"Unable to load index.properties\");\n      } finally {\n        closeNoExp(is);\n      }\n    }\n    p.put(\"index\", snap);\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"Unable to write index.properties\", e);\n    } finally {\n      closeNoExp(os);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["68a5c887424a2c6209bb3e87715125a2d398f6b9","217dd2e5ec780896e70b9d4bf5ff18c0079142fb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6c89a4aebdbd208d5517a488e7dd7c1d164c3bc9","date":1225202752,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SnapPuller#modifyIndexProps(String).mjava","pathOld":"src/java/org/apache/solr/handler/SnapPuller#modifyIndexProps(String).mjava","sourceNew":"  /**if the index is stale by any chance. use the new feature of solr to load index\n   * from a different dir in the data dir.\n   */\n  private void modifyIndexProps(String snap) {\n    LOG.info(\"New index installed. Updating index properties...\");\n    File idxprops = new File(solrCore.getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    if (idxprops.exists()) {\n      InputStream is = null;\n      try {\n        is = new FileInputStream(idxprops);\n        p.load(is);\n      } catch (Exception e) {\n        LOG.error(\"Unable to load index.properties\");\n      } finally {\n        closeNoExp(is);\n      }\n    }\n    p.put(\"index\", snap);\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"Unable to write index.properties\", e);\n    } finally {\n      closeNoExp(os);\n    }\n  }\n\n","sourceOld":"  private void modifyIndexProps(String snap) {\n    LOG.info(\"New index installed. Updating index properties...\");\n    File idxprops = new File(solrCore.getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    if (idxprops.exists()) {\n      InputStream is = null;\n      try {\n        is = new FileInputStream(idxprops);\n        p.load(is);\n      } catch (Exception e) {\n        LOG.error(\"Unable to load index.properties\");\n      } finally {\n        closeNoExp(is);\n      }\n    }\n    p.put(\"index\", snap);\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"Unable to write index.properties\", e);\n    } finally {\n      closeNoExp(os);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8620c64e323e74078214cf931e505179d14c888e","date":1225270494,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SnapPuller#modifyIndexProps(String).mjava","pathOld":"src/java/org/apache/solr/handler/SnapPuller#modifyIndexProps(String).mjava","sourceNew":"  /**\n   * If the index is stale by any chance, load index from a different dir in the data dir.\n   */\n  private void modifyIndexProps(String snap) {\n    LOG.info(\"New index installed. Updating index properties...\");\n    File idxprops = new File(solrCore.getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    if (idxprops.exists()) {\n      InputStream is = null;\n      try {\n        is = new FileInputStream(idxprops);\n        p.load(is);\n      } catch (Exception e) {\n        LOG.error(\"Unable to load index.properties\");\n      } finally {\n        closeNoExp(is);\n      }\n    }\n    p.put(\"index\", snap);\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"Unable to write index.properties\", e);\n    } finally {\n      closeNoExp(os);\n    }\n  }\n\n","sourceOld":"  /**if the index is stale by any chance. use the new feature of solr to load index\n   * from a different dir in the data dir.\n   */\n  private void modifyIndexProps(String snap) {\n    LOG.info(\"New index installed. Updating index properties...\");\n    File idxprops = new File(solrCore.getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    if (idxprops.exists()) {\n      InputStream is = null;\n      try {\n        is = new FileInputStream(idxprops);\n        p.load(is);\n      } catch (Exception e) {\n        LOG.error(\"Unable to load index.properties\");\n      } finally {\n        closeNoExp(is);\n      }\n    }\n    p.put(\"index\", snap);\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"Unable to write index.properties\", e);\n    } finally {\n      closeNoExp(os);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"217dd2e5ec780896e70b9d4bf5ff18c0079142fb","date":1241459287,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SnapPuller#modifyIndexProps(String).mjava","pathOld":"src/java/org/apache/solr/handler/SnapPuller#modifyIndexProps(String).mjava","sourceNew":"  /**\n   * If the index is stale by any chance, load index from a different dir in the data dir.\n   */\n  private void modifyIndexProps(String snap) {\n    LOG.info(\"New index installed. Updating index properties...\");\n    File idxprops = new File(solrCore.getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    if (idxprops.exists()) {\n      InputStream is = null;\n      try {\n        is = new FileInputStream(idxprops);\n        p.load(is);\n      } catch (Exception e) {\n        LOG.error(\"Unable to load index.properties\");\n      } finally {\n        IOUtils.closeQuietly(is);\n      }\n    }\n    p.put(\"index\", snap);\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"Unable to write index.properties\", e);\n    } finally {\n      IOUtils.closeQuietly(os);\n    }\n  }\n\n","sourceOld":"  /**\n   * If the index is stale by any chance, load index from a different dir in the data dir.\n   */\n  private void modifyIndexProps(String snap) {\n    LOG.info(\"New index installed. Updating index properties...\");\n    File idxprops = new File(solrCore.getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    if (idxprops.exists()) {\n      InputStream is = null;\n      try {\n        is = new FileInputStream(idxprops);\n        p.load(is);\n      } catch (Exception e) {\n        LOG.error(\"Unable to load index.properties\");\n      } finally {\n        closeNoExp(is);\n      }\n    }\n    p.put(\"index\", snap);\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"Unable to write index.properties\", e);\n    } finally {\n      closeNoExp(os);\n    }\n  }\n\n","bugFix":["f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"68a5c887424a2c6209bb3e87715125a2d398f6b9","date":1247133435,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SnapPuller#modifyIndexProps(String).mjava","pathOld":"src/java/org/apache/solr/handler/SnapPuller#modifyIndexProps(String).mjava","sourceNew":"  /**\n   * If the index is stale by any chance, load index from a different dir in the data dir.\n   */\n  private boolean modifyIndexProps(String snap) {\n    LOG.info(\"New index installed. Updating index properties...\");\n    File idxprops = new File(solrCore.getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    if (idxprops.exists()) {\n      InputStream is = null;\n      try {\n        is = new FileInputStream(idxprops);\n        p.load(is);\n      } catch (Exception e) {\n        LOG.error(\"Unable to load index.properties\");\n      } finally {\n        IOUtils.closeQuietly(is);\n      }\n    }\n    p.put(\"index\", snap);\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"Unable to write index.properties\", e);\n    } finally {\n      IOUtils.closeQuietly(os);\n    }\n      return true;\n  }\n\n","sourceOld":"  /**\n   * If the index is stale by any chance, load index from a different dir in the data dir.\n   */\n  private void modifyIndexProps(String snap) {\n    LOG.info(\"New index installed. Updating index properties...\");\n    File idxprops = new File(solrCore.getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    if (idxprops.exists()) {\n      InputStream is = null;\n      try {\n        is = new FileInputStream(idxprops);\n        p.load(is);\n      } catch (Exception e) {\n        LOG.error(\"Unable to load index.properties\");\n      } finally {\n        IOUtils.closeQuietly(is);\n      }\n    }\n    p.put(\"index\", snap);\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"Unable to write index.properties\", e);\n    } finally {\n      IOUtils.closeQuietly(os);\n    }\n  }\n\n","bugFix":["f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7e0049b151d932b18c3acc1ef8366262ae9809d","date":1247648156,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SnapPuller#modifyIndexProps(String).mjava","pathOld":"src/java/org/apache/solr/handler/SnapPuller#modifyIndexProps(String).mjava","sourceNew":"  /**\n   * If the index is stale by any chance, load index from a different dir in the data dir.\n   */\n  private boolean modifyIndexProps(String tmpIdxDirName) {\n    LOG.info(\"New index installed. Updating index properties...\");\n    File idxprops = new File(solrCore.getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    if (idxprops.exists()) {\n      InputStream is = null;\n      try {\n        is = new FileInputStream(idxprops);\n        p.load(is);\n      } catch (Exception e) {\n        LOG.error(\"Unable to load index.properties\");\n      } finally {\n        IOUtils.closeQuietly(is);\n      }\n    }\n    p.put(\"index\", tmpIdxDirName);\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"Unable to write index.properties\", e);\n    } finally {\n      IOUtils.closeQuietly(os);\n    }\n      return true;\n  }\n\n","sourceOld":"  /**\n   * If the index is stale by any chance, load index from a different dir in the data dir.\n   */\n  private boolean modifyIndexProps(String snap) {\n    LOG.info(\"New index installed. Updating index properties...\");\n    File idxprops = new File(solrCore.getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    if (idxprops.exists()) {\n      InputStream is = null;\n      try {\n        is = new FileInputStream(idxprops);\n        p.load(is);\n      } catch (Exception e) {\n        LOG.error(\"Unable to load index.properties\");\n      } finally {\n        IOUtils.closeQuietly(is);\n      }\n    }\n    p.put(\"index\", snap);\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"Unable to write index.properties\", e);\n    } finally {\n      IOUtils.closeQuietly(os);\n    }\n      return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/SnapPuller#modifyIndexProps(String).mjava","pathOld":"src/java/org/apache/solr/handler/SnapPuller#modifyIndexProps(String).mjava","sourceNew":"  /**\n   * If the index is stale by any chance, load index from a different dir in the data dir.\n   */\n  private boolean modifyIndexProps(String tmpIdxDirName) {\n    LOG.info(\"New index installed. Updating index properties...\");\n    File idxprops = new File(solrCore.getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    if (idxprops.exists()) {\n      InputStream is = null;\n      try {\n        is = new FileInputStream(idxprops);\n        p.load(is);\n      } catch (Exception e) {\n        LOG.error(\"Unable to load index.properties\");\n      } finally {\n        IOUtils.closeQuietly(is);\n      }\n    }\n    p.put(\"index\", tmpIdxDirName);\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"Unable to write index.properties\", e);\n    } finally {\n      IOUtils.closeQuietly(os);\n    }\n      return true;\n  }\n\n","sourceOld":"  /**\n   * If the index is stale by any chance, load index from a different dir in the data dir.\n   */\n  private boolean modifyIndexProps(String tmpIdxDirName) {\n    LOG.info(\"New index installed. Updating index properties...\");\n    File idxprops = new File(solrCore.getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    if (idxprops.exists()) {\n      InputStream is = null;\n      try {\n        is = new FileInputStream(idxprops);\n        p.load(is);\n      } catch (Exception e) {\n        LOG.error(\"Unable to load index.properties\");\n      } finally {\n        IOUtils.closeQuietly(is);\n      }\n    }\n    p.put(\"index\", tmpIdxDirName);\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"Unable to write index.properties\", e);\n    } finally {\n      IOUtils.closeQuietly(os);\n    }\n      return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"68a5c887424a2c6209bb3e87715125a2d398f6b9":["217dd2e5ec780896e70b9d4bf5ff18c0079142fb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"8620c64e323e74078214cf931e505179d14c888e":["6c89a4aebdbd208d5517a488e7dd7c1d164c3bc9"],"c7e0049b151d932b18c3acc1ef8366262ae9809d":["68a5c887424a2c6209bb3e87715125a2d398f6b9"],"ad94625fb8d088209f46650c8097196fec67f00c":["c7e0049b151d932b18c3acc1ef8366262ae9809d"],"6c89a4aebdbd208d5517a488e7dd7c1d164c3bc9":["f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"217dd2e5ec780896e70b9d4bf5ff18c0079142fb":["8620c64e323e74078214cf931e505179d14c888e"]},"commit2Childs":{"f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349":["6c89a4aebdbd208d5517a488e7dd7c1d164c3bc9"],"68a5c887424a2c6209bb3e87715125a2d398f6b9":["c7e0049b151d932b18c3acc1ef8366262ae9809d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8620c64e323e74078214cf931e505179d14c888e":["217dd2e5ec780896e70b9d4bf5ff18c0079142fb"],"c7e0049b151d932b18c3acc1ef8366262ae9809d":["ad94625fb8d088209f46650c8097196fec67f00c"],"6c89a4aebdbd208d5517a488e7dd7c1d164c3bc9":["8620c64e323e74078214cf931e505179d14c888e"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"217dd2e5ec780896e70b9d4bf5ff18c0079142fb":["68a5c887424a2c6209bb3e87715125a2d398f6b9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}