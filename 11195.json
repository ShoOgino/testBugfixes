{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/CharacterUtils.Java5CharacterUtils#fill(CharacterBuffer,Reader).mjava","commits":[{"id":"1d6179f9c4237a7e5d423f4e4b439a94e967efc9","date":1304382587,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/CharacterUtils.Java5CharacterUtils#fill(CharacterBuffer,Reader).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/CharacterUtils.Java5CharacterUtils#fill(CharacterBuffer,Reader).mjava","sourceNew":"    @Override\n    public boolean fill(final CharacterBuffer buffer, final Reader reader) throws IOException {\n      final char[] charBuffer = buffer.buffer;\n      buffer.offset = 0;\n      charBuffer[0] = buffer.lastTrailingHighSurrogate;\n      final int offset = buffer.lastTrailingHighSurrogate == 0 ? 0 : 1;\n      buffer.lastTrailingHighSurrogate = 0;\n      final int read = reader.read(charBuffer, offset, charBuffer.length\n          - offset);\n      if (read == -1) {\n        buffer.length = offset;\n        return offset != 0;\n      }\n      buffer.length = read + offset;\n      // special case if the read returns 0 and the lastTrailingHighSurrogate was set\n      if (buffer.length > 1\n          && Character.isHighSurrogate(charBuffer[buffer.length - 1])) {\n        buffer.lastTrailingHighSurrogate = charBuffer[--buffer.length];\n      }\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean fill(final CharacterBuffer buffer, final Reader reader) throws IOException {\n      final char[] charBuffer = buffer.buffer;\n      buffer.offset = 0;\n      charBuffer[0] = buffer.lastTrailingHighSurrogate;\n      final int offset = buffer.lastTrailingHighSurrogate == 0 ? 0 : 1;\n      buffer.lastTrailingHighSurrogate = 0;\n      final int read = reader.read(charBuffer, offset, charBuffer.length\n          - offset);\n      if (read == -1) {\n        buffer.length = offset;\n        return offset != 0;\n      }\n      buffer.length = read + offset;\n      // special case if the read returns 0 and the lastTrailingHighSurrogate was set\n      if (buffer.length > 1\n          && Character.isHighSurrogate(charBuffer[buffer.length - 1])) {\n        buffer.lastTrailingHighSurrogate = charBuffer[--buffer.length];\n      }\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c700f8d0842d3e52bb2bdfbfdc046a137e836edb","date":1305285499,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/CharacterUtils.Java5CharacterUtils#fill(CharacterBuffer,Reader).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/CharacterUtils.Java5CharacterUtils#fill(CharacterBuffer,Reader).mjava","sourceNew":"    @Override\n    public boolean fill(final CharacterBuffer buffer, final Reader reader) throws IOException {\n      final char[] charBuffer = buffer.buffer;\n      buffer.offset = 0;\n      charBuffer[0] = buffer.lastTrailingHighSurrogate;\n      final int offset = buffer.lastTrailingHighSurrogate == 0 ? 0 : 1;\n      buffer.lastTrailingHighSurrogate = 0;\n      final int read = reader.read(charBuffer, offset, charBuffer.length\n          - offset);\n      if (read == -1) {\n        buffer.length = offset;\n        return offset != 0;\n      }\n      buffer.length = read + offset;\n      // special case if the read returns 0 and the lastTrailingHighSurrogate was set\n      if (buffer.length > 1\n          && Character.isHighSurrogate(charBuffer[buffer.length - 1])) {\n        buffer.lastTrailingHighSurrogate = charBuffer[--buffer.length];\n      }\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean fill(final CharacterBuffer buffer, final Reader reader) throws IOException {\n      final char[] charBuffer = buffer.buffer;\n      buffer.offset = 0;\n      charBuffer[0] = buffer.lastTrailingHighSurrogate;\n      final int offset = buffer.lastTrailingHighSurrogate == 0 ? 0 : 1;\n      buffer.lastTrailingHighSurrogate = 0;\n      final int read = reader.read(charBuffer, offset, charBuffer.length\n          - offset);\n      if (read == -1) {\n        buffer.length = offset;\n        return offset != 0;\n      }\n      buffer.length = read + offset;\n      // special case if the read returns 0 and the lastTrailingHighSurrogate was set\n      if (buffer.length > 1\n          && Character.isHighSurrogate(charBuffer[buffer.length - 1])) {\n        buffer.lastTrailingHighSurrogate = charBuffer[--buffer.length];\n      }\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/CharacterUtils.Java5CharacterUtils#fill(CharacterBuffer,Reader).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/CharacterUtils.Java5CharacterUtils#fill(CharacterBuffer,Reader).mjava","sourceNew":"    @Override\n    public boolean fill(final CharacterBuffer buffer, final Reader reader) throws IOException {\n      final char[] charBuffer = buffer.buffer;\n      buffer.offset = 0;\n      charBuffer[0] = buffer.lastTrailingHighSurrogate;\n      final int offset = buffer.lastTrailingHighSurrogate == 0 ? 0 : 1;\n      buffer.lastTrailingHighSurrogate = 0;\n      final int read = reader.read(charBuffer, offset, charBuffer.length\n          - offset);\n      if (read == -1) {\n        buffer.length = offset;\n        return offset != 0;\n      }\n      buffer.length = read + offset;\n      // special case if the read returns 0 and the lastTrailingHighSurrogate was set\n      if (buffer.length > 1\n          && Character.isHighSurrogate(charBuffer[buffer.length - 1])) {\n        buffer.lastTrailingHighSurrogate = charBuffer[--buffer.length];\n      }\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean fill(final CharacterBuffer buffer, final Reader reader) throws IOException {\n      final char[] charBuffer = buffer.buffer;\n      buffer.offset = 0;\n      charBuffer[0] = buffer.lastTrailingHighSurrogate;\n      final int offset = buffer.lastTrailingHighSurrogate == 0 ? 0 : 1;\n      buffer.lastTrailingHighSurrogate = 0;\n      final int read = reader.read(charBuffer, offset, charBuffer.length\n          - offset);\n      if (read == -1) {\n        buffer.length = offset;\n        return offset != 0;\n      }\n      buffer.length = read + offset;\n      // special case if the read returns 0 and the lastTrailingHighSurrogate was set\n      if (buffer.length > 1\n          && Character.isHighSurrogate(charBuffer[buffer.length - 1])) {\n        buffer.lastTrailingHighSurrogate = charBuffer[--buffer.length];\n      }\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04f82d9fd0bb0ce5b026d977560c0dbe2ee0c394","date":1332334407,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/CharacterUtils.Java5CharacterUtils#fill(CharacterBuffer,Reader).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/CharacterUtils.Java5CharacterUtils#fill(CharacterBuffer,Reader).mjava","sourceNew":"    @Override\n    public boolean fill(final CharacterBuffer buffer, final Reader reader) throws IOException {\n      final char[] charBuffer = buffer.buffer;\n      buffer.offset = 0;\n      final int offset;\n\n      // Install the previously saved ending high surrogate:\n      if (buffer.lastTrailingHighSurrogate != 0) {\n        charBuffer[0] = buffer.lastTrailingHighSurrogate;\n        offset = 1;\n      } else {\n        offset = 0;\n      }\n\n      final int read = reader.read(charBuffer,\n                                   offset,\n                                   charBuffer.length - offset);\n      if (read == -1) {\n        buffer.length = offset;\n        buffer.lastTrailingHighSurrogate = 0;\n        return offset != 0;\n      }\n      assert read > 0;\n      buffer.length = read + offset;\n\n      // If we read only a single char, and that char was a\n      // high surrogate, read again:\n      if (buffer.length == 1\n          && Character.isHighSurrogate(charBuffer[buffer.length - 1])) {\n        final int read2 = reader.read(charBuffer,\n                                      1,\n                                      charBuffer.length - 1);\n        if (read2 == -1) {\n          // NOTE: mal-formed input (ended on a high\n          // surrogate)!  Consumer must deal with it...\n          return true;\n        }\n        assert read2 > 0;\n\n        buffer.length += read2;\n      }\n\n      if (buffer.length > 1\n          && Character.isHighSurrogate(charBuffer[buffer.length - 1])) {\n        buffer.lastTrailingHighSurrogate = charBuffer[--buffer.length];\n      } else {\n        buffer.lastTrailingHighSurrogate = 0;\n      }\n\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean fill(final CharacterBuffer buffer, final Reader reader) throws IOException {\n      final char[] charBuffer = buffer.buffer;\n      buffer.offset = 0;\n      charBuffer[0] = buffer.lastTrailingHighSurrogate;\n      final int offset = buffer.lastTrailingHighSurrogate == 0 ? 0 : 1;\n      buffer.lastTrailingHighSurrogate = 0;\n      final int read = reader.read(charBuffer, offset, charBuffer.length\n          - offset);\n      if (read == -1) {\n        buffer.length = offset;\n        return offset != 0;\n      }\n      buffer.length = read + offset;\n      // special case if the read returns 0 and the lastTrailingHighSurrogate was set\n      if (buffer.length > 1\n          && Character.isHighSurrogate(charBuffer[buffer.length - 1])) {\n        buffer.lastTrailingHighSurrogate = charBuffer[--buffer.length];\n      }\n      return true;\n    }\n\n","bugFix":["966b079690131e434b39530d82cc413f5aff4cd5"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/CharacterUtils.Java5CharacterUtils#fill(CharacterBuffer,Reader).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/CharacterUtils.Java5CharacterUtils#fill(CharacterBuffer,Reader).mjava","sourceNew":"    @Override\n    public boolean fill(final CharacterBuffer buffer, final Reader reader) throws IOException {\n      final char[] charBuffer = buffer.buffer;\n      buffer.offset = 0;\n      final int offset;\n\n      // Install the previously saved ending high surrogate:\n      if (buffer.lastTrailingHighSurrogate != 0) {\n        charBuffer[0] = buffer.lastTrailingHighSurrogate;\n        offset = 1;\n      } else {\n        offset = 0;\n      }\n\n      final int read = reader.read(charBuffer,\n                                   offset,\n                                   charBuffer.length - offset);\n      if (read == -1) {\n        buffer.length = offset;\n        buffer.lastTrailingHighSurrogate = 0;\n        return offset != 0;\n      }\n      assert read > 0;\n      buffer.length = read + offset;\n\n      // If we read only a single char, and that char was a\n      // high surrogate, read again:\n      if (buffer.length == 1\n          && Character.isHighSurrogate(charBuffer[buffer.length - 1])) {\n        final int read2 = reader.read(charBuffer,\n                                      1,\n                                      charBuffer.length - 1);\n        if (read2 == -1) {\n          // NOTE: mal-formed input (ended on a high\n          // surrogate)!  Consumer must deal with it...\n          return true;\n        }\n        assert read2 > 0;\n\n        buffer.length += read2;\n      }\n\n      if (buffer.length > 1\n          && Character.isHighSurrogate(charBuffer[buffer.length - 1])) {\n        buffer.lastTrailingHighSurrogate = charBuffer[--buffer.length];\n      } else {\n        buffer.lastTrailingHighSurrogate = 0;\n      }\n\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean fill(final CharacterBuffer buffer, final Reader reader) throws IOException {\n      final char[] charBuffer = buffer.buffer;\n      buffer.offset = 0;\n      final int offset;\n\n      // Install the previously saved ending high surrogate:\n      if (buffer.lastTrailingHighSurrogate != 0) {\n        charBuffer[0] = buffer.lastTrailingHighSurrogate;\n        offset = 1;\n      } else {\n        offset = 0;\n      }\n\n      final int read = reader.read(charBuffer,\n                                   offset,\n                                   charBuffer.length - offset);\n      if (read == -1) {\n        buffer.length = offset;\n        buffer.lastTrailingHighSurrogate = 0;\n        return offset != 0;\n      }\n      assert read > 0;\n      buffer.length = read + offset;\n\n      // If we read only a single char, and that char was a\n      // high surrogate, read again:\n      if (buffer.length == 1\n          && Character.isHighSurrogate(charBuffer[buffer.length - 1])) {\n        final int read2 = reader.read(charBuffer,\n                                      1,\n                                      charBuffer.length - 1);\n        if (read2 == -1) {\n          // NOTE: mal-formed input (ended on a high\n          // surrogate)!  Consumer must deal with it...\n          return true;\n        }\n        assert read2 > 0;\n\n        buffer.length += read2;\n      }\n\n      if (buffer.length > 1\n          && Character.isHighSurrogate(charBuffer[buffer.length - 1])) {\n        buffer.lastTrailingHighSurrogate = charBuffer[--buffer.length];\n      } else {\n        buffer.lastTrailingHighSurrogate = 0;\n      }\n\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["04f82d9fd0bb0ce5b026d977560c0dbe2ee0c394"],"1d6179f9c4237a7e5d423f4e4b439a94e967efc9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1d6179f9c4237a7e5d423f4e4b439a94e967efc9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1d6179f9c4237a7e5d423f4e4b439a94e967efc9"],"04f82d9fd0bb0ce5b026d977560c0dbe2ee0c394":["1d6179f9c4237a7e5d423f4e4b439a94e967efc9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1d6179f9c4237a7e5d423f4e4b439a94e967efc9":["a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb","04f82d9fd0bb0ce5b026d977560c0dbe2ee0c394"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1d6179f9c4237a7e5d423f4e4b439a94e967efc9","a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":[],"04f82d9fd0bb0ce5b026d977560c0dbe2ee0c394":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}