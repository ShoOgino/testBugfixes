{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest#mapParams(String...).mjava","commits":[{"id":"f00f1c5fad501b66705121feb623f8cfbb6712f9","date":1431347838,"type":1,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest#mapParams(String...).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/StreamingTest#mapParams(String...).mjava","sourceNew":"  protected Map mapParams(String... vals) {\n    Map params = new HashMap();\n    String k = null;\n    for(String val : vals) {\n      if(k == null) {\n        k = val;\n      } else {\n        params.put(k, val);\n        k = null;\n      }\n    }\n\n    return params;\n  }\n\n","sourceOld":"  protected Map mapParams(String... vals) {\n    Map params = new HashMap();\n    String k = null;\n    for(String val : vals) {\n      if(k == null) {\n        k = val;\n      } else {\n        params.put(k, val);\n        k = null;\n      }\n    }\n\n    return params;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"826d15444ddf61716dc768c229cd54b2c2ccce1c","date":1462822652,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest#mapParams(String...).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest#mapParams(String...).mjava","sourceNew":"  public static SolrParams mapParams(String... vals) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    assertEquals(\"Parameters passed in here must be in pairs!\", 0, (vals.length % 2));\n    for (int idx = 0; idx < vals.length; idx += 2) {\n      params.add(vals[idx], vals[idx + 1]);\n    }\n\n    return params;\n  }\n\n","sourceOld":"  protected Map mapParams(String... vals) {\n    Map params = new HashMap();\n    String k = null;\n    for(String val : vals) {\n      if(k == null) {\n        k = val;\n      } else {\n        params.put(k, val);\n        k = null;\n      }\n    }\n\n    return params;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e66a459d38c1c4a2f97128433dab546f683a9fed","date":1462873476,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest#mapParams(String...).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest#mapParams(String...).mjava","sourceNew":"  public static SolrParams mapParams(String... vals) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    assertEquals(\"Parameters passed in here must be in pairs!\", 0, (vals.length % 2));\n    for (int idx = 0; idx < vals.length; idx += 2) {\n      params.add(vals[idx], vals[idx + 1]);\n    }\n\n    return params;\n  }\n\n","sourceOld":"  protected Map mapParams(String... vals) {\n    Map params = new HashMap();\n    String k = null;\n    for(String val : vals) {\n      if(k == null) {\n        k = val;\n      } else {\n        params.put(k, val);\n        k = null;\n      }\n    }\n\n    return params;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest#mapParams(String...).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest#mapParams(String...).mjava","sourceNew":"  public static SolrParams mapParams(String... vals) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    assertEquals(\"Parameters passed in here must be in pairs!\", 0, (vals.length % 2));\n    for (int idx = 0; idx < vals.length; idx += 2) {\n      params.add(vals[idx], vals[idx + 1]);\n    }\n\n    return params;\n  }\n\n","sourceOld":"  protected Map mapParams(String... vals) {\n    Map params = new HashMap();\n    String k = null;\n    for(String val : vals) {\n      if(k == null) {\n        k = val;\n      } else {\n        params.put(k, val);\n        k = null;\n      }\n    }\n\n    return params;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest#mapParams(String...).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest#mapParams(String...).mjava","sourceNew":"  public static SolrParams mapParams(String... vals) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    assertEquals(\"Parameters passed in here must be in pairs!\", 0, (vals.length % 2));\n    for (int idx = 0; idx < vals.length; idx += 2) {\n      params.add(vals[idx], vals[idx + 1]);\n    }\n\n    return params;\n  }\n\n","sourceOld":"  protected Map mapParams(String... vals) {\n    Map params = new HashMap();\n    String k = null;\n    for(String val : vals) {\n      if(k == null) {\n        k = val;\n      } else {\n        params.put(k, val);\n        k = null;\n      }\n    }\n\n    return params;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da8b6cfd1b67b932db9907356935046c4d40d033","date":1479958221,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest#mapParams(String...).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest#mapParams(String...).mjava","sourceNew":"  public static SolrParams mapParams(String... vals) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    assertEquals(\"Parameters passed in here must be in pairs!\", 0, (vals.length % 2));\n    for (int idx = 0; idx < vals.length; idx += 2) {\n      params.add(vals[idx], vals[idx + 1]);\n    }\n    if(random().nextBoolean()) params.add(\"wt\",\"javabin\");\n    return params;\n  }\n\n","sourceOld":"  public static SolrParams mapParams(String... vals) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    assertEquals(\"Parameters passed in here must be in pairs!\", 0, (vals.length % 2));\n    for (int idx = 0; idx < vals.length; idx += 2) {\n      params.add(vals[idx], vals[idx + 1]);\n    }\n\n    return params;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"727bb765ff2542275f6d31f67be18d7104bae148","date":1480353976,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest#mapParams(String...).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest#mapParams(String...).mjava","sourceNew":"  public static SolrParams mapParams(String... vals) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    assertEquals(\"Parameters passed in here must be in pairs!\", 0, (vals.length % 2));\n    for (int idx = 0; idx < vals.length; idx += 2) {\n      params.add(vals[idx], vals[idx + 1]);\n    }\n    if(random().nextBoolean()) params.add(\"wt\",\"javabin\");\n    return params;\n  }\n\n","sourceOld":"  public static SolrParams mapParams(String... vals) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    assertEquals(\"Parameters passed in here must be in pairs!\", 0, (vals.length % 2));\n    for (int idx = 0; idx < vals.length; idx += 2) {\n      params.add(vals[idx], vals[idx + 1]);\n    }\n\n    return params;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"da8b6cfd1b67b932db9907356935046c4d40d033":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"f00f1c5fad501b66705121feb623f8cfbb6712f9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"727bb765ff2542275f6d31f67be18d7104bae148":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","da8b6cfd1b67b932db9907356935046c4d40d033"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e66a459d38c1c4a2f97128433dab546f683a9fed":["f00f1c5fad501b66705121feb623f8cfbb6712f9","826d15444ddf61716dc768c229cd54b2c2ccce1c"],"826d15444ddf61716dc768c229cd54b2c2ccce1c":["f00f1c5fad501b66705121feb623f8cfbb6712f9"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["f00f1c5fad501b66705121feb623f8cfbb6712f9","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["da8b6cfd1b67b932db9907356935046c4d40d033"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["f00f1c5fad501b66705121feb623f8cfbb6712f9","826d15444ddf61716dc768c229cd54b2c2ccce1c"]},"commit2Childs":{"da8b6cfd1b67b932db9907356935046c4d40d033":["727bb765ff2542275f6d31f67be18d7104bae148","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f00f1c5fad501b66705121feb623f8cfbb6712f9":["e66a459d38c1c4a2f97128433dab546f683a9fed","826d15444ddf61716dc768c229cd54b2c2ccce1c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"727bb765ff2542275f6d31f67be18d7104bae148":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f00f1c5fad501b66705121feb623f8cfbb6712f9"],"e66a459d38c1c4a2f97128433dab546f683a9fed":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["727bb765ff2542275f6d31f67be18d7104bae148"],"826d15444ddf61716dc768c229cd54b2c2ccce1c":["e66a459d38c1c4a2f97128433dab546f683a9fed","d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["da8b6cfd1b67b932db9907356935046c4d40d033","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["727bb765ff2542275f6d31f67be18d7104bae148","e66a459d38c1c4a2f97128433dab546f683a9fed","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}