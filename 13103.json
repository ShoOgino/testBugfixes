{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#segString(Iterable[SegmentCommitInfo]).mjava","commits":[{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#segString(Iterable[SegmentCommitInfo]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#segString(Iterable[SegmentInfoPerCommit]).mjava","sourceNew":"  /** Returns a string description of the specified\n   *  segments, for debugging.\n   *\n   * @lucene.internal */\n  public synchronized String segString(Iterable<SegmentCommitInfo> infos) {\n    final StringBuilder buffer = new StringBuilder();\n    for(final SegmentCommitInfo info : infos) {\n      if (buffer.length() > 0) {\n        buffer.append(' ');\n      }\n      buffer.append(segString(info));\n    }\n    return buffer.toString();\n  }\n\n","sourceOld":"  /** Returns a string description of the specified\n   *  segments, for debugging.\n   *\n   * @lucene.internal */\n  public synchronized String segString(Iterable<SegmentInfoPerCommit> infos) {\n    final StringBuilder buffer = new StringBuilder();\n    for(final SegmentInfoPerCommit info : infos) {\n      if (buffer.length() > 0) {\n        buffer.append(' ');\n      }\n      buffer.append(segString(info));\n    }\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9e22bdf0692bfa61e342b04a6ac7078670c1e16","date":1436866730,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#segString(Iterable[SegmentCommitInfo]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#segString(Iterable[SegmentCommitInfo]).mjava","sourceNew":"  /** Returns a string description of the specified\n   *  segments, for debugging.\n   *\n   * @lucene.internal */\n  synchronized String segString(Iterable<SegmentCommitInfo> infos) {\n    final StringBuilder buffer = new StringBuilder();\n    for(final SegmentCommitInfo info : infos) {\n      if (buffer.length() > 0) {\n        buffer.append(' ');\n      }\n      buffer.append(segString(info));\n    }\n    return buffer.toString();\n  }\n\n","sourceOld":"  /** Returns a string description of the specified\n   *  segments, for debugging.\n   *\n   * @lucene.internal */\n  public synchronized String segString(Iterable<SegmentCommitInfo> infos) {\n    final StringBuilder buffer = new StringBuilder();\n    for(final SegmentCommitInfo info : infos) {\n      if (buffer.length() > 0) {\n        buffer.append(' ');\n      }\n      buffer.append(segString(info));\n    }\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d28f215464f76024caf026606f8ea51a5319c53","date":1527226629,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#segString(Iterable[SegmentCommitInfo]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#segString(Iterable[SegmentCommitInfo]).mjava","sourceNew":"  synchronized String segString(Iterable<SegmentCommitInfo> infos) {\n    return StreamSupport.stream(infos.spliterator(), false)\n        .map(this::segString).collect(Collectors.joining(\" \"));\n  }\n\n","sourceOld":"  /** Returns a string description of the specified\n   *  segments, for debugging.\n   *\n   * @lucene.internal */\n  synchronized String segString(Iterable<SegmentCommitInfo> infos) {\n    final StringBuilder buffer = new StringBuilder();\n    for(final SegmentCommitInfo info : infos) {\n      if (buffer.length() > 0) {\n        buffer.append(' ');\n      }\n      buffer.append(segString(info));\n    }\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d9e22bdf0692bfa61e342b04a6ac7078670c1e16":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1d28f215464f76024caf026606f8ea51a5319c53":["d9e22bdf0692bfa61e342b04a6ac7078670c1e16"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1d28f215464f76024caf026606f8ea51a5319c53"]},"commit2Childs":{"d9e22bdf0692bfa61e342b04a6ac7078670c1e16":["1d28f215464f76024caf026606f8ea51a5319c53"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["d9e22bdf0692bfa61e342b04a6ac7078670c1e16"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"1d28f215464f76024caf026606f8ea51a5319c53":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}