{"path":"solr/core/src/java/org/apache/solr/core/ImplicitPlugins#getReqHandlerInfo(String,Class,Map).mjava","commits":[{"id":"9aea0485ecacb6734c17da2d02569816c23a69c1","date":1425707735,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ImplicitPlugins#getReqHandlerInfo(String,Class,Map).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginsRegistry#getReqHandlerInfo(String,Class,Map).mjava","sourceNew":"  public static PluginInfo getReqHandlerInfo(String name, Class clz, Map defaults){\n    if(defaults == null) defaults= Collections.emptyMap();\n    Map m = makeMap(\"name\", name, \"class\", clz.getName());\n    return new PluginInfo(SolrRequestHandler.TYPE, m, new NamedList<>(singletonMap(DEFAULTS, new NamedList(defaults))),null);\n  }\n\n","sourceOld":"  public static PluginInfo getReqHandlerInfo(String name, Class clz, Map defaults){\n    if(defaults == null) defaults= Collections.emptyMap();\n    Map m = makeMap(\"name\", name, \"class\", clz.getName());\n    return new PluginInfo(SolrRequestHandler.TYPE, m, new NamedList<>(singletonMap(DEFAULTS, new NamedList(defaults))),null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":1,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/ImplicitPlugins#getReqHandlerInfo(String,Class,Map).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginsRegistry#getReqHandlerInfo(String,Class,Map).mjava","sourceNew":"  public static PluginInfo getReqHandlerInfo(String name, Class clz, Map defaults){\n    if(defaults == null) defaults= Collections.emptyMap();\n    Map m = makeMap(\"name\", name, \"class\", clz.getName());\n    return new PluginInfo(SolrRequestHandler.TYPE, m, new NamedList<>(singletonMap(DEFAULTS, new NamedList(defaults))),null);\n  }\n\n","sourceOld":"  public static PluginInfo getReqHandlerInfo(String name, Class clz, Map defaults){\n    if(defaults == null) defaults= Collections.emptyMap();\n    Map m = makeMap(\"name\", name, \"class\", clz.getName());\n    return new PluginInfo(SolrRequestHandler.TYPE, m, new NamedList<>(singletonMap(DEFAULTS, new NamedList(defaults))),null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1390137e395d2f07f9ba5b8c43d293befe84d563","date":1427947685,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ImplicitPlugins#getReqHandlerInfo(String,Class,Map).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ImplicitPlugins#getReqHandlerInfo(String,Class,Map).mjava","sourceNew":"  public static PluginInfo getReqHandlerInfo(String name, Class clz, Map defaults){\n    if(defaults == null) defaults= Collections.emptyMap();\n    Map m = makeMap(NAME, name, \"class\", clz.getName());\n    return new PluginInfo(SolrRequestHandler.TYPE, m, new NamedList<>(singletonMap(DEFAULTS, new NamedList(defaults))),null);\n  }\n\n","sourceOld":"  public static PluginInfo getReqHandlerInfo(String name, Class clz, Map defaults){\n    if(defaults == null) defaults= Collections.emptyMap();\n    Map m = makeMap(\"name\", name, \"class\", clz.getName());\n    return new PluginInfo(SolrRequestHandler.TYPE, m, new NamedList<>(singletonMap(DEFAULTS, new NamedList(defaults))),null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2638f781be724518ff6c2263d14a48cf6e68017","date":1427989059,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/ImplicitPlugins#getReqHandlerInfo(String,Class,Map).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ImplicitPlugins#getReqHandlerInfo(String,Class,Map).mjava","sourceNew":"  public static PluginInfo getReqHandlerInfo(String name, Class clz, Map defaults){\n    if(defaults == null) defaults= Collections.emptyMap();\n    Map m = makeMap(NAME, name, \"class\", clz.getName());\n    return new PluginInfo(SolrRequestHandler.TYPE, m, new NamedList<>(singletonMap(DEFAULTS, new NamedList(defaults))),null);\n  }\n\n","sourceOld":"  public static PluginInfo getReqHandlerInfo(String name, Class clz, Map defaults){\n    if(defaults == null) defaults= Collections.emptyMap();\n    Map m = makeMap(\"name\", name, \"class\", clz.getName());\n    return new PluginInfo(SolrRequestHandler.TYPE, m, new NamedList<>(singletonMap(DEFAULTS, new NamedList(defaults))),null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f266e7465c98bee5209459f207933a3ff1d69617","date":1444466303,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ImplicitPlugins#getReqHandlerInfo(String,Class,Map).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ImplicitPlugins#getReqHandlerInfo(String,Class,Map).mjava","sourceNew":"  public static PluginInfo getReqHandlerInfo(String name, Class clz, Map defaults){\n    if(defaults == null) defaults= Collections.emptyMap();\n    Map m = makeMap(NAME, name, \"class\", clz.getName());\n    // be explicit with generics, because Java 9 fails to compile otherwise (type inference: Map.Entry[] vs. singletonMap):\n    return new PluginInfo(SolrRequestHandler.TYPE, m, new NamedList<>(Collections.<String,Object>singletonMap(DEFAULTS, new NamedList<>(defaults))),null);\n  }\n\n","sourceOld":"  public static PluginInfo getReqHandlerInfo(String name, Class clz, Map defaults){\n    if(defaults == null) defaults= Collections.emptyMap();\n    Map m = makeMap(NAME, name, \"class\", clz.getName());\n    return new PluginInfo(SolrRequestHandler.TYPE, m, new NamedList<>(singletonMap(DEFAULTS, new NamedList(defaults))),null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d12ee9465d37a9eedeee8a630aa7551b013cd4e4","date":1450303849,"type":4,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/ImplicitPlugins#getReqHandlerInfo(String,Class,Map).mjava","sourceNew":null,"sourceOld":"  public static PluginInfo getReqHandlerInfo(String name, Class clz, Map defaults){\n    if(defaults == null) defaults= Collections.emptyMap();\n    Map m = makeMap(NAME, name, \"class\", clz.getName());\n    // be explicit with generics, because Java 9 fails to compile otherwise (type inference: Map.Entry[] vs. singletonMap):\n    return new PluginInfo(SolrRequestHandler.TYPE, m, new NamedList<>(Collections.<String,Object>singletonMap(DEFAULTS, new NamedList<>(defaults))),null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9aea0485ecacb6734c17da2d02569816c23a69c1"],"1390137e395d2f07f9ba5b8c43d293befe84d563":["9aea0485ecacb6734c17da2d02569816c23a69c1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d2638f781be724518ff6c2263d14a48cf6e68017":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","1390137e395d2f07f9ba5b8c43d293befe84d563"],"d12ee9465d37a9eedeee8a630aa7551b013cd4e4":["f266e7465c98bee5209459f207933a3ff1d69617"],"9aea0485ecacb6734c17da2d02569816c23a69c1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f266e7465c98bee5209459f207933a3ff1d69617":["1390137e395d2f07f9ba5b8c43d293befe84d563"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d12ee9465d37a9eedeee8a630aa7551b013cd4e4"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["d2638f781be724518ff6c2263d14a48cf6e68017"],"1390137e395d2f07f9ba5b8c43d293befe84d563":["d2638f781be724518ff6c2263d14a48cf6e68017","f266e7465c98bee5209459f207933a3ff1d69617"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","9aea0485ecacb6734c17da2d02569816c23a69c1"],"d2638f781be724518ff6c2263d14a48cf6e68017":[],"d12ee9465d37a9eedeee8a630aa7551b013cd4e4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9aea0485ecacb6734c17da2d02569816c23a69c1":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","1390137e395d2f07f9ba5b8c43d293befe84d563"],"f266e7465c98bee5209459f207933a3ff1d69617":["d12ee9465d37a9eedeee8a630aa7551b013cd4e4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d2638f781be724518ff6c2263d14a48cf6e68017","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}