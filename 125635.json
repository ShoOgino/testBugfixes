{"path":"lucene/core/src/test/org/apache/lucene/index/TestTransactions.IndexerThread#update(IndexWriter).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTransactions.IndexerThread#update(IndexWriter).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTransactions.IndexerThread#update(IndexWriter).mjava","sourceNew":"    public void update(IndexWriter writer) throws IOException {\n      // Add 10 docs:\n      FieldType customType = new FieldType(StringField.TYPE_UNSTORED);\n      customType.setStoreTermVectors(true);\n      for(int j=0; j<10; j++) {\n        Document d = new Document();\n        int n = random.nextInt();\n        d.add(newField(\"id\", Integer.toString(nextID++), customType));\n        d.add(newField(\"contents\", English.intToEnglish(n), TextField.TYPE_UNSTORED));\n        writer.addDocument(d);\n      }\n\n      // Delete 5 docs:\n      int deleteID = nextID-1;\n      for(int j=0; j<5; j++) {\n        writer.deleteDocuments(new Term(\"id\", \"\"+deleteID));\n        deleteID -= 2;\n      }\n    }\n\n","sourceOld":"    public void update(IndexWriter writer) throws IOException {\n      // Add 10 docs:\n      FieldType customType = new FieldType(StringField.TYPE_UNSTORED);\n      customType.setStoreTermVectors(true);\n      for(int j=0; j<10; j++) {\n        Document d = new Document();\n        int n = random.nextInt();\n        d.add(newField(\"id\", Integer.toString(nextID++), customType));\n        d.add(newField(\"contents\", English.intToEnglish(n), TextField.TYPE_UNSTORED));\n        writer.addDocument(d);\n      }\n\n      // Delete 5 docs:\n      int deleteID = nextID-1;\n      for(int j=0; j<5; j++) {\n        writer.deleteDocuments(new Term(\"id\", \"\"+deleteID));\n        deleteID -= 2;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTransactions.IndexerThread#update(IndexWriter).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTransactions.IndexerThread#update(IndexWriter).mjava","sourceNew":"    public void update(IndexWriter writer) throws IOException {\n      // Add 10 docs:\n      FieldType customType = new FieldType(StringField.TYPE_UNSTORED);\n      customType.setStoreTermVectors(true);\n      for(int j=0; j<10; j++) {\n        Document d = new Document();\n        int n = random().nextInt();\n        d.add(newField(\"id\", Integer.toString(nextID++), customType));\n        d.add(newField(\"contents\", English.intToEnglish(n), TextField.TYPE_UNSTORED));\n        writer.addDocument(d);\n      }\n\n      // Delete 5 docs:\n      int deleteID = nextID-1;\n      for(int j=0; j<5; j++) {\n        writer.deleteDocuments(new Term(\"id\", \"\"+deleteID));\n        deleteID -= 2;\n      }\n    }\n\n","sourceOld":"    public void update(IndexWriter writer) throws IOException {\n      // Add 10 docs:\n      FieldType customType = new FieldType(StringField.TYPE_UNSTORED);\n      customType.setStoreTermVectors(true);\n      for(int j=0; j<10; j++) {\n        Document d = new Document();\n        int n = random.nextInt();\n        d.add(newField(\"id\", Integer.toString(nextID++), customType));\n        d.add(newField(\"contents\", English.intToEnglish(n), TextField.TYPE_UNSTORED));\n        writer.addDocument(d);\n      }\n\n      // Delete 5 docs:\n      int deleteID = nextID-1;\n      for(int j=0; j<5; j++) {\n        writer.deleteDocuments(new Term(\"id\", \"\"+deleteID));\n        deleteID -= 2;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTransactions.IndexerThread#update(IndexWriter).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTransactions.IndexerThread#update(IndexWriter).mjava","sourceNew":"    public void update(IndexWriter writer) throws IOException {\n      // Add 10 docs:\n      FieldType customType = new FieldType(StringField.TYPE_NOT_STORED);\n      customType.setStoreTermVectors(true);\n      for(int j=0; j<10; j++) {\n        Document d = new Document();\n        int n = random().nextInt();\n        d.add(newField(\"id\", Integer.toString(nextID++), customType));\n        d.add(newTextField(\"contents\", English.intToEnglish(n), Field.Store.NO));\n        writer.addDocument(d);\n      }\n\n      // Delete 5 docs:\n      int deleteID = nextID-1;\n      for(int j=0; j<5; j++) {\n        writer.deleteDocuments(new Term(\"id\", \"\"+deleteID));\n        deleteID -= 2;\n      }\n    }\n\n","sourceOld":"    public void update(IndexWriter writer) throws IOException {\n      // Add 10 docs:\n      FieldType customType = new FieldType(StringField.TYPE_UNSTORED);\n      customType.setStoreTermVectors(true);\n      for(int j=0; j<10; j++) {\n        Document d = new Document();\n        int n = random().nextInt();\n        d.add(newField(\"id\", Integer.toString(nextID++), customType));\n        d.add(newField(\"contents\", English.intToEnglish(n), TextField.TYPE_UNSTORED));\n        writer.addDocument(d);\n      }\n\n      // Delete 5 docs:\n      int deleteID = nextID-1;\n      for(int j=0; j<5; j++) {\n        writer.deleteDocuments(new Term(\"id\", \"\"+deleteID));\n        deleteID -= 2;\n      }\n    }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["04f07771a2a7dd3a395700665ed839c3dae2def2"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}