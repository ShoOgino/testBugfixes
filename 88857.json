{"path":"lucene/core/src/java/org/apache/lucene/codecs/sep/SepPostingsReader#readTermsBlock(IndexInput,FieldInfo,BlockTermState).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/sep/SepPostingsReader#readTermsBlock(IndexInput,FieldInfo,BlockTermState).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/sep/SepPostingsReader#readTermsBlock(IndexInput,FieldInfo,BlockTermState).mjava","sourceNew":"  @Override\n  public void readTermsBlock(IndexInput termsIn, FieldInfo fieldInfo, BlockTermState _termState) throws IOException {\n    final SepTermState termState = (SepTermState) _termState;\n    //System.out.println(\"SEPR: readTermsBlock termsIn.fp=\" + termsIn.getFilePointer());\n    final int len = termsIn.readVInt();\n    //System.out.println(\"  numBytes=\" + len);\n    if (termState.bytes == null) {\n      termState.bytes = new byte[ArrayUtil.oversize(len, 1)];\n      termState.bytesReader = new ByteArrayDataInput(termState.bytes);\n    } else if (termState.bytes.length < len) {\n      termState.bytes = new byte[ArrayUtil.oversize(len, 1)];\n    }\n    termState.bytesReader.reset(termState.bytes, 0, len);\n    termsIn.readBytes(termState.bytes, 0, len);\n  }\n\n","sourceOld":"  @Override\n  public void readTermsBlock(IndexInput termsIn, FieldInfo fieldInfo, BlockTermState _termState) throws IOException {\n    final SepTermState termState = (SepTermState) _termState;\n    //System.out.println(\"SEPR: readTermsBlock termsIn.fp=\" + termsIn.getFilePointer());\n    final int len = termsIn.readVInt();\n    //System.out.println(\"  numBytes=\" + len);\n    if (termState.bytes == null) {\n      termState.bytes = new byte[ArrayUtil.oversize(len, 1)];\n      termState.bytesReader = new ByteArrayDataInput(termState.bytes);\n    } else if (termState.bytes.length < len) {\n      termState.bytes = new byte[ArrayUtil.oversize(len, 1)];\n    }\n    termState.bytesReader.reset(termState.bytes, 0, len);\n    termsIn.readBytes(termState.bytes, 0, len);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/sep/SepPostingsReader#readTermsBlock(IndexInput,FieldInfo,BlockTermState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/sep/SepPostingsReader#readTermsBlock(IndexInput,FieldInfo,BlockTermState).mjava","sourceNew":"  @Override\n  public void readTermsBlock(IndexInput termsIn, FieldInfo fieldInfo, BlockTermState _termState) throws IOException {\n    final SepTermState termState = (SepTermState) _termState;\n    //System.out.println(\"SEPR: readTermsBlock termsIn.fp=\" + termsIn.getFilePointer());\n    final int len = termsIn.readVInt();\n    //System.out.println(\"  numBytes=\" + len);\n    if (termState.bytes == null) {\n      termState.bytes = new byte[ArrayUtil.oversize(len, 1)];\n      termState.bytesReader = new ByteArrayDataInput(termState.bytes);\n    } else if (termState.bytes.length < len) {\n      termState.bytes = new byte[ArrayUtil.oversize(len, 1)];\n    }\n    termState.bytesReader.reset(termState.bytes, 0, len);\n    termsIn.readBytes(termState.bytes, 0, len);\n  }\n\n","sourceOld":"  @Override\n  public void readTermsBlock(IndexInput termsIn, FieldInfo fieldInfo, BlockTermState _termState) throws IOException {\n    final SepTermState termState = (SepTermState) _termState;\n    //System.out.println(\"SEPR: readTermsBlock termsIn.fp=\" + termsIn.getFilePointer());\n    final int len = termsIn.readVInt();\n    //System.out.println(\"  numBytes=\" + len);\n    if (termState.bytes == null) {\n      termState.bytes = new byte[ArrayUtil.oversize(len, 1)];\n      termState.bytesReader = new ByteArrayDataInput(termState.bytes);\n    } else if (termState.bytes.length < len) {\n      termState.bytes = new byte[ArrayUtil.oversize(len, 1)];\n    }\n    termState.bytesReader.reset(termState.bytes, 0, len);\n    termsIn.readBytes(termState.bytes, 0, len);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"]},"commit2Childs":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}