{"path":"solr/core/src/java/org/apache/solr/core/PluginsRegistry#getHandlers(SolrCore).mjava","commits":[{"id":"e56881a4ebc3438313e3c008a7124ba0f8ecc7bf","date":1416997673,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginsRegistry#getHandlers(SolrCore).mjava","pathOld":"/dev/null","sourceNew":"  public static List<PluginInfo> getHandlers(SolrCore solrCore){\n    List<PluginInfo> implicits = new ArrayList<>();\n\n    //update handle implicits\n    implicits.add(getReqHandlerInfo(\"/update\", UpdateRequestHandler.class, null));\n    implicits.add(getReqHandlerInfo(UpdateRequestHandler.JSON_PATH, UpdateRequestHandler.class, singletonMap(\"update.contentType\", \"application/json\")));\n    implicits.add(getReqHandlerInfo(UpdateRequestHandler.CSV_PATH, UpdateRequestHandler.class, singletonMap(\"update.contentType\", \"application/csv\")));\n    implicits.add(getReqHandlerInfo(UpdateRequestHandler.DOC_PATH, UpdateRequestHandler.class, makeMap(\"update.contentType\", \"application/json\", \"json.command\", \"false\")));\n\n    //solrconfighandler\n    implicits.add(getReqHandlerInfo(\"/config\", SolrConfigHandler.class, null));\n\n    //register replicationhandler always for SolrCloud\n    implicits.add(getReqHandlerInfo(\"/replication\", ReplicationHandler.class,null));\n\n    implicits.add(getReqHandlerInfo(\"/get\", RealTimeGetHandler.class,\n        makeMap(\n        \"omitHeader\", \"true\",\n        \"wt\", \"json\",\n        \"indent\", \"true\")));\n    //register adminHandlers\n    implicits.add(getReqHandlerInfo(\"/admin/luke\", LukeRequestHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/system\", SystemInfoHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/mbeans\", SolrInfoMBeanHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/plugins\", PluginInfoHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/threads\", ThreadDumpHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/properties\", PropertiesRequestHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/logging\", LoggingHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/file\", ShowFileRequestHandler.class, null));\n    PluginInfo ping = getReqHandlerInfo(\"/admin/ping\", PingRequestHandler.class, null);\n    ping.initArgs.add(INVARIANTS, new NamedList<>(makeMap(\"echoParams\", \"all\", \"q\", \"solrpingquery\")));\n    implicits.add(ping);\n    return implicits;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["0307cd8b531b56b34e2cbe13f110cdcd09435e14"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7d72e80cee24be385c713864a9f1f90be3744482","date":1417420925,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginsRegistry#getHandlers(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginsRegistry#getHandlers(SolrCore).mjava","sourceNew":"  public static List<PluginInfo> getHandlers(SolrCore solrCore){\n    List<PluginInfo> implicits = new ArrayList<>();\n\n    //update handle implicits\n    implicits.add(getReqHandlerInfo(\"/update\", UpdateRequestHandler.class, null));\n    implicits.add(getReqHandlerInfo(UpdateRequestHandler.JSON_PATH, UpdateRequestHandler.class, singletonMap(\"update.contentType\", \"application/json\")));\n    implicits.add(getReqHandlerInfo(UpdateRequestHandler.CSV_PATH, UpdateRequestHandler.class, singletonMap(\"update.contentType\", \"application/csv\")));\n    implicits.add(getReqHandlerInfo(UpdateRequestHandler.DOC_PATH, UpdateRequestHandler.class, makeMap(\"update.contentType\", \"application/json\", \"json.command\", \"false\")));\n\n    //solrconfighandler\n    implicits.add(getReqHandlerInfo(\"/config\", SolrConfigHandler.class, null));\n    //schemahandler\n    implicits.add(getReqHandlerInfo(\"/schema\", SchemaHandler.class, null));\n    //register replicationhandler always for SolrCloud\n    implicits.add(getReqHandlerInfo(\"/replication\", ReplicationHandler.class,null));\n\n    implicits.add(getReqHandlerInfo(\"/get\", RealTimeGetHandler.class,\n        makeMap(\n        \"omitHeader\", \"true\",\n        \"wt\", \"json\",\n        \"indent\", \"true\")));\n    //register adminHandlers\n    implicits.add(getReqHandlerInfo(\"/admin/luke\", LukeRequestHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/system\", SystemInfoHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/mbeans\", SolrInfoMBeanHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/plugins\", PluginInfoHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/threads\", ThreadDumpHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/properties\", PropertiesRequestHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/logging\", LoggingHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/file\", ShowFileRequestHandler.class, null));\n    PluginInfo ping = getReqHandlerInfo(\"/admin/ping\", PingRequestHandler.class, null);\n    ping.initArgs.add(INVARIANTS, new NamedList<>(makeMap(\"echoParams\", \"all\", \"q\", \"solrpingquery\")));\n    implicits.add(ping);\n    return implicits;\n  }\n\n","sourceOld":"  public static List<PluginInfo> getHandlers(SolrCore solrCore){\n    List<PluginInfo> implicits = new ArrayList<>();\n\n    //update handle implicits\n    implicits.add(getReqHandlerInfo(\"/update\", UpdateRequestHandler.class, null));\n    implicits.add(getReqHandlerInfo(UpdateRequestHandler.JSON_PATH, UpdateRequestHandler.class, singletonMap(\"update.contentType\", \"application/json\")));\n    implicits.add(getReqHandlerInfo(UpdateRequestHandler.CSV_PATH, UpdateRequestHandler.class, singletonMap(\"update.contentType\", \"application/csv\")));\n    implicits.add(getReqHandlerInfo(UpdateRequestHandler.DOC_PATH, UpdateRequestHandler.class, makeMap(\"update.contentType\", \"application/json\", \"json.command\", \"false\")));\n\n    //solrconfighandler\n    implicits.add(getReqHandlerInfo(\"/config\", SolrConfigHandler.class, null));\n\n    //register replicationhandler always for SolrCloud\n    implicits.add(getReqHandlerInfo(\"/replication\", ReplicationHandler.class,null));\n\n    implicits.add(getReqHandlerInfo(\"/get\", RealTimeGetHandler.class,\n        makeMap(\n        \"omitHeader\", \"true\",\n        \"wt\", \"json\",\n        \"indent\", \"true\")));\n    //register adminHandlers\n    implicits.add(getReqHandlerInfo(\"/admin/luke\", LukeRequestHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/system\", SystemInfoHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/mbeans\", SolrInfoMBeanHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/plugins\", PluginInfoHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/threads\", ThreadDumpHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/properties\", PropertiesRequestHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/logging\", LoggingHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/file\", ShowFileRequestHandler.class, null));\n    PluginInfo ping = getReqHandlerInfo(\"/admin/ping\", PingRequestHandler.class, null);\n    ping.initArgs.add(INVARIANTS, new NamedList<>(makeMap(\"echoParams\", \"all\", \"q\", \"solrpingquery\")));\n    implicits.add(ping);\n    return implicits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6457d8c713fcafd8283b9724ff0664f9485f48a2","date":1421950761,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginsRegistry#getHandlers(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginsRegistry#getHandlers(SolrCore).mjava","sourceNew":"  public static List<PluginInfo> getHandlers(SolrCore solrCore){\n    List<PluginInfo> implicits = new ArrayList<>();\n\n    //update handle implicits\n    implicits.add(getReqHandlerInfo(\"/update\", UpdateRequestHandler.class, null));\n    implicits.add(getReqHandlerInfo(UpdateRequestHandler.JSON_PATH, UpdateRequestHandler.class, singletonMap(STREAM_CONTENTTYPE, \"application/json\")));\n    implicits.add(getReqHandlerInfo(UpdateRequestHandler.CSV_PATH, UpdateRequestHandler.class, singletonMap(STREAM_CONTENTTYPE, \"application/csv\")));\n    implicits.add(getReqHandlerInfo(UpdateRequestHandler.DOC_PATH, UpdateRequestHandler.class, makeMap(STREAM_CONTENTTYPE, \"application/json\", \"json.command\", \"false\")));\n\n    //solrconfighandler\n    implicits.add(getReqHandlerInfo(\"/config\", SolrConfigHandler.class, null));\n    //schemahandler\n    implicits.add(getReqHandlerInfo(\"/schema\", SchemaHandler.class, null));\n    //register replicationhandler always for SolrCloud\n    implicits.add(getReqHandlerInfo(\"/replication\", ReplicationHandler.class,null));\n\n    implicits.add(getReqHandlerInfo(\"/get\", RealTimeGetHandler.class,\n        makeMap(\n        \"omitHeader\", \"true\",\n        \"wt\", \"json\",\n        \"indent\", \"true\")));\n    //register adminHandlers\n    implicits.add(getReqHandlerInfo(\"/admin/luke\", LukeRequestHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/system\", SystemInfoHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/mbeans\", SolrInfoMBeanHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/plugins\", PluginInfoHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/threads\", ThreadDumpHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/properties\", PropertiesRequestHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/logging\", LoggingHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/file\", ShowFileRequestHandler.class, null));\n    PluginInfo ping = getReqHandlerInfo(\"/admin/ping\", PingRequestHandler.class, null);\n    ping.initArgs.add(INVARIANTS, new NamedList<>(makeMap(\"echoParams\", \"all\", \"q\", \"solrpingquery\")));\n    implicits.add(ping);\n    return implicits;\n  }\n\n","sourceOld":"  public static List<PluginInfo> getHandlers(SolrCore solrCore){\n    List<PluginInfo> implicits = new ArrayList<>();\n\n    //update handle implicits\n    implicits.add(getReqHandlerInfo(\"/update\", UpdateRequestHandler.class, null));\n    implicits.add(getReqHandlerInfo(UpdateRequestHandler.JSON_PATH, UpdateRequestHandler.class, singletonMap(\"update.contentType\", \"application/json\")));\n    implicits.add(getReqHandlerInfo(UpdateRequestHandler.CSV_PATH, UpdateRequestHandler.class, singletonMap(\"update.contentType\", \"application/csv\")));\n    implicits.add(getReqHandlerInfo(UpdateRequestHandler.DOC_PATH, UpdateRequestHandler.class, makeMap(\"update.contentType\", \"application/json\", \"json.command\", \"false\")));\n\n    //solrconfighandler\n    implicits.add(getReqHandlerInfo(\"/config\", SolrConfigHandler.class, null));\n    //schemahandler\n    implicits.add(getReqHandlerInfo(\"/schema\", SchemaHandler.class, null));\n    //register replicationhandler always for SolrCloud\n    implicits.add(getReqHandlerInfo(\"/replication\", ReplicationHandler.class,null));\n\n    implicits.add(getReqHandlerInfo(\"/get\", RealTimeGetHandler.class,\n        makeMap(\n        \"omitHeader\", \"true\",\n        \"wt\", \"json\",\n        \"indent\", \"true\")));\n    //register adminHandlers\n    implicits.add(getReqHandlerInfo(\"/admin/luke\", LukeRequestHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/system\", SystemInfoHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/mbeans\", SolrInfoMBeanHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/plugins\", PluginInfoHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/threads\", ThreadDumpHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/properties\", PropertiesRequestHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/logging\", LoggingHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/file\", ShowFileRequestHandler.class, null));\n    PluginInfo ping = getReqHandlerInfo(\"/admin/ping\", PingRequestHandler.class, null);\n    ping.initArgs.add(INVARIANTS, new NamedList<>(makeMap(\"echoParams\", \"all\", \"q\", \"solrpingquery\")));\n    implicits.add(ping);\n    return implicits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7ac41c9714b2d2a99f49a079a894245c29a088b9","date":1421957501,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginsRegistry#getHandlers(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginsRegistry#getHandlers(SolrCore).mjava","sourceNew":"  public static List<PluginInfo> getHandlers(SolrCore solrCore){\n    List<PluginInfo> implicits = new ArrayList<>();\n\n    //update handle implicits\n    implicits.add(getReqHandlerInfo(\"/update\", UpdateRequestHandler.class, null));\n    implicits.add(getReqHandlerInfo(UpdateRequestHandler.JSON_PATH, UpdateRequestHandler.class, singletonMap(\"update.contentType\", \"application/json\")));\n    implicits.add(getReqHandlerInfo(UpdateRequestHandler.CSV_PATH, UpdateRequestHandler.class, singletonMap(\"update.contentType\", \"application/csv\")));\n    implicits.add(getReqHandlerInfo(UpdateRequestHandler.DOC_PATH, UpdateRequestHandler.class, makeMap(\"update.contentType\", \"application/json\", \"json.command\", \"false\")));\n\n    //solrconfighandler\n    implicits.add(getReqHandlerInfo(\"/config\", SolrConfigHandler.class, null));\n    //schemahandler\n    implicits.add(getReqHandlerInfo(\"/schema\", SchemaHandler.class, null));\n    //register replicationhandler always for SolrCloud\n    implicits.add(getReqHandlerInfo(\"/replication\", ReplicationHandler.class,null));\n\n    implicits.add(getReqHandlerInfo(\"/get\", RealTimeGetHandler.class,\n        makeMap(\n        \"omitHeader\", \"true\",\n        \"wt\", \"json\",\n        \"indent\", \"true\")));\n    //register adminHandlers\n    implicits.add(getReqHandlerInfo(\"/admin/luke\", LukeRequestHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/system\", SystemInfoHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/mbeans\", SolrInfoMBeanHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/plugins\", PluginInfoHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/threads\", ThreadDumpHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/properties\", PropertiesRequestHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/logging\", LoggingHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/file\", ShowFileRequestHandler.class, null));\n    PluginInfo ping = getReqHandlerInfo(\"/admin/ping\", PingRequestHandler.class, null);\n    ping.initArgs.add(INVARIANTS, new NamedList<>(makeMap(\"echoParams\", \"all\", \"q\", \"solrpingquery\")));\n    implicits.add(ping);\n    return implicits;\n  }\n\n","sourceOld":"  public static List<PluginInfo> getHandlers(SolrCore solrCore){\n    List<PluginInfo> implicits = new ArrayList<>();\n\n    //update handle implicits\n    implicits.add(getReqHandlerInfo(\"/update\", UpdateRequestHandler.class, null));\n    implicits.add(getReqHandlerInfo(UpdateRequestHandler.JSON_PATH, UpdateRequestHandler.class, singletonMap(STREAM_CONTENTTYPE, \"application/json\")));\n    implicits.add(getReqHandlerInfo(UpdateRequestHandler.CSV_PATH, UpdateRequestHandler.class, singletonMap(STREAM_CONTENTTYPE, \"application/csv\")));\n    implicits.add(getReqHandlerInfo(UpdateRequestHandler.DOC_PATH, UpdateRequestHandler.class, makeMap(STREAM_CONTENTTYPE, \"application/json\", \"json.command\", \"false\")));\n\n    //solrconfighandler\n    implicits.add(getReqHandlerInfo(\"/config\", SolrConfigHandler.class, null));\n    //schemahandler\n    implicits.add(getReqHandlerInfo(\"/schema\", SchemaHandler.class, null));\n    //register replicationhandler always for SolrCloud\n    implicits.add(getReqHandlerInfo(\"/replication\", ReplicationHandler.class,null));\n\n    implicits.add(getReqHandlerInfo(\"/get\", RealTimeGetHandler.class,\n        makeMap(\n        \"omitHeader\", \"true\",\n        \"wt\", \"json\",\n        \"indent\", \"true\")));\n    //register adminHandlers\n    implicits.add(getReqHandlerInfo(\"/admin/luke\", LukeRequestHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/system\", SystemInfoHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/mbeans\", SolrInfoMBeanHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/plugins\", PluginInfoHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/threads\", ThreadDumpHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/properties\", PropertiesRequestHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/logging\", LoggingHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/file\", ShowFileRequestHandler.class, null));\n    PluginInfo ping = getReqHandlerInfo(\"/admin/ping\", PingRequestHandler.class, null);\n    ping.initArgs.add(INVARIANTS, new NamedList<>(makeMap(\"echoParams\", \"all\", \"q\", \"solrpingquery\")));\n    implicits.add(ping);\n    return implicits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9aea0485ecacb6734c17da2d02569816c23a69c1","date":1425707735,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ImplicitPlugins#getHandlers(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginsRegistry#getHandlers(SolrCore).mjava","sourceNew":"  public static List<PluginInfo> getHandlers(SolrCore solrCore){\n    List<PluginInfo> implicits = new ArrayList<>();\n\n    //update handle implicits\n    implicits.add(getReqHandlerInfo(\"/update\", UpdateRequestHandler.class, null));\n    implicits.add(getReqHandlerInfo(UpdateRequestHandler.JSON_PATH, UpdateRequestHandler.class, singletonMap(\"update.contentType\", \"application/json\")));\n    implicits.add(getReqHandlerInfo(UpdateRequestHandler.CSV_PATH, UpdateRequestHandler.class, singletonMap(\"update.contentType\", \"application/csv\")));\n    implicits.add(getReqHandlerInfo(UpdateRequestHandler.DOC_PATH, UpdateRequestHandler.class, makeMap(\"update.contentType\", \"application/json\", \"json.command\", \"false\")));\n\n    //solrconfighandler\n    implicits.add(getReqHandlerInfo(\"/config\", SolrConfigHandler.class, null));\n    //schemahandler\n    implicits.add(getReqHandlerInfo(\"/schema\", SchemaHandler.class, null));\n    //register replicationhandler always for SolrCloud\n    implicits.add(getReqHandlerInfo(\"/replication\", ReplicationHandler.class,null));\n\n    implicits.add(getReqHandlerInfo(\"/get\", RealTimeGetHandler.class,\n        makeMap(\n        \"omitHeader\", \"true\",\n        \"wt\", \"json\",\n        \"indent\", \"true\")));\n    //register adminHandlers\n    implicits.add(getReqHandlerInfo(\"/admin/luke\", LukeRequestHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/system\", SystemInfoHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/mbeans\", SolrInfoMBeanHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/plugins\", PluginInfoHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/threads\", ThreadDumpHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/properties\", PropertiesRequestHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/logging\", LoggingHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/file\", ShowFileRequestHandler.class, null));\n    PluginInfo ping = getReqHandlerInfo(\"/admin/ping\", PingRequestHandler.class, null);\n    ping.initArgs.add(INVARIANTS, new NamedList<>(makeMap(\"echoParams\", \"all\", \"q\", \"solrpingquery\")));\n    implicits.add(ping);\n    return implicits;\n  }\n\n","sourceOld":"  public static List<PluginInfo> getHandlers(SolrCore solrCore){\n    List<PluginInfo> implicits = new ArrayList<>();\n\n    //update handle implicits\n    implicits.add(getReqHandlerInfo(\"/update\", UpdateRequestHandler.class, null));\n    implicits.add(getReqHandlerInfo(UpdateRequestHandler.JSON_PATH, UpdateRequestHandler.class, singletonMap(\"update.contentType\", \"application/json\")));\n    implicits.add(getReqHandlerInfo(UpdateRequestHandler.CSV_PATH, UpdateRequestHandler.class, singletonMap(\"update.contentType\", \"application/csv\")));\n    implicits.add(getReqHandlerInfo(UpdateRequestHandler.DOC_PATH, UpdateRequestHandler.class, makeMap(\"update.contentType\", \"application/json\", \"json.command\", \"false\")));\n\n    //solrconfighandler\n    implicits.add(getReqHandlerInfo(\"/config\", SolrConfigHandler.class, null));\n    //schemahandler\n    implicits.add(getReqHandlerInfo(\"/schema\", SchemaHandler.class, null));\n    //register replicationhandler always for SolrCloud\n    implicits.add(getReqHandlerInfo(\"/replication\", ReplicationHandler.class,null));\n\n    implicits.add(getReqHandlerInfo(\"/get\", RealTimeGetHandler.class,\n        makeMap(\n        \"omitHeader\", \"true\",\n        \"wt\", \"json\",\n        \"indent\", \"true\")));\n    //register adminHandlers\n    implicits.add(getReqHandlerInfo(\"/admin/luke\", LukeRequestHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/system\", SystemInfoHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/mbeans\", SolrInfoMBeanHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/plugins\", PluginInfoHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/threads\", ThreadDumpHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/properties\", PropertiesRequestHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/logging\", LoggingHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/file\", ShowFileRequestHandler.class, null));\n    PluginInfo ping = getReqHandlerInfo(\"/admin/ping\", PingRequestHandler.class, null);\n    ping.initArgs.add(INVARIANTS, new NamedList<>(makeMap(\"echoParams\", \"all\", \"q\", \"solrpingquery\")));\n    implicits.add(ping);\n    return implicits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":4,"author":"Ryan Ernst","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/PluginsRegistry#getHandlers(SolrCore).mjava","sourceNew":null,"sourceOld":"  public static List<PluginInfo> getHandlers(SolrCore solrCore){\n    List<PluginInfo> implicits = new ArrayList<>();\n\n    //update handle implicits\n    implicits.add(getReqHandlerInfo(\"/update\", UpdateRequestHandler.class, null));\n    implicits.add(getReqHandlerInfo(UpdateRequestHandler.JSON_PATH, UpdateRequestHandler.class, singletonMap(\"update.contentType\", \"application/json\")));\n    implicits.add(getReqHandlerInfo(UpdateRequestHandler.CSV_PATH, UpdateRequestHandler.class, singletonMap(\"update.contentType\", \"application/csv\")));\n    implicits.add(getReqHandlerInfo(UpdateRequestHandler.DOC_PATH, UpdateRequestHandler.class, makeMap(\"update.contentType\", \"application/json\", \"json.command\", \"false\")));\n\n    //solrconfighandler\n    implicits.add(getReqHandlerInfo(\"/config\", SolrConfigHandler.class, null));\n    //schemahandler\n    implicits.add(getReqHandlerInfo(\"/schema\", SchemaHandler.class, null));\n    //register replicationhandler always for SolrCloud\n    implicits.add(getReqHandlerInfo(\"/replication\", ReplicationHandler.class,null));\n\n    implicits.add(getReqHandlerInfo(\"/get\", RealTimeGetHandler.class,\n        makeMap(\n        \"omitHeader\", \"true\",\n        \"wt\", \"json\",\n        \"indent\", \"true\")));\n    //register adminHandlers\n    implicits.add(getReqHandlerInfo(\"/admin/luke\", LukeRequestHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/system\", SystemInfoHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/mbeans\", SolrInfoMBeanHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/plugins\", PluginInfoHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/threads\", ThreadDumpHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/properties\", PropertiesRequestHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/logging\", LoggingHandler.class, null));\n    implicits.add(getReqHandlerInfo(\"/admin/file\", ShowFileRequestHandler.class, null));\n    PluginInfo ping = getReqHandlerInfo(\"/admin/ping\", PingRequestHandler.class, null);\n    ping.initArgs.add(INVARIANTS, new NamedList<>(makeMap(\"echoParams\", \"all\", \"q\", \"solrpingquery\")));\n    implicits.add(ping);\n    return implicits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["7ac41c9714b2d2a99f49a079a894245c29a088b9","9aea0485ecacb6734c17da2d02569816c23a69c1"],"7d72e80cee24be385c713864a9f1f90be3744482":["e56881a4ebc3438313e3c008a7124ba0f8ecc7bf"],"e56881a4ebc3438313e3c008a7124ba0f8ecc7bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6457d8c713fcafd8283b9724ff0664f9485f48a2":["7d72e80cee24be385c713864a9f1f90be3744482"],"9aea0485ecacb6734c17da2d02569816c23a69c1":["7ac41c9714b2d2a99f49a079a894245c29a088b9"],"7ac41c9714b2d2a99f49a079a894245c29a088b9":["6457d8c713fcafd8283b9724ff0664f9485f48a2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9aea0485ecacb6734c17da2d02569816c23a69c1"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"7d72e80cee24be385c713864a9f1f90be3744482":["6457d8c713fcafd8283b9724ff0664f9485f48a2"],"e56881a4ebc3438313e3c008a7124ba0f8ecc7bf":["7d72e80cee24be385c713864a9f1f90be3744482"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e56881a4ebc3438313e3c008a7124ba0f8ecc7bf"],"6457d8c713fcafd8283b9724ff0664f9485f48a2":["7ac41c9714b2d2a99f49a079a894245c29a088b9"],"9aea0485ecacb6734c17da2d02569816c23a69c1":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7ac41c9714b2d2a99f49a079a894245c29a088b9":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","9aea0485ecacb6734c17da2d02569816c23a69c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}