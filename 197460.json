{"path":"solr/core/src/test/org/apache/solr/handler/XmlUpdateRequestHandlerTest#testReadDelete().mjava","commits":[{"id":"818d704eaaf0fba0561d0d2752832e1015053482","date":1327419676,"type":0,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/XmlUpdateRequestHandlerTest#testReadDelete().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testReadDelete() throws Exception {\n\t    String xml =\n\t      \"<update>\" +\n\t      \" <delete>\" +\n\t      \"   <query>id:150</query>\" +\n\t      \"   <id>150</id>\" +\n\t      \"   <id>200</id>\" +\n\t      \"   <query>id:200</query>\" +\n\t      \" </delete>\" +\n\t      \" <delete commitWithin=\\\"500\\\">\" +\n\t      \"   <query>id:150</query>\" +\n\t      \" </delete>\" +\n\t      \" <delete>\" +\n\t      \"   <id>150</id>\" +\n\t      \" </delete>\" +\n\t      \"</update>\";\n\t    \n\t    MockUpdateRequestProcessor p = new MockUpdateRequestProcessor(null);\n\t    p.expectDelete(null, \"id:150\", -1);\n\t    p.expectDelete(\"150\", null, -1);\n\t    p.expectDelete(\"200\", null, -1);\n\t    p.expectDelete(null, \"id:200\", -1);\n\t    p.expectDelete(null, \"id:150\", 500);\n\t    p.expectDelete(\"150\", null, -1);\n\n\t    XMLLoader loader = new XMLLoader(p, inputFactory);\n\t    loader.load(req(), new SolrQueryResponse(), new ContentStreamBase.StringStream(xml));\n\t    \n\t    p.assertNoCommandsPending();\n\t  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/XmlUpdateRequestHandlerTest#testReadDelete().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testReadDelete() throws Exception {\n\t    String xml =\n\t      \"<update>\" +\n\t      \" <delete>\" +\n\t      \"   <query>id:150</query>\" +\n\t      \"   <id>150</id>\" +\n\t      \"   <id>200</id>\" +\n\t      \"   <query>id:200</query>\" +\n\t      \" </delete>\" +\n\t      \" <delete commitWithin=\\\"500\\\">\" +\n\t      \"   <query>id:150</query>\" +\n\t      \" </delete>\" +\n\t      \" <delete>\" +\n\t      \"   <id>150</id>\" +\n\t      \" </delete>\" +\n\t      \"</update>\";\n\t    \n\t    MockUpdateRequestProcessor p = new MockUpdateRequestProcessor(null);\n\t    p.expectDelete(null, \"id:150\", -1);\n\t    p.expectDelete(\"150\", null, -1);\n\t    p.expectDelete(\"200\", null, -1);\n\t    p.expectDelete(null, \"id:200\", -1);\n\t    p.expectDelete(null, \"id:150\", 500);\n\t    p.expectDelete(\"150\", null, -1);\n\n\t    XMLLoader loader = new XMLLoader(p, inputFactory);\n\t    loader.load(req(), new SolrQueryResponse(), new ContentStreamBase.StringStream(xml));\n\t    \n\t    p.assertNoCommandsPending();\n\t  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/XmlUpdateRequestHandlerTest#testReadDelete().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testReadDelete() throws Exception {\n\t    String xml =\n\t      \"<update>\" +\n\t      \" <delete>\" +\n\t      \"   <query>id:150</query>\" +\n\t      \"   <id>150</id>\" +\n\t      \"   <id>200</id>\" +\n\t      \"   <query>id:200</query>\" +\n\t      \" </delete>\" +\n\t      \" <delete commitWithin=\\\"500\\\">\" +\n\t      \"   <query>id:150</query>\" +\n\t      \" </delete>\" +\n\t      \" <delete>\" +\n\t      \"   <id>150</id>\" +\n\t      \" </delete>\" +\n\t      \"</update>\";\n\t    \n\t    MockUpdateRequestProcessor p = new MockUpdateRequestProcessor(null);\n\t    p.expectDelete(null, \"id:150\", -1);\n\t    p.expectDelete(\"150\", null, -1);\n\t    p.expectDelete(\"200\", null, -1);\n\t    p.expectDelete(null, \"id:200\", -1);\n\t    p.expectDelete(null, \"id:150\", 500);\n\t    p.expectDelete(\"150\", null, -1);\n\n\t    XMLLoader loader = new XMLLoader(p, inputFactory);\n\t    loader.load(req(), new SolrQueryResponse(), new ContentStreamBase.StringStream(xml));\n\t    \n\t    p.assertNoCommandsPending();\n\t  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"042e4d934397657ba04c82b46cc5665076bc5c58","date":1336511170,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/XmlUpdateRequestHandlerTest#testReadDelete().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/XmlUpdateRequestHandlerTest#testReadDelete().mjava","sourceNew":"  @Test\n  public void testReadDelete() throws Exception {\n\t    String xml =\n\t      \"<update>\" +\n\t      \" <delete>\" +\n\t      \"   <query>id:150</query>\" +\n\t      \"   <id>150</id>\" +\n\t      \"   <id>200</id>\" +\n\t      \"   <query>id:200</query>\" +\n\t      \" </delete>\" +\n\t      \" <delete commitWithin=\\\"500\\\">\" +\n\t      \"   <query>id:150</query>\" +\n\t      \" </delete>\" +\n\t      \" <delete>\" +\n\t      \"   <id>150</id>\" +\n\t      \" </delete>\" +\n\t      \"</update>\";\n\t    \n\t    MockUpdateRequestProcessor p = new MockUpdateRequestProcessor(null);\n\t    p.expectDelete(null, \"id:150\", -1);\n\t    p.expectDelete(\"150\", null, -1);\n\t    p.expectDelete(\"200\", null, -1);\n\t    p.expectDelete(null, \"id:200\", -1);\n\t    p.expectDelete(null, \"id:150\", 500);\n\t    p.expectDelete(\"150\", null, -1);\n\n\t    XMLLoader loader = new XMLLoader().init(null);\n\t    loader.load(req(), new SolrQueryResponse(), new ContentStreamBase.StringStream(xml), p);\n\t    \n\t    p.assertNoCommandsPending();\n\t  }\n\n","sourceOld":"  @Test\n  public void testReadDelete() throws Exception {\n\t    String xml =\n\t      \"<update>\" +\n\t      \" <delete>\" +\n\t      \"   <query>id:150</query>\" +\n\t      \"   <id>150</id>\" +\n\t      \"   <id>200</id>\" +\n\t      \"   <query>id:200</query>\" +\n\t      \" </delete>\" +\n\t      \" <delete commitWithin=\\\"500\\\">\" +\n\t      \"   <query>id:150</query>\" +\n\t      \" </delete>\" +\n\t      \" <delete>\" +\n\t      \"   <id>150</id>\" +\n\t      \" </delete>\" +\n\t      \"</update>\";\n\t    \n\t    MockUpdateRequestProcessor p = new MockUpdateRequestProcessor(null);\n\t    p.expectDelete(null, \"id:150\", -1);\n\t    p.expectDelete(\"150\", null, -1);\n\t    p.expectDelete(\"200\", null, -1);\n\t    p.expectDelete(null, \"id:200\", -1);\n\t    p.expectDelete(null, \"id:150\", 500);\n\t    p.expectDelete(\"150\", null, -1);\n\n\t    XMLLoader loader = new XMLLoader(p, inputFactory);\n\t    loader.load(req(), new SolrQueryResponse(), new ContentStreamBase.StringStream(xml));\n\t    \n\t    p.assertNoCommandsPending();\n\t  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4093b270ba337f9c25a4c0e6cb2ae2c07f697376","date":1347897716,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/XmlUpdateRequestHandlerTest#testReadDelete().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/XmlUpdateRequestHandlerTest#testReadDelete().mjava","sourceNew":"  @Test\n  public void testReadDelete() throws Exception {\n      String xml =\n        \"<update>\" +\n        \" <delete>\" +\n        \"   <query>id:150</query>\" +\n        \"   <id>150</id>\" +\n        \"   <id>200</id>\" +\n        \"   <query>id:200</query>\" +\n        \" </delete>\" +\n        \" <delete commitWithin=\\\"500\\\">\" +\n        \"   <query>id:150</query>\" +\n        \" </delete>\" +\n        \" <delete>\" +\n        \"   <id>150</id>\" +\n        \" </delete>\" +\n        \"</update>\";\n\n      MockUpdateRequestProcessor p = new MockUpdateRequestProcessor(null);\n      p.expectDelete(null, \"id:150\", -1);\n      p.expectDelete(\"150\", null, -1);\n      p.expectDelete(\"200\", null, -1);\n      p.expectDelete(null, \"id:200\", -1);\n      p.expectDelete(null, \"id:150\", 500);\n      p.expectDelete(\"150\", null, -1);\n\n      XMLLoader loader = new XMLLoader().init(null);\n      loader.load(req(), new SolrQueryResponse(), new ContentStreamBase.StringStream(xml), p);\n\n      p.assertNoCommandsPending();\n    }\n\n","sourceOld":"  @Test\n  public void testReadDelete() throws Exception {\n\t    String xml =\n\t      \"<update>\" +\n\t      \" <delete>\" +\n\t      \"   <query>id:150</query>\" +\n\t      \"   <id>150</id>\" +\n\t      \"   <id>200</id>\" +\n\t      \"   <query>id:200</query>\" +\n\t      \" </delete>\" +\n\t      \" <delete commitWithin=\\\"500\\\">\" +\n\t      \"   <query>id:150</query>\" +\n\t      \" </delete>\" +\n\t      \" <delete>\" +\n\t      \"   <id>150</id>\" +\n\t      \" </delete>\" +\n\t      \"</update>\";\n\t    \n\t    MockUpdateRequestProcessor p = new MockUpdateRequestProcessor(null);\n\t    p.expectDelete(null, \"id:150\", -1);\n\t    p.expectDelete(\"150\", null, -1);\n\t    p.expectDelete(\"200\", null, -1);\n\t    p.expectDelete(null, \"id:200\", -1);\n\t    p.expectDelete(null, \"id:150\", 500);\n\t    p.expectDelete(\"150\", null, -1);\n\n\t    XMLLoader loader = new XMLLoader().init(null);\n\t    loader.load(req(), new SolrQueryResponse(), new ContentStreamBase.StringStream(xml), p);\n\t    \n\t    p.assertNoCommandsPending();\n\t  }\n\n","bugFix":null,"bugIntro":["747dd71fefcbc7142661c25334b74c518fef4d81"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"747dd71fefcbc7142661c25334b74c518fef4d81","date":1423504825,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/XmlUpdateRequestHandlerTest#testReadDelete().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/XmlUpdateRequestHandlerTest#testReadDelete().mjava","sourceNew":"  @Test\n  public void testReadDelete() throws Exception {\n      String xml =\n        \"<update>\" +\n        \" <delete>\" +\n        \"   <query>id:150</query>\" +\n        \"   <id>150</id>\" +\n        \"   <id>200</id>\" +\n        \"   <query>id:200</query>\" +\n        \" </delete>\" +\n        \" <delete commitWithin=\\\"500\\\">\" +\n        \"   <query>id:150</query>\" +\n        \" </delete>\" +\n        \" <delete>\" +\n        \"   <id>150</id>\" +\n        \" </delete>\" +\n        \" <delete>\" +\n        \"   <id version=\\\"42\\\">300</id>\" +\n        \" </delete>\" +\n        \" <delete>\" +\n        \"   <id _route_=\\\"shard1\\\">400</id>\" +\n        \" </delete>\" +\n        \" <delete>\" +\n        \"   <id _route_=\\\"shard1\\\" version=\\\"42\\\">500</id>\" +\n        \" </delete>\" +\n        \"</update>\";\n\n      MockUpdateRequestProcessor p = new MockUpdateRequestProcessor(null);\n      p.expectDelete(null, \"id:150\", -1, 0, null);\n      p.expectDelete(\"150\", null, -1, 0, null);\n      p.expectDelete(\"200\", null, -1, 0, null);\n      p.expectDelete(null, \"id:200\", -1, 0, null);\n      p.expectDelete(null, \"id:150\", 500, 0, null);\n      p.expectDelete(\"150\", null, -1, 0, null);\n      p.expectDelete(\"300\", null, -1, 42, null);\n      p.expectDelete(\"400\", null, -1, 0, \"shard1\");\n      p.expectDelete(\"500\", null, -1, 42, \"shard1\");\n\n      XMLLoader loader = new XMLLoader().init(null);\n      loader.load(req(), new SolrQueryResponse(), new ContentStreamBase.StringStream(xml), p);\n\n      p.assertNoCommandsPending();\n    }\n\n","sourceOld":"  @Test\n  public void testReadDelete() throws Exception {\n      String xml =\n        \"<update>\" +\n        \" <delete>\" +\n        \"   <query>id:150</query>\" +\n        \"   <id>150</id>\" +\n        \"   <id>200</id>\" +\n        \"   <query>id:200</query>\" +\n        \" </delete>\" +\n        \" <delete commitWithin=\\\"500\\\">\" +\n        \"   <query>id:150</query>\" +\n        \" </delete>\" +\n        \" <delete>\" +\n        \"   <id>150</id>\" +\n        \" </delete>\" +\n        \"</update>\";\n\n      MockUpdateRequestProcessor p = new MockUpdateRequestProcessor(null);\n      p.expectDelete(null, \"id:150\", -1);\n      p.expectDelete(\"150\", null, -1);\n      p.expectDelete(\"200\", null, -1);\n      p.expectDelete(null, \"id:200\", -1);\n      p.expectDelete(null, \"id:150\", 500);\n      p.expectDelete(\"150\", null, -1);\n\n      XMLLoader loader = new XMLLoader().init(null);\n      loader.load(req(), new SolrQueryResponse(), new ContentStreamBase.StringStream(xml), p);\n\n      p.assertNoCommandsPending();\n    }\n\n","bugFix":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0d22ac6a4146774c1bc8400160fc0b6150294e92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","818d704eaaf0fba0561d0d2752832e1015053482"],"042e4d934397657ba04c82b46cc5665076bc5c58":["818d704eaaf0fba0561d0d2752832e1015053482"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","818d704eaaf0fba0561d0d2752832e1015053482"],"747dd71fefcbc7142661c25334b74c518fef4d81":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"818d704eaaf0fba0561d0d2752832e1015053482":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["747dd71fefcbc7142661c25334b74c518fef4d81"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["042e4d934397657ba04c82b46cc5665076bc5c58"]},"commit2Childs":{"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"042e4d934397657ba04c82b46cc5665076bc5c58":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","818d704eaaf0fba0561d0d2752832e1015053482"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"818d704eaaf0fba0561d0d2752832e1015053482":["0d22ac6a4146774c1bc8400160fc0b6150294e92","042e4d934397657ba04c82b46cc5665076bc5c58","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d"],"747dd71fefcbc7142661c25334b74c518fef4d81":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["747dd71fefcbc7142661c25334b74c518fef4d81"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}