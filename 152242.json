{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/request/json/JsonQueryRequestIntegrationTest#testReturnsResultsStartingAtOffset().mjava","commits":[{"id":"a1f685bdd8a6bd0db4f9fb53514bf80b6b1fe8f6","date":1541507693,"type":0,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/json/JsonQueryRequestIntegrationTest#testReturnsResultsStartingAtOffset().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testReturnsResultsStartingAtOffset() throws Exception {\n    final JsonQueryRequest originalDocsQuery = new JsonQueryRequest()\n        .setQuery(\"*:*\");\n    QueryResponse originalDocsResponse = originalDocsQuery.process(cluster.getSolrClient(), COLLECTION_NAME);\n    assertEquals(0, originalDocsResponse.getStatus());\n    assertEquals(NUM_BOOKS_TOTAL, originalDocsResponse.getResults().size());\n    final SolrDocumentList originalDocs = originalDocsResponse.getResults();\n\n    final int offset = 2;\n    final JsonQueryRequest offsetDocsQuery = new JsonQueryRequest()\n        .setQuery(\"*:*\")\n        .setOffset(offset);\n    QueryResponse offsetDocsResponse = offsetDocsQuery.process(cluster.getSolrClient(), COLLECTION_NAME);\n    assertEquals(0, offsetDocsResponse.getStatus());\n    assertEquals(NUM_BOOKS_TOTAL - offset, offsetDocsResponse.getResults().size());\n    final SolrDocumentList offsetDocs = offsetDocsResponse.getResults();\n\n    // Ensure the same docs are returned, shifted by 'offset'\n    for (int i = 0; i < offsetDocs.size(); i++) {\n      final String offsetId = (String) offsetDocs.get(i).getFieldValue(\"id\");\n      final String originalId = (String) originalDocs.get(i + offset).getFieldValue(\"id\");\n      assertEquals(offsetId, originalId);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a1f685bdd8a6bd0db4f9fb53514bf80b6b1fe8f6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a1f685bdd8a6bd0db4f9fb53514bf80b6b1fe8f6"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a1f685bdd8a6bd0db4f9fb53514bf80b6b1fe8f6"],"a1f685bdd8a6bd0db4f9fb53514bf80b6b1fe8f6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}