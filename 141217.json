{"path":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestContextSuggestField#testTokenStream().mjava","commits":[{"id":"509ddf2b18aec24f54a1cbabf7d15ed537d61ff2","date":1446074047,"type":0,"author":"Areek Zillur","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestContextSuggestField#testTokenStream().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testTokenStream() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    ContextSuggestField field = new ContextSuggestField(\"field\", \"input\", 1, \"context1\", \"context2\");\n    BytesRef surfaceForm = new BytesRef(\"input\");\n    ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n    try (OutputStreamDataOutput output = new OutputStreamDataOutput(byteArrayOutputStream)) {\n      output.writeVInt(surfaceForm.length);\n      output.writeBytes(surfaceForm.bytes, surfaceForm.offset, surfaceForm.length);\n      output.writeVInt(1 + 1);\n      output.writeByte(ContextSuggestField.TYPE);\n    }\n    BytesRef payload = new BytesRef(byteArrayOutputStream.toByteArray());\n    String[] expectedOutputs = new String[2];\n    CharsRefBuilder builder = new CharsRefBuilder();\n    builder.append(\"context1\");\n    builder.append(((char) ContextSuggestField.CONTEXT_SEPARATOR));\n    builder.append(((char) CompletionAnalyzer.SEP_LABEL));\n    builder.append(\"input\");\n    expectedOutputs[0] = builder.toCharsRef().toString();\n    builder.clear();\n    builder.append(\"context2\");\n    builder.append(((char) ContextSuggestField.CONTEXT_SEPARATOR));\n    builder.append(((char) CompletionAnalyzer.SEP_LABEL));\n    builder.append(\"input\");\n    expectedOutputs[1] = builder.toCharsRef().toString();\n    TokenStream stream = new CompletionTokenStreamTest.PayloadAttrToTypeAttrFilter(field.tokenStream(analyzer, null));\n    assertTokenStreamContents(stream, expectedOutputs, null, null, new String[]{payload.utf8ToString(), payload.utf8ToString()}, new int[]{1, 1}, null, null);\n\n    CompletionAnalyzer completionAnalyzer = new CompletionAnalyzer(analyzer);\n    stream = new CompletionTokenStreamTest.PayloadAttrToTypeAttrFilter(field.tokenStream(completionAnalyzer, null));\n    assertTokenStreamContents(stream, expectedOutputs, null, null, new String[]{payload.utf8ToString(), payload.utf8ToString()}, new int[]{1, 1}, null, null);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e45ad199e1b1a4bbc15c1c08dcd73dc08fa927a","date":1528168051,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestContextSuggestField#testTokenStream().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestContextSuggestField#testTokenStream().mjava","sourceNew":"  @Test\n  public void testTokenStream() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    ContextSuggestField field = new ContextSuggestField(\"field\", \"input\", 1, \"context1\", \"context2\");\n    BytesRef surfaceForm = new BytesRef(\"input\");\n    ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n    try (OutputStreamDataOutput output = new OutputStreamDataOutput(byteArrayOutputStream)) {\n      output.writeVInt(surfaceForm.length);\n      output.writeBytes(surfaceForm.bytes, surfaceForm.offset, surfaceForm.length);\n      output.writeVInt(1 + 1);\n      output.writeByte(ContextSuggestField.TYPE);\n    }\n    BytesRef payload = new BytesRef(byteArrayOutputStream.toByteArray());\n    String[] expectedOutputs = new String[2];\n    CharsRefBuilder builder = new CharsRefBuilder();\n    builder.append(\"context1\");\n    builder.append(((char) ContextSuggestField.CONTEXT_SEPARATOR));\n    builder.append((char) ConcatenateGraphFilter.SEP_LABEL);\n    builder.append(\"input\");\n    expectedOutputs[0] = builder.toCharsRef().toString();\n    builder.clear();\n    builder.append(\"context2\");\n    builder.append(((char) ContextSuggestField.CONTEXT_SEPARATOR));\n    builder.append((char) ConcatenateGraphFilter.SEP_LABEL);\n    builder.append(\"input\");\n    expectedOutputs[1] = builder.toCharsRef().toString();\n    TokenStream stream = new TestSuggestField.PayloadAttrToTypeAttrFilter(field.tokenStream(analyzer, null));\n    assertTokenStreamContents(stream, expectedOutputs, null, null, new String[]{payload.utf8ToString(), payload.utf8ToString()}, new int[]{1, 0}, null, null);\n\n    CompletionAnalyzer completionAnalyzer = new CompletionAnalyzer(analyzer);\n    stream = new TestSuggestField.PayloadAttrToTypeAttrFilter(field.tokenStream(completionAnalyzer, null));\n    assertTokenStreamContents(stream, expectedOutputs, null, null, new String[]{payload.utf8ToString(), payload.utf8ToString()}, new int[]{1, 0}, null, null);\n  }\n\n","sourceOld":"  @Test\n  public void testTokenStream() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    ContextSuggestField field = new ContextSuggestField(\"field\", \"input\", 1, \"context1\", \"context2\");\n    BytesRef surfaceForm = new BytesRef(\"input\");\n    ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n    try (OutputStreamDataOutput output = new OutputStreamDataOutput(byteArrayOutputStream)) {\n      output.writeVInt(surfaceForm.length);\n      output.writeBytes(surfaceForm.bytes, surfaceForm.offset, surfaceForm.length);\n      output.writeVInt(1 + 1);\n      output.writeByte(ContextSuggestField.TYPE);\n    }\n    BytesRef payload = new BytesRef(byteArrayOutputStream.toByteArray());\n    String[] expectedOutputs = new String[2];\n    CharsRefBuilder builder = new CharsRefBuilder();\n    builder.append(\"context1\");\n    builder.append(((char) ContextSuggestField.CONTEXT_SEPARATOR));\n    builder.append(((char) CompletionAnalyzer.SEP_LABEL));\n    builder.append(\"input\");\n    expectedOutputs[0] = builder.toCharsRef().toString();\n    builder.clear();\n    builder.append(\"context2\");\n    builder.append(((char) ContextSuggestField.CONTEXT_SEPARATOR));\n    builder.append(((char) CompletionAnalyzer.SEP_LABEL));\n    builder.append(\"input\");\n    expectedOutputs[1] = builder.toCharsRef().toString();\n    TokenStream stream = new CompletionTokenStreamTest.PayloadAttrToTypeAttrFilter(field.tokenStream(analyzer, null));\n    assertTokenStreamContents(stream, expectedOutputs, null, null, new String[]{payload.utf8ToString(), payload.utf8ToString()}, new int[]{1, 1}, null, null);\n\n    CompletionAnalyzer completionAnalyzer = new CompletionAnalyzer(analyzer);\n    stream = new CompletionTokenStreamTest.PayloadAttrToTypeAttrFilter(field.tokenStream(completionAnalyzer, null));\n    assertTokenStreamContents(stream, expectedOutputs, null, null, new String[]{payload.utf8ToString(), payload.utf8ToString()}, new int[]{1, 1}, null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestContextSuggestField#testTokenStream().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestContextSuggestField#testTokenStream().mjava","sourceNew":"  @Test\n  public void testTokenStream() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    ContextSuggestField field = new ContextSuggestField(\"field\", \"input\", 1, \"context1\", \"context2\");\n    BytesRef surfaceForm = new BytesRef(\"input\");\n    ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n    try (OutputStreamDataOutput output = new OutputStreamDataOutput(byteArrayOutputStream)) {\n      output.writeVInt(surfaceForm.length);\n      output.writeBytes(surfaceForm.bytes, surfaceForm.offset, surfaceForm.length);\n      output.writeVInt(1 + 1);\n      output.writeByte(ContextSuggestField.TYPE);\n    }\n    BytesRef payload = new BytesRef(byteArrayOutputStream.toByteArray());\n    String[] expectedOutputs = new String[2];\n    CharsRefBuilder builder = new CharsRefBuilder();\n    builder.append(\"context1\");\n    builder.append(((char) ContextSuggestField.CONTEXT_SEPARATOR));\n    builder.append((char) ConcatenateGraphFilter.SEP_LABEL);\n    builder.append(\"input\");\n    expectedOutputs[0] = builder.toCharsRef().toString();\n    builder.clear();\n    builder.append(\"context2\");\n    builder.append(((char) ContextSuggestField.CONTEXT_SEPARATOR));\n    builder.append((char) ConcatenateGraphFilter.SEP_LABEL);\n    builder.append(\"input\");\n    expectedOutputs[1] = builder.toCharsRef().toString();\n    TokenStream stream = new TestSuggestField.PayloadAttrToTypeAttrFilter(field.tokenStream(analyzer, null));\n    assertTokenStreamContents(stream, expectedOutputs, null, null, new String[]{payload.utf8ToString(), payload.utf8ToString()}, new int[]{1, 0}, null, null);\n\n    CompletionAnalyzer completionAnalyzer = new CompletionAnalyzer(analyzer);\n    stream = new TestSuggestField.PayloadAttrToTypeAttrFilter(field.tokenStream(completionAnalyzer, null));\n    assertTokenStreamContents(stream, expectedOutputs, null, null, new String[]{payload.utf8ToString(), payload.utf8ToString()}, new int[]{1, 0}, null, null);\n  }\n\n","sourceOld":"  @Test\n  public void testTokenStream() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    ContextSuggestField field = new ContextSuggestField(\"field\", \"input\", 1, \"context1\", \"context2\");\n    BytesRef surfaceForm = new BytesRef(\"input\");\n    ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n    try (OutputStreamDataOutput output = new OutputStreamDataOutput(byteArrayOutputStream)) {\n      output.writeVInt(surfaceForm.length);\n      output.writeBytes(surfaceForm.bytes, surfaceForm.offset, surfaceForm.length);\n      output.writeVInt(1 + 1);\n      output.writeByte(ContextSuggestField.TYPE);\n    }\n    BytesRef payload = new BytesRef(byteArrayOutputStream.toByteArray());\n    String[] expectedOutputs = new String[2];\n    CharsRefBuilder builder = new CharsRefBuilder();\n    builder.append(\"context1\");\n    builder.append(((char) ContextSuggestField.CONTEXT_SEPARATOR));\n    builder.append(((char) CompletionAnalyzer.SEP_LABEL));\n    builder.append(\"input\");\n    expectedOutputs[0] = builder.toCharsRef().toString();\n    builder.clear();\n    builder.append(\"context2\");\n    builder.append(((char) ContextSuggestField.CONTEXT_SEPARATOR));\n    builder.append(((char) CompletionAnalyzer.SEP_LABEL));\n    builder.append(\"input\");\n    expectedOutputs[1] = builder.toCharsRef().toString();\n    TokenStream stream = new CompletionTokenStreamTest.PayloadAttrToTypeAttrFilter(field.tokenStream(analyzer, null));\n    assertTokenStreamContents(stream, expectedOutputs, null, null, new String[]{payload.utf8ToString(), payload.utf8ToString()}, new int[]{1, 1}, null, null);\n\n    CompletionAnalyzer completionAnalyzer = new CompletionAnalyzer(analyzer);\n    stream = new CompletionTokenStreamTest.PayloadAttrToTypeAttrFilter(field.tokenStream(completionAnalyzer, null));\n    assertTokenStreamContents(stream, expectedOutputs, null, null, new String[]{payload.utf8ToString(), payload.utf8ToString()}, new int[]{1, 1}, null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestContextSuggestField#testTokenStream().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestContextSuggestField#testTokenStream().mjava","sourceNew":"  @Test\n  public void testTokenStream() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    ContextSuggestField field = new ContextSuggestField(\"field\", \"input\", 1, \"context1\", \"context2\");\n    BytesRef surfaceForm = new BytesRef(\"input\");\n    ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n    try (OutputStreamDataOutput output = new OutputStreamDataOutput(byteArrayOutputStream)) {\n      output.writeVInt(surfaceForm.length);\n      output.writeBytes(surfaceForm.bytes, surfaceForm.offset, surfaceForm.length);\n      output.writeVInt(1 + 1);\n      output.writeByte(ContextSuggestField.TYPE);\n    }\n    BytesRef payload = new BytesRef(byteArrayOutputStream.toByteArray());\n    String[] expectedOutputs = new String[2];\n    CharsRefBuilder builder = new CharsRefBuilder();\n    builder.append(\"context1\");\n    builder.append(((char) ContextSuggestField.CONTEXT_SEPARATOR));\n    builder.append((char) ConcatenateGraphFilter.SEP_LABEL);\n    builder.append(\"input\");\n    expectedOutputs[0] = builder.toCharsRef().toString();\n    builder.clear();\n    builder.append(\"context2\");\n    builder.append(((char) ContextSuggestField.CONTEXT_SEPARATOR));\n    builder.append((char) ConcatenateGraphFilter.SEP_LABEL);\n    builder.append(\"input\");\n    expectedOutputs[1] = builder.toCharsRef().toString();\n    TokenStream stream = new TestSuggestField.PayloadAttrToTypeAttrFilter(field.tokenStream(analyzer, null));\n    assertTokenStreamContents(stream, expectedOutputs, null, null, new String[]{payload.utf8ToString(), payload.utf8ToString()}, new int[]{1, 0}, null, null);\n\n    CompletionAnalyzer completionAnalyzer = new CompletionAnalyzer(analyzer);\n    stream = new TestSuggestField.PayloadAttrToTypeAttrFilter(field.tokenStream(completionAnalyzer, null));\n    assertTokenStreamContents(stream, expectedOutputs, null, null, new String[]{payload.utf8ToString(), payload.utf8ToString()}, new int[]{1, 0}, null, null);\n  }\n\n","sourceOld":"  @Test\n  public void testTokenStream() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    ContextSuggestField field = new ContextSuggestField(\"field\", \"input\", 1, \"context1\", \"context2\");\n    BytesRef surfaceForm = new BytesRef(\"input\");\n    ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n    try (OutputStreamDataOutput output = new OutputStreamDataOutput(byteArrayOutputStream)) {\n      output.writeVInt(surfaceForm.length);\n      output.writeBytes(surfaceForm.bytes, surfaceForm.offset, surfaceForm.length);\n      output.writeVInt(1 + 1);\n      output.writeByte(ContextSuggestField.TYPE);\n    }\n    BytesRef payload = new BytesRef(byteArrayOutputStream.toByteArray());\n    String[] expectedOutputs = new String[2];\n    CharsRefBuilder builder = new CharsRefBuilder();\n    builder.append(\"context1\");\n    builder.append(((char) ContextSuggestField.CONTEXT_SEPARATOR));\n    builder.append(((char) CompletionAnalyzer.SEP_LABEL));\n    builder.append(\"input\");\n    expectedOutputs[0] = builder.toCharsRef().toString();\n    builder.clear();\n    builder.append(\"context2\");\n    builder.append(((char) ContextSuggestField.CONTEXT_SEPARATOR));\n    builder.append(((char) CompletionAnalyzer.SEP_LABEL));\n    builder.append(\"input\");\n    expectedOutputs[1] = builder.toCharsRef().toString();\n    TokenStream stream = new CompletionTokenStreamTest.PayloadAttrToTypeAttrFilter(field.tokenStream(analyzer, null));\n    assertTokenStreamContents(stream, expectedOutputs, null, null, new String[]{payload.utf8ToString(), payload.utf8ToString()}, new int[]{1, 1}, null, null);\n\n    CompletionAnalyzer completionAnalyzer = new CompletionAnalyzer(analyzer);\n    stream = new CompletionTokenStreamTest.PayloadAttrToTypeAttrFilter(field.tokenStream(completionAnalyzer, null));\n    assertTokenStreamContents(stream, expectedOutputs, null, null, new String[]{payload.utf8ToString(), payload.utf8ToString()}, new int[]{1, 1}, null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"509ddf2b18aec24f54a1cbabf7d15ed537d61ff2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["509ddf2b18aec24f54a1cbabf7d15ed537d61ff2","9e45ad199e1b1a4bbc15c1c08dcd73dc08fa927a"],"9e45ad199e1b1a4bbc15c1c08dcd73dc08fa927a":["509ddf2b18aec24f54a1cbabf7d15ed537d61ff2"],"f592209545c71895260367152601e9200399776d":["509ddf2b18aec24f54a1cbabf7d15ed537d61ff2","9e45ad199e1b1a4bbc15c1c08dcd73dc08fa927a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9e45ad199e1b1a4bbc15c1c08dcd73dc08fa927a"]},"commit2Childs":{"509ddf2b18aec24f54a1cbabf7d15ed537d61ff2":["b70042a8a492f7054d480ccdd2be9796510d4327","9e45ad199e1b1a4bbc15c1c08dcd73dc08fa927a","f592209545c71895260367152601e9200399776d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["509ddf2b18aec24f54a1cbabf7d15ed537d61ff2"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"9e45ad199e1b1a4bbc15c1c08dcd73dc08fa927a":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f592209545c71895260367152601e9200399776d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}