{"path":"solr/core/src/test/org/apache/solr/schema/TestPointFields#doTestDoublePointFieldMultiValuedRangeFacet(String,String).mjava","commits":[{"id":"744b111b17d15d490a648eb021bfa240e7f11556","date":1487008069,"type":0,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestPointFields#doTestDoublePointFieldMultiValuedRangeFacet(String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void doTestDoublePointFieldMultiValuedRangeFacet(String docValuesField, String nonDocValuesField) throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), docValuesField, String.valueOf(i), docValuesField, String.valueOf(i + 10), \n          nonDocValuesField, String.valueOf(i), nonDocValuesField, String.valueOf(i + 10)));\n    }\n    assertU(commit());\n    assertTrue(h.getCore().getLatestSchema().getField(docValuesField).hasDocValues());\n    assertTrue(h.getCore().getLatestSchema().getField(docValuesField).multiValued());\n    assertTrue(h.getCore().getLatestSchema().getField(docValuesField).getType() instanceof PointField);\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"facet\", \"true\", \"facet.range\", docValuesField, \"facet.range.start\", \"-10\", \"facet.range.end\", \"20\", \"facet.range.gap\", \"2\"), \n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='0.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='2.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='4.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='6.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='8.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='10.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='12.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='14.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='16.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='18.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='-10.0'][.='0']\");\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"facet\", \"true\", \"facet.range\", docValuesField, \"facet.range.start\", \"-10\", \"facet.range.end\", \"20\", \"facet.range.gap\", \"2\", \"facet.range.method\", \"dv\"), \n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='0.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='2.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='4.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='6.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='8.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='10.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='12.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='14.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='16.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='18.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='-10.0'][.='0']\");\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"facet\", \"true\", \"facet.range\", docValuesField, \"facet.range.start\", \"0\", \"facet.range.end\", \"20\", \"facet.range.gap\", \"100\"), \n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='0.0'][.='10']\");\n    \n    assertFalse(h.getCore().getLatestSchema().getField(nonDocValuesField).hasDocValues());\n    assertTrue(h.getCore().getLatestSchema().getField(nonDocValuesField).multiValued());\n    assertTrue(h.getCore().getLatestSchema().getField(nonDocValuesField).getType() instanceof PointField);\n    // Range Faceting with method = filter should work\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"facet\", \"true\", \"facet.range\", nonDocValuesField, \"facet.range.start\", \"-10\", \"facet.range.end\", \"20\", \"facet.range.gap\", \"2\", \"facet.range.method\", \"filter\"), \n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='0.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='2.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='4.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='6.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='8.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='10.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='12.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='14.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='16.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='18.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='-10.0'][.='0']\");\n    \n    // this should actually use filter method instead of dv\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"facet\", \"true\", \"facet.range\", nonDocValuesField, \"facet.range.start\", \"-10\", \"facet.range.end\", \"20\", \"facet.range.gap\", \"2\", \"facet.range.method\", \"dv\"), \n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='0.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='2.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='4.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='6.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='8.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='10.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='12.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='14.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='16.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='18.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='-10.0'][.='0']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"022a4de90e0479b604264ca9c2e134c996454ab3","date":1487118265,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestPointFields#doTestDoublePointFieldMultiValuedRangeFacet(String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void doTestDoublePointFieldMultiValuedRangeFacet(String docValuesField, String nonDocValuesField) throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), docValuesField, String.valueOf(i), docValuesField, String.valueOf(i + 10), \n          nonDocValuesField, String.valueOf(i), nonDocValuesField, String.valueOf(i + 10)));\n    }\n    assertU(commit());\n    assertTrue(h.getCore().getLatestSchema().getField(docValuesField).hasDocValues());\n    assertTrue(h.getCore().getLatestSchema().getField(docValuesField).multiValued());\n    assertTrue(h.getCore().getLatestSchema().getField(docValuesField).getType() instanceof PointField);\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"facet\", \"true\", \"facet.range\", docValuesField, \"facet.range.start\", \"-10\", \"facet.range.end\", \"20\", \"facet.range.gap\", \"2\"), \n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='0.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='2.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='4.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='6.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='8.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='10.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='12.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='14.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='16.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='18.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='-10.0'][.='0']\");\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"facet\", \"true\", \"facet.range\", docValuesField, \"facet.range.start\", \"-10\", \"facet.range.end\", \"20\", \"facet.range.gap\", \"2\", \"facet.range.method\", \"dv\"), \n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='0.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='2.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='4.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='6.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='8.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='10.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='12.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='14.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='16.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='18.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='-10.0'][.='0']\");\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"facet\", \"true\", \"facet.range\", docValuesField, \"facet.range.start\", \"0\", \"facet.range.end\", \"20\", \"facet.range.gap\", \"100\"), \n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='0.0'][.='10']\");\n    \n    assertFalse(h.getCore().getLatestSchema().getField(nonDocValuesField).hasDocValues());\n    assertTrue(h.getCore().getLatestSchema().getField(nonDocValuesField).multiValued());\n    assertTrue(h.getCore().getLatestSchema().getField(nonDocValuesField).getType() instanceof PointField);\n    // Range Faceting with method = filter should work\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"facet\", \"true\", \"facet.range\", nonDocValuesField, \"facet.range.start\", \"-10\", \"facet.range.end\", \"20\", \"facet.range.gap\", \"2\", \"facet.range.method\", \"filter\"), \n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='0.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='2.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='4.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='6.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='8.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='10.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='12.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='14.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='16.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='18.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='-10.0'][.='0']\");\n    \n    // this should actually use filter method instead of dv\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"facet\", \"true\", \"facet.range\", nonDocValuesField, \"facet.range.start\", \"-10\", \"facet.range.end\", \"20\", \"facet.range.gap\", \"2\", \"facet.range.method\", \"dv\"), \n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='0.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='2.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='4.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='6.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='8.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='10.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='12.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='14.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='16.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='18.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='-10.0'][.='0']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96","date":1487122334,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/schema/TestPointFields#doTestDoublePointFieldMultiValuedRangeFacet(String,String).mjava","sourceNew":null,"sourceOld":"  private void doTestDoublePointFieldMultiValuedRangeFacet(String docValuesField, String nonDocValuesField) throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), docValuesField, String.valueOf(i), docValuesField, String.valueOf(i + 10), \n          nonDocValuesField, String.valueOf(i), nonDocValuesField, String.valueOf(i + 10)));\n    }\n    assertU(commit());\n    assertTrue(h.getCore().getLatestSchema().getField(docValuesField).hasDocValues());\n    assertTrue(h.getCore().getLatestSchema().getField(docValuesField).multiValued());\n    assertTrue(h.getCore().getLatestSchema().getField(docValuesField).getType() instanceof PointField);\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"facet\", \"true\", \"facet.range\", docValuesField, \"facet.range.start\", \"-10\", \"facet.range.end\", \"20\", \"facet.range.gap\", \"2\"), \n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='0.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='2.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='4.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='6.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='8.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='10.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='12.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='14.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='16.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='18.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='-10.0'][.='0']\");\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"facet\", \"true\", \"facet.range\", docValuesField, \"facet.range.start\", \"-10\", \"facet.range.end\", \"20\", \"facet.range.gap\", \"2\", \"facet.range.method\", \"dv\"), \n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='0.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='2.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='4.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='6.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='8.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='10.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='12.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='14.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='16.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='18.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='-10.0'][.='0']\");\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"facet\", \"true\", \"facet.range\", docValuesField, \"facet.range.start\", \"0\", \"facet.range.end\", \"20\", \"facet.range.gap\", \"100\"), \n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='0.0'][.='10']\");\n    \n    assertFalse(h.getCore().getLatestSchema().getField(nonDocValuesField).hasDocValues());\n    assertTrue(h.getCore().getLatestSchema().getField(nonDocValuesField).multiValued());\n    assertTrue(h.getCore().getLatestSchema().getField(nonDocValuesField).getType() instanceof PointField);\n    // Range Faceting with method = filter should work\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"facet\", \"true\", \"facet.range\", nonDocValuesField, \"facet.range.start\", \"-10\", \"facet.range.end\", \"20\", \"facet.range.gap\", \"2\", \"facet.range.method\", \"filter\"), \n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='0.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='2.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='4.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='6.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='8.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='10.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='12.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='14.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='16.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='18.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='-10.0'][.='0']\");\n    \n    // this should actually use filter method instead of dv\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"facet\", \"true\", \"facet.range\", nonDocValuesField, \"facet.range.start\", \"-10\", \"facet.range.end\", \"20\", \"facet.range.gap\", \"2\", \"facet.range.method\", \"dv\"), \n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='0.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='2.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='4.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='6.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='8.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='10.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='12.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='14.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='16.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='18.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='-10.0'][.='0']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"897b06b1364bd1f658a8be7591e43f0851458e7f","date":1487123008,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestPointFields#doTestDoublePointFieldMultiValuedRangeFacet(String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void doTestDoublePointFieldMultiValuedRangeFacet(String docValuesField, String nonDocValuesField) throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), docValuesField, String.valueOf(i), docValuesField, String.valueOf(i + 10), \n          nonDocValuesField, String.valueOf(i), nonDocValuesField, String.valueOf(i + 10)));\n    }\n    assertU(commit());\n    assertTrue(h.getCore().getLatestSchema().getField(docValuesField).hasDocValues());\n    assertTrue(h.getCore().getLatestSchema().getField(docValuesField).multiValued());\n    assertTrue(h.getCore().getLatestSchema().getField(docValuesField).getType() instanceof PointField);\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"facet\", \"true\", \"facet.range\", docValuesField, \"facet.range.start\", \"-10\", \"facet.range.end\", \"20\", \"facet.range.gap\", \"2\"), \n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='0.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='2.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='4.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='6.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='8.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='10.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='12.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='14.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='16.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='18.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='-10.0'][.='0']\");\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"facet\", \"true\", \"facet.range\", docValuesField, \"facet.range.start\", \"-10\", \"facet.range.end\", \"20\", \"facet.range.gap\", \"2\", \"facet.range.method\", \"dv\"), \n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='0.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='2.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='4.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='6.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='8.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='10.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='12.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='14.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='16.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='18.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='-10.0'][.='0']\");\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"facet\", \"true\", \"facet.range\", docValuesField, \"facet.range.start\", \"0\", \"facet.range.end\", \"20\", \"facet.range.gap\", \"100\"), \n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='0.0'][.='10']\");\n    \n    assertFalse(h.getCore().getLatestSchema().getField(nonDocValuesField).hasDocValues());\n    assertTrue(h.getCore().getLatestSchema().getField(nonDocValuesField).multiValued());\n    assertTrue(h.getCore().getLatestSchema().getField(nonDocValuesField).getType() instanceof PointField);\n    // Range Faceting with method = filter should work\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"facet\", \"true\", \"facet.range\", nonDocValuesField, \"facet.range.start\", \"-10\", \"facet.range.end\", \"20\", \"facet.range.gap\", \"2\", \"facet.range.method\", \"filter\"), \n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='0.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='2.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='4.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='6.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='8.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='10.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='12.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='14.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='16.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='18.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='-10.0'][.='0']\");\n    \n    // this should actually use filter method instead of dv\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"facet\", \"true\", \"facet.range\", nonDocValuesField, \"facet.range.start\", \"-10\", \"facet.range.end\", \"20\", \"facet.range.gap\", \"2\", \"facet.range.method\", \"dv\"), \n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='0.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='2.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='4.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='6.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='8.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='10.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='12.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='14.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='16.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='18.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='-10.0'][.='0']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e844d4f9ba6804f10747d7e51e83a9a8868c94","date":1500054875,"type":4,"author":"Steve Rowe","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/schema/TestPointFields#doTestDoublePointFieldMultiValuedRangeFacet(String,String).mjava","sourceNew":null,"sourceOld":"  private void doTestDoublePointFieldMultiValuedRangeFacet(String docValuesField, String nonDocValuesField) throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), docValuesField, String.valueOf(i), docValuesField, String.valueOf(i + 10), \n          nonDocValuesField, String.valueOf(i), nonDocValuesField, String.valueOf(i + 10)));\n    }\n    assertU(commit());\n    assertTrue(h.getCore().getLatestSchema().getField(docValuesField).hasDocValues());\n    assertTrue(h.getCore().getLatestSchema().getField(docValuesField).multiValued());\n    assertTrue(h.getCore().getLatestSchema().getField(docValuesField).getType() instanceof PointField);\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"facet\", \"true\", \"facet.range\", docValuesField, \"facet.range.start\", \"-10\", \"facet.range.end\", \"20\", \"facet.range.gap\", \"2\"), \n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='0.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='2.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='4.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='6.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='8.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='10.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='12.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='14.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='16.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='18.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='-10.0'][.='0']\");\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"facet\", \"true\", \"facet.range\", docValuesField, \"facet.range.start\", \"-10\", \"facet.range.end\", \"20\", \"facet.range.gap\", \"2\", \"facet.range.method\", \"dv\"), \n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='0.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='2.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='4.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='6.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='8.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='10.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='12.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='14.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='16.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='18.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='-10.0'][.='0']\");\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"facet\", \"true\", \"facet.range\", docValuesField, \"facet.range.start\", \"0\", \"facet.range.end\", \"20\", \"facet.range.gap\", \"100\"), \n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='0.0'][.='10']\");\n    \n    assertFalse(h.getCore().getLatestSchema().getField(nonDocValuesField).hasDocValues());\n    assertTrue(h.getCore().getLatestSchema().getField(nonDocValuesField).multiValued());\n    assertTrue(h.getCore().getLatestSchema().getField(nonDocValuesField).getType() instanceof PointField);\n    // Range Faceting with method = filter should work\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"facet\", \"true\", \"facet.range\", nonDocValuesField, \"facet.range.start\", \"-10\", \"facet.range.end\", \"20\", \"facet.range.gap\", \"2\", \"facet.range.method\", \"filter\"), \n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='0.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='2.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='4.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='6.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='8.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='10.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='12.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='14.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='16.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='18.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='-10.0'][.='0']\");\n    \n    // this should actually use filter method instead of dv\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"facet\", \"true\", \"facet.range\", nonDocValuesField, \"facet.range.start\", \"-10\", \"facet.range.end\", \"20\", \"facet.range.gap\", \"2\", \"facet.range.method\", \"dv\"), \n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='0.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='2.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='4.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='6.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='8.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='10.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='12.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='14.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='16.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='18.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='-10.0'][.='0']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aaf90fc29510e72665ac7934f34c3d1c25efad64","date":1500354819,"type":4,"author":"Cao Manh Dat","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/schema/TestPointFields#doTestDoublePointFieldMultiValuedRangeFacet(String,String).mjava","sourceNew":null,"sourceOld":"  private void doTestDoublePointFieldMultiValuedRangeFacet(String docValuesField, String nonDocValuesField) throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), docValuesField, String.valueOf(i), docValuesField, String.valueOf(i + 10), \n          nonDocValuesField, String.valueOf(i), nonDocValuesField, String.valueOf(i + 10)));\n    }\n    assertU(commit());\n    assertTrue(h.getCore().getLatestSchema().getField(docValuesField).hasDocValues());\n    assertTrue(h.getCore().getLatestSchema().getField(docValuesField).multiValued());\n    assertTrue(h.getCore().getLatestSchema().getField(docValuesField).getType() instanceof PointField);\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"facet\", \"true\", \"facet.range\", docValuesField, \"facet.range.start\", \"-10\", \"facet.range.end\", \"20\", \"facet.range.gap\", \"2\"), \n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='0.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='2.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='4.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='6.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='8.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='10.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='12.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='14.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='16.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='18.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='-10.0'][.='0']\");\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"facet\", \"true\", \"facet.range\", docValuesField, \"facet.range.start\", \"-10\", \"facet.range.end\", \"20\", \"facet.range.gap\", \"2\", \"facet.range.method\", \"dv\"), \n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='0.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='2.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='4.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='6.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='8.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='10.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='12.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='14.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='16.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='18.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='-10.0'][.='0']\");\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"facet\", \"true\", \"facet.range\", docValuesField, \"facet.range.start\", \"0\", \"facet.range.end\", \"20\", \"facet.range.gap\", \"100\"), \n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='0.0'][.='10']\");\n    \n    assertFalse(h.getCore().getLatestSchema().getField(nonDocValuesField).hasDocValues());\n    assertTrue(h.getCore().getLatestSchema().getField(nonDocValuesField).multiValued());\n    assertTrue(h.getCore().getLatestSchema().getField(nonDocValuesField).getType() instanceof PointField);\n    // Range Faceting with method = filter should work\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"facet\", \"true\", \"facet.range\", nonDocValuesField, \"facet.range.start\", \"-10\", \"facet.range.end\", \"20\", \"facet.range.gap\", \"2\", \"facet.range.method\", \"filter\"), \n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='0.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='2.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='4.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='6.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='8.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='10.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='12.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='14.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='16.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='18.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='-10.0'][.='0']\");\n    \n    // this should actually use filter method instead of dv\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"facet\", \"true\", \"facet.range\", nonDocValuesField, \"facet.range.start\", \"-10\", \"facet.range.end\", \"20\", \"facet.range.gap\", \"2\", \"facet.range.method\", \"dv\"), \n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='0.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='2.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='4.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='6.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='8.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='10.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='12.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='14.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='16.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='18.0'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='-10.0'][.='0']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96":["022a4de90e0479b604264ca9c2e134c996454ab3"],"022a4de90e0479b604264ca9c2e134c996454ab3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","744b111b17d15d490a648eb021bfa240e7f11556"],"897b06b1364bd1f658a8be7591e43f0851458e7f":["b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96"],"aaf90fc29510e72665ac7934f34c3d1c25efad64":["897b06b1364bd1f658a8be7591e43f0851458e7f","17e844d4f9ba6804f10747d7e51e83a9a8868c94"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e844d4f9ba6804f10747d7e51e83a9a8868c94":["897b06b1364bd1f658a8be7591e43f0851458e7f"],"744b111b17d15d490a648eb021bfa240e7f11556":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e844d4f9ba6804f10747d7e51e83a9a8868c94"]},"commit2Childs":{"b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96":["897b06b1364bd1f658a8be7591e43f0851458e7f"],"022a4de90e0479b604264ca9c2e134c996454ab3":["b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96"],"897b06b1364bd1f658a8be7591e43f0851458e7f":["aaf90fc29510e72665ac7934f34c3d1c25efad64","17e844d4f9ba6804f10747d7e51e83a9a8868c94"],"aaf90fc29510e72665ac7934f34c3d1c25efad64":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["022a4de90e0479b604264ca9c2e134c996454ab3","744b111b17d15d490a648eb021bfa240e7f11556"],"744b111b17d15d490a648eb021bfa240e7f11556":["022a4de90e0479b604264ca9c2e134c996454ab3"],"17e844d4f9ba6804f10747d7e51e83a9a8868c94":["aaf90fc29510e72665ac7934f34c3d1c25efad64","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aaf90fc29510e72665ac7934f34c3d1c25efad64","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}