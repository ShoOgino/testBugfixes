{"path":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempPostingsReader#nextTerm(FieldInfo,TempTermState).mjava","commits":[{"id":"0a570bec4aec8585a4eea44849bfb2bc264208c4","date":1371308653,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempPostingsReader#nextTerm(FieldInfo,TempTermState).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void nextTerm(FieldInfo fieldInfo, TempTermState _termState)\n    throws IOException {\n    final IntBlockTermState termState = (IntBlockTermState) _termState;\n    final boolean isFirstTerm = termState.termBlockOrd == 0;\n    final boolean fieldHasPositions = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;\n    final boolean fieldHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n    final boolean fieldHasPayloads = fieldInfo.hasPayloads();\n\n    final DataInput in = termState.bytesReader;\n    if (isFirstTerm) {\n      if (termState.docFreq == 1) {\n        termState.singletonDocID = in.readVInt();\n        termState.docStartFP = 0;\n      } else {\n        termState.singletonDocID = -1;\n        termState.docStartFP = in.readVLong();\n      }\n      if (fieldHasPositions) {\n        termState.posStartFP = in.readVLong();\n        if (termState.totalTermFreq > BLOCK_SIZE) {\n          termState.lastPosBlockOffset = in.readVLong();\n        } else {\n          termState.lastPosBlockOffset = -1;\n        }\n        if ((fieldHasPayloads || fieldHasOffsets) && termState.totalTermFreq >= BLOCK_SIZE) {\n          termState.payStartFP = in.readVLong();\n        } else {\n          termState.payStartFP = -1;\n        }\n      }\n    } else {\n      if (termState.docFreq == 1) {\n        termState.singletonDocID = in.readVInt();\n      } else {\n        termState.singletonDocID = -1;\n        termState.docStartFP += in.readVLong();\n      }\n      if (fieldHasPositions) {\n        termState.posStartFP += in.readVLong();\n        if (termState.totalTermFreq > BLOCK_SIZE) {\n          termState.lastPosBlockOffset = in.readVLong();\n        } else {\n          termState.lastPosBlockOffset = -1;\n        }\n        if ((fieldHasPayloads || fieldHasOffsets) && termState.totalTermFreq >= BLOCK_SIZE) {\n          long delta = in.readVLong();\n          if (termState.payStartFP == -1) {\n            termState.payStartFP = delta;\n          } else {\n            termState.payStartFP += delta;\n          }\n        }\n      }\n    }\n\n    if (termState.docFreq > BLOCK_SIZE) {\n      termState.skipOffset = in.readVLong();\n    } else {\n      termState.skipOffset = -1;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a10f5f1c7f2dcd4a60664dd5c34d803794e023c9","date":1371380031,"type":4,"author":"Han Jiang","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempPostingsReader#nextTerm(FieldInfo,TempTermState).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void nextTerm(FieldInfo fieldInfo, TempTermState _termState)\n    throws IOException {\n    final IntBlockTermState termState = (IntBlockTermState) _termState;\n    final boolean isFirstTerm = termState.termBlockOrd == 0;\n    final boolean fieldHasPositions = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;\n    final boolean fieldHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n    final boolean fieldHasPayloads = fieldInfo.hasPayloads();\n\n    final DataInput in = termState.bytesReader;\n    if (isFirstTerm) {\n      if (termState.docFreq == 1) {\n        termState.singletonDocID = in.readVInt();\n        termState.docStartFP = 0;\n      } else {\n        termState.singletonDocID = -1;\n        termState.docStartFP = in.readVLong();\n      }\n      if (fieldHasPositions) {\n        termState.posStartFP = in.readVLong();\n        if (termState.totalTermFreq > BLOCK_SIZE) {\n          termState.lastPosBlockOffset = in.readVLong();\n        } else {\n          termState.lastPosBlockOffset = -1;\n        }\n        if ((fieldHasPayloads || fieldHasOffsets) && termState.totalTermFreq >= BLOCK_SIZE) {\n          termState.payStartFP = in.readVLong();\n        } else {\n          termState.payStartFP = -1;\n        }\n      }\n    } else {\n      if (termState.docFreq == 1) {\n        termState.singletonDocID = in.readVInt();\n      } else {\n        termState.singletonDocID = -1;\n        termState.docStartFP += in.readVLong();\n      }\n      if (fieldHasPositions) {\n        termState.posStartFP += in.readVLong();\n        if (termState.totalTermFreq > BLOCK_SIZE) {\n          termState.lastPosBlockOffset = in.readVLong();\n        } else {\n          termState.lastPosBlockOffset = -1;\n        }\n        if ((fieldHasPayloads || fieldHasOffsets) && termState.totalTermFreq >= BLOCK_SIZE) {\n          long delta = in.readVLong();\n          if (termState.payStartFP == -1) {\n            termState.payStartFP = delta;\n          } else {\n            termState.payStartFP += delta;\n          }\n        }\n      }\n    }\n\n    if (termState.docFreq > BLOCK_SIZE) {\n      termState.skipOffset = in.readVLong();\n    } else {\n      termState.skipOffset = -1;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a570bec4aec8585a4eea44849bfb2bc264208c4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a10f5f1c7f2dcd4a60664dd5c34d803794e023c9":["0a570bec4aec8585a4eea44849bfb2bc264208c4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0a570bec4aec8585a4eea44849bfb2bc264208c4":["a10f5f1c7f2dcd4a60664dd5c34d803794e023c9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0a570bec4aec8585a4eea44849bfb2bc264208c4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a10f5f1c7f2dcd4a60664dd5c34d803794e023c9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a10f5f1c7f2dcd4a60664dd5c34d803794e023c9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}