{"path":"lucene/src/java/org/apache/lucene/index/SegmentReader#toString().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#toString().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#toString().mjava","sourceNew":"  /** {@inheritDoc} */\n  @Override\n  public String toString() {\n    final StringBuilder buffer = new StringBuilder();\n    if (hasChanges) {\n      buffer.append('*');\n    }\n    buffer.append(si.toString(core.dir, pendingDeleteCount));\n    return buffer.toString();\n  }\n\n","sourceOld":"  /** {@inheritDoc} */\n  @Override\n  public String toString() {\n    final StringBuilder buffer = new StringBuilder();\n    if (hasChanges) {\n      buffer.append('*');\n    }\n    buffer.append(si.toString(core.dir, pendingDeleteCount));\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e7921c9a7729df15853641d07039fd6ca2c57fa","date":1323367101,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    final StringBuilder buffer = new StringBuilder();\n    if (hasChanges) {\n      buffer.append('*');\n    }\n    buffer.append(si.toString(core.dir, pendingDeleteCount));\n    return buffer.toString();\n  }\n\n","sourceOld":"  /** {@inheritDoc} */\n  @Override\n  public String toString() {\n    final StringBuilder buffer = new StringBuilder();\n    if (hasChanges) {\n      buffer.append('*');\n    }\n    buffer.append(si.toString(core.dir, pendingDeleteCount));\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    final StringBuilder buffer = new StringBuilder();\n    if (hasChanges) {\n      buffer.append('*');\n    }\n    buffer.append(si.toString(core.dir, pendingDeleteCount));\n    return buffer.toString();\n  }\n\n","sourceOld":"  /** {@inheritDoc} */\n  @Override\n  public String toString() {\n    final StringBuilder buffer = new StringBuilder();\n    if (hasChanges) {\n      buffer.append('*');\n    }\n    buffer.append(si.toString(core.dir, pendingDeleteCount));\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    final StringBuilder buffer = new StringBuilder();\n    if (hasChanges) {\n      buffer.append('*');\n    }\n    buffer.append(si.toString(core.dir, pendingDeleteCount));\n    return buffer.toString();\n  }\n\n","sourceOld":"  /** {@inheritDoc} */\n  @Override\n  public String toString() {\n    final StringBuilder buffer = new StringBuilder();\n    if (hasChanges) {\n      buffer.append('*');\n    }\n    buffer.append(si.toString(core.dir, pendingDeleteCount));\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ce667c6d3400b22523701c549c0d35e26da8b46","date":1324405053,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    // SegmentInfo.toString takes dir and number of\n    // *pending* deletions; so we reverse compute that here:\n    return si.toString(core.dir, si.docCount - numDocs - si.getDelCount());\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    final StringBuilder buffer = new StringBuilder();\n    if (hasChanges) {\n      buffer.append('*');\n    }\n    buffer.append(si.toString(core.dir, pendingDeleteCount));\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a7c31f59586d5869ce6b3a47f84c8875711d5d2","date":1327941530,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    // SegmentInfo.toString takes dir and number of\n    // *pending* deletions; so we reverse compute that here:\n    return si.toString(si.dir, si.docCount - numDocs - si.getDelCount());\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    // SegmentInfo.toString takes dir and number of\n    // *pending* deletions; so we reverse compute that here:\n    return si.toString(core.dir, si.docCount - numDocs - si.getDelCount());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"296df632fd63421ea20756fa11ad36fbc6f4c8a9","date":1327957998,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    // SegmentInfo.toString takes dir and number of\n    // *pending* deletions; so we reverse compute that here:\n    return si.toString(si.dir, si.docCount - numDocs - si.getDelCount());\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    // SegmentInfo.toString takes dir and number of\n    // *pending* deletions; so we reverse compute that here:\n    return si.toString(core.dir, si.docCount - numDocs - si.getDelCount());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"410e066f093e407222d9681429d209084e783149","date":1327958394,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    // SegmentInfo.toString takes dir and number of\n    // *pending* deletions; so we reverse compute that here:\n    return si.toString(si.dir, si.docCount - numDocs - si.getDelCount());\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    // SegmentInfo.toString takes dir and number of\n    // *pending* deletions; so we reverse compute that here:\n    return si.toString(core.dir, si.docCount - numDocs - si.getDelCount());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    // SegmentInfo.toString takes dir and number of\n    // *pending* deletions; so we reverse compute that here:\n    return si.toString(si.dir, si.docCount - numDocs - si.getDelCount());\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    // SegmentInfo.toString takes dir and number of\n    // *pending* deletions; so we reverse compute that here:\n    return si.toString(si.dir, si.docCount - numDocs - si.getDelCount());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"410e066f093e407222d9681429d209084e783149":["9ce667c6d3400b22523701c549c0d35e26da8b46","296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["9454a6510e2db155fb01faa5c049b06ece95fab9","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8a7c31f59586d5869ce6b3a47f84c8875711d5d2":["9ce667c6d3400b22523701c549c0d35e26da8b46"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["9454a6510e2db155fb01faa5c049b06ece95fab9","9e7921c9a7729df15853641d07039fd6ca2c57fa"],"9ce667c6d3400b22523701c549c0d35e26da8b46":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"296df632fd63421ea20756fa11ad36fbc6f4c8a9":["9ce667c6d3400b22523701c549c0d35e26da8b46","8a7c31f59586d5869ce6b3a47f84c8875711d5d2"],"9e7921c9a7729df15853641d07039fd6ca2c57fa":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"410e066f093e407222d9681429d209084e783149":[],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"8a7c31f59586d5869ce6b3a47f84c8875711d5d2":["296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","9ce667c6d3400b22523701c549c0d35e26da8b46"],"9ce667c6d3400b22523701c549c0d35e26da8b46":["410e066f093e407222d9681429d209084e783149","8a7c31f59586d5869ce6b3a47f84c8875711d5d2","296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"296df632fd63421ea20756fa11ad36fbc6f4c8a9":["410e066f093e407222d9681429d209084e783149","3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9e7921c9a7729df15853641d07039fd6ca2c57fa":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3615ce4a1f785ae1b779244de52c6a7d99227e60","9e7921c9a7729df15853641d07039fd6ca2c57fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["410e066f093e407222d9681429d209084e783149","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}