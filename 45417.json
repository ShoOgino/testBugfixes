{"path":"src/java/org/apache/solr/schema/RandomSortField.RandomValueSource#getValues(IndexReader).mjava","commits":[{"id":"8840160499b9caa7faa044ba4b0d02dc1326557f","date":1182303498,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/RandomSortField.RandomValueSource#getValues(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public DocValues getValues(IndexReader reader) throws IOException {\n      return new DocValues() {\n        @Override\n        public float floatVal(int doc) {\n          return (float)hash(doc+seed);\n        }\n\n        @Override\n        public int intVal(int doc) {\n          return (int)hash(doc+seed);\n        }\n\n        @Override\n        public long longVal(int doc) {\n          return (long)hash(doc+seed);\n        }\n\n        @Override\n        public double doubleVal(int doc) {\n          return (double)hash(doc+seed);\n        }\n\n        @Override\n        public String strVal(int doc) {\n          return Integer.toString(hash(doc+seed));\n        }\n\n        @Override\n        public String toString(int doc) {\n          return description() + '=' + intVal(doc);\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["5eeff6b8391d7b5e70e37193643d76c05a3abf75"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9bdc73b2e66f54270d34ece8e96d569c7b2d11ad","date":1182827765,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/RandomSortField.RandomValueSource#getValues(IndexReader).mjava","pathOld":"src/java/org/apache/solr/schema/RandomSortField.RandomValueSource#getValues(IndexReader).mjava","sourceNew":"    @Override\n    public DocValues getValues(final IndexReader reader) throws IOException {\n      return new DocValues() {\n          private final int seed = getSeed(field, reader);\n          @Override\n          public float floatVal(int doc) {\n            return (float)hash(doc+seed);\n          }\n\n          @Override\n          public int intVal(int doc) {\n            return (int)hash(doc+seed);\n          }\n\n          @Override\n          public long longVal(int doc) {\n            return (long)hash(doc+seed);\n          }\n\n          @Override\n          public double doubleVal(int doc) {\n            return (double)hash(doc+seed);\n          }\n\n          @Override\n          public String strVal(int doc) {\n            return Integer.toString(hash(doc+seed));\n          }\n\n          @Override\n          public String toString(int doc) {\n            return description() + '=' + intVal(doc);\n          }\n        };\n    }\n\n","sourceOld":"    @Override\n    public DocValues getValues(IndexReader reader) throws IOException {\n      return new DocValues() {\n        @Override\n        public float floatVal(int doc) {\n          return (float)hash(doc+seed);\n        }\n\n        @Override\n        public int intVal(int doc) {\n          return (int)hash(doc+seed);\n        }\n\n        @Override\n        public long longVal(int doc) {\n          return (long)hash(doc+seed);\n        }\n\n        @Override\n        public double doubleVal(int doc) {\n          return (double)hash(doc+seed);\n        }\n\n        @Override\n        public String strVal(int doc) {\n          return Integer.toString(hash(doc+seed));\n        }\n\n        @Override\n        public String toString(int doc) {\n          return description() + '=' + intVal(doc);\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":["5eeff6b8391d7b5e70e37193643d76c05a3abf75"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7e00023dc6828d09dbfb05d4dfa4d488cc81ee42","date":1253196493,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/RandomSortField.RandomValueSource#getValues(Map,IndexReader).mjava","pathOld":"src/java/org/apache/solr/schema/RandomSortField.RandomValueSource#getValues(IndexReader).mjava","sourceNew":"    @Override\n    public DocValues getValues(Map context, final IndexReader reader) throws IOException {\n      return new DocValues() {\n          private final int seed = getSeed(field, reader);\n          @Override\n          public float floatVal(int doc) {\n            return (float)hash(doc+seed);\n          }\n\n          @Override\n          public int intVal(int doc) {\n            return (int)hash(doc+seed);\n          }\n\n          @Override\n          public long longVal(int doc) {\n            return (long)hash(doc+seed);\n          }\n\n          @Override\n          public double doubleVal(int doc) {\n            return (double)hash(doc+seed);\n          }\n\n          @Override\n          public String strVal(int doc) {\n            return Integer.toString(hash(doc+seed));\n          }\n\n          @Override\n          public String toString(int doc) {\n            return description() + '=' + intVal(doc);\n          }\n        };\n    }\n\n","sourceOld":"    @Override\n    public DocValues getValues(final IndexReader reader) throws IOException {\n      return new DocValues() {\n          private final int seed = getSeed(field, reader);\n          @Override\n          public float floatVal(int doc) {\n            return (float)hash(doc+seed);\n          }\n\n          @Override\n          public int intVal(int doc) {\n            return (int)hash(doc+seed);\n          }\n\n          @Override\n          public long longVal(int doc) {\n            return (long)hash(doc+seed);\n          }\n\n          @Override\n          public double doubleVal(int doc) {\n            return (double)hash(doc+seed);\n          }\n\n          @Override\n          public String strVal(int doc) {\n            return Integer.toString(hash(doc+seed));\n          }\n\n          @Override\n          public String toString(int doc) {\n            return description() + '=' + intVal(doc);\n          }\n        };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"7e00023dc6828d09dbfb05d4dfa4d488cc81ee42":["9bdc73b2e66f54270d34ece8e96d569c7b2d11ad"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"9bdc73b2e66f54270d34ece8e96d569c7b2d11ad":["8840160499b9caa7faa044ba4b0d02dc1326557f"],"8840160499b9caa7faa044ba4b0d02dc1326557f":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7e00023dc6828d09dbfb05d4dfa4d488cc81ee42":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["8840160499b9caa7faa044ba4b0d02dc1326557f"],"9bdc73b2e66f54270d34ece8e96d569c7b2d11ad":["7e00023dc6828d09dbfb05d4dfa4d488cc81ee42"],"8840160499b9caa7faa044ba4b0d02dc1326557f":["9bdc73b2e66f54270d34ece8e96d569c7b2d11ad"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7e00023dc6828d09dbfb05d4dfa4d488cc81ee42","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}