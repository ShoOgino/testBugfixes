{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#getExternCollectionFresh(ZkStateReader,String).mjava","commits":[{"id":"0622fbd990643ae4cacb693db6a0c82cf8916ae2","date":1397637446,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#getExternCollectionFresh(ZkStateReader,String).mjava","pathOld":"/dev/null","sourceNew":"  public static DocCollection getExternCollectionFresh(ZkStateReader zkStateReader, String coll) {\n    String collectionPath = getCollectionPath(coll);\n    if(zkStateReader.ephemeralCollectionData !=null ){\n      ClusterState cs = (ClusterState) zkStateReader.ephemeralCollectionData.get(collectionPath);\n      if(cs !=null) {\n        return  cs.getCommonCollection(coll);\n      }\n    }\n    try {\n      if (!zkStateReader.getZkClient().exists(collectionPath, true)) return null;\n      Stat stat = new Stat();\n      byte[] data = zkStateReader.getZkClient().getData(collectionPath, null, stat, true);\n      ClusterState state = ClusterState.load(stat.getVersion(), data, Collections.<String>emptySet(), zkStateReader);\n      return state.getCommonCollection(coll);\n    } catch (KeeperException.NoNodeException e) {\n      log.warn(\"No node available : \" + collectionPath, e);\n      return null;\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Could not load collection from ZK:\" + coll, e);\n    } catch (InterruptedException e) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Could not load collection from ZK:\" + coll, e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5a233896b7f16ac9b4ed601ef8207d98f1f0500","date":1398857046,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#getExternCollectionFresh(ZkStateReader,String).mjava","sourceNew":null,"sourceOld":"  public static DocCollection getExternCollectionFresh(ZkStateReader zkStateReader, String coll) {\n    String collectionPath = getCollectionPath(coll);\n    if(zkStateReader.ephemeralCollectionData !=null ){\n      ClusterState cs = (ClusterState) zkStateReader.ephemeralCollectionData.get(collectionPath);\n      if(cs !=null) {\n        return  cs.getCommonCollection(coll);\n      }\n    }\n    try {\n      if (!zkStateReader.getZkClient().exists(collectionPath, true)) return null;\n      Stat stat = new Stat();\n      byte[] data = zkStateReader.getZkClient().getData(collectionPath, null, stat, true);\n      ClusterState state = ClusterState.load(stat.getVersion(), data, Collections.<String>emptySet(), zkStateReader);\n      return state.getCommonCollection(coll);\n    } catch (KeeperException.NoNodeException e) {\n      log.warn(\"No node available : \" + collectionPath, e);\n      return null;\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Could not load collection from ZK:\" + coll, e);\n    } catch (InterruptedException e) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Could not load collection from ZK:\" + coll, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a5a233896b7f16ac9b4ed601ef8207d98f1f0500":["0622fbd990643ae4cacb693db6a0c82cf8916ae2"],"0622fbd990643ae4cacb693db6a0c82cf8916ae2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a5a233896b7f16ac9b4ed601ef8207d98f1f0500"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0622fbd990643ae4cacb693db6a0c82cf8916ae2"],"a5a233896b7f16ac9b4ed601ef8207d98f1f0500":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0622fbd990643ae4cacb693db6a0c82cf8916ae2":["a5a233896b7f16ac9b4ed601ef8207d98f1f0500"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}