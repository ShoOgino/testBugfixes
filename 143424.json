{"path":"lucene/misc/src/test/org/apache/lucene/document/TestInetAddressPoint#testBasicsV6().mjava","commits":[{"id":"4a52b01a73cacbd2d360240e72d64c0ba353618f","date":1489389749,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/document/TestInetAddressPoint#testBasicsV6().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/TestInetAddressPoint#testBasicsV6().mjava","sourceNew":"  /** Add a single address and search for it */\n  public void testBasicsV6() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // add a doc with an address\n    Document document = new Document();\n    InetAddress address = InetAddress.getByName(\"fec0::f66d\");\n    document.add(new InetAddressPoint(\"field\", address));\n    writer.addDocument(document);\n    \n    // search and verify we found our doc\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    assertEquals(1, searcher.count(InetAddressPoint.newExactQuery(\"field\", address)));\n    assertEquals(1, searcher.count(InetAddressPoint.newPrefixQuery(\"field\", address, 64)));\n    assertEquals(1, searcher.count(InetAddressPoint.newRangeQuery(\"field\", InetAddress.getByName(\"fec0::f66c\"), InetAddress.getByName(\"fec0::f66e\"))));\n\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  /** Add a single address and search for it */\n  public void testBasicsV6() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // add a doc with an address\n    Document document = new Document();\n    InetAddress address = InetAddress.getByName(\"fec0::f66d\");\n    document.add(new InetAddressPoint(\"field\", address));\n    writer.addDocument(document);\n    \n    // search and verify we found our doc\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    assertEquals(1, searcher.count(InetAddressPoint.newExactQuery(\"field\", address)));\n    assertEquals(1, searcher.count(InetAddressPoint.newPrefixQuery(\"field\", address, 64)));\n    assertEquals(1, searcher.count(InetAddressPoint.newRangeQuery(\"field\", InetAddress.getByName(\"fec0::f66c\"), InetAddress.getByName(\"fec0::f66e\"))));\n\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4a52b01a73cacbd2d360240e72d64c0ba353618f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4a52b01a73cacbd2d360240e72d64c0ba353618f"]},"commit2Childs":{"4a52b01a73cacbd2d360240e72d64c0ba353618f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4a52b01a73cacbd2d360240e72d64c0ba353618f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}