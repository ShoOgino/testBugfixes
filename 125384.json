{"path":"lucene/core/src/java/org/apache/lucene/index/BaseCompositeReader#getTermVectors(int).mjava","commits":[{"id":"fdea49117913baff3ee1b0bb8d2c7d148e210e72","date":1331056250,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BaseCompositeReader#getTermVectors(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/BaseMultiReader#getTermVectors(int).mjava","sourceNew":"  @Override\n  public final Fields getTermVectors(int docID) throws IOException {\n    ensureOpen();\n    final int i = readerIndex(docID);        // find subreader num\n    return subReaders[i].getTermVectors(docID - starts[i]); // dispatch to subreader\n  }\n\n","sourceOld":"  @Override\n  public final Fields getTermVectors(int docID) throws IOException {\n    ensureOpen();\n    final int i = readerIndex(docID);        // find segment num\n    return subReaders[i].getTermVectors(docID - starts[i]); // dispatch to segment\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BaseCompositeReader#getTermVectors(int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public final Fields getTermVectors(int docID) throws IOException {\n    ensureOpen();\n    final int i = readerIndex(docID);        // find subreader num\n    return subReaders[i].getTermVectors(docID - starts[i]); // dispatch to subreader\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d08eba3d52b63561ebf936481ce73e6b6a14aa03","date":1333879759,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BaseCompositeReader#getTermVectors(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/BaseCompositeReader#getTermVectors(int).mjava","sourceNew":"  @Override\n  public final InvertedFields getTermVectors(int docID) throws IOException {\n    ensureOpen();\n    final int i = readerIndex(docID);        // find subreader num\n    return subReaders[i].getTermVectors(docID - starts[i]); // dispatch to subreader\n  }\n\n","sourceOld":"  @Override\n  public final Fields getTermVectors(int docID) throws IOException {\n    ensureOpen();\n    final int i = readerIndex(docID);        // find subreader num\n    return subReaders[i].getTermVectors(docID - starts[i]); // dispatch to subreader\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf","date":1333892281,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BaseCompositeReader#getTermVectors(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/BaseCompositeReader#getTermVectors(int).mjava","sourceNew":"  @Override\n  public final Fields getTermVectors(int docID) throws IOException {\n    ensureOpen();\n    final int i = readerIndex(docID);        // find subreader num\n    return subReaders[i].getTermVectors(docID - starts[i]); // dispatch to subreader\n  }\n\n","sourceOld":"  @Override\n  public final InvertedFields getTermVectors(int docID) throws IOException {\n    ensureOpen();\n    final int i = readerIndex(docID);        // find subreader num\n    return subReaders[i].getTermVectors(docID - starts[i]); // dispatch to subreader\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fdea49117913baff3ee1b0bb8d2c7d148e210e72":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fdea49117913baff3ee1b0bb8d2c7d148e210e72"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf":["d08eba3d52b63561ebf936481ce73e6b6a14aa03"],"d08eba3d52b63561ebf936481ce73e6b6a14aa03":["fdea49117913baff3ee1b0bb8d2c7d148e210e72"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf"]},"commit2Childs":{"fdea49117913baff3ee1b0bb8d2c7d148e210e72":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","d08eba3d52b63561ebf936481ce73e6b6a14aa03"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fdea49117913baff3ee1b0bb8d2c7d148e210e72","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d08eba3d52b63561ebf936481ce73e6b6a14aa03":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}