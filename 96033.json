{"path":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compare1(Map,Map,int,Map[String,Integer]).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compare1(Map,Map,int,Map[String,Integer]).mjava","pathOld":"solr/src/test-framework/org/apache/solr/BaseDistributedSearchTestCase#compare1(Map,Map,int,Map[String,Integer]).mjava","sourceNew":"  public static String compare1(Map a, Map b, int flags, Map<String, Integer> handle) {\n    String cmp;\n\n    for (Object keya : a.keySet()) {\n      Object vala = a.get(keya);\n      int flagsa = flags(handle, keya);\n      if ((flagsa & SKIP) != 0) continue;\n      if (!b.containsKey(keya)) {\n        return \"[\" + keya + \"]==null\";\n      }\n      if ((flagsa & SKIPVAL) != 0) continue;\n      Object valb = b.get(keya);\n      cmp = compare(vala, valb, flagsa, handle);\n      if (cmp != null) return \"[\" + keya + \"]\" + cmp;\n    }\n    return null;\n  }\n\n","sourceOld":"  public static String compare1(Map a, Map b, int flags, Map<String, Integer> handle) {\n    String cmp;\n\n    for (Object keya : a.keySet()) {\n      Object vala = a.get(keya);\n      int flagsa = flags(handle, keya);\n      if ((flagsa & SKIP) != 0) continue;\n      if (!b.containsKey(keya)) {\n        return \"[\" + keya + \"]==null\";\n      }\n      if ((flagsa & SKIPVAL) != 0) continue;\n      Object valb = b.get(keya);\n      cmp = compare(vala, valb, flagsa, handle);\n      if (cmp != null) return \"[\" + keya + \"]\" + cmp;\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compare1(Map,Map,int,Map[String,Integer]).mjava","pathOld":"solr/src/test-framework/org/apache/solr/BaseDistributedSearchTestCase#compare1(Map,Map,int,Map[String,Integer]).mjava","sourceNew":"  public static String compare1(Map a, Map b, int flags, Map<String, Integer> handle) {\n    String cmp;\n\n    for (Object keya : a.keySet()) {\n      Object vala = a.get(keya);\n      int flagsa = flags(handle, keya);\n      if ((flagsa & SKIP) != 0) continue;\n      if (!b.containsKey(keya)) {\n        return err(\"[\" + keya + \"]==null\");\n      }\n      if ((flagsa & SKIPVAL) != 0) continue;\n      Object valb = b.get(keya);\n      cmp = compare(vala, valb, flagsa, handle);\n      if (cmp != null) return \"[\" + keya + \"]\" + cmp;\n    }\n    return null;\n  }\n\n","sourceOld":"  public static String compare1(Map a, Map b, int flags, Map<String, Integer> handle) {\n    String cmp;\n\n    for (Object keya : a.keySet()) {\n      Object vala = a.get(keya);\n      int flagsa = flags(handle, keya);\n      if ((flagsa & SKIP) != 0) continue;\n      if (!b.containsKey(keya)) {\n        return err(\"[\" + keya + \"]==null\");\n      }\n      if ((flagsa & SKIPVAL) != 0) continue;\n      Object valb = b.get(keya);\n      cmp = compare(vala, valb, flagsa, handle);\n      if (cmp != null) return \"[\" + keya + \"]\" + cmp;\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compare1(Map,Map,int,Map[String,Integer]).mjava","pathOld":"solr/src/test-framework/org/apache/solr/BaseDistributedSearchTestCase#compare1(Map,Map,int,Map[String,Integer]).mjava","sourceNew":"  public static String compare1(Map a, Map b, int flags, Map<String, Integer> handle) {\n    String cmp;\n\n    for (Object keya : a.keySet()) {\n      Object vala = a.get(keya);\n      int flagsa = flags(handle, keya);\n      if ((flagsa & SKIP) != 0) continue;\n      if (!b.containsKey(keya)) {\n        return \"[\" + keya + \"]==null\";\n      }\n      if ((flagsa & SKIPVAL) != 0) continue;\n      Object valb = b.get(keya);\n      cmp = compare(vala, valb, flagsa, handle);\n      if (cmp != null) return \"[\" + keya + \"]\" + cmp;\n    }\n    return null;\n  }\n\n","sourceOld":"  public static String compare1(Map a, Map b, int flags, Map<String, Integer> handle) {\n    String cmp;\n\n    for (Object keya : a.keySet()) {\n      Object vala = a.get(keya);\n      int flagsa = flags(handle, keya);\n      if ((flagsa & SKIP) != 0) continue;\n      if (!b.containsKey(keya)) {\n        return err(\"[\" + keya + \"]==null\");\n      }\n      if ((flagsa & SKIPVAL) != 0) continue;\n      Object valb = b.get(keya);\n      cmp = compare(vala, valb, flagsa, handle);\n      if (cmp != null) return \"[\" + keya + \"]\" + cmp;\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6809a6d7924df2c864d6a5863944aff9dfeb372c","date":1591826750,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compare1(Map,Map,int,Map[String,Integer]).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compare1(Map,Map,int,Map[String,Integer]).mjava","sourceNew":"  public static String compare1(@SuppressWarnings({\"rawtypes\"})Map a,\n                                @SuppressWarnings({\"rawtypes\"})Map b,\n                                int flags, Map<String, Integer> handle) {\n    String cmp;\n\n    for (Object keya : a.keySet()) {\n      Object vala = a.get(keya);\n      int flagsa = flags(handle, keya);\n      if ((flagsa & SKIP) != 0) continue;\n      if (!b.containsKey(keya)) {\n        return \"[\" + keya + \"]==null\";\n      }\n      if ((flagsa & SKIPVAL) != 0) continue;\n      Object valb = b.get(keya);\n      cmp = compare(vala, valb, flagsa, handle);\n      if (cmp != null) return \"[\" + keya + \"]\" + cmp;\n    }\n    return null;\n  }\n\n","sourceOld":"  public static String compare1(Map a, Map b, int flags, Map<String, Integer> handle) {\n    String cmp;\n\n    for (Object keya : a.keySet()) {\n      Object vala = a.get(keya);\n      int flagsa = flags(handle, keya);\n      if ((flagsa & SKIP) != 0) continue;\n      if (!b.containsKey(keya)) {\n        return \"[\" + keya + \"]==null\";\n      }\n      if ((flagsa & SKIPVAL) != 0) continue;\n      Object valb = b.get(keya);\n      cmp = compare(vala, valb, flagsa, handle);\n      if (cmp != null) return \"[\" + keya + \"]\" + cmp;\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6809a6d7924df2c864d6a5863944aff9dfeb372c":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6809a6d7924df2c864d6a5863944aff9dfeb372c"]},"commit2Childs":{"6809a6d7924df2c864d6a5863944aff9dfeb372c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["6809a6d7924df2c864d6a5863944aff9dfeb372c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}