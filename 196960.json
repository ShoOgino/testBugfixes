{"path":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#buildCoreDescriptor(SolrParams,CoreContainer).mjava","commits":[{"id":"6e764e9a107f93be9fa3c922bc6a197b3eec387e","date":1373560501,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#buildCoreDescriptor(SolrParams,CoreContainer).mjava","pathOld":"/dev/null","sourceNew":"  protected static CoreDescriptor buildCoreDescriptor(SolrParams params, CoreContainer container) {\n\n    String name = checkNotEmpty(params.get(CoreAdminParams.NAME),\n        \"Missing parameter [\" + CoreAdminParams.NAME + \"]\");\n    String instancedir = params.get(CoreAdminParams.INSTANCE_DIR);\n    if (StringUtils.isEmpty(instancedir))\n      instancedir = container.getSolrHome() + File.separator + name;\n\n    Properties coreProps = new Properties();\n    for (String param : paramToProp.keySet()) {\n      String value = params.get(param, null);\n      if (StringUtils.isNotEmpty(value)) {\n        coreProps.setProperty(paramToProp.get(param), value);\n      }\n    }\n    Iterator<String> paramsIt = params.getParameterNamesIterator();\n    while (paramsIt.hasNext()) {\n      String param = paramsIt.next();\n      if (!param.startsWith(CoreAdminParams.PROPERTY_PREFIX))\n        continue;\n      String propName = param.substring(CoreAdminParams.PROPERTY_PREFIX.length());\n      String propValue = params.get(param);\n      coreProps.setProperty(propName, propValue);\n    }\n\n    return new CoreDescriptor(container, name, instancedir, coreProps);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["9904879776b9279ff8c75a92c58ebbb97f231a2b","5a82d855abc18f7ee3e1ec359d8f256c8c86977a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#buildCoreDescriptor(SolrParams,CoreContainer).mjava","pathOld":"/dev/null","sourceNew":"  protected static CoreDescriptor buildCoreDescriptor(SolrParams params, CoreContainer container) {\n\n    String name = checkNotEmpty(params.get(CoreAdminParams.NAME),\n        \"Missing parameter [\" + CoreAdminParams.NAME + \"]\");\n    String instancedir = params.get(CoreAdminParams.INSTANCE_DIR);\n    if (StringUtils.isEmpty(instancedir))\n      instancedir = container.getSolrHome() + File.separator + name;\n\n    Properties coreProps = new Properties();\n    for (String param : paramToProp.keySet()) {\n      String value = params.get(param, null);\n      if (StringUtils.isNotEmpty(value)) {\n        coreProps.setProperty(paramToProp.get(param), value);\n      }\n    }\n    Iterator<String> paramsIt = params.getParameterNamesIterator();\n    while (paramsIt.hasNext()) {\n      String param = paramsIt.next();\n      if (!param.startsWith(CoreAdminParams.PROPERTY_PREFIX))\n        continue;\n      String propName = param.substring(CoreAdminParams.PROPERTY_PREFIX.length());\n      String propValue = params.get(param);\n      coreProps.setProperty(propName, propValue);\n    }\n\n    return new CoreDescriptor(container, name, instancedir, coreProps);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16e579cc1c2e45a120542d40a445a8a912120bc9","date":1376654466,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#buildCoreDescriptor(SolrParams,CoreContainer).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#buildCoreDescriptor(SolrParams,CoreContainer).mjava","sourceNew":"  protected static CoreDescriptor buildCoreDescriptor(SolrParams params, CoreContainer container) {\n\n    String name = checkNotEmpty(params.get(CoreAdminParams.NAME),\n        \"Missing parameter [\" + CoreAdminParams.NAME + \"]\");\n    String instancedir = params.get(CoreAdminParams.INSTANCE_DIR);\n    if (StringUtils.isEmpty(instancedir)) {\n      instancedir = name; // Already relative to solrHome, we haven't been given an absolute path.\n    }\n\n    Properties coreProps = new Properties();\n    for (String param : paramToProp.keySet()) {\n      String value = params.get(param, null);\n      if (StringUtils.isNotEmpty(value)) {\n        coreProps.setProperty(paramToProp.get(param), value);\n      }\n    }\n    Iterator<String> paramsIt = params.getParameterNamesIterator();\n    while (paramsIt.hasNext()) {\n      String param = paramsIt.next();\n      if (!param.startsWith(CoreAdminParams.PROPERTY_PREFIX))\n        continue;\n      String propName = param.substring(CoreAdminParams.PROPERTY_PREFIX.length());\n      String propValue = params.get(param);\n      coreProps.setProperty(propName, propValue);\n    }\n\n    return new CoreDescriptor(container, name, instancedir, coreProps);\n  }\n\n","sourceOld":"  protected static CoreDescriptor buildCoreDescriptor(SolrParams params, CoreContainer container) {\n\n    String name = checkNotEmpty(params.get(CoreAdminParams.NAME),\n        \"Missing parameter [\" + CoreAdminParams.NAME + \"]\");\n    String instancedir = params.get(CoreAdminParams.INSTANCE_DIR);\n    if (StringUtils.isEmpty(instancedir))\n      instancedir = container.getSolrHome() + File.separator + name;\n\n    Properties coreProps = new Properties();\n    for (String param : paramToProp.keySet()) {\n      String value = params.get(param, null);\n      if (StringUtils.isNotEmpty(value)) {\n        coreProps.setProperty(paramToProp.get(param), value);\n      }\n    }\n    Iterator<String> paramsIt = params.getParameterNamesIterator();\n    while (paramsIt.hasNext()) {\n      String param = paramsIt.next();\n      if (!param.startsWith(CoreAdminParams.PROPERTY_PREFIX))\n        continue;\n      String propName = param.substring(CoreAdminParams.PROPERTY_PREFIX.length());\n      String propValue = params.get(param);\n      coreProps.setProperty(propName, propValue);\n    }\n\n    return new CoreDescriptor(container, name, instancedir, coreProps);\n  }\n\n","bugFix":null,"bugIntro":["d642fe6577db47788146c0fc4fe14240ab1718b7","9904879776b9279ff8c75a92c58ebbb97f231a2b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2ceca04c06658aeb20e0a319ade784ad9a0576dd","date":1376662287,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#buildCoreDescriptor(SolrParams,CoreContainer).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#buildCoreDescriptor(SolrParams,CoreContainer).mjava","sourceNew":"  protected static CoreDescriptor buildCoreDescriptor(SolrParams params, CoreContainer container) {\n\n    String name = checkNotEmpty(params.get(CoreAdminParams.NAME),\n        \"Missing parameter [\" + CoreAdminParams.NAME + \"]\");\n    String instancedir = params.get(CoreAdminParams.INSTANCE_DIR);\n    if (StringUtils.isEmpty(instancedir)) {\n      instancedir = name; // Already relative to solrHome, we haven't been given an absolute path.\n    }\n\n    Properties coreProps = new Properties();\n    for (String param : paramToProp.keySet()) {\n      String value = params.get(param, null);\n      if (StringUtils.isNotEmpty(value)) {\n        coreProps.setProperty(paramToProp.get(param), value);\n      }\n    }\n    Iterator<String> paramsIt = params.getParameterNamesIterator();\n    while (paramsIt.hasNext()) {\n      String param = paramsIt.next();\n      if (!param.startsWith(CoreAdminParams.PROPERTY_PREFIX))\n        continue;\n      String propName = param.substring(CoreAdminParams.PROPERTY_PREFIX.length());\n      String propValue = params.get(param);\n      coreProps.setProperty(propName, propValue);\n    }\n\n    return new CoreDescriptor(container, name, instancedir, coreProps);\n  }\n\n","sourceOld":"  protected static CoreDescriptor buildCoreDescriptor(SolrParams params, CoreContainer container) {\n\n    String name = checkNotEmpty(params.get(CoreAdminParams.NAME),\n        \"Missing parameter [\" + CoreAdminParams.NAME + \"]\");\n    String instancedir = params.get(CoreAdminParams.INSTANCE_DIR);\n    if (StringUtils.isEmpty(instancedir))\n      instancedir = container.getSolrHome() + File.separator + name;\n\n    Properties coreProps = new Properties();\n    for (String param : paramToProp.keySet()) {\n      String value = params.get(param, null);\n      if (StringUtils.isNotEmpty(value)) {\n        coreProps.setProperty(paramToProp.get(param), value);\n      }\n    }\n    Iterator<String> paramsIt = params.getParameterNamesIterator();\n    while (paramsIt.hasNext()) {\n      String param = paramsIt.next();\n      if (!param.startsWith(CoreAdminParams.PROPERTY_PREFIX))\n        continue;\n      String propName = param.substring(CoreAdminParams.PROPERTY_PREFIX.length());\n      String propValue = params.get(param);\n      coreProps.setProperty(propName, propValue);\n    }\n\n    return new CoreDescriptor(container, name, instancedir, coreProps);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d642fe6577db47788146c0fc4fe14240ab1718b7","date":1376680349,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#buildCoreDescriptor(SolrParams,CoreContainer).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#buildCoreDescriptor(SolrParams,CoreContainer).mjava","sourceNew":"  protected static CoreDescriptor buildCoreDescriptor(SolrParams params, CoreContainer container) {\n\n    String name = checkNotEmpty(params.get(CoreAdminParams.NAME),\n        \"Missing parameter [\" + CoreAdminParams.NAME + \"]\");\n    String instancedir = params.get(CoreAdminParams.INSTANCE_DIR);\n    if (StringUtils.isEmpty(instancedir)) {\n      instancedir = name; // will be resolved later against solr.home\n      //instancedir = container.getSolrHome() + \"/\" + name;\n    }\n\n    Properties coreProps = new Properties();\n    for (String param : paramToProp.keySet()) {\n      String value = params.get(param, null);\n      if (StringUtils.isNotEmpty(value)) {\n        coreProps.setProperty(paramToProp.get(param), value);\n      }\n    }\n    Iterator<String> paramsIt = params.getParameterNamesIterator();\n    while (paramsIt.hasNext()) {\n      String param = paramsIt.next();\n      if (!param.startsWith(CoreAdminParams.PROPERTY_PREFIX))\n        continue;\n      String propName = param.substring(CoreAdminParams.PROPERTY_PREFIX.length());\n      String propValue = params.get(param);\n      coreProps.setProperty(propName, propValue);\n    }\n\n    return new CoreDescriptor(container, name, instancedir, coreProps);\n  }\n\n","sourceOld":"  protected static CoreDescriptor buildCoreDescriptor(SolrParams params, CoreContainer container) {\n\n    String name = checkNotEmpty(params.get(CoreAdminParams.NAME),\n        \"Missing parameter [\" + CoreAdminParams.NAME + \"]\");\n    String instancedir = params.get(CoreAdminParams.INSTANCE_DIR);\n    if (StringUtils.isEmpty(instancedir)) {\n      instancedir = name; // Already relative to solrHome, we haven't been given an absolute path.\n    }\n\n    Properties coreProps = new Properties();\n    for (String param : paramToProp.keySet()) {\n      String value = params.get(param, null);\n      if (StringUtils.isNotEmpty(value)) {\n        coreProps.setProperty(paramToProp.get(param), value);\n      }\n    }\n    Iterator<String> paramsIt = params.getParameterNamesIterator();\n    while (paramsIt.hasNext()) {\n      String param = paramsIt.next();\n      if (!param.startsWith(CoreAdminParams.PROPERTY_PREFIX))\n        continue;\n      String propName = param.substring(CoreAdminParams.PROPERTY_PREFIX.length());\n      String propValue = params.get(param);\n      coreProps.setProperty(propName, propValue);\n    }\n\n    return new CoreDescriptor(container, name, instancedir, coreProps);\n  }\n\n","bugFix":["16e579cc1c2e45a120542d40a445a8a912120bc9"],"bugIntro":["9904879776b9279ff8c75a92c58ebbb97f231a2b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"31d4861802ca404d78ca1d15f4550eec415b9199","date":1376947894,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#buildCoreDescriptor(SolrParams,CoreContainer).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#buildCoreDescriptor(SolrParams,CoreContainer).mjava","sourceNew":"  protected static CoreDescriptor buildCoreDescriptor(SolrParams params, CoreContainer container) {\n\n    String name = checkNotEmpty(params.get(CoreAdminParams.NAME),\n        \"Missing parameter [\" + CoreAdminParams.NAME + \"]\");\n    String instancedir = params.get(CoreAdminParams.INSTANCE_DIR);\n    if (StringUtils.isEmpty(instancedir)) {\n      instancedir = name; // will be resolved later against solr.home\n      //instancedir = container.getSolrHome() + \"/\" + name;\n    }\n\n    Properties coreProps = new Properties();\n    for (String param : paramToProp.keySet()) {\n      String value = params.get(param, null);\n      if (StringUtils.isNotEmpty(value)) {\n        coreProps.setProperty(paramToProp.get(param), value);\n      }\n    }\n    Iterator<String> paramsIt = params.getParameterNamesIterator();\n    while (paramsIt.hasNext()) {\n      String param = paramsIt.next();\n      if (!param.startsWith(CoreAdminParams.PROPERTY_PREFIX))\n        continue;\n      String propName = param.substring(CoreAdminParams.PROPERTY_PREFIX.length());\n      String propValue = params.get(param);\n      coreProps.setProperty(propName, propValue);\n    }\n\n    return new CoreDescriptor(container, name, instancedir, coreProps);\n  }\n\n","sourceOld":"  protected static CoreDescriptor buildCoreDescriptor(SolrParams params, CoreContainer container) {\n\n    String name = checkNotEmpty(params.get(CoreAdminParams.NAME),\n        \"Missing parameter [\" + CoreAdminParams.NAME + \"]\");\n    String instancedir = params.get(CoreAdminParams.INSTANCE_DIR);\n    if (StringUtils.isEmpty(instancedir)) {\n      instancedir = name; // Already relative to solrHome, we haven't been given an absolute path.\n    }\n\n    Properties coreProps = new Properties();\n    for (String param : paramToProp.keySet()) {\n      String value = params.get(param, null);\n      if (StringUtils.isNotEmpty(value)) {\n        coreProps.setProperty(paramToProp.get(param), value);\n      }\n    }\n    Iterator<String> paramsIt = params.getParameterNamesIterator();\n    while (paramsIt.hasNext()) {\n      String param = paramsIt.next();\n      if (!param.startsWith(CoreAdminParams.PROPERTY_PREFIX))\n        continue;\n      String propName = param.substring(CoreAdminParams.PROPERTY_PREFIX.length());\n      String propValue = params.get(param);\n      coreProps.setProperty(propName, propValue);\n    }\n\n    return new CoreDescriptor(container, name, instancedir, coreProps);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#buildCoreDescriptor(SolrParams,CoreContainer).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#buildCoreDescriptor(SolrParams,CoreContainer).mjava","sourceNew":"  protected static CoreDescriptor buildCoreDescriptor(SolrParams params, CoreContainer container) {\n\n    String name = checkNotEmpty(params.get(CoreAdminParams.NAME),\n        \"Missing parameter [\" + CoreAdminParams.NAME + \"]\");\n    String instancedir = params.get(CoreAdminParams.INSTANCE_DIR);\n    if (StringUtils.isEmpty(instancedir)) {\n      instancedir = name; // will be resolved later against solr.home\n      //instancedir = container.getSolrHome() + \"/\" + name;\n    }\n\n    Properties coreProps = new Properties();\n    for (String param : paramToProp.keySet()) {\n      String value = params.get(param, null);\n      if (StringUtils.isNotEmpty(value)) {\n        coreProps.setProperty(paramToProp.get(param), value);\n      }\n    }\n    Iterator<String> paramsIt = params.getParameterNamesIterator();\n    while (paramsIt.hasNext()) {\n      String param = paramsIt.next();\n      if (!param.startsWith(CoreAdminParams.PROPERTY_PREFIX))\n        continue;\n      String propName = param.substring(CoreAdminParams.PROPERTY_PREFIX.length());\n      String propValue = params.get(param);\n      coreProps.setProperty(propName, propValue);\n    }\n\n    return new CoreDescriptor(container, name, instancedir, coreProps);\n  }\n\n","sourceOld":"  protected static CoreDescriptor buildCoreDescriptor(SolrParams params, CoreContainer container) {\n\n    String name = checkNotEmpty(params.get(CoreAdminParams.NAME),\n        \"Missing parameter [\" + CoreAdminParams.NAME + \"]\");\n    String instancedir = params.get(CoreAdminParams.INSTANCE_DIR);\n    if (StringUtils.isEmpty(instancedir))\n      instancedir = container.getSolrHome() + File.separator + name;\n\n    Properties coreProps = new Properties();\n    for (String param : paramToProp.keySet()) {\n      String value = params.get(param, null);\n      if (StringUtils.isNotEmpty(value)) {\n        coreProps.setProperty(paramToProp.get(param), value);\n      }\n    }\n    Iterator<String> paramsIt = params.getParameterNamesIterator();\n    while (paramsIt.hasNext()) {\n      String param = paramsIt.next();\n      if (!param.startsWith(CoreAdminParams.PROPERTY_PREFIX))\n        continue;\n      String propName = param.substring(CoreAdminParams.PROPERTY_PREFIX.length());\n      String propValue = params.get(param);\n      coreProps.setProperty(propName, propValue);\n    }\n\n    return new CoreDescriptor(container, name, instancedir, coreProps);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a82d855abc18f7ee3e1ec359d8f256c8c86977a","date":1381347960,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#buildCoreDescriptor(SolrParams,CoreContainer).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#buildCoreDescriptor(SolrParams,CoreContainer).mjava","sourceNew":"  protected static CoreDescriptor buildCoreDescriptor(SolrParams params, CoreContainer container) {\n\n    String name = checkNotEmpty(params.get(CoreAdminParams.NAME),\n        \"Missing parameter [\" + CoreAdminParams.NAME + \"]\");\n    String instancedir = params.get(CoreAdminParams.INSTANCE_DIR);\n    if (StringUtils.isEmpty(instancedir)) {\n      instancedir = name; // will be resolved later against solr.home\n      //instancedir = container.getSolrHome() + \"/\" + name;\n    }\n\n    Properties coreProps = new Properties();\n    for (String param : paramToProp.keySet()) {\n      String value = params.get(param, null);\n      if (StringUtils.isNotEmpty(value)) {\n        coreProps.setProperty(paramToProp.get(param), value);\n      }\n    }\n    Iterator<String> paramsIt = params.getParameterNamesIterator();\n    while (paramsIt.hasNext()) {\n      String param = paramsIt.next();\n      if (!param.startsWith(CoreAdminParams.PROPERTY_PREFIX))\n        continue;\n      String propName = param.substring(CoreAdminParams.PROPERTY_PREFIX.length());\n      String propValue = params.get(param);\n      coreProps.setProperty(propName, propValue);\n    }\n\n    return new CoreDescriptor(container, name, instancedir, coreProps, params);\n  }\n\n","sourceOld":"  protected static CoreDescriptor buildCoreDescriptor(SolrParams params, CoreContainer container) {\n\n    String name = checkNotEmpty(params.get(CoreAdminParams.NAME),\n        \"Missing parameter [\" + CoreAdminParams.NAME + \"]\");\n    String instancedir = params.get(CoreAdminParams.INSTANCE_DIR);\n    if (StringUtils.isEmpty(instancedir)) {\n      instancedir = name; // will be resolved later against solr.home\n      //instancedir = container.getSolrHome() + \"/\" + name;\n    }\n\n    Properties coreProps = new Properties();\n    for (String param : paramToProp.keySet()) {\n      String value = params.get(param, null);\n      if (StringUtils.isNotEmpty(value)) {\n        coreProps.setProperty(paramToProp.get(param), value);\n      }\n    }\n    Iterator<String> paramsIt = params.getParameterNamesIterator();\n    while (paramsIt.hasNext()) {\n      String param = paramsIt.next();\n      if (!param.startsWith(CoreAdminParams.PROPERTY_PREFIX))\n        continue;\n      String propName = param.substring(CoreAdminParams.PROPERTY_PREFIX.length());\n      String propValue = params.get(param);\n      coreProps.setProperty(propName, propValue);\n    }\n\n    return new CoreDescriptor(container, name, instancedir, coreProps);\n  }\n\n","bugFix":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9904879776b9279ff8c75a92c58ebbb97f231a2b","date":1395757236,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#buildCoreDescriptor(SolrParams,CoreContainer).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#buildCoreDescriptor(SolrParams,CoreContainer).mjava","sourceNew":"  protected static CoreDescriptor buildCoreDescriptor(SolrParams params, CoreContainer container) {\n\n    String name = checkNotEmpty(params.get(CoreAdminParams.NAME),\n        \"Missing parameter [\" + CoreAdminParams.NAME + \"]\");\n\n    Properties coreProps = new Properties();\n    for (String param : paramToProp.keySet()) {\n      String value = params.get(param, null);\n      if (StringUtils.isNotEmpty(value)) {\n        coreProps.setProperty(paramToProp.get(param), value);\n      }\n    }\n    Iterator<String> paramsIt = params.getParameterNamesIterator();\n    while (paramsIt.hasNext()) {\n      String param = paramsIt.next();\n      if (!param.startsWith(CoreAdminParams.PROPERTY_PREFIX))\n        continue;\n      String propName = param.substring(CoreAdminParams.PROPERTY_PREFIX.length());\n      String propValue = params.get(param);\n      coreProps.setProperty(propName, propValue);\n    }\n\n    String instancedir = params.get(CoreAdminParams.INSTANCE_DIR);\n    if (StringUtils.isEmpty(instancedir) && coreProps.getProperty(CoreAdminParams.INSTANCE_DIR) != null) {\n      instancedir = coreProps.getProperty(CoreAdminParams.INSTANCE_DIR);\n    } else if (StringUtils.isEmpty(instancedir)){\n      instancedir = name; // will be resolved later against solr.home\n      //instancedir = container.getSolrHome() + \"/\" + name;\n    }\n\n    return new CoreDescriptor(container, name, instancedir, coreProps, params);\n  }\n\n","sourceOld":"  protected static CoreDescriptor buildCoreDescriptor(SolrParams params, CoreContainer container) {\n\n    String name = checkNotEmpty(params.get(CoreAdminParams.NAME),\n        \"Missing parameter [\" + CoreAdminParams.NAME + \"]\");\n    String instancedir = params.get(CoreAdminParams.INSTANCE_DIR);\n    if (StringUtils.isEmpty(instancedir)) {\n      instancedir = name; // will be resolved later against solr.home\n      //instancedir = container.getSolrHome() + \"/\" + name;\n    }\n\n    Properties coreProps = new Properties();\n    for (String param : paramToProp.keySet()) {\n      String value = params.get(param, null);\n      if (StringUtils.isNotEmpty(value)) {\n        coreProps.setProperty(paramToProp.get(param), value);\n      }\n    }\n    Iterator<String> paramsIt = params.getParameterNamesIterator();\n    while (paramsIt.hasNext()) {\n      String param = paramsIt.next();\n      if (!param.startsWith(CoreAdminParams.PROPERTY_PREFIX))\n        continue;\n      String propName = param.substring(CoreAdminParams.PROPERTY_PREFIX.length());\n      String propValue = params.get(param);\n      coreProps.setProperty(propName, propValue);\n    }\n\n    return new CoreDescriptor(container, name, instancedir, coreProps, params);\n  }\n\n","bugFix":["6e764e9a107f93be9fa3c922bc6a197b3eec387e","d642fe6577db47788146c0fc4fe14240ab1718b7","16e579cc1c2e45a120542d40a445a8a912120bc9"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3","date":1448892165,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#buildCoreDescriptor(SolrParams,CoreContainer).mjava","sourceNew":null,"sourceOld":"  protected static CoreDescriptor buildCoreDescriptor(SolrParams params, CoreContainer container) {\n\n    String name = checkNotEmpty(params.get(CoreAdminParams.NAME),\n        \"Missing parameter [\" + CoreAdminParams.NAME + \"]\");\n\n    Properties coreProps = new Properties();\n    for (String param : paramToProp.keySet()) {\n      String value = params.get(param, null);\n      if (StringUtils.isNotEmpty(value)) {\n        coreProps.setProperty(paramToProp.get(param), value);\n      }\n    }\n    Iterator<String> paramsIt = params.getParameterNamesIterator();\n    while (paramsIt.hasNext()) {\n      String param = paramsIt.next();\n      if (!param.startsWith(CoreAdminParams.PROPERTY_PREFIX))\n        continue;\n      String propName = param.substring(CoreAdminParams.PROPERTY_PREFIX.length());\n      String propValue = params.get(param);\n      coreProps.setProperty(propName, propValue);\n    }\n\n    String instancedir = params.get(CoreAdminParams.INSTANCE_DIR);\n    if (StringUtils.isEmpty(instancedir) && coreProps.getProperty(CoreAdminParams.INSTANCE_DIR) != null) {\n      instancedir = coreProps.getProperty(CoreAdminParams.INSTANCE_DIR);\n    } else if (StringUtils.isEmpty(instancedir)){\n      instancedir = name; // will be resolved later against solr.home\n      //instancedir = container.getSolrHome() + \"/\" + name;\n    }\n\n    return new CoreDescriptor(container, name, instancedir, coreProps, params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d642fe6577db47788146c0fc4fe14240ab1718b7":["16e579cc1c2e45a120542d40a445a8a912120bc9"],"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["9904879776b9279ff8c75a92c58ebbb97f231a2b"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["37a0f60745e53927c4c876cfe5b5a58170f0646c","d642fe6577db47788146c0fc4fe14240ab1718b7"],"31d4861802ca404d78ca1d15f4550eec415b9199":["2ceca04c06658aeb20e0a319ade784ad9a0576dd","d642fe6577db47788146c0fc4fe14240ab1718b7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"16e579cc1c2e45a120542d40a445a8a912120bc9":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"9904879776b9279ff8c75a92c58ebbb97f231a2b":["5a82d855abc18f7ee3e1ec359d8f256c8c86977a"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2ceca04c06658aeb20e0a319ade784ad9a0576dd":["6e764e9a107f93be9fa3c922bc6a197b3eec387e","16e579cc1c2e45a120542d40a445a8a912120bc9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"5a82d855abc18f7ee3e1ec359d8f256c8c86977a":["d642fe6577db47788146c0fc4fe14240ab1718b7"]},"commit2Childs":{"d642fe6577db47788146c0fc4fe14240ab1718b7":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","5a82d855abc18f7ee3e1ec359d8f256c8c86977a"],"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"31d4861802ca404d78ca1d15f4550eec415b9199":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"16e579cc1c2e45a120542d40a445a8a912120bc9":["d642fe6577db47788146c0fc4fe14240ab1718b7","2ceca04c06658aeb20e0a319ade784ad9a0576dd"],"9904879776b9279ff8c75a92c58ebbb97f231a2b":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["37a0f60745e53927c4c876cfe5b5a58170f0646c","16e579cc1c2e45a120542d40a445a8a912120bc9","2ceca04c06658aeb20e0a319ade784ad9a0576dd"],"2ceca04c06658aeb20e0a319ade784ad9a0576dd":["31d4861802ca404d78ca1d15f4550eec415b9199"],"5a82d855abc18f7ee3e1ec359d8f256c8c86977a":["9904879776b9279ff8c75a92c58ebbb97f231a2b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}