{"path":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum.AutomatonFuzzyTermsEnum#AutomatonFuzzyTermsEnum(TermsEnum,CompiledAutomaton[]).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum.AutomatonFuzzyTermsEnum#AutomatonFuzzyTermsEnum(TermsEnum,CompiledAutomaton[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FuzzyTermsEnum.AutomatonFuzzyTermsEnum#AutomatonFuzzyTermsEnum(TermsEnum,CompiledAutomaton[]).mjava","sourceNew":"    public AutomatonFuzzyTermsEnum(TermsEnum tenum, CompiledAutomaton compiled[]) \n      throws IOException {\n      super(tenum, false);\n      this.matchers = new ByteRunAutomaton[compiled.length];\n      for (int i = 0; i < compiled.length; i++)\n        this.matchers[i] = compiled[i].runAutomaton;\n      termRef = new BytesRef(term.text());\n    }\n\n","sourceOld":"    public AutomatonFuzzyTermsEnum(TermsEnum tenum, CompiledAutomaton compiled[]) \n      throws IOException {\n      super(tenum, false);\n      this.matchers = new ByteRunAutomaton[compiled.length];\n      for (int i = 0; i < compiled.length; i++)\n        this.matchers[i] = compiled[i].runAutomaton;\n      termRef = new BytesRef(term.text());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum.AutomatonFuzzyTermsEnum#AutomatonFuzzyTermsEnum(TermsEnum,CompiledAutomaton[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum.AutomatonFuzzyTermsEnum#AutomatonFuzzyTermsEnum(TermsEnum,CompiledAutomaton[]).mjava","sourceNew":"    public AutomatonFuzzyTermsEnum(TermsEnum tenum, CompiledAutomaton compiled[]) {\n      super(tenum, false);\n      this.matchers = new ByteRunAutomaton[compiled.length];\n      for (int i = 0; i < compiled.length; i++)\n        this.matchers[i] = compiled[i].runAutomaton;\n      termRef = new BytesRef(term.text());\n    }\n\n","sourceOld":"    public AutomatonFuzzyTermsEnum(TermsEnum tenum, CompiledAutomaton compiled[]) \n      throws IOException {\n      super(tenum, false);\n      this.matchers = new ByteRunAutomaton[compiled.length];\n      for (int i = 0; i < compiled.length; i++)\n        this.matchers[i] = compiled[i].runAutomaton;\n      termRef = new BytesRef(term.text());\n    }\n\n","bugFix":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum.AutomatonFuzzyTermsEnum#AutomatonFuzzyTermsEnum(TermsEnum,CompiledAutomaton[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum.AutomatonFuzzyTermsEnum#AutomatonFuzzyTermsEnum(TermsEnum,CompiledAutomaton[]).mjava","sourceNew":"    public AutomatonFuzzyTermsEnum(TermsEnum tenum, CompiledAutomaton compiled[]) {\n      super(tenum, false);\n      this.matchers = new ByteRunAutomaton[compiled.length];\n      for (int i = 0; i < compiled.length; i++)\n        this.matchers[i] = compiled[i].runAutomaton;\n      termRef = new BytesRef(term.text());\n    }\n\n","sourceOld":"    public AutomatonFuzzyTermsEnum(TermsEnum tenum, CompiledAutomaton compiled[]) \n      throws IOException {\n      super(tenum, false);\n      this.matchers = new ByteRunAutomaton[compiled.length];\n      for (int i = 0; i < compiled.length; i++)\n        this.matchers[i] = compiled[i].runAutomaton;\n      termRef = new BytesRef(term.text());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b9c5c0e8e826d8fd169840564bcf8606cf81d15b","date":1473715404,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum.AutomatonFuzzyTermsEnum#AutomatonFuzzyTermsEnum(TermsEnum,CompiledAutomaton[]).mjava","sourceNew":null,"sourceOld":"    public AutomatonFuzzyTermsEnum(TermsEnum tenum, CompiledAutomaton compiled[]) {\n      super(tenum, false);\n      this.matchers = new ByteRunAutomaton[compiled.length];\n      for (int i = 0; i < compiled.length; i++)\n        this.matchers[i] = compiled[i].runAutomaton;\n      termRef = new BytesRef(term.text());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89424def13674ea17829b41c5883c54ecc31a132","date":1473767373,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum.AutomatonFuzzyTermsEnum#AutomatonFuzzyTermsEnum(TermsEnum,CompiledAutomaton[]).mjava","sourceNew":null,"sourceOld":"    public AutomatonFuzzyTermsEnum(TermsEnum tenum, CompiledAutomaton compiled[]) {\n      super(tenum, false);\n      this.matchers = new ByteRunAutomaton[compiled.length];\n      for (int i = 0; i < compiled.length; i++)\n        this.matchers[i] = compiled[i].runAutomaton;\n      termRef = new BytesRef(term.text());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum.AutomatonFuzzyTermsEnum#AutomatonFuzzyTermsEnum(TermsEnum,CompiledAutomaton[]).mjava","sourceNew":null,"sourceOld":"    public AutomatonFuzzyTermsEnum(TermsEnum tenum, CompiledAutomaton compiled[]) {\n      super(tenum, false);\n      this.matchers = new ByteRunAutomaton[compiled.length];\n      for (int i = 0; i < compiled.length; i++)\n        this.matchers[i] = compiled[i].runAutomaton;\n      termRef = new BytesRef(term.text());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum.AutomatonFuzzyTermsEnum#AutomatonFuzzyTermsEnum(TermsEnum,CompiledAutomaton[]).mjava","sourceNew":null,"sourceOld":"    public AutomatonFuzzyTermsEnum(TermsEnum tenum, CompiledAutomaton compiled[]) {\n      super(tenum, false);\n      this.matchers = new ByteRunAutomaton[compiled.length];\n      for (int i = 0; i < compiled.length; i++)\n        this.matchers[i] = compiled[i].runAutomaton;\n      termRef = new BytesRef(term.text());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","89424def13674ea17829b41c5883c54ecc31a132"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"b9c5c0e8e826d8fd169840564bcf8606cf81d15b":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"89424def13674ea17829b41c5883c54ecc31a132":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","b9c5c0e8e826d8fd169840564bcf8606cf81d15b"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["fe33227f6805edab2036cbb80645cc4e2d1fa424","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","b9c5c0e8e826d8fd169840564bcf8606cf81d15b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","89424def13674ea17829b41c5883c54ecc31a132"],"b9c5c0e8e826d8fd169840564bcf8606cf81d15b":["89424def13674ea17829b41c5883c54ecc31a132"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"89424def13674ea17829b41c5883c54ecc31a132":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}