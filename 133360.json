{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/ar/ArabicLetterTokenizer#isTokenChar(int).mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/ar/ArabicLetterTokenizer#isTokenChar(int).mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/ar/ArabicLetterTokenizer#isTokenChar(int).mjava","sourceNew":"  /** \n   * Allows for Letter category or NonspacingMark category\n   * @see org.apache.lucene.analysis.LetterTokenizer#isTokenChar(int)\n   */\n  @Override\n  protected boolean isTokenChar(int c) {\n    return super.isTokenChar(c) || Character.getType(c) == Character.NON_SPACING_MARK;\n  }\n\n","sourceOld":"  /** \n   * Allows for Letter category or NonspacingMark category\n   * @see org.apache.lucene.analysis.LetterTokenizer#isTokenChar(int)\n   */\n  @Override\n  protected boolean isTokenChar(int c) {\n    return super.isTokenChar(c) || Character.getType(c) == Character.NON_SPACING_MARK;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"790c3f61c9b891d66d919c5d10db9fa5216eb0f1","date":1274818604,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/ar/ArabicLetterTokenizer#isTokenChar(int).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/ar/ArabicLetterTokenizer#isTokenChar(int).mjava","sourceNew":"  /** \n   * Allows for Letter category or NonspacingMark category\n   * @see org.apache.lucene.analysis.core.LetterTokenizer#isTokenChar(int)\n   */\n  @Override\n  protected boolean isTokenChar(int c) {\n    return super.isTokenChar(c) || Character.getType(c) == Character.NON_SPACING_MARK;\n  }\n\n","sourceOld":"  /** \n   * Allows for Letter category or NonspacingMark category\n   * @see org.apache.lucene.analysis.LetterTokenizer#isTokenChar(int)\n   */\n  @Override\n  protected boolean isTokenChar(int c) {\n    return super.isTokenChar(c) || Character.getType(c) == Character.NON_SPACING_MARK;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/ar/ArabicLetterTokenizer#isTokenChar(int).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/ar/ArabicLetterTokenizer#isTokenChar(int).mjava","sourceNew":"  /**\n   * Allows for Letter category or NonspacingMark category\n   * @see org.apache.lucene.analysis.core.LetterTokenizer#isTokenChar(int)\n   */\n  @Override\n  protected boolean isTokenChar(int c) {\n    return super.isTokenChar(c) || Character.getType(c) == Character.NON_SPACING_MARK;\n  }\n\n","sourceOld":"  /** \n   * Allows for Letter category or NonspacingMark category\n   * @see org.apache.lucene.analysis.core.LetterTokenizer#isTokenChar(int)\n   */\n  @Override\n  protected boolean isTokenChar(int c) {\n    return super.isTokenChar(c) || Character.getType(c) == Character.NON_SPACING_MARK;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/ar/ArabicLetterTokenizer#isTokenChar(int).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/ar/ArabicLetterTokenizer#isTokenChar(int).mjava","sourceNew":"  /**\n   * Allows for Letter category or NonspacingMark category\n   * @see org.apache.lucene.analysis.core.LetterTokenizer#isTokenChar(int)\n   */\n  @Override\n  protected boolean isTokenChar(int c) {\n    return super.isTokenChar(c) || Character.getType(c) == Character.NON_SPACING_MARK;\n  }\n\n","sourceOld":"  /** \n   * Allows for Letter category or NonspacingMark category\n   * @see org.apache.lucene.analysis.core.LetterTokenizer#isTokenChar(int)\n   */\n  @Override\n  protected boolean isTokenChar(int c) {\n    return super.isTokenChar(c) || Character.getType(c) == Character.NON_SPACING_MARK;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/ar/ArabicLetterTokenizer#isTokenChar(int).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/ar/ArabicLetterTokenizer#isTokenChar(int).mjava","sourceNew":"  /**\n   * Allows for Letter category or NonspacingMark category\n   * @see org.apache.lucene.analysis.core.LetterTokenizer#isTokenChar(int)\n   */\n  @Override\n  protected boolean isTokenChar(int c) {\n    return super.isTokenChar(c) || Character.getType(c) == Character.NON_SPACING_MARK;\n  }\n\n","sourceOld":"  /** \n   * Allows for Letter category or NonspacingMark category\n   * @see org.apache.lucene.analysis.core.LetterTokenizer#isTokenChar(int)\n   */\n  @Override\n  protected boolean isTokenChar(int c) {\n    return super.isTokenChar(c) || Character.getType(c) == Character.NON_SPACING_MARK;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ar/ArabicLetterTokenizer#isTokenChar(int).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/ar/ArabicLetterTokenizer#isTokenChar(int).mjava","sourceNew":"  /**\n   * Allows for Letter category or NonspacingMark category\n   * @see org.apache.lucene.analysis.core.LetterTokenizer#isTokenChar(int)\n   */\n  @Override\n  protected boolean isTokenChar(int c) {\n    return super.isTokenChar(c) || Character.getType(c) == Character.NON_SPACING_MARK;\n  }\n\n","sourceOld":"  /**\n   * Allows for Letter category or NonspacingMark category\n   * @see org.apache.lucene.analysis.core.LetterTokenizer#isTokenChar(int)\n   */\n  @Override\n  protected boolean isTokenChar(int c) {\n    return super.isTokenChar(c) || Character.getType(c) == Character.NON_SPACING_MARK;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"3bb13258feba31ab676502787ab2e1779f129b7a":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["0f080986da691a3bba7b757f43ab72cdc82b57ce"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"3bb13258feba31ab676502787ab2e1779f129b7a":[],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["b89678825b68eccaf09e6ab71675fc0b0af1e099","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}