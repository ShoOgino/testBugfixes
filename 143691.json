{"path":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#defgMultiTermQueryTest(Query).mjava","commits":[{"id":"b77dee084743b07be452cf7c07c992a225b11146","date":1315532213,"type":0,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#defgMultiTermQueryTest(Query).mjava","pathOld":"/dev/null","sourceNew":"  private void defgMultiTermQueryTest(Query query) throws IOException {\n    FieldQuery fq = new FieldQuery( query, reader, true, true );\n    QueryPhraseMap qpm = fq.getFieldTermMap(F, \"defg\");\n    assertNotNull (qpm);\n    assertNull (fq.getFieldTermMap(F, \"dog\"));\n    List<TermInfo> phraseCandidate = new ArrayList<TermInfo>();\n    phraseCandidate.add( new TermInfo( \"defg\", 0, 12, 0 ) );\n    assertNotNull (fq.searchPhrase(F, phraseCandidate));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#defgMultiTermQueryTest(Query).mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#defgMultiTermQueryTest(Query).mjava","sourceNew":"  private void defgMultiTermQueryTest(Query query) throws IOException {\n    FieldQuery fq = new FieldQuery( query, reader, true, true );\n    QueryPhraseMap qpm = fq.getFieldTermMap(F, \"defg\");\n    assertNotNull (qpm);\n    assertNull (fq.getFieldTermMap(F, \"dog\"));\n    List<TermInfo> phraseCandidate = new ArrayList<TermInfo>();\n    phraseCandidate.add( new TermInfo( \"defg\", 0, 12, 0 ) );\n    assertNotNull (fq.searchPhrase(F, phraseCandidate));\n  }\n\n","sourceOld":"  private void defgMultiTermQueryTest(Query query) throws IOException {\n    FieldQuery fq = new FieldQuery( query, reader, true, true );\n    QueryPhraseMap qpm = fq.getFieldTermMap(F, \"defg\");\n    assertNotNull (qpm);\n    assertNull (fq.getFieldTermMap(F, \"dog\"));\n    List<TermInfo> phraseCandidate = new ArrayList<TermInfo>();\n    phraseCandidate.add( new TermInfo( \"defg\", 0, 12, 0 ) );\n    assertNotNull (fq.searchPhrase(F, phraseCandidate));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["b77dee084743b07be452cf7c07c992a225b11146"],"b77dee084743b07be452cf7c07c992a225b11146":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b77dee084743b07be452cf7c07c992a225b11146":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b77dee084743b07be452cf7c07c992a225b11146"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}