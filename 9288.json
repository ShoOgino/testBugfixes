{"path":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/FinnishStemmer#r_possessive().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/FinnishStemmer#r_possessive().mjava","pathOld":"modules/analysis/common/src/java/org/tartarus/snowball/ext/FinnishStemmer#r_possessive().mjava","sourceNew":"        private boolean r_possessive() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            // (, line 68\n            // setlimit, line 69\n            v_1 = limit - cursor;\n            // tomark, line 69\n            if (cursor < I_p1)\n            {\n                return false;\n            }\n            cursor = I_p1;\n            v_2 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_1;\n            // (, line 69\n            // [, line 69\n            ket = cursor;\n            // substring, line 69\n            among_var = find_among_b(a_4, 9);\n            if (among_var == 0)\n            {\n                limit_backward = v_2;\n                return false;\n            }\n            // ], line 69\n            bra = cursor;\n            limit_backward = v_2;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 72\n                    // not, line 72\n                    {\n                        v_3 = limit - cursor;\n                        lab0: do {\n                            // literal, line 72\n                            if (!(eq_s_b(1, \"k\")))\n                            {\n                                break lab0;\n                            }\n                            return false;\n                        } while (false);\n                        cursor = limit - v_3;\n                    }\n                    // delete, line 72\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 74\n                    // delete, line 74\n                    slice_del();\n                    // [, line 74\n                    ket = cursor;\n                    // literal, line 74\n                    if (!(eq_s_b(3, \"kse\")))\n                    {\n                        return false;\n                    }\n                    // ], line 74\n                    bra = cursor;\n                    // <-, line 74\n                    slice_from(\"ksi\");\n                    break;\n                case 3:\n                    // (, line 78\n                    // delete, line 78\n                    slice_del();\n                    break;\n                case 4:\n                    // (, line 81\n                    // among, line 81\n                    if (find_among_b(a_1, 6) == 0)\n                    {\n                        return false;\n                    }\n                    // delete, line 81\n                    slice_del();\n                    break;\n                case 5:\n                    // (, line 83\n                    // among, line 83\n                    if (find_among_b(a_2, 6) == 0)\n                    {\n                        return false;\n                    }\n                    // delete, line 84\n                    slice_del();\n                    break;\n                case 6:\n                    // (, line 86\n                    // among, line 86\n                    if (find_among_b(a_3, 2) == 0)\n                    {\n                        return false;\n                    }\n                    // delete, line 86\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_possessive() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            // (, line 68\n            // setlimit, line 69\n            v_1 = limit - cursor;\n            // tomark, line 69\n            if (cursor < I_p1)\n            {\n                return false;\n            }\n            cursor = I_p1;\n            v_2 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_1;\n            // (, line 69\n            // [, line 69\n            ket = cursor;\n            // substring, line 69\n            among_var = find_among_b(a_4, 9);\n            if (among_var == 0)\n            {\n                limit_backward = v_2;\n                return false;\n            }\n            // ], line 69\n            bra = cursor;\n            limit_backward = v_2;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 72\n                    // not, line 72\n                    {\n                        v_3 = limit - cursor;\n                        lab0: do {\n                            // literal, line 72\n                            if (!(eq_s_b(1, \"k\")))\n                            {\n                                break lab0;\n                            }\n                            return false;\n                        } while (false);\n                        cursor = limit - v_3;\n                    }\n                    // delete, line 72\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 74\n                    // delete, line 74\n                    slice_del();\n                    // [, line 74\n                    ket = cursor;\n                    // literal, line 74\n                    if (!(eq_s_b(3, \"kse\")))\n                    {\n                        return false;\n                    }\n                    // ], line 74\n                    bra = cursor;\n                    // <-, line 74\n                    slice_from(\"ksi\");\n                    break;\n                case 3:\n                    // (, line 78\n                    // delete, line 78\n                    slice_del();\n                    break;\n                case 4:\n                    // (, line 81\n                    // among, line 81\n                    if (find_among_b(a_1, 6) == 0)\n                    {\n                        return false;\n                    }\n                    // delete, line 81\n                    slice_del();\n                    break;\n                case 5:\n                    // (, line 83\n                    // among, line 83\n                    if (find_among_b(a_2, 6) == 0)\n                    {\n                        return false;\n                    }\n                    // delete, line 84\n                    slice_del();\n                    break;\n                case 6:\n                    // (, line 86\n                    // among, line 86\n                    if (find_among_b(a_3, 2) == 0)\n                    {\n                        return false;\n                    }\n                    // delete, line 86\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a6a9e301c12ab07b1d0428b5aad813fff317b3","date":1343846505,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/FinnishStemmer#r_possessive().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/FinnishStemmer#r_possessive().mjava","sourceNew":"                private boolean r_possessive() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n                    // (, line 68\n                    // setlimit, line 69\n                    v_1 = limit - cursor;\n                    // tomark, line 69\n                    if (cursor < I_p1)\n                    {\n                        return false;\n                    }\n                    cursor = I_p1;\n                    v_2 = limit_backward;\n                    limit_backward = cursor;\n                    cursor = limit - v_1;\n                    // (, line 69\n                    // [, line 69\n                    ket = cursor;\n                    // substring, line 69\n                    among_var = find_among_b(a_4, 9);\n                    if (among_var == 0)\n                    {\n                        limit_backward = v_2;\n                        return false;\n                    }\n                    // ], line 69\n                    bra = cursor;\n                    limit_backward = v_2;\n                    switch(among_var) {\n                        case 0:\n                            return false;\n                        case 1:\n                            // (, line 72\n                            // not, line 72\n                            {\n                                v_3 = limit - cursor;\n                                lab0: do {\n                                    // literal, line 72\n                                    if (!(eq_s_b(1, \"k\")))\n                                    {\n                                        break lab0;\n                                    }\n                                    return false;\n                                } while (false);\n                                cursor = limit - v_3;\n                            }\n                            // delete, line 72\n                            slice_del();\n                            break;\n                        case 2:\n                            // (, line 74\n                            // delete, line 74\n                            slice_del();\n                            // [, line 74\n                            ket = cursor;\n                            // literal, line 74\n                            if (!(eq_s_b(3, \"kse\")))\n                            {\n                                return false;\n                            }\n                            // ], line 74\n                            bra = cursor;\n                            // <-, line 74\n                            slice_from(\"ksi\");\n                            break;\n                        case 3:\n                            // (, line 78\n                            // delete, line 78\n                            slice_del();\n                            break;\n                        case 4:\n                            // (, line 81\n                            // among, line 81\n                            if (find_among_b(a_1, 6) == 0)\n                            {\n                                return false;\n                            }\n                            // delete, line 81\n                            slice_del();\n                            break;\n                        case 5:\n                            // (, line 83\n                            // among, line 83\n                            if (find_among_b(a_2, 6) == 0)\n                            {\n                                return false;\n                            }\n                            // delete, line 84\n                            slice_del();\n                            break;\n                        case 6:\n                            // (, line 86\n                            // among, line 86\n                            if (find_among_b(a_3, 2) == 0)\n                            {\n                                return false;\n                            }\n                            // delete, line 86\n                            slice_del();\n                            break;\n                    }\n                    return true;\n                }\n\n","sourceOld":"        private boolean r_possessive() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            // (, line 68\n            // setlimit, line 69\n            v_1 = limit - cursor;\n            // tomark, line 69\n            if (cursor < I_p1)\n            {\n                return false;\n            }\n            cursor = I_p1;\n            v_2 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_1;\n            // (, line 69\n            // [, line 69\n            ket = cursor;\n            // substring, line 69\n            among_var = find_among_b(a_4, 9);\n            if (among_var == 0)\n            {\n                limit_backward = v_2;\n                return false;\n            }\n            // ], line 69\n            bra = cursor;\n            limit_backward = v_2;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 72\n                    // not, line 72\n                    {\n                        v_3 = limit - cursor;\n                        lab0: do {\n                            // literal, line 72\n                            if (!(eq_s_b(1, \"k\")))\n                            {\n                                break lab0;\n                            }\n                            return false;\n                        } while (false);\n                        cursor = limit - v_3;\n                    }\n                    // delete, line 72\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 74\n                    // delete, line 74\n                    slice_del();\n                    // [, line 74\n                    ket = cursor;\n                    // literal, line 74\n                    if (!(eq_s_b(3, \"kse\")))\n                    {\n                        return false;\n                    }\n                    // ], line 74\n                    bra = cursor;\n                    // <-, line 74\n                    slice_from(\"ksi\");\n                    break;\n                case 3:\n                    // (, line 78\n                    // delete, line 78\n                    slice_del();\n                    break;\n                case 4:\n                    // (, line 81\n                    // among, line 81\n                    if (find_among_b(a_1, 6) == 0)\n                    {\n                        return false;\n                    }\n                    // delete, line 81\n                    slice_del();\n                    break;\n                case 5:\n                    // (, line 83\n                    // among, line 83\n                    if (find_among_b(a_2, 6) == 0)\n                    {\n                        return false;\n                    }\n                    // delete, line 84\n                    slice_del();\n                    break;\n                case 6:\n                    // (, line 86\n                    // among, line 86\n                    if (find_among_b(a_3, 2) == 0)\n                    {\n                        return false;\n                    }\n                    // delete, line 86\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/FinnishStemmer#r_possessive().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/FinnishStemmer#r_possessive().mjava","sourceNew":"                private boolean r_possessive() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n                    // (, line 68\n                    // setlimit, line 69\n                    v_1 = limit - cursor;\n                    // tomark, line 69\n                    if (cursor < I_p1)\n                    {\n                        return false;\n                    }\n                    cursor = I_p1;\n                    v_2 = limit_backward;\n                    limit_backward = cursor;\n                    cursor = limit - v_1;\n                    // (, line 69\n                    // [, line 69\n                    ket = cursor;\n                    // substring, line 69\n                    among_var = find_among_b(a_4, 9);\n                    if (among_var == 0)\n                    {\n                        limit_backward = v_2;\n                        return false;\n                    }\n                    // ], line 69\n                    bra = cursor;\n                    limit_backward = v_2;\n                    switch(among_var) {\n                        case 0:\n                            return false;\n                        case 1:\n                            // (, line 72\n                            // not, line 72\n                            {\n                                v_3 = limit - cursor;\n                                lab0: do {\n                                    // literal, line 72\n                                    if (!(eq_s_b(1, \"k\")))\n                                    {\n                                        break lab0;\n                                    }\n                                    return false;\n                                } while (false);\n                                cursor = limit - v_3;\n                            }\n                            // delete, line 72\n                            slice_del();\n                            break;\n                        case 2:\n                            // (, line 74\n                            // delete, line 74\n                            slice_del();\n                            // [, line 74\n                            ket = cursor;\n                            // literal, line 74\n                            if (!(eq_s_b(3, \"kse\")))\n                            {\n                                return false;\n                            }\n                            // ], line 74\n                            bra = cursor;\n                            // <-, line 74\n                            slice_from(\"ksi\");\n                            break;\n                        case 3:\n                            // (, line 78\n                            // delete, line 78\n                            slice_del();\n                            break;\n                        case 4:\n                            // (, line 81\n                            // among, line 81\n                            if (find_among_b(a_1, 6) == 0)\n                            {\n                                return false;\n                            }\n                            // delete, line 81\n                            slice_del();\n                            break;\n                        case 5:\n                            // (, line 83\n                            // among, line 83\n                            if (find_among_b(a_2, 6) == 0)\n                            {\n                                return false;\n                            }\n                            // delete, line 84\n                            slice_del();\n                            break;\n                        case 6:\n                            // (, line 86\n                            // among, line 86\n                            if (find_among_b(a_3, 2) == 0)\n                            {\n                                return false;\n                            }\n                            // delete, line 86\n                            slice_del();\n                            break;\n                    }\n                    return true;\n                }\n\n","sourceOld":"        private boolean r_possessive() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            // (, line 68\n            // setlimit, line 69\n            v_1 = limit - cursor;\n            // tomark, line 69\n            if (cursor < I_p1)\n            {\n                return false;\n            }\n            cursor = I_p1;\n            v_2 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_1;\n            // (, line 69\n            // [, line 69\n            ket = cursor;\n            // substring, line 69\n            among_var = find_among_b(a_4, 9);\n            if (among_var == 0)\n            {\n                limit_backward = v_2;\n                return false;\n            }\n            // ], line 69\n            bra = cursor;\n            limit_backward = v_2;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 72\n                    // not, line 72\n                    {\n                        v_3 = limit - cursor;\n                        lab0: do {\n                            // literal, line 72\n                            if (!(eq_s_b(1, \"k\")))\n                            {\n                                break lab0;\n                            }\n                            return false;\n                        } while (false);\n                        cursor = limit - v_3;\n                    }\n                    // delete, line 72\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 74\n                    // delete, line 74\n                    slice_del();\n                    // [, line 74\n                    ket = cursor;\n                    // literal, line 74\n                    if (!(eq_s_b(3, \"kse\")))\n                    {\n                        return false;\n                    }\n                    // ], line 74\n                    bra = cursor;\n                    // <-, line 74\n                    slice_from(\"ksi\");\n                    break;\n                case 3:\n                    // (, line 78\n                    // delete, line 78\n                    slice_del();\n                    break;\n                case 4:\n                    // (, line 81\n                    // among, line 81\n                    if (find_among_b(a_1, 6) == 0)\n                    {\n                        return false;\n                    }\n                    // delete, line 81\n                    slice_del();\n                    break;\n                case 5:\n                    // (, line 83\n                    // among, line 83\n                    if (find_among_b(a_2, 6) == 0)\n                    {\n                        return false;\n                    }\n                    // delete, line 84\n                    slice_del();\n                    break;\n                case 6:\n                    // (, line 86\n                    // among, line 86\n                    if (find_among_b(a_3, 2) == 0)\n                    {\n                        return false;\n                    }\n                    // delete, line 86\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/FinnishStemmer#r_possessive().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/FinnishStemmer#r_possessive().mjava","sourceNew":"                private boolean r_possessive() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n                    // (, line 68\n                    // setlimit, line 69\n                    v_1 = limit - cursor;\n                    // tomark, line 69\n                    if (cursor < I_p1)\n                    {\n                        return false;\n                    }\n                    cursor = I_p1;\n                    v_2 = limit_backward;\n                    limit_backward = cursor;\n                    cursor = limit - v_1;\n                    // (, line 69\n                    // [, line 69\n                    ket = cursor;\n                    // substring, line 69\n                    among_var = find_among_b(a_4, 9);\n                    if (among_var == 0)\n                    {\n                        limit_backward = v_2;\n                        return false;\n                    }\n                    // ], line 69\n                    bra = cursor;\n                    limit_backward = v_2;\n                    switch(among_var) {\n                        case 0:\n                            return false;\n                        case 1:\n                            // (, line 72\n                            // not, line 72\n                            {\n                                v_3 = limit - cursor;\n                                lab0: do {\n                                    // literal, line 72\n                                    if (!(eq_s_b(1, \"k\")))\n                                    {\n                                        break lab0;\n                                    }\n                                    return false;\n                                } while (false);\n                                cursor = limit - v_3;\n                            }\n                            // delete, line 72\n                            slice_del();\n                            break;\n                        case 2:\n                            // (, line 74\n                            // delete, line 74\n                            slice_del();\n                            // [, line 74\n                            ket = cursor;\n                            // literal, line 74\n                            if (!(eq_s_b(3, \"kse\")))\n                            {\n                                return false;\n                            }\n                            // ], line 74\n                            bra = cursor;\n                            // <-, line 74\n                            slice_from(\"ksi\");\n                            break;\n                        case 3:\n                            // (, line 78\n                            // delete, line 78\n                            slice_del();\n                            break;\n                        case 4:\n                            // (, line 81\n                            // among, line 81\n                            if (find_among_b(a_1, 6) == 0)\n                            {\n                                return false;\n                            }\n                            // delete, line 81\n                            slice_del();\n                            break;\n                        case 5:\n                            // (, line 83\n                            // among, line 83\n                            if (find_among_b(a_2, 6) == 0)\n                            {\n                                return false;\n                            }\n                            // delete, line 84\n                            slice_del();\n                            break;\n                        case 6:\n                            // (, line 86\n                            // among, line 86\n                            if (find_among_b(a_3, 2) == 0)\n                            {\n                                return false;\n                            }\n                            // delete, line 86\n                            slice_del();\n                            break;\n                    }\n                    return true;\n                }\n\n","sourceOld":"        private boolean r_possessive() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            // (, line 68\n            // setlimit, line 69\n            v_1 = limit - cursor;\n            // tomark, line 69\n            if (cursor < I_p1)\n            {\n                return false;\n            }\n            cursor = I_p1;\n            v_2 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_1;\n            // (, line 69\n            // [, line 69\n            ket = cursor;\n            // substring, line 69\n            among_var = find_among_b(a_4, 9);\n            if (among_var == 0)\n            {\n                limit_backward = v_2;\n                return false;\n            }\n            // ], line 69\n            bra = cursor;\n            limit_backward = v_2;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 72\n                    // not, line 72\n                    {\n                        v_3 = limit - cursor;\n                        lab0: do {\n                            // literal, line 72\n                            if (!(eq_s_b(1, \"k\")))\n                            {\n                                break lab0;\n                            }\n                            return false;\n                        } while (false);\n                        cursor = limit - v_3;\n                    }\n                    // delete, line 72\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 74\n                    // delete, line 74\n                    slice_del();\n                    // [, line 74\n                    ket = cursor;\n                    // literal, line 74\n                    if (!(eq_s_b(3, \"kse\")))\n                    {\n                        return false;\n                    }\n                    // ], line 74\n                    bra = cursor;\n                    // <-, line 74\n                    slice_from(\"ksi\");\n                    break;\n                case 3:\n                    // (, line 78\n                    // delete, line 78\n                    slice_del();\n                    break;\n                case 4:\n                    // (, line 81\n                    // among, line 81\n                    if (find_among_b(a_1, 6) == 0)\n                    {\n                        return false;\n                    }\n                    // delete, line 81\n                    slice_del();\n                    break;\n                case 5:\n                    // (, line 83\n                    // among, line 83\n                    if (find_among_b(a_2, 6) == 0)\n                    {\n                        return false;\n                    }\n                    // delete, line 84\n                    slice_del();\n                    break;\n                case 6:\n                    // (, line 86\n                    // among, line 86\n                    if (find_among_b(a_3, 2) == 0)\n                    {\n                        return false;\n                    }\n                    // delete, line 86\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09479cd2de06c67a115b7346a8e5de8af4d62e81","date":1581961081,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/FinnishStemmer#r_possessive().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/FinnishStemmer#r_possessive().mjava","sourceNew":"private boolean r_possessive() {\n  int among_var;\n  if (cursor < I_p1)\n  {\n    return false;\n  }\n  int v_2 = limit_backward;\n  limit_backward = I_p1;\n  ket = cursor;\n  among_var = find_among_b(a_4);\n  if (among_var == 0)\n  {\n    limit_backward = v_2;\n    return false;\n  }\n  bra = cursor;\n  limit_backward = v_2;\n  switch (among_var) {\n    case 1:\n      {\n        int v_3 = limit - cursor;\n        lab0: {\n          if (!(eq_s_b(\"k\")))\n          {\n            break lab0;\n          }\n          return false;\n        }\n        cursor = limit - v_3;\n      }\n      slice_del();\n      break;\n    case 2:\n      slice_del();\n      ket = cursor;\n      if (!(eq_s_b(\"kse\")))\n      {\n        return false;\n      }\n      bra = cursor;\n      slice_from(\"ksi\");\n      break;\n    case 3:\n      slice_del();\n      break;\n    case 4:\n      if (find_among_b(a_1) == 0)\n      {\n        return false;\n      }\n      slice_del();\n      break;\n    case 5:\n      if (find_among_b(a_2) == 0)\n      {\n        return false;\n      }\n      slice_del();\n      break;\n    case 6:\n      if (find_among_b(a_3) == 0)\n      {\n        return false;\n      }\n      slice_del();\n      break;\n  }\n  return true;\n}\n\n","sourceOld":"                private boolean r_possessive() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n                    // (, line 68\n                    // setlimit, line 69\n                    v_1 = limit - cursor;\n                    // tomark, line 69\n                    if (cursor < I_p1)\n                    {\n                        return false;\n                    }\n                    cursor = I_p1;\n                    v_2 = limit_backward;\n                    limit_backward = cursor;\n                    cursor = limit - v_1;\n                    // (, line 69\n                    // [, line 69\n                    ket = cursor;\n                    // substring, line 69\n                    among_var = find_among_b(a_4, 9);\n                    if (among_var == 0)\n                    {\n                        limit_backward = v_2;\n                        return false;\n                    }\n                    // ], line 69\n                    bra = cursor;\n                    limit_backward = v_2;\n                    switch(among_var) {\n                        case 0:\n                            return false;\n                        case 1:\n                            // (, line 72\n                            // not, line 72\n                            {\n                                v_3 = limit - cursor;\n                                lab0: do {\n                                    // literal, line 72\n                                    if (!(eq_s_b(1, \"k\")))\n                                    {\n                                        break lab0;\n                                    }\n                                    return false;\n                                } while (false);\n                                cursor = limit - v_3;\n                            }\n                            // delete, line 72\n                            slice_del();\n                            break;\n                        case 2:\n                            // (, line 74\n                            // delete, line 74\n                            slice_del();\n                            // [, line 74\n                            ket = cursor;\n                            // literal, line 74\n                            if (!(eq_s_b(3, \"kse\")))\n                            {\n                                return false;\n                            }\n                            // ], line 74\n                            bra = cursor;\n                            // <-, line 74\n                            slice_from(\"ksi\");\n                            break;\n                        case 3:\n                            // (, line 78\n                            // delete, line 78\n                            slice_del();\n                            break;\n                        case 4:\n                            // (, line 81\n                            // among, line 81\n                            if (find_among_b(a_1, 6) == 0)\n                            {\n                                return false;\n                            }\n                            // delete, line 81\n                            slice_del();\n                            break;\n                        case 5:\n                            // (, line 83\n                            // among, line 83\n                            if (find_among_b(a_2, 6) == 0)\n                            {\n                                return false;\n                            }\n                            // delete, line 84\n                            slice_del();\n                            break;\n                        case 6:\n                            // (, line 86\n                            // among, line 86\n                            if (find_among_b(a_3, 2) == 0)\n                            {\n                                return false;\n                            }\n                            // delete, line 86\n                            slice_del();\n                            break;\n                    }\n                    return true;\n                }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["b89678825b68eccaf09e6ab71675fc0b0af1e099","b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"b6a6a9e301c12ab07b1d0428b5aad813fff317b3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["b89678825b68eccaf09e6ab71675fc0b0af1e099","b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09479cd2de06c67a115b7346a8e5de8af4d62e81"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d6f074e73200c07d54f242d3880a8da5a35ff97b","b6a6a9e301c12ab07b1d0428b5aad813fff317b3","8fd5be977c105554c6a7b68afcdbc511439723ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"b6a6a9e301c12ab07b1d0428b5aad813fff317b3":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","09479cd2de06c67a115b7346a8e5de8af4d62e81"],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}