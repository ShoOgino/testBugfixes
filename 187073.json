{"path":"lucene/core/src/java/org/apache/lucene/index/MutableFieldInfos.FieldNumberBiMap#setIfNotSet(int,String).mjava","commits":[{"id":"f6eee1e5a8555d83dd8f2f2e3c0a4ccec8e7cf9b","date":1337136355,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MutableFieldInfos.FieldNumberBiMap#setIfNotSet(int,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.FieldNumberBiMap#setIfNotSet(int,String).mjava","sourceNew":"    /**\n     * Sets the given field number and name if not yet set. \n     */\n    synchronized void setIfNotSet(int fieldNumber, String fieldName) {\n      final Integer boxedFieldNumber = Integer.valueOf(fieldNumber);\n      if (!numberToName.containsKey(boxedFieldNumber)\n          && !nameToNumber.containsKey(fieldName)) {\n        numberToName.put(boxedFieldNumber, fieldName);\n        nameToNumber.put(fieldName, boxedFieldNumber);\n      } else {\n        assert containsConsistent(boxedFieldNumber, fieldName);\n      }\n    }\n\n","sourceOld":"    /**\n     * Sets the given field number and name if not yet set. \n     */\n    synchronized void setIfNotSet(int fieldNumber, String fieldName) {\n      final Integer boxedFieldNumber = Integer.valueOf(fieldNumber);\n      if (!numberToName.containsKey(boxedFieldNumber)\n          && !nameToNumber.containsKey(fieldName)) {\n        numberToName.put(boxedFieldNumber, fieldName);\n        nameToNumber.put(fieldName, boxedFieldNumber);\n      } else {\n        assert containsConsistent(boxedFieldNumber, fieldName);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a851824c09818632c94eba41e60ef5e72e323c8e","date":1337355760,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.FieldNumberBiMap#setIfNotSet(int,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MutableFieldInfos.FieldNumberBiMap#setIfNotSet(int,String).mjava","sourceNew":"    /**\n     * Sets the given field number and name if not yet set. \n     */\n    synchronized void setIfNotSet(int fieldNumber, String fieldName) {\n      final Integer boxedFieldNumber = Integer.valueOf(fieldNumber);\n      if (!numberToName.containsKey(boxedFieldNumber)\n          && !nameToNumber.containsKey(fieldName)) {\n        numberToName.put(boxedFieldNumber, fieldName);\n        nameToNumber.put(fieldName, boxedFieldNumber);\n      } else {\n        assert containsConsistent(boxedFieldNumber, fieldName);\n      }\n    }\n\n","sourceOld":"    /**\n     * Sets the given field number and name if not yet set. \n     */\n    synchronized void setIfNotSet(int fieldNumber, String fieldName) {\n      final Integer boxedFieldNumber = Integer.valueOf(fieldNumber);\n      if (!numberToName.containsKey(boxedFieldNumber)\n          && !nameToNumber.containsKey(fieldName)) {\n        numberToName.put(boxedFieldNumber, fieldName);\n        nameToNumber.put(fieldName, boxedFieldNumber);\n      } else {\n        assert containsConsistent(boxedFieldNumber, fieldName);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a851824c09818632c94eba41e60ef5e72e323c8e":["f6eee1e5a8555d83dd8f2f2e3c0a4ccec8e7cf9b"],"f6eee1e5a8555d83dd8f2f2e3c0a4ccec8e7cf9b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f6eee1e5a8555d83dd8f2f2e3c0a4ccec8e7cf9b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a851824c09818632c94eba41e60ef5e72e323c8e":[],"f6eee1e5a8555d83dd8f2f2e3c0a4ccec8e7cf9b":["a851824c09818632c94eba41e60ef5e72e323c8e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a851824c09818632c94eba41e60ef5e72e323c8e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}