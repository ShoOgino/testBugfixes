{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest#testMissingFields().mjava","commits":[{"id":"f8c0e05ed2dea5beb7c0246a2a6e68f28595357b","date":1479136768,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest#testMissingFields().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMissingFields() throws Exception {\n\n    new UpdateRequest()\n        // Some docs with nothing at all for any of the \"interesting\" fields.\n        .add(id, \"iii1\")\n        .add(id, \"eee1\")\n        .add(id, \"aaa1\")\n        .add(id, \"ooo1\")\n\n        .add(id, \"iii2\")\n        .add(id, \"eee2\")\n        .add(id, \"aaa2\")\n        .add(id, \"ooo2\")\n\n        .add(id, \"iii3\")\n        .add(id, \"eee3\")\n        .add(id, \"aaa3\")\n        .add(id, \"ooo3\")\n\n        // Docs with values in for all of the types we want to sort on.\n\n        .add(docPairs(4, \"iii\"))\n        .add(docPairs(4, \"eee\"))\n        .add(docPairs(4, \"aaa\"))\n        .add(docPairs(4, \"ooo\"))\n\n        .add(docPairs(5, \"iii\"))\n        .add(docPairs(5, \"eee\"))\n        .add(docPairs(5, \"aaa\"))\n        .add(docPairs(5, \"ooo\"))\n\n        .add(docPairs(6, \"iii\"))\n        .add(docPairs(6, \"eee\"))\n        .add(docPairs(6, \"aaa\"))\n        .add(docPairs(6, \"ooo\"))\n\n        .add(docPairs(7, \"iii\"))\n        .add(docPairs(7, \"eee\"))\n        .add(docPairs(7, \"aaa\"))\n        .add(docPairs(7, \"ooo\"))\n\n        .add(docPairs(8, \"iii\"))\n        .add(docPairs(8, \"eee\"))\n        .add(docPairs(8, \"aaa\"))\n        .add(docPairs(8, \"ooo\"))\n\n        .commit(cluster.getSolrClient(), COLLECTION);\n\n    JettySolrRunner jetty = cluster.getJettySolrRunners().get(0);\n\n\n    String[] fields = new String[]{\"s_sing\", \"i_sing\", \"f_sing\", \"l_sing\", \"d_sing\", \"dt_sing\", \"b_sing\" };\n\n\n    for (String f : fields) {\n      checkSort(jetty, f, \"asc\", fields);\n      checkSort(jetty, f, \"desc\", fields);\n    }\n\n    checkReturnValsForEmpty(fields);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8243e301531f97de264740d6afa71de6781dd64","date":1479139589,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest#testMissingFields().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMissingFields() throws Exception {\n\n    new UpdateRequest()\n        // Some docs with nothing at all for any of the \"interesting\" fields.\n        .add(id, \"iii1\")\n        .add(id, \"eee1\")\n        .add(id, \"aaa1\")\n        .add(id, \"ooo1\")\n\n        .add(id, \"iii2\")\n        .add(id, \"eee2\")\n        .add(id, \"aaa2\")\n        .add(id, \"ooo2\")\n\n        .add(id, \"iii3\")\n        .add(id, \"eee3\")\n        .add(id, \"aaa3\")\n        .add(id, \"ooo3\")\n\n        // Docs with values in for all of the types we want to sort on.\n\n        .add(docPairs(4, \"iii\"))\n        .add(docPairs(4, \"eee\"))\n        .add(docPairs(4, \"aaa\"))\n        .add(docPairs(4, \"ooo\"))\n\n        .add(docPairs(5, \"iii\"))\n        .add(docPairs(5, \"eee\"))\n        .add(docPairs(5, \"aaa\"))\n        .add(docPairs(5, \"ooo\"))\n\n        .add(docPairs(6, \"iii\"))\n        .add(docPairs(6, \"eee\"))\n        .add(docPairs(6, \"aaa\"))\n        .add(docPairs(6, \"ooo\"))\n\n        .add(docPairs(7, \"iii\"))\n        .add(docPairs(7, \"eee\"))\n        .add(docPairs(7, \"aaa\"))\n        .add(docPairs(7, \"ooo\"))\n\n        .add(docPairs(8, \"iii\"))\n        .add(docPairs(8, \"eee\"))\n        .add(docPairs(8, \"aaa\"))\n        .add(docPairs(8, \"ooo\"))\n\n        .commit(cluster.getSolrClient(), COLLECTION);\n\n    JettySolrRunner jetty = cluster.getJettySolrRunners().get(0);\n\n\n    String[] fields = new String[]{\"s_sing\", \"i_sing\", \"f_sing\", \"l_sing\", \"d_sing\", \"dt_sing\", \"b_sing\" };\n\n\n    for (String f : fields) {\n      checkSort(jetty, f, \"asc\", fields);\n      checkSort(jetty, f, \"desc\", fields);\n    }\n\n    checkReturnValsForEmpty(fields);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8c969f15cd04d31e520319c619a445ae21f02d72","date":1479263638,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest#testMissingFields().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest#testMissingFields().mjava","sourceNew":"  @Test\n  public void testMissingFields() throws Exception {\n\n    new UpdateRequest()\n        // Some docs with nothing at all for any of the \"interesting\" fields.\n        .add(id, \"iii1\")\n        .add(id, \"eee1\")\n        .add(id, \"aaa1\")\n        .add(id, \"ooo1\")\n\n        .add(id, \"iii2\")\n        .add(id, \"eee2\")\n        .add(id, \"aaa2\")\n        .add(id, \"ooo2\")\n\n        .add(id, \"iii3\")\n        .add(id, \"eee3\")\n        .add(id, \"aaa3\")\n        .add(id, \"ooo3\")\n\n        // Docs with values in for all of the types we want to sort on.\n\n        .add(docPairs(4, \"iii\"))\n        .add(docPairs(4, \"eee\"))\n        .add(docPairs(4, \"aaa\"))\n        .add(docPairs(4, \"ooo\"))\n\n        .add(docPairs(5, \"iii\"))\n        .add(docPairs(5, \"eee\"))\n        .add(docPairs(5, \"aaa\"))\n        .add(docPairs(5, \"ooo\"))\n\n        .add(docPairs(6, \"iii\"))\n        .add(docPairs(6, \"eee\"))\n        .add(docPairs(6, \"aaa\"))\n        .add(docPairs(6, \"ooo\"))\n\n        .add(docPairs(7, \"iii\"))\n        .add(docPairs(7, \"eee\"))\n        .add(docPairs(7, \"aaa\"))\n        .add(docPairs(7, \"ooo\"))\n\n        .add(docPairs(8, \"iii\"))\n        .add(docPairs(8, \"eee\"))\n        .add(docPairs(8, \"aaa\"))\n        .add(docPairs(8, \"ooo\"))\n\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    JettySolrRunner jetty = cluster.getJettySolrRunners().get(0);\n\n\n    String[] fields = new String[]{\"s_sing\", \"i_sing\", \"f_sing\", \"l_sing\", \"d_sing\", \"dt_sing\", \"b_sing\" };\n\n\n    for (String f : fields) {\n      checkSort(jetty, f, \"asc\", fields);\n      checkSort(jetty, f, \"desc\", fields);\n    }\n\n    checkReturnValsForEmpty(fields);\n\n  }\n\n","sourceOld":"  @Test\n  public void testMissingFields() throws Exception {\n\n    new UpdateRequest()\n        // Some docs with nothing at all for any of the \"interesting\" fields.\n        .add(id, \"iii1\")\n        .add(id, \"eee1\")\n        .add(id, \"aaa1\")\n        .add(id, \"ooo1\")\n\n        .add(id, \"iii2\")\n        .add(id, \"eee2\")\n        .add(id, \"aaa2\")\n        .add(id, \"ooo2\")\n\n        .add(id, \"iii3\")\n        .add(id, \"eee3\")\n        .add(id, \"aaa3\")\n        .add(id, \"ooo3\")\n\n        // Docs with values in for all of the types we want to sort on.\n\n        .add(docPairs(4, \"iii\"))\n        .add(docPairs(4, \"eee\"))\n        .add(docPairs(4, \"aaa\"))\n        .add(docPairs(4, \"ooo\"))\n\n        .add(docPairs(5, \"iii\"))\n        .add(docPairs(5, \"eee\"))\n        .add(docPairs(5, \"aaa\"))\n        .add(docPairs(5, \"ooo\"))\n\n        .add(docPairs(6, \"iii\"))\n        .add(docPairs(6, \"eee\"))\n        .add(docPairs(6, \"aaa\"))\n        .add(docPairs(6, \"ooo\"))\n\n        .add(docPairs(7, \"iii\"))\n        .add(docPairs(7, \"eee\"))\n        .add(docPairs(7, \"aaa\"))\n        .add(docPairs(7, \"ooo\"))\n\n        .add(docPairs(8, \"iii\"))\n        .add(docPairs(8, \"eee\"))\n        .add(docPairs(8, \"aaa\"))\n        .add(docPairs(8, \"ooo\"))\n\n        .commit(cluster.getSolrClient(), COLLECTION);\n\n    JettySolrRunner jetty = cluster.getJettySolrRunners().get(0);\n\n\n    String[] fields = new String[]{\"s_sing\", \"i_sing\", \"f_sing\", \"l_sing\", \"d_sing\", \"dt_sing\", \"b_sing\" };\n\n\n    for (String f : fields) {\n      checkSort(jetty, f, \"asc\", fields);\n      checkSort(jetty, f, \"desc\", fields);\n    }\n\n    checkReturnValsForEmpty(fields);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a1ef55e1fff7ff44354432770ad8bc19be1fcc75","date":1479266056,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest#testMissingFields().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest#testMissingFields().mjava","sourceNew":"  @Test\n  public void testMissingFields() throws Exception {\n\n    new UpdateRequest()\n        // Some docs with nothing at all for any of the \"interesting\" fields.\n        .add(id, \"iii1\")\n        .add(id, \"eee1\")\n        .add(id, \"aaa1\")\n        .add(id, \"ooo1\")\n\n        .add(id, \"iii2\")\n        .add(id, \"eee2\")\n        .add(id, \"aaa2\")\n        .add(id, \"ooo2\")\n\n        .add(id, \"iii3\")\n        .add(id, \"eee3\")\n        .add(id, \"aaa3\")\n        .add(id, \"ooo3\")\n\n        // Docs with values in for all of the types we want to sort on.\n\n        .add(docPairs(4, \"iii\"))\n        .add(docPairs(4, \"eee\"))\n        .add(docPairs(4, \"aaa\"))\n        .add(docPairs(4, \"ooo\"))\n\n        .add(docPairs(5, \"iii\"))\n        .add(docPairs(5, \"eee\"))\n        .add(docPairs(5, \"aaa\"))\n        .add(docPairs(5, \"ooo\"))\n\n        .add(docPairs(6, \"iii\"))\n        .add(docPairs(6, \"eee\"))\n        .add(docPairs(6, \"aaa\"))\n        .add(docPairs(6, \"ooo\"))\n\n        .add(docPairs(7, \"iii\"))\n        .add(docPairs(7, \"eee\"))\n        .add(docPairs(7, \"aaa\"))\n        .add(docPairs(7, \"ooo\"))\n\n        .add(docPairs(8, \"iii\"))\n        .add(docPairs(8, \"eee\"))\n        .add(docPairs(8, \"aaa\"))\n        .add(docPairs(8, \"ooo\"))\n\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    JettySolrRunner jetty = cluster.getJettySolrRunners().get(0);\n\n\n    String[] fields = new String[]{\"s_sing\", \"i_sing\", \"f_sing\", \"l_sing\", \"d_sing\", \"dt_sing\", \"b_sing\" };\n\n\n    for (String f : fields) {\n      checkSort(jetty, f, \"asc\", fields);\n      checkSort(jetty, f, \"desc\", fields);\n    }\n\n    checkReturnValsForEmpty(fields);\n\n  }\n\n","sourceOld":"  @Test\n  public void testMissingFields() throws Exception {\n\n    new UpdateRequest()\n        // Some docs with nothing at all for any of the \"interesting\" fields.\n        .add(id, \"iii1\")\n        .add(id, \"eee1\")\n        .add(id, \"aaa1\")\n        .add(id, \"ooo1\")\n\n        .add(id, \"iii2\")\n        .add(id, \"eee2\")\n        .add(id, \"aaa2\")\n        .add(id, \"ooo2\")\n\n        .add(id, \"iii3\")\n        .add(id, \"eee3\")\n        .add(id, \"aaa3\")\n        .add(id, \"ooo3\")\n\n        // Docs with values in for all of the types we want to sort on.\n\n        .add(docPairs(4, \"iii\"))\n        .add(docPairs(4, \"eee\"))\n        .add(docPairs(4, \"aaa\"))\n        .add(docPairs(4, \"ooo\"))\n\n        .add(docPairs(5, \"iii\"))\n        .add(docPairs(5, \"eee\"))\n        .add(docPairs(5, \"aaa\"))\n        .add(docPairs(5, \"ooo\"))\n\n        .add(docPairs(6, \"iii\"))\n        .add(docPairs(6, \"eee\"))\n        .add(docPairs(6, \"aaa\"))\n        .add(docPairs(6, \"ooo\"))\n\n        .add(docPairs(7, \"iii\"))\n        .add(docPairs(7, \"eee\"))\n        .add(docPairs(7, \"aaa\"))\n        .add(docPairs(7, \"ooo\"))\n\n        .add(docPairs(8, \"iii\"))\n        .add(docPairs(8, \"eee\"))\n        .add(docPairs(8, \"aaa\"))\n        .add(docPairs(8, \"ooo\"))\n\n        .commit(cluster.getSolrClient(), COLLECTION);\n\n    JettySolrRunner jetty = cluster.getJettySolrRunners().get(0);\n\n\n    String[] fields = new String[]{\"s_sing\", \"i_sing\", \"f_sing\", \"l_sing\", \"d_sing\", \"dt_sing\", \"b_sing\" };\n\n\n    for (String f : fields) {\n      checkSort(jetty, f, \"asc\", fields);\n      checkSort(jetty, f, \"desc\", fields);\n    }\n\n    checkReturnValsForEmpty(fields);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c8243e301531f97de264740d6afa71de6781dd64":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f8c0e05ed2dea5beb7c0246a2a6e68f28595357b"],"f8c0e05ed2dea5beb7c0246a2a6e68f28595357b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a1ef55e1fff7ff44354432770ad8bc19be1fcc75":["c8243e301531f97de264740d6afa71de6781dd64","8c969f15cd04d31e520319c619a445ae21f02d72"],"8c969f15cd04d31e520319c619a445ae21f02d72":["f8c0e05ed2dea5beb7c0246a2a6e68f28595357b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8c969f15cd04d31e520319c619a445ae21f02d72"]},"commit2Childs":{"c8243e301531f97de264740d6afa71de6781dd64":["a1ef55e1fff7ff44354432770ad8bc19be1fcc75"],"f8c0e05ed2dea5beb7c0246a2a6e68f28595357b":["c8243e301531f97de264740d6afa71de6781dd64","8c969f15cd04d31e520319c619a445ae21f02d72"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c8243e301531f97de264740d6afa71de6781dd64","f8c0e05ed2dea5beb7c0246a2a6e68f28595357b"],"a1ef55e1fff7ff44354432770ad8bc19be1fcc75":[],"8c969f15cd04d31e520319c619a445ae21f02d72":["a1ef55e1fff7ff44354432770ad8bc19be1fcc75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a1ef55e1fff7ff44354432770ad8bc19be1fcc75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}