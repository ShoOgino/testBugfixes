{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextBKDWriter.OneDimensionBKDWriter#OneDimensionBKDWriter(IndexOutput).mjava","commits":[{"id":"9fc0d60683b47b5d922124c31f57c8b34734f9e6","date":1480846684,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextBKDWriter.OneDimensionBKDWriter#OneDimensionBKDWriter(IndexOutput).mjava","pathOld":"/dev/null","sourceNew":"    OneDimensionBKDWriter(IndexOutput out) {\n      if (numDims != 1) {\n        throw new UnsupportedOperationException(\"numDims must be 1 but got \" + numDims);\n      }\n      if (pointCount != 0) {\n        throw new IllegalStateException(\"cannot mix add and merge\");\n      }\n\n      // Catch user silliness:\n      if (heapPointWriter == null && tempInput == null) {\n        throw new IllegalStateException(\"already finished\");\n      }\n\n      // Mark that we already finished:\n      heapPointWriter = null;\n\n      this.out = out;\n\n      lastPackedValue = new byte[packedBytesLength];\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9856095f7afb5a607bf5e65077615ed91273508c","date":1481837697,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextBKDWriter.OneDimensionBKDWriter#OneDimensionBKDWriter(IndexOutput).mjava","pathOld":"/dev/null","sourceNew":"    OneDimensionBKDWriter(IndexOutput out) {\n      if (numDims != 1) {\n        throw new UnsupportedOperationException(\"numDims must be 1 but got \" + numDims);\n      }\n      if (pointCount != 0) {\n        throw new IllegalStateException(\"cannot mix add and merge\");\n      }\n\n      // Catch user silliness:\n      if (heapPointWriter == null && tempInput == null) {\n        throw new IllegalStateException(\"already finished\");\n      }\n\n      // Mark that we already finished:\n      heapPointWriter = null;\n\n      this.out = out;\n\n      lastPackedValue = new byte[packedBytesLength];\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6652c943595e92c187ee904c382863013eae28f","date":1539042663,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextBKDWriter.OneDimensionBKDWriter#OneDimensionBKDWriter(IndexOutput).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextBKDWriter.OneDimensionBKDWriter#OneDimensionBKDWriter(IndexOutput).mjava","sourceNew":"    OneDimensionBKDWriter(IndexOutput out) {\n      if (numIndexDims != 1) {\n        throw new UnsupportedOperationException(\"numIndexDims must be 1 but got \" + numIndexDims);\n      }\n      if (pointCount != 0) {\n        throw new IllegalStateException(\"cannot mix add and merge\");\n      }\n\n      // Catch user silliness:\n      if (heapPointWriter == null && tempInput == null) {\n        throw new IllegalStateException(\"already finished\");\n      }\n\n      // Mark that we already finished:\n      heapPointWriter = null;\n\n      this.out = out;\n\n      lastPackedValue = new byte[packedBytesLength];\n    }\n\n","sourceOld":"    OneDimensionBKDWriter(IndexOutput out) {\n      if (numDims != 1) {\n        throw new UnsupportedOperationException(\"numDims must be 1 but got \" + numDims);\n      }\n      if (pointCount != 0) {\n        throw new IllegalStateException(\"cannot mix add and merge\");\n      }\n\n      // Catch user silliness:\n      if (heapPointWriter == null && tempInput == null) {\n        throw new IllegalStateException(\"already finished\");\n      }\n\n      // Mark that we already finished:\n      heapPointWriter = null;\n\n      this.out = out;\n\n      lastPackedValue = new byte[packedBytesLength];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"76a51551f05a6c96a115b5a656837ecc8fd0b1ff","date":1551422476,"type":3,"author":"iverase","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextBKDWriter.OneDimensionBKDWriter#OneDimensionBKDWriter(IndexOutput).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextBKDWriter.OneDimensionBKDWriter#OneDimensionBKDWriter(IndexOutput).mjava","sourceNew":"    OneDimensionBKDWriter(IndexOutput out) {\n      if (numIndexDims != 1) {\n        throw new UnsupportedOperationException(\"numIndexDims must be 1 but got \" + numIndexDims);\n      }\n      if (pointCount != 0) {\n        throw new IllegalStateException(\"cannot mix add and merge\");\n      }\n\n      // Catch user silliness:\n      if (finished == true) {\n        throw new IllegalStateException(\"already finished\");\n      }\n\n      // Mark that we already finished:\n      finished = true;\n\n      this.out = out;\n\n      lastPackedValue = new byte[packedBytesLength];\n    }\n\n","sourceOld":"    OneDimensionBKDWriter(IndexOutput out) {\n      if (numIndexDims != 1) {\n        throw new UnsupportedOperationException(\"numIndexDims must be 1 but got \" + numIndexDims);\n      }\n      if (pointCount != 0) {\n        throw new IllegalStateException(\"cannot mix add and merge\");\n      }\n\n      // Catch user silliness:\n      if (heapPointWriter == null && tempInput == null) {\n        throw new IllegalStateException(\"already finished\");\n      }\n\n      // Mark that we already finished:\n      heapPointWriter = null;\n\n      this.out = out;\n\n      lastPackedValue = new byte[packedBytesLength];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb94bf667d51f9c390c99d97afb36b7caab6b6e9","date":1599548621,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextBKDWriter.OneDimensionBKDWriter#OneDimensionBKDWriter(IndexOutput).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextBKDWriter.OneDimensionBKDWriter#OneDimensionBKDWriter(IndexOutput).mjava","sourceNew":"    OneDimensionBKDWriter(IndexOutput out) {\n      if (config.numIndexDims != 1) {\n        throw new UnsupportedOperationException(\"config.numIndexDims must be 1 but got \" + config.numIndexDims);\n      }\n      if (pointCount != 0) {\n        throw new IllegalStateException(\"cannot mix add and merge\");\n      }\n\n      // Catch user silliness:\n      if (finished == true) {\n        throw new IllegalStateException(\"already finished\");\n      }\n\n      // Mark that we already finished:\n      finished = true;\n\n      this.out = out;\n\n      lastPackedValue = new byte[config.packedBytesLength];\n    }\n\n","sourceOld":"    OneDimensionBKDWriter(IndexOutput out) {\n      if (numIndexDims != 1) {\n        throw new UnsupportedOperationException(\"numIndexDims must be 1 but got \" + numIndexDims);\n      }\n      if (pointCount != 0) {\n        throw new IllegalStateException(\"cannot mix add and merge\");\n      }\n\n      // Catch user silliness:\n      if (finished == true) {\n        throw new IllegalStateException(\"already finished\");\n      }\n\n      // Mark that we already finished:\n      finished = true;\n\n      this.out = out;\n\n      lastPackedValue = new byte[packedBytesLength];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9fc0d60683b47b5d922124c31f57c8b34734f9e6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["76a51551f05a6c96a115b5a656837ecc8fd0b1ff"],"f6652c943595e92c187ee904c382863013eae28f":["9fc0d60683b47b5d922124c31f57c8b34734f9e6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9856095f7afb5a607bf5e65077615ed91273508c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9fc0d60683b47b5d922124c31f57c8b34734f9e6"],"76a51551f05a6c96a115b5a656837ecc8fd0b1ff":["f6652c943595e92c187ee904c382863013eae28f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"]},"commit2Childs":{"9fc0d60683b47b5d922124c31f57c8b34734f9e6":["f6652c943595e92c187ee904c382863013eae28f","9856095f7afb5a607bf5e65077615ed91273508c"],"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f6652c943595e92c187ee904c382863013eae28f":["76a51551f05a6c96a115b5a656837ecc8fd0b1ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9fc0d60683b47b5d922124c31f57c8b34734f9e6","9856095f7afb5a607bf5e65077615ed91273508c"],"9856095f7afb5a607bf5e65077615ed91273508c":[],"76a51551f05a6c96a115b5a656837ecc8fd0b1ff":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9856095f7afb5a607bf5e65077615ed91273508c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}