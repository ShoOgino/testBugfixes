{"path":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#isMerged(SegmentInfos,SegmentCommitInfo,IndexWriter).mjava","commits":[{"id":"027bee21e09164c9ee230395405076d1e0034b30","date":1401521821,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#isMerged(SegmentInfos,SegmentCommitInfo,IndexWriter).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#isMerged(SegmentInfos,SegmentCommitInfo).mjava","sourceNew":"  /** Returns true if this single info is already fully merged (has no\n   *  pending deletes, is in the same dir as the\n   *  writer, and matches the current compound file setting */\n  protected final boolean isMerged(SegmentInfos infos, SegmentCommitInfo info, IndexWriter writer) throws IOException {\n    assert writer != null;\n    boolean hasDeletions = writer.numDeletedDocs(info) > 0;\n    return !hasDeletions &&\n      info.info.dir == writer.getDirectory() &&\n      useCompoundFile(infos, info, writer) == info.info.getUseCompoundFile();\n  }\n\n","sourceOld":"  /** Returns true if this single info is already fully merged (has no\n   *  pending deletes, is in the same dir as the\n   *  writer, and matches the current compound file setting */\n  protected final boolean isMerged(SegmentInfos infos, SegmentCommitInfo info) throws IOException {\n    IndexWriter w = writer.get();\n    assert w != null;\n    boolean hasDeletions = w.numDeletedDocs(info) > 0;\n    return !hasDeletions &&\n      info.info.dir == w.getDirectory() &&\n      useCompoundFile(infos, info) == info.info.getUseCompoundFile();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ae87c7be37e537f40fa3bb2c35fa4a368d12a72","date":1523453225,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#isMerged(SegmentInfos,SegmentCommitInfo,IndexWriter).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#isMerged(SegmentInfos,SegmentCommitInfo,IndexWriter).mjava","sourceNew":"  /** Returns true if this single info is already fully merged (has no\n   *  pending deletes, is in the same dir as the\n   *  writer, and matches the current compound file setting */\n  protected final boolean isMerged(SegmentInfos infos, SegmentCommitInfo info, IndexWriter writer) throws IOException {\n    assert writer != null;\n    boolean hasDeletions = writer.numDeletesToMerge(info) > 0;\n    return !hasDeletions &&\n      info.info.dir == writer.getDirectory() &&\n      useCompoundFile(infos, info, writer) == info.info.getUseCompoundFile();\n  }\n\n","sourceOld":"  /** Returns true if this single info is already fully merged (has no\n   *  pending deletes, is in the same dir as the\n   *  writer, and matches the current compound file setting */\n  protected final boolean isMerged(SegmentInfos infos, SegmentCommitInfo info, IndexWriter writer) throws IOException {\n    assert writer != null;\n    boolean hasDeletions = writer.numDeletedDocs(info) > 0;\n    return !hasDeletions &&\n      info.info.dir == writer.getDirectory() &&\n      useCompoundFile(infos, info, writer) == info.info.getUseCompoundFile();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43345f1452f9510f8aaadae6156fe0c834e7d957","date":1523483670,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#isMerged(SegmentInfos,SegmentCommitInfo,IndexWriter).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#isMerged(SegmentInfos,SegmentCommitInfo,IndexWriter).mjava","sourceNew":"  /** Returns true if this single info is already fully merged (has no\n   *  pending deletes, is in the same dir as the\n   *  writer, and matches the current compound file setting */\n  protected final boolean isMerged(SegmentInfos infos, SegmentCommitInfo info, IndexWriter writer) throws IOException {\n    assert writer != null;\n    boolean hasDeletions = writer.numDeletesToMerge(info) > 0;\n    return !hasDeletions &&\n      info.info.dir == writer.getDirectory() &&\n      useCompoundFile(infos, info, writer) == info.info.getUseCompoundFile();\n  }\n\n","sourceOld":"  /** Returns true if this single info is already fully merged (has no\n   *  pending deletes, is in the same dir as the\n   *  writer, and matches the current compound file setting */\n  protected final boolean isMerged(SegmentInfos infos, SegmentCommitInfo info, IndexWriter writer) throws IOException {\n    assert writer != null;\n    boolean hasDeletions = writer.numDeletedDocs(info) > 0;\n    return !hasDeletions &&\n      info.info.dir == writer.getDirectory() &&\n      useCompoundFile(infos, info, writer) == info.info.getUseCompoundFile();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d28f215464f76024caf026606f8ea51a5319c53","date":1527226629,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#isMerged(SegmentInfos,SegmentCommitInfo,MergeContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#isMerged(SegmentInfos,SegmentCommitInfo,IndexWriter).mjava","sourceNew":"  /** Returns true if this single info is already fully merged (has no\n   *  pending deletes, is in the same dir as the\n   *  writer, and matches the current compound file setting */\n  protected final boolean isMerged(SegmentInfos infos, SegmentCommitInfo info, MergeContext mergeContext) throws IOException {\n    assert mergeContext != null;\n    int delCount = mergeContext.numDeletesToMerge(info);\n    assert assertDelCount(delCount, info);\n    return delCount == 0 &&\n      useCompoundFile(infos, info, mergeContext) == info.info.getUseCompoundFile();\n  }\n\n","sourceOld":"  /** Returns true if this single info is already fully merged (has no\n   *  pending deletes, is in the same dir as the\n   *  writer, and matches the current compound file setting */\n  protected final boolean isMerged(SegmentInfos infos, SegmentCommitInfo info, IndexWriter writer) throws IOException {\n    assert writer != null;\n    boolean hasDeletions = writer.numDeletesToMerge(info) > 0;\n    return !hasDeletions &&\n      info.info.dir == writer.getDirectory() &&\n      useCompoundFile(infos, info, writer) == info.info.getUseCompoundFile();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ae87c7be37e537f40fa3bb2c35fa4a368d12a72":["027bee21e09164c9ee230395405076d1e0034b30"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1d28f215464f76024caf026606f8ea51a5319c53":["43345f1452f9510f8aaadae6156fe0c834e7d957"],"43345f1452f9510f8aaadae6156fe0c834e7d957":["027bee21e09164c9ee230395405076d1e0034b30","9ae87c7be37e537f40fa3bb2c35fa4a368d12a72"],"027bee21e09164c9ee230395405076d1e0034b30":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1d28f215464f76024caf026606f8ea51a5319c53"]},"commit2Childs":{"9ae87c7be37e537f40fa3bb2c35fa4a368d12a72":["43345f1452f9510f8aaadae6156fe0c834e7d957"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["027bee21e09164c9ee230395405076d1e0034b30"],"1d28f215464f76024caf026606f8ea51a5319c53":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"43345f1452f9510f8aaadae6156fe0c834e7d957":["1d28f215464f76024caf026606f8ea51a5319c53"],"027bee21e09164c9ee230395405076d1e0034b30":["9ae87c7be37e537f40fa3bb2c35fa4a368d12a72","43345f1452f9510f8aaadae6156fe0c834e7d957"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}