{"path":"lucene/core/src/java/org/apache/lucene/index/IndexReader#leaves().mjava","commits":[{"id":"c23f2c0e180f0bbbe48c94041be91c34604daf78","date":1344895396,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexReader#leaves().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the reader's leaves, or itself if this reader is Atomic.\n   */\n  public final List<AtomicReaderContext> leaves() {\n    return getTopReaderContext().leaves();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"211b1506e56f7860762fbd4698f6d1d1b57f672c","date":1344976996,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexReader#leaves().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexReader#leaves().mjava","sourceNew":"  /**\n   * Returns the reader's leaves, or itself if this reader is Atomic.\n   */\n  public final List<AtomicReaderContext> leaves() {\n    return getContext().leaves();\n  }\n\n","sourceOld":"  /**\n   * Returns the reader's leaves, or itself if this reader is Atomic.\n   */\n  public final List<AtomicReaderContext> leaves() {\n    return getTopReaderContext().leaves();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"40b1146cfcb60029fd03986ab893030aa5e72c1c","date":1345017710,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexReader#leaves().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexReader#leaves().mjava","sourceNew":"  /**\n   * Returns the reader's leaves, or itself if this reader is atomic.\n   * This is a convenience method calling {@code this.getContext().leaves()}.\n   * @see IndexReaderContext#leaves()\n   */\n  public final List<AtomicReaderContext> leaves() {\n    return getContext().leaves();\n  }\n\n","sourceOld":"  /**\n   * Returns the reader's leaves, or itself if this reader is Atomic.\n   */\n  public final List<AtomicReaderContext> leaves() {\n    return getContext().leaves();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","date":1345029782,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexReader#leaves().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the reader's leaves, or itself if this reader is atomic.\n   * This is a convenience method calling {@code this.getContext().leaves()}.\n   * @see IndexReaderContext#leaves()\n   */\n  public final List<AtomicReaderContext> leaves() {\n    return getContext().leaves();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c188105a9aae04f56c24996f98f8333fc825d2e","date":1345031914,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexReader#leaves().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the reader's leaves, or itself if this reader is atomic.\n   * This is a convenience method calling {@code this.getContext().leaves()}.\n   * @see IndexReaderContext#leaves()\n   */\n  public final List<AtomicReaderContext> leaves() {\n    return getContext().leaves();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c93396a1df03720cb20e2c2f513a6fa59b21e4c","date":1345032673,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexReader#leaves().mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns the reader's leaves, or itself if this reader is atomic.\n   * This is a convenience method calling {@code this.getContext().leaves()}.\n   * @see IndexReaderContext#leaves()\n   */\n  public final List<AtomicReaderContext> leaves() {\n    return getContext().leaves();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b05c56a41b733e02a189c48895922b5bd8c7f3d1","date":1345033322,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexReader#leaves().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the reader's leaves, or itself if this reader is atomic.\n   * This is a convenience method calling {@code this.getContext().leaves()}.\n   * @see IndexReaderContext#leaves()\n   */\n  public final List<AtomicReaderContext> leaves() {\n    return getContext().leaves();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexReader#leaves().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexReader#leaves().mjava","sourceNew":"  /**\n   * Returns the reader's leaves, or itself if this reader is atomic.\n   * This is a convenience method calling {@code this.getContext().leaves()}.\n   * @see IndexReaderContext#leaves()\n   */\n  public final List<LeafReaderContext> leaves() {\n    return getContext().leaves();\n  }\n\n","sourceOld":"  /**\n   * Returns the reader's leaves, or itself if this reader is atomic.\n   * This is a convenience method calling {@code this.getContext().leaves()}.\n   * @see IndexReaderContext#leaves()\n   */\n  public final List<AtomicReaderContext> leaves() {\n    return getContext().leaves();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c23f2c0e180f0bbbe48c94041be91c34604daf78":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3c188105a9aae04f56c24996f98f8333fc825d2e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":["1c93396a1df03720cb20e2c2f513a6fa59b21e4c","40b1146cfcb60029fd03986ab893030aa5e72c1c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1c93396a1df03720cb20e2c2f513a6fa59b21e4c":["3c188105a9aae04f56c24996f98f8333fc825d2e"],"211b1506e56f7860762fbd4698f6d1d1b57f672c":["c23f2c0e180f0bbbe48c94041be91c34604daf78"],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","40b1146cfcb60029fd03986ab893030aa5e72c1c"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["40b1146cfcb60029fd03986ab893030aa5e72c1c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"40b1146cfcb60029fd03986ab893030aa5e72c1c":["211b1506e56f7860762fbd4698f6d1d1b57f672c"]},"commit2Childs":{"c23f2c0e180f0bbbe48c94041be91c34604daf78":["211b1506e56f7860762fbd4698f6d1d1b57f672c"],"3c188105a9aae04f56c24996f98f8333fc825d2e":["1c93396a1df03720cb20e2c2f513a6fa59b21e4c"],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c23f2c0e180f0bbbe48c94041be91c34604daf78","3c188105a9aae04f56c24996f98f8333fc825d2e","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198"],"1c93396a1df03720cb20e2c2f513a6fa59b21e4c":["b05c56a41b733e02a189c48895922b5bd8c7f3d1"],"211b1506e56f7860762fbd4698f6d1d1b57f672c":["40b1146cfcb60029fd03986ab893030aa5e72c1c"],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"40b1146cfcb60029fd03986ab893030aa5e72c1c":["b05c56a41b733e02a189c48895922b5bd8c7f3d1","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","c9fb5f46e264daf5ba3860defe623a89d202dd87"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b05c56a41b733e02a189c48895922b5bd8c7f3d1","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}