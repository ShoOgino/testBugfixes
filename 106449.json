{"path":"solr/core/src/test/org/apache/solr/search/TestDocSet#getDocSet(FixedBitSet).mjava","commits":[{"id":"a69cf7f1b4cac5d5b1363402b565cd535f13e6a1","date":1392536197,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestDocSet#getDocSet(FixedBitSet).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestDocSet#getDocSet(OpenBitSet).mjava","sourceNew":"  public DocSet getDocSet(FixedBitSet bs) {\n    switch(rand.nextInt(10)) {\n      case 0: return getHashDocSet(bs);\n\n      case 1: return getBitDocSet(bs);\n      case 2: return getBitDocSet(bs);\n      case 3: return getBitDocSet(bs);\n\n      case 4: return getIntDocSet(bs);\n      case 5: return getIntDocSet(bs);\n      case 6: return getIntDocSet(bs);\n      case 7: return getIntDocSet(bs);\n      case 8: return getIntDocSet(bs);\n\n      case 9: return getDocSlice(bs);\n    }\n    return null;\n  }\n\n","sourceOld":"  public DocSet getDocSet(OpenBitSet bs) {\n    switch(rand.nextInt(10)) {\n      case 0: return getHashDocSet(bs);\n\n      case 1: return getBitDocSet(bs);\n      case 2: return getBitDocSet(bs);\n      case 3: return getBitDocSet(bs);\n\n      case 4: return getIntDocSet(bs);\n      case 5: return getIntDocSet(bs);\n      case 6: return getIntDocSet(bs);\n      case 7: return getIntDocSet(bs);\n      case 8: return getIntDocSet(bs);\n\n      case 9: return getDocSlice(bs);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92548f4520f4cb11beb9e9620b389d0b840c410f","date":1582641583,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestDocSet#getDocSet(FixedBitSet).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestDocSet#getDocSet(FixedBitSet).mjava","sourceNew":"  public DocSet getDocSet(FixedBitSet bs) {\n    switch(rand.nextInt(9)) {\n      case 0: return getHashDocSet(bs);\n\n      case 1: return getBitDocSet(bs);\n      case 2: return getBitDocSet(bs);\n      case 3: return getBitDocSet(bs);\n\n      case 4: return getIntDocSet(bs);\n      case 5: return getIntDocSet(bs);\n      case 6: return getIntDocSet(bs);\n      case 7: return getIntDocSet(bs);\n      case 8: return getIntDocSet(bs);\n    }\n    return null;\n  }\n\n","sourceOld":"  public DocSet getDocSet(FixedBitSet bs) {\n    switch(rand.nextInt(10)) {\n      case 0: return getHashDocSet(bs);\n\n      case 1: return getBitDocSet(bs);\n      case 2: return getBitDocSet(bs);\n      case 3: return getBitDocSet(bs);\n\n      case 4: return getIntDocSet(bs);\n      case 5: return getIntDocSet(bs);\n      case 6: return getIntDocSet(bs);\n      case 7: return getIntDocSet(bs);\n      case 8: return getIntDocSet(bs);\n\n      case 9: return getDocSlice(bs);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90440a2155c2b9ce30bf8fc29b1c978c58dae1e7","date":1582642100,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestDocSet#getDocSet(FixedBitSet).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestDocSet#getDocSet(FixedBitSet).mjava","sourceNew":"  public DocSet getDocSet(FixedBitSet bs) {\n    switch(rand.nextInt(9)) {\n      case 0: case 1: case 2: case 3: return getBitDocSet(bs);\n\n      case 4: return getIntDocSet(bs);\n      case 5: return getIntDocSet(bs);\n      case 6: return getIntDocSet(bs);\n      case 7: return getIntDocSet(bs);\n      case 8: return getIntDocSet(bs);\n    }\n    return null;\n  }\n\n","sourceOld":"  public DocSet getDocSet(FixedBitSet bs) {\n    switch(rand.nextInt(9)) {\n      case 0: return getHashDocSet(bs);\n\n      case 1: return getBitDocSet(bs);\n      case 2: return getBitDocSet(bs);\n      case 3: return getBitDocSet(bs);\n\n      case 4: return getIntDocSet(bs);\n      case 5: return getIntDocSet(bs);\n      case 6: return getIntDocSet(bs);\n      case 7: return getIntDocSet(bs);\n      case 8: return getIntDocSet(bs);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"92548f4520f4cb11beb9e9620b389d0b840c410f":["a69cf7f1b4cac5d5b1363402b565cd535f13e6a1"],"a69cf7f1b4cac5d5b1363402b565cd535f13e6a1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"90440a2155c2b9ce30bf8fc29b1c978c58dae1e7":["92548f4520f4cb11beb9e9620b389d0b840c410f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90440a2155c2b9ce30bf8fc29b1c978c58dae1e7"]},"commit2Childs":{"92548f4520f4cb11beb9e9620b389d0b840c410f":["90440a2155c2b9ce30bf8fc29b1c978c58dae1e7"],"a69cf7f1b4cac5d5b1363402b565cd535f13e6a1":["92548f4520f4cb11beb9e9620b389d0b840c410f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a69cf7f1b4cac5d5b1363402b565cd535f13e6a1"],"90440a2155c2b9ce30bf8fc29b1c978c58dae1e7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}