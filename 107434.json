{"path":"solr/src/java/org/apache/solr/util/SentinelIntSet#rehash().mjava","commits":[{"id":"129258e6ec9684fea792a51eda00f2e0e03c1480","date":1289770450,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/SentinelIntSet#rehash().mjava","pathOld":"/dev/null","sourceNew":"  public void rehash() {\r\n    int newSize = keys.length << 1;\r\n    startRehash(newSize);\r\n    int[] oldKeys = keys;\r\n    keys = new int[newSize];\r\n    for (int i=0; i<oldKeys.length; i++) {\r\n      int key = oldKeys[i];\r\n      if (key == emptyVal) continue;\r\n      int newSlot = getSlot(key);\r\n      keys[newSlot] = key;\r\n      moveKey(key, i, newSlot);\r\n    }\r\n    endRehash();\r\n    rehashCount = newSize - (newSize>>2);\r\n\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ab1f5591dc05f1f2b5407d809c9699f75554a32","date":1290008586,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/util/SentinelIntSet#rehash().mjava","pathOld":"/dev/null","sourceNew":"  public void rehash() {\r\n    int newSize = keys.length << 1;\r\n    startRehash(newSize);\r\n    int[] oldKeys = keys;\r\n    keys = new int[newSize];\r\n    for (int i=0; i<oldKeys.length; i++) {\r\n      int key = oldKeys[i];\r\n      if (key == emptyVal) continue;\r\n      int newSlot = getSlot(key);\r\n      keys[newSlot] = key;\r\n      moveKey(key, i, newSlot);\r\n    }\r\n    endRehash();\r\n    rehashCount = newSize - (newSize>>2);\r\n\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac089078bca24d0c3be154d7f9ef8be0b412f4ce","date":1290376804,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/SentinelIntSet#rehash().mjava","pathOld":"solr/src/java/org/apache/solr/util/SentinelIntSet#rehash().mjava","sourceNew":"  public void rehash() {\r\n    int newSize = keys.length << 1;\r\n    startRehash(newSize);\r\n    int[] oldKeys = keys;\r\n    keys = new int[newSize];\r\n    if (emptyVal != 0) Arrays.fill(keys, emptyVal);\r\n\r\n    for (int i=0; i<oldKeys.length; i++) {\r\n      int key = oldKeys[i];\r\n      if (key == emptyVal) continue;\r\n      int newSlot = getSlot(key);\r\n      keys[newSlot] = key;\r\n      moveKey(key, i, newSlot);\r\n    }\r\n    endRehash();\r\n    rehashCount = newSize - (newSize>>2);\r\n\r\n  }\r\n\n","sourceOld":"  public void rehash() {\r\n    int newSize = keys.length << 1;\r\n    startRehash(newSize);\r\n    int[] oldKeys = keys;\r\n    keys = new int[newSize];\r\n    for (int i=0; i<oldKeys.length; i++) {\r\n      int key = oldKeys[i];\r\n      if (key == emptyVal) continue;\r\n      int newSlot = getSlot(key);\r\n      keys[newSlot] = key;\r\n      moveKey(key, i, newSlot);\r\n    }\r\n    endRehash();\r\n    rehashCount = newSize - (newSize>>2);\r\n\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/util/SentinelIntSet#rehash().mjava","pathOld":"solr/src/java/org/apache/solr/util/SentinelIntSet#rehash().mjava","sourceNew":"  public void rehash() {\r\n    int newSize = keys.length << 1;\r\n    startRehash(newSize);\r\n    int[] oldKeys = keys;\r\n    keys = new int[newSize];\r\n    if (emptyVal != 0) Arrays.fill(keys, emptyVal);\r\n\r\n    for (int i=0; i<oldKeys.length; i++) {\r\n      int key = oldKeys[i];\r\n      if (key == emptyVal) continue;\r\n      int newSlot = getSlot(key);\r\n      keys[newSlot] = key;\r\n      moveKey(key, i, newSlot);\r\n    }\r\n    endRehash();\r\n    rehashCount = newSize - (newSize>>2);\r\n\r\n  }\r\n\n","sourceOld":"  public void rehash() {\r\n    int newSize = keys.length << 1;\r\n    startRehash(newSize);\r\n    int[] oldKeys = keys;\r\n    keys = new int[newSize];\r\n    for (int i=0; i<oldKeys.length; i++) {\r\n      int key = oldKeys[i];\r\n      if (key == emptyVal) continue;\r\n      int newSlot = getSlot(key);\r\n      keys[newSlot] = key;\r\n      moveKey(key, i, newSlot);\r\n    }\r\n    endRehash();\r\n    rehashCount = newSize - (newSize>>2);\r\n\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/util/SentinelIntSet#rehash().mjava","pathOld":"/dev/null","sourceNew":"  public void rehash() {\r\n    int newSize = keys.length << 1;\r\n    startRehash(newSize);\r\n    int[] oldKeys = keys;\r\n    keys = new int[newSize];\r\n    if (emptyVal != 0) Arrays.fill(keys, emptyVal);\r\n\r\n    for (int i=0; i<oldKeys.length; i++) {\r\n      int key = oldKeys[i];\r\n      if (key == emptyVal) continue;\r\n      int newSlot = getSlot(key);\r\n      keys[newSlot] = key;\r\n      moveKey(key, i, newSlot);\r\n    }\r\n    endRehash();\r\n    rehashCount = newSize - (newSize>>2);\r\n\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bed62fe6383040eaff2ec720cdc55bb1462c61da","date":1296408595,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/SentinelIntSet#rehash().mjava","pathOld":"solr/src/java/org/apache/solr/util/SentinelIntSet#rehash().mjava","sourceNew":"  public void rehash() {\n    int newSize = keys.length << 1;\n    startRehash(newSize);\n    int[] oldKeys = keys;\n    keys = new int[newSize];\n    if (emptyVal != 0) Arrays.fill(keys, emptyVal);\n\n    for (int i=0; i<oldKeys.length; i++) {\n      int key = oldKeys[i];\n      if (key == emptyVal) continue;\n      int newSlot = getSlot(key);\n      keys[newSlot] = key;\n      moveKey(key, i, newSlot);\n    }\n    endRehash();\n    rehashCount = newSize - (newSize>>2);\n\n  }\n\n","sourceOld":"  public void rehash() {\r\n    int newSize = keys.length << 1;\r\n    startRehash(newSize);\r\n    int[] oldKeys = keys;\r\n    keys = new int[newSize];\r\n    if (emptyVal != 0) Arrays.fill(keys, emptyVal);\r\n\r\n    for (int i=0; i<oldKeys.length; i++) {\r\n      int key = oldKeys[i];\r\n      if (key == emptyVal) continue;\r\n      int newSlot = getSlot(key);\r\n      keys[newSlot] = key;\r\n      moveKey(key, i, newSlot);\r\n    }\r\n    endRehash();\r\n    rehashCount = newSize - (newSize>>2);\r\n\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/util/SentinelIntSet#rehash().mjava","pathOld":"solr/src/java/org/apache/solr/util/SentinelIntSet#rehash().mjava","sourceNew":"  public void rehash() {\n    int newSize = keys.length << 1;\n    startRehash(newSize);\n    int[] oldKeys = keys;\n    keys = new int[newSize];\n    if (emptyVal != 0) Arrays.fill(keys, emptyVal);\n\n    for (int i=0; i<oldKeys.length; i++) {\n      int key = oldKeys[i];\n      if (key == emptyVal) continue;\n      int newSlot = getSlot(key);\n      keys[newSlot] = key;\n      moveKey(key, i, newSlot);\n    }\n    endRehash();\n    rehashCount = newSize - (newSize>>2);\n\n  }\n\n","sourceOld":"  public void rehash() {\r\n    int newSize = keys.length << 1;\r\n    startRehash(newSize);\r\n    int[] oldKeys = keys;\r\n    keys = new int[newSize];\r\n    if (emptyVal != 0) Arrays.fill(keys, emptyVal);\r\n\r\n    for (int i=0; i<oldKeys.length; i++) {\r\n      int key = oldKeys[i];\r\n      if (key == emptyVal) continue;\r\n      int newSlot = getSlot(key);\r\n      keys[newSlot] = key;\r\n      moveKey(key, i, newSlot);\r\n    }\r\n    endRehash();\r\n    rehashCount = newSize - (newSize>>2);\r\n\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/util/SentinelIntSet#rehash().mjava","pathOld":"solr/src/java/org/apache/solr/util/SentinelIntSet#rehash().mjava","sourceNew":"  public void rehash() {\n    int newSize = keys.length << 1;\n    startRehash(newSize);\n    int[] oldKeys = keys;\n    keys = new int[newSize];\n    if (emptyVal != 0) Arrays.fill(keys, emptyVal);\n\n    for (int i=0; i<oldKeys.length; i++) {\n      int key = oldKeys[i];\n      if (key == emptyVal) continue;\n      int newSlot = getSlot(key);\n      keys[newSlot] = key;\n      moveKey(key, i, newSlot);\n    }\n    endRehash();\n    rehashCount = newSize - (newSize>>2);\n\n  }\n\n","sourceOld":"  public void rehash() {\r\n    int newSize = keys.length << 1;\r\n    startRehash(newSize);\r\n    int[] oldKeys = keys;\r\n    keys = new int[newSize];\r\n    if (emptyVal != 0) Arrays.fill(keys, emptyVal);\r\n\r\n    for (int i=0; i<oldKeys.length; i++) {\r\n      int key = oldKeys[i];\r\n      if (key == emptyVal) continue;\r\n      int newSlot = getSlot(key);\r\n      keys[newSlot] = key;\r\n      moveKey(key, i, newSlot);\r\n    }\r\n    endRehash();\r\n    rehashCount = newSize - (newSize>>2);\r\n\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SentinelIntSet#rehash().mjava","pathOld":"solr/src/java/org/apache/solr/util/SentinelIntSet#rehash().mjava","sourceNew":"  public void rehash() {\n    int newSize = keys.length << 1;\n    startRehash(newSize);\n    int[] oldKeys = keys;\n    keys = new int[newSize];\n    if (emptyVal != 0) Arrays.fill(keys, emptyVal);\n\n    for (int i=0; i<oldKeys.length; i++) {\n      int key = oldKeys[i];\n      if (key == emptyVal) continue;\n      int newSlot = getSlot(key);\n      keys[newSlot] = key;\n      moveKey(key, i, newSlot);\n    }\n    endRehash();\n    rehashCount = newSize - (newSize>>2);\n\n  }\n\n","sourceOld":"  public void rehash() {\n    int newSize = keys.length << 1;\n    startRehash(newSize);\n    int[] oldKeys = keys;\n    keys = new int[newSize];\n    if (emptyVal != 0) Arrays.fill(keys, emptyVal);\n\n    for (int i=0; i<oldKeys.length; i++) {\n      int key = oldKeys[i];\n      if (key == emptyVal) continue;\n      int newSlot = getSlot(key);\n      keys[newSlot] = key;\n      moveKey(key, i, newSlot);\n    }\n    endRehash();\n    rehashCount = newSize - (newSize>>2);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SentinelIntSet#rehash().mjava","pathOld":"solr/src/java/org/apache/solr/util/SentinelIntSet#rehash().mjava","sourceNew":"  public void rehash() {\n    int newSize = keys.length << 1;\n    startRehash(newSize);\n    int[] oldKeys = keys;\n    keys = new int[newSize];\n    if (emptyVal != 0) Arrays.fill(keys, emptyVal);\n\n    for (int i=0; i<oldKeys.length; i++) {\n      int key = oldKeys[i];\n      if (key == emptyVal) continue;\n      int newSlot = getSlot(key);\n      keys[newSlot] = key;\n      moveKey(key, i, newSlot);\n    }\n    endRehash();\n    rehashCount = newSize - (newSize>>2);\n\n  }\n\n","sourceOld":"  public void rehash() {\n    int newSize = keys.length << 1;\n    startRehash(newSize);\n    int[] oldKeys = keys;\n    keys = new int[newSize];\n    if (emptyVal != 0) Arrays.fill(keys, emptyVal);\n\n    for (int i=0; i<oldKeys.length; i++) {\n      int key = oldKeys[i];\n      if (key == emptyVal) continue;\n      int newSlot = getSlot(key);\n      keys[newSlot] = key;\n      moveKey(key, i, newSlot);\n    }\n    endRehash();\n    rehashCount = newSize - (newSize>>2);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SentinelIntSet#rehash().mjava","pathOld":"solr/src/java/org/apache/solr/util/SentinelIntSet#rehash().mjava","sourceNew":"  public void rehash() {\n    int newSize = keys.length << 1;\n    startRehash(newSize);\n    int[] oldKeys = keys;\n    keys = new int[newSize];\n    if (emptyVal != 0) Arrays.fill(keys, emptyVal);\n\n    for (int i=0; i<oldKeys.length; i++) {\n      int key = oldKeys[i];\n      if (key == emptyVal) continue;\n      int newSlot = getSlot(key);\n      keys[newSlot] = key;\n      moveKey(key, i, newSlot);\n    }\n    endRehash();\n    rehashCount = newSize - (newSize>>2);\n\n  }\n\n","sourceOld":"  public void rehash() {\n    int newSize = keys.length << 1;\n    startRehash(newSize);\n    int[] oldKeys = keys;\n    keys = new int[newSize];\n    if (emptyVal != 0) Arrays.fill(keys, emptyVal);\n\n    for (int i=0; i<oldKeys.length; i++) {\n      int key = oldKeys[i];\n      if (key == emptyVal) continue;\n      int newSlot = getSlot(key);\n      keys[newSlot] = key;\n      moveKey(key, i, newSlot);\n    }\n    endRehash();\n    rehashCount = newSize - (newSize>>2);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ac089078bca24d0c3be154d7f9ef8be0b412f4ce":["129258e6ec9684fea792a51eda00f2e0e03c1480"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","129258e6ec9684fea792a51eda00f2e0e03c1480"],"c26f00b574427b55127e869b935845554afde1fa":["bed62fe6383040eaff2ec720cdc55bb1462c61da","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ac089078bca24d0c3be154d7f9ef8be0b412f4ce"],"bed62fe6383040eaff2ec720cdc55bb1462c61da":["ac089078bca24d0c3be154d7f9ef8be0b412f4ce"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["bed62fe6383040eaff2ec720cdc55bb1462c61da"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["3bb13258feba31ab676502787ab2e1779f129b7a","bed62fe6383040eaff2ec720cdc55bb1462c61da"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"129258e6ec9684fea792a51eda00f2e0e03c1480":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["bed62fe6383040eaff2ec720cdc55bb1462c61da"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","bed62fe6383040eaff2ec720cdc55bb1462c61da"],"3bb13258feba31ab676502787ab2e1779f129b7a":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","ac089078bca24d0c3be154d7f9ef8be0b412f4ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"ac089078bca24d0c3be154d7f9ef8be0b412f4ce":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","bed62fe6383040eaff2ec720cdc55bb1462c61da","3bb13258feba31ab676502787ab2e1779f129b7a"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["3bb13258feba31ab676502787ab2e1779f129b7a"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bed62fe6383040eaff2ec720cdc55bb1462c61da":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","129258e6ec9684fea792a51eda00f2e0e03c1480"],"129258e6ec9684fea792a51eda00f2e0e03c1480":["ac089078bca24d0c3be154d7f9ef8be0b412f4ce","9ab1f5591dc05f1f2b5407d809c9699f75554a32"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"3bb13258feba31ab676502787ab2e1779f129b7a":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}