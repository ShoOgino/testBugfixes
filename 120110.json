{"path":"src/java/org/apache/lucene/analysis/StopFilter#StopFilter(TokenStream,Hashtable).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopFilter#StopFilter(TokenStream,Hashtable).mjava","pathOld":"/dev/null","sourceNew":"  /** Constructs a filter which removes words from the input\n    TokenStream that are named in the Hashtable. */\n  public StopFilter(TokenStream in, Hashtable stopTable) {\n    input = in;\n    table = stopTable;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0498299bf8a98518151ca8e5e727f34dbfde0030","date":1039460541,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopFilter#StopFilter(TokenStream,Hashtable).mjava","pathOld":"src/java/org/apache/lucene/analysis/StopFilter#StopFilter(TokenStream,Hashtable).mjava","sourceNew":"  /** Constructs a filter which removes words from the input\n    TokenStream that are named in the Hashtable. */\n  public StopFilter(TokenStream in, Hashtable stopTable) {\n    super(in);\n    table = stopTable;\n  }\n\n","sourceOld":"  /** Constructs a filter which removes words from the input\n    TokenStream that are named in the Hashtable. */\n  public StopFilter(TokenStream in, Hashtable stopTable) {\n    input = in;\n    table = stopTable;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"01c60152412ff32dee98e5db0fc15d22d0d47c5e","date":1069984994,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopFilter#StopFilter(TokenStream,Hashtable).mjava","pathOld":"src/java/org/apache/lucene/analysis/StopFilter#StopFilter(TokenStream,Hashtable).mjava","sourceNew":"  /** Constructs a filter which removes words from the input\n   TokenStream that are named in the Hashtable. */\n  public StopFilter(TokenStream in, Hashtable stopTable) {\n    super(in);\n    table = stopTable;\n  }\n\n","sourceOld":"  /** Constructs a filter which removes words from the input\n    TokenStream that are named in the Hashtable. */\n  public StopFilter(TokenStream in, Hashtable stopTable) {\n    super(in);\n    table = stopTable;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da84b655ba7795af0018633fd31fba21fb61e9c1","date":1078877882,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopFilter#StopFilter(TokenStream,Hashtable).mjava","pathOld":"src/java/org/apache/lucene/analysis/StopFilter#StopFilter(TokenStream,Hashtable).mjava","sourceNew":"  /**\n   * Constructs a filter which removes words from the input\n   * TokenStream that are named in the Hashtable.\n   *\n   * @deprecated Use {@link #StopFilter(TokenStream, Set)} StopFilter(TokenStream,Map)} instead\n   */\n  public StopFilter(TokenStream in, Hashtable stopTable) {\n    super(in);\n    table = stopTable.keySet();\n  }\n\n","sourceOld":"  /** Constructs a filter which removes words from the input\n   TokenStream that are named in the Hashtable. */\n  public StopFilter(TokenStream in, Hashtable stopTable) {\n    super(in);\n    table = stopTable;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"525347fbeb76cbad395ad4f365bf97e2fadd4434","date":1078912797,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopFilter#StopFilter(TokenStream,Hashtable).mjava","pathOld":"src/java/org/apache/lucene/analysis/StopFilter#StopFilter(TokenStream,Hashtable).mjava","sourceNew":"  /**\n   * Constructs a filter which removes words from the input\n   * TokenStream that are named in the Hashtable.\n   *\n   * @deprecated Use {@link #StopFilter(TokenStream, Set)} StopFilter(TokenStream,Map)} instead\n   */\n  public StopFilter(TokenStream in, Hashtable stopTable) {\n    super(in);\n    stopWords = new HashSet(stopTable.keySet());\n  }\n\n","sourceOld":"  /**\n   * Constructs a filter which removes words from the input\n   * TokenStream that are named in the Hashtable.\n   *\n   * @deprecated Use {@link #StopFilter(TokenStream, Set)} StopFilter(TokenStream,Map)} instead\n   */\n  public StopFilter(TokenStream in, Hashtable stopTable) {\n    super(in);\n    table = stopTable.keySet();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74c0e6431d45fcd3a6794804d3461a5e251903c8","date":1078960657,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopFilter#StopFilter(TokenStream,Hashtable).mjava","pathOld":"src/java/org/apache/lucene/analysis/StopFilter#StopFilter(TokenStream,Hashtable).mjava","sourceNew":"  /**\n   * Constructs a filter which removes words from the input\n   * TokenStream that are named in the Hashtable.\n   *\n   * @deprecated Use {@link #StopFilter(TokenStream, HashSet)} StopFilter(TokenStream,Map)} instead\n   */\n  public StopFilter(TokenStream in, Hashtable stopTable) {\n    super(in);\n    stopWords = new HashSet(stopTable.keySet());\n  }\n\n","sourceOld":"  /**\n   * Constructs a filter which removes words from the input\n   * TokenStream that are named in the Hashtable.\n   *\n   * @deprecated Use {@link #StopFilter(TokenStream, Set)} StopFilter(TokenStream,Map)} instead\n   */\n  public StopFilter(TokenStream in, Hashtable stopTable) {\n    super(in);\n    stopWords = new HashSet(stopTable.keySet());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d14dd1f81165dd4704a95f7427639ada7c3047f7","date":1079084628,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopFilter#StopFilter(TokenStream,Hashtable).mjava","pathOld":"src/java/org/apache/lucene/analysis/StopFilter#StopFilter(TokenStream,Hashtable).mjava","sourceNew":"  /**\n   * Constructs a filter which removes words from the input\n   * TokenStream that are named in the Hashtable.\n   *\n   * @deprecated Use {@link #StopFilter(TokenStream, Set)} StopFilter(TokenStream,Map)} instead\n   */\n  public StopFilter(TokenStream in, Hashtable stopTable) {\n    super(in);\n    stopWords = new HashSet(stopTable.keySet());\n  }\n\n","sourceOld":"  /**\n   * Constructs a filter which removes words from the input\n   * TokenStream that are named in the Hashtable.\n   *\n   * @deprecated Use {@link #StopFilter(TokenStream, HashSet)} StopFilter(TokenStream,Map)} instead\n   */\n  public StopFilter(TokenStream in, Hashtable stopTable) {\n    super(in);\n    stopWords = new HashSet(stopTable.keySet());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"32cf2e30bd45f6248722d0d19a0045a712782ebc","date":1080240435,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopFilter#StopFilter(TokenStream,Hashtable).mjava","pathOld":"src/java/org/apache/lucene/analysis/StopFilter#StopFilter(TokenStream,Hashtable).mjava","sourceNew":"  /**\n   * Constructs a filter which removes words from the input\n   * TokenStream that are named in the Hashtable.\n   *\n   * @deprecated Use {@link #StopFilter(TokenStream, Set)} instead\n   */\n  public StopFilter(TokenStream in, Hashtable stopTable) {\n    super(in);\n    stopWords = new HashSet(stopTable.keySet());\n  }\n\n","sourceOld":"  /**\n   * Constructs a filter which removes words from the input\n   * TokenStream that are named in the Hashtable.\n   *\n   * @deprecated Use {@link #StopFilter(TokenStream, Set)} StopFilter(TokenStream,Map)} instead\n   */\n  public StopFilter(TokenStream in, Hashtable stopTable) {\n    super(in);\n    stopWords = new HashSet(stopTable.keySet());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"286cb6c31750c5add63b4db2aa26094a3572747f","date":1133833013,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopFilter#StopFilter(TokenStream,Hashtable).mjava","pathOld":"src/java/org/apache/lucene/analysis/StopFilter#StopFilter(TokenStream,Hashtable).mjava","sourceNew":"  /**\n   * Constructs a filter which removes words from the input\n   * TokenStream that are named in the Hashtable.\n   *\n   * @deprecated Use {@link #StopFilter(TokenStream, Set)} instead\n   */ \n  public StopFilter(TokenStream in, Hashtable stopTable) {\n    this(in, stopTable, false);\n  }\n\n","sourceOld":"  /**\n   * Constructs a filter which removes words from the input\n   * TokenStream that are named in the Hashtable.\n   *\n   * @deprecated Use {@link #StopFilter(TokenStream, Set)} instead\n   */\n  public StopFilter(TokenStream in, Hashtable stopTable) {\n    super(in);\n    stopWords = new HashSet(stopTable.keySet());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c69e98ffd83f56083b99e5443ca713cd5783a2ae","date":1142955392,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/analysis/StopFilter#StopFilter(TokenStream,Hashtable).mjava","sourceNew":null,"sourceOld":"  /**\n   * Constructs a filter which removes words from the input\n   * TokenStream that are named in the Hashtable.\n   *\n   * @deprecated Use {@link #StopFilter(TokenStream, Set)} instead\n   */ \n  public StopFilter(TokenStream in, Hashtable stopTable) {\n    this(in, stopTable, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"525347fbeb76cbad395ad4f365bf97e2fadd4434":["da84b655ba7795af0018633fd31fba21fb61e9c1"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"01c60152412ff32dee98e5db0fc15d22d0d47c5e":["0498299bf8a98518151ca8e5e727f34dbfde0030"],"0498299bf8a98518151ca8e5e727f34dbfde0030":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"286cb6c31750c5add63b4db2aa26094a3572747f":["32cf2e30bd45f6248722d0d19a0045a712782ebc"],"da84b655ba7795af0018633fd31fba21fb61e9c1":["01c60152412ff32dee98e5db0fc15d22d0d47c5e"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["286cb6c31750c5add63b4db2aa26094a3572747f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"32cf2e30bd45f6248722d0d19a0045a712782ebc":["d14dd1f81165dd4704a95f7427639ada7c3047f7"],"d14dd1f81165dd4704a95f7427639ada7c3047f7":["74c0e6431d45fcd3a6794804d3461a5e251903c8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"74c0e6431d45fcd3a6794804d3461a5e251903c8":["525347fbeb76cbad395ad4f365bf97e2fadd4434"]},"commit2Childs":{"525347fbeb76cbad395ad4f365bf97e2fadd4434":["74c0e6431d45fcd3a6794804d3461a5e251903c8"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["0498299bf8a98518151ca8e5e727f34dbfde0030"],"01c60152412ff32dee98e5db0fc15d22d0d47c5e":["da84b655ba7795af0018633fd31fba21fb61e9c1"],"0498299bf8a98518151ca8e5e727f34dbfde0030":["01c60152412ff32dee98e5db0fc15d22d0d47c5e"],"da84b655ba7795af0018633fd31fba21fb61e9c1":["525347fbeb76cbad395ad4f365bf97e2fadd4434"],"286cb6c31750c5add63b4db2aa26094a3572747f":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"32cf2e30bd45f6248722d0d19a0045a712782ebc":["286cb6c31750c5add63b4db2aa26094a3572747f"],"d14dd1f81165dd4704a95f7427639ada7c3047f7":["32cf2e30bd45f6248722d0d19a0045a712782ebc"],"74c0e6431d45fcd3a6794804d3461a5e251903c8":["d14dd1f81165dd4704a95f7427639ada7c3047f7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}