{"path":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader.SegmentFullPositionsEnum#getPayload().mjava","commits":[{"id":"a44b232879361a7ace3520b5b313094a9a35e044","date":1327356188,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader.SegmentFullPositionsEnum#getPayload().mjava","pathOld":"/dev/null","sourceNew":"    /** Returns the payload at this position, or null if no\n     *  payload was indexed. */\n    @Override\n    public BytesRef getPayload() throws IOException {\n      if (storePayloads) {\n        assert lazyProxPointer == -1;\n        assert posPendingCount < freq;\n        if (!payloadPending) {\n          throw new IOException(\"Either no payload exists at this term position or an attempt was made to load it more than once.\");\n        }\n        if (payloadLength > payload.bytes.length) {\n          payload.grow(payloadLength);\n        }\n\n        proxIn.readBytes(payload.bytes, 0, payloadLength);\n        payload.length = payloadLength;\n        payloadPending = false;\n\n        return payload;\n      } else {\n        throw new IOException(\"No payloads exist for this field!\");\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5a89676536a5d3e2e875a9eed6b3f22a63cca643","date":1327356915,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader.SegmentFullPositionsEnum#getPayload().mjava","pathOld":"/dev/null","sourceNew":"    /** Returns the payload at this position, or null if no\n     *  payload was indexed. */\n    @Override\n    public BytesRef getPayload() throws IOException {\n      if (storePayloads) {\n        assert lazyProxPointer == -1;\n        assert posPendingCount < freq;\n        if (!payloadPending) {\n          throw new IOException(\"Either no payload exists at this term position or an attempt was made to load it more than once.\");\n        }\n        if (payloadLength > payload.bytes.length) {\n          payload.grow(payloadLength);\n        }\n\n        proxIn.readBytes(payload.bytes, 0, payloadLength);\n        payload.length = payloadLength;\n        payloadPending = false;\n\n        return payload;\n      } else {\n        throw new IOException(\"No payloads exist for this field!\");\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader.SegmentFullPositionsEnum#getPayload().mjava","pathOld":"/dev/null","sourceNew":"    /** Returns the payload at this position, or null if no\n     *  payload was indexed. */\n    @Override\n    public BytesRef getPayload() throws IOException {\n      if (storePayloads) {\n        assert lazyProxPointer == -1;\n        assert posPendingCount < freq;\n        if (!payloadPending) {\n          throw new IOException(\"Either no payload exists at this term position or an attempt was made to load it more than once.\");\n        }\n        if (payloadLength > payload.bytes.length) {\n          payload.grow(payloadLength);\n        }\n\n        proxIn.readBytes(payload.bytes, 0, payloadLength);\n        payload.length = payloadLength;\n        payloadPending = false;\n\n        return payload;\n      } else {\n        throw new IOException(\"No payloads exist for this field!\");\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader.SegmentFullPositionsEnum#getPayload().mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader.SegmentFullPositionsEnum#getPayload().mjava","sourceNew":"    /** Returns the payload at this position, or null if no\n     *  payload was indexed. */\n    @Override\n    public BytesRef getPayload() throws IOException {\n      if (storePayloads) {\n        assert lazyProxPointer == -1;\n        assert posPendingCount < freq;\n        if (!payloadPending) {\n          throw new IOException(\"Either no payload exists at this term position or an attempt was made to load it more than once.\");\n        }\n        if (payloadLength > payload.bytes.length) {\n          payload.grow(payloadLength);\n        }\n\n        proxIn.readBytes(payload.bytes, 0, payloadLength);\n        payload.length = payloadLength;\n        payloadPending = false;\n\n        return payload;\n      } else {\n        throw new IOException(\"No payloads exist for this field!\");\n      }\n    }\n\n","sourceOld":"    /** Returns the payload at this position, or null if no\n     *  payload was indexed. */\n    @Override\n    public BytesRef getPayload() throws IOException {\n      if (storePayloads) {\n        assert lazyProxPointer == -1;\n        assert posPendingCount < freq;\n        if (!payloadPending) {\n          throw new IOException(\"Either no payload exists at this term position or an attempt was made to load it more than once.\");\n        }\n        if (payloadLength > payload.bytes.length) {\n          payload.grow(payloadLength);\n        }\n\n        proxIn.readBytes(payload.bytes, 0, payloadLength);\n        payload.length = payloadLength;\n        payloadPending = false;\n\n        return payload;\n      } else {\n        throw new IOException(\"No payloads exist for this field!\");\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"5a89676536a5d3e2e875a9eed6b3f22a63cca643":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a44b232879361a7ace3520b5b313094a9a35e044"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a44b232879361a7ace3520b5b313094a9a35e044"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a44b232879361a7ace3520b5b313094a9a35e044"],"a44b232879361a7ace3520b5b313094a9a35e044":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"5a89676536a5d3e2e875a9eed6b3f22a63cca643":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5a89676536a5d3e2e875a9eed6b3f22a63cca643","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","a44b232879361a7ace3520b5b313094a9a35e044"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"a44b232879361a7ace3520b5b313094a9a35e044":["5a89676536a5d3e2e875a9eed6b3f22a63cca643","3a119bbc8703c10faa329ec201c654b3a35a1e3e","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5a89676536a5d3e2e875a9eed6b3f22a63cca643","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}