{"path":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.CustomTransformer#transform(SolrDocument,int,float).mjava","commits":[{"id":"7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc","date":1440797084,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.CustomTransformer#transform(SolrDocument,int,float).mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.CustomTransformer#transform(SolrDocument,int).mjava","sourceNew":"    /**\n     * This transformer simply concatinates the values of multipe fields\n     */\n    @Override\n    public void transform(SolrDocument doc, int docid, float score) throws IOException {\n      str.setLength(0);\n      for(String s : extra) {\n        String v = getAsString(s, doc);\n        str.append(v).append('#');\n      }\n      System.out.println( \"HELLO: \"+str );\n      doc.setField(name, str.toString());\n    }\n\n","sourceOld":"    /**\n     * This transformer simply concatinates the values of multipe fields\n     */\n    @Override\n    public void transform(SolrDocument doc, int docid) throws IOException {\n      str.setLength(0);\n      for(String s : extra) {\n        String v = getAsString(s, doc);\n        str.append(v).append('#');\n      }\n      System.out.println( \"HELLO: \"+str );\n      doc.setField(name, str.toString());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0158ced21948b6626f733c1c42c1e18d94449789","date":1462994341,"type":3,"author":"Bartosz Krasi≈Ñski","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.CustomTransformer#transform(SolrDocument,int,float).mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.CustomTransformer#transform(SolrDocument,int,float).mjava","sourceNew":"    /**\n     * This transformer simply concatenates the values of multiple fields\n     */\n    @Override\n    public void transform(SolrDocument doc, int docid, float score) throws IOException {\n      str.setLength(0);\n      for(String s : extra) {\n        String v = getAsString(s, doc);\n        str.append(v).append('#');\n      }\n      System.out.println( \"HELLO: \"+str );\n      doc.setField(name, str.toString());\n    }\n\n","sourceOld":"    /**\n     * This transformer simply concatinates the values of multipe fields\n     */\n    @Override\n    public void transform(SolrDocument doc, int docid, float score) throws IOException {\n      str.setLength(0);\n      for(String s : extra) {\n        String v = getAsString(s, doc);\n        str.append(v).append('#');\n      }\n      System.out.println( \"HELLO: \"+str );\n      doc.setField(name, str.toString());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.CustomTransformer#transform(SolrDocument,int,float).mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.CustomTransformer#transform(SolrDocument,int,float).mjava","sourceNew":"    /**\n     * This transformer simply concatenates the values of multiple fields\n     */\n    @Override\n    public void transform(SolrDocument doc, int docid, float score) throws IOException {\n      str.setLength(0);\n      for(String s : extra) {\n        String v = getAsString(s, doc);\n        str.append(v).append('#');\n      }\n      System.out.println( \"HELLO: \"+str );\n      doc.setField(name, str.toString());\n    }\n\n","sourceOld":"    /**\n     * This transformer simply concatinates the values of multipe fields\n     */\n    @Override\n    public void transform(SolrDocument doc, int docid, float score) throws IOException {\n      str.setLength(0);\n      for(String s : extra) {\n        String v = getAsString(s, doc);\n        str.append(v).append('#');\n      }\n      System.out.println( \"HELLO: \"+str );\n      doc.setField(name, str.toString());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.CustomTransformer#transform(SolrDocument,int,float).mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.CustomTransformer#transform(SolrDocument,int,float).mjava","sourceNew":"    /**\n     * This transformer simply concatenates the values of multiple fields\n     */\n    @Override\n    public void transform(SolrDocument doc, int docid, float score) throws IOException {\n      str.setLength(0);\n      for(String s : extra) {\n        String v = getAsString(s, doc);\n        str.append(v).append('#');\n      }\n      System.out.println( \"HELLO: \"+str );\n      doc.setField(name, str.toString());\n    }\n\n","sourceOld":"    /**\n     * This transformer simply concatinates the values of multipe fields\n     */\n    @Override\n    public void transform(SolrDocument doc, int docid, float score) throws IOException {\n      str.setLength(0);\n      for(String s : extra) {\n        String v = getAsString(s, doc);\n        str.append(v).append('#');\n      }\n      System.out.println( \"HELLO: \"+str );\n      doc.setField(name, str.toString());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"320eec6599df6f97f2461a5d1ad49cd93b324a14","date":1503502574,"type":5,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.CustomTransformer#transform(SolrDocument,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.CustomTransformer#transform(SolrDocument,int,float).mjava","sourceNew":"    /**\n     * This transformer simply concatenates the values of multiple fields\n     */\n    @Override\n    public void transform(SolrDocument doc, int docid) throws IOException {\n      str.setLength(0);\n      for(String s : extra) {\n        String v = getAsString(s, doc);\n        str.append(v).append('#');\n      }\n      System.out.println( \"HELLO: \"+str );\n      doc.setField(name, str.toString());\n    }\n\n","sourceOld":"    /**\n     * This transformer simply concatenates the values of multiple fields\n     */\n    @Override\n    public void transform(SolrDocument doc, int docid, float score) throws IOException {\n      str.setLength(0);\n      for(String s : extra) {\n        String v = getAsString(s, doc);\n        str.append(v).append('#');\n      }\n      System.out.println( \"HELLO: \"+str );\n      doc.setField(name, str.toString());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"182384b20c064aa16998ddebe9f36e649279c5a6","date":1503596494,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.CustomTransformer#transform(SolrDocument,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.CustomTransformer#transform(SolrDocument,int,float).mjava","sourceNew":"    /**\n     * This transformer simply concatenates the values of multiple fields\n     */\n    @Override\n    public void transform(SolrDocument doc, int docid) throws IOException {\n      str.setLength(0);\n      for(String s : extra) {\n        String v = getAsString(s, doc);\n        str.append(v).append('#');\n      }\n      System.out.println( \"HELLO: \"+str );\n      doc.setField(name, str.toString());\n    }\n\n","sourceOld":"    /**\n     * This transformer simply concatenates the values of multiple fields\n     */\n    @Override\n    public void transform(SolrDocument doc, int docid, float score) throws IOException {\n      str.setLength(0);\n      for(String s : extra) {\n        String v = getAsString(s, doc);\n        str.append(v).append('#');\n      }\n      System.out.println( \"HELLO: \"+str );\n      doc.setField(name, str.toString());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":5,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.CustomTransformer#transform(SolrDocument,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.CustomTransformer#transform(SolrDocument,int,float).mjava","sourceNew":"    /**\n     * This transformer simply concatenates the values of multiple fields\n     */\n    @Override\n    public void transform(SolrDocument doc, int docid) throws IOException {\n      str.setLength(0);\n      for(String s : extra) {\n        String v = getAsString(s, doc);\n        str.append(v).append('#');\n      }\n      System.out.println( \"HELLO: \"+str );\n      doc.setField(name, str.toString());\n    }\n\n","sourceOld":"    /**\n     * This transformer simply concatenates the values of multiple fields\n     */\n    @Override\n    public void transform(SolrDocument doc, int docid, float score) throws IOException {\n      str.setLength(0);\n      for(String s : extra) {\n        String v = getAsString(s, doc);\n        str.append(v).append('#');\n      }\n      System.out.println( \"HELLO: \"+str );\n      doc.setField(name, str.toString());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["d470c8182e92b264680e34081b75e70a9f2b3c89","182384b20c064aa16998ddebe9f36e649279c5a6"],"320eec6599df6f97f2461a5d1ad49cd93b324a14":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"182384b20c064aa16998ddebe9f36e649279c5a6":["d470c8182e92b264680e34081b75e70a9f2b3c89","320eec6599df6f97f2461a5d1ad49cd93b324a14"],"7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["182384b20c064aa16998ddebe9f36e649279c5a6"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc","0158ced21948b6626f733c1c42c1e18d94449789"],"0158ced21948b6626f733c1c42c1e18d94449789":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc"]},"commit2Childs":{"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"320eec6599df6f97f2461a5d1ad49cd93b324a14":["182384b20c064aa16998ddebe9f36e649279c5a6"],"182384b20c064aa16998ddebe9f36e649279c5a6":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc"],"7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89","0158ced21948b6626f733c1c42c1e18d94449789"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","320eec6599df6f97f2461a5d1ad49cd93b324a14","182384b20c064aa16998ddebe9f36e649279c5a6","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"0158ced21948b6626f733c1c42c1e18d94449789":["d470c8182e92b264680e34081b75e70a9f2b3c89"]},"heads":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}