{"path":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestFlushWithNoMerging().mjava","commits":[{"id":"3215ae1377fc1ca1790921d75dd39cb764743b85","date":1237371771,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestFlushWithNoMerging().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","sourceNew":"    public void xxxtestFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","sourceOld":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c482d1e63332617181729a225b215c452d8a79","date":1237396006,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestFlushWithNoMerging().mjava","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","sourceOld":"    public void xxxtestFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3215ae1377fc1ca1790921d75dd39cb764743b85":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"09c482d1e63332617181729a225b215c452d8a79":["3215ae1377fc1ca1790921d75dd39cb764743b85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09c482d1e63332617181729a225b215c452d8a79"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3215ae1377fc1ca1790921d75dd39cb764743b85"],"3215ae1377fc1ca1790921d75dd39cb764743b85":["09c482d1e63332617181729a225b215c452d8a79"],"09c482d1e63332617181729a225b215c452d8a79":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}