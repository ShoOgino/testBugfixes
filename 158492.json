{"path":"solr/core/src/test/org/apache/solr/update/processor/UpdateProcessorTestBase#processAdd(String,SolrParams,SolrInputDocument).mjava","commits":[{"id":"9e2656623e57ced6c16aae473bab02019c951802","date":1342126181,"type":1,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/UpdateProcessorTestBase#processAdd(String,SolrParams,SolrInputDocument).mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/FieldMutatingUpdateProcessorTest#processAdd(String,SolrInputDocument).mjava","sourceNew":"  /**\n   * Runs a document through the specified chain, and returns the final\n   * document used when the chain is completed (NOTE: some chains may\n   * modify the document in place\n   */\n  protected SolrInputDocument processAdd(final String chain,\n                                         final SolrParams requestParams,\n                                         final SolrInputDocument docIn)\n    throws IOException {\n\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain pc = core.getUpdateProcessingChain(chain);\n    assertNotNull(\"No Chain named: \" + chain, pc);\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, requestParams);\n    try {\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.solrDoc = docIn;\n\n      UpdateRequestProcessor processor = pc.createProcessor(req, rsp);\n      processor.processAdd(cmd);\n\n      return cmd.solrDoc;\n    } finally {\n      req.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Runs a document through the specified chain, and returns the final \n   * document used when the chain is completed (NOTE: some chains may \n   * modify the document in place\n   */\n  SolrInputDocument processAdd(final String chain, \n                               final SolrInputDocument docIn) \n    throws IOException {\n\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain pc = core.getUpdateProcessingChain(chain);\n    assertNotNull(\"No Chain named: \" + chain, pc);\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n\n    SolrQueryRequest req = new LocalSolrQueryRequest\n      (core, new ModifiableSolrParams());\n    try {\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.solrDoc = docIn;\n\n      UpdateRequestProcessor processor = pc.createProcessor(req, rsp);\n      processor.processAdd(cmd);\n\n      return cmd.solrDoc;\n    } finally {\n      req.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/UpdateProcessorTestBase#processAdd(String,SolrParams,SolrInputDocument).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Runs a document through the specified chain, and returns the final\n   * document used when the chain is completed (NOTE: some chains may\n   * modify the document in place\n   */\n  protected SolrInputDocument processAdd(final String chain,\n                                         final SolrParams requestParams,\n                                         final SolrInputDocument docIn)\n    throws IOException {\n\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain pc = core.getUpdateProcessingChain(chain);\n    assertNotNull(\"No Chain named: \" + chain, pc);\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, requestParams);\n    try {\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.solrDoc = docIn;\n\n      UpdateRequestProcessor processor = pc.createProcessor(req, rsp);\n      processor.processAdd(cmd);\n\n      return cmd.solrDoc;\n    } finally {\n      req.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/UpdateProcessorTestBase#processAdd(String,SolrParams,SolrInputDocument).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Runs a document through the specified chain, and returns the final\n   * document used when the chain is completed (NOTE: some chains may\n   * modify the document in place\n   */\n  protected SolrInputDocument processAdd(final String chain,\n                                         final SolrParams requestParams,\n                                         final SolrInputDocument docIn)\n    throws IOException {\n\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain pc = core.getUpdateProcessingChain(chain);\n    assertNotNull(\"No Chain named: \" + chain, pc);\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, requestParams);\n    try {\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.solrDoc = docIn;\n\n      UpdateRequestProcessor processor = pc.createProcessor(req, rsp);\n      processor.processAdd(cmd);\n\n      return cmd.solrDoc;\n    } finally {\n      req.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca70fffb953aae4d27efbfc28758033a317f39b1","date":1396371342,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/UpdateProcessorTestBase#processAdd(String,SolrParams,SolrInputDocument).mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/UpdateProcessorTestBase#processAdd(String,SolrParams,SolrInputDocument).mjava","sourceNew":"  /**\n   * Runs a document through the specified chain, and returns the final\n   * document used when the chain is completed (NOTE: some chains may\n   * modify the document in place\n   */\n  protected SolrInputDocument processAdd(final String chain,\n                                         final SolrParams requestParams,\n                                         final SolrInputDocument docIn)\n    throws IOException {\n\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain pc = core.getUpdateProcessingChain(chain);\n    assertNotNull(\"No Chain named: \" + chain, pc);\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, requestParams);\n    try {\n      SolrRequestInfo.setRequestInfo(new SolrRequestInfo(req, rsp));\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.solrDoc = docIn;\n\n      UpdateRequestProcessor processor = pc.createProcessor(req, rsp);\n      if (null != processor) {\n        // test chain might be empty or short circuted.\n        processor.processAdd(cmd);\n      }\n\n      return cmd.solrDoc;\n    } finally {\n      SolrRequestInfo.clearRequestInfo();\n      req.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Runs a document through the specified chain, and returns the final\n   * document used when the chain is completed (NOTE: some chains may\n   * modify the document in place\n   */\n  protected SolrInputDocument processAdd(final String chain,\n                                         final SolrParams requestParams,\n                                         final SolrInputDocument docIn)\n    throws IOException {\n\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain pc = core.getUpdateProcessingChain(chain);\n    assertNotNull(\"No Chain named: \" + chain, pc);\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, requestParams);\n    try {\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.solrDoc = docIn;\n\n      UpdateRequestProcessor processor = pc.createProcessor(req, rsp);\n      processor.processAdd(cmd);\n\n      return cmd.solrDoc;\n    } finally {\n      req.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":["c8fef7b93de1912f1554371b19f6d4ef5f8c0acd"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/UpdateProcessorTestBase#processAdd(String,SolrParams,SolrInputDocument).mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/UpdateProcessorTestBase#processAdd(String,SolrParams,SolrInputDocument).mjava","sourceNew":"  /**\n   * Runs a document through the specified chain, and returns the final\n   * document used when the chain is completed (NOTE: some chains may\n   * modify the document in place\n   */\n  protected SolrInputDocument processAdd(final String chain,\n                                         final SolrParams requestParams,\n                                         final SolrInputDocument docIn)\n    throws IOException {\n\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain pc = core.getUpdateProcessingChain(chain);\n    assertNotNull(\"No Chain named: \" + chain, pc);\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, requestParams);\n    try {\n      SolrRequestInfo.setRequestInfo(new SolrRequestInfo(req, rsp));\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.solrDoc = docIn;\n\n      UpdateRequestProcessor processor = pc.createProcessor(req, rsp);\n      if (null != processor) {\n        // test chain might be empty or short circuted.\n        processor.processAdd(cmd);\n      }\n\n      return cmd.solrDoc;\n    } finally {\n      SolrRequestInfo.clearRequestInfo();\n      req.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Runs a document through the specified chain, and returns the final\n   * document used when the chain is completed (NOTE: some chains may\n   * modify the document in place\n   */\n  protected SolrInputDocument processAdd(final String chain,\n                                         final SolrParams requestParams,\n                                         final SolrInputDocument docIn)\n    throws IOException {\n\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain pc = core.getUpdateProcessingChain(chain);\n    assertNotNull(\"No Chain named: \" + chain, pc);\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, requestParams);\n    try {\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.solrDoc = docIn;\n\n      UpdateRequestProcessor processor = pc.createProcessor(req, rsp);\n      processor.processAdd(cmd);\n\n      return cmd.solrDoc;\n    } finally {\n      req.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8fef7b93de1912f1554371b19f6d4ef5f8c0acd","date":1445009862,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/UpdateProcessorTestBase#processAdd(String,SolrParams,SolrInputDocument).mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/UpdateProcessorTestBase#processAdd(String,SolrParams,SolrInputDocument).mjava","sourceNew":"  /**\n   * Runs a document through the specified chain, and returns the final\n   * document used when the chain is completed (NOTE: some chains may\n   * modify the document in place\n   */\n  protected SolrInputDocument processAdd(final String chain,\n                                         final SolrParams requestParams,\n                                         final SolrInputDocument docIn)\n    throws IOException {\n\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain pc = core.getUpdateProcessingChain(chain);\n    assertNotNull(\"No Chain named: \" + chain, pc);\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, requestParams);\n    try {\n      SolrRequestInfo.setRequestInfo(new SolrRequestInfo(req, rsp));\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.solrDoc = docIn;\n\n      UpdateRequestProcessor processor = pc.createProcessor(req, rsp);\n      if (null != processor) {\n        // test chain might be empty or short circuited.\n        processor.processAdd(cmd);\n      }\n\n      return cmd.solrDoc;\n    } finally {\n      SolrRequestInfo.clearRequestInfo();\n      req.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Runs a document through the specified chain, and returns the final\n   * document used when the chain is completed (NOTE: some chains may\n   * modify the document in place\n   */\n  protected SolrInputDocument processAdd(final String chain,\n                                         final SolrParams requestParams,\n                                         final SolrInputDocument docIn)\n    throws IOException {\n\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain pc = core.getUpdateProcessingChain(chain);\n    assertNotNull(\"No Chain named: \" + chain, pc);\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, requestParams);\n    try {\n      SolrRequestInfo.setRequestInfo(new SolrRequestInfo(req, rsp));\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.solrDoc = docIn;\n\n      UpdateRequestProcessor processor = pc.createProcessor(req, rsp);\n      if (null != processor) {\n        // test chain might be empty or short circuted.\n        processor.processAdd(cmd);\n      }\n\n      return cmd.solrDoc;\n    } finally {\n      SolrRequestInfo.clearRequestInfo();\n      req.close();\n    }\n  }\n\n","bugFix":["ca70fffb953aae4d27efbfc28758033a317f39b1"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afc5b4b2446e392448f36ae4f5a164540f2ccb65","date":1513355058,"type":5,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/update/processor/UpdateProcessorTestBase#processAdd(String,SolrParams,SolrInputDocument).mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/UpdateProcessorTestBase#processAdd(String,SolrParams,SolrInputDocument).mjava","sourceNew":"  /**\n   * Runs a document through the specified chain, and returns the final\n   * document used when the chain is completed (NOTE: some chains may\n   * modify the document in place\n   */\n  protected SolrInputDocument processAdd(final String chain,\n                                         final SolrParams requestParams,\n                                         final SolrInputDocument docIn)\n    throws IOException {\n\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain pc = core.getUpdateProcessingChain(chain);\n    assertNotNull(\"No Chain named: \" + chain, pc);\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, requestParams);\n    try {\n      SolrRequestInfo.setRequestInfo(new SolrRequestInfo(req, rsp));\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.solrDoc = docIn;\n\n      UpdateRequestProcessor processor = pc.createProcessor(req, rsp);\n      if (null != processor) {\n        // test chain might be empty or short circuited.\n        processor.processAdd(cmd);\n      }\n\n      return cmd.solrDoc;\n    } finally {\n      SolrRequestInfo.clearRequestInfo();\n      req.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Runs a document through the specified chain, and returns the final\n   * document used when the chain is completed (NOTE: some chains may\n   * modify the document in place\n   */\n  protected SolrInputDocument processAdd(final String chain,\n                                         final SolrParams requestParams,\n                                         final SolrInputDocument docIn)\n    throws IOException {\n\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain pc = core.getUpdateProcessingChain(chain);\n    assertNotNull(\"No Chain named: \" + chain, pc);\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, requestParams);\n    try {\n      SolrRequestInfo.setRequestInfo(new SolrRequestInfo(req, rsp));\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.solrDoc = docIn;\n\n      UpdateRequestProcessor processor = pc.createProcessor(req, rsp);\n      if (null != processor) {\n        // test chain might be empty or short circuited.\n        processor.processAdd(cmd);\n      }\n\n      return cmd.solrDoc;\n    } finally {\n      SolrRequestInfo.clearRequestInfo();\n      req.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c8fef7b93de1912f1554371b19f6d4ef5f8c0acd":["ca70fffb953aae4d27efbfc28758033a317f39b1"],"5eb2511ababf862ea11e10761c70ee560cd84510":["9e2656623e57ced6c16aae473bab02019c951802","ca70fffb953aae4d27efbfc28758033a317f39b1"],"9e2656623e57ced6c16aae473bab02019c951802":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9e2656623e57ced6c16aae473bab02019c951802"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9e2656623e57ced6c16aae473bab02019c951802"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ca70fffb953aae4d27efbfc28758033a317f39b1":["9e2656623e57ced6c16aae473bab02019c951802"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afc5b4b2446e392448f36ae4f5a164540f2ccb65"],"afc5b4b2446e392448f36ae4f5a164540f2ccb65":["c8fef7b93de1912f1554371b19f6d4ef5f8c0acd"]},"commit2Childs":{"c8fef7b93de1912f1554371b19f6d4ef5f8c0acd":["afc5b4b2446e392448f36ae4f5a164540f2ccb65"],"5eb2511ababf862ea11e10761c70ee560cd84510":[],"9e2656623e57ced6c16aae473bab02019c951802":["5eb2511ababf862ea11e10761c70ee560cd84510","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","ca70fffb953aae4d27efbfc28758033a317f39b1"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9e2656623e57ced6c16aae473bab02019c951802","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"ca70fffb953aae4d27efbfc28758033a317f39b1":["c8fef7b93de1912f1554371b19f6d4ef5f8c0acd","5eb2511ababf862ea11e10761c70ee560cd84510"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"afc5b4b2446e392448f36ae4f5a164540f2ccb65":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}