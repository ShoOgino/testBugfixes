{"path":"src/common/org/apache/solr/common/util/FileUtils#resolvePath(File,String).mjava","commits":[{"id":"362b99fad76af44afd5992acaddd72f365830103","date":1237270686,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/common/org/apache/solr/common/util/FileUtils#resolvePath(File,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Resolves a path relative a base directory.\n   *\n   * <p>\n   * This method does what \"new File(base,path)\" <b>Should</b> do, it it wasn't \n   * completley lame: If path is absolute, then a File for that path is returned; \n   * if it's not absoluve, then a File is returnd using \"path\" as a child \n   * of \"base\") \n   * </p>\n   */\n  public static File resolvePath(File base, String path) throws IOException {\n    File r = new File(path);\n    return r.isAbsolute() ? r : new File(base, path);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bf6e5c4bad4b479239d2e414012255c01d142c85","date":1237398635,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/common/org/apache/solr/common/util/FileUtils#resolvePath(File,String).mjava","pathOld":"src/common/org/apache/solr/common/util/FileUtils#resolvePath(File,String).mjava","sourceNew":"  /**\n   * Resolves a path relative a base directory.\n   *\n   * <p>\n   * This method does what \"new File(base,path)\" <b>Should</b> do, it wasn't \n   * completely lame: If path is absolute, then a File for that path is returned;\n   * if it's not absoluve, then a File is returnd using \"path\" as a child \n   * of \"base\") \n   * </p>\n   */\n  public static File resolvePath(File base, String path) throws IOException {\n    File r = new File(path);\n    return r.isAbsolute() ? r : new File(base, path);\n  }\n\n","sourceOld":"  /**\n   * Resolves a path relative a base directory.\n   *\n   * <p>\n   * This method does what \"new File(base,path)\" <b>Should</b> do, it it wasn't \n   * completley lame: If path is absolute, then a File for that path is returned; \n   * if it's not absoluve, then a File is returnd using \"path\" as a child \n   * of \"base\") \n   * </p>\n   */\n  public static File resolvePath(File base, String path) throws IOException {\n    File r = new File(path);\n    return r.isAbsolute() ? r : new File(base, path);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"966b6744500bb2953baa42383dbd59ff490dc216","date":1237739626,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/common/org/apache/solr/common/util/FileUtils#resolvePath(File,String).mjava","pathOld":"src/common/org/apache/solr/common/util/FileUtils#resolvePath(File,String).mjava","sourceNew":"  /**\n   * Resolves a path relative a base directory.\n   *\n   * <p>\n   * This method does what \"new File(base,path)\" <b>Should</b> do, it wasn't\n   * completely lame: If path is absolute, then a File for that path is returned;\n   * if it's not absoluve, then a File is returnd using \"path\" as a child \n   * of \"base\")\n   * </p>\n   */\n  public static File resolvePath(File base, String path) throws IOException {\n    File r = new File(path);\n    return r.isAbsolute() ? r : new File(base, path);\n  }\n\n","sourceOld":"  /**\n   * Resolves a path relative a base directory.\n   *\n   * <p>\n   * This method does what \"new File(base,path)\" <b>Should</b> do, it wasn't \n   * completely lame: If path is absolute, then a File for that path is returned;\n   * if it's not absoluve, then a File is returnd using \"path\" as a child \n   * of \"base\") \n   * </p>\n   */\n  public static File resolvePath(File base, String path) throws IOException {\n    File r = new File(path);\n    return r.isAbsolute() ? r : new File(base, path);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5dc524639edfdfa4edfb67ae889c2b6029f9314c","date":1255358511,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/common/org/apache/solr/common/util/FileUtils#resolvePath(File,String).mjava","pathOld":"src/common/org/apache/solr/common/util/FileUtils#resolvePath(File,String).mjava","sourceNew":"  /**\n   * Resolves a path relative a base directory.\n   *\n   * <p>\n   * This method does what \"new File(base,path)\" <b>Should</b> do, it wasn't\n   * completely lame: If path is absolute, then a File for that path is returned;\n   * if it's not absoluve, then a File is returnd using \"path\" as a child \n   * of \"base\")\n   * </p>\n   */\n  public static File resolvePath(File base, String path) {\n    File r = new File(path);\n    return r.isAbsolute() ? r : new File(base, path);\n  }\n\n","sourceOld":"  /**\n   * Resolves a path relative a base directory.\n   *\n   * <p>\n   * This method does what \"new File(base,path)\" <b>Should</b> do, it wasn't\n   * completely lame: If path is absolute, then a File for that path is returned;\n   * if it's not absoluve, then a File is returnd using \"path\" as a child \n   * of \"base\")\n   * </p>\n   */\n  public static File resolvePath(File base, String path) throws IOException {\n    File r = new File(path);\n    return r.isAbsolute() ? r : new File(base, path);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/common/org/apache/solr/common/util/FileUtils#resolvePath(File,String).mjava","pathOld":"src/common/org/apache/solr/common/util/FileUtils#resolvePath(File,String).mjava","sourceNew":"  /**\n   * Resolves a path relative a base directory.\n   *\n   * <p>\n   * This method does what \"new File(base,path)\" <b>Should</b> do, it wasn't\n   * completely lame: If path is absolute, then a File for that path is returned;\n   * if it's not absoluve, then a File is returnd using \"path\" as a child \n   * of \"base\")\n   * </p>\n   */\n  public static File resolvePath(File base, String path) {\n    File r = new File(path);\n    return r.isAbsolute() ? r : new File(base, path);\n  }\n\n","sourceOld":"  /**\n   * Resolves a path relative a base directory.\n   *\n   * <p>\n   * This method does what \"new File(base,path)\" <b>Should</b> do, it wasn't\n   * completely lame: If path is absolute, then a File for that path is returned;\n   * if it's not absoluve, then a File is returnd using \"path\" as a child \n   * of \"base\")\n   * </p>\n   */\n  public static File resolvePath(File base, String path) {\n    File r = new File(path);\n    return r.isAbsolute() ? r : new File(base, path);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bf6e5c4bad4b479239d2e414012255c01d142c85":["362b99fad76af44afd5992acaddd72f365830103"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"5dc524639edfdfa4edfb67ae889c2b6029f9314c":["966b6744500bb2953baa42383dbd59ff490dc216"],"ad94625fb8d088209f46650c8097196fec67f00c":["5dc524639edfdfa4edfb67ae889c2b6029f9314c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"966b6744500bb2953baa42383dbd59ff490dc216":["bf6e5c4bad4b479239d2e414012255c01d142c85"],"362b99fad76af44afd5992acaddd72f365830103":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bf6e5c4bad4b479239d2e414012255c01d142c85":["966b6744500bb2953baa42383dbd59ff490dc216"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["362b99fad76af44afd5992acaddd72f365830103"],"5dc524639edfdfa4edfb67ae889c2b6029f9314c":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"362b99fad76af44afd5992acaddd72f365830103":["bf6e5c4bad4b479239d2e414012255c01d142c85"],"966b6744500bb2953baa42383dbd59ff490dc216":["5dc524639edfdfa4edfb67ae889c2b6029f9314c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}