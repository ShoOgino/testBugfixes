{"path":"solr/contrib/velocity/src/java/org/apache/solr/response/VelocityResponseWriter#inform(SolrCore).mjava","commits":[{"id":"1936b95f78af7bc57e67df5b0de3f21a54df10af","date":1420842770,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/contrib/velocity/src/java/org/apache/solr/response/VelocityResponseWriter#inform(SolrCore).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void inform(SolrCore core) {\n    // need to leverage SolrResourceLoader, so load init.properties.file here instead of init()\n    if (initPropertiesFileName != null) {\n      InputStream is = null;\n      try {\n        velocityInitProps.load(new InputStreamReader(core.getResourceLoader().openResource(initPropertiesFileName), StandardCharsets.UTF_8));\n      } catch (IOException e) {\n        log.warn(\"Error loading \" + PROPERTIES_FILE + \" specified property file: \" + initPropertiesFileName, e);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d94deac68514af4c985eabd56d9bb95ce27467b9"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/velocity/src/java/org/apache/solr/response/VelocityResponseWriter#inform(SolrCore).mjava","pathOld":"solr/contrib/velocity/src/java/org/apache/solr/response/VelocityResponseWriter#inform(SolrCore).mjava","sourceNew":"  @Override\n  public void inform(SolrCore core) {\n    // need to leverage SolrResourceLoader, so load init.properties.file here instead of init()\n    if (initPropertiesFileName != null) {\n      try {\n        velocityInitProps.load(new InputStreamReader(core.getResourceLoader().openResource(initPropertiesFileName), StandardCharsets.UTF_8));\n      } catch (IOException e) {\n        log.warn(\"Error loading \" + PROPERTIES_FILE + \" specified property file: \" + initPropertiesFileName, e);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void inform(SolrCore core) {\n    // need to leverage SolrResourceLoader, so load init.properties.file here instead of init()\n    if (initPropertiesFileName != null) {\n      InputStream is = null;\n      try {\n        velocityInitProps.load(new InputStreamReader(core.getResourceLoader().openResource(initPropertiesFileName), StandardCharsets.UTF_8));\n      } catch (IOException e) {\n        log.warn(\"Error loading \" + PROPERTIES_FILE + \" specified property file: \" + initPropertiesFileName, e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/velocity/src/java/org/apache/solr/response/VelocityResponseWriter#inform(SolrCore).mjava","pathOld":"solr/contrib/velocity/src/java/org/apache/solr/response/VelocityResponseWriter#inform(SolrCore).mjava","sourceNew":"  @Override\n  public void inform(SolrCore core) {\n    // need to leverage SolrResourceLoader, so load init.properties.file here instead of init()\n    if (initPropertiesFileName != null) {\n      InputStream is = null;\n      try {\n        velocityInitProps.load(new InputStreamReader(core.getResourceLoader().openResource(initPropertiesFileName), StandardCharsets.UTF_8));\n      } catch (IOException e) {\n        log.warn(\"Error loading \" + PROPERTIES_FILE + \" specified property file: \" + initPropertiesFileName, e);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void inform(SolrCore core) {\n    // need to leverage SolrResourceLoader, so load init.properties.file here instead of init()\n    if (initPropertiesFileName != null) {\n      try {\n        velocityInitProps.load(new InputStreamReader(core.getResourceLoader().openResource(initPropertiesFileName), StandardCharsets.UTF_8));\n      } catch (IOException e) {\n        log.warn(\"Error loading \" + PROPERTIES_FILE + \" specified property file: \" + initPropertiesFileName, e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d94deac68514af4c985eabd56d9bb95ce27467b9","date":1576085774,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/contrib/velocity/src/java/org/apache/solr/response/VelocityResponseWriter#inform(SolrCore).mjava","pathOld":"solr/contrib/velocity/src/java/org/apache/solr/response/VelocityResponseWriter#inform(SolrCore).mjava","sourceNew":"  @Override\n  public void inform(SolrCore core) {\n    // need to leverage SolrResourceLoader, so load init.properties.file here instead of init()\n    if (initPropertiesFileName != null) {\n      InputStream is = null;\n      try {\n        velocityInitProps.load(new InputStreamReader(core.getResourceLoader().openResource(initPropertiesFileName), StandardCharsets.UTF_8));\n      } catch (IOException e) {\n        log.warn(\"Error loading \" + PROPERTIES_FILE + \" specified property file: \" + initPropertiesFileName, e);\n      }\n    }\n    }\n\n","sourceOld":"  @Override\n  public void inform(SolrCore core) {\n    // need to leverage SolrResourceLoader, so load init.properties.file here instead of init()\n    if (initPropertiesFileName != null) {\n      InputStream is = null;\n      try {\n        velocityInitProps.load(new InputStreamReader(core.getResourceLoader().openResource(initPropertiesFileName), StandardCharsets.UTF_8));\n      } catch (IOException e) {\n        log.warn(\"Error loading \" + PROPERTIES_FILE + \" specified property file: \" + initPropertiesFileName, e);\n      }\n    }\n  }\n\n","bugFix":["1936b95f78af7bc57e67df5b0de3f21a54df10af"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df724d84dab24a0cc54bec95a8680867adc7f171","date":1576156608,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/contrib/velocity/src/java/org/apache/solr/response/VelocityResponseWriter#inform(SolrCore).mjava","pathOld":"solr/contrib/velocity/src/java/org/apache/solr/response/VelocityResponseWriter#inform(SolrCore).mjava","sourceNew":"  @Override\n  public void inform(SolrCore core) {\n    // need to leverage SolrResourceLoader, so load init.properties.file here instead of init()\n    if (initPropertiesFileName != null) {\n      InputStream is = null;\n      try {\n        velocityInitProps.load(new InputStreamReader(core.getResourceLoader().openResource(initPropertiesFileName), StandardCharsets.UTF_8));\n      } catch (IOException e) {\n        log.warn(\"Error loading \" + PROPERTIES_FILE + \" specified property file: \" + initPropertiesFileName, e);\n      }\n    }\n    }\n\n","sourceOld":"  @Override\n  public void inform(SolrCore core) {\n    // need to leverage SolrResourceLoader, so load init.properties.file here instead of init()\n    if (initPropertiesFileName != null) {\n      InputStream is = null;\n      try {\n        velocityInitProps.load(new InputStreamReader(core.getResourceLoader().openResource(initPropertiesFileName), StandardCharsets.UTF_8));\n      } catch (IOException e) {\n        log.warn(\"Error loading \" + PROPERTIES_FILE + \" specified property file: \" + initPropertiesFileName, e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/velocity/src/java/org/apache/solr/response/VelocityResponseWriter#inform(SolrCore).mjava","pathOld":"solr/contrib/velocity/src/java/org/apache/solr/response/VelocityResponseWriter#inform(SolrCore).mjava","sourceNew":"  @Override\n  public void inform(SolrCore core) {\n    // need to leverage SolrResourceLoader, so load init.properties.file here instead of init()\n    if (initPropertiesFileName != null) {\n      InputStream is = null;\n      try {\n        velocityInitProps.load(new InputStreamReader(core.getResourceLoader().openResource(initPropertiesFileName), StandardCharsets.UTF_8));\n      } catch (IOException e) {\n        log.warn(\"Error loading {} specified property file: {}\", PROPERTIES_FILE, initPropertiesFileName, e);\n      }\n    }\n    }\n\n","sourceOld":"  @Override\n  public void inform(SolrCore core) {\n    // need to leverage SolrResourceLoader, so load init.properties.file here instead of init()\n    if (initPropertiesFileName != null) {\n      InputStream is = null;\n      try {\n        velocityInitProps.load(new InputStreamReader(core.getResourceLoader().openResource(initPropertiesFileName), StandardCharsets.UTF_8));\n      } catch (IOException e) {\n        log.warn(\"Error loading \" + PROPERTIES_FILE + \" specified property file: \" + initPropertiesFileName, e);\n      }\n    }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3adc4d119a7deba35b2721853853464857d9d0a9","date":1594608068,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/velocity/src/java/org/apache/solr/response/VelocityResponseWriter#inform(SolrCore).mjava","pathOld":"solr/contrib/velocity/src/java/org/apache/solr/response/VelocityResponseWriter#inform(SolrCore).mjava","sourceNew":"  @Override\n  public void inform(SolrCore core) {\n    // need to leverage SolrResourceLoader, so load init.properties.file here instead of init()\n    if (initPropertiesFileName != null) {\n      try {\n        velocityInitProps.load(new InputStreamReader(core.getResourceLoader().openResource(initPropertiesFileName), StandardCharsets.UTF_8));\n      } catch (IOException e) {\n        log.warn(\"Error loading {} specified property file: {}\", PROPERTIES_FILE, initPropertiesFileName, e);\n      }\n    }\n    }\n\n","sourceOld":"  @Override\n  public void inform(SolrCore core) {\n    // need to leverage SolrResourceLoader, so load init.properties.file here instead of init()\n    if (initPropertiesFileName != null) {\n      InputStream is = null;\n      try {\n        velocityInitProps.load(new InputStreamReader(core.getResourceLoader().openResource(initPropertiesFileName), StandardCharsets.UTF_8));\n      } catch (IOException e) {\n        log.warn(\"Error loading {} specified property file: {}\", PROPERTIES_FILE, initPropertiesFileName, e);\n      }\n    }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b659435fdb2401d91fa87bb3df798ae41a8046cd","date":1600346713,"type":4,"author":"Erik Hatcher","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/velocity/src/java/org/apache/solr/response/VelocityResponseWriter#inform(SolrCore).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void inform(SolrCore core) {\n    // need to leverage SolrResourceLoader, so load init.properties.file here instead of init()\n    if (initPropertiesFileName != null) {\n      try {\n        velocityInitProps.load(new InputStreamReader(core.getResourceLoader().openResource(initPropertiesFileName), StandardCharsets.UTF_8));\n      } catch (IOException e) {\n        log.warn(\"Error loading {} specified property file: {}\", PROPERTIES_FILE, initPropertiesFileName, e);\n      }\n    }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1936b95f78af7bc57e67df5b0de3f21a54df10af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"df724d84dab24a0cc54bec95a8680867adc7f171":["bb9c3baacabd473e8ecd6c4948aabacead49b88e","d94deac68514af4c985eabd56d9bb95ce27467b9"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["1936b95f78af7bc57e67df5b0de3f21a54df10af"],"3adc4d119a7deba35b2721853853464857d9d0a9":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b659435fdb2401d91fa87bb3df798ae41a8046cd":["3adc4d119a7deba35b2721853853464857d9d0a9"],"d94deac68514af4c985eabd56d9bb95ce27467b9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["d94deac68514af4c985eabd56d9bb95ce27467b9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b659435fdb2401d91fa87bb3df798ae41a8046cd"]},"commit2Childs":{"1936b95f78af7bc57e67df5b0de3f21a54df10af":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"df724d84dab24a0cc54bec95a8680867adc7f171":[],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"3adc4d119a7deba35b2721853853464857d9d0a9":["b659435fdb2401d91fa87bb3df798ae41a8046cd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1936b95f78af7bc57e67df5b0de3f21a54df10af"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["df724d84dab24a0cc54bec95a8680867adc7f171","d94deac68514af4c985eabd56d9bb95ce27467b9"],"d94deac68514af4c985eabd56d9bb95ce27467b9":["df724d84dab24a0cc54bec95a8680867adc7f171","a966532d92cf9ba2856f15a8140151bb6b518e4b"],"b659435fdb2401d91fa87bb3df798ae41a8046cd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["3adc4d119a7deba35b2721853853464857d9d0a9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["df724d84dab24a0cc54bec95a8680867adc7f171","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}