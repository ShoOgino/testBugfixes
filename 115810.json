{"path":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntScoreCollector#finish().mjava","commits":[{"id":"8ced52befdc8d88d90766aadbaac496f3fd0e4ee","date":1421070034,"type":1,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntScoreCollector#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingScoreCollector#finish().mjava","sourceNew":"    @Override\n    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      if(nullScore > -1) {\n        collapsedSet.set(nullDoc);\n      }\n\n      //Handle the boosted docs.\n      if(this.boostKeys != null) {\n        int s = boostKeys.size();\n        for(int i=0; i<s; i++) {\n          int key = this.boostKeys.get(i);\n          if(key != nullValue) {\n            cmap.remove(key);\n          }\n          //Add the boosted docs to the collapsedSet\n          this.collapsedSet.set(boostDocs.get(i));\n        }\n      }\n\n      Iterator<IntLongCursor> it1 = cmap.iterator();\n\n      while(it1.hasNext()) {\n        IntLongCursor cursor = it1.next();\n        int doc = (int)cursor.value;\n        collapsedSet.set(doc);\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n\n      collapseValues = contexts[currentContext].reader().getNumericDocValues(this.field);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapsedSet, 0L); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          collapseValues = contexts[currentContext].reader().getNumericDocValues(this.field);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n\n        int collapseValue = (int)collapseValues.get(contextDoc);\n        if(collapseValue != nullValue) {\n          long scoreDoc = cmap.get(collapseValue);\n          dummy.score = Float.intBitsToFloat((int)(scoreDoc>>32));\n        } else if(boosts && mergeBoost.boost(globalDoc)) {\n          //Ignore so boosted documents don't mess up the null scoring policies.\n        } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n          dummy.score = nullScore;\n        } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          dummy.score = nullScores.get(nullScoreIndex++);\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      if(nullScore > 0) {\n        this.collapsedSet.set(nullDoc);\n      }\n\n      if(this.boostOrds != null) {\n        for(int i=0; i<this.boostOrds.length; i++) {\n          ords[boostOrds[i]] = -1;\n        }\n      }\n\n      for(int i=0; i<ords.length; i++) {\n        int doc = ords[i];\n        if(doc > -1) {\n          collapsedSet.set(doc);\n        }\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapsedSet, 0L); // cost is not useful here\n      int docId = -1;\n      int nullScoreIndex = 0;\n      while((docId = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        int ord = values.getOrd(docId);\n\n        if(ord > -1) {\n          dummy.score = scores[ord];\n        } else if(this.boostDocs != null && boostDocs.containsKey(docId)) {\n          //Elevated docs don't need a score.\n          dummy.score = 0F;\n        } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n          dummy.score = nullScore;\n        } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          dummy.score = nullScores.get(nullScoreIndex++);\n        }\n\n        while(docId >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n        }\n\n        int contextDoc = docId-currentDocBase;\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0201bd24de8c2e43ffd97115399c48fbcc83836","date":1447713745,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntScoreCollector#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntScoreCollector#finish().mjava","sourceNew":"    @Override\n    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      if(nullScore > -1) {\n        collapsedSet.set(nullDoc);\n      }\n\n      //Handle the boosted docs.\n      if(this.boostKeys != null) {\n        int s = boostKeys.size();\n        for(int i=0; i<s; i++) {\n          int key = this.boostKeys.get(i);\n          if(key != nullValue) {\n            cmap.remove(key);\n          }\n          //Add the boosted docs to the collapsedSet\n          this.collapsedSet.set(boostDocs.get(i));\n        }\n      }\n\n      Iterator<IntLongCursor> it1 = cmap.iterator();\n\n      while(it1.hasNext()) {\n        IntLongCursor cursor = it1.next();\n        int doc = (int)cursor.value;\n        collapsedSet.set(doc);\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n\n      collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.field);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapsedSet, 0L); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.field);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n\n        int collapseValue = (int)collapseValues.get(contextDoc);\n        if(collapseValue != nullValue) {\n          long scoreDoc = cmap.get(collapseValue);\n          dummy.score = Float.intBitsToFloat((int)(scoreDoc>>32));\n        } else if(boosts && mergeBoost.boost(globalDoc)) {\n          //Ignore so boosted documents don't mess up the null scoring policies.\n        } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n          dummy.score = nullScore;\n        } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          dummy.score = nullScores.get(nullScoreIndex++);\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      if(nullScore > -1) {\n        collapsedSet.set(nullDoc);\n      }\n\n      //Handle the boosted docs.\n      if(this.boostKeys != null) {\n        int s = boostKeys.size();\n        for(int i=0; i<s; i++) {\n          int key = this.boostKeys.get(i);\n          if(key != nullValue) {\n            cmap.remove(key);\n          }\n          //Add the boosted docs to the collapsedSet\n          this.collapsedSet.set(boostDocs.get(i));\n        }\n      }\n\n      Iterator<IntLongCursor> it1 = cmap.iterator();\n\n      while(it1.hasNext()) {\n        IntLongCursor cursor = it1.next();\n        int doc = (int)cursor.value;\n        collapsedSet.set(doc);\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n\n      collapseValues = contexts[currentContext].reader().getNumericDocValues(this.field);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapsedSet, 0L); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          collapseValues = contexts[currentContext].reader().getNumericDocValues(this.field);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n\n        int collapseValue = (int)collapseValues.get(contextDoc);\n        if(collapseValue != nullValue) {\n          long scoreDoc = cmap.get(collapseValue);\n          dummy.score = Float.intBitsToFloat((int)(scoreDoc>>32));\n        } else if(boosts && mergeBoost.boost(globalDoc)) {\n          //Ignore so boosted documents don't mess up the null scoring policies.\n        } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n          dummy.score = nullScore;\n        } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          dummy.score = nullScores.get(nullScoreIndex++);\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntScoreCollector#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntScoreCollector#finish().mjava","sourceNew":"    @Override\n    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      if(nullScore > -1) {\n        collapsedSet.set(nullDoc);\n      }\n\n      //Handle the boosted docs.\n      if(this.boostKeys != null) {\n        int s = boostKeys.size();\n        for(int i=0; i<s; i++) {\n          int key = this.boostKeys.get(i);\n          if(key != nullValue) {\n            cmap.remove(key);\n          }\n          //Add the boosted docs to the collapsedSet\n          this.collapsedSet.set(boostDocs.get(i));\n        }\n      }\n\n      Iterator<IntLongCursor> it1 = cmap.iterator();\n\n      while(it1.hasNext()) {\n        IntLongCursor cursor = it1.next();\n        int doc = (int)cursor.value;\n        collapsedSet.set(doc);\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n\n      collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.field);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapsedSet, 0L); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.field);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n        int valuesDocID = collapseValues.docID();\n        if (valuesDocID < contextDoc) {\n          valuesDocID = collapseValues.advance(contextDoc);\n        }\n        int collapseValue;\n        if (valuesDocID == contextDoc) {\n          collapseValue = (int) collapseValues.longValue();\n        } else {\n          collapseValue = 0;\n        }\n\n        if(collapseValue != nullValue) {\n          long scoreDoc = cmap.get(collapseValue);\n          dummy.score = Float.intBitsToFloat((int)(scoreDoc>>32));\n        } else if(boosts && mergeBoost.boost(globalDoc)) {\n          //Ignore so boosted documents don't mess up the null scoring policies.\n        } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n          dummy.score = nullScore;\n        } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          dummy.score = nullScores.get(nullScoreIndex++);\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      if(nullScore > -1) {\n        collapsedSet.set(nullDoc);\n      }\n\n      //Handle the boosted docs.\n      if(this.boostKeys != null) {\n        int s = boostKeys.size();\n        for(int i=0; i<s; i++) {\n          int key = this.boostKeys.get(i);\n          if(key != nullValue) {\n            cmap.remove(key);\n          }\n          //Add the boosted docs to the collapsedSet\n          this.collapsedSet.set(boostDocs.get(i));\n        }\n      }\n\n      Iterator<IntLongCursor> it1 = cmap.iterator();\n\n      while(it1.hasNext()) {\n        IntLongCursor cursor = it1.next();\n        int doc = (int)cursor.value;\n        collapsedSet.set(doc);\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n\n      collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.field);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapsedSet, 0L); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.field);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n\n        int collapseValue = (int)collapseValues.get(contextDoc);\n        if(collapseValue != nullValue) {\n          long scoreDoc = cmap.get(collapseValue);\n          dummy.score = Float.intBitsToFloat((int)(scoreDoc>>32));\n        } else if(boosts && mergeBoost.boost(globalDoc)) {\n          //Ignore so boosted documents don't mess up the null scoring policies.\n        } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n          dummy.score = nullScore;\n        } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          dummy.score = nullScores.get(nullScoreIndex++);\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntScoreCollector#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntScoreCollector#finish().mjava","sourceNew":"    @Override\n    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      if(nullScore > -1) {\n        collapsedSet.set(nullDoc);\n      }\n\n      //Handle the boosted docs.\n      if(this.boostKeys != null) {\n        int s = boostKeys.size();\n        for(int i=0; i<s; i++) {\n          int key = this.boostKeys.get(i);\n          if(key != nullValue) {\n            cmap.remove(key);\n          }\n          //Add the boosted docs to the collapsedSet\n          this.collapsedSet.set(boostDocs.get(i));\n        }\n      }\n\n      Iterator<IntLongCursor> it1 = cmap.iterator();\n\n      while(it1.hasNext()) {\n        IntLongCursor cursor = it1.next();\n        int doc = (int)cursor.value;\n        collapsedSet.set(doc);\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n\n      collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.field);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapsedSet, 0L); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.field);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n        int valuesDocID = collapseValues.docID();\n        if (valuesDocID < contextDoc) {\n          valuesDocID = collapseValues.advance(contextDoc);\n        }\n        int collapseValue;\n        if (valuesDocID == contextDoc) {\n          collapseValue = (int) collapseValues.longValue();\n        } else {\n          collapseValue = 0;\n        }\n\n        if(collapseValue != nullValue) {\n          long scoreDoc = cmap.get(collapseValue);\n          dummy.score = Float.intBitsToFloat((int)(scoreDoc>>32));\n        } else if(boosts && mergeBoost.boost(globalDoc)) {\n          //Ignore so boosted documents don't mess up the null scoring policies.\n        } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n          dummy.score = nullScore;\n        } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          dummy.score = nullScores.get(nullScoreIndex++);\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      if(nullScore > -1) {\n        collapsedSet.set(nullDoc);\n      }\n\n      //Handle the boosted docs.\n      if(this.boostKeys != null) {\n        int s = boostKeys.size();\n        for(int i=0; i<s; i++) {\n          int key = this.boostKeys.get(i);\n          if(key != nullValue) {\n            cmap.remove(key);\n          }\n          //Add the boosted docs to the collapsedSet\n          this.collapsedSet.set(boostDocs.get(i));\n        }\n      }\n\n      Iterator<IntLongCursor> it1 = cmap.iterator();\n\n      while(it1.hasNext()) {\n        IntLongCursor cursor = it1.next();\n        int doc = (int)cursor.value;\n        collapsedSet.set(doc);\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n\n      collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.field);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapsedSet, 0L); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.field);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n\n        int collapseValue = (int)collapseValues.get(contextDoc);\n        if(collapseValue != nullValue) {\n          long scoreDoc = cmap.get(collapseValue);\n          dummy.score = Float.intBitsToFloat((int)(scoreDoc>>32));\n        } else if(boosts && mergeBoost.boost(globalDoc)) {\n          //Ignore so boosted documents don't mess up the null scoring policies.\n        } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n          dummy.score = nullScore;\n        } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          dummy.score = nullScores.get(nullScoreIndex++);\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntScoreCollector#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntScoreCollector#finish().mjava","sourceNew":"    @Override\n    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      if(nullScore > -1) {\n        collapsedSet.set(nullDoc);\n      }\n\n      //Handle the boosted docs.\n      if(this.boostKeys != null) {\n        int s = boostKeys.size();\n        for(int i=0; i<s; i++) {\n          int key = this.boostKeys.get(i);\n          if(key != nullValue) {\n            cmap.remove(key);\n          }\n          //Add the boosted docs to the collapsedSet\n          this.collapsedSet.set(boostDocs.get(i));\n        }\n      }\n\n      Iterator<IntLongCursor> it1 = cmap.iterator();\n\n      while(it1.hasNext()) {\n        IntLongCursor cursor = it1.next();\n        int doc = (int)cursor.value;\n        collapsedSet.set(doc);\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n\n      collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.field);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapsedSet, 0L); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.field);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n        int valuesDocID = collapseValues.docID();\n        if (valuesDocID < contextDoc) {\n          valuesDocID = collapseValues.advance(contextDoc);\n        }\n        int collapseValue;\n        if (valuesDocID == contextDoc) {\n          collapseValue = (int) collapseValues.longValue();\n        } else {\n          collapseValue = 0;\n        }\n\n        if(collapseValue != nullValue) {\n          long scoreDoc = cmap.get(collapseValue);\n          dummy.score = Float.intBitsToFloat((int)(scoreDoc>>32));\n        } else if(boosts && mergeBoost.boost(globalDoc)) {\n          //Ignore so boosted documents don't mess up the null scoring policies.\n        } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n          dummy.score = nullScore;\n        } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          dummy.score = nullScores.get(nullScoreIndex++);\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      if(nullScore > -1) {\n        collapsedSet.set(nullDoc);\n      }\n\n      //Handle the boosted docs.\n      if(this.boostKeys != null) {\n        int s = boostKeys.size();\n        for(int i=0; i<s; i++) {\n          int key = this.boostKeys.get(i);\n          if(key != nullValue) {\n            cmap.remove(key);\n          }\n          //Add the boosted docs to the collapsedSet\n          this.collapsedSet.set(boostDocs.get(i));\n        }\n      }\n\n      Iterator<IntLongCursor> it1 = cmap.iterator();\n\n      while(it1.hasNext()) {\n        IntLongCursor cursor = it1.next();\n        int doc = (int)cursor.value;\n        collapsedSet.set(doc);\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n\n      collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.field);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapsedSet, 0L); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.field);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n\n        int collapseValue = (int)collapseValues.get(contextDoc);\n        if(collapseValue != nullValue) {\n          long scoreDoc = cmap.get(collapseValue);\n          dummy.score = Float.intBitsToFloat((int)(scoreDoc>>32));\n        } else if(boosts && mergeBoost.boost(globalDoc)) {\n          //Ignore so boosted documents don't mess up the null scoring policies.\n        } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n          dummy.score = nullScore;\n        } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          dummy.score = nullScores.get(nullScoreIndex++);\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c62352c33f77624124d1cbf58a1291da78141f7","date":1518514846,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntScoreCollector#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntScoreCollector#finish().mjava","sourceNew":"    @Override\n    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      if(nullScore > -1) {\n        collapsedSet.set(nullDoc);\n      }\n\n      //Handle the boosted docs.\n      if(this.boostKeys != null) {\n        int s = boostKeys.size();\n        for(int i=0; i<s; i++) {\n          int key = this.boostKeys.get(i);\n          if(key != nullValue) {\n            cmap.remove(key);\n          }\n          //Add the boosted docs to the collapsedSet\n          this.collapsedSet.set(boostDocs.get(i));\n        }\n      }\n\n      Iterator<IntLongCursor> it1 = cmap.iterator();\n\n      while(it1.hasNext()) {\n        IntLongCursor cursor = it1.next();\n        int doc = (int)cursor.value;\n        collapsedSet.set(doc);\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n\n      collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.field);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapsedSet, 0L); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.field);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n        int collapseValue;\n        if (collapseValues.advanceExact(contextDoc)) {\n          collapseValue = (int) collapseValues.longValue();\n        } else {\n          collapseValue = 0;\n        }\n\n        if(collapseValue != nullValue) {\n          long scoreDoc = cmap.get(collapseValue);\n          dummy.score = Float.intBitsToFloat((int)(scoreDoc>>32));\n        } else if(boosts && mergeBoost.boost(globalDoc)) {\n          //Ignore so boosted documents don't mess up the null scoring policies.\n        } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n          dummy.score = nullScore;\n        } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          dummy.score = nullScores.get(nullScoreIndex++);\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      if(nullScore > -1) {\n        collapsedSet.set(nullDoc);\n      }\n\n      //Handle the boosted docs.\n      if(this.boostKeys != null) {\n        int s = boostKeys.size();\n        for(int i=0; i<s; i++) {\n          int key = this.boostKeys.get(i);\n          if(key != nullValue) {\n            cmap.remove(key);\n          }\n          //Add the boosted docs to the collapsedSet\n          this.collapsedSet.set(boostDocs.get(i));\n        }\n      }\n\n      Iterator<IntLongCursor> it1 = cmap.iterator();\n\n      while(it1.hasNext()) {\n        IntLongCursor cursor = it1.next();\n        int doc = (int)cursor.value;\n        collapsedSet.set(doc);\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n\n      collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.field);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapsedSet, 0L); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.field);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n        int valuesDocID = collapseValues.docID();\n        if (valuesDocID < contextDoc) {\n          valuesDocID = collapseValues.advance(contextDoc);\n        }\n        int collapseValue;\n        if (valuesDocID == contextDoc) {\n          collapseValue = (int) collapseValues.longValue();\n        } else {\n          collapseValue = 0;\n        }\n\n        if(collapseValue != nullValue) {\n          long scoreDoc = cmap.get(collapseValue);\n          dummy.score = Float.intBitsToFloat((int)(scoreDoc>>32));\n        } else if(boosts && mergeBoost.boost(globalDoc)) {\n          //Ignore so boosted documents don't mess up the null scoring policies.\n        } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n          dummy.score = nullScore;\n        } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          dummy.score = nullScores.get(nullScoreIndex++);\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bfcdec9fcf0409223f35c5ec3bc14094314941b4","date":1518533599,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntScoreCollector#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntScoreCollector#finish().mjava","sourceNew":"    @Override\n    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      if(nullScore > -1) {\n        collapsedSet.set(nullDoc);\n      }\n\n      //Handle the boosted docs.\n      if(this.boostKeys != null) {\n        int s = boostKeys.size();\n        for(int i=0; i<s; i++) {\n          int key = this.boostKeys.get(i);\n          if(key != nullValue) {\n            cmap.remove(key);\n          }\n          //Add the boosted docs to the collapsedSet\n          this.collapsedSet.set(boostDocs.get(i));\n        }\n      }\n\n      Iterator<IntLongCursor> it1 = cmap.iterator();\n\n      while(it1.hasNext()) {\n        IntLongCursor cursor = it1.next();\n        int doc = (int)cursor.value;\n        collapsedSet.set(doc);\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n\n      collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.field);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapsedSet, 0L); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.field);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n        int collapseValue;\n        if (collapseValues.advanceExact(contextDoc)) {\n          collapseValue = (int) collapseValues.longValue();\n        } else {\n          collapseValue = 0;\n        }\n\n        if(collapseValue != nullValue) {\n          long scoreDoc = cmap.get(collapseValue);\n          dummy.score = Float.intBitsToFloat((int)(scoreDoc>>32));\n        } else if(boosts && mergeBoost.boost(globalDoc)) {\n          //Ignore so boosted documents don't mess up the null scoring policies.\n        } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n          dummy.score = nullScore;\n        } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          dummy.score = nullScores.get(nullScoreIndex++);\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      if(nullScore > -1) {\n        collapsedSet.set(nullDoc);\n      }\n\n      //Handle the boosted docs.\n      if(this.boostKeys != null) {\n        int s = boostKeys.size();\n        for(int i=0; i<s; i++) {\n          int key = this.boostKeys.get(i);\n          if(key != nullValue) {\n            cmap.remove(key);\n          }\n          //Add the boosted docs to the collapsedSet\n          this.collapsedSet.set(boostDocs.get(i));\n        }\n      }\n\n      Iterator<IntLongCursor> it1 = cmap.iterator();\n\n      while(it1.hasNext()) {\n        IntLongCursor cursor = it1.next();\n        int doc = (int)cursor.value;\n        collapsedSet.set(doc);\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n\n      collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.field);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapsedSet, 0L); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.field);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n        int valuesDocID = collapseValues.docID();\n        if (valuesDocID < contextDoc) {\n          valuesDocID = collapseValues.advance(contextDoc);\n        }\n        int collapseValue;\n        if (valuesDocID == contextDoc) {\n          collapseValue = (int) collapseValues.longValue();\n        } else {\n          collapseValue = 0;\n        }\n\n        if(collapseValue != nullValue) {\n          long scoreDoc = cmap.get(collapseValue);\n          dummy.score = Float.intBitsToFloat((int)(scoreDoc>>32));\n        } else if(boosts && mergeBoost.boost(globalDoc)) {\n          //Ignore so boosted documents don't mess up the null scoring policies.\n        } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n          dummy.score = nullScore;\n        } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          dummy.score = nullScores.get(nullScoreIndex++);\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6dbd758f2776b0129f6b3641b6490ddc68d7b0f3","date":1536316907,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntScoreCollector#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntScoreCollector#finish().mjava","sourceNew":"    @Override\n    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      if(nullScore > -1) {\n        collapsedSet.set(nullDoc);\n      }\n\n      //Handle the boosted docs.\n      if(this.boostKeys != null) {\n        int s = boostKeys.size();\n        for(int i=0; i<s; i++) {\n          int key = this.boostKeys.get(i);\n          if(key != nullValue) {\n            cmap.remove(key);\n          }\n          //Add the boosted docs to the collapsedSet\n          this.collapsedSet.set(boostDocs.get(i));\n        }\n      }\n\n      Iterator<IntLongCursor> it1 = cmap.iterator();\n\n      while(it1.hasNext()) {\n        IntLongCursor cursor = it1.next();\n        int doc = (int)cursor.value;\n        collapsedSet.set(doc);\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n\n      collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.field);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      ScoreAndDoc dummy = new ScoreAndDoc();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapsedSet, 0L); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.field);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n        int collapseValue;\n        if (collapseValues.advanceExact(contextDoc)) {\n          collapseValue = (int) collapseValues.longValue();\n        } else {\n          collapseValue = 0;\n        }\n\n        if(collapseValue != nullValue) {\n          long scoreDoc = cmap.get(collapseValue);\n          dummy.score = Float.intBitsToFloat((int)(scoreDoc>>32));\n        } else if(boosts && mergeBoost.boost(globalDoc)) {\n          //Ignore so boosted documents don't mess up the null scoring policies.\n        } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n          dummy.score = nullScore;\n        } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          dummy.score = nullScores.get(nullScoreIndex++);\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      if(nullScore > -1) {\n        collapsedSet.set(nullDoc);\n      }\n\n      //Handle the boosted docs.\n      if(this.boostKeys != null) {\n        int s = boostKeys.size();\n        for(int i=0; i<s; i++) {\n          int key = this.boostKeys.get(i);\n          if(key != nullValue) {\n            cmap.remove(key);\n          }\n          //Add the boosted docs to the collapsedSet\n          this.collapsedSet.set(boostDocs.get(i));\n        }\n      }\n\n      Iterator<IntLongCursor> it1 = cmap.iterator();\n\n      while(it1.hasNext()) {\n        IntLongCursor cursor = it1.next();\n        int doc = (int)cursor.value;\n        collapsedSet.set(doc);\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n\n      collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.field);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      DummyScorer dummy = new DummyScorer();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapsedSet, 0L); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.field);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n        int collapseValue;\n        if (collapseValues.advanceExact(contextDoc)) {\n          collapseValue = (int) collapseValues.longValue();\n        } else {\n          collapseValue = 0;\n        }\n\n        if(collapseValue != nullValue) {\n          long scoreDoc = cmap.get(collapseValue);\n          dummy.score = Float.intBitsToFloat((int)(scoreDoc>>32));\n        } else if(boosts && mergeBoost.boost(globalDoc)) {\n          //Ignore so boosted documents don't mess up the null scoring policies.\n        } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n          dummy.score = nullScore;\n        } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          dummy.score = nullScores.get(nullScoreIndex++);\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a813b523bf76aa0a68013d636b6eb53cedb142a4","date":1601387389,"type":3,"author":"Guna Sekhar Dora Kovvuru","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntScoreCollector#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntScoreCollector#finish().mjava","sourceNew":"    @Override\n    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      if(nullScore > -1) {\n        collapsedSet.set(nullDoc);\n      }\n\n      //Handle the boosted docs.\n      if(this.boostKeys != null) {\n        int s = boostKeys.size();\n        for(int i=0; i<s; i++) {\n          int key = this.boostKeys.get(i);\n          if(key != nullValue) {\n            cmap.remove(key);\n          }\n          //Add the boosted docs to the collapsedSet\n          this.collapsedSet.set(boostDocs.get(i));\n        }\n      }\n\n      Iterator<IntLongCursor> it1 = cmap.iterator();\n\n      while(it1.hasNext()) {\n        IntLongCursor cursor = it1.next();\n        int doc = (int)cursor.value;\n        collapsedSet.set(doc);\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n\n      collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.field);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      ScoreAndDoc dummy = new ScoreAndDoc();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapsedSet, 0L); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.field);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n        int collapseValue;\n        if (collapseValues.advanceExact(contextDoc)) {\n          collapseValue = (int) collapseValues.longValue();\n        } else {\n          collapseValue = 0;\n        }\n\n        if(collapseValue != nullValue) {\n          long scoreDoc = cmap.get(collapseValue);\n          dummy.score = Float.intBitsToFloat((int)(scoreDoc>>32));\n        } else if(boosts && mergeBoost.boost(globalDoc)) {\n          //Ignore so boosted documents don't mess up the null scoring policies.\n        } else if (nullPolicy == NullPolicy.COLLAPSE.getCode()) {\n          dummy.score = nullScore;\n        } else if(nullPolicy == NullPolicy.EXPAND.getCode()) {\n          dummy.score = nullScores.get(nullScoreIndex++);\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void finish() throws IOException {\n      if(contexts.length == 0) {\n        return;\n      }\n\n      if(nullScore > -1) {\n        collapsedSet.set(nullDoc);\n      }\n\n      //Handle the boosted docs.\n      if(this.boostKeys != null) {\n        int s = boostKeys.size();\n        for(int i=0; i<s; i++) {\n          int key = this.boostKeys.get(i);\n          if(key != nullValue) {\n            cmap.remove(key);\n          }\n          //Add the boosted docs to the collapsedSet\n          this.collapsedSet.set(boostDocs.get(i));\n        }\n      }\n\n      Iterator<IntLongCursor> it1 = cmap.iterator();\n\n      while(it1.hasNext()) {\n        IntLongCursor cursor = it1.next();\n        int doc = (int)cursor.value;\n        collapsedSet.set(doc);\n      }\n\n      int currentContext = 0;\n      int currentDocBase = 0;\n\n      collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.field);\n      int nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n      ScoreAndDoc dummy = new ScoreAndDoc();\n      leafDelegate.setScorer(dummy);\n      DocIdSetIterator it = new BitSetIterator(collapsedSet, 0L); // cost is not useful here\n      int globalDoc = -1;\n      int nullScoreIndex = 0;\n      while((globalDoc = it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n\n        while(globalDoc >= nextDocBase) {\n          currentContext++;\n          currentDocBase = contexts[currentContext].docBase;\n          nextDocBase = currentContext+1 < contexts.length ? contexts[currentContext+1].docBase : maxDoc;\n          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);\n          leafDelegate.setScorer(dummy);\n          collapseValues = DocValues.getNumeric(contexts[currentContext].reader(), this.field);\n        }\n\n        int contextDoc = globalDoc-currentDocBase;\n        int collapseValue;\n        if (collapseValues.advanceExact(contextDoc)) {\n          collapseValue = (int) collapseValues.longValue();\n        } else {\n          collapseValue = 0;\n        }\n\n        if(collapseValue != nullValue) {\n          long scoreDoc = cmap.get(collapseValue);\n          dummy.score = Float.intBitsToFloat((int)(scoreDoc>>32));\n        } else if(boosts && mergeBoost.boost(globalDoc)) {\n          //Ignore so boosted documents don't mess up the null scoring policies.\n        } else if (nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n          dummy.score = nullScore;\n        } else if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          dummy.score = nullScores.get(nullScoreIndex++);\n        }\n\n        dummy.docId = contextDoc;\n        leafDelegate.collect(contextDoc);\n      }\n\n      if(delegate instanceof DelegatingCollector) {\n        ((DelegatingCollector) delegate).finish();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a813b523bf76aa0a68013d636b6eb53cedb142a4":["6dbd758f2776b0129f6b3641b6490ddc68d7b0f3"],"a0201bd24de8c2e43ffd97115399c48fbcc83836":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"],"8ced52befdc8d88d90766aadbaac496f3fd0e4ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6c62352c33f77624124d1cbf58a1291da78141f7":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a0201bd24de8c2e43ffd97115399c48fbcc83836","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["a0201bd24de8c2e43ffd97115399c48fbcc83836"],"6dbd758f2776b0129f6b3641b6490ddc68d7b0f3":["bfcdec9fcf0409223f35c5ec3bc14094314941b4"],"bfcdec9fcf0409223f35c5ec3bc14094314941b4":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6c62352c33f77624124d1cbf58a1291da78141f7"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0201bd24de8c2e43ffd97115399c48fbcc83836","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a813b523bf76aa0a68013d636b6eb53cedb142a4"]},"commit2Childs":{"a813b523bf76aa0a68013d636b6eb53cedb142a4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0201bd24de8c2e43ffd97115399c48fbcc83836":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"8ced52befdc8d88d90766aadbaac496f3fd0e4ee":["a0201bd24de8c2e43ffd97115399c48fbcc83836"],"6c62352c33f77624124d1cbf58a1291da78141f7":["bfcdec9fcf0409223f35c5ec3bc14094314941b4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["6c62352c33f77624124d1cbf58a1291da78141f7","bfcdec9fcf0409223f35c5ec3bc14094314941b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"6dbd758f2776b0129f6b3641b6490ddc68d7b0f3":["a813b523bf76aa0a68013d636b6eb53cedb142a4"],"bfcdec9fcf0409223f35c5ec3bc14094314941b4":["6dbd758f2776b0129f6b3641b6490ddc68d7b0f3"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}