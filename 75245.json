{"path":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testPutFile().mjava","commits":[{"id":"dee259562bdd34641f66e8583cbcc05018283f72","date":1376670617,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testPutFile().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testPutFile() throws Exception {\n    // test put file\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"putfile\", \"/solr.xml\", SOLR_HOME + File.separator + \"solr-stress-new.xml\"};\n    ZkCLI.main(args);\n\n    String fromZk = new String(zkClient.getData(\"/solr.xml\", null, null, true), \"UTF-8\");\n    File locFile = new File(SOLR_HOME + File.separator + \"solr-stress-new.xml\");\n    InputStream is = new FileInputStream(locFile);\n    String fromLoc;\n    try {\n      fromLoc = new String(IOUtils.toByteArray(is), \"UTF-8\");\n    } finally {\n      IOUtils.closeQuietly(is);\n    }\n    assertEquals(\"Should get back what we put in ZK\", fromZk, fromLoc);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31d4861802ca404d78ca1d15f4550eec415b9199","date":1376947894,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testPutFile().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testPutFile() throws Exception {\n    // test put file\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"putfile\", \"/solr.xml\", SOLR_HOME + File.separator + \"solr-stress-new.xml\"};\n    ZkCLI.main(args);\n\n    String fromZk = new String(zkClient.getData(\"/solr.xml\", null, null, true), \"UTF-8\");\n    File locFile = new File(SOLR_HOME + File.separator + \"solr-stress-new.xml\");\n    InputStream is = new FileInputStream(locFile);\n    String fromLoc;\n    try {\n      fromLoc = new String(IOUtils.toByteArray(is), \"UTF-8\");\n    } finally {\n      IOUtils.closeQuietly(is);\n    }\n    assertEquals(\"Should get back what we put in ZK\", fromZk, fromLoc);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testPutFile().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testPutFile() throws Exception {\n    // test put file\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"putfile\", \"/solr.xml\", SOLR_HOME + File.separator + \"solr-stress-new.xml\"};\n    ZkCLI.main(args);\n\n    String fromZk = new String(zkClient.getData(\"/solr.xml\", null, null, true), \"UTF-8\");\n    File locFile = new File(SOLR_HOME + File.separator + \"solr-stress-new.xml\");\n    InputStream is = new FileInputStream(locFile);\n    String fromLoc;\n    try {\n      fromLoc = new String(IOUtils.toByteArray(is), \"UTF-8\");\n    } finally {\n      IOUtils.closeQuietly(is);\n    }\n    assertEquals(\"Should get back what we put in ZK\", fromZk, fromLoc);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d3d365762604952e436b51980101dfc84cc1b3e","date":1396298116,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testPutFile().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testPutFile().mjava","sourceNew":"  @Test\n  public void testPutFile() throws Exception {\n    // test put file\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"putfile\", \"/solr.xml\", SOLR_HOME + File.separator + \"solr-stress-new.xml\"};\n    ZkCLI.main(args);\n\n    String fromZk = new String(zkClient.getData(\"/solr.xml\", null, null, true), StandardCharsets.UTF_8);\n    File locFile = new File(SOLR_HOME + File.separator + \"solr-stress-new.xml\");\n    InputStream is = new FileInputStream(locFile);\n    String fromLoc;\n    try {\n      fromLoc = new String(IOUtils.toByteArray(is), StandardCharsets.UTF_8);\n    } finally {\n      IOUtils.closeQuietly(is);\n    }\n    assertEquals(\"Should get back what we put in ZK\", fromZk, fromLoc);\n  }\n\n","sourceOld":"  @Test\n  public void testPutFile() throws Exception {\n    // test put file\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"putfile\", \"/solr.xml\", SOLR_HOME + File.separator + \"solr-stress-new.xml\"};\n    ZkCLI.main(args);\n\n    String fromZk = new String(zkClient.getData(\"/solr.xml\", null, null, true), \"UTF-8\");\n    File locFile = new File(SOLR_HOME + File.separator + \"solr-stress-new.xml\");\n    InputStream is = new FileInputStream(locFile);\n    String fromLoc;\n    try {\n      fromLoc = new String(IOUtils.toByteArray(is), \"UTF-8\");\n    } finally {\n      IOUtils.closeQuietly(is);\n    }\n    assertEquals(\"Should get back what we put in ZK\", fromZk, fromLoc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testPutFile().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testPutFile().mjava","sourceNew":"  @Test\n  public void testPutFile() throws Exception {\n    // test put file\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"putfile\", \"/solr.xml\", SOLR_HOME + File.separator + \"solr-stress-new.xml\"};\n    ZkCLI.main(args);\n\n    String fromZk = new String(zkClient.getData(\"/solr.xml\", null, null, true), StandardCharsets.UTF_8);\n    File locFile = new File(SOLR_HOME + File.separator + \"solr-stress-new.xml\");\n    InputStream is = new FileInputStream(locFile);\n    String fromLoc;\n    try {\n      fromLoc = new String(IOUtils.toByteArray(is), StandardCharsets.UTF_8);\n    } finally {\n      IOUtils.closeQuietly(is);\n    }\n    assertEquals(\"Should get back what we put in ZK\", fromZk, fromLoc);\n  }\n\n","sourceOld":"  @Test\n  public void testPutFile() throws Exception {\n    // test put file\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"putfile\", \"/solr.xml\", SOLR_HOME + File.separator + \"solr-stress-new.xml\"};\n    ZkCLI.main(args);\n\n    String fromZk = new String(zkClient.getData(\"/solr.xml\", null, null, true), \"UTF-8\");\n    File locFile = new File(SOLR_HOME + File.separator + \"solr-stress-new.xml\");\n    InputStream is = new FileInputStream(locFile);\n    String fromLoc;\n    try {\n      fromLoc = new String(IOUtils.toByteArray(is), \"UTF-8\");\n    } finally {\n      IOUtils.closeQuietly(is);\n    }\n    assertEquals(\"Should get back what we put in ZK\", fromZk, fromLoc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["dee259562bdd34641f66e8583cbcc05018283f72","9d3d365762604952e436b51980101dfc84cc1b3e"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","dee259562bdd34641f66e8583cbcc05018283f72"],"31d4861802ca404d78ca1d15f4550eec415b9199":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","dee259562bdd34641f66e8583cbcc05018283f72"],"9d3d365762604952e436b51980101dfc84cc1b3e":["dee259562bdd34641f66e8583cbcc05018283f72"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dee259562bdd34641f66e8583cbcc05018283f72":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9d3d365762604952e436b51980101dfc84cc1b3e"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"31d4861802ca404d78ca1d15f4550eec415b9199":[],"9d3d365762604952e436b51980101dfc84cc1b3e":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","dee259562bdd34641f66e8583cbcc05018283f72"],"dee259562bdd34641f66e8583cbcc05018283f72":["5eb2511ababf862ea11e10761c70ee560cd84510","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","9d3d365762604952e436b51980101dfc84cc1b3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}