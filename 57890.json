{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymMap#makeTokens(List[String]).mjava","commits":[{"id":"b59603a30f81d2af70cd2033270521dc7c8ec626","date":1273513065,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymMap#makeTokens(List[String]).mjava","pathOld":"solr/src/java/org/apache/solr/analysis/SynonymMap#makeTokens(List[String]).mjava","sourceNew":"  /** Produces a List<Token> from a List<String> */\n  public static List<Token> makeTokens(List<String> strings) {\n    List<Token> ret = new ArrayList<Token>(strings.size());\n    for (String str : strings) {\n      //Token newTok = new Token(str,0,0,\"SYNONYM\");\n      Token newTok = new Token(0,0,\"SYNONYM\");\n      newTok.setTermBuffer(str.toCharArray(), 0, str.length());\n      ret.add(newTok);\n    }\n    return ret;\n  }\n\n","sourceOld":"  /** Produces a List<Token> from a List<String> */\n  public static List<Token> makeTokens(List<String> strings) {\n    List<Token> ret = new ArrayList<Token>(strings.size());\n    for (String str : strings) {\n      //Token newTok = new Token(str,0,0,\"SYNONYM\");\n      Token newTok = new Token(0,0,\"SYNONYM\");\n      newTok.setTermBuffer(str.toCharArray(), 0, str.length());\n      ret.add(newTok);\n    }\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7347509fad0711ac30cb15a746e9a3830a38ebd","date":1275388513,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymMap#makeTokens(List[String]).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymMap#makeTokens(List[String]).mjava","sourceNew":"  /** Produces a List<Token> from a List<String> */\n  public static List<Token> makeTokens(List<String> strings) {\n    List<Token> ret = new ArrayList<Token>(strings.size());\n    for (String str : strings) {\n      //Token newTok = new Token(str,0,0,\"SYNONYM\");\n      Token newTok = new Token(str, 0,0,\"SYNONYM\");\n      ret.add(newTok);\n    }\n    return ret;\n  }\n\n","sourceOld":"  /** Produces a List<Token> from a List<String> */\n  public static List<Token> makeTokens(List<String> strings) {\n    List<Token> ret = new ArrayList<Token>(strings.size());\n    for (String str : strings) {\n      //Token newTok = new Token(str,0,0,\"SYNONYM\");\n      Token newTok = new Token(0,0,\"SYNONYM\");\n      newTok.setTermBuffer(str.toCharArray(), 0, str.length());\n      ret.add(newTok);\n    }\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c","date":1310389132,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/analysis/SlowSynonymMap#makeTokens(List[String]).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymMap#makeTokens(List[String]).mjava","sourceNew":"  /** Produces a List<Token> from a List<String> */\n  public static List<Token> makeTokens(List<String> strings) {\n    List<Token> ret = new ArrayList<Token>(strings.size());\n    for (String str : strings) {\n      //Token newTok = new Token(str,0,0,\"SYNONYM\");\n      Token newTok = new Token(str, 0,0,\"SYNONYM\");\n      ret.add(newTok);\n    }\n    return ret;\n  }\n\n","sourceOld":"  /** Produces a List<Token> from a List<String> */\n  public static List<Token> makeTokens(List<String> strings) {\n    List<Token> ret = new ArrayList<Token>(strings.size());\n    for (String str : strings) {\n      //Token newTok = new Token(str,0,0,\"SYNONYM\");\n      Token newTok = new Token(str, 0,0,\"SYNONYM\");\n      ret.add(newTok);\n    }\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b59603a30f81d2af70cd2033270521dc7c8ec626":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c":["a7347509fad0711ac30cb15a746e9a3830a38ebd"],"a7347509fad0711ac30cb15a746e9a3830a38ebd":["b59603a30f81d2af70cd2033270521dc7c8ec626"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["44d6f0ab53c1962856b9f48dedb7a2a6cc18905c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b59603a30f81d2af70cd2033270521dc7c8ec626"],"b59603a30f81d2af70cd2033270521dc7c8ec626":["a7347509fad0711ac30cb15a746e9a3830a38ebd"],"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a7347509fad0711ac30cb15a746e9a3830a38ebd":["44d6f0ab53c1962856b9f48dedb7a2a6cc18905c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}