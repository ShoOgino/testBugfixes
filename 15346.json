{"path":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testFullyMergeOldIndex().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testFullyMergeOldIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testFullyMergeOldIndex().mjava","sourceNew":"  public void testFullyMergeOldIndex() throws Exception {\n    for (String name : oldNames) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: index=\" + name);\n      }\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n      IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      w.forceMerge(1);\n      w.close();\n      \n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testFullyMergeOldIndex() throws Exception {\n    for (String name : oldNames) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: index=\" + name);\n      }\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n      IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      w.forceMerge(1);\n      w.close();\n      \n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testFullyMergeOldIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testFullyMergeOldIndex().mjava","sourceNew":"  public void testFullyMergeOldIndex() throws Exception {\n    for (String name : oldNames) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: index=\" + name);\n      }\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n      IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n      w.forceMerge(1);\n      w.close();\n      \n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testFullyMergeOldIndex() throws Exception {\n    for (String name : oldNames) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: index=\" + name);\n      }\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n      IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      w.forceMerge(1);\n      w.close();\n      \n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testFullyMergeOldIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testFullyMergeOldIndex().mjava","sourceNew":"  public void testFullyMergeOldIndex() throws Exception {\n    for (String name : oldNames) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: index=\" + name);\n      }\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n      IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n      w.forceMerge(1);\n      w.shutdown();\n      \n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testFullyMergeOldIndex() throws Exception {\n    for (String name : oldNames) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: index=\" + name);\n      }\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n      IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n      w.forceMerge(1);\n      w.close();\n      \n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testFullyMergeOldIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testFullyMergeOldIndex().mjava","sourceNew":"  public void testFullyMergeOldIndex() throws Exception {\n    for (String name : oldNames) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: index=\" + name);\n      }\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n      IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n      w.forceMerge(1);\n      w.close();\n      \n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testFullyMergeOldIndex() throws Exception {\n    for (String name : oldNames) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: index=\" + name);\n      }\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n      IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n      w.forceMerge(1);\n      w.shutdown();\n      \n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testFullyMergeOldIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testFullyMergeOldIndex().mjava","sourceNew":"  public void testFullyMergeOldIndex() throws Exception {\n    for (String name : oldNames) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: index=\" + name);\n      }\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n      IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n      w.forceMerge(1);\n      w.close();\n      \n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testFullyMergeOldIndex() throws Exception {\n    for (String name : oldNames) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: index=\" + name);\n      }\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n      IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n      w.forceMerge(1);\n      w.close();\n      \n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testFullyMergeOldIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testFullyMergeOldIndex().mjava","sourceNew":"  public void testFullyMergeOldIndex() throws Exception {\n    for (String name : oldNames) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: index=\" + name);\n      }\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n      IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n      w.forceMerge(1);\n      w.close();\n      \n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testFullyMergeOldIndex() throws Exception {\n    for (String name : oldNames) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: index=\" + name);\n      }\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n      IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n      w.forceMerge(1);\n      w.close();\n      \n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["d0ef034a4f10871667ae75181537775ddcf8ade4","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}