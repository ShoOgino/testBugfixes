{"path":"lucene/core/src/java/org/apache/lucene/search/FieldCacheImpl.DocTermsIndexImpl#getOrd(int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldCacheImpl.DocTermsIndexImpl#getOrd(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl.DocTermsIndexImpl#getOrd(int).mjava","sourceNew":"    @Override\n    public int getOrd(int docID) {\n      return (int) docToTermOrd.get(docID);\n    }\n\n","sourceOld":"    @Override\n    public int getOrd(int docID) {\n      return (int) docToTermOrd.get(docID);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29f7cc7c185412da66c1d0089d9e75da01329a00","date":1353364851,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldCacheImpl.DocTermsIndexImpl#getOrd(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCacheImpl.DocTermsIndexImpl#getOrd(int).mjava","sourceNew":"    @Override\n    public int getOrd(int docID) {\n      return (int) docToTermOrd.get(docID)-1;\n    }\n\n","sourceOld":"    @Override\n    public int getOrd(int docID) {\n      return (int) docToTermOrd.get(docID);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"854f97cd3613b9579fba83755c80b697e2f3993f","date":1353527621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldCacheImpl.DocTermsIndexImpl#getOrd(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCacheImpl.DocTermsIndexImpl#getOrd(int).mjava","sourceNew":"    @Override\n    public int getOrd(int docID) {\n      // Subtract 1, matching the 1+ord we did when\n      // storing, so that missing values, which are 0 in the\n      // packed ints, are returned as -1 ord:\n      return (int) docToTermOrd.get(docID)-1;\n    }\n\n","sourceOld":"    @Override\n    public int getOrd(int docID) {\n      return (int) docToTermOrd.get(docID)-1;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d7e5f3aa5935964617824d1f9b2599ddb334464","date":1353762831,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldCacheImpl.SortedDocValuesImpl#getOrd(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCacheImpl.DocTermsIndexImpl#getOrd(int).mjava","sourceNew":"    @Override\n    public int getOrd(int docID) {\n      // Subtract 1, matching the 1+ord we did when\n      // storing, so that missing values, which are 0 in the\n      // packed ints, are returned as -1 ord:\n      return (int) docToTermOrd.get(docID)-1;\n    }\n\n","sourceOld":"    @Override\n    public int getOrd(int docID) {\n      // Subtract 1, matching the 1+ord we did when\n      // storing, so that missing values, which are 0 in the\n      // packed ints, are returned as -1 ord:\n      return (int) docToTermOrd.get(docID)-1;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCacheImpl.DocTermsIndexImpl#getOrd(int).mjava","sourceNew":null,"sourceOld":"    @Override\n    public int getOrd(int docID) {\n      return (int) docToTermOrd.get(docID);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","9d7e5f3aa5935964617824d1f9b2599ddb334464"],"29f7cc7c185412da66c1d0089d9e75da01329a00":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9d7e5f3aa5935964617824d1f9b2599ddb334464":["854f97cd3613b9579fba83755c80b697e2f3993f"],"854f97cd3613b9579fba83755c80b697e2f3993f":["29f7cc7c185412da66c1d0089d9e75da01329a00"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d4d69c535930b5cce125cff868d40f6373dc27d4"]},"commit2Childs":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29f7cc7c185412da66c1d0089d9e75da01329a00":["854f97cd3613b9579fba83755c80b697e2f3993f"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d4d69c535930b5cce125cff868d40f6373dc27d4","29f7cc7c185412da66c1d0089d9e75da01329a00"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9d7e5f3aa5935964617824d1f9b2599ddb334464":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"854f97cd3613b9579fba83755c80b697e2f3993f":["9d7e5f3aa5935964617824d1f9b2599ddb334464"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}