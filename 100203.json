{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestPlainTextEntityProcessor#testSimple2().mjava","commits":[{"id":"af6d773d44e8c5f017e61150d2e054471faf8765","date":1481116327,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestPlainTextEntityProcessor#testSimple2().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSimple2() throws IOException {\n    DataImporter di = new DataImporter();\n    MockDataSource.setIterator(\"select id, name, blob_field from lw_table4\", Collections.singletonList(Utils.makeMap(\"blob_field\",new BlobImpl(DS.s.getBytes(UTF_8)) ) ).iterator());\n\n    String dc =\n\n        \" <dataConfig>\" +\n            \"<dataSource name=\\\"ds1\\\" type=\\\"MockDataSource\\\"/>\\n\" +\n        \" <!-- dataSource for FieldReaderDataSource -->\\n\" +\n        \" <dataSource dataField=\\\"root.blob_field\\\" name=\\\"fr\\\" type=\\\"FieldReaderDataSource\\\"/>\\n\" +\n        \"\\n\" +\n        \" <document name=\\\"items\\\">\\n\" +\n        \"   <entity dataSource=\\\"ds1\\\" name=\\\"root\\\" pk=\\\"id\\\"  query=\\\"select id, name, blob_field from lw_table4\\\" transformer=\\\"TemplateTransformer\\\">\\n\" +\n        \"           <field column=\\\"id\\\" name=\\\"id\\\"/>\\n\" +\n        \"\\n\" +\n        \"        <entity dataField=\\\"root.blob_field\\\" dataSource=\\\"fr\\\" format=\\\"text\\\" name=\\\"n1\\\" processor=\\\"PlainTextEntityProcessor\\\" url=\\\"blob_field\\\">\\n\" +\n        \"                       <field column=\\\"plainText\\\" name=\\\"plainText\\\"/>\\n\" +\n        \"           </entity>\\n\" +\n        \"\\n\" +\n        \"   </entity>\\n\" +\n        \" </document>\\n\" +\n        \"</dataConfig>\";\n    System.out.println(dc);\n    di.loadAndInit(dc);\n    redirectTempProperties(di);\n\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    RequestInfo rp = new RequestInfo(null, createMap(\"command\", \"full-import\"), null);\n    di.runCmd(rp, sw);\n    assertEquals(DS.s, sw.docs.get(0).getFieldValue(\"plainText\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9856095f7afb5a607bf5e65077615ed91273508c","date":1481837697,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestPlainTextEntityProcessor#testSimple2().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSimple2() throws IOException {\n    DataImporter di = new DataImporter();\n    MockDataSource.setIterator(\"select id, name, blob_field from lw_table4\", Collections.singletonList(Utils.makeMap(\"blob_field\",new BlobImpl(DS.s.getBytes(UTF_8)) ) ).iterator());\n\n    String dc =\n\n        \" <dataConfig>\" +\n            \"<dataSource name=\\\"ds1\\\" type=\\\"MockDataSource\\\"/>\\n\" +\n        \" <!-- dataSource for FieldReaderDataSource -->\\n\" +\n        \" <dataSource dataField=\\\"root.blob_field\\\" name=\\\"fr\\\" type=\\\"FieldReaderDataSource\\\"/>\\n\" +\n        \"\\n\" +\n        \" <document name=\\\"items\\\">\\n\" +\n        \"   <entity dataSource=\\\"ds1\\\" name=\\\"root\\\" pk=\\\"id\\\"  query=\\\"select id, name, blob_field from lw_table4\\\" transformer=\\\"TemplateTransformer\\\">\\n\" +\n        \"           <field column=\\\"id\\\" name=\\\"id\\\"/>\\n\" +\n        \"\\n\" +\n        \"        <entity dataField=\\\"root.blob_field\\\" dataSource=\\\"fr\\\" format=\\\"text\\\" name=\\\"n1\\\" processor=\\\"PlainTextEntityProcessor\\\" url=\\\"blob_field\\\">\\n\" +\n        \"                       <field column=\\\"plainText\\\" name=\\\"plainText\\\"/>\\n\" +\n        \"           </entity>\\n\" +\n        \"\\n\" +\n        \"   </entity>\\n\" +\n        \" </document>\\n\" +\n        \"</dataConfig>\";\n    System.out.println(dc);\n    di.loadAndInit(dc);\n    redirectTempProperties(di);\n\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    RequestInfo rp = new RequestInfo(null, createMap(\"command\", \"full-import\"), null);\n    di.runCmd(rp, sw);\n    assertEquals(DS.s, sw.docs.get(0).getFieldValue(\"plainText\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestPlainTextEntityProcessor#testSimple2().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestPlainTextEntityProcessor#testSimple2().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void testSimple2() throws IOException {\n    DataImporter di = new DataImporter();\n    MockDataSource.setIterator(\"select id, name, blob_field from lw_table4\", Collections.singletonList(Utils.makeMap(\"blob_field\",new BlobImpl(DS.s.getBytes(UTF_8)) ) ).iterator());\n\n    String dc =\n\n        \" <dataConfig>\" +\n            \"<dataSource name=\\\"ds1\\\" type=\\\"MockDataSource\\\"/>\\n\" +\n        \" <!-- dataSource for FieldReaderDataSource -->\\n\" +\n        \" <dataSource dataField=\\\"root.blob_field\\\" name=\\\"fr\\\" type=\\\"FieldReaderDataSource\\\"/>\\n\" +\n        \"\\n\" +\n        \" <document name=\\\"items\\\">\\n\" +\n        \"   <entity dataSource=\\\"ds1\\\" name=\\\"root\\\" pk=\\\"id\\\"  query=\\\"select id, name, blob_field from lw_table4\\\" transformer=\\\"TemplateTransformer\\\">\\n\" +\n        \"           <field column=\\\"id\\\" name=\\\"id\\\"/>\\n\" +\n        \"\\n\" +\n        \"        <entity dataField=\\\"root.blob_field\\\" dataSource=\\\"fr\\\" format=\\\"text\\\" name=\\\"n1\\\" processor=\\\"PlainTextEntityProcessor\\\" url=\\\"blob_field\\\">\\n\" +\n        \"                       <field column=\\\"plainText\\\" name=\\\"plainText\\\"/>\\n\" +\n        \"           </entity>\\n\" +\n        \"\\n\" +\n        \"   </entity>\\n\" +\n        \" </document>\\n\" +\n        \"</dataConfig>\";\n    System.out.println(dc);\n    di.loadAndInit(dc);\n    redirectTempProperties(di);\n\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    RequestInfo rp = new RequestInfo(null, createMap(\"command\", \"full-import\"), null);\n    di.runCmd(rp, sw);\n    assertEquals(DS.s, sw.docs.get(0).getFieldValue(\"plainText\"));\n  }\n\n","sourceOld":"  @Test\n  public void testSimple2() throws IOException {\n    DataImporter di = new DataImporter();\n    MockDataSource.setIterator(\"select id, name, blob_field from lw_table4\", Collections.singletonList(Utils.makeMap(\"blob_field\",new BlobImpl(DS.s.getBytes(UTF_8)) ) ).iterator());\n\n    String dc =\n\n        \" <dataConfig>\" +\n            \"<dataSource name=\\\"ds1\\\" type=\\\"MockDataSource\\\"/>\\n\" +\n        \" <!-- dataSource for FieldReaderDataSource -->\\n\" +\n        \" <dataSource dataField=\\\"root.blob_field\\\" name=\\\"fr\\\" type=\\\"FieldReaderDataSource\\\"/>\\n\" +\n        \"\\n\" +\n        \" <document name=\\\"items\\\">\\n\" +\n        \"   <entity dataSource=\\\"ds1\\\" name=\\\"root\\\" pk=\\\"id\\\"  query=\\\"select id, name, blob_field from lw_table4\\\" transformer=\\\"TemplateTransformer\\\">\\n\" +\n        \"           <field column=\\\"id\\\" name=\\\"id\\\"/>\\n\" +\n        \"\\n\" +\n        \"        <entity dataField=\\\"root.blob_field\\\" dataSource=\\\"fr\\\" format=\\\"text\\\" name=\\\"n1\\\" processor=\\\"PlainTextEntityProcessor\\\" url=\\\"blob_field\\\">\\n\" +\n        \"                       <field column=\\\"plainText\\\" name=\\\"plainText\\\"/>\\n\" +\n        \"           </entity>\\n\" +\n        \"\\n\" +\n        \"   </entity>\\n\" +\n        \" </document>\\n\" +\n        \"</dataConfig>\";\n    System.out.println(dc);\n    di.loadAndInit(dc);\n    redirectTempProperties(di);\n\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    RequestInfo rp = new RequestInfo(null, createMap(\"command\", \"full-import\"), null);\n    di.runCmd(rp, sw);\n    assertEquals(DS.s, sw.docs.get(0).getFieldValue(\"plainText\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestPlainTextEntityProcessor#testSimple2().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestPlainTextEntityProcessor#testSimple2().mjava","sourceNew":"  @Test\n  public void testSimple2() throws IOException {\n    DataImporter di = new DataImporter();\n    MockDataSource.setIterator(\"select id, name, blob_field from lw_table4\", Collections.singletonList(Utils.makeMap(\"blob_field\",new BlobImpl(DS.s.getBytes(UTF_8)) ) ).iterator());\n\n    String dc =\n\n        \" <dataConfig>\" +\n            \"<dataSource name=\\\"ds1\\\" type=\\\"MockDataSource\\\"/>\\n\" +\n        \" <!-- dataSource for FieldReaderDataSource -->\\n\" +\n        \" <dataSource dataField=\\\"root.blob_field\\\" name=\\\"fr\\\" type=\\\"FieldReaderDataSource\\\"/>\\n\" +\n        \"\\n\" +\n        \" <document name=\\\"items\\\">\\n\" +\n        \"   <entity dataSource=\\\"ds1\\\" name=\\\"root\\\" pk=\\\"id\\\"  query=\\\"select id, name, blob_field from lw_table4\\\" transformer=\\\"TemplateTransformer\\\">\\n\" +\n        \"           <field column=\\\"id\\\" name=\\\"id\\\"/>\\n\" +\n        \"\\n\" +\n        \"        <entity dataField=\\\"root.blob_field\\\" dataSource=\\\"fr\\\" format=\\\"text\\\" name=\\\"n1\\\" processor=\\\"PlainTextEntityProcessor\\\" url=\\\"blob_field\\\">\\n\" +\n        \"                       <field column=\\\"plainText\\\" name=\\\"plainText\\\"/>\\n\" +\n        \"           </entity>\\n\" +\n        \"\\n\" +\n        \"   </entity>\\n\" +\n        \" </document>\\n\" +\n        \"</dataConfig>\";\n    System.out.println(dc);\n    di.loadAndInit(dc);\n    redirectTempProperties(di);\n\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    RequestInfo rp = new RequestInfo(null, createMap(\"command\", \"full-import\"), null);\n    di.runCmd(rp, sw);\n    assertEquals(DS.s, sw.docs.get(0).getFieldValue(\"plainText\"));\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void testSimple2() throws IOException {\n    DataImporter di = new DataImporter();\n    MockDataSource.setIterator(\"select id, name, blob_field from lw_table4\", Collections.singletonList(Utils.makeMap(\"blob_field\",new BlobImpl(DS.s.getBytes(UTF_8)) ) ).iterator());\n\n    String dc =\n\n        \" <dataConfig>\" +\n            \"<dataSource name=\\\"ds1\\\" type=\\\"MockDataSource\\\"/>\\n\" +\n        \" <!-- dataSource for FieldReaderDataSource -->\\n\" +\n        \" <dataSource dataField=\\\"root.blob_field\\\" name=\\\"fr\\\" type=\\\"FieldReaderDataSource\\\"/>\\n\" +\n        \"\\n\" +\n        \" <document name=\\\"items\\\">\\n\" +\n        \"   <entity dataSource=\\\"ds1\\\" name=\\\"root\\\" pk=\\\"id\\\"  query=\\\"select id, name, blob_field from lw_table4\\\" transformer=\\\"TemplateTransformer\\\">\\n\" +\n        \"           <field column=\\\"id\\\" name=\\\"id\\\"/>\\n\" +\n        \"\\n\" +\n        \"        <entity dataField=\\\"root.blob_field\\\" dataSource=\\\"fr\\\" format=\\\"text\\\" name=\\\"n1\\\" processor=\\\"PlainTextEntityProcessor\\\" url=\\\"blob_field\\\">\\n\" +\n        \"                       <field column=\\\"plainText\\\" name=\\\"plainText\\\"/>\\n\" +\n        \"           </entity>\\n\" +\n        \"\\n\" +\n        \"   </entity>\\n\" +\n        \" </document>\\n\" +\n        \"</dataConfig>\";\n    System.out.println(dc);\n    di.loadAndInit(dc);\n    redirectTempProperties(di);\n\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    RequestInfo rp = new RequestInfo(null, createMap(\"command\", \"full-import\"), null);\n    di.runCmd(rp, sw);\n    assertEquals(DS.s, sw.docs.get(0).getFieldValue(\"plainText\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"024e13388acbf5562fcbb77a129620982a5e2d79","date":1591531835,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestPlainTextEntityProcessor#testSimple2().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestPlainTextEntityProcessor#testSimple2().mjava","sourceNew":"  @Test\n  public void testSimple2() throws IOException {\n    DataImporter di = new DataImporter();\n    MockDataSource.setIterator(\"select id, name, blob_field from lw_table4\", Collections.singletonList(Utils.makeMap(\"blob_field\",new BlobImpl(DS.s.getBytes(UTF_8)) ) ).iterator());\n\n    String dc =\n\n        \" <dataConfig>\" +\n            \"<dataSource name=\\\"ds1\\\" type=\\\"MockDataSource\\\"/>\\n\" +\n        \" <!-- dataSource for FieldReaderDataSource -->\\n\" +\n        \" <dataSource dataField=\\\"root.blob_field\\\" name=\\\"fr\\\" type=\\\"FieldReaderDataSource\\\"/>\\n\" +\n        \"\\n\" +\n        \" <document name=\\\"items\\\">\\n\" +\n        \"   <entity dataSource=\\\"ds1\\\" name=\\\"root\\\" pk=\\\"id\\\"  query=\\\"select id, name, blob_field from lw_table4\\\" transformer=\\\"TemplateTransformer\\\">\\n\" +\n        \"           <field column=\\\"id\\\" name=\\\"id\\\"/>\\n\" +\n        \"\\n\" +\n        \"        <entity dataField=\\\"root.blob_field\\\" dataSource=\\\"fr\\\" format=\\\"text\\\" name=\\\"n1\\\" processor=\\\"PlainTextEntityProcessor\\\" url=\\\"blob_field\\\">\\n\" +\n        \"                       <field column=\\\"plainText\\\" name=\\\"plainText\\\"/>\\n\" +\n        \"           </entity>\\n\" +\n        \"\\n\" +\n        \"   </entity>\\n\" +\n        \" </document>\\n\" +\n        \"</dataConfig>\";\n    System.out.println(dc);\n    di.loadAndInit(dc);\n    redirectTempProperties(di);\n\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    @SuppressWarnings({\"unchecked\"})\n    RequestInfo rp = new RequestInfo(null, createMap(\"command\", \"full-import\"), null);\n    di.runCmd(rp, sw);\n    assertEquals(DS.s, sw.docs.get(0).getFieldValue(\"plainText\"));\n  }\n\n","sourceOld":"  @Test\n  public void testSimple2() throws IOException {\n    DataImporter di = new DataImporter();\n    MockDataSource.setIterator(\"select id, name, blob_field from lw_table4\", Collections.singletonList(Utils.makeMap(\"blob_field\",new BlobImpl(DS.s.getBytes(UTF_8)) ) ).iterator());\n\n    String dc =\n\n        \" <dataConfig>\" +\n            \"<dataSource name=\\\"ds1\\\" type=\\\"MockDataSource\\\"/>\\n\" +\n        \" <!-- dataSource for FieldReaderDataSource -->\\n\" +\n        \" <dataSource dataField=\\\"root.blob_field\\\" name=\\\"fr\\\" type=\\\"FieldReaderDataSource\\\"/>\\n\" +\n        \"\\n\" +\n        \" <document name=\\\"items\\\">\\n\" +\n        \"   <entity dataSource=\\\"ds1\\\" name=\\\"root\\\" pk=\\\"id\\\"  query=\\\"select id, name, blob_field from lw_table4\\\" transformer=\\\"TemplateTransformer\\\">\\n\" +\n        \"           <field column=\\\"id\\\" name=\\\"id\\\"/>\\n\" +\n        \"\\n\" +\n        \"        <entity dataField=\\\"root.blob_field\\\" dataSource=\\\"fr\\\" format=\\\"text\\\" name=\\\"n1\\\" processor=\\\"PlainTextEntityProcessor\\\" url=\\\"blob_field\\\">\\n\" +\n        \"                       <field column=\\\"plainText\\\" name=\\\"plainText\\\"/>\\n\" +\n        \"           </entity>\\n\" +\n        \"\\n\" +\n        \"   </entity>\\n\" +\n        \" </document>\\n\" +\n        \"</dataConfig>\";\n    System.out.println(dc);\n    di.loadAndInit(dc);\n    redirectTempProperties(di);\n\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    RequestInfo rp = new RequestInfo(null, createMap(\"command\", \"full-import\"), null);\n    di.runCmd(rp, sw);\n    assertEquals(DS.s, sw.docs.get(0).getFieldValue(\"plainText\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestPlainTextEntityProcessor#testSimple2().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testSimple2() throws IOException {\n    DataImporter di = new DataImporter();\n    MockDataSource.setIterator(\"select id, name, blob_field from lw_table4\", Collections.singletonList(Utils.makeMap(\"blob_field\",new BlobImpl(DS.s.getBytes(UTF_8)) ) ).iterator());\n\n    String dc =\n\n        \" <dataConfig>\" +\n            \"<dataSource name=\\\"ds1\\\" type=\\\"MockDataSource\\\"/>\\n\" +\n        \" <!-- dataSource for FieldReaderDataSource -->\\n\" +\n        \" <dataSource dataField=\\\"root.blob_field\\\" name=\\\"fr\\\" type=\\\"FieldReaderDataSource\\\"/>\\n\" +\n        \"\\n\" +\n        \" <document name=\\\"items\\\">\\n\" +\n        \"   <entity dataSource=\\\"ds1\\\" name=\\\"root\\\" pk=\\\"id\\\"  query=\\\"select id, name, blob_field from lw_table4\\\" transformer=\\\"TemplateTransformer\\\">\\n\" +\n        \"           <field column=\\\"id\\\" name=\\\"id\\\"/>\\n\" +\n        \"\\n\" +\n        \"        <entity dataField=\\\"root.blob_field\\\" dataSource=\\\"fr\\\" format=\\\"text\\\" name=\\\"n1\\\" processor=\\\"PlainTextEntityProcessor\\\" url=\\\"blob_field\\\">\\n\" +\n        \"                       <field column=\\\"plainText\\\" name=\\\"plainText\\\"/>\\n\" +\n        \"           </entity>\\n\" +\n        \"\\n\" +\n        \"   </entity>\\n\" +\n        \" </document>\\n\" +\n        \"</dataConfig>\";\n    System.out.println(dc);\n    di.loadAndInit(dc);\n    redirectTempProperties(di);\n\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    @SuppressWarnings({\"unchecked\"})\n    RequestInfo rp = new RequestInfo(null, createMap(\"command\", \"full-import\"), null);\n    di.runCmd(rp, sw);\n    assertEquals(DS.s, sw.docs.get(0).getFieldValue(\"plainText\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["024e13388acbf5562fcbb77a129620982a5e2d79"],"024e13388acbf5562fcbb77a129620982a5e2d79":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["af6d773d44e8c5f017e61150d2e054471faf8765"],"af6d773d44e8c5f017e61150d2e054471faf8765":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"9856095f7afb5a607bf5e65077615ed91273508c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","af6d773d44e8c5f017e61150d2e054471faf8765"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"024e13388acbf5562fcbb77a129620982a5e2d79":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"af6d773d44e8c5f017e61150d2e054471faf8765":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","9856095f7afb5a607bf5e65077615ed91273508c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af6d773d44e8c5f017e61150d2e054471faf8765","9856095f7afb5a607bf5e65077615ed91273508c"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["024e13388acbf5562fcbb77a129620982a5e2d79"],"9856095f7afb5a607bf5e65077615ed91273508c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9856095f7afb5a607bf5e65077615ed91273508c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}