{"path":"solr/core/src/test/org/apache/solr/response/TestRawResponseWriter#newRawResponseWriter(String).mjava","commits":[{"id":"9272dcea19192a5fb261980a4737677abfcabab3","date":1409771900,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/TestRawResponseWriter#newRawResponseWriter(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Generates a new {@link RawResponseWriter} wraping the specified baseWriter name \n   * (which much either be an implicitly definied response writer, or one explicitly \n   * configured in solrconfig.xml)\n   *\n   * @param baseWriter null or the name of a valid base writer\n   */\n  private static RawResponseWriter newRawResponseWriter(String baseWriter) {\n    RawResponseWriter writer = new RawResponseWriter();\n    NamedList initArgs = new NamedList<Object>();\n    if (null != baseWriter) {\n      initArgs.add(\"base\", baseWriter);\n    }\n    writer.init(initArgs);\n    return writer;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0158ced21948b6626f733c1c42c1e18d94449789","date":1462994341,"type":3,"author":"Bartosz Krasi≈Ñski","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/TestRawResponseWriter#newRawResponseWriter(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestRawResponseWriter#newRawResponseWriter(String).mjava","sourceNew":"  /**\n   * Generates a new {@link RawResponseWriter} wrapping the specified baseWriter name \n   * (which much either be an implicitly defined response writer, or one explicitly \n   * configured in solrconfig.xml)\n   *\n   * @param baseWriter null or the name of a valid base writer\n   */\n  private static RawResponseWriter newRawResponseWriter(String baseWriter) {\n    RawResponseWriter writer = new RawResponseWriter();\n    NamedList initArgs = new NamedList<Object>();\n    if (null != baseWriter) {\n      initArgs.add(\"base\", baseWriter);\n    }\n    writer.init(initArgs);\n    return writer;\n  }\n\n","sourceOld":"  /**\n   * Generates a new {@link RawResponseWriter} wraping the specified baseWriter name \n   * (which much either be an implicitly definied response writer, or one explicitly \n   * configured in solrconfig.xml)\n   *\n   * @param baseWriter null or the name of a valid base writer\n   */\n  private static RawResponseWriter newRawResponseWriter(String baseWriter) {\n    RawResponseWriter writer = new RawResponseWriter();\n    NamedList initArgs = new NamedList<Object>();\n    if (null != baseWriter) {\n      initArgs.add(\"base\", baseWriter);\n    }\n    writer.init(initArgs);\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/TestRawResponseWriter#newRawResponseWriter(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestRawResponseWriter#newRawResponseWriter(String).mjava","sourceNew":"  /**\n   * Generates a new {@link RawResponseWriter} wrapping the specified baseWriter name \n   * (which much either be an implicitly defined response writer, or one explicitly \n   * configured in solrconfig.xml)\n   *\n   * @param baseWriter null or the name of a valid base writer\n   */\n  private static RawResponseWriter newRawResponseWriter(String baseWriter) {\n    RawResponseWriter writer = new RawResponseWriter();\n    NamedList initArgs = new NamedList<Object>();\n    if (null != baseWriter) {\n      initArgs.add(\"base\", baseWriter);\n    }\n    writer.init(initArgs);\n    return writer;\n  }\n\n","sourceOld":"  /**\n   * Generates a new {@link RawResponseWriter} wraping the specified baseWriter name \n   * (which much either be an implicitly definied response writer, or one explicitly \n   * configured in solrconfig.xml)\n   *\n   * @param baseWriter null or the name of a valid base writer\n   */\n  private static RawResponseWriter newRawResponseWriter(String baseWriter) {\n    RawResponseWriter writer = new RawResponseWriter();\n    NamedList initArgs = new NamedList<Object>();\n    if (null != baseWriter) {\n      initArgs.add(\"base\", baseWriter);\n    }\n    writer.init(initArgs);\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/TestRawResponseWriter#newRawResponseWriter(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestRawResponseWriter#newRawResponseWriter(String).mjava","sourceNew":"  /**\n   * Generates a new {@link RawResponseWriter} wrapping the specified baseWriter name \n   * (which much either be an implicitly defined response writer, or one explicitly \n   * configured in solrconfig.xml)\n   *\n   * @param baseWriter null or the name of a valid base writer\n   */\n  private static RawResponseWriter newRawResponseWriter(String baseWriter) {\n    RawResponseWriter writer = new RawResponseWriter();\n    NamedList initArgs = new NamedList<Object>();\n    if (null != baseWriter) {\n      initArgs.add(\"base\", baseWriter);\n    }\n    writer.init(initArgs);\n    return writer;\n  }\n\n","sourceOld":"  /**\n   * Generates a new {@link RawResponseWriter} wraping the specified baseWriter name \n   * (which much either be an implicitly definied response writer, or one explicitly \n   * configured in solrconfig.xml)\n   *\n   * @param baseWriter null or the name of a valid base writer\n   */\n  private static RawResponseWriter newRawResponseWriter(String baseWriter) {\n    RawResponseWriter writer = new RawResponseWriter();\n    NamedList initArgs = new NamedList<Object>();\n    if (null != baseWriter) {\n      initArgs.add(\"base\", baseWriter);\n    }\n    writer.init(initArgs);\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/TestRawResponseWriter#newRawResponseWriter(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestRawResponseWriter#newRawResponseWriter(String).mjava","sourceNew":"  /**\n   * Generates a new {@link RawResponseWriter} wrapping the specified baseWriter name \n   * (which much either be an implicitly defined response writer, or one explicitly \n   * configured in solrconfig.xml)\n   *\n   * @param baseWriter null or the name of a valid base writer\n   */\n  @SuppressWarnings({\"unchecked\"})\n  private static RawResponseWriter newRawResponseWriter(String baseWriter) {\n    RawResponseWriter writer = new RawResponseWriter();\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList initArgs = new NamedList<Object>();\n    if (null != baseWriter) {\n      initArgs.add(\"base\", baseWriter);\n    }\n    writer.init(initArgs);\n    return writer;\n  }\n\n","sourceOld":"  /**\n   * Generates a new {@link RawResponseWriter} wrapping the specified baseWriter name \n   * (which much either be an implicitly defined response writer, or one explicitly \n   * configured in solrconfig.xml)\n   *\n   * @param baseWriter null or the name of a valid base writer\n   */\n  private static RawResponseWriter newRawResponseWriter(String baseWriter) {\n    RawResponseWriter writer = new RawResponseWriter();\n    NamedList initArgs = new NamedList<Object>();\n    if (null != baseWriter) {\n      initArgs.add(\"base\", baseWriter);\n    }\n    writer.init(initArgs);\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9272dcea19192a5fb261980a4737677abfcabab3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["9272dcea19192a5fb261980a4737677abfcabab3","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["9272dcea19192a5fb261980a4737677abfcabab3","0158ced21948b6626f733c1c42c1e18d94449789"],"0158ced21948b6626f733c1c42c1e18d94449789":["9272dcea19192a5fb261980a4737677abfcabab3"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9272dcea19192a5fb261980a4737677abfcabab3"],"9272dcea19192a5fb261980a4737677abfcabab3":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89","0158ced21948b6626f733c1c42c1e18d94449789"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","e98520789adb1d5ad05afb4956eca0944a929688"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0158ced21948b6626f733c1c42c1e18d94449789":["d470c8182e92b264680e34081b75e70a9f2b3c89"]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}