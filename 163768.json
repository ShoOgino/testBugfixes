{"path":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/MultiTermIntervalsSource#MultiTermIntervalsSource(CompiledAutomaton,int,String).mjava","commits":[{"id":"e3c9188b2bff41b228f06f721e7da193b96f895b","date":1548164162,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/MultiTermIntervalsSource#MultiTermIntervalsSource(CompiledAutomaton,int,String).mjava","pathOld":"/dev/null","sourceNew":"  MultiTermIntervalsSource(CompiledAutomaton automaton, int maxExpansions, String pattern) {\n    this.automaton = automaton;\n    this.maxExpansions = maxExpansions;\n    this.pattern = pattern;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2682a1cd25864ccdc1b44bf047bd08700f28ba06","date":1548321910,"type":0,"author":"Tommaso Teofili","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/MultiTermIntervalsSource#MultiTermIntervalsSource(CompiledAutomaton,int,String).mjava","pathOld":"/dev/null","sourceNew":"  MultiTermIntervalsSource(CompiledAutomaton automaton, int maxExpansions, String pattern) {\n    this.automaton = automaton;\n    this.maxExpansions = maxExpansions;\n    this.pattern = pattern;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8e2d8e342481751192efeb4f6db431b2ebd0943","date":1560251489,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/MultiTermIntervalsSource#MultiTermIntervalsSource(CompiledAutomaton,int,String).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/MultiTermIntervalsSource#MultiTermIntervalsSource(CompiledAutomaton,int,String).mjava","sourceNew":"  MultiTermIntervalsSource(CompiledAutomaton automaton, int maxExpansions, String pattern) {\n    this.automaton = automaton;\n    if (maxExpansions > BooleanQuery.getMaxClauseCount()) {\n      throw new IllegalArgumentException(\"maxExpansions [\" + maxExpansions\n          + \"] cannot be greater than BooleanQuery.getMaxClauseCount [\" + BooleanQuery.getMaxClauseCount() + \"]\");\n    }\n    this.maxExpansions = maxExpansions;\n    this.pattern = pattern;\n  }\n\n","sourceOld":"  MultiTermIntervalsSource(CompiledAutomaton automaton, int maxExpansions, String pattern) {\n    this.automaton = automaton;\n    this.maxExpansions = maxExpansions;\n    this.pattern = pattern;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7ee58fc3bbdc38aaab2e36abe99309a4a521adb","date":1561542955,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/MultiTermIntervalsSource#MultiTermIntervalsSource(CompiledAutomaton,int,String).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/MultiTermIntervalsSource#MultiTermIntervalsSource(CompiledAutomaton,int,String).mjava","sourceNew":"  MultiTermIntervalsSource(CompiledAutomaton automaton, int maxExpansions, String pattern) {\n    this.automaton = automaton;\n    if (maxExpansions > IndexSearcher.getMaxClauseCount()) {\n      throw new IllegalArgumentException(\"maxExpansions [\" + maxExpansions\n          + \"] cannot be greater than BooleanQuery.getMaxClauseCount [\" + IndexSearcher.getMaxClauseCount() + \"]\");\n    }\n    this.maxExpansions = maxExpansions;\n    this.pattern = pattern;\n  }\n\n","sourceOld":"  MultiTermIntervalsSource(CompiledAutomaton automaton, int maxExpansions, String pattern) {\n    this.automaton = automaton;\n    if (maxExpansions > BooleanQuery.getMaxClauseCount()) {\n      throw new IllegalArgumentException(\"maxExpansions [\" + maxExpansions\n          + \"] cannot be greater than BooleanQuery.getMaxClauseCount [\" + BooleanQuery.getMaxClauseCount() + \"]\");\n    }\n    this.maxExpansions = maxExpansions;\n    this.pattern = pattern;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97ee2282ff806e9bc9d705f389cf40451ab81c3e","date":1561721333,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/intervals/MultiTermIntervalsSource#MultiTermIntervalsSource(CompiledAutomaton,int,String).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/MultiTermIntervalsSource#MultiTermIntervalsSource(CompiledAutomaton,int,String).mjava","sourceNew":"  MultiTermIntervalsSource(CompiledAutomaton automaton, int maxExpansions, String pattern) {\n    this.automaton = automaton;\n    if (maxExpansions > IndexSearcher.getMaxClauseCount()) {\n      throw new IllegalArgumentException(\"maxExpansions [\" + maxExpansions\n          + \"] cannot be greater than BooleanQuery.getMaxClauseCount [\" + IndexSearcher.getMaxClauseCount() + \"]\");\n    }\n    this.maxExpansions = maxExpansions;\n    this.pattern = pattern;\n  }\n\n","sourceOld":"  MultiTermIntervalsSource(CompiledAutomaton automaton, int maxExpansions, String pattern) {\n    this.automaton = automaton;\n    if (maxExpansions > IndexSearcher.getMaxClauseCount()) {\n      throw new IllegalArgumentException(\"maxExpansions [\" + maxExpansions\n          + \"] cannot be greater than BooleanQuery.getMaxClauseCount [\" + IndexSearcher.getMaxClauseCount() + \"]\");\n    }\n    this.maxExpansions = maxExpansions;\n    this.pattern = pattern;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["f7ee58fc3bbdc38aaab2e36abe99309a4a521adb"],"c8e2d8e342481751192efeb4f6db431b2ebd0943":["e3c9188b2bff41b228f06f721e7da193b96f895b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e3c9188b2bff41b228f06f721e7da193b96f895b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"],"f7ee58fc3bbdc38aaab2e36abe99309a4a521adb":["c8e2d8e342481751192efeb4f6db431b2ebd0943"],"2682a1cd25864ccdc1b44bf047bd08700f28ba06":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e3c9188b2bff41b228f06f721e7da193b96f895b"]},"commit2Childs":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c8e2d8e342481751192efeb4f6db431b2ebd0943":["f7ee58fc3bbdc38aaab2e36abe99309a4a521adb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e3c9188b2bff41b228f06f721e7da193b96f895b","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"e3c9188b2bff41b228f06f721e7da193b96f895b":["c8e2d8e342481751192efeb4f6db431b2ebd0943","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"f7ee58fc3bbdc38aaab2e36abe99309a4a521adb":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2682a1cd25864ccdc1b44bf047bd08700f28ba06":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}