{"path":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","commits":[{"id":"ee3a275f925be62184fad78d647fa70e27ac7cea","date":1301416659,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : analyzeRangePart(f, part1);\n    BytesRef high = part2 == null ? null : analyzeRangePart(f, part2);\n    return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : analyzeRangePart(f, part1);\n    BytesRef high = part2 == null ? null : analyzeRangePart(f, part2);\n    return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : analyzeRangePart(f, part1);\n    BytesRef high = part2 == null ? null : analyzeRangePart(f, part2);\n    return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/analysis-extras/src/main/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","sourceNew":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : analyzeRangePart(f, part1);\n    BytesRef high = part2 == null ? null : analyzeRangePart(f, part2);\n    return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n  }\n\n","sourceOld":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : analyzeRangePart(f, part1);\n    BytesRef high = part2 == null ? null : analyzeRangePart(f, part2);\n    return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"solr/contrib/analysis-extras/src/main/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","sourceNew":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : analyzeRangePart(f, part1);\n    BytesRef high = part2 == null ? null : analyzeRangePart(f, part2);\n    return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n  }\n\n","sourceOld":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : analyzeRangePart(f, part1);\n    BytesRef high = part2 == null ? null : analyzeRangePart(f, part2);\n    return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"14b8979f99ff6ba77ce7fd57b57c86ace7a1ef64","date":1385598663,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","sourceNew":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      if (field.multiValued()) {\n          return new ConstantScoreQuery(DocTermOrdsRangeFilter.newBytesRefRange(\n              field.getName(), low, high, minInclusive, maxInclusive));\n        } else {\n          return new ConstantScoreQuery(FieldCacheRangeFilter.newBytesRefRange(\n              field.getName(), low, high, minInclusive, maxInclusive));\n        } \n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : analyzeRangePart(f, part1);\n    BytesRef high = part2 == null ? null : analyzeRangePart(f, part2);\n    return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n  }\n\n","bugFix":null,"bugIntro":["9274621789ce990dbfef455dabdf026bb3184821","9274621789ce990dbfef455dabdf026bb3184821","9274621789ce990dbfef455dabdf026bb3184821","9274621789ce990dbfef455dabdf026bb3184821","9274621789ce990dbfef455dabdf026bb3184821","9274621789ce990dbfef455dabdf026bb3184821","9274621789ce990dbfef455dabdf026bb3184821","9274621789ce990dbfef455dabdf026bb3184821","9274621789ce990dbfef455dabdf026bb3184821"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","sourceNew":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      if (field.multiValued()) {\n          return new ConstantScoreQuery(DocTermOrdsRangeFilter.newBytesRefRange(\n              field.getName(), low, high, minInclusive, maxInclusive));\n        } else {\n          return new ConstantScoreQuery(FieldCacheRangeFilter.newBytesRefRange(\n              field.getName(), low, high, minInclusive, maxInclusive));\n        } \n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : analyzeRangePart(f, part1);\n    BytesRef high = part2 == null ? null : analyzeRangePart(f, part2);\n    return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9274621789ce990dbfef455dabdf026bb3184821","date":1400046684,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","sourceNew":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      if (field.multiValued()) {\n          return new ConstantScoreQuery(DocTermOrdsRangeFilter.newBytesRefRange(\n              field.getName(), low, high, minInclusive, maxInclusive));\n        } else {\n          return new ConstantScoreQuery(DocValuesRangeFilter.newBytesRefRange(\n              field.getName(), low, high, minInclusive, maxInclusive));\n        } \n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      if (field.multiValued()) {\n          return new ConstantScoreQuery(DocTermOrdsRangeFilter.newBytesRefRange(\n              field.getName(), low, high, minInclusive, maxInclusive));\n        } else {\n          return new ConstantScoreQuery(FieldCacheRangeFilter.newBytesRefRange(\n              field.getName(), low, high, minInclusive, maxInclusive));\n        } \n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","bugFix":["14b8979f99ff6ba77ce7fd57b57c86ace7a1ef64"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","sourceNew":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      if (field.multiValued()) {\n          return new ConstantScoreQuery(DocTermOrdsRangeFilter.newBytesRefRange(\n              field.getName(), low, high, minInclusive, maxInclusive));\n        } else {\n          return new ConstantScoreQuery(DocValuesRangeFilter.newBytesRefRange(\n              field.getName(), low, high, minInclusive, maxInclusive));\n        } \n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      if (field.multiValued()) {\n          return new ConstantScoreQuery(DocTermOrdsRangeFilter.newBytesRefRange(\n              field.getName(), low, high, minInclusive, maxInclusive));\n        } else {\n          return new ConstantScoreQuery(FieldCacheRangeFilter.newBytesRefRange(\n              field.getName(), low, high, minInclusive, maxInclusive));\n        } \n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","sourceNew":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      if (field.multiValued()) {\n          return new ConstantScoreQuery(DocTermOrdsRangeFilter.newBytesRefRange(\n              field.getName(), low, high, minInclusive, maxInclusive));\n        } else {\n          return new ConstantScoreQuery(DocValuesRangeFilter.newBytesRefRange(\n              field.getName(), low, high, minInclusive, maxInclusive));\n        } \n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      if (field.multiValued()) {\n          return new ConstantScoreQuery(DocTermOrdsRangeFilter.newBytesRefRange(\n              field.getName(), low, high, minInclusive, maxInclusive));\n        } else {\n          return new ConstantScoreQuery(FieldCacheRangeFilter.newBytesRefRange(\n              field.getName(), low, high, minInclusive, maxInclusive));\n        } \n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"484e80062d7ab2729bc82f0311d6a97dd913961a","date":1424450206,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","sourceNew":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      if (field.multiValued()) {\n          return DocValuesRangeQuery.newBytesRefRange(\n              field.getName(), low, high, minInclusive, maxInclusive);\n        } else {\n          return DocValuesRangeQuery.newBytesRefRange(\n              field.getName(), low, high, minInclusive, maxInclusive);\n        } \n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      if (field.multiValued()) {\n          return new ConstantScoreQuery(DocTermOrdsRangeFilter.newBytesRefRange(\n              field.getName(), low, high, minInclusive, maxInclusive));\n        } else {\n          return new ConstantScoreQuery(DocValuesRangeFilter.newBytesRefRange(\n              field.getName(), low, high, minInclusive, maxInclusive));\n        } \n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a412a7808b2815566cb17117ebe6638112b9a31","date":1484916151,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","sourceNew":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      if (field.multiValued()) {\n          return DocValuesRangeQuery.newBytesRefRange(\n              field.getName(), low, high, minInclusive, maxInclusive);\n        } else {\n          return DocValuesRangeQuery.newBytesRefRange(\n              field.getName(), low, high, minInclusive, maxInclusive);\n        } \n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","bugFix":null,"bugIntro":["b22152b9e1a55aed5f1510ecb2312a0be7056400","b22152b9e1a55aed5f1510ecb2312a0be7056400","b22152b9e1a55aed5f1510ecb2312a0be7056400","b22152b9e1a55aed5f1510ecb2312a0be7056400","b22152b9e1a55aed5f1510ecb2312a0be7056400","b22152b9e1a55aed5f1510ecb2312a0be7056400","b22152b9e1a55aed5f1510ecb2312a0be7056400","b22152b9e1a55aed5f1510ecb2312a0be7056400","b22152b9e1a55aed5f1510ecb2312a0be7056400"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"90a682dc1bfd188ef61cc28373c7f5d700b4ac75","date":1485186128,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","sourceNew":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      if (field.multiValued()) {\n          return DocValuesRangeQuery.newBytesRefRange(\n              field.getName(), low, high, minInclusive, maxInclusive);\n        } else {\n          return DocValuesRangeQuery.newBytesRefRange(\n              field.getName(), low, high, minInclusive, maxInclusive);\n        } \n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b22152b9e1a55aed5f1510ecb2312a0be7056400","date":1500556211,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","sourceNew":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","bugFix":["5a412a7808b2815566cb17117ebe6638112b9a31"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"936cdd5882761db3b844afd6f84ab81cbb011a75","date":1500973524,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","sourceNew":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c81907bd971f786e378654d32b80da32b0e950d","date":1578330742,"type":5,"author":"Houston Putman","isMerge":false,"pathNew":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getSpecializedRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","sourceNew":"  @Override\n  protected Query getSpecializedRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c81907bd971f786e378654d32b80da32b0e950d","date":1578330742,"type":6,"author":"Houston Putman","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/CollationField#getSpecializedRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","sourceNew":"  @Override\n  protected Query getSpecializedRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca62564055241632cd20d65b5ecb8c8e93bd60c4","date":1578383112,"type":5,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getSpecializedRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","sourceNew":"  @Override\n  protected Query getSpecializedRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca62564055241632cd20d65b5ecb8c8e93bd60c4","date":1578383112,"type":6,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/CollationField#getSpecializedRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","sourceNew":"  @Override\n  protected Query getSpecializedRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8381df1a98f2a399bf06d747fc8cea1b2a17ae38","date":1578526395,"type":1,"author":"Houston Putman","isMerge":false,"pathNew":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getSpecializedRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","sourceNew":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected Query getSpecializedRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da93834e39ce341a13e42b611d0a83bd3114bba","date":1578567362,"type":1,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getSpecializedRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","sourceNew":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected Query getSpecializedRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c7ba457c7f2595139254fab54362be336c5c355","date":1579734055,"type":5,"author":"Houston Putman","isMerge":false,"pathNew":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getSpecializedRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","sourceNew":"  @Override\n  protected Query getSpecializedRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c7ba457c7f2595139254fab54362be336c5c355","date":1579734055,"type":6,"author":"Houston Putman","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/CollationField#getSpecializedRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"solr/contrib/analysis-extras/src/java/org/apache/solr/schema/ICUCollationField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","sourceNew":"  @Override\n  protected Query getSpecializedRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n    String f = field.getName();\n    BytesRef low = part1 == null ? null : getCollationKey(f, part1);\n    BytesRef high = part2 == null ? null : getCollationKey(f, part2);\n    if (!field.indexed() && field.hasDocValues()) {\n      return SortedSetDocValuesField.newSlowRangeQuery(\n          field.getName(), low, high, minInclusive, maxInclusive);\n    } else {\n      return new TermRangeQuery(field.getName(), low, high, minInclusive, maxInclusive);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8381df1a98f2a399bf06d747fc8cea1b2a17ae38":["0c81907bd971f786e378654d32b80da32b0e950d"],"9274621789ce990dbfef455dabdf026bb3184821":["14b8979f99ff6ba77ce7fd57b57c86ace7a1ef64"],"484e80062d7ab2729bc82f0311d6a97dd913961a":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ee3a275f925be62184fad78d647fa70e27ac7cea"],"14b8979f99ff6ba77ce7fd57b57c86ace7a1ef64":["ee3a275f925be62184fad78d647fa70e27ac7cea"],"1da93834e39ce341a13e42b611d0a83bd3114bba":["ca62564055241632cd20d65b5ecb8c8e93bd60c4","8381df1a98f2a399bf06d747fc8cea1b2a17ae38"],"936cdd5882761db3b844afd6f84ab81cbb011a75":["5a412a7808b2815566cb17117ebe6638112b9a31","b22152b9e1a55aed5f1510ecb2312a0be7056400"],"56572ec06f1407c066d6b7399413178b33176cd8":["14b8979f99ff6ba77ce7fd57b57c86ace7a1ef64","93dd449115a9247533e44bab47e8429e5dccbc6d"],"ca62564055241632cd20d65b5ecb8c8e93bd60c4":["b22152b9e1a55aed5f1510ecb2312a0be7056400","0c81907bd971f786e378654d32b80da32b0e950d"],"90a682dc1bfd188ef61cc28373c7f5d700b4ac75":["484e80062d7ab2729bc82f0311d6a97dd913961a","5a412a7808b2815566cb17117ebe6638112b9a31"],"b22152b9e1a55aed5f1510ecb2312a0be7056400":["5a412a7808b2815566cb17117ebe6638112b9a31"],"0c81907bd971f786e378654d32b80da32b0e950d":["b22152b9e1a55aed5f1510ecb2312a0be7056400"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["14b8979f99ff6ba77ce7fd57b57c86ace7a1ef64","9274621789ce990dbfef455dabdf026bb3184821"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a3776dccca01c11e7046323cfad46a3b4a471233","ee3a275f925be62184fad78d647fa70e27ac7cea"],"a3776dccca01c11e7046323cfad46a3b4a471233":["ee3a275f925be62184fad78d647fa70e27ac7cea","ee3a275f925be62184fad78d647fa70e27ac7cea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5c7ba457c7f2595139254fab54362be336c5c355":["8381df1a98f2a399bf06d747fc8cea1b2a17ae38"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["ee3a275f925be62184fad78d647fa70e27ac7cea","14b8979f99ff6ba77ce7fd57b57c86ace7a1ef64"],"5a412a7808b2815566cb17117ebe6638112b9a31":["484e80062d7ab2729bc82f0311d6a97dd913961a"],"45669a651c970812a680841b97a77cce06af559f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ee3a275f925be62184fad78d647fa70e27ac7cea"],"ee3a275f925be62184fad78d647fa70e27ac7cea":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5c7ba457c7f2595139254fab54362be336c5c355"]},"commit2Childs":{"8381df1a98f2a399bf06d747fc8cea1b2a17ae38":["1da93834e39ce341a13e42b611d0a83bd3114bba","5c7ba457c7f2595139254fab54362be336c5c355"],"9274621789ce990dbfef455dabdf026bb3184821":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"484e80062d7ab2729bc82f0311d6a97dd913961a":["90a682dc1bfd188ef61cc28373c7f5d700b4ac75","5a412a7808b2815566cb17117ebe6638112b9a31"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"14b8979f99ff6ba77ce7fd57b57c86ace7a1ef64":["9274621789ce990dbfef455dabdf026bb3184821","56572ec06f1407c066d6b7399413178b33176cd8","93dd449115a9247533e44bab47e8429e5dccbc6d","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"1da93834e39ce341a13e42b611d0a83bd3114bba":[],"936cdd5882761db3b844afd6f84ab81cbb011a75":[],"56572ec06f1407c066d6b7399413178b33176cd8":[],"ca62564055241632cd20d65b5ecb8c8e93bd60c4":["1da93834e39ce341a13e42b611d0a83bd3114bba"],"90a682dc1bfd188ef61cc28373c7f5d700b4ac75":[],"b22152b9e1a55aed5f1510ecb2312a0be7056400":["936cdd5882761db3b844afd6f84ab81cbb011a75","ca62564055241632cd20d65b5ecb8c8e93bd60c4","0c81907bd971f786e378654d32b80da32b0e950d"],"0c81907bd971f786e378654d32b80da32b0e950d":["8381df1a98f2a399bf06d747fc8cea1b2a17ae38","ca62564055241632cd20d65b5ecb8c8e93bd60c4"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["484e80062d7ab2729bc82f0311d6a97dd913961a","56572ec06f1407c066d6b7399413178b33176cd8"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a3776dccca01c11e7046323cfad46a3b4a471233":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["135621f3a0670a9394eb563224a3b76cc4dddc0f","45669a651c970812a680841b97a77cce06af559f","ee3a275f925be62184fad78d647fa70e27ac7cea"],"5c7ba457c7f2595139254fab54362be336c5c355":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"5a412a7808b2815566cb17117ebe6638112b9a31":["936cdd5882761db3b844afd6f84ab81cbb011a75","90a682dc1bfd188ef61cc28373c7f5d700b4ac75","b22152b9e1a55aed5f1510ecb2312a0be7056400"],"45669a651c970812a680841b97a77cce06af559f":[],"ee3a275f925be62184fad78d647fa70e27ac7cea":["135621f3a0670a9394eb563224a3b76cc4dddc0f","14b8979f99ff6ba77ce7fd57b57c86ace7a1ef64","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","a3776dccca01c11e7046323cfad46a3b4a471233","74f45af4339b0daf7a95c820ab88c1aea74fbce0","45669a651c970812a680841b97a77cce06af559f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","1da93834e39ce341a13e42b611d0a83bd3114bba","936cdd5882761db3b844afd6f84ab81cbb011a75","56572ec06f1407c066d6b7399413178b33176cd8","90a682dc1bfd188ef61cc28373c7f5d700b4ac75","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","74f45af4339b0daf7a95c820ab88c1aea74fbce0","45669a651c970812a680841b97a77cce06af559f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}