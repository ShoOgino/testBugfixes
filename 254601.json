{"path":"contrib/clustering/src/test/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#getClusteringEngine(String).mjava","commits":[{"id":"3ee70799f6a87a250e98ce10a7bc3e28d41eac23","date":1242826192,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/clustering/src/test/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#getClusteringEngine(String).mjava","pathOld":"/dev/null","sourceNew":"\tprivate CarrotClusteringEngine getClusteringEngine(String engineName) {\n\t\tClusteringComponent comp = (ClusteringComponent) h.getCore()\n\t\t\t\t.getSearchComponent(\"clustering\");\n\t\tassertNotNull(\"clustering component should not be null\", comp);\n\t\tCarrotClusteringEngine engine = (CarrotClusteringEngine) comp\n\t\t\t\t.getSearchClusteringEngines().get(engineName);\n\t\tassertNotNull(\"clustering engine for name: \" + engineName\n\t\t\t\t+ \" should not be null\", engine);\n\t\treturn engine;\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2771e5f68dda632a1044fdfecbc7bffae0a4ea8","date":1246543717,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/clustering/src/test/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#getClusteringEngine(String).mjava","pathOld":"contrib/clustering/src/test/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#getClusteringEngine(String).mjava","sourceNew":"  private CarrotClusteringEngine getClusteringEngine(String engineName) {\n    ClusteringComponent comp = (ClusteringComponent) h.getCore()\n            .getSearchComponent(\"clustering\");\n    assertNotNull(\"clustering component should not be null\", comp);\n    CarrotClusteringEngine engine = (CarrotClusteringEngine) comp\n            .getSearchClusteringEngines().get(engineName);\n    assertNotNull(\"clustering engine for name: \" + engineName\n            + \" should not be null\", engine);\n    return engine;\n  }\n\n","sourceOld":"\tprivate CarrotClusteringEngine getClusteringEngine(String engineName) {\n\t\tClusteringComponent comp = (ClusteringComponent) h.getCore()\n\t\t\t\t.getSearchComponent(\"clustering\");\n\t\tassertNotNull(\"clustering component should not be null\", comp);\n\t\tCarrotClusteringEngine engine = (CarrotClusteringEngine) comp\n\t\t\t\t.getSearchClusteringEngines().get(engineName);\n\t\tassertNotNull(\"clustering engine for name: \" + engineName\n\t\t\t\t+ \" should not be null\", engine);\n\t\treturn engine;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/clustering/src/test/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#getClusteringEngine(String).mjava","pathOld":"contrib/clustering/src/test/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#getClusteringEngine(String).mjava","sourceNew":"  private CarrotClusteringEngine getClusteringEngine(String engineName) {\n    ClusteringComponent comp = (ClusteringComponent) h.getCore()\n            .getSearchComponent(\"clustering\");\n    assertNotNull(\"clustering component should not be null\", comp);\n    CarrotClusteringEngine engine = (CarrotClusteringEngine) comp\n            .getSearchClusteringEngines().get(engineName);\n    assertNotNull(\"clustering engine for name: \" + engineName\n            + \" should not be null\", engine);\n    return engine;\n  }\n\n","sourceOld":"  private CarrotClusteringEngine getClusteringEngine(String engineName) {\n    ClusteringComponent comp = (ClusteringComponent) h.getCore()\n            .getSearchComponent(\"clustering\");\n    assertNotNull(\"clustering component should not be null\", comp);\n    CarrotClusteringEngine engine = (CarrotClusteringEngine) comp\n            .getSearchClusteringEngines().get(engineName);\n    assertNotNull(\"clustering engine for name: \" + engineName\n            + \" should not be null\", engine);\n    return engine;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3ee70799f6a87a250e98ce10a7bc3e28d41eac23":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d2771e5f68dda632a1044fdfecbc7bffae0a4ea8":["3ee70799f6a87a250e98ce10a7bc3e28d41eac23"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["d2771e5f68dda632a1044fdfecbc7bffae0a4ea8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3ee70799f6a87a250e98ce10a7bc3e28d41eac23":["d2771e5f68dda632a1044fdfecbc7bffae0a4ea8"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["3ee70799f6a87a250e98ce10a7bc3e28d41eac23"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d2771e5f68dda632a1044fdfecbc7bffae0a4ea8":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}