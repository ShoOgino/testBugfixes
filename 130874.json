{"path":"contrib/snowball/src/java/net/sf/snowball/ext/NorwegianStemmer#r_main_suffix().mjava","commits":[{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/snowball/src/java/net/sf/snowball/ext/NorwegianStemmer#r_main_suffix().mjava","pathOld":"sandbox/contributions/snowball/src/java/net/sf/snowball/ext/NorwegianStemmer#r_main_suffix().mjava","sourceNew":"        private boolean r_main_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            // (, line 36\n            // setlimit, line 37\n            v_1 = limit - cursor;\n            // tomark, line 37\n            if (cursor < I_p1)\n            {\n                return false;\n            }\n            cursor = I_p1;\n            v_2 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_1;\n            // (, line 37\n            // [, line 37\n            ket = cursor;\n            // substring, line 37\n            among_var = find_among_b(a_0, 29);\n            if (among_var == 0)\n            {\n                limit_backward = v_2;\n                return false;\n            }\n            // ], line 37\n            bra = cursor;\n            limit_backward = v_2;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 43\n                    // delete, line 43\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 45\n                    if (!(in_grouping_b(g_s_ending, 98, 122)))\n                    {\n                        return false;\n                    }\n                    // delete, line 45\n                    slice_del();\n                    break;\n                case 3:\n                    // (, line 47\n                    // <-, line 47\n                    slice_from(\"er\");\n                    break;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_main_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            // (, line 36\n            // setlimit, line 37\n            v_1 = limit - cursor;\n            // tomark, line 37\n            if (cursor < I_p1)\n            {\n                return false;\n            }\n            cursor = I_p1;\n            v_2 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_1;\n            // (, line 37\n            // [, line 37\n            ket = cursor;\n            // substring, line 37\n            among_var = find_among_b(a_0, 29);\n            if (among_var == 0)\n            {\n                limit_backward = v_2;\n                return false;\n            }\n            // ], line 37\n            bra = cursor;\n            limit_backward = v_2;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 43\n                    // delete, line 43\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 45\n                    if (!(in_grouping_b(g_s_ending, 98, 122)))\n                    {\n                        return false;\n                    }\n                    // delete, line 45\n                    slice_del();\n                    break;\n                case 3:\n                    // (, line 47\n                    // <-, line 47\n                    slice_from(\"er\");\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b62da6a75575f59a016a076b4753dc6e20c74b44","date":1219528967,"type":6,"author":"Karl-Johan Wettin","isMerge":false,"pathNew":"contrib/snowball/src/java/org/tartarus/snowball/ext/HungarianStemmer#r_case_other().mjava","pathOld":"contrib/snowball/src/java/net/sf/snowball/ext/NorwegianStemmer#r_main_suffix().mjava","sourceNew":"        private boolean r_case_other() {\n            int among_var;\n            // (, line 123\n            // [, line 124\n            ket = cursor;\n            // substring, line 124\n            among_var = find_among_b(a_6, 6);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 124\n            bra = cursor;\n            // call R1, line 124\n            if (!r_R1())\n            {\n                return false;\n            }\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 125\n                    // delete, line 125\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 126\n                    // delete, line 126\n                    slice_del();\n                    break;\n                case 3:\n                    // (, line 127\n                    // <-, line 127\n                    slice_from(\"a\");\n                    break;\n                case 4:\n                    // (, line 128\n                    // <-, line 128\n                    slice_from(\"e\");\n                    break;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_main_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            // (, line 36\n            // setlimit, line 37\n            v_1 = limit - cursor;\n            // tomark, line 37\n            if (cursor < I_p1)\n            {\n                return false;\n            }\n            cursor = I_p1;\n            v_2 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_1;\n            // (, line 37\n            // [, line 37\n            ket = cursor;\n            // substring, line 37\n            among_var = find_among_b(a_0, 29);\n            if (among_var == 0)\n            {\n                limit_backward = v_2;\n                return false;\n            }\n            // ], line 37\n            bra = cursor;\n            limit_backward = v_2;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 43\n                    // delete, line 43\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 45\n                    if (!(in_grouping_b(g_s_ending, 98, 122)))\n                    {\n                        return false;\n                    }\n                    // delete, line 45\n                    slice_del();\n                    break;\n                case 3:\n                    // (, line 47\n                    // <-, line 47\n                    slice_from(\"er\");\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b62da6a75575f59a016a076b4753dc6e20c74b44","date":1219528967,"type":6,"author":"Karl-Johan Wettin","isMerge":false,"pathNew":"contrib/snowball/src/java/org/tartarus/snowball/ext/HungarianStemmer#r_case_special().mjava","pathOld":"contrib/snowball/src/java/net/sf/snowball/ext/NorwegianStemmer#r_main_suffix().mjava","sourceNew":"        private boolean r_case_special() {\n            int among_var;\n            // (, line 115\n            // [, line 116\n            ket = cursor;\n            // substring, line 116\n            among_var = find_among_b(a_5, 3);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 116\n            bra = cursor;\n            // call R1, line 116\n            if (!r_R1())\n            {\n                return false;\n            }\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 117\n                    // <-, line 117\n                    slice_from(\"e\");\n                    break;\n                case 2:\n                    // (, line 118\n                    // <-, line 118\n                    slice_from(\"a\");\n                    break;\n                case 3:\n                    // (, line 119\n                    // <-, line 119\n                    slice_from(\"a\");\n                    break;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_main_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            // (, line 36\n            // setlimit, line 37\n            v_1 = limit - cursor;\n            // tomark, line 37\n            if (cursor < I_p1)\n            {\n                return false;\n            }\n            cursor = I_p1;\n            v_2 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_1;\n            // (, line 37\n            // [, line 37\n            ket = cursor;\n            // substring, line 37\n            among_var = find_among_b(a_0, 29);\n            if (among_var == 0)\n            {\n                limit_backward = v_2;\n                return false;\n            }\n            // ], line 37\n            bra = cursor;\n            limit_backward = v_2;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 43\n                    // delete, line 43\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 45\n                    if (!(in_grouping_b(g_s_ending, 98, 122)))\n                    {\n                        return false;\n                    }\n                    // delete, line 45\n                    slice_del();\n                    break;\n                case 3:\n                    // (, line 47\n                    // <-, line 47\n                    slice_from(\"er\");\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b62da6a75575f59a016a076b4753dc6e20c74b44","date":1219528967,"type":6,"author":"Karl-Johan Wettin","isMerge":false,"pathNew":"contrib/snowball/src/java/org/tartarus/snowball/ext/HungarianStemmer#r_factive().mjava","pathOld":"contrib/snowball/src/java/net/sf/snowball/ext/NorwegianStemmer#r_main_suffix().mjava","sourceNew":"        private boolean r_factive() {\n            int among_var;\n            // (, line 132\n            // [, line 133\n            ket = cursor;\n            // substring, line 133\n            among_var = find_among_b(a_7, 2);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 133\n            bra = cursor;\n            // call R1, line 133\n            if (!r_R1())\n            {\n                return false;\n            }\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 134\n                    // call double, line 134\n                    if (!r_double())\n                    {\n                        return false;\n                    }\n                    break;\n                case 2:\n                    // (, line 135\n                    // call double, line 135\n                    if (!r_double())\n                    {\n                        return false;\n                    }\n                    break;\n            }\n            // delete, line 137\n            slice_del();\n            // call undouble, line 138\n            if (!r_undouble())\n            {\n                return false;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_main_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            // (, line 36\n            // setlimit, line 37\n            v_1 = limit - cursor;\n            // tomark, line 37\n            if (cursor < I_p1)\n            {\n                return false;\n            }\n            cursor = I_p1;\n            v_2 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_1;\n            // (, line 37\n            // [, line 37\n            ket = cursor;\n            // substring, line 37\n            among_var = find_among_b(a_0, 29);\n            if (among_var == 0)\n            {\n                limit_backward = v_2;\n                return false;\n            }\n            // ], line 37\n            bra = cursor;\n            limit_backward = v_2;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 43\n                    // delete, line 43\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 45\n                    if (!(in_grouping_b(g_s_ending, 98, 122)))\n                    {\n                        return false;\n                    }\n                    // delete, line 45\n                    slice_del();\n                    break;\n                case 3:\n                    // (, line 47\n                    // <-, line 47\n                    slice_from(\"er\");\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b62da6a75575f59a016a076b4753dc6e20c74b44","date":1219528967,"type":6,"author":"Karl-Johan Wettin","isMerge":false,"pathNew":"contrib/snowball/src/java/org/tartarus/snowball/ext/HungarianStemmer#r_instrum().mjava","pathOld":"contrib/snowball/src/java/net/sf/snowball/ext/NorwegianStemmer#r_main_suffix().mjava","sourceNew":"        private boolean r_instrum() {\n            int among_var;\n            // (, line 76\n            // [, line 77\n            ket = cursor;\n            // substring, line 77\n            among_var = find_among_b(a_3, 2);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 77\n            bra = cursor;\n            // call R1, line 77\n            if (!r_R1())\n            {\n                return false;\n            }\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 78\n                    // call double, line 78\n                    if (!r_double())\n                    {\n                        return false;\n                    }\n                    break;\n                case 2:\n                    // (, line 79\n                    // call double, line 79\n                    if (!r_double())\n                    {\n                        return false;\n                    }\n                    break;\n            }\n            // delete, line 81\n            slice_del();\n            // call undouble, line 82\n            if (!r_undouble())\n            {\n                return false;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_main_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            // (, line 36\n            // setlimit, line 37\n            v_1 = limit - cursor;\n            // tomark, line 37\n            if (cursor < I_p1)\n            {\n                return false;\n            }\n            cursor = I_p1;\n            v_2 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_1;\n            // (, line 37\n            // [, line 37\n            ket = cursor;\n            // substring, line 37\n            among_var = find_among_b(a_0, 29);\n            if (among_var == 0)\n            {\n                limit_backward = v_2;\n                return false;\n            }\n            // ], line 37\n            bra = cursor;\n            limit_backward = v_2;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 43\n                    // delete, line 43\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 45\n                    if (!(in_grouping_b(g_s_ending, 98, 122)))\n                    {\n                        return false;\n                    }\n                    // delete, line 45\n                    slice_del();\n                    break;\n                case 3:\n                    // (, line 47\n                    // <-, line 47\n                    slice_from(\"er\");\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b62da6a75575f59a016a076b4753dc6e20c74b44","date":1219528967,"type":5,"author":"Karl-Johan Wettin","isMerge":false,"pathNew":"contrib/snowball/src/java/org/tartarus/snowball/ext/NorwegianStemmer#r_main_suffix().mjava","pathOld":"contrib/snowball/src/java/net/sf/snowball/ext/NorwegianStemmer#r_main_suffix().mjava","sourceNew":"        private boolean r_main_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            // (, line 37\n            // setlimit, line 38\n            v_1 = limit - cursor;\n            // tomark, line 38\n            if (cursor < I_p1)\n            {\n                return false;\n            }\n            cursor = I_p1;\n            v_2 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_1;\n            // (, line 38\n            // [, line 38\n            ket = cursor;\n            // substring, line 38\n            among_var = find_among_b(a_0, 29);\n            if (among_var == 0)\n            {\n                limit_backward = v_2;\n                return false;\n            }\n            // ], line 38\n            bra = cursor;\n            limit_backward = v_2;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 44\n                    // delete, line 44\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 46\n                    // or, line 46\n                    lab0: do {\n                        v_3 = limit - cursor;\n                        lab1: do {\n                            if (!(in_grouping_b(g_s_ending, 98, 122)))\n                            {\n                                break lab1;\n                            }\n                            break lab0;\n                        } while (false);\n                        cursor = limit - v_3;\n                        // (, line 46\n                        // literal, line 46\n                        if (!(eq_s_b(1, \"k\")))\n                        {\n                            return false;\n                        }\n                        if (!(out_grouping_b(g_v, 97, 248)))\n                        {\n                            return false;\n                        }\n                    } while (false);\n                    // delete, line 46\n                    slice_del();\n                    break;\n                case 3:\n                    // (, line 48\n                    // <-, line 48\n                    slice_from(\"er\");\n                    break;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_main_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            // (, line 36\n            // setlimit, line 37\n            v_1 = limit - cursor;\n            // tomark, line 37\n            if (cursor < I_p1)\n            {\n                return false;\n            }\n            cursor = I_p1;\n            v_2 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_1;\n            // (, line 37\n            // [, line 37\n            ket = cursor;\n            // substring, line 37\n            among_var = find_among_b(a_0, 29);\n            if (among_var == 0)\n            {\n                limit_backward = v_2;\n                return false;\n            }\n            // ], line 37\n            bra = cursor;\n            limit_backward = v_2;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 43\n                    // delete, line 43\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 45\n                    if (!(in_grouping_b(g_s_ending, 98, 122)))\n                    {\n                        return false;\n                    }\n                    // delete, line 45\n                    slice_del();\n                    break;\n                case 3:\n                    // (, line 47\n                    // <-, line 47\n                    slice_from(\"er\");\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b62da6a75575f59a016a076b4753dc6e20c74b44","date":1219528967,"type":6,"author":"Karl-Johan Wettin","isMerge":false,"pathNew":"contrib/snowball/src/java/org/tartarus/snowball/ext/RomanianStemmer#r_combo_suffix().mjava","pathOld":"contrib/snowball/src/java/net/sf/snowball/ext/NorwegianStemmer#r_main_suffix().mjava","sourceNew":"        private boolean r_combo_suffix() {\n            int among_var;\n            int v_1;\n            // test, line 91\n            v_1 = limit - cursor;\n            // (, line 91\n            // [, line 92\n            ket = cursor;\n            // substring, line 92\n            among_var = find_among_b(a_2, 46);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 92\n            bra = cursor;\n            // call R1, line 92\n            if (!r_R1())\n            {\n                return false;\n            }\n            // (, line 92\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 100\n                    // <-, line 101\n                    slice_from(\"abil\");\n                    break;\n                case 2:\n                    // (, line 103\n                    // <-, line 104\n                    slice_from(\"ibil\");\n                    break;\n                case 3:\n                    // (, line 106\n                    // <-, line 107\n                    slice_from(\"iv\");\n                    break;\n                case 4:\n                    // (, line 112\n                    // <-, line 113\n                    slice_from(\"ic\");\n                    break;\n                case 5:\n                    // (, line 117\n                    // <-, line 118\n                    slice_from(\"at\");\n                    break;\n                case 6:\n                    // (, line 121\n                    // <-, line 122\n                    slice_from(\"it\");\n                    break;\n            }\n            // set standard_suffix_removed, line 125\n            B_standard_suffix_removed = true;\n            cursor = limit - v_1;\n            return true;\n        }\n\n","sourceOld":"        private boolean r_main_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            // (, line 36\n            // setlimit, line 37\n            v_1 = limit - cursor;\n            // tomark, line 37\n            if (cursor < I_p1)\n            {\n                return false;\n            }\n            cursor = I_p1;\n            v_2 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_1;\n            // (, line 37\n            // [, line 37\n            ket = cursor;\n            // substring, line 37\n            among_var = find_among_b(a_0, 29);\n            if (among_var == 0)\n            {\n                limit_backward = v_2;\n                return false;\n            }\n            // ], line 37\n            bra = cursor;\n            limit_backward = v_2;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 43\n                    // delete, line 43\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 45\n                    if (!(in_grouping_b(g_s_ending, 98, 122)))\n                    {\n                        return false;\n                    }\n                    // delete, line 45\n                    slice_del();\n                    break;\n                case 3:\n                    // (, line 47\n                    // <-, line 47\n                    slice_from(\"er\");\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b62da6a75575f59a016a076b4753dc6e20c74b44","date":1219528967,"type":6,"author":"Karl-Johan Wettin","isMerge":false,"pathNew":"contrib/snowball/src/java/org/tartarus/snowball/ext/RomanianStemmer#r_verb_suffix().mjava","pathOld":"contrib/snowball/src/java/net/sf/snowball/ext/NorwegianStemmer#r_main_suffix().mjava","sourceNew":"        private boolean r_verb_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            // setlimit, line 164\n            v_1 = limit - cursor;\n            // tomark, line 164\n            if (cursor < I_pV)\n            {\n                return false;\n            }\n            cursor = I_pV;\n            v_2 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_1;\n            // (, line 164\n            // [, line 165\n            ket = cursor;\n            // substring, line 165\n            among_var = find_among_b(a_4, 94);\n            if (among_var == 0)\n            {\n                limit_backward = v_2;\n                return false;\n            }\n            // ], line 165\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    limit_backward = v_2;\n                    return false;\n                case 1:\n                    // (, line 200\n                    // or, line 200\n                    lab0: do {\n                        v_3 = limit - cursor;\n                        lab1: do {\n                            if (!(out_grouping_b(g_v, 97, 259)))\n                            {\n                                break lab1;\n                            }\n                            break lab0;\n                        } while (false);\n                        cursor = limit - v_3;\n                        // literal, line 200\n                        if (!(eq_s_b(1, \"u\")))\n                        {\n                            limit_backward = v_2;\n                            return false;\n                        }\n                    } while (false);\n                    // delete, line 200\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 214\n                    // delete, line 214\n                    slice_del();\n                    break;\n            }\n            limit_backward = v_2;\n            return true;\n        }\n\n","sourceOld":"        private boolean r_main_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            // (, line 36\n            // setlimit, line 37\n            v_1 = limit - cursor;\n            // tomark, line 37\n            if (cursor < I_p1)\n            {\n                return false;\n            }\n            cursor = I_p1;\n            v_2 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_1;\n            // (, line 37\n            // [, line 37\n            ket = cursor;\n            // substring, line 37\n            among_var = find_among_b(a_0, 29);\n            if (among_var == 0)\n            {\n                limit_backward = v_2;\n                return false;\n            }\n            // ], line 37\n            bra = cursor;\n            limit_backward = v_2;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 43\n                    // delete, line 43\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 45\n                    if (!(in_grouping_b(g_s_ending, 98, 122)))\n                    {\n                        return false;\n                    }\n                    // delete, line 45\n                    slice_del();\n                    break;\n                case 3:\n                    // (, line 47\n                    // <-, line 47\n                    slice_from(\"er\");\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b62da6a75575f59a016a076b4753dc6e20c74b44":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b62da6a75575f59a016a076b4753dc6e20c74b44"]},"commit2Childs":{"b62da6a75575f59a016a076b4753dc6e20c74b44":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["b62da6a75575f59a016a076b4753dc6e20c74b44"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}