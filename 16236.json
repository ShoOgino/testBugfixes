{"path":"lucene/core/src/test/org/apache/lucene/util/TestSetOnce#testSetOnce().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestSetOnce#testSetOnce().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/TestSetOnce#testSetOnce().mjava","sourceNew":"  @Test(expected=AlreadySetException.class)\n  public void testSetOnce() throws Exception {\n    SetOnce<Integer> set = new SetOnce<Integer>();\n    set.set(new Integer(5));\n    assertEquals(5, set.get().intValue());\n    set.set(new Integer(7));\n  }\n\n","sourceOld":"  @Test(expected=AlreadySetException.class)\n  public void testSetOnce() throws Exception {\n    SetOnce<Integer> set = new SetOnce<Integer>();\n    set.set(new Integer(5));\n    assertEquals(5, set.get().intValue());\n    set.set(new Integer(7));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestSetOnce#testSetOnce().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestSetOnce#testSetOnce().mjava","sourceNew":"  @Test(expected=AlreadySetException.class)\n  public void testSetOnce() throws Exception {\n    SetOnce<Integer> set = new SetOnce<>();\n    set.set(new Integer(5));\n    assertEquals(5, set.get().intValue());\n    set.set(new Integer(7));\n  }\n\n","sourceOld":"  @Test(expected=AlreadySetException.class)\n  public void testSetOnce() throws Exception {\n    SetOnce<Integer> set = new SetOnce<Integer>();\n    set.set(new Integer(5));\n    assertEquals(5, set.get().intValue());\n    set.set(new Integer(7));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a","date":1528054850,"type":3,"author":"Michael Braun","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestSetOnce#testSetOnce().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestSetOnce#testSetOnce().mjava","sourceNew":"  @Test(expected=AlreadySetException.class)\n  public void testSetOnce() throws Exception {\n    SetOnce<Integer> set = new SetOnce<>();\n    set.set(5);\n    assertEquals(5, set.get().intValue());\n    set.set(7);\n  }\n\n","sourceOld":"  @Test(expected=AlreadySetException.class)\n  public void testSetOnce() throws Exception {\n    SetOnce<Integer> set = new SetOnce<>();\n    set.set(new Integer(5));\n    assertEquals(5, set.get().intValue());\n    set.set(new Integer(7));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"628903f37b6c442da0d390db1c6af9a0e74d41a7","date":1531736685,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestSetOnce#testSetOnce().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestSetOnce#testSetOnce().mjava","sourceNew":"  @Test(expected=AlreadySetException.class)\n  public void testSetOnce() throws Exception {\n    SetOnce<Integer> set = new SetOnce<>();\n    set.set(5);\n    assertEquals(5, set.get().intValue());\n    set.set(7);\n  }\n\n","sourceOld":"  @Test(expected=AlreadySetException.class)\n  public void testSetOnce() throws Exception {\n    SetOnce<Integer> set = new SetOnce<>();\n    set.set(new Integer(5));\n    assertEquals(5, set.get().intValue());\n    set.set(new Integer(7));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestSetOnce#testSetOnce().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestSetOnce#testSetOnce().mjava","sourceNew":"  @Test(expected=AlreadySetException.class)\n  public void testSetOnce() throws Exception {\n    SetOnce<Integer> set = new SetOnce<>();\n    set.set(5);\n    assertEquals(5, set.get().intValue());\n    set.set(7);\n  }\n\n","sourceOld":"  @Test(expected=AlreadySetException.class)\n  public void testSetOnce() throws Exception {\n    SetOnce<Integer> set = new SetOnce<>();\n    set.set(new Integer(5));\n    assertEquals(5, set.get().intValue());\n    set.set(new Integer(7));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","628903f37b6c442da0d390db1c6af9a0e74d41a7"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"628903f37b6c442da0d390db1c6af9a0e74d41a7":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","b6a269c1ddba3f8c9fa9a40572ecc538eddda41a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["628903f37b6c442da0d390db1c6af9a0e74d41a7"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["b6a269c1ddba3f8c9fa9a40572ecc538eddda41a","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","628903f37b6c442da0d390db1c6af9a0e74d41a7"],"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a":["628903f37b6c442da0d390db1c6af9a0e74d41a7"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"628903f37b6c442da0d390db1c6af9a0e74d41a7":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}