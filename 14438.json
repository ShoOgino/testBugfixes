{"path":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsEnumImpl#IntsEnumImpl(AttributeSource,IndexInput).mjava","commits":[{"id":"01f60198ece724a6e96cd0b45f289cf42ff83d4f","date":1286864103,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsEnumImpl#IntsEnumImpl(AttributeSource,IndexInput).mjava","pathOld":"/dev/null","sourceNew":"    private IntsEnumImpl(AttributeSource source, IndexInput dataIn)\n        throws IOException {\n      super(source, Values.PACKED_INTS);\n      this.ref = attr.ints();\n      this.ref.offset = 0;\n      this.dataIn = dataIn;\n      dataIn.seek(CodecUtil.headerLength(CODEC_NAME));\n      minValue = dataIn.readLong();\n      defaultValue = dataIn.readLong();\n      this.ints = PackedInts.getReaderIterator(dataIn);\n      maxDoc = ints.size();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsEnumImpl#IntsEnumImpl(AttributeSource,IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsEnumImpl#IntsEnumImpl(AttributeSource,IndexInput).mjava","sourceNew":"    private IntsEnumImpl(AttributeSource source, IndexInput dataIn)\n        throws IOException {\n      super(source, Values.PACKED_INTS);\n      intsRef.offset = 0;\n      this.dataIn = dataIn;\n      dataIn.seek(CodecUtil.headerLength(CODEC_NAME));\n      minValue = dataIn.readLong();\n      defaultValue = dataIn.readLong();\n      this.ints = PackedInts.getReaderIterator(dataIn);\n      maxDoc = ints.size();\n    }\n\n","sourceOld":"    private IntsEnumImpl(AttributeSource source, IndexInput dataIn)\n        throws IOException {\n      super(source, Values.PACKED_INTS);\n      this.ref = attr.ints();\n      this.ref.offset = 0;\n      this.dataIn = dataIn;\n      dataIn.seek(CodecUtil.headerLength(CODEC_NAME));\n      minValue = dataIn.readLong();\n      defaultValue = dataIn.readLong();\n      this.ints = PackedInts.getReaderIterator(dataIn);\n      maxDoc = ints.size();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa2fc2eb37a1f19e90850f787d9e085950ebfa04","date":1291597075,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsEnumImpl#IntsEnumImpl(AttributeSource,IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsEnumImpl#IntsEnumImpl(AttributeSource,IndexInput).mjava","sourceNew":"    private IntsEnumImpl(AttributeSource source, IndexInput dataIn)\n        throws IOException {\n      super(source, Type.PACKED_INTS);\n      intsRef.offset = 0;\n      this.dataIn = dataIn;\n      dataIn.seek(CodecUtil.headerLength(CODEC_NAME));\n      minValue = dataIn.readLong();\n      defaultValue = dataIn.readLong();\n      this.ints = PackedInts.getReaderIterator(dataIn);\n      maxDoc = ints.size();\n    }\n\n","sourceOld":"    private IntsEnumImpl(AttributeSource source, IndexInput dataIn)\n        throws IOException {\n      super(source, Values.PACKED_INTS);\n      intsRef.offset = 0;\n      this.dataIn = dataIn;\n      dataIn.seek(CodecUtil.headerLength(CODEC_NAME));\n      minValue = dataIn.readLong();\n      defaultValue = dataIn.readLong();\n      this.ints = PackedInts.getReaderIterator(dataIn);\n      maxDoc = ints.size();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85130289d2ed101fcc2d8798511c7c5b020ffab4","date":1297239859,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsEnumImpl#IntsEnumImpl(AttributeSource,IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsEnumImpl#IntsEnumImpl(AttributeSource,IndexInput).mjava","sourceNew":"    private IntsEnumImpl(AttributeSource source, IndexInput dataIn)\n        throws IOException {\n      super(source, Type.INTS);\n      intsRef.offset = 0;\n      this.dataIn = dataIn;\n      dataIn.seek(CodecUtil.headerLength(CODEC_NAME));\n      minValue = dataIn.readLong();\n      defaultValue = dataIn.readLong();\n      this.ints = PackedInts.getReaderIterator(dataIn);\n      maxDoc = ints.size();\n    }\n\n","sourceOld":"    private IntsEnumImpl(AttributeSource source, IndexInput dataIn)\n        throws IOException {\n      super(source, Type.PACKED_INTS);\n      intsRef.offset = 0;\n      this.dataIn = dataIn;\n      dataIn.seek(CodecUtil.headerLength(CODEC_NAME));\n      minValue = dataIn.readLong();\n      defaultValue = dataIn.readLong();\n      this.ints = PackedInts.getReaderIterator(dataIn);\n      maxDoc = ints.size();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"39d51e9acac1e629cffe47855e85dc6dedc4754d","date":1305711497,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsEnumImpl#IntsEnumImpl(AttributeSource,IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsEnumImpl#IntsEnumImpl(AttributeSource,IndexInput).mjava","sourceNew":"    private IntsEnumImpl(AttributeSource source, IndexInput dataIn)\n        throws IOException {\n      super(source, ValueType.INTS);\n      intsRef.offset = 0;\n      this.dataIn = dataIn;\n      dataIn.seek(CodecUtil.headerLength(CODEC_NAME));\n      minValue = dataIn.readLong();\n      defaultValue = dataIn.readLong();\n      this.ints = PackedInts.getReaderIterator(dataIn);\n      maxDoc = ints.size();\n    }\n\n","sourceOld":"    private IntsEnumImpl(AttributeSource source, IndexInput dataIn)\n        throws IOException {\n      super(source, Type.INTS);\n      intsRef.offset = 0;\n      this.dataIn = dataIn;\n      dataIn.seek(CodecUtil.headerLength(CODEC_NAME));\n      minValue = dataIn.readLong();\n      defaultValue = dataIn.readLong();\n      this.ints = PackedInts.getReaderIterator(dataIn);\n      maxDoc = ints.size();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4034ca0f8f74fdf56e25be73822f2441fc1c1b46","date":1307111599,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.PackedIntsEnumImpl#PackedIntsEnumImpl(AttributeSource,IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsEnumImpl#IntsEnumImpl(AttributeSource,IndexInput).mjava","sourceNew":"    private PackedIntsEnumImpl(AttributeSource source, IndexInput dataIn)\n        throws IOException {\n      super(source, ValueType.INTS);\n      intsRef.offset = 0;\n      this.dataIn = dataIn;\n      dataIn.seek(CodecUtil.headerLength(CODEC_NAME) + 1);\n      minValue = dataIn.readLong();\n      defaultValue = dataIn.readLong();\n      this.ints = PackedInts.getReaderIterator(dataIn);\n      maxDoc = ints.size();\n    }\n\n","sourceOld":"    private IntsEnumImpl(AttributeSource source, IndexInput dataIn)\n        throws IOException {\n      super(source, ValueType.INTS);\n      intsRef.offset = 0;\n      this.dataIn = dataIn;\n      dataIn.seek(CodecUtil.headerLength(CODEC_NAME));\n      minValue = dataIn.readLong();\n      defaultValue = dataIn.readLong();\n      this.ints = PackedInts.getReaderIterator(dataIn);\n      maxDoc = ints.size();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"39d51e9acac1e629cffe47855e85dc6dedc4754d":["85130289d2ed101fcc2d8798511c7c5b020ffab4"],"4034ca0f8f74fdf56e25be73822f2441fc1c1b46":["39d51e9acac1e629cffe47855e85dc6dedc4754d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85130289d2ed101fcc2d8798511c7c5b020ffab4":["aa2fc2eb37a1f19e90850f787d9e085950ebfa04"],"aa2fc2eb37a1f19e90850f787d9e085950ebfa04":["3bb13258feba31ab676502787ab2e1779f129b7a"],"01f60198ece724a6e96cd0b45f289cf42ff83d4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3bb13258feba31ab676502787ab2e1779f129b7a":["01f60198ece724a6e96cd0b45f289cf42ff83d4f","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"39d51e9acac1e629cffe47855e85dc6dedc4754d":["4034ca0f8f74fdf56e25be73822f2441fc1c1b46"],"4034ca0f8f74fdf56e25be73822f2441fc1c1b46":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["01f60198ece724a6e96cd0b45f289cf42ff83d4f","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"85130289d2ed101fcc2d8798511c7c5b020ffab4":["39d51e9acac1e629cffe47855e85dc6dedc4754d"],"aa2fc2eb37a1f19e90850f787d9e085950ebfa04":["85130289d2ed101fcc2d8798511c7c5b020ffab4"],"01f60198ece724a6e96cd0b45f289cf42ff83d4f":["3bb13258feba31ab676502787ab2e1779f129b7a"],"3bb13258feba31ab676502787ab2e1779f129b7a":["aa2fc2eb37a1f19e90850f787d9e085950ebfa04"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4034ca0f8f74fdf56e25be73822f2441fc1c1b46","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}