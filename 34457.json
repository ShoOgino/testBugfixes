{"path":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#createFields(SchemaField,Object,float).mjava","commits":[{"id":"c11e1d33f2ba742976268153f6edd2d29710cf69","date":1347851822,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#createFields(SchemaField,Object,float).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public final StorableField[] createFields(SchemaField field, Object val, float boost) {\n    String shapeStr = null;\n    Shape shape = null;\n    if (val instanceof Shape) {\n      shape = ((Shape) val);\n    } else {\n      shapeStr = val.toString();\n      shape = ctx.readShape(shapeStr);\n    }\n    if( shape == null ) {\n      log.debug(\"Field {}: null shape for input: {}\", field, val);\n      return null;\n    }\n\n    Field[] indexableFields = null;\n    if (field.indexed()) {\n      T strategy = getStrategy(field.getName());\n      indexableFields = strategy.createIndexableFields(shape);\n    }\n\n    StoredField storedField = null;\n    if (field.stored()) {\n      if (shapeStr == null)\n        shapeStr = shapeToString(shape);\n      storedField = new StoredField(field.getName(), shapeStr);\n    }\n\n    if (indexableFields == null) {\n      if (storedField == null)\n        return null;\n      return new Field[]{storedField};\n    } else {\n      if (storedField == null)\n        return indexableFields;\n      Field[] result = new Field[indexableFields.length+1];\n      System.arraycopy(indexableFields,0,result,0,indexableFields.length);\n      result[result.length-1] = storedField;\n      return result;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2cf57c02babd689469933d502cb6de54bff5bd5a","date":1347853948,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#createFields(SchemaField,Object,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#createFields(SchemaField,Object,float).mjava","sourceNew":"  @Override\n  public final Field[] createFields(SchemaField field, Object val, float boost) {\n    String shapeStr = null;\n    Shape shape = null;\n    if (val instanceof Shape) {\n      shape = ((Shape) val);\n    } else {\n      shapeStr = val.toString();\n      shape = ctx.readShape(shapeStr);\n    }\n    if( shape == null ) {\n      log.debug(\"Field {}: null shape for input: {}\", field, val);\n      return null;\n    }\n\n    Field[] indexableFields = null;\n    if (field.indexed()) {\n      T strategy = getStrategy(field.getName());\n      indexableFields = strategy.createIndexableFields(shape);\n    }\n\n    StoredField storedField = null;\n    if (field.stored()) {\n      if (shapeStr == null)\n        shapeStr = shapeToString(shape);\n      storedField = new StoredField(field.getName(), shapeStr);\n    }\n\n    if (indexableFields == null) {\n      if (storedField == null)\n        return null;\n      return new Field[]{storedField};\n    } else {\n      if (storedField == null)\n        return indexableFields;\n      Field[] result = new Field[indexableFields.length+1];\n      System.arraycopy(indexableFields,0,result,0,indexableFields.length);\n      result[result.length-1] = storedField;\n      return result;\n    }\n  }\n\n","sourceOld":"  @Override\n  public final StorableField[] createFields(SchemaField field, Object val, float boost) {\n    String shapeStr = null;\n    Shape shape = null;\n    if (val instanceof Shape) {\n      shape = ((Shape) val);\n    } else {\n      shapeStr = val.toString();\n      shape = ctx.readShape(shapeStr);\n    }\n    if( shape == null ) {\n      log.debug(\"Field {}: null shape for input: {}\", field, val);\n      return null;\n    }\n\n    Field[] indexableFields = null;\n    if (field.indexed()) {\n      T strategy = getStrategy(field.getName());\n      indexableFields = strategy.createIndexableFields(shape);\n    }\n\n    StoredField storedField = null;\n    if (field.stored()) {\n      if (shapeStr == null)\n        shapeStr = shapeToString(shape);\n      storedField = new StoredField(field.getName(), shapeStr);\n    }\n\n    if (indexableFields == null) {\n      if (storedField == null)\n        return null;\n      return new Field[]{storedField};\n    } else {\n      if (storedField == null)\n        return indexableFields;\n      Field[] result = new Field[indexableFields.length+1];\n      System.arraycopy(indexableFields,0,result,0,indexableFields.length);\n      result[result.length-1] = storedField;\n      return result;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d196c8ed32bc794a6555ac1b2c4efea6dcb57635","date":1357135393,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#createFields(SchemaField,Object,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#createFields(SchemaField,Object,float).mjava","sourceNew":"  @Override\n  public Field[] createFields(SchemaField field, Object val, float boost) {\n    String shapeStr = null;\n    Shape shape = null;\n    if (val instanceof Shape) {\n      shape = ((Shape) val);\n    } else {\n      shapeStr = val.toString();\n      shape = parseShape(shapeStr);\n    }\n    if (shape == null) {\n      log.debug(\"Field {}: null shape for input: {}\", field, val);\n      return null;\n    }\n\n    Field[] indexableFields = null;\n    if (field.indexed()) {\n      T strategy = getStrategy(field.getName());\n      indexableFields = strategy.createIndexableFields(shape);\n    }\n\n    StoredField storedField = null;\n    if (field.stored()) {\n      if (shapeStr == null)\n        shapeStr = shapeToString(shape);\n      storedField = new StoredField(field.getName(), shapeStr);\n    }\n\n    if (indexableFields == null) {\n      if (storedField == null)\n        return null;\n      return new Field[]{storedField};\n    } else {\n      if (storedField == null)\n        return indexableFields;\n      Field[] result = new Field[indexableFields.length+1];\n      System.arraycopy(indexableFields,0,result,0,indexableFields.length);\n      result[result.length-1] = storedField;\n      return result;\n    }\n  }\n\n","sourceOld":"  @Override\n  public final Field[] createFields(SchemaField field, Object val, float boost) {\n    String shapeStr = null;\n    Shape shape = null;\n    if (val instanceof Shape) {\n      shape = ((Shape) val);\n    } else {\n      shapeStr = val.toString();\n      shape = ctx.readShape(shapeStr);\n    }\n    if( shape == null ) {\n      log.debug(\"Field {}: null shape for input: {}\", field, val);\n      return null;\n    }\n\n    Field[] indexableFields = null;\n    if (field.indexed()) {\n      T strategy = getStrategy(field.getName());\n      indexableFields = strategy.createIndexableFields(shape);\n    }\n\n    StoredField storedField = null;\n    if (field.stored()) {\n      if (shapeStr == null)\n        shapeStr = shapeToString(shape);\n      storedField = new StoredField(field.getName(), shapeStr);\n    }\n\n    if (indexableFields == null) {\n      if (storedField == null)\n        return null;\n      return new Field[]{storedField};\n    } else {\n      if (storedField == null)\n        return indexableFields;\n      Field[] result = new Field[indexableFields.length+1];\n      System.arraycopy(indexableFields,0,result,0,indexableFields.length);\n      result[result.length-1] = storedField;\n      return result;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#createFields(SchemaField,Object,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#createFields(SchemaField,Object,float).mjava","sourceNew":"  @Override\n  public Field[] createFields(SchemaField field, Object val, float boost) {\n    String shapeStr = null;\n    Shape shape = null;\n    if (val instanceof Shape) {\n      shape = ((Shape) val);\n    } else {\n      shapeStr = val.toString();\n      shape = parseShape(shapeStr);\n    }\n    if (shape == null) {\n      log.debug(\"Field {}: null shape for input: {}\", field, val);\n      return null;\n    }\n\n    Field[] indexableFields = null;\n    if (field.indexed()) {\n      T strategy = getStrategy(field.getName());\n      indexableFields = strategy.createIndexableFields(shape);\n    }\n\n    StoredField storedField = null;\n    if (field.stored()) {\n      if (shapeStr == null)\n        shapeStr = shapeToString(shape);\n      storedField = new StoredField(field.getName(), shapeStr);\n    }\n\n    if (indexableFields == null) {\n      if (storedField == null)\n        return null;\n      return new Field[]{storedField};\n    } else {\n      if (storedField == null)\n        return indexableFields;\n      Field[] result = new Field[indexableFields.length+1];\n      System.arraycopy(indexableFields,0,result,0,indexableFields.length);\n      result[result.length-1] = storedField;\n      return result;\n    }\n  }\n\n","sourceOld":"  @Override\n  public final Field[] createFields(SchemaField field, Object val, float boost) {\n    String shapeStr = null;\n    Shape shape = null;\n    if (val instanceof Shape) {\n      shape = ((Shape) val);\n    } else {\n      shapeStr = val.toString();\n      shape = ctx.readShape(shapeStr);\n    }\n    if( shape == null ) {\n      log.debug(\"Field {}: null shape for input: {}\", field, val);\n      return null;\n    }\n\n    Field[] indexableFields = null;\n    if (field.indexed()) {\n      T strategy = getStrategy(field.getName());\n      indexableFields = strategy.createIndexableFields(shape);\n    }\n\n    StoredField storedField = null;\n    if (field.stored()) {\n      if (shapeStr == null)\n        shapeStr = shapeToString(shape);\n      storedField = new StoredField(field.getName(), shapeStr);\n    }\n\n    if (indexableFields == null) {\n      if (storedField == null)\n        return null;\n      return new Field[]{storedField};\n    } else {\n      if (storedField == null)\n        return indexableFields;\n      Field[] result = new Field[indexableFields.length+1];\n      System.arraycopy(indexableFields,0,result,0,indexableFields.length);\n      result[result.length-1] = storedField;\n      return result;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73bb5a57dc75b54a39494f99986599cae7dff417","date":1361040620,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#createFields(SchemaField,Object,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#createFields(SchemaField,Object,float).mjava","sourceNew":"  @Override\n  public List<StorableField> createFields(SchemaField field, Object val, float boost) {\n    String shapeStr = null;\n    Shape shape = null;\n    if (val instanceof Shape) {\n      shape = ((Shape) val);\n    } else {\n      shapeStr = val.toString();\n      shape = parseShape(shapeStr);\n    }\n    if (shape == null) {\n      log.debug(\"Field {}: null shape for input: {}\", field, val);\n      return Collections.emptyList();\n    }\n\n    List<StorableField> result = new ArrayList<StorableField>();\n    if (field.indexed()) {\n      T strategy = getStrategy(field.getName());\n      result.addAll(Arrays.asList(strategy.createIndexableFields(shape)));\n    }\n\n    if (field.stored()) {\n      if (shapeStr == null)\n        shapeStr = shapeToString(shape);\n      result.add(new StoredField(field.getName(), shapeStr));\n    }\n\n    return result;\n  }\n\n","sourceOld":"  @Override\n  public Field[] createFields(SchemaField field, Object val, float boost) {\n    String shapeStr = null;\n    Shape shape = null;\n    if (val instanceof Shape) {\n      shape = ((Shape) val);\n    } else {\n      shapeStr = val.toString();\n      shape = parseShape(shapeStr);\n    }\n    if (shape == null) {\n      log.debug(\"Field {}: null shape for input: {}\", field, val);\n      return null;\n    }\n\n    Field[] indexableFields = null;\n    if (field.indexed()) {\n      T strategy = getStrategy(field.getName());\n      indexableFields = strategy.createIndexableFields(shape);\n    }\n\n    StoredField storedField = null;\n    if (field.stored()) {\n      if (shapeStr == null)\n        shapeStr = shapeToString(shape);\n      storedField = new StoredField(field.getName(), shapeStr);\n    }\n\n    if (indexableFields == null) {\n      if (storedField == null)\n        return null;\n      return new Field[]{storedField};\n    } else {\n      if (storedField == null)\n        return indexableFields;\n      Field[] result = new Field[indexableFields.length+1];\n      System.arraycopy(indexableFields,0,result,0,indexableFields.length);\n      result[result.length-1] = storedField;\n      return result;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"95303ff3749680c743b9425f9cf99e6e4065e8a8","date":1361061922,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#createFields(SchemaField,Object,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#createFields(SchemaField,Object,float).mjava","sourceNew":"  @Override\n  public List<StorableField> createFields(SchemaField field, Object val, float boost) {\n    String shapeStr = null;\n    Shape shape = null;\n    if (val instanceof Shape) {\n      shape = ((Shape) val);\n    } else {\n      shapeStr = val.toString();\n      shape = parseShape(shapeStr);\n    }\n    if (shape == null) {\n      log.debug(\"Field {}: null shape for input: {}\", field, val);\n      return Collections.emptyList();\n    }\n\n    List<StorableField> result = new ArrayList<StorableField>();\n    if (field.indexed()) {\n      T strategy = getStrategy(field.getName());\n      result.addAll(Arrays.asList(strategy.createIndexableFields(shape)));\n    }\n\n    if (field.stored()) {\n      if (shapeStr == null)\n        shapeStr = shapeToString(shape);\n      result.add(new StoredField(field.getName(), shapeStr));\n    }\n\n    return result;\n  }\n\n","sourceOld":"  @Override\n  public Field[] createFields(SchemaField field, Object val, float boost) {\n    String shapeStr = null;\n    Shape shape = null;\n    if (val instanceof Shape) {\n      shape = ((Shape) val);\n    } else {\n      shapeStr = val.toString();\n      shape = parseShape(shapeStr);\n    }\n    if (shape == null) {\n      log.debug(\"Field {}: null shape for input: {}\", field, val);\n      return null;\n    }\n\n    Field[] indexableFields = null;\n    if (field.indexed()) {\n      T strategy = getStrategy(field.getName());\n      indexableFields = strategy.createIndexableFields(shape);\n    }\n\n    StoredField storedField = null;\n    if (field.stored()) {\n      if (shapeStr == null)\n        shapeStr = shapeToString(shape);\n      storedField = new StoredField(field.getName(), shapeStr);\n    }\n\n    if (indexableFields == null) {\n      if (storedField == null)\n        return null;\n      return new Field[]{storedField};\n    } else {\n      if (storedField == null)\n        return indexableFields;\n      Field[] result = new Field[indexableFields.length+1];\n      System.arraycopy(indexableFields,0,result,0,indexableFields.length);\n      result[result.length-1] = storedField;\n      return result;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#createFields(SchemaField,Object,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#createFields(SchemaField,Object,float).mjava","sourceNew":"  @Override\n  public List<StorableField> createFields(SchemaField field, Object val, float boost) {\n    String shapeStr = null;\n    Shape shape = null;\n    if (val instanceof Shape) {\n      shape = ((Shape) val);\n    } else {\n      shapeStr = val.toString();\n      shape = parseShape(shapeStr);\n    }\n    if (shape == null) {\n      log.debug(\"Field {}: null shape for input: {}\", field, val);\n      return Collections.emptyList();\n    }\n\n    List<StorableField> result = new ArrayList<>();\n    if (field.indexed()) {\n      T strategy = getStrategy(field.getName());\n      result.addAll(Arrays.asList(strategy.createIndexableFields(shape)));\n    }\n\n    if (field.stored()) {\n      if (shapeStr == null)\n        shapeStr = shapeToString(shape);\n      result.add(new StoredField(field.getName(), shapeStr));\n    }\n\n    return result;\n  }\n\n","sourceOld":"  @Override\n  public List<StorableField> createFields(SchemaField field, Object val, float boost) {\n    String shapeStr = null;\n    Shape shape = null;\n    if (val instanceof Shape) {\n      shape = ((Shape) val);\n    } else {\n      shapeStr = val.toString();\n      shape = parseShape(shapeStr);\n    }\n    if (shape == null) {\n      log.debug(\"Field {}: null shape for input: {}\", field, val);\n      return Collections.emptyList();\n    }\n\n    List<StorableField> result = new ArrayList<StorableField>();\n    if (field.indexed()) {\n      T strategy = getStrategy(field.getName());\n      result.addAll(Arrays.asList(strategy.createIndexableFields(shape)));\n    }\n\n    if (field.stored()) {\n      if (shapeStr == null)\n        shapeStr = shapeToString(shape);\n      result.add(new StoredField(field.getName(), shapeStr));\n    }\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"03298305b51c91a6b0221a7b134ba26578934d39","date":1418532926,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#createFields(SchemaField,Object,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#createFields(SchemaField,Object,float).mjava","sourceNew":"  @Override\n  public List<StorableField> createFields(SchemaField field, Object val, float boost) {\n    String shapeStr = null;\n    Shape shape;\n    if (val instanceof Shape) {\n      shape = ((Shape) val);\n    } else {\n      shapeStr = val.toString();\n      shape = parseShape(shapeStr);\n    }\n    if (shape == null) {\n      log.debug(\"Field {}: null shape for input: {}\", field, val);\n      return Collections.emptyList();\n    }\n\n    List<StorableField> result = new ArrayList<>();\n    if (field.indexed()) {\n      T strategy = getStrategy(field.getName());\n      result.addAll(Arrays.asList(strategy.createIndexableFields(shape)));\n    }\n\n    if (field.stored()) {\n      result.add(new StoredField(field.getName(), getStoredValue(shape, shapeStr)));\n    }\n\n    return result;\n  }\n\n","sourceOld":"  @Override\n  public List<StorableField> createFields(SchemaField field, Object val, float boost) {\n    String shapeStr = null;\n    Shape shape = null;\n    if (val instanceof Shape) {\n      shape = ((Shape) val);\n    } else {\n      shapeStr = val.toString();\n      shape = parseShape(shapeStr);\n    }\n    if (shape == null) {\n      log.debug(\"Field {}: null shape for input: {}\", field, val);\n      return Collections.emptyList();\n    }\n\n    List<StorableField> result = new ArrayList<>();\n    if (field.indexed()) {\n      T strategy = getStrategy(field.getName());\n      result.addAll(Arrays.asList(strategy.createIndexableFields(shape)));\n    }\n\n    if (field.stored()) {\n      if (shapeStr == null)\n        shapeStr = shapeToString(shape);\n      result.add(new StoredField(field.getName(), shapeStr));\n    }\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","date":1453060490,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#createFields(SchemaField,Object,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#createFields(SchemaField,Object,float).mjava","sourceNew":"  @Override\n  public List<IndexableField> createFields(SchemaField field, Object val, float boost) {\n    String shapeStr = null;\n    Shape shape;\n    if (val instanceof Shape) {\n      shape = ((Shape) val);\n    } else {\n      shapeStr = val.toString();\n      shape = parseShape(shapeStr);\n    }\n    if (shape == null) {\n      log.debug(\"Field {}: null shape for input: {}\", field, val);\n      return Collections.emptyList();\n    }\n\n    List<IndexableField> result = new ArrayList<>();\n    if (field.indexed()) {\n      T strategy = getStrategy(field.getName());\n      result.addAll(Arrays.asList(strategy.createIndexableFields(shape)));\n    }\n\n    if (field.stored()) {\n      result.add(new StoredField(field.getName(), getStoredValue(shape, shapeStr)));\n    }\n\n    return result;\n  }\n\n","sourceOld":"  @Override\n  public List<StorableField> createFields(SchemaField field, Object val, float boost) {\n    String shapeStr = null;\n    Shape shape;\n    if (val instanceof Shape) {\n      shape = ((Shape) val);\n    } else {\n      shapeStr = val.toString();\n      shape = parseShape(shapeStr);\n    }\n    if (shape == null) {\n      log.debug(\"Field {}: null shape for input: {}\", field, val);\n      return Collections.emptyList();\n    }\n\n    List<StorableField> result = new ArrayList<>();\n    if (field.indexed()) {\n      T strategy = getStrategy(field.getName());\n      result.addAll(Arrays.asList(strategy.createIndexableFields(shape)));\n    }\n\n    if (field.stored()) {\n      result.add(new StoredField(field.getName(), getStoredValue(shape, shapeStr)));\n    }\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#createFields(SchemaField,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#createFields(SchemaField,Object,float).mjava","sourceNew":"  @Override\n  public List<IndexableField> createFields(SchemaField field, Object val) {\n    String shapeStr = null;\n    Shape shape;\n    if (val instanceof Shape) {\n      shape = ((Shape) val);\n    } else {\n      shapeStr = val.toString();\n      shape = parseShape(shapeStr);\n    }\n    if (shape == null) {\n      log.debug(\"Field {}: null shape for input: {}\", field, val);\n      return Collections.emptyList();\n    }\n\n    List<IndexableField> result = new ArrayList<>();\n    if (field.indexed()) {\n      T strategy = getStrategy(field.getName());\n      result.addAll(Arrays.asList(strategy.createIndexableFields(shape)));\n    }\n\n    if (field.stored()) {\n      result.add(new StoredField(field.getName(), getStoredValue(shape, shapeStr)));\n    }\n\n    return result;\n  }\n\n","sourceOld":"  @Override\n  public List<IndexableField> createFields(SchemaField field, Object val, float boost) {\n    String shapeStr = null;\n    Shape shape;\n    if (val instanceof Shape) {\n      shape = ((Shape) val);\n    } else {\n      shapeStr = val.toString();\n      shape = parseShape(shapeStr);\n    }\n    if (shape == null) {\n      log.debug(\"Field {}: null shape for input: {}\", field, val);\n      return Collections.emptyList();\n    }\n\n    List<IndexableField> result = new ArrayList<>();\n    if (field.indexed()) {\n      T strategy = getStrategy(field.getName());\n      result.addAll(Arrays.asList(strategy.createIndexableFields(shape)));\n    }\n\n    if (field.stored()) {\n      result.add(new StoredField(field.getName(), getStoredValue(shape, shapeStr)));\n    }\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d196c8ed32bc794a6555ac1b2c4efea6dcb57635":["2cf57c02babd689469933d502cb6de54bff5bd5a"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["2cf57c02babd689469933d502cb6de54bff5bd5a","d196c8ed32bc794a6555ac1b2c4efea6dcb57635"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["73bb5a57dc75b54a39494f99986599cae7dff417"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":["d196c8ed32bc794a6555ac1b2c4efea6dcb57635","73bb5a57dc75b54a39494f99986599cae7dff417"],"03298305b51c91a6b0221a7b134ba26578934d39":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"c11e1d33f2ba742976268153f6edd2d29710cf69":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2cf57c02babd689469933d502cb6de54bff5bd5a":["c11e1d33f2ba742976268153f6edd2d29710cf69"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"acd9883560fd89e6448b2b447302fe543040cd4f":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["acd9883560fd89e6448b2b447302fe543040cd4f"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["03298305b51c91a6b0221a7b134ba26578934d39"],"73bb5a57dc75b54a39494f99986599cae7dff417":["d196c8ed32bc794a6555ac1b2c4efea6dcb57635"]},"commit2Childs":{"d196c8ed32bc794a6555ac1b2c4efea6dcb57635":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","95303ff3749680c743b9425f9cf99e6e4065e8a8","73bb5a57dc75b54a39494f99986599cae7dff417"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["03298305b51c91a6b0221a7b134ba26578934d39"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":[],"03298305b51c91a6b0221a7b134ba26578934d39":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"c11e1d33f2ba742976268153f6edd2d29710cf69":["2cf57c02babd689469933d502cb6de54bff5bd5a"],"2cf57c02babd689469933d502cb6de54bff5bd5a":["d196c8ed32bc794a6555ac1b2c4efea6dcb57635","d3fcb70cf561547c7bb1506e0cf32ca7b1287064"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c11e1d33f2ba742976268153f6edd2d29710cf69"],"acd9883560fd89e6448b2b447302fe543040cd4f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"73bb5a57dc75b54a39494f99986599cae7dff417":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","95303ff3749680c743b9425f9cf99e6e4065e8a8"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["acd9883560fd89e6448b2b447302fe543040cd4f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","95303ff3749680c743b9425f9cf99e6e4065e8a8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}