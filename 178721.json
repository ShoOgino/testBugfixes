{"path":"solr/core/src/test/org/apache/solr/cloud/CloudExitableDirectoryReaderTest#test().mjava","commits":[{"id":"abb23fcc2461782ab204e61213240feb77d355aa","date":1422029612,"type":1,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CloudExitableDirectoryReaderTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CloudExitableDirectoryReaderTest#doTest().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    handle.clear();\n    handle.put(\"timestamp\", SKIPVAL);\n    waitForRecoveriesToFinish(false);\n    indexDocs();\n    doTimeoutTests();\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    handle.clear();\n    handle.put(\"timestamp\", SKIPVAL);\n    waitForRecoveriesToFinish(false);\n    indexDocs();\n    doTimeoutTests();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ebf70dabe6279454c5ff460bdea3f0dc2814a86","date":1463672611,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CloudExitableDirectoryReaderTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CloudExitableDirectoryReaderTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    indexDocs();\n    doTimeoutTests();\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    handle.clear();\n    handle.put(\"timestamp\", SKIPVAL);\n    waitForRecoveriesToFinish(false);\n    indexDocs();\n    doTimeoutTests();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CloudExitableDirectoryReaderTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CloudExitableDirectoryReaderTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    indexDocs();\n    doTimeoutTests();\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    handle.clear();\n    handle.put(\"timestamp\", SKIPVAL);\n    waitForRecoveriesToFinish(false);\n    indexDocs();\n    doTimeoutTests();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CloudExitableDirectoryReaderTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CloudExitableDirectoryReaderTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    indexDocs();\n    doTimeoutTests();\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    handle.clear();\n    handle.put(\"timestamp\", SKIPVAL);\n    waitForRecoveriesToFinish(false);\n    indexDocs();\n    doTimeoutTests();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3584d3db8b472772e3329d9d95d584b68ae997e","date":1551710517,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CloudExitableDirectoryReaderTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CloudExitableDirectoryReaderTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    assertPartialResults(params(\"q\", \"name:a*\", \"timeAllowed\", \"1\", \"sleep\", sleep));\n\n    /*\n    query rewriting for NUM_DOCS_PER_TYPE terms should take less \n    time than this. Keeping it at 5 because the delaying search component delays all requests \n    by at 1 second.\n     */\n    int fiveSeconds = 5000;\n    \n    Integer timeAllowed = TestUtil.nextInt(random(), fiveSeconds, Integer.MAX_VALUE);\n    assertSuccess(params(\"q\", \"name:a*\", \"timeAllowed\", timeAllowed.toString()));\n\n    assertPartialResults(params(\"q\", \"name:a*\", \"timeAllowed\", \"1\", \"sleep\", sleep));\n\n    timeAllowed = TestUtil.nextInt(random(), fiveSeconds, Integer.MAX_VALUE);\n    assertSuccess(params(\"q\", \"name:b*\", \"timeAllowed\",timeAllowed.toString()));\n\n    // negative timeAllowed should disable timeouts\n    timeAllowed = TestUtil.nextInt(random(), Integer.MIN_VALUE, -1); \n    assertSuccess(params(\"q\", \"name:b*\", \"timeAllowed\",timeAllowed.toString()));\n\n    assertSuccess(params(\"q\",\"name:b*\")); // no time limitation\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    indexDocs();\n    doTimeoutTests();\n  }\n\n","bugFix":["eb9e4cb185078b4e99e3b7070abb77eb2cdfaf6e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"abb23fcc2461782ab204e61213240feb77d355aa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3584d3db8b472772e3329d9d95d584b68ae997e":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"5ebf70dabe6279454c5ff460bdea3f0dc2814a86":["abb23fcc2461782ab204e61213240feb77d355aa"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["abb23fcc2461782ab204e61213240feb77d355aa","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a3584d3db8b472772e3329d9d95d584b68ae997e"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["abb23fcc2461782ab204e61213240feb77d355aa","5ebf70dabe6279454c5ff460bdea3f0dc2814a86"]},"commit2Childs":{"abb23fcc2461782ab204e61213240feb77d355aa":["5ebf70dabe6279454c5ff460bdea3f0dc2814a86","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["abb23fcc2461782ab204e61213240feb77d355aa"],"a3584d3db8b472772e3329d9d95d584b68ae997e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5ebf70dabe6279454c5ff460bdea3f0dc2814a86":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["a3584d3db8b472772e3329d9d95d584b68ae997e","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}