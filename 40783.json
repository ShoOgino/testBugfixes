{"path":"lucene/core/src/test/org/apache/lucene/util/automaton/TestRegExp#testIllegalBackslashChars().mjava","commits":[{"id":"618a38498a850acb4a1a993550fd7960dc7cc2c6","date":1589539518,"type":0,"author":"markharwood","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/automaton/TestRegExp#testIllegalBackslashChars().mjava","pathOld":"/dev/null","sourceNew":"  public void testIllegalBackslashChars() {\n    String illegalChars = \"abcefghijklmnopqrtuvxyzABCEFGHIJKLMNOPQRTUVXYZ\";\n    for (int i = 0; i < illegalChars.length(); i++) {\n      String illegalExpression = \"\\\\\" + illegalChars.charAt(i);\n      IllegalArgumentException expected = expectThrows(\n          IllegalArgumentException.class, () -> {\n            new RegExp(illegalExpression);\n          }\n      );\n      assertTrue(expected.getMessage().contains(\"invalid character class\"));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"618a38498a850acb4a1a993550fd7960dc7cc2c6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["618a38498a850acb4a1a993550fd7960dc7cc2c6"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["618a38498a850acb4a1a993550fd7960dc7cc2c6"],"618a38498a850acb4a1a993550fd7960dc7cc2c6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}