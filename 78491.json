{"path":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testIndexingWithFacets().mjava","commits":[{"id":"b5b25dd09e9e2bbeca84aceaf74e1df8ad1bff80","date":1318183296,"type":0,"author":"Doron Cohen","isMerge":false,"pathNew":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testIndexingWithFacets().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test indexing with facets tasks.\n   */\n  public void testIndexingWithFacets() throws Exception {\n    // 1. alg definition (required in every \"logic\" test)\n    String algLines[] = {\n        \"# ----- properties \",\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"content.source.log.step=100\",\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"doc.stored=false\",\n        \"merge.factor=3\",\n        \"doc.tokenized=false\",\n        \"debug.level=1\",\n        \"# ----- alg \",\n        \"ResetSystemErase\",\n        \"CreateIndex\",\n        \"CreateTaxonomyIndex\",\n        \"{ \\\"AddDocs\\\"  AddFacetedDoc > : * \",\n        \"CloseIndex\",\n        \"CloseTaxonomyIndex\",\n        \"OpenTaxonomyReader\",\n    };\n\n    // 2. execute the algorithm  (required in every \"logic\" test)\n    Benchmark benchmark = execBenchmark(algLines);\n    PerfRunData runData = benchmark.getRunData();\n    assertNull(\"taxo writer was not properly closed\",runData.getTaxonomyWriter());\n    TaxonomyReader taxoReader = runData.getTaxonomyReader();\n    assertNotNull(\"taxo reader was not opened\", taxoReader);\n    assertTrue(\"nothing was added to the taxnomy (expecting root and at least one addtional category)\",taxoReader.getSize()>1);\n    taxoReader.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testIndexingWithFacets().mjava","pathOld":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testIndexingWithFacets().mjava","sourceNew":"  /**\n   * Test indexing with facets tasks.\n   */\n  public void testIndexingWithFacets() throws Exception {\n    // 1. alg definition (required in every \"logic\" test)\n    String algLines[] = {\n        \"# ----- properties \",\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"content.source.log.step=100\",\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"doc.stored=false\",\n        \"merge.factor=3\",\n        \"doc.tokenized=false\",\n        \"debug.level=1\",\n        \"# ----- alg \",\n        \"ResetSystemErase\",\n        \"CreateIndex\",\n        \"CreateTaxonomyIndex\",\n        \"{ \\\"AddDocs\\\"  AddFacetedDoc > : * \",\n        \"CloseIndex\",\n        \"CloseTaxonomyIndex\",\n        \"OpenTaxonomyReader\",\n    };\n\n    // 2. execute the algorithm  (required in every \"logic\" test)\n    Benchmark benchmark = execBenchmark(algLines);\n    PerfRunData runData = benchmark.getRunData();\n    assertNull(\"taxo writer was not properly closed\",runData.getTaxonomyWriter());\n    TaxonomyReader taxoReader = runData.getTaxonomyReader();\n    assertNotNull(\"taxo reader was not opened\", taxoReader);\n    assertTrue(\"nothing was added to the taxnomy (expecting root and at least one addtional category)\",taxoReader.getSize()>1);\n    taxoReader.close();\n  }\n\n","sourceOld":"  /**\n   * Test indexing with facets tasks.\n   */\n  public void testIndexingWithFacets() throws Exception {\n    // 1. alg definition (required in every \"logic\" test)\n    String algLines[] = {\n        \"# ----- properties \",\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"content.source.log.step=100\",\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"doc.stored=false\",\n        \"merge.factor=3\",\n        \"doc.tokenized=false\",\n        \"debug.level=1\",\n        \"# ----- alg \",\n        \"ResetSystemErase\",\n        \"CreateIndex\",\n        \"CreateTaxonomyIndex\",\n        \"{ \\\"AddDocs\\\"  AddFacetedDoc > : * \",\n        \"CloseIndex\",\n        \"CloseTaxonomyIndex\",\n        \"OpenTaxonomyReader\",\n    };\n\n    // 2. execute the algorithm  (required in every \"logic\" test)\n    Benchmark benchmark = execBenchmark(algLines);\n    PerfRunData runData = benchmark.getRunData();\n    assertNull(\"taxo writer was not properly closed\",runData.getTaxonomyWriter());\n    TaxonomyReader taxoReader = runData.getTaxonomyReader();\n    assertNotNull(\"taxo reader was not opened\", taxoReader);\n    assertTrue(\"nothing was added to the taxnomy (expecting root and at least one addtional category)\",taxoReader.getSize()>1);\n    taxoReader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["b5b25dd09e9e2bbeca84aceaf74e1df8ad1bff80"],"b5b25dd09e9e2bbeca84aceaf74e1df8ad1bff80":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b5b25dd09e9e2bbeca84aceaf74e1df8ad1bff80":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b5b25dd09e9e2bbeca84aceaf74e1df8ad1bff80"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}