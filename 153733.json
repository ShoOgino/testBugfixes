{"path":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#dumpIterator(String,Iterator[#],PrintStream).mjava","commits":[{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#dumpIterator(String,Iterator[#],PrintStream).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#dumpIterator(String,Iterator[#],PrintStream).mjava","sourceNew":"  /**\n   * Convinience method for logging an iterator.\n   *\n   * @param label  String logged before/after the items in the iterator\n   * @param iter   Each next() is toString()ed and logged on it's own line. If iter is null this is logged differnetly then an empty iterator.\n   * @param stream Stream to log messages to.\n   */\n  public static void dumpIterator(String label, Iterator<?> iter,\n                                  PrintStream stream) {\n    stream.println(\"*** BEGIN \" + label + \" ***\");\n    if (null == iter) {\n      stream.println(\" ... NULL ...\");\n    } else {\n      while (iter.hasNext()) {\n        stream.println(iter.next().toString());\n      }\n    }\n    stream.println(\"*** END \" + label + \" ***\");\n  }\n\n","sourceOld":"  /**\n   * Convinience method for logging an iterator.\n   *\n   * @param label  String logged before/after the items in the iterator\n   * @param iter   Each next() is toString()ed and logged on it's own line. If iter is null this is logged differnetly then an empty iterator.\n   * @param stream Stream to log messages to.\n   */\n  public static void dumpIterator(String label, Iterator<?> iter,\n                                  PrintStream stream) {\n    stream.println(\"*** BEGIN \" + label + \" ***\");\n    if (null == iter) {\n      stream.println(\" ... NULL ...\");\n    } else {\n      while (iter.hasNext()) {\n        stream.println(iter.next().toString());\n      }\n    }\n    stream.println(\"*** END \" + label + \" ***\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#dumpIterator(String,Iterator[#],PrintStream).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#dumpIterator(String,Iterator[#],PrintStream).mjava","sourceNew":"  /**\n   * Convinience method for logging an iterator.\n   *\n   * @param label  String logged before/after the items in the iterator\n   * @param iter   Each next() is toString()ed and logged on it's own line. If iter is null this is logged differnetly then an empty iterator.\n   * @param stream Stream to log messages to.\n   */\n  public static void dumpIterator(String label, Iterator<?> iter,\n                                  PrintStream stream) {\n    stream.println(\"*** BEGIN \" + label + \" ***\");\n    if (null == iter) {\n      stream.println(\" ... NULL ...\");\n    } else {\n      while (iter.hasNext()) {\n        stream.println(iter.next().toString());\n      }\n    }\n    stream.println(\"*** END \" + label + \" ***\");\n  }\n\n","sourceOld":"  /**\n   * Convinience method for logging an iterator.\n   *\n   * @param label  String logged before/after the items in the iterator\n   * @param iter   Each next() is toString()ed and logged on it's own line. If iter is null this is logged differnetly then an empty iterator.\n   * @param stream Stream to log messages to.\n   */\n  public static void dumpIterator(String label, Iterator<?> iter,\n                                  PrintStream stream) {\n    stream.println(\"*** BEGIN \" + label + \" ***\");\n    if (null == iter) {\n      stream.println(\" ... NULL ...\");\n    } else {\n      while (iter.hasNext()) {\n        stream.println(iter.next().toString());\n      }\n    }\n    stream.println(\"*** END \" + label + \" ***\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d","date":1298208351,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#dumpIterator(String,Iterator[#],PrintStream).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#dumpIterator(String,Iterator[#],PrintStream).mjava","sourceNew":"  /**\n   * Convenience method for logging an iterator.\n   *\n   * @param label  String logged before/after the items in the iterator\n   * @param iter   Each next() is toString()ed and logged on it's own line. If iter is null this is logged differnetly then an empty iterator.\n   * @param stream Stream to log messages to.\n   */\n  public static void dumpIterator(String label, Iterator<?> iter,\n                                  PrintStream stream) {\n    stream.println(\"*** BEGIN \" + label + \" ***\");\n    if (null == iter) {\n      stream.println(\" ... NULL ...\");\n    } else {\n      while (iter.hasNext()) {\n        stream.println(iter.next().toString());\n      }\n    }\n    stream.println(\"*** END \" + label + \" ***\");\n  }\n\n","sourceOld":"  /**\n   * Convinience method for logging an iterator.\n   *\n   * @param label  String logged before/after the items in the iterator\n   * @param iter   Each next() is toString()ed and logged on it's own line. If iter is null this is logged differnetly then an empty iterator.\n   * @param stream Stream to log messages to.\n   */\n  public static void dumpIterator(String label, Iterator<?> iter,\n                                  PrintStream stream) {\n    stream.println(\"*** BEGIN \" + label + \" ***\");\n    if (null == iter) {\n      stream.println(\" ... NULL ...\");\n    } else {\n      while (iter.hasNext()) {\n        stream.println(iter.next().toString());\n      }\n    }\n    stream.println(\"*** END \" + label + \" ***\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#dumpIterator(String,Iterator[#],PrintStream).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#dumpIterator(String,Iterator[#],PrintStream).mjava","sourceNew":"  /**\n   * Convenience method for logging an iterator.\n   *\n   * @param label  String logged before/after the items in the iterator\n   * @param iter   Each next() is toString()ed and logged on it's own line. If iter is null this is logged differnetly then an empty iterator.\n   * @param stream Stream to log messages to.\n   */\n  public static void dumpIterator(String label, Iterator<?> iter,\n                                  PrintStream stream) {\n    stream.println(\"*** BEGIN \" + label + \" ***\");\n    if (null == iter) {\n      stream.println(\" ... NULL ...\");\n    } else {\n      while (iter.hasNext()) {\n        stream.println(iter.next().toString());\n      }\n    }\n    stream.println(\"*** END \" + label + \" ***\");\n  }\n\n","sourceOld":"  /**\n   * Convinience method for logging an iterator.\n   *\n   * @param label  String logged before/after the items in the iterator\n   * @param iter   Each next() is toString()ed and logged on it's own line. If iter is null this is logged differnetly then an empty iterator.\n   * @param stream Stream to log messages to.\n   */\n  public static void dumpIterator(String label, Iterator<?> iter,\n                                  PrintStream stream) {\n    stream.println(\"*** BEGIN \" + label + \" ***\");\n    if (null == iter) {\n      stream.println(\" ... NULL ...\");\n    } else {\n      while (iter.hasNext()) {\n        stream.println(iter.next().toString());\n      }\n    }\n    stream.println(\"*** END \" + label + \" ***\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#dumpIterator(String,Iterator[#],PrintStream).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#dumpIterator(String,Iterator[#],PrintStream).mjava","sourceNew":"  /**\n   * Convinience method for logging an iterator.\n   *\n   * @param label  String logged before/after the items in the iterator\n   * @param iter   Each next() is toString()ed and logged on it's own line. If iter is null this is logged differnetly then an empty iterator.\n   * @param stream Stream to log messages to.\n   */\n  public static void dumpIterator(String label, Iterator<?> iter,\n                                  PrintStream stream) {\n    stream.println(\"*** BEGIN \" + label + \" ***\");\n    if (null == iter) {\n      stream.println(\" ... NULL ...\");\n    } else {\n      while (iter.hasNext()) {\n        stream.println(iter.next().toString());\n      }\n    }\n    stream.println(\"*** END \" + label + \" ***\");\n  }\n\n","sourceOld":"  /**\n   * Convinience method for logging an iterator.\n   *\n   * @param label  String logged before/after the items in the iterator\n   * @param iter   Each next() is toString()ed and logged on it's own line. If iter is null this is logged differnetly then an empty iterator.\n   * @param stream Stream to log messages to.\n   */\n  public static void dumpIterator(String label, Iterator<?> iter,\n                                  PrintStream stream) {\n    stream.println(\"*** BEGIN \" + label + \" ***\");\n    if (null == iter) {\n      stream.println(\" ... NULL ...\");\n    } else {\n      while (iter.hasNext()) {\n        stream.println(iter.next().toString());\n      }\n    }\n    stream.println(\"*** END \" + label + \" ***\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f411c79281946a184efeab34a673deffc25edcb","date":1303995312,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#dumpIterator(String,Iterator[#],PrintStream).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#dumpIterator(String,Iterator[#],PrintStream).mjava","sourceNew":"  /**\n   * Convenience method for logging an iterator.\n   *\n   * @param label  String logged before/after the items in the iterator\n   * @param iter   Each next() is toString()ed and logged on it's own line. If iter is null this is logged differnetly then an empty iterator.\n   * @param stream Stream to log messages to.\n   */\n  public static void dumpIterator(String label, Iterator<?> iter,\n                                  PrintStream stream) {\n    stream.println(\"*** BEGIN \" + label + \" ***\");\n    if (null == iter) {\n      stream.println(\" ... NULL ...\");\n    } else {\n      while (iter.hasNext()) {\n        stream.println(iter.next().toString());\n      }\n    }\n    stream.println(\"*** END \" + label + \" ***\");\n  }\n\n","sourceOld":"  /**\n   * Convinience method for logging an iterator.\n   *\n   * @param label  String logged before/after the items in the iterator\n   * @param iter   Each next() is toString()ed and logged on it's own line. If iter is null this is logged differnetly then an empty iterator.\n   * @param stream Stream to log messages to.\n   */\n  public static void dumpIterator(String label, Iterator<?> iter,\n                                  PrintStream stream) {\n    stream.println(\"*** BEGIN \" + label + \" ***\");\n    if (null == iter) {\n      stream.println(\" ... NULL ...\");\n    } else {\n      while (iter.hasNext()) {\n        stream.println(iter.next().toString());\n      }\n    }\n    stream.println(\"*** END \" + label + \" ***\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#dumpIterator(String,Iterator[#],PrintStream).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#dumpIterator(String,Iterator[#],PrintStream).mjava","sourceNew":"  /**\n   * Convenience method for logging an iterator.\n   *\n   * @param label  String logged before/after the items in the iterator\n   * @param iter   Each next() is toString()ed and logged on it's own line. If iter is null this is logged differnetly then an empty iterator.\n   * @param stream Stream to log messages to.\n   */\n  public static void dumpIterator(String label, Iterator<?> iter,\n                                  PrintStream stream) {\n    stream.println(\"*** BEGIN \" + label + \" ***\");\n    if (null == iter) {\n      stream.println(\" ... NULL ...\");\n    } else {\n      while (iter.hasNext()) {\n        stream.println(iter.next().toString());\n      }\n    }\n    stream.println(\"*** END \" + label + \" ***\");\n  }\n\n","sourceOld":"  /**\n   * Convenience method for logging an iterator.\n   *\n   * @param label  String logged before/after the items in the iterator\n   * @param iter   Each next() is toString()ed and logged on it's own line. If iter is null this is logged differnetly then an empty iterator.\n   * @param stream Stream to log messages to.\n   */\n  public static void dumpIterator(String label, Iterator<?> iter,\n                                  PrintStream stream) {\n    stream.println(\"*** BEGIN \" + label + \" ***\");\n    if (null == iter) {\n      stream.println(\" ... NULL ...\");\n    } else {\n      while (iter.hasNext()) {\n        stream.println(iter.next().toString());\n      }\n    }\n    stream.println(\"*** END \" + label + \" ***\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d"],"0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"5f411c79281946a184efeab34a673deffc25edcb":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":["29ef99d61cda9641b6250bf9567329a6e65f901d","0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d":["7b91922b55d15444d554721b352861d028eb8278","f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"5f411c79281946a184efeab34a673deffc25edcb":[],"f1bdbf92da222965b46c0a942c3857ba56e5c638":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["f1bdbf92da222965b46c0a942c3857ba56e5c638"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["5f411c79281946a184efeab34a673deffc25edcb"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d","29ef99d61cda9641b6250bf9567329a6e65f901d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5f411c79281946a184efeab34a673deffc25edcb","f1bdbf92da222965b46c0a942c3857ba56e5c638","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}