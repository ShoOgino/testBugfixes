{"path":"backwards/src/java/org/apache/lucene/search/HitQueue#getSentinelObject().mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/search/HitQueue#getSentinelObject().mjava","pathOld":"/dev/null","sourceNew":"  // Returns null if prePopulate is false.\n  @Override\n  protected ScoreDoc getSentinelObject() {\n    // Always set the doc Id to MAX_VALUE so that it won't be favored by\n    // lessThan. This generally should not happen since if score is not NEG_INF,\n    // TopScoreDocCollector will always add the object to the queue.\n    return !prePopulate ? null : new ScoreDoc(Integer.MAX_VALUE, Float.NEGATIVE_INFINITY);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/search/HitQueue#getSentinelObject().mjava","pathOld":"backwards/src/java/org/apache/lucene/search/HitQueue#getSentinelObject().mjava","sourceNew":"  // Returns null if prePopulate is false.\n  @Override\n  protected ScoreDoc getSentinelObject() {\n    // Always set the doc Id to MAX_VALUE so that it won't be favored by\n    // lessThan. This generally should not happen since if score is not NEG_INF,\n    // TopScoreDocCollector will always add the object to the queue.\n    return !prePopulate ? null : new ScoreDoc(Integer.MAX_VALUE, Float.NEGATIVE_INFINITY);\n  }\n\n","sourceOld":"  // Returns null if prePopulate is false.\n  @Override\n  protected ScoreDoc getSentinelObject() {\n    // Always set the doc Id to MAX_VALUE so that it won't be favored by\n    // lessThan. This generally should not happen since if score is not NEG_INF,\n    // TopScoreDocCollector will always add the object to the queue.\n    return !prePopulate ? null : new ScoreDoc(Integer.MAX_VALUE, Float.NEGATIVE_INFINITY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}