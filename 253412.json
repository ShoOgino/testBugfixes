{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexReader#testNoDupCommitFileNames().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexReader#testNoDupCommitFileNames().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testNoDupCommitFileNames().mjava","sourceNew":"  // LUCENE-1509\n  public void testNoDupCommitFileNames() throws Throwable {\n\n    Directory dir = newDirectory();\n    \n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(2));\n    writer.addDocument(createDocument(\"a\"));\n    writer.addDocument(createDocument(\"a\"));\n    writer.addDocument(createDocument(\"a\"));\n    writer.close();\n    \n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (final IndexCommit commit : commits) {\n      Collection<String> files = commit.getFileNames();\n      HashSet<String> seen = new HashSet<String>();\n      for (final String fileName : files) { \n        assertTrue(\"file \" + fileName + \" was duplicated\", !seen.contains(fileName));\n        seen.add(fileName);\n      }\n    }\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1509\n  public void testNoDupCommitFileNames() throws Throwable {\n\n    Directory dir = newDirectory();\n    \n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(2));\n    writer.addDocument(createDocument(\"a\"));\n    writer.addDocument(createDocument(\"a\"));\n    writer.addDocument(createDocument(\"a\"));\n    writer.close();\n    \n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (final IndexCommit commit : commits) {\n      Collection<String> files = commit.getFileNames();\n      HashSet<String> seen = new HashSet<String>();\n      for (final String fileName : files) { \n        assertTrue(\"file \" + fileName + \" was duplicated\", !seen.contains(fileName));\n        seen.add(fileName);\n      }\n    }\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87","date":1328967626,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testNoDupCommitFileNames().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexReader#testNoDupCommitFileNames().mjava","sourceNew":"  // LUCENE-1509\n  public void testNoDupCommitFileNames() throws Throwable {\n  \n    Directory dir = newDirectory();\n    \n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(2));\n    writer.addDocument(createDocument(\"a\"));\n    writer.addDocument(createDocument(\"a\"));\n    writer.addDocument(createDocument(\"a\"));\n    writer.close();\n    \n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (final IndexCommit commit : commits) {\n      Collection<String> files = commit.getFileNames();\n      HashSet<String> seen = new HashSet<String>();\n      for (final String fileName : files) { \n        assertTrue(\"file \" + fileName + \" was duplicated\", !seen.contains(fileName));\n        seen.add(fileName);\n      }\n    }\n  \n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1509\n  public void testNoDupCommitFileNames() throws Throwable {\n\n    Directory dir = newDirectory();\n    \n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(2));\n    writer.addDocument(createDocument(\"a\"));\n    writer.addDocument(createDocument(\"a\"));\n    writer.addDocument(createDocument(\"a\"));\n    writer.close();\n    \n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (final IndexCommit commit : commits) {\n      Collection<String> files = commit.getFileNames();\n      HashSet<String> seen = new HashSet<String>();\n      for (final String fileName : files) { \n        assertTrue(\"file \" + fileName + \" was duplicated\", !seen.contains(fileName));\n        seen.add(fileName);\n      }\n    }\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87"]},"commit2Childs":{"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}