{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#handleBoost(Query,Token).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#handleBoost(Query,Token).mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#handleBoost(Query,Token).mjava","sourceNew":"  // extracted from the .jj grammar\n  Query handleBoost(Query q, Token boost) throws ParseException {\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    return q;\n  }\n\n","sourceOld":"  // extracted from the .jj grammar\n  Query handleBoost(Query q, Token boost) throws ParseException {\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    return q;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#handleBoost(Query,Token).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#handleBoost(Query,Token).mjava","sourceNew":"  // extracted from the .jj grammar\n  Query handleBoost(Query q, Token boost) {\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    return q;\n  }\n\n","sourceOld":"  // extracted from the .jj grammar\n  Query handleBoost(Query q, Token boost) throws ParseException {\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    return q;\n  }\n\n","bugFix":["bed62fe6383040eaff2ec720cdc55bb1462c61da"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#handleBoost(Query,Token).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#handleBoost(Query,Token).mjava","sourceNew":"  // extracted from the .jj grammar\n  Query handleBoost(Query q, Token boost) {\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    return q;\n  }\n\n","sourceOld":"  // extracted from the .jj grammar\n  Query handleBoost(Query q, Token boost) throws ParseException {\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    return q;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#handleBoost(Query,Token).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#handleBoost(Query,Token).mjava","sourceNew":"  // extracted from the .jj grammar\n  Query handleBoost(Query q, Token boost) {\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q = new BoostQuery(q, f);\n      }\n    }\n    return q;\n  }\n\n","sourceOld":"  // extracted from the .jj grammar\n  Query handleBoost(Query q, Token boost) {\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    return q;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8","date":1489572490,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#handleBoost(Query,Token).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#handleBoost(Query,Token).mjava","sourceNew":"  // extracted from the .jj grammar\n  Query handleBoost(Query q, Token boost) {\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.parseFloat(boost.image);\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q = new BoostQuery(q, f);\n      }\n    }\n    return q;\n  }\n\n","sourceOld":"  // extracted from the .jj grammar\n  Query handleBoost(Query q, Token boost) {\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q = new BoostQuery(q, f);\n      }\n    }\n    return q;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55e0b3830b94d1abce4e32e98cfc875d5b14e76f","date":1489651910,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#handleBoost(Query,Token).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#handleBoost(Query,Token).mjava","sourceNew":"  // extracted from the .jj grammar\n  Query handleBoost(Query q, Token boost) {\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.parseFloat(boost.image);\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q = new BoostQuery(q, f);\n      }\n    }\n    return q;\n  }\n\n","sourceOld":"  // extracted from the .jj grammar\n  Query handleBoost(Query q, Token boost) {\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q = new BoostQuery(q, f);\n      }\n    }\n    return q;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab68488225b6a6c357dda72ed11dedca9914a192","date":1490013111,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#handleBoost(Query,Token).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#handleBoost(Query,Token).mjava","sourceNew":"  // extracted from the .jj grammar\n  Query handleBoost(Query q, Token boost) {\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.parseFloat(boost.image);\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q = new BoostQuery(q, f);\n      }\n    }\n    return q;\n  }\n\n","sourceOld":"  // extracted from the .jj grammar\n  Query handleBoost(Query q, Token boost) {\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q = new BoostQuery(q, f);\n      }\n    }\n    return q;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"55e0b3830b94d1abce4e32e98cfc875d5b14e76f":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"ab68488225b6a6c357dda72ed11dedca9914a192":["2dfdf766e55e943d942055d7de53c7ad6bc45283","55e0b3830b94d1abce4e32e98cfc875d5b14e76f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6c72a3aa9309c1f5ade9265cf083e565ae8d35b8"]},"commit2Childs":{"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"55e0b3830b94d1abce4e32e98cfc875d5b14e76f":["ab68488225b6a6c357dda72ed11dedca9914a192"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["6c72a3aa9309c1f5ade9265cf083e565ae8d35b8","55e0b3830b94d1abce4e32e98cfc875d5b14e76f","ab68488225b6a6c357dda72ed11dedca9914a192"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["fe33227f6805edab2036cbb80645cc4e2d1fa424","2dfdf766e55e943d942055d7de53c7ad6bc45283"],"ab68488225b6a6c357dda72ed11dedca9914a192":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","ab68488225b6a6c357dda72ed11dedca9914a192","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}