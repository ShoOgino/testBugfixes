{"path":"src/java/org/apache/solr/handler/SnapPuller#copyAFile(File,File,String,List[String]).mjava","commits":[{"id":"f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349","date":1224582283,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SnapPuller#copyAFile(File,File,String,List[String]).mjava","pathOld":"/dev/null","sourceNew":"  private boolean copyAFile(File snapDir, File indexDir, String fname, List<String> copiedfiles) {\n    File indexFileInSnap = new File(snapDir, fname);\n    File indexFileInIndex = new File(indexDir, fname);\n    boolean success = indexFileInSnap.renameTo(indexFileInIndex);\n    if (!success) {\n      LOG.error(\"Unable to move index file from: \" + indexFileInSnap\n              + \" to: \" + indexFileInIndex);\n      for (String f : copiedfiles) {\n        File indexFile = new File(indexDir, f);\n        if (indexFile.exists())\n          indexFile.delete();\n      }\n      delTree(snapDir);\n      return false;\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["e7ffc5966298483ed2e6e17cb47fb05bc32e5ebf"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6c89a4aebdbd208d5517a488e7dd7c1d164c3bc9","date":1225202752,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SnapPuller#copyAFile(File,File,String,List[String]).mjava","pathOld":"src/java/org/apache/solr/handler/SnapPuller#copyAFile(File,File,String,List[String]).mjava","sourceNew":"  /**Copy a file by the File#renameTo() method. if it fails , it is considered\n   * a failure\n   * todo may be we should try a simple copy if it fails\n   */\n  private boolean copyAFile(File snapDir, File indexDir, String fname, List<String> copiedfiles) {\n    File indexFileInSnap = new File(snapDir, fname);\n    File indexFileInIndex = new File(indexDir, fname);\n    boolean success = indexFileInSnap.renameTo(indexFileInIndex);\n    if (!success) {\n      LOG.error(\"Unable to move index file from: \" + indexFileInSnap\n              + \" to: \" + indexFileInIndex);\n      for (String f : copiedfiles) {\n        File indexFile = new File(indexDir, f);\n        if (indexFile.exists())\n          indexFile.delete();\n      }\n      delTree(snapDir);\n      return false;\n    }\n    return true;\n  }\n\n","sourceOld":"  private boolean copyAFile(File snapDir, File indexDir, String fname, List<String> copiedfiles) {\n    File indexFileInSnap = new File(snapDir, fname);\n    File indexFileInIndex = new File(indexDir, fname);\n    boolean success = indexFileInSnap.renameTo(indexFileInIndex);\n    if (!success) {\n      LOG.error(\"Unable to move index file from: \" + indexFileInSnap\n              + \" to: \" + indexFileInIndex);\n      for (String f : copiedfiles) {\n        File indexFile = new File(indexDir, f);\n        if (indexFile.exists())\n          indexFile.delete();\n      }\n      delTree(snapDir);\n      return false;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8620c64e323e74078214cf931e505179d14c888e","date":1225270494,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SnapPuller#copyAFile(File,File,String,List[String]).mjava","pathOld":"src/java/org/apache/solr/handler/SnapPuller#copyAFile(File,File,String,List[String]).mjava","sourceNew":"  /**\n   * Copy a file by the File#renameTo() method. If it fails, it is considered\n   * a failure\n   *\n   * Todo may be we should try a simple copy if it fails\n   */\n  private boolean copyAFile(File snapDir, File indexDir, String fname, List<String> copiedfiles) {\n    File indexFileInSnap = new File(snapDir, fname);\n    File indexFileInIndex = new File(indexDir, fname);\n    boolean success = indexFileInSnap.renameTo(indexFileInIndex);\n    if (!success) {\n      LOG.error(\"Unable to move index file from: \" + indexFileInSnap\n              + \" to: \" + indexFileInIndex);\n      for (String f : copiedfiles) {\n        File indexFile = new File(indexDir, f);\n        if (indexFile.exists())\n          indexFile.delete();\n      }\n      delTree(snapDir);\n      return false;\n    }\n    return true;\n  }\n\n","sourceOld":"  /**Copy a file by the File#renameTo() method. if it fails , it is considered\n   * a failure\n   * todo may be we should try a simple copy if it fails\n   */\n  private boolean copyAFile(File snapDir, File indexDir, String fname, List<String> copiedfiles) {\n    File indexFileInSnap = new File(snapDir, fname);\n    File indexFileInIndex = new File(indexDir, fname);\n    boolean success = indexFileInSnap.renameTo(indexFileInIndex);\n    if (!success) {\n      LOG.error(\"Unable to move index file from: \" + indexFileInSnap\n              + \" to: \" + indexFileInIndex);\n      for (String f : copiedfiles) {\n        File indexFile = new File(indexDir, f);\n        if (indexFile.exists())\n          indexFile.delete();\n      }\n      delTree(snapDir);\n      return false;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":["e7ffc5966298483ed2e6e17cb47fb05bc32e5ebf"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c6e1afc23adf8af4aa2dfc781b02b63710546b33","date":1227622754,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SnapPuller#copyAFile(File,File,String,List[String]).mjava","pathOld":"src/java/org/apache/solr/handler/SnapPuller#copyAFile(File,File,String,List[String]).mjava","sourceNew":"  /**\n   * Copy a file by the File#renameTo() method. If it fails, it is considered\n   * a failure\n   * <p/>\n   * Todo may be we should try a simple copy if it fails\n   */\n  private boolean copyAFile(File snapDir, File indexDir, String fname, List<String> copiedfiles) {\n    File indexFileInSnap = new File(snapDir, fname);\n    File indexFileInIndex = new File(indexDir, fname);\n    boolean success = indexFileInSnap.renameTo(indexFileInIndex);\n    if (!success) {\n      LOG.error(\"Unable to move index file from: \" + indexFileInSnap\n              + \" to: \" + indexFileInIndex);\n      for (String f : copiedfiles) {\n        File indexFile = new File(indexDir, f);\n        if (indexFile.exists())\n          indexFile.delete();\n      }\n      delTree(snapDir);\n      return false;\n    }\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Copy a file by the File#renameTo() method. If it fails, it is considered\n   * a failure\n   *\n   * Todo may be we should try a simple copy if it fails\n   */\n  private boolean copyAFile(File snapDir, File indexDir, String fname, List<String> copiedfiles) {\n    File indexFileInSnap = new File(snapDir, fname);\n    File indexFileInIndex = new File(indexDir, fname);\n    boolean success = indexFileInSnap.renameTo(indexFileInIndex);\n    if (!success) {\n      LOG.error(\"Unable to move index file from: \" + indexFileInSnap\n              + \" to: \" + indexFileInIndex);\n      for (String f : copiedfiles) {\n        File indexFile = new File(indexDir, f);\n        if (indexFile.exists())\n          indexFile.delete();\n      }\n      delTree(snapDir);\n      return false;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9be231d18ef58129524215a1d30331523320b744","date":1229505566,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SnapPuller#copyAFile(File,File,String,List[String]).mjava","pathOld":"src/java/org/apache/solr/handler/SnapPuller#copyAFile(File,File,String,List[String]).mjava","sourceNew":"  /**\n   * Copy a file by the File#renameTo() method. If it fails, it is considered a failure\n   * <p/>\n   * Todo may be we should try a simple copy if it fails\n   */\n  private boolean copyAFile(File snapDir, File indexDir, String fname, List<String> copiedfiles) {\n    File indexFileInSnap = new File(snapDir, fname);\n    File indexFileInIndex = new File(indexDir, fname);\n    boolean success = indexFileInSnap.renameTo(indexFileInIndex);\n    if (!success) {\n      LOG.error(\"Unable to move index file from: \" + indexFileInSnap\n              + \" to: \" + indexFileInIndex);\n      for (String f : copiedfiles) {\n        File indexFile = new File(indexDir, f);\n        if (indexFile.exists())\n          indexFile.delete();\n      }\n      delTree(snapDir);\n      return false;\n    }\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Copy a file by the File#renameTo() method. If it fails, it is considered\n   * a failure\n   * <p/>\n   * Todo may be we should try a simple copy if it fails\n   */\n  private boolean copyAFile(File snapDir, File indexDir, String fname, List<String> copiedfiles) {\n    File indexFileInSnap = new File(snapDir, fname);\n    File indexFileInIndex = new File(indexDir, fname);\n    boolean success = indexFileInSnap.renameTo(indexFileInIndex);\n    if (!success) {\n      LOG.error(\"Unable to move index file from: \" + indexFileInSnap\n              + \" to: \" + indexFileInIndex);\n      for (String f : copiedfiles) {\n        File indexFile = new File(indexDir, f);\n        if (indexFile.exists())\n          indexFile.delete();\n      }\n      delTree(snapDir);\n      return false;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c7e0049b151d932b18c3acc1ef8366262ae9809d","date":1247648156,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SnapPuller#copyAFile(File,File,String,List[String]).mjava","pathOld":"src/java/org/apache/solr/handler/SnapPuller#copyAFile(File,File,String,List[String]).mjava","sourceNew":"  /**\n   * Copy a file by the File#renameTo() method. If it fails, it is considered a failure\n   * <p/>\n   * Todo may be we should try a simple copy if it fails\n   */\n  private boolean copyAFile(File tmpIdxDir, File indexDir, String fname, List<String> copiedfiles) {\n    File indexFileInTmpDir = new File(tmpIdxDir, fname);\n    File indexFileInIndex = new File(indexDir, fname);\n    boolean success = indexFileInTmpDir.renameTo(indexFileInIndex);\n    if (!success) {\n      LOG.error(\"Unable to move index file from: \" + indexFileInTmpDir\n              + \" to: \" + indexFileInIndex);\n      for (String f : copiedfiles) {\n        File indexFile = new File(indexDir, f);\n        if (indexFile.exists())\n          indexFile.delete();\n      }\n      delTree(tmpIdxDir);\n      return false;\n    }\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Copy a file by the File#renameTo() method. If it fails, it is considered a failure\n   * <p/>\n   * Todo may be we should try a simple copy if it fails\n   */\n  private boolean copyAFile(File snapDir, File indexDir, String fname, List<String> copiedfiles) {\n    File indexFileInSnap = new File(snapDir, fname);\n    File indexFileInIndex = new File(indexDir, fname);\n    boolean success = indexFileInSnap.renameTo(indexFileInIndex);\n    if (!success) {\n      LOG.error(\"Unable to move index file from: \" + indexFileInSnap\n              + \" to: \" + indexFileInIndex);\n      for (String f : copiedfiles) {\n        File indexFile = new File(indexDir, f);\n        if (indexFile.exists())\n          indexFile.delete();\n      }\n      delTree(snapDir);\n      return false;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":["e7ffc5966298483ed2e6e17cb47fb05bc32e5ebf"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e7ffc5966298483ed2e6e17cb47fb05bc32e5ebf","date":1265370250,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SnapPuller#copyAFile(File,File,String,List[String]).mjava","pathOld":"src/java/org/apache/solr/handler/SnapPuller#copyAFile(File,File,String,List[String]).mjava","sourceNew":"  /**\n   * Copy a file by the File#renameTo() method. If it fails, it is considered a failure\n   * <p/>\n   */\n  private boolean copyAFile(File tmpIdxDir, File indexDir, String fname, List<String> copiedfiles) {\n    File indexFileInTmpDir = new File(tmpIdxDir, fname);\n    File indexFileInIndex = new File(indexDir, fname);\n    boolean success = indexFileInTmpDir.renameTo(indexFileInIndex);\n    if(!success){\n      try {\n        LOG.error(\"Unable to move index file from: \" + indexFileInTmpDir\n              + \" to: \" + indexFileInIndex + \"Trying to do a copy\");\n        FileUtils.copyFile(indexFileInTmpDir,indexFileInIndex);\n        success = true;\n      } catch (IOException e) {\n        LOG.error(\"Unable to copy index file from: \" + indexFileInTmpDir\n              + \" to: \" + indexFileInIndex , e);\n      }\n    }\n    if (!success) {\n      for (String f : copiedfiles) {\n        File indexFile = new File(indexDir, f);\n        if (indexFile.exists())\n          indexFile.delete();\n      }\n      delTree(tmpIdxDir);\n      return false;\n    }\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Copy a file by the File#renameTo() method. If it fails, it is considered a failure\n   * <p/>\n   * Todo may be we should try a simple copy if it fails\n   */\n  private boolean copyAFile(File tmpIdxDir, File indexDir, String fname, List<String> copiedfiles) {\n    File indexFileInTmpDir = new File(tmpIdxDir, fname);\n    File indexFileInIndex = new File(indexDir, fname);\n    boolean success = indexFileInTmpDir.renameTo(indexFileInIndex);\n    if (!success) {\n      LOG.error(\"Unable to move index file from: \" + indexFileInTmpDir\n              + \" to: \" + indexFileInIndex);\n      for (String f : copiedfiles) {\n        File indexFile = new File(indexDir, f);\n        if (indexFile.exists())\n          indexFile.delete();\n      }\n      delTree(tmpIdxDir);\n      return false;\n    }\n    return true;\n  }\n\n","bugFix":["c7e0049b151d932b18c3acc1ef8366262ae9809d","8620c64e323e74078214cf931e505179d14c888e","f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/SnapPuller#copyAFile(File,File,String,List[String]).mjava","pathOld":"src/java/org/apache/solr/handler/SnapPuller#copyAFile(File,File,String,List[String]).mjava","sourceNew":"  /**\n   * Copy a file by the File#renameTo() method. If it fails, it is considered a failure\n   * <p/>\n   */\n  private boolean copyAFile(File tmpIdxDir, File indexDir, String fname, List<String> copiedfiles) {\n    File indexFileInTmpDir = new File(tmpIdxDir, fname);\n    File indexFileInIndex = new File(indexDir, fname);\n    boolean success = indexFileInTmpDir.renameTo(indexFileInIndex);\n    if(!success){\n      try {\n        LOG.error(\"Unable to move index file from: \" + indexFileInTmpDir\n              + \" to: \" + indexFileInIndex + \"Trying to do a copy\");\n        FileUtils.copyFile(indexFileInTmpDir,indexFileInIndex);\n        success = true;\n      } catch (IOException e) {\n        LOG.error(\"Unable to copy index file from: \" + indexFileInTmpDir\n              + \" to: \" + indexFileInIndex , e);\n      }\n    }\n    if (!success) {\n      for (String f : copiedfiles) {\n        File indexFile = new File(indexDir, f);\n        if (indexFile.exists())\n          indexFile.delete();\n      }\n      delTree(tmpIdxDir);\n      return false;\n    }\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Copy a file by the File#renameTo() method. If it fails, it is considered a failure\n   * <p/>\n   */\n  private boolean copyAFile(File tmpIdxDir, File indexDir, String fname, List<String> copiedfiles) {\n    File indexFileInTmpDir = new File(tmpIdxDir, fname);\n    File indexFileInIndex = new File(indexDir, fname);\n    boolean success = indexFileInTmpDir.renameTo(indexFileInIndex);\n    if(!success){\n      try {\n        LOG.error(\"Unable to move index file from: \" + indexFileInTmpDir\n              + \" to: \" + indexFileInIndex + \"Trying to do a copy\");\n        FileUtils.copyFile(indexFileInTmpDir,indexFileInIndex);\n        success = true;\n      } catch (IOException e) {\n        LOG.error(\"Unable to copy index file from: \" + indexFileInTmpDir\n              + \" to: \" + indexFileInIndex , e);\n      }\n    }\n    if (!success) {\n      for (String f : copiedfiles) {\n        File indexFile = new File(indexDir, f);\n        if (indexFile.exists())\n          indexFile.delete();\n      }\n      delTree(tmpIdxDir);\n      return false;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"9be231d18ef58129524215a1d30331523320b744":["c6e1afc23adf8af4aa2dfc781b02b63710546b33"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e7ffc5966298483ed2e6e17cb47fb05bc32e5ebf":["c7e0049b151d932b18c3acc1ef8366262ae9809d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"8620c64e323e74078214cf931e505179d14c888e":["6c89a4aebdbd208d5517a488e7dd7c1d164c3bc9"],"c7e0049b151d932b18c3acc1ef8366262ae9809d":["9be231d18ef58129524215a1d30331523320b744"],"ad94625fb8d088209f46650c8097196fec67f00c":["e7ffc5966298483ed2e6e17cb47fb05bc32e5ebf"],"c6e1afc23adf8af4aa2dfc781b02b63710546b33":["8620c64e323e74078214cf931e505179d14c888e"],"6c89a4aebdbd208d5517a488e7dd7c1d164c3bc9":["f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349":["6c89a4aebdbd208d5517a488e7dd7c1d164c3bc9"],"9be231d18ef58129524215a1d30331523320b744":["c7e0049b151d932b18c3acc1ef8366262ae9809d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e7ffc5966298483ed2e6e17cb47fb05bc32e5ebf":["ad94625fb8d088209f46650c8097196fec67f00c"],"8620c64e323e74078214cf931e505179d14c888e":["c6e1afc23adf8af4aa2dfc781b02b63710546b33"],"c7e0049b151d932b18c3acc1ef8366262ae9809d":["e7ffc5966298483ed2e6e17cb47fb05bc32e5ebf"],"c6e1afc23adf8af4aa2dfc781b02b63710546b33":["9be231d18ef58129524215a1d30331523320b744"],"6c89a4aebdbd208d5517a488e7dd7c1d164c3bc9":["8620c64e323e74078214cf931e505179d14c888e"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}