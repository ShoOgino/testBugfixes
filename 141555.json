{"path":"lucene/core/src/java/org/apache/lucene/search/MatchNoDocsQuery#rewrite(IndexReader).mjava","commits":[{"id":"f2db39cfba90037b809aabf6d1a990d904722175","date":1425461028,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MatchNoDocsQuery#rewrite(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Query rewrite(IndexReader reader) throws IOException {\n        // Rewrite to an empty BooleanQuery so no Scorer or Weight is required\n        return new BooleanQuery();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MatchNoDocsQuery#rewrite(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Query rewrite(IndexReader reader) throws IOException {\n        // Rewrite to an empty BooleanQuery so no Scorer or Weight is required\n        return new BooleanQuery();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MatchNoDocsQuery#rewrite(IndexReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MatchNoDocsQuery#rewrite(IndexReader).mjava","sourceNew":"    @Override\n    public Query rewrite(IndexReader reader) throws IOException {\n        // Rewrite to an empty BooleanQuery so no Scorer or Weight is required\n        BooleanQuery.Builder builder = new BooleanQuery.Builder();\n        Query rewritten = builder.build();\n        rewritten.setBoost(getBoost());\n        return rewritten;\n    }\n\n","sourceOld":"    @Override\n    public Query rewrite(IndexReader reader) throws IOException {\n        // Rewrite to an empty BooleanQuery so no Scorer or Weight is required\n        return new BooleanQuery();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MatchNoDocsQuery#rewrite(IndexReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MatchNoDocsQuery#rewrite(IndexReader).mjava","sourceNew":"    @Override\n    public Query rewrite(IndexReader reader) throws IOException {\n        // Rewrite to an empty BooleanQuery so no Scorer or Weight is required\n        return new BooleanQuery.Builder().build();\n    }\n\n","sourceOld":"    @Override\n    public Query rewrite(IndexReader reader) throws IOException {\n        // Rewrite to an empty BooleanQuery so no Scorer or Weight is required\n        BooleanQuery.Builder builder = new BooleanQuery.Builder();\n        Query rewritten = builder.build();\n        rewritten.setBoost(getBoost());\n        return rewritten;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7bc21595222ae4f75509300fbb7726691f387f","date":1464078795,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MatchNoDocsQuery#rewrite(IndexReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MatchNoDocsQuery#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    // Rewrite to an empty BooleanQuery so no Scorer or Weight is required\n    return new BooleanQuery.Builder().build();\n  }\n\n","sourceOld":"    @Override\n    public Query rewrite(IndexReader reader) throws IOException {\n        // Rewrite to an empty BooleanQuery so no Scorer or Weight is required\n        return new BooleanQuery.Builder().build();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8b3f2faaf05547a6ed4e2769b664522af9514b3","date":1466522779,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/MatchNoDocsQuery#rewrite(IndexReader).mjava","sourceNew":null,"sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    // Rewrite to an empty BooleanQuery so no Scorer or Weight is required\n    return new BooleanQuery.Builder().build();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/MatchNoDocsQuery#rewrite(IndexReader).mjava","sourceNew":null,"sourceOld":"    @Override\n    public Query rewrite(IndexReader reader) throws IOException {\n        // Rewrite to an empty BooleanQuery so no Scorer or Weight is required\n        return new BooleanQuery.Builder().build();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f2db39cfba90037b809aabf6d1a990d904722175":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["f2db39cfba90037b809aabf6d1a990d904722175"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f2db39cfba90037b809aabf6d1a990d904722175"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e7bc21595222ae4f75509300fbb7726691f387f":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"d8b3f2faaf05547a6ed4e2769b664522af9514b3":["0e7bc21595222ae4f75509300fbb7726691f387f"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["2dfdf766e55e943d942055d7de53c7ad6bc45283","d8b3f2faaf05547a6ed4e2769b664522af9514b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d8b3f2faaf05547a6ed4e2769b664522af9514b3"]},"commit2Childs":{"f2db39cfba90037b809aabf6d1a990d904722175":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f2db39cfba90037b809aabf6d1a990d904722175","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"0e7bc21595222ae4f75509300fbb7726691f387f":["d8b3f2faaf05547a6ed4e2769b664522af9514b3"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["0e7bc21595222ae4f75509300fbb7726691f387f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"d8b3f2faaf05547a6ed4e2769b664522af9514b3":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}