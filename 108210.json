{"path":"modules/suggest/src/java/org/apache/lucene/search/suggest/SortedTermFreqIteratorWrapper#next().mjava","commits":[{"id":"d334a3e8e6b94298d8cf2802a403a096c06f0b92","date":1329766559,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/SortedTermFreqIteratorWrapper#next().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public BytesRef next() throws IOException {\n    if (++curPos < entries.size()) {\n      return entries.get(spare, (currentOrd = sortedOrds[curPos]));  \n    }\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dc3c850c5222a1ce7d619563f67bf047a11b32b6","date":1330703995,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/SortedTermFreqIteratorWrapper#next().mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/SortedTermFreqIteratorWrapper#next().mjava","sourceNew":"  @Override\n  public BytesRef next() throws IOException {\n    boolean success = false;\n    if (done) {\n      return null;\n    }\n    try {\n      ByteArrayDataInput input = new ByteArrayDataInput();\n      if (reader.read(scratch)) {\n        weight = decode(scratch, input);\n        success = true;\n        return scratch;\n      }\n      close();\n      success = done = true;\n      return null;\n    } finally {\n      if (!success) {\n        done = true;\n        close();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public BytesRef next() throws IOException {\n    if (++curPos < entries.size()) {\n      return entries.get(spare, (currentOrd = sortedOrds[curPos]));  \n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/SortedTermFreqIteratorWrapper#next().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public BytesRef next() throws IOException {\n    boolean success = false;\n    if (done) {\n      return null;\n    }\n    try {\n      ByteArrayDataInput input = new ByteArrayDataInput();\n      if (reader.read(scratch)) {\n        weight = decode(scratch, input);\n        success = true;\n        return scratch;\n      }\n      close();\n      success = done = true;\n      return null;\n    } finally {\n      if (!success) {\n        done = true;\n        close();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedTermFreqIteratorWrapper#next().mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/SortedTermFreqIteratorWrapper#next().mjava","sourceNew":"  @Override\n  public BytesRef next() throws IOException {\n    boolean success = false;\n    if (done) {\n      return null;\n    }\n    try {\n      ByteArrayDataInput input = new ByteArrayDataInput();\n      if (reader.read(scratch)) {\n        weight = decode(scratch, input);\n        success = true;\n        return scratch;\n      }\n      close();\n      success = done = true;\n      return null;\n    } finally {\n      if (!success) {\n        done = true;\n        close();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public BytesRef next() throws IOException {\n    boolean success = false;\n    if (done) {\n      return null;\n    }\n    try {\n      ByteArrayDataInput input = new ByteArrayDataInput();\n      if (reader.read(scratch)) {\n        weight = decode(scratch, input);\n        success = true;\n        return scratch;\n      }\n      close();\n      success = done = true;\n      return null;\n    } finally {\n      if (!success) {\n        done = true;\n        close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["dc3c850c5222a1ce7d619563f67bf047a11b32b6"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","dc3c850c5222a1ce7d619563f67bf047a11b32b6"],"d334a3e8e6b94298d8cf2802a403a096c06f0b92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dc3c850c5222a1ce7d619563f67bf047a11b32b6":["d334a3e8e6b94298d8cf2802a403a096c06f0b92"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","d334a3e8e6b94298d8cf2802a403a096c06f0b92"],"d334a3e8e6b94298d8cf2802a403a096c06f0b92":["dc3c850c5222a1ce7d619563f67bf047a11b32b6"],"dc3c850c5222a1ce7d619563f67bf047a11b32b6":["b89678825b68eccaf09e6ab71675fc0b0af1e099","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}