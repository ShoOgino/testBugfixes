{"path":"lucene/core/src/java/org/apache/lucene/util/automaton/Transition.CompareByDestThenMinMaxSingle#compare(Transition,Transition).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/Transition.CompareByDestThenMinMaxSingle#compare(Transition,Transition).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/Transition.CompareByDestThenMinMaxSingle#compare(Transition,Transition).mjava","sourceNew":"    public int compare(Transition t1, Transition t2) {\n      if (t1.to != t2.to) {\n        if (t1.to.number < t2.to.number) return -1;\n        else if (t1.to.number > t2.to.number) return 1;\n      }\n      if (t1.min < t2.min) return -1;\n      if (t1.min > t2.min) return 1;\n      if (t1.max > t2.max) return -1;\n      if (t1.max < t2.max) return 1;\n      return 0;\n    }\n\n","sourceOld":"    public int compare(Transition t1, Transition t2) {\n      if (t1.to != t2.to) {\n        if (t1.to.number < t2.to.number) return -1;\n        else if (t1.to.number > t2.to.number) return 1;\n      }\n      if (t1.min < t2.min) return -1;\n      if (t1.min > t2.min) return 1;\n      if (t1.max > t2.max) return -1;\n      if (t1.max < t2.max) return 1;\n      return 0;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/Transition.CompareByDestThenMinMaxSingle#compare(Transition,Transition).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/Transition.CompareByDestThenMinMaxSingle#compare(Transition,Transition).mjava","sourceNew":"    @Override\n    public int compare(Transition t1, Transition t2) {\n      if (t1.to != t2.to) {\n        if (t1.to.number < t2.to.number) return -1;\n        else if (t1.to.number > t2.to.number) return 1;\n      }\n      if (t1.min < t2.min) return -1;\n      if (t1.min > t2.min) return 1;\n      if (t1.max > t2.max) return -1;\n      if (t1.max < t2.max) return 1;\n      return 0;\n    }\n\n","sourceOld":"    public int compare(Transition t1, Transition t2) {\n      if (t1.to != t2.to) {\n        if (t1.to.number < t2.to.number) return -1;\n        else if (t1.to.number > t2.to.number) return 1;\n      }\n      if (t1.min < t2.min) return -1;\n      if (t1.min > t2.min) return 1;\n      if (t1.max > t2.max) return -1;\n      if (t1.max < t2.max) return 1;\n      return 0;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/Transition.CompareByDestThenMinMaxSingle#compare(Transition,Transition).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/Transition.CompareByDestThenMinMaxSingle#compare(Transition,Transition).mjava","sourceNew":"    @Override\n    public int compare(Transition t1, Transition t2) {\n      if (t1.to != t2.to) {\n        if (t1.to.number < t2.to.number) return -1;\n        else if (t1.to.number > t2.to.number) return 1;\n      }\n      if (t1.min < t2.min) return -1;\n      if (t1.min > t2.min) return 1;\n      if (t1.max > t2.max) return -1;\n      if (t1.max < t2.max) return 1;\n      return 0;\n    }\n\n","sourceOld":"    public int compare(Transition t1, Transition t2) {\n      if (t1.to != t2.to) {\n        if (t1.to.number < t2.to.number) return -1;\n        else if (t1.to.number > t2.to.number) return 1;\n      }\n      if (t1.min < t2.min) return -1;\n      if (t1.min > t2.min) return 1;\n      if (t1.max > t2.max) return -1;\n      if (t1.max < t2.max) return 1;\n      return 0;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f4ef381bf0c2d618c6db830d3dd668c6901c05a","date":1402592253,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/Transition.CompareByDestThenMinMaxSingle#compare(Transition,Transition).mjava","sourceNew":null,"sourceOld":"    @Override\n    public int compare(Transition t1, Transition t2) {\n      if (t1.to != t2.to) {\n        if (t1.to.number < t2.to.number) return -1;\n        else if (t1.to.number > t2.to.number) return 1;\n      }\n      if (t1.min < t2.min) return -1;\n      if (t1.min > t2.min) return 1;\n      if (t1.max > t2.max) return -1;\n      if (t1.max < t2.max) return 1;\n      return 0;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c84485629d80d203608e8975a1139de9933cc38","date":1403166128,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/Transition.CompareByDestThenMinMaxSingle#compare(Transition,Transition).mjava","sourceNew":null,"sourceOld":"    @Override\n    public int compare(Transition t1, Transition t2) {\n      if (t1.to != t2.to) {\n        if (t1.to.number < t2.to.number) return -1;\n        else if (t1.to.number > t2.to.number) return 1;\n      }\n      if (t1.min < t2.min) return -1;\n      if (t1.min > t2.min) return 1;\n      if (t1.max > t2.max) return -1;\n      if (t1.max < t2.max) return 1;\n      return 0;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","7530de27b87b961b51f01bd1299b7004d46e8823"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7f4ef381bf0c2d618c6db830d3dd668c6901c05a":["7530de27b87b961b51f01bd1299b7004d46e8823"],"5c84485629d80d203608e8975a1139de9933cc38":["7530de27b87b961b51f01bd1299b7004d46e8823","7f4ef381bf0c2d618c6db830d3dd668c6901c05a"],"7530de27b87b961b51f01bd1299b7004d46e8823":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5c84485629d80d203608e8975a1139de9933cc38"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7f4ef381bf0c2d618c6db830d3dd668c6901c05a":["5c84485629d80d203608e8975a1139de9933cc38"],"5c84485629d80d203608e8975a1139de9933cc38":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7f4ef381bf0c2d618c6db830d3dd668c6901c05a","5c84485629d80d203608e8975a1139de9933cc38"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}