{"path":"contrib/gdata-server/src/core/src/test/org/apache/lucene/gdata/search/index/TestGdataIndexWriter#testGDataIndexWriter().mjava","commits":[{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/test/org/apache/lucene/gdata/search/index/TestGdataIndexWriter#testGDataIndexWriter().mjava","pathOld":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/search/index/TestGdataIndexWriter#testGDataIndexWriter().mjava","sourceNew":"    /**\n     * Test method for 'org.apache.lucene.gdata.search.index.GDataIndexWriter.GDataIndexWriter(Directory, boolean, IndexSchema)'\n     * @throws IOException \n     */\n    public void testGDataIndexWriter() throws IOException {\n        try{\n        new GDataIndexWriter(new RAMDirectory(),true,null);\n        fail(\"no index schema\");\n        }catch (IllegalArgumentException e) {}\n        GDataIndexWriter writer = new GDataIndexWriter(new RAMDirectory(),true,this.schemaNoPerFielAnalyzer);\n        assertTrue(writer.getAnalyzer().getClass() == StandardAnalyzer.class);\n        \n        writer = new GDataIndexWriter(new RAMDirectory(),true,this.schemaPerFielAnalyzer);\n        assertTrue(writer.getAnalyzer().getClass() == PerFieldAnalyzerWrapper.class);\n        //TODO fix this - index writer has no commitlocktimeout setter anymore (lockless commits)\n//        assertEquals(VALUE_GT_DEFAULT_LONG,writer.getCommitLockTimeout());\n        assertEquals(VALUE_GT_DEFAULT_LONG,writer.getWriteLockTimeout());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxBufferedDocs());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxMergeDocs());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxFieldLength());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMergeFactor());\n        assertTrue(writer.getUseCompoundFile());\n    }\n\n","sourceOld":"    /**\n     * Test method for 'org.apache.lucene.gdata.search.index.GDataIndexWriter.GDataIndexWriter(Directory, boolean, IndexSchema)'\n     * @throws IOException \n     */\n    public void testGDataIndexWriter() throws IOException {\n        try{\n        new GDataIndexWriter(new RAMDirectory(),true,null);\n        fail(\"no index schema\");\n        }catch (IllegalArgumentException e) {}\n        GDataIndexWriter writer = new GDataIndexWriter(new RAMDirectory(),true,this.schemaNoPerFielAnalyzer);\n        assertTrue(writer.getAnalyzer().getClass() == StandardAnalyzer.class);\n        \n        writer = new GDataIndexWriter(new RAMDirectory(),true,this.schemaPerFielAnalyzer);\n        assertTrue(writer.getAnalyzer().getClass() == PerFieldAnalyzerWrapper.class);\n        //TODO fix this - index writer has no commitlocktimeout setter anymore (lockless commits)\n//        assertEquals(VALUE_GT_DEFAULT_LONG,writer.getCommitLockTimeout());\n        assertEquals(VALUE_GT_DEFAULT_LONG,writer.getWriteLockTimeout());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxBufferedDocs());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxMergeDocs());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxFieldLength());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMergeFactor());\n        assertTrue(writer.getUseCompoundFile());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e0d75d47683f1bcf4a7c6de9d79ac3b91de51c4","date":1190750527,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/test/org/apache/lucene/gdata/search/index/TestGdataIndexWriter#testGDataIndexWriter().mjava","pathOld":"contrib/gdata-server/src/core/src/test/org/apache/lucene/gdata/search/index/TestGdataIndexWriter#testGDataIndexWriter().mjava","sourceNew":"    /**\n     * Test method for 'org.apache.lucene.gdata.search.index.GDataIndexWriter.GDataIndexWriter(Directory, boolean, IndexSchema)'\n     * @throws IOException \n     */\n    public void testGDataIndexWriter() throws IOException {\n        try{\n        new GDataIndexWriter(new RAMDirectory(),true,null);\n        fail(\"no index schema\");\n        }catch (IllegalArgumentException e) {}\n        GDataIndexWriter writer = new GDataIndexWriter(new RAMDirectory(),true,this.schemaNoPerFielAnalyzer);\n        assertTrue(writer.getAnalyzer().getClass() == StandardAnalyzer.class);\n        \n        writer = new GDataIndexWriter(new RAMDirectory(),true,this.schemaPerFielAnalyzer);\n        assertTrue(writer.getAnalyzer().getClass() == PerFieldAnalyzerWrapper.class);\n        //TODO fix this - index writer has no commitlocktimeout setter anymore (lockless commits)\n//        assertEquals(VALUE_GT_DEFAULT_LONG,writer.getCommitLockTimeout());\n        assertEquals(VALUE_GT_DEFAULT_LONG,writer.getWriteLockTimeout());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxBufferedDocs());\n        if (writer.getMergePolicy() instanceof LogDocMergePolicy)\n          assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxMergeDocs());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxFieldLength());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMergeFactor());\n        assertTrue(writer.getUseCompoundFile());\n    }\n\n","sourceOld":"    /**\n     * Test method for 'org.apache.lucene.gdata.search.index.GDataIndexWriter.GDataIndexWriter(Directory, boolean, IndexSchema)'\n     * @throws IOException \n     */\n    public void testGDataIndexWriter() throws IOException {\n        try{\n        new GDataIndexWriter(new RAMDirectory(),true,null);\n        fail(\"no index schema\");\n        }catch (IllegalArgumentException e) {}\n        GDataIndexWriter writer = new GDataIndexWriter(new RAMDirectory(),true,this.schemaNoPerFielAnalyzer);\n        assertTrue(writer.getAnalyzer().getClass() == StandardAnalyzer.class);\n        \n        writer = new GDataIndexWriter(new RAMDirectory(),true,this.schemaPerFielAnalyzer);\n        assertTrue(writer.getAnalyzer().getClass() == PerFieldAnalyzerWrapper.class);\n        //TODO fix this - index writer has no commitlocktimeout setter anymore (lockless commits)\n//        assertEquals(VALUE_GT_DEFAULT_LONG,writer.getCommitLockTimeout());\n        assertEquals(VALUE_GT_DEFAULT_LONG,writer.getWriteLockTimeout());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxBufferedDocs());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxMergeDocs());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxFieldLength());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMergeFactor());\n        assertTrue(writer.getUseCompoundFile());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe","date":1195519587,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/gdata-server/src/core/src/test/org/apache/lucene/gdata/search/index/TestGdataIndexWriter#testGDataIndexWriter().mjava","sourceNew":null,"sourceOld":"    /**\n     * Test method for 'org.apache.lucene.gdata.search.index.GDataIndexWriter.GDataIndexWriter(Directory, boolean, IndexSchema)'\n     * @throws IOException \n     */\n    public void testGDataIndexWriter() throws IOException {\n        try{\n        new GDataIndexWriter(new RAMDirectory(),true,null);\n        fail(\"no index schema\");\n        }catch (IllegalArgumentException e) {}\n        GDataIndexWriter writer = new GDataIndexWriter(new RAMDirectory(),true,this.schemaNoPerFielAnalyzer);\n        assertTrue(writer.getAnalyzer().getClass() == StandardAnalyzer.class);\n        \n        writer = new GDataIndexWriter(new RAMDirectory(),true,this.schemaPerFielAnalyzer);\n        assertTrue(writer.getAnalyzer().getClass() == PerFieldAnalyzerWrapper.class);\n        //TODO fix this - index writer has no commitlocktimeout setter anymore (lockless commits)\n//        assertEquals(VALUE_GT_DEFAULT_LONG,writer.getCommitLockTimeout());\n        assertEquals(VALUE_GT_DEFAULT_LONG,writer.getWriteLockTimeout());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxBufferedDocs());\n        if (writer.getMergePolicy() instanceof LogDocMergePolicy)\n          assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxMergeDocs());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMaxFieldLength());\n        assertEquals(VALUE_GT_DEFAULT_INT,writer.getMergeFactor());\n        assertTrue(writer.getUseCompoundFile());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2e0d75d47683f1bcf4a7c6de9d79ac3b91de51c4":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["2e0d75d47683f1bcf4a7c6de9d79ac3b91de51c4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"]},"commit2Childs":{"2e0d75d47683f1bcf4a7c6de9d79ac3b91de51c4":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"],"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["2e0d75d47683f1bcf4a7c6de9d79ac3b91de51c4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}