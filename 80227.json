{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestFieldReader#simple().mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestFieldReader#simple().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestFieldReader#simple().mjava","sourceNew":"  @Test\n  public void simple() {\n    DataImporter di = new DataImporter();\n    di.loadAndInit(config);\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    DataImporter.RequestParams rp = new DataImporter.RequestParams(createMap(\"command\", \"full-import\"));\n    List<Map<String, Object>> l = new ArrayList<Map<String, Object>>();\n    l.add(createMap(\"xml\", xml));\n    MockDataSource.setIterator(\"select * from a\", l.iterator());\n    di.runCmd(rp, sw);\n    assertEquals(sw.docs.get(0).getFieldValue(\"y\"), \"Hello\");\n    MockDataSource.clearCache();\n  }\n\n","sourceOld":"  @Test\n  public void simple() {\n    DataImporter di = new DataImporter();\n    di.loadAndInit(config);\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    DataImporter.RequestParams rp = new DataImporter.RequestParams(createMap(\"command\", \"full-import\"));\n    List<Map<String, Object>> l = new ArrayList<Map<String, Object>>();\n    l.add(createMap(\"xml\", xml));\n    MockDataSource.setIterator(\"select * from a\", l.iterator());\n    di.runCmd(rp, sw);\n    assertEquals(sw.docs.get(0).getFieldValue(\"y\"), \"Hello\");\n    MockDataSource.clearCache();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestFieldReader#simple().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestFieldReader#simple().mjava","sourceNew":"  @Test\n  public void simple() {\n    DataImporter di = new DataImporter();\n    di.loadAndInit(config);\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    DataImporter.RequestParams rp = new DataImporter.RequestParams(createMap(\"command\", \"full-import\"));\n    List<Map<String, Object>> l = new ArrayList<Map<String, Object>>();\n    l.add(createMap(\"xml\", xml));\n    MockDataSource.setIterator(\"select * from a\", l.iterator());\n    di.runCmd(rp, sw);\n    assertEquals(sw.docs.get(0).getFieldValue(\"y\"), \"Hello\");\n    MockDataSource.clearCache();\n  }\n\n","sourceOld":"  @Test\n  public void simple() {\n    DataImporter di = new DataImporter();\n    di.loadAndInit(config);\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    DataImporter.RequestParams rp = new DataImporter.RequestParams(createMap(\"command\", \"full-import\"));\n    List<Map<String, Object>> l = new ArrayList<Map<String, Object>>();\n    l.add(createMap(\"xml\", xml));\n    MockDataSource.setIterator(\"select * from a\", l.iterator());\n    di.runCmd(rp, sw);\n    assertEquals(sw.docs.get(0).getFieldValue(\"y\"), \"Hello\");\n    MockDataSource.clearCache();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c","date":1335805170,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestFieldReader#simple().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestFieldReader#simple().mjava","sourceNew":"  @Test\n  public void simple() {\n    DataImporter di = new DataImporter();\n    di.loadAndInit(config);\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    RequestInfo rp = new RequestInfo(createMap(\"command\", \"full-import\"), null);\n    List<Map<String, Object>> l = new ArrayList<Map<String, Object>>();\n    l.add(createMap(\"xml\", xml));\n    MockDataSource.setIterator(\"select * from a\", l.iterator());\n    di.runCmd(rp, sw);\n    assertEquals(sw.docs.get(0).getFieldValue(\"y\"), \"Hello\");\n    MockDataSource.clearCache();\n  }\n\n","sourceOld":"  @Test\n  public void simple() {\n    DataImporter di = new DataImporter();\n    di.loadAndInit(config);\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    DataImporter.RequestParams rp = new DataImporter.RequestParams(createMap(\"command\", \"full-import\"));\n    List<Map<String, Object>> l = new ArrayList<Map<String, Object>>();\n    l.add(createMap(\"xml\", xml));\n    MockDataSource.setIterator(\"select * from a\", l.iterator());\n    di.runCmd(rp, sw);\n    assertEquals(sw.docs.get(0).getFieldValue(\"y\"), \"Hello\");\n    MockDataSource.clearCache();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08970e5b8411182a29412c177eff67ec1110095b","date":1366640815,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestFieldReader#simple().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestFieldReader#simple().mjava","sourceNew":"  @Test\n  public void simple() {\n    DataImporter di = new DataImporter();\n    di.loadAndInit(config);\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    RequestInfo rp = new RequestInfo(null, createMap(\"command\", \"full-import\"), null);\n    List<Map<String, Object>> l = new ArrayList<Map<String, Object>>();\n    l.add(createMap(\"xml\", xml));\n    MockDataSource.setIterator(\"select * from a\", l.iterator());\n    di.runCmd(rp, sw);\n    assertEquals(sw.docs.get(0).getFieldValue(\"y\"), \"Hello\");\n    MockDataSource.clearCache();\n  }\n\n","sourceOld":"  @Test\n  public void simple() {\n    DataImporter di = new DataImporter();\n    di.loadAndInit(config);\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    RequestInfo rp = new RequestInfo(createMap(\"command\", \"full-import\"), null);\n    List<Map<String, Object>> l = new ArrayList<Map<String, Object>>();\n    l.add(createMap(\"xml\", xml));\n    MockDataSource.setIterator(\"select * from a\", l.iterator());\n    di.runCmd(rp, sw);\n    assertEquals(sw.docs.get(0).getFieldValue(\"y\"), \"Hello\");\n    MockDataSource.clearCache();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestFieldReader#simple().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestFieldReader#simple().mjava","sourceNew":"  @Test\n  public void simple() {\n    DataImporter di = new DataImporter();\n    di.loadAndInit(config);\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    RequestInfo rp = new RequestInfo(null, createMap(\"command\", \"full-import\"), null);\n    List<Map<String, Object>> l = new ArrayList<>();\n    l.add(createMap(\"xml\", xml));\n    MockDataSource.setIterator(\"select * from a\", l.iterator());\n    di.runCmd(rp, sw);\n    assertEquals(sw.docs.get(0).getFieldValue(\"y\"), \"Hello\");\n    MockDataSource.clearCache();\n  }\n\n","sourceOld":"  @Test\n  public void simple() {\n    DataImporter di = new DataImporter();\n    di.loadAndInit(config);\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    RequestInfo rp = new RequestInfo(null, createMap(\"command\", \"full-import\"), null);\n    List<Map<String, Object>> l = new ArrayList<Map<String, Object>>();\n    l.add(createMap(\"xml\", xml));\n    MockDataSource.setIterator(\"select * from a\", l.iterator());\n    di.runCmd(rp, sw);\n    assertEquals(sw.docs.get(0).getFieldValue(\"y\"), \"Hello\");\n    MockDataSource.clearCache();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a9c941a7004ea2e95b10aa67dafa319ff8d8c19","date":1400739326,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestFieldReader#simple().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestFieldReader#simple().mjava","sourceNew":"  @Test\n  public void simple() {\n    DataImporter di = new DataImporter();\n    di.loadAndInit(config);\n    redirectTempProperties(di);\n\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    RequestInfo rp = new RequestInfo(null, createMap(\"command\", \"full-import\"), null);\n    List<Map<String, Object>> l = new ArrayList<>();\n    l.add(createMap(\"xml\", xml));\n    MockDataSource.setIterator(\"select * from a\", l.iterator());\n    di.runCmd(rp, sw);\n    assertEquals(sw.docs.get(0).getFieldValue(\"y\"), \"Hello\");\n    MockDataSource.clearCache();\n  }\n\n","sourceOld":"  @Test\n  public void simple() {\n    DataImporter di = new DataImporter();\n    di.loadAndInit(config);\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    RequestInfo rp = new RequestInfo(null, createMap(\"command\", \"full-import\"), null);\n    List<Map<String, Object>> l = new ArrayList<>();\n    l.add(createMap(\"xml\", xml));\n    MockDataSource.setIterator(\"select * from a\", l.iterator());\n    di.runCmd(rp, sw);\n    assertEquals(sw.docs.get(0).getFieldValue(\"y\"), \"Hello\");\n    MockDataSource.clearCache();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7605579001505896d48b07160075a5c8b8e128e","date":1400758727,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestFieldReader#simple().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestFieldReader#simple().mjava","sourceNew":"  @Test\n  public void simple() {\n    DataImporter di = new DataImporter();\n    di.loadAndInit(config);\n    redirectTempProperties(di);\n\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    RequestInfo rp = new RequestInfo(null, createMap(\"command\", \"full-import\"), null);\n    List<Map<String, Object>> l = new ArrayList<>();\n    l.add(createMap(\"xml\", xml));\n    MockDataSource.setIterator(\"select * from a\", l.iterator());\n    di.runCmd(rp, sw);\n    assertEquals(sw.docs.get(0).getFieldValue(\"y\"), \"Hello\");\n    MockDataSource.clearCache();\n  }\n\n","sourceOld":"  @Test\n  public void simple() {\n    DataImporter di = new DataImporter();\n    di.loadAndInit(config);\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    RequestInfo rp = new RequestInfo(null, createMap(\"command\", \"full-import\"), null);\n    List<Map<String, Object>> l = new ArrayList<>();\n    l.add(createMap(\"xml\", xml));\n    MockDataSource.setIterator(\"select * from a\", l.iterator());\n    di.runCmd(rp, sw);\n    assertEquals(sw.docs.get(0).getFieldValue(\"y\"), \"Hello\");\n    MockDataSource.clearCache();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestFieldReader#simple().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestFieldReader#simple().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void simple() {\n    DataImporter di = new DataImporter();\n    di.loadAndInit(config);\n    redirectTempProperties(di);\n\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    RequestInfo rp = new RequestInfo(null, createMap(\"command\", \"full-import\"), null);\n    List<Map<String, Object>> l = new ArrayList<>();\n    l.add(createMap(\"xml\", xml));\n    MockDataSource.setIterator(\"select * from a\", l.iterator());\n    di.runCmd(rp, sw);\n    assertEquals(sw.docs.get(0).getFieldValue(\"y\"), \"Hello\");\n    MockDataSource.clearCache();\n  }\n\n","sourceOld":"  @Test\n  public void simple() {\n    DataImporter di = new DataImporter();\n    di.loadAndInit(config);\n    redirectTempProperties(di);\n\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    RequestInfo rp = new RequestInfo(null, createMap(\"command\", \"full-import\"), null);\n    List<Map<String, Object>> l = new ArrayList<>();\n    l.add(createMap(\"xml\", xml));\n    MockDataSource.setIterator(\"select * from a\", l.iterator());\n    di.runCmd(rp, sw);\n    assertEquals(sw.docs.get(0).getFieldValue(\"y\"), \"Hello\");\n    MockDataSource.clearCache();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestFieldReader#simple().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestFieldReader#simple().mjava","sourceNew":"  @Test\n  public void simple() {\n    DataImporter di = new DataImporter();\n    di.loadAndInit(config);\n    redirectTempProperties(di);\n\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    RequestInfo rp = new RequestInfo(null, createMap(\"command\", \"full-import\"), null);\n    List<Map<String, Object>> l = new ArrayList<>();\n    l.add(createMap(\"xml\", xml));\n    MockDataSource.setIterator(\"select * from a\", l.iterator());\n    di.runCmd(rp, sw);\n    assertEquals(sw.docs.get(0).getFieldValue(\"y\"), \"Hello\");\n    MockDataSource.clearCache();\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void simple() {\n    DataImporter di = new DataImporter();\n    di.loadAndInit(config);\n    redirectTempProperties(di);\n\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    RequestInfo rp = new RequestInfo(null, createMap(\"command\", \"full-import\"), null);\n    List<Map<String, Object>> l = new ArrayList<>();\n    l.add(createMap(\"xml\", xml));\n    MockDataSource.setIterator(\"select * from a\", l.iterator());\n    di.runCmd(rp, sw);\n    assertEquals(sw.docs.get(0).getFieldValue(\"y\"), \"Hello\");\n    MockDataSource.clearCache();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"024e13388acbf5562fcbb77a129620982a5e2d79","date":1591531835,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestFieldReader#simple().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestFieldReader#simple().mjava","sourceNew":"  @Test\n  @SuppressWarnings({\"unchecked\"})\n  public void simple() {\n    DataImporter di = new DataImporter();\n    di.loadAndInit(config);\n    redirectTempProperties(di);\n\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    RequestInfo rp = new RequestInfo(null, createMap(\"command\", \"full-import\"), null);\n    List<Map<String, Object>> l = new ArrayList<>();\n    l.add(createMap(\"xml\", xml));\n    MockDataSource.setIterator(\"select * from a\", l.iterator());\n    di.runCmd(rp, sw);\n    assertEquals(sw.docs.get(0).getFieldValue(\"y\"), \"Hello\");\n    MockDataSource.clearCache();\n  }\n\n","sourceOld":"  @Test\n  public void simple() {\n    DataImporter di = new DataImporter();\n    di.loadAndInit(config);\n    redirectTempProperties(di);\n\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    RequestInfo rp = new RequestInfo(null, createMap(\"command\", \"full-import\"), null);\n    List<Map<String, Object>> l = new ArrayList<>();\n    l.add(createMap(\"xml\", xml));\n    MockDataSource.setIterator(\"select * from a\", l.iterator());\n    di.runCmd(rp, sw);\n    assertEquals(sw.docs.get(0).getFieldValue(\"y\"), \"Hello\");\n    MockDataSource.clearCache();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestFieldReader#simple().mjava","sourceNew":null,"sourceOld":"  @Test\n  @SuppressWarnings({\"unchecked\"})\n  public void simple() {\n    DataImporter di = new DataImporter();\n    di.loadAndInit(config);\n    redirectTempProperties(di);\n\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    RequestInfo rp = new RequestInfo(null, createMap(\"command\", \"full-import\"), null);\n    List<Map<String, Object>> l = new ArrayList<>();\n    l.add(createMap(\"xml\", xml));\n    MockDataSource.setIterator(\"select * from a\", l.iterator());\n    di.runCmd(rp, sw);\n    assertEquals(sw.docs.get(0).getFieldValue(\"y\"), \"Hello\");\n    MockDataSource.clearCache();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["08970e5b8411182a29412c177eff67ec1110095b"],"024e13388acbf5562fcbb77a129620982a5e2d79":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["4a9c941a7004ea2e95b10aa67dafa319ff8d8c19"],"4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"b7605579001505896d48b07160075a5c8b8e128e":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","4a9c941a7004ea2e95b10aa67dafa319ff8d8c19"],"4a9c941a7004ea2e95b10aa67dafa319ff8d8c19":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"08970e5b8411182a29412c177eff67ec1110095b":["4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["024e13388acbf5562fcbb77a129620982a5e2d79"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["b7605579001505896d48b07160075a5c8b8e128e","4a9c941a7004ea2e95b10aa67dafa319ff8d8c19"],"024e13388acbf5562fcbb77a129620982a5e2d79":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c":["08970e5b8411182a29412c177eff67ec1110095b"],"c26f00b574427b55127e869b935845554afde1fa":["4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c"],"b7605579001505896d48b07160075a5c8b8e128e":[],"08970e5b8411182a29412c177eff67ec1110095b":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"4a9c941a7004ea2e95b10aa67dafa319ff8d8c19":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","b7605579001505896d48b07160075a5c8b8e128e"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["024e13388acbf5562fcbb77a129620982a5e2d79"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7605579001505896d48b07160075a5c8b8e128e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}