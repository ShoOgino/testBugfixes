{"path":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/SynonymAnalyzer[HighlighterTest]#tokenStream(String,Reader).mjava","commits":[{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/SynonymAnalyzer[HighlighterTest]#tokenStream(String,Reader).mjava","pathOld":"sandbox/contributions/highlighter/src/test/org/apache/lucene/search/highlight/SynonymAnalyzer[HighlighterTest]#tokenStream(String,Reader).mjava","sourceNew":"\t/* (non-Javadoc)\n\t * @see org.apache.lucene.analysis.Analyzer#tokenStream(java.lang.String, java.io.Reader)\n\t */\n\tpublic TokenStream tokenStream(String arg0, Reader arg1)\n\t{\n\n\t\treturn new SynonymTokenizer(new LowerCaseTokenizer(arg1), synonyms);\n\t}\n\n","sourceOld":"\t/* (non-Javadoc)\n\t * @see org.apache.lucene.analysis.Analyzer#tokenStream(java.lang.String, java.io.Reader)\n\t */\n\tpublic TokenStream tokenStream(String arg0, Reader arg1)\n\t{\n\n\t\treturn new SynonymTokenizer(new LowerCaseTokenizer(arg1), synonyms);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b4cf21055ce3298c85f04952b1aa208983470c4","date":1108840132,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/SynonymAnalyzer[HighlighterTest]#tokenStream(String,Reader).mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/SynonymAnalyzer[HighlighterTest]#tokenStream(String,Reader).mjava","sourceNew":"\t/* (non-Javadoc)\n\t * @see org.apache.lucene.analysis.Analyzer#tokenStream(java.lang.String, java.io.Reader)\n\t */\n\tpublic TokenStream tokenStream(String arg0, Reader arg1)\n\t{\n\t\treturn new SynonymTokenizer(new LowerCaseTokenizer(arg1), synonyms);\n\t}\n\n","sourceOld":"\t/* (non-Javadoc)\n\t * @see org.apache.lucene.analysis.Analyzer#tokenStream(java.lang.String, java.io.Reader)\n\t */\n\tpublic TokenStream tokenStream(String arg0, Reader arg1)\n\t{\n\n\t\treturn new SynonymTokenizer(new LowerCaseTokenizer(arg1), synonyms);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"296b8b38a87feb478921f77834a2302dfe77641c","date":1209506838,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/SynonymAnalyzer[HighlighterTest]#tokenStream(String,Reader).mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/SynonymAnalyzer[HighlighterTest]#tokenStream(String,Reader).mjava","sourceNew":"  /*\n   * (non-Javadoc)\n   * \n   * @see org.apache.lucene.analysis.Analyzer#tokenStream(java.lang.String,\n   *      java.io.Reader)\n   */\n  public TokenStream tokenStream(String arg0, Reader arg1) {\n    return new SynonymTokenizer(new LowerCaseTokenizer(arg1), synonyms);\n  }\n\n","sourceOld":"\t/* (non-Javadoc)\n\t * @see org.apache.lucene.analysis.Analyzer#tokenStream(java.lang.String, java.io.Reader)\n\t */\n\tpublic TokenStream tokenStream(String arg0, Reader arg1)\n\t{\n\t\treturn new SynonymTokenizer(new LowerCaseTokenizer(arg1), synonyms);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b4471b2ef75c0e11869f60b23cabe292b895c3ee","date":1248991247,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/SynonymAnalyzer[HighlighterTest]#tokenStream(String,Reader).mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/SynonymAnalyzer[HighlighterTest]#tokenStream(String,Reader).mjava","sourceNew":"  /*\n   * (non-Javadoc)\n   * \n   * @see org.apache.lucene.analysis.Analyzer#tokenStream(java.lang.String,\n   *      java.io.Reader)\n   */\n  public TokenStream tokenStream(String arg0, Reader arg1) {\n    LowerCaseTokenizer stream = new LowerCaseTokenizer(arg1);\n    stream.addAttribute(TermAttribute.class);\n    stream.addAttribute(PositionIncrementAttribute.class);\n    stream.addAttribute(OffsetAttribute.class);\n    return new SynonymTokenizer(stream, synonyms);\n  }\n\n","sourceOld":"  /*\n   * (non-Javadoc)\n   * \n   * @see org.apache.lucene.analysis.Analyzer#tokenStream(java.lang.String,\n   *      java.io.Reader)\n   */\n  public TokenStream tokenStream(String arg0, Reader arg1) {\n    return new SynonymTokenizer(new LowerCaseTokenizer(arg1), synonyms);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/SynonymAnalyzer[HighlighterTest]#tokenStream(String,Reader).mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/SynonymAnalyzer[HighlighterTest]#tokenStream(String,Reader).mjava","sourceNew":"  /*\n   * (non-Javadoc)\n   * \n   * @see org.apache.lucene.analysis.Analyzer#tokenStream(java.lang.String,\n   *      java.io.Reader)\n   */\n  @Override\n  public TokenStream tokenStream(String arg0, Reader arg1) {\n    LowerCaseTokenizer stream = new LowerCaseTokenizer(arg1);\n    stream.addAttribute(TermAttribute.class);\n    stream.addAttribute(PositionIncrementAttribute.class);\n    stream.addAttribute(OffsetAttribute.class);\n    return new SynonymTokenizer(stream, synonyms);\n  }\n\n","sourceOld":"  /*\n   * (non-Javadoc)\n   * \n   * @see org.apache.lucene.analysis.Analyzer#tokenStream(java.lang.String,\n   *      java.io.Reader)\n   */\n  public TokenStream tokenStream(String arg0, Reader arg1) {\n    LowerCaseTokenizer stream = new LowerCaseTokenizer(arg1);\n    stream.addAttribute(TermAttribute.class);\n    stream.addAttribute(PositionIncrementAttribute.class);\n    stream.addAttribute(OffsetAttribute.class);\n    return new SynonymTokenizer(stream, synonyms);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6ced3401b9c4e7ed2be67711dbc83e48b81aa736","date":1265394056,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/SynonymAnalyzer[HighlighterTest]#tokenStream(String,Reader).mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/SynonymAnalyzer[HighlighterTest]#tokenStream(String,Reader).mjava","sourceNew":"  /*\n   * (non-Javadoc)\n   * \n   * @see org.apache.lucene.analysis.Analyzer#tokenStream(java.lang.String,\n   *      java.io.Reader)\n   */\n  @Override\n  public TokenStream tokenStream(String arg0, Reader arg1) {\n    LowerCaseTokenizer stream = new LowerCaseTokenizer(Version.LUCENE_CURRENT, arg1);\n    stream.addAttribute(TermAttribute.class);\n    stream.addAttribute(PositionIncrementAttribute.class);\n    stream.addAttribute(OffsetAttribute.class);\n    return new SynonymTokenizer(stream, synonyms);\n  }\n\n","sourceOld":"  /*\n   * (non-Javadoc)\n   * \n   * @see org.apache.lucene.analysis.Analyzer#tokenStream(java.lang.String,\n   *      java.io.Reader)\n   */\n  @Override\n  public TokenStream tokenStream(String arg0, Reader arg1) {\n    LowerCaseTokenizer stream = new LowerCaseTokenizer(arg1);\n    stream.addAttribute(TermAttribute.class);\n    stream.addAttribute(PositionIncrementAttribute.class);\n    stream.addAttribute(OffsetAttribute.class);\n    return new SynonymTokenizer(stream, synonyms);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/SynonymAnalyzer[HighlighterTest]#tokenStream(String,Reader).mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/SynonymAnalyzer[HighlighterTest]#tokenStream(String,Reader).mjava","sourceNew":"  /*\n   * (non-Javadoc)\n   * \n   * @see org.apache.lucene.analysis.Analyzer#tokenStream(java.lang.String,\n   *      java.io.Reader)\n   */\n  @Override\n  public TokenStream tokenStream(String arg0, Reader arg1) {\n    LowerCaseTokenizer stream = new LowerCaseTokenizer(LuceneTestCase.TEST_VERSION_CURRENT, arg1);\n    stream.addAttribute(TermAttribute.class);\n    stream.addAttribute(PositionIncrementAttribute.class);\n    stream.addAttribute(OffsetAttribute.class);\n    return new SynonymTokenizer(stream, synonyms);\n  }\n\n","sourceOld":"  /*\n   * (non-Javadoc)\n   * \n   * @see org.apache.lucene.analysis.Analyzer#tokenStream(java.lang.String,\n   *      java.io.Reader)\n   */\n  @Override\n  public TokenStream tokenStream(String arg0, Reader arg1) {\n    LowerCaseTokenizer stream = new LowerCaseTokenizer(Version.LUCENE_CURRENT, arg1);\n    stream.addAttribute(TermAttribute.class);\n    stream.addAttribute(PositionIncrementAttribute.class);\n    stream.addAttribute(OffsetAttribute.class);\n    return new SynonymTokenizer(stream, synonyms);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/SynonymAnalyzer[HighlighterTest]#tokenStream(String,Reader).mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/SynonymAnalyzer[HighlighterTest]#tokenStream(String,Reader).mjava","sourceNew":"  /*\n   * (non-Javadoc)\n   * \n   * @see org.apache.lucene.analysis.Analyzer#tokenStream(java.lang.String,\n   *      java.io.Reader)\n   */\n  @Override\n  public TokenStream tokenStream(String arg0, Reader arg1) {\n    LowerCaseTokenizer stream = new LowerCaseTokenizer(LuceneTestCase.TEST_VERSION_CURRENT, arg1);\n    stream.addAttribute(TermAttribute.class);\n    stream.addAttribute(PositionIncrementAttribute.class);\n    stream.addAttribute(OffsetAttribute.class);\n    return new SynonymTokenizer(stream, synonyms);\n  }\n\n","sourceOld":"  /*\n   * (non-Javadoc)\n   * \n   * @see org.apache.lucene.analysis.Analyzer#tokenStream(java.lang.String,\n   *      java.io.Reader)\n   */\n  @Override\n  public TokenStream tokenStream(String arg0, Reader arg1) {\n    LowerCaseTokenizer stream = new LowerCaseTokenizer(LuceneTestCase.TEST_VERSION_CURRENT, arg1);\n    stream.addAttribute(TermAttribute.class);\n    stream.addAttribute(PositionIncrementAttribute.class);\n    stream.addAttribute(OffsetAttribute.class);\n    return new SynonymTokenizer(stream, synonyms);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4b4cf21055ce3298c85f04952b1aa208983470c4":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b4471b2ef75c0e11869f60b23cabe292b895c3ee":["296b8b38a87feb478921f77834a2302dfe77641c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["b4471b2ef75c0e11869f60b23cabe292b895c3ee"],"6ced3401b9c4e7ed2be67711dbc83e48b81aa736":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"296b8b38a87feb478921f77834a2302dfe77641c":["4b4cf21055ce3298c85f04952b1aa208983470c4"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["6ced3401b9c4e7ed2be67711dbc83e48b81aa736"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"]},"commit2Childs":{"4b4cf21055ce3298c85f04952b1aa208983470c4":["296b8b38a87feb478921f77834a2302dfe77641c"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["4b4cf21055ce3298c85f04952b1aa208983470c4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"b4471b2ef75c0e11869f60b23cabe292b895c3ee":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["6ced3401b9c4e7ed2be67711dbc83e48b81aa736"],"296b8b38a87feb478921f77834a2302dfe77641c":["b4471b2ef75c0e11869f60b23cabe292b895c3ee"],"6ced3401b9c4e7ed2be67711dbc83e48b81aa736":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}