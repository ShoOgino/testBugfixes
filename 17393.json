{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBSolrClient#request(SolrRequest,String).mjava","commits":[{"id":"1a77e5e21cbd575a8240b0e3926164f15295f4e8","date":1544979500,"type":1,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBSolrClient#request(SolrRequest,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#request(SolrRequest,String).mjava","sourceNew":"  /**\n   * Tries to query a live server. A SolrServerException is thrown if all servers are dead.\n   * If the request failed due to IOException then the live server is moved to dead pool and the request is\n   * retried on another live server.  After live servers are exhausted, any servers previously marked as dead\n   * will be tried before failing the request.\n   *\n   * @param request the SolrRequest.\n   *\n   * @return response\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  @Override\n  public NamedList<Object> request(final SolrRequest request, String collection)\n      throws SolrServerException, IOException {\n    return request(request, collection, null);\n  }\n\n","sourceOld":"  /**\n   * Tries to query a live server. A SolrServerException is thrown if all servers are dead.\n   * If the request failed due to IOException then the live server is moved to dead pool and the request is\n   * retried on another live server.  After live servers are exhausted, any servers previously marked as dead\n   * will be tried before failing the request.\n   *\n   * @param request the SolrRequest.\n   *\n   * @return response\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  @Override\n  public NamedList<Object> request(final SolrRequest request, String collection)\n          throws SolrServerException, IOException {\n    return request(request, collection, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4f6e13eb95702dc635119d2ccd4fa5fafcc88d","date":1592006776,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBSolrClient#request(SolrRequest,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBSolrClient#request(SolrRequest,String).mjava","sourceNew":"  /**\n   * Tries to query a live server. A SolrServerException is thrown if all servers are dead.\n   * If the request failed due to IOException then the live server is moved to dead pool and the request is\n   * retried on another live server.  After live servers are exhausted, any servers previously marked as dead\n   * will be tried before failing the request.\n   *\n   * @param request the SolrRequest.\n   *\n   * @return response\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  @Override\n  public NamedList<Object> request(@SuppressWarnings({\"rawtypes\"})final SolrRequest request, String collection)\n      throws SolrServerException, IOException {\n    return request(request, collection, null);\n  }\n\n","sourceOld":"  /**\n   * Tries to query a live server. A SolrServerException is thrown if all servers are dead.\n   * If the request failed due to IOException then the live server is moved to dead pool and the request is\n   * retried on another live server.  After live servers are exhausted, any servers previously marked as dead\n   * will be tried before failing the request.\n   *\n   * @param request the SolrRequest.\n   *\n   * @return response\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  @Override\n  public NamedList<Object> request(final SolrRequest request, String collection)\n      throws SolrServerException, IOException {\n    return request(request, collection, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0f4f6e13eb95702dc635119d2ccd4fa5fafcc88d":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f4f6e13eb95702dc635119d2ccd4fa5fafcc88d"]},"commit2Childs":{"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["0f4f6e13eb95702dc635119d2ccd4fa5fafcc88d"],"0f4f6e13eb95702dc635119d2ccd4fa5fafcc88d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}