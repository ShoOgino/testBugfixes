{"path":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,boolean,String).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,boolean,String).mjava","pathOld":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,boolean,String).mjava","sourceNew":"\t/**\n\t * Extracts all terms texts of a given Query into an array of WeightedTerms\n\t *\n\t * @param query      Query to extract term texts from\n\t * @param prohibited <code>true</code> to extract \"prohibited\" terms, too\n\t * @param fieldName  The fieldName used to filter query terms\n   * @return an array of the terms used in a query, plus their weights.\n   */\n\tpublic static final WeightedTerm[] getTerms(Query query, boolean prohibited, String fieldName) \n\t{\n\t\tHashSet<WeightedTerm> terms=new HashSet<WeightedTerm>();\n\t\tgetTerms(query,terms,prohibited,fieldName);\n\t\treturn terms.toArray(new WeightedTerm[0]);\n\t}\n\n","sourceOld":"\t/**\n\t * Extracts all terms texts of a given Query into an array of WeightedTerms\n\t *\n\t * @param query      Query to extract term texts from\n\t * @param prohibited <code>true</code> to extract \"prohibited\" terms, too\n\t * @param fieldName  The fieldName used to filter query terms\n   * @return an array of the terms used in a query, plus their weights.\n   */\n\tpublic static final WeightedTerm[] getTerms(Query query, boolean prohibited, String fieldName) \n\t{\n\t\tHashSet<WeightedTerm> terms=new HashSet<WeightedTerm>();\n\t\tgetTerms(query,terms,prohibited,fieldName);\n\t\treturn terms.toArray(new WeightedTerm[0]);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4093b270ba337f9c25a4c0e6cb2ae2c07f697376","date":1347897716,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,boolean,String).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,boolean,String).mjava","sourceNew":"  /**\n   * Extracts all terms texts of a given Query into an array of WeightedTerms\n   *\n   * @param query      Query to extract term texts from\n   * @param prohibited <code>true</code> to extract \"prohibited\" terms, too\n   * @param fieldName  The fieldName used to filter query terms\n   * @return an array of the terms used in a query, plus their weights.\n   */\n  public static final WeightedTerm[] getTerms(Query query, boolean prohibited, String fieldName)\n  {\n    HashSet<WeightedTerm> terms=new HashSet<WeightedTerm>();\n    getTerms(query,terms,prohibited,fieldName);\n    return terms.toArray(new WeightedTerm[0]);\n  }\n\n","sourceOld":"\t/**\n\t * Extracts all terms texts of a given Query into an array of WeightedTerms\n\t *\n\t * @param query      Query to extract term texts from\n\t * @param prohibited <code>true</code> to extract \"prohibited\" terms, too\n\t * @param fieldName  The fieldName used to filter query terms\n   * @return an array of the terms used in a query, plus their weights.\n   */\n\tpublic static final WeightedTerm[] getTerms(Query query, boolean prohibited, String fieldName) \n\t{\n\t\tHashSet<WeightedTerm> terms=new HashSet<WeightedTerm>();\n\t\tgetTerms(query,terms,prohibited,fieldName);\n\t\treturn terms.toArray(new WeightedTerm[0]);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,boolean,String).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,boolean,String).mjava","sourceNew":"  /**\n   * Extracts all terms texts of a given Query into an array of WeightedTerms\n   *\n   * @param query      Query to extract term texts from\n   * @param prohibited <code>true</code> to extract \"prohibited\" terms, too\n   * @param fieldName  The fieldName used to filter query terms\n   * @return an array of the terms used in a query, plus their weights.\n   */\n  public static final WeightedTerm[] getTerms(Query query, boolean prohibited, String fieldName)\n  {\n    HashSet<WeightedTerm> terms=new HashSet<>();\n    getTerms(query,terms,prohibited,fieldName);\n    return terms.toArray(new WeightedTerm[0]);\n  }\n\n","sourceOld":"  /**\n   * Extracts all terms texts of a given Query into an array of WeightedTerms\n   *\n   * @param query      Query to extract term texts from\n   * @param prohibited <code>true</code> to extract \"prohibited\" terms, too\n   * @param fieldName  The fieldName used to filter query terms\n   * @return an array of the terms used in a query, plus their weights.\n   */\n  public static final WeightedTerm[] getTerms(Query query, boolean prohibited, String fieldName)\n  {\n    HashSet<WeightedTerm> terms=new HashSet<WeightedTerm>();\n    getTerms(query,terms,prohibited,fieldName);\n    return terms.toArray(new WeightedTerm[0]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,boolean,String).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,boolean,String).mjava","sourceNew":"  /**\n   * Extracts all terms texts of a given Query into an array of WeightedTerms\n   *\n   * @param query      Query to extract term texts from\n   * @param prohibited <code>true</code> to extract \"prohibited\" terms, too\n   * @param fieldName  The fieldName used to filter query terms\n   * @return an array of the terms used in a query, plus their weights.\n   */\n  public static final WeightedTerm[] getTerms(Query query, boolean prohibited, String fieldName)\n  {\n    HashSet<WeightedTerm> terms=new HashSet<>();\n    getTerms(query, 1f, terms,prohibited,fieldName);\n    return terms.toArray(new WeightedTerm[0]);\n  }\n\n","sourceOld":"  /**\n   * Extracts all terms texts of a given Query into an array of WeightedTerms\n   *\n   * @param query      Query to extract term texts from\n   * @param prohibited <code>true</code> to extract \"prohibited\" terms, too\n   * @param fieldName  The fieldName used to filter query terms\n   * @return an array of the terms used in a query, plus their weights.\n   */\n  public static final WeightedTerm[] getTerms(Query query, boolean prohibited, String fieldName)\n  {\n    HashSet<WeightedTerm> terms=new HashSet<>();\n    getTerms(query,terms,prohibited,fieldName);\n    return terms.toArray(new WeightedTerm[0]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7","date":1552575873,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,boolean,String).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,boolean,String).mjava","sourceNew":"  /**\n   * Extracts all terms texts of a given Query into an array of WeightedTerms\n   *\n   * @param query      Query to extract term texts from\n   * @param prohibited <code>true</code> to extract \"prohibited\" terms, too\n   * @param fieldName  The fieldName used to filter query terms\n   * @return an array of the terms used in a query, plus their weights.\n   */\n  public static WeightedTerm[] getTerms(Query query, boolean prohibited, String fieldName) {\n    HashSet<WeightedTerm> terms = new HashSet<>();\n    Predicate<String> fieldSelector = fieldName == null ? f -> true : fieldName::equals;\n    query.visit(new BoostedTermExtractor(1, terms, prohibited, fieldSelector));\n    return terms.toArray(new WeightedTerm[0]);\n  }\n\n","sourceOld":"  /**\n   * Extracts all terms texts of a given Query into an array of WeightedTerms\n   *\n   * @param query      Query to extract term texts from\n   * @param prohibited <code>true</code> to extract \"prohibited\" terms, too\n   * @param fieldName  The fieldName used to filter query terms\n   * @return an array of the terms used in a query, plus their weights.\n   */\n  public static final WeightedTerm[] getTerms(Query query, boolean prohibited, String fieldName)\n  {\n    HashSet<WeightedTerm> terms=new HashSet<>();\n    getTerms(query, 1f, terms,prohibited,fieldName);\n    return terms.toArray(new WeightedTerm[0]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7"],"5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}