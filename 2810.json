{"path":"solr/core/src/java/org/apache/solr/security/RuleBasedAuthorizationPluginBase#predefinedPermissionAppliesToRequest(Permission,AuthorizationContext).mjava","commits":[{"id":"8076096f334b0665d0a69a63ee98ac09baad402b","date":1589405373,"type":1,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/RuleBasedAuthorizationPluginBase#predefinedPermissionAppliesToRequest(Permission,AuthorizationContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/RuleBasedAuthorizationPlugin#predefinedPermissionAppliesToRequest(Permission,AuthorizationContext).mjava","sourceNew":"  private boolean predefinedPermissionAppliesToRequest(Permission predefinedPermission, AuthorizationContext context) {\n    log.trace(\"Permission [{}] is a predefined perm\", predefinedPermission);\n    if (predefinedPermission.wellknownName == PermissionNameProvider.Name.ALL) {\n      log.trace(\"'ALL' perm applies to all requests; perm applies.\");\n      return true; //'ALL' applies to everything!\n    } else if (! (context.getHandler() instanceof PermissionNameProvider)) {\n      if (log.isTraceEnabled()) {\n        log.trace(\"Request handler [{}] is not a PermissionNameProvider, perm doesnt apply\", context.getHandler());\n      }\n      return false; // We're not 'ALL', and the handler isn't associated with any other predefined permissions\n    } else {\n      PermissionNameProvider handler = (PermissionNameProvider) context.getHandler();\n      PermissionNameProvider.Name permissionName = handler.getPermissionName(context);\n\n      boolean applies = permissionName != null && predefinedPermission.name.equals(permissionName.name);\n      log.trace(\"Request handler [{}] is associated with predefined perm [{}]? {}\",\n          handler, predefinedPermission.name, applies);\n      return applies;\n    }\n  }\n\n","sourceOld":"  private boolean predefinedPermissionAppliesToRequest(Permission predefinedPermission, AuthorizationContext context) {\n    log.trace(\"Permission [{}] is a predefined perm\", predefinedPermission);\n    if (predefinedPermission.wellknownName == PermissionNameProvider.Name.ALL) {\n      log.trace(\"'ALL' perm applies to all requests; perm applies.\");\n      return true; //'ALL' applies to everything!\n    } else if (! (context.getHandler() instanceof PermissionNameProvider)) {\n      if (log.isTraceEnabled()) {\n        log.trace(\"Request handler [{}] is not a PermissionNameProvider, perm doesnt apply\", context.getHandler());\n      }\n      return false; // We're not 'ALL', and the handler isn't associated with any other predefined permissions\n    } else {\n      PermissionNameProvider handler = (PermissionNameProvider) context.getHandler();\n      PermissionNameProvider.Name permissionName = handler.getPermissionName(context);\n\n      boolean applies = permissionName != null && predefinedPermission.name.equals(permissionName.name);\n      log.trace(\"Request handler [{}] is associated with predefined perm [{}]? {}\",\n          handler, predefinedPermission.name, applies);\n      return applies;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8076096f334b0665d0a69a63ee98ac09baad402b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8076096f334b0665d0a69a63ee98ac09baad402b"]},"commit2Childs":{"8076096f334b0665d0a69a63ee98ac09baad402b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8076096f334b0665d0a69a63ee98ac09baad402b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}