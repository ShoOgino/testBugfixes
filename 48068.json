{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/VariableResolverImpl#resolve(String).mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/VariableResolverImpl#resolve(String).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/VariableResolverImpl#resolve(String).mjava","sourceNew":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public Object resolve(String name) {\n    if (name == null)\n      return container;\n    if (\"\".equals(name))\n      return null;\n    String[] parts = DOT_SPLIT.split(name, 0);\n    CURRENT_VARIABLE_RESOLVER.set(this);\n    try {\n      Map<String, Object> namespace = container;\n      for (int i = 0; i < parts.length; i++) {\n        String thePart = parts[i];\n        if (i == parts.length - 1) {\n          Object val = namespace.get(thePart);\n          return val == null ? getDefault(name): val ;\n        }\n        Object temp = namespace.get(thePart);\n        if (temp == null) {\n          Object val = namespace.get(mergeAll(parts, i));\n          return val == null ? getDefault(name): val ;\n        } else {\n          if (temp instanceof Map) {\n            namespace = (Map) temp;\n          } else {\n            return getDefault(name);\n          }\n        }\n      }\n    } finally {\n      CURRENT_VARIABLE_RESOLVER.remove();\n    }\n    return getDefault(name);\n  }\n\n","sourceOld":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public Object resolve(String name) {\n    if (name == null)\n      return container;\n    if (\"\".equals(name))\n      return null;\n    String[] parts = DOT_SPLIT.split(name, 0);\n    CURRENT_VARIABLE_RESOLVER.set(this);\n    try {\n      Map<String, Object> namespace = container;\n      for (int i = 0; i < parts.length; i++) {\n        String thePart = parts[i];\n        if (i == parts.length - 1) {\n          Object val = namespace.get(thePart);\n          return val == null ? getDefault(name): val ;\n        }\n        Object temp = namespace.get(thePart);\n        if (temp == null) {\n          Object val = namespace.get(mergeAll(parts, i));\n          return val == null ? getDefault(name): val ;\n        } else {\n          if (temp instanceof Map) {\n            namespace = (Map) temp;\n          } else {\n            return getDefault(name);\n          }\n        }\n      }\n    } finally {\n      CURRENT_VARIABLE_RESOLVER.remove();\n    }\n    return getDefault(name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/VariableResolverImpl#resolve(String).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/VariableResolverImpl#resolve(String).mjava","sourceNew":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public Object resolve(String name) {\n    if (name == null)\n      return container;\n    if (\"\".equals(name))\n      return null;\n    String[] parts = DOT_SPLIT.split(name, 0);\n    CURRENT_VARIABLE_RESOLVER.set(this);\n    try {\n      Map<String, Object> namespace = container;\n      for (int i = 0; i < parts.length; i++) {\n        String thePart = parts[i];\n        if (i == parts.length - 1) {\n          Object val = namespace.get(thePart);\n          return val == null ? getDefault(name): val ;\n        }\n        Object temp = namespace.get(thePart);\n        if (temp == null) {\n          Object val = namespace.get(mergeAll(parts, i));\n          return val == null ? getDefault(name): val ;\n        } else {\n          if (temp instanceof Map) {\n            namespace = (Map) temp;\n          } else {\n            return getDefault(name);\n          }\n        }\n      }\n    } finally {\n      CURRENT_VARIABLE_RESOLVER.remove();\n    }\n    return getDefault(name);\n  }\n\n","sourceOld":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public Object resolve(String name) {\n    if (name == null)\n      return container;\n    if (\"\".equals(name))\n      return null;\n    String[] parts = DOT_SPLIT.split(name, 0);\n    CURRENT_VARIABLE_RESOLVER.set(this);\n    try {\n      Map<String, Object> namespace = container;\n      for (int i = 0; i < parts.length; i++) {\n        String thePart = parts[i];\n        if (i == parts.length - 1) {\n          Object val = namespace.get(thePart);\n          return val == null ? getDefault(name): val ;\n        }\n        Object temp = namespace.get(thePart);\n        if (temp == null) {\n          Object val = namespace.get(mergeAll(parts, i));\n          return val == null ? getDefault(name): val ;\n        } else {\n          if (temp instanceof Map) {\n            namespace = (Map) temp;\n          } else {\n            return getDefault(name);\n          }\n        }\n      }\n    } finally {\n      CURRENT_VARIABLE_RESOLVER.remove();\n    }\n    return getDefault(name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c7b0ae5716b6c2044195a818e9ae58205175659","date":1353342230,"type":4,"author":"James Dyer","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/VariableResolverImpl#resolve(String).mjava","sourceNew":null,"sourceOld":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public Object resolve(String name) {\n    if (name == null)\n      return container;\n    if (\"\".equals(name))\n      return null;\n    String[] parts = DOT_SPLIT.split(name, 0);\n    CURRENT_VARIABLE_RESOLVER.set(this);\n    try {\n      Map<String, Object> namespace = container;\n      for (int i = 0; i < parts.length; i++) {\n        String thePart = parts[i];\n        if (i == parts.length - 1) {\n          Object val = namespace.get(thePart);\n          return val == null ? getDefault(name): val ;\n        }\n        Object temp = namespace.get(thePart);\n        if (temp == null) {\n          Object val = namespace.get(mergeAll(parts, i));\n          return val == null ? getDefault(name): val ;\n        } else {\n          if (temp instanceof Map) {\n            namespace = (Map) temp;\n          } else {\n            return getDefault(name);\n          }\n        }\n      }\n    } finally {\n      CURRENT_VARIABLE_RESOLVER.remove();\n    }\n    return getDefault(name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/VariableResolverImpl#resolve(String).mjava","sourceNew":null,"sourceOld":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public Object resolve(String name) {\n    if (name == null)\n      return container;\n    if (\"\".equals(name))\n      return null;\n    String[] parts = DOT_SPLIT.split(name, 0);\n    CURRENT_VARIABLE_RESOLVER.set(this);\n    try {\n      Map<String, Object> namespace = container;\n      for (int i = 0; i < parts.length; i++) {\n        String thePart = parts[i];\n        if (i == parts.length - 1) {\n          Object val = namespace.get(thePart);\n          return val == null ? getDefault(name): val ;\n        }\n        Object temp = namespace.get(thePart);\n        if (temp == null) {\n          Object val = namespace.get(mergeAll(parts, i));\n          return val == null ? getDefault(name): val ;\n        } else {\n          if (temp instanceof Map) {\n            namespace = (Map) temp;\n          } else {\n            return getDefault(name);\n          }\n        }\n      }\n    } finally {\n      CURRENT_VARIABLE_RESOLVER.remove();\n    }\n    return getDefault(name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7c7b0ae5716b6c2044195a818e9ae58205175659":["c26f00b574427b55127e869b935845554afde1fa"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["c26f00b574427b55127e869b935845554afde1fa","7c7b0ae5716b6c2044195a818e9ae58205175659"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7c7b0ae5716b6c2044195a818e9ae58205175659"]},"commit2Childs":{"7c7b0ae5716b6c2044195a818e9ae58205175659":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["7c7b0ae5716b6c2044195a818e9ae58205175659","407687e67faf6e1f02a211ca078d8e3eed631027"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}