{"path":"contrib/misc/src/test/org/apache/lucene/index/TestIndexSplitter#test().mjava","commits":[{"id":"eaf0e0736294477314c7bf44dd467dcb3261a6c2","date":1255006219,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/index/TestIndexSplitter#test().mjava","pathOld":"/dev/null","sourceNew":"  public void test() throws Exception {\n    String tmpDir = System.getProperty(\"java.io.tmpdir\");\n    File dir = new File(tmpDir, \"testfilesplitter\");\n    _TestUtil.rmDir(dir);\n    dir.mkdirs();\n    File destDir = new File(tmpDir, \"testfilesplitterdest\");\n    _TestUtil.rmDir(destDir);\n    destDir.mkdirs();\n    FSDirectory fsDir = FSDirectory.open(dir);\n    IndexWriter iw = new IndexWriter(fsDir, new WhitespaceAnalyzer(), true, MaxFieldLength.UNLIMITED);\n    for (int x=0; x < 100; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    for (int x=100; x < 150; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index2\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    for (int x=150; x < 200; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index3\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    assertEquals(3, iw.getReader().getSequentialSubReaders().length);\n    iw.close();\n    // we should have 2 segments now\n    IndexSplitter is = new IndexSplitter(dir);\n    String splitSegName = is.infos.info(1).name;\n    is.split(destDir, new String[] {splitSegName});\n    IndexReader r = IndexReader.open(FSDirectory.open(destDir), true);\n    assertEquals(50, r.maxDoc());\n    \n    // now test cmdline\n    File destDir2 = new File(tmpDir, \"testfilesplitterdest2\");\n    _TestUtil.rmDir(destDir2);\n    destDir2.mkdirs();\n    IndexSplitter.main(new String[] {dir.getAbsolutePath(), destDir2.getAbsolutePath(), splitSegName});\n    assertEquals(3, destDir2.listFiles().length);\n    r = IndexReader.open(FSDirectory.open(destDir2), true);\n    assertEquals(50, r.maxDoc());\n    \n    // now remove the copied segment from src\n    IndexSplitter.main(new String[] {dir.getAbsolutePath(), \"-d\", splitSegName});\n    r = IndexReader.open(FSDirectory.open(dir), true);\n    assertEquals(2, r.getSequentialSubReaders().length);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6ced3401b9c4e7ed2be67711dbc83e48b81aa736","date":1265394056,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/index/TestIndexSplitter#test().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/index/TestIndexSplitter#test().mjava","sourceNew":"  public void test() throws Exception {\n    String tmpDir = System.getProperty(\"java.io.tmpdir\");\n    File dir = new File(tmpDir, \"testfilesplitter\");\n    _TestUtil.rmDir(dir);\n    dir.mkdirs();\n    File destDir = new File(tmpDir, \"testfilesplitterdest\");\n    _TestUtil.rmDir(destDir);\n    destDir.mkdirs();\n    FSDirectory fsDir = FSDirectory.open(dir);\n    IndexWriter iw = new IndexWriter(fsDir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, MaxFieldLength.UNLIMITED);\n    for (int x=0; x < 100; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    for (int x=100; x < 150; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index2\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    for (int x=150; x < 200; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index3\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    assertEquals(3, iw.getReader().getSequentialSubReaders().length);\n    iw.close();\n    // we should have 2 segments now\n    IndexSplitter is = new IndexSplitter(dir);\n    String splitSegName = is.infos.info(1).name;\n    is.split(destDir, new String[] {splitSegName});\n    IndexReader r = IndexReader.open(FSDirectory.open(destDir), true);\n    assertEquals(50, r.maxDoc());\n    \n    // now test cmdline\n    File destDir2 = new File(tmpDir, \"testfilesplitterdest2\");\n    _TestUtil.rmDir(destDir2);\n    destDir2.mkdirs();\n    IndexSplitter.main(new String[] {dir.getAbsolutePath(), destDir2.getAbsolutePath(), splitSegName});\n    assertEquals(3, destDir2.listFiles().length);\n    r = IndexReader.open(FSDirectory.open(destDir2), true);\n    assertEquals(50, r.maxDoc());\n    \n    // now remove the copied segment from src\n    IndexSplitter.main(new String[] {dir.getAbsolutePath(), \"-d\", splitSegName});\n    r = IndexReader.open(FSDirectory.open(dir), true);\n    assertEquals(2, r.getSequentialSubReaders().length);\n  }\n\n","sourceOld":"  public void test() throws Exception {\n    String tmpDir = System.getProperty(\"java.io.tmpdir\");\n    File dir = new File(tmpDir, \"testfilesplitter\");\n    _TestUtil.rmDir(dir);\n    dir.mkdirs();\n    File destDir = new File(tmpDir, \"testfilesplitterdest\");\n    _TestUtil.rmDir(destDir);\n    destDir.mkdirs();\n    FSDirectory fsDir = FSDirectory.open(dir);\n    IndexWriter iw = new IndexWriter(fsDir, new WhitespaceAnalyzer(), true, MaxFieldLength.UNLIMITED);\n    for (int x=0; x < 100; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    for (int x=100; x < 150; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index2\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    for (int x=150; x < 200; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index3\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    assertEquals(3, iw.getReader().getSequentialSubReaders().length);\n    iw.close();\n    // we should have 2 segments now\n    IndexSplitter is = new IndexSplitter(dir);\n    String splitSegName = is.infos.info(1).name;\n    is.split(destDir, new String[] {splitSegName});\n    IndexReader r = IndexReader.open(FSDirectory.open(destDir), true);\n    assertEquals(50, r.maxDoc());\n    \n    // now test cmdline\n    File destDir2 = new File(tmpDir, \"testfilesplitterdest2\");\n    _TestUtil.rmDir(destDir2);\n    destDir2.mkdirs();\n    IndexSplitter.main(new String[] {dir.getAbsolutePath(), destDir2.getAbsolutePath(), splitSegName});\n    assertEquals(3, destDir2.listFiles().length);\n    r = IndexReader.open(FSDirectory.open(destDir2), true);\n    assertEquals(50, r.maxDoc());\n    \n    // now remove the copied segment from src\n    IndexSplitter.main(new String[] {dir.getAbsolutePath(), \"-d\", splitSegName});\n    r = IndexReader.open(FSDirectory.open(dir), true);\n    assertEquals(2, r.getSequentialSubReaders().length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/index/TestIndexSplitter#test().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/index/TestIndexSplitter#test().mjava","sourceNew":"  public void test() throws Exception {\n    String tmpDir = System.getProperty(\"java.io.tmpdir\");\n    File dir = new File(tmpDir, \"testfilesplitter\");\n    _TestUtil.rmDir(dir);\n    dir.mkdirs();\n    File destDir = new File(tmpDir, \"testfilesplitterdest\");\n    _TestUtil.rmDir(destDir);\n    destDir.mkdirs();\n    FSDirectory fsDir = FSDirectory.open(dir);\n    IndexWriter iw = new IndexWriter(fsDir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, MaxFieldLength.UNLIMITED);\n    for (int x=0; x < 100; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    for (int x=100; x < 150; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index2\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    for (int x=150; x < 200; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index3\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    assertEquals(3, iw.getReader().getSequentialSubReaders().length);\n    iw.close();\n    // we should have 2 segments now\n    IndexSplitter is = new IndexSplitter(dir);\n    String splitSegName = is.infos.info(1).name;\n    is.split(destDir, new String[] {splitSegName});\n    IndexReader r = IndexReader.open(FSDirectory.open(destDir), true);\n    assertEquals(50, r.maxDoc());\n    \n    // now test cmdline\n    File destDir2 = new File(tmpDir, \"testfilesplitterdest2\");\n    _TestUtil.rmDir(destDir2);\n    destDir2.mkdirs();\n    IndexSplitter.main(new String[] {dir.getAbsolutePath(), destDir2.getAbsolutePath(), splitSegName});\n    assertEquals(3, destDir2.listFiles().length);\n    r = IndexReader.open(FSDirectory.open(destDir2), true);\n    assertEquals(50, r.maxDoc());\n    \n    // now remove the copied segment from src\n    IndexSplitter.main(new String[] {dir.getAbsolutePath(), \"-d\", splitSegName});\n    r = IndexReader.open(FSDirectory.open(dir), true);\n    assertEquals(2, r.getSequentialSubReaders().length);\n  }\n\n","sourceOld":"  public void test() throws Exception {\n    String tmpDir = System.getProperty(\"java.io.tmpdir\");\n    File dir = new File(tmpDir, \"testfilesplitter\");\n    _TestUtil.rmDir(dir);\n    dir.mkdirs();\n    File destDir = new File(tmpDir, \"testfilesplitterdest\");\n    _TestUtil.rmDir(destDir);\n    destDir.mkdirs();\n    FSDirectory fsDir = FSDirectory.open(dir);\n    IndexWriter iw = new IndexWriter(fsDir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, MaxFieldLength.UNLIMITED);\n    for (int x=0; x < 100; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    for (int x=100; x < 150; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index2\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    for (int x=150; x < 200; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index3\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    assertEquals(3, iw.getReader().getSequentialSubReaders().length);\n    iw.close();\n    // we should have 2 segments now\n    IndexSplitter is = new IndexSplitter(dir);\n    String splitSegName = is.infos.info(1).name;\n    is.split(destDir, new String[] {splitSegName});\n    IndexReader r = IndexReader.open(FSDirectory.open(destDir), true);\n    assertEquals(50, r.maxDoc());\n    \n    // now test cmdline\n    File destDir2 = new File(tmpDir, \"testfilesplitterdest2\");\n    _TestUtil.rmDir(destDir2);\n    destDir2.mkdirs();\n    IndexSplitter.main(new String[] {dir.getAbsolutePath(), destDir2.getAbsolutePath(), splitSegName});\n    assertEquals(3, destDir2.listFiles().length);\n    r = IndexReader.open(FSDirectory.open(destDir2), true);\n    assertEquals(50, r.maxDoc());\n    \n    // now remove the copied segment from src\n    IndexSplitter.main(new String[] {dir.getAbsolutePath(), \"-d\", splitSegName});\n    r = IndexReader.open(FSDirectory.open(dir), true);\n    assertEquals(2, r.getSequentialSubReaders().length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/index/TestIndexSplitter#test().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/index/TestIndexSplitter#test().mjava","sourceNew":"  public void test() throws Exception {\n    String tmpDir = System.getProperty(\"java.io.tmpdir\");\n    File dir = new File(tmpDir, \"testfilesplitter\");\n    _TestUtil.rmDir(dir);\n    dir.mkdirs();\n    File destDir = new File(tmpDir, \"testfilesplitterdest\");\n    _TestUtil.rmDir(destDir);\n    destDir.mkdirs();\n    FSDirectory fsDir = FSDirectory.open(dir);\n    IndexWriter iw = new IndexWriter(fsDir, new IndexWriterConfig(TEST_VERSION_CURRENT).setOpenMode(OpenMode.CREATE));\n    for (int x=0; x < 100; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    for (int x=100; x < 150; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index2\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    for (int x=150; x < 200; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index3\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    assertEquals(3, iw.getReader().getSequentialSubReaders().length);\n    iw.close();\n    // we should have 2 segments now\n    IndexSplitter is = new IndexSplitter(dir);\n    String splitSegName = is.infos.info(1).name;\n    is.split(destDir, new String[] {splitSegName});\n    IndexReader r = IndexReader.open(FSDirectory.open(destDir), true);\n    assertEquals(50, r.maxDoc());\n    \n    // now test cmdline\n    File destDir2 = new File(tmpDir, \"testfilesplitterdest2\");\n    _TestUtil.rmDir(destDir2);\n    destDir2.mkdirs();\n    IndexSplitter.main(new String[] {dir.getAbsolutePath(), destDir2.getAbsolutePath(), splitSegName});\n    assertEquals(3, destDir2.listFiles().length);\n    r = IndexReader.open(FSDirectory.open(destDir2), true);\n    assertEquals(50, r.maxDoc());\n    \n    // now remove the copied segment from src\n    IndexSplitter.main(new String[] {dir.getAbsolutePath(), \"-d\", splitSegName});\n    r = IndexReader.open(FSDirectory.open(dir), true);\n    assertEquals(2, r.getSequentialSubReaders().length);\n  }\n\n","sourceOld":"  public void test() throws Exception {\n    String tmpDir = System.getProperty(\"java.io.tmpdir\");\n    File dir = new File(tmpDir, \"testfilesplitter\");\n    _TestUtil.rmDir(dir);\n    dir.mkdirs();\n    File destDir = new File(tmpDir, \"testfilesplitterdest\");\n    _TestUtil.rmDir(destDir);\n    destDir.mkdirs();\n    FSDirectory fsDir = FSDirectory.open(dir);\n    IndexWriter iw = new IndexWriter(fsDir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, MaxFieldLength.UNLIMITED);\n    for (int x=0; x < 100; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    for (int x=100; x < 150; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index2\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    for (int x=150; x < 200; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index3\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    assertEquals(3, iw.getReader().getSequentialSubReaders().length);\n    iw.close();\n    // we should have 2 segments now\n    IndexSplitter is = new IndexSplitter(dir);\n    String splitSegName = is.infos.info(1).name;\n    is.split(destDir, new String[] {splitSegName});\n    IndexReader r = IndexReader.open(FSDirectory.open(destDir), true);\n    assertEquals(50, r.maxDoc());\n    \n    // now test cmdline\n    File destDir2 = new File(tmpDir, \"testfilesplitterdest2\");\n    _TestUtil.rmDir(destDir2);\n    destDir2.mkdirs();\n    IndexSplitter.main(new String[] {dir.getAbsolutePath(), destDir2.getAbsolutePath(), splitSegName});\n    assertEquals(3, destDir2.listFiles().length);\n    r = IndexReader.open(FSDirectory.open(destDir2), true);\n    assertEquals(50, r.maxDoc());\n    \n    // now remove the copied segment from src\n    IndexSplitter.main(new String[] {dir.getAbsolutePath(), \"-d\", splitSegName});\n    r = IndexReader.open(FSDirectory.open(dir), true);\n    assertEquals(2, r.getSequentialSubReaders().length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/index/TestIndexSplitter#test().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/index/TestIndexSplitter#test().mjava","sourceNew":"  public void test() throws Exception {\n    String tmpDir = System.getProperty(\"java.io.tmpdir\");\n    File dir = new File(tmpDir, \"testfilesplitter\");\n    _TestUtil.rmDir(dir);\n    dir.mkdirs();\n    File destDir = new File(tmpDir, \"testfilesplitterdest\");\n    _TestUtil.rmDir(destDir);\n    destDir.mkdirs();\n    FSDirectory fsDir = FSDirectory.open(dir);\n    IndexWriter iw = new IndexWriter(fsDir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, MaxFieldLength.UNLIMITED);\n    for (int x=0; x < 100; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    for (int x=100; x < 150; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index2\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    for (int x=150; x < 200; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index3\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    assertEquals(3, iw.getReader().getSequentialSubReaders().length);\n    iw.close();\n    // we should have 2 segments now\n    IndexSplitter is = new IndexSplitter(dir);\n    String splitSegName = is.infos.info(1).name;\n    is.split(destDir, new String[] {splitSegName});\n    IndexReader r = IndexReader.open(FSDirectory.open(destDir), true);\n    assertEquals(50, r.maxDoc());\n    \n    // now test cmdline\n    File destDir2 = new File(tmpDir, \"testfilesplitterdest2\");\n    _TestUtil.rmDir(destDir2);\n    destDir2.mkdirs();\n    IndexSplitter.main(new String[] {dir.getAbsolutePath(), destDir2.getAbsolutePath(), splitSegName});\n    assertEquals(3, destDir2.listFiles().length);\n    r = IndexReader.open(FSDirectory.open(destDir2), true);\n    assertEquals(50, r.maxDoc());\n    \n    // now remove the copied segment from src\n    IndexSplitter.main(new String[] {dir.getAbsolutePath(), \"-d\", splitSegName});\n    r = IndexReader.open(FSDirectory.open(dir), true);\n    assertEquals(2, r.getSequentialSubReaders().length);\n  }\n\n","sourceOld":"  public void test() throws Exception {\n    String tmpDir = System.getProperty(\"java.io.tmpdir\");\n    File dir = new File(tmpDir, \"testfilesplitter\");\n    _TestUtil.rmDir(dir);\n    dir.mkdirs();\n    File destDir = new File(tmpDir, \"testfilesplitterdest\");\n    _TestUtil.rmDir(destDir);\n    destDir.mkdirs();\n    FSDirectory fsDir = FSDirectory.open(dir);\n    IndexWriter iw = new IndexWriter(fsDir, new IndexWriterConfig(TEST_VERSION_CURRENT).setOpenMode(OpenMode.CREATE));\n    for (int x=0; x < 100; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    for (int x=100; x < 150; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index2\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    for (int x=150; x < 200; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index3\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    assertEquals(3, iw.getReader().getSequentialSubReaders().length);\n    iw.close();\n    // we should have 2 segments now\n    IndexSplitter is = new IndexSplitter(dir);\n    String splitSegName = is.infos.info(1).name;\n    is.split(destDir, new String[] {splitSegName});\n    IndexReader r = IndexReader.open(FSDirectory.open(destDir), true);\n    assertEquals(50, r.maxDoc());\n    \n    // now test cmdline\n    File destDir2 = new File(tmpDir, \"testfilesplitterdest2\");\n    _TestUtil.rmDir(destDir2);\n    destDir2.mkdirs();\n    IndexSplitter.main(new String[] {dir.getAbsolutePath(), destDir2.getAbsolutePath(), splitSegName});\n    assertEquals(3, destDir2.listFiles().length);\n    r = IndexReader.open(FSDirectory.open(destDir2), true);\n    assertEquals(50, r.maxDoc());\n    \n    // now remove the copied segment from src\n    IndexSplitter.main(new String[] {dir.getAbsolutePath(), \"-d\", splitSegName});\n    r = IndexReader.open(FSDirectory.open(dir), true);\n    assertEquals(2, r.getSequentialSubReaders().length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/index/TestIndexSplitter#test().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/index/TestIndexSplitter#test().mjava","sourceNew":"  public void test() throws Exception {\n    String tmpDir = System.getProperty(\"java.io.tmpdir\");\n    File dir = new File(tmpDir, \"testfilesplitter\");\n    _TestUtil.rmDir(dir);\n    dir.mkdirs();\n    File destDir = new File(tmpDir, \"testfilesplitterdest\");\n    _TestUtil.rmDir(destDir);\n    destDir.mkdirs();\n    FSDirectory fsDir = FSDirectory.open(dir);\n    IndexWriter iw = new IndexWriter(fsDir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    for (int x=0; x < 100; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    for (int x=100; x < 150; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index2\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    for (int x=150; x < 200; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index3\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    assertEquals(3, iw.getReader().getSequentialSubReaders().length);\n    iw.close();\n    // we should have 2 segments now\n    IndexSplitter is = new IndexSplitter(dir);\n    String splitSegName = is.infos.info(1).name;\n    is.split(destDir, new String[] {splitSegName});\n    IndexReader r = IndexReader.open(FSDirectory.open(destDir), true);\n    assertEquals(50, r.maxDoc());\n    \n    // now test cmdline\n    File destDir2 = new File(tmpDir, \"testfilesplitterdest2\");\n    _TestUtil.rmDir(destDir2);\n    destDir2.mkdirs();\n    IndexSplitter.main(new String[] {dir.getAbsolutePath(), destDir2.getAbsolutePath(), splitSegName});\n    assertEquals(3, destDir2.listFiles().length);\n    r = IndexReader.open(FSDirectory.open(destDir2), true);\n    assertEquals(50, r.maxDoc());\n    \n    // now remove the copied segment from src\n    IndexSplitter.main(new String[] {dir.getAbsolutePath(), \"-d\", splitSegName});\n    r = IndexReader.open(FSDirectory.open(dir), true);\n    assertEquals(2, r.getSequentialSubReaders().length);\n  }\n\n","sourceOld":"  public void test() throws Exception {\n    String tmpDir = System.getProperty(\"java.io.tmpdir\");\n    File dir = new File(tmpDir, \"testfilesplitter\");\n    _TestUtil.rmDir(dir);\n    dir.mkdirs();\n    File destDir = new File(tmpDir, \"testfilesplitterdest\");\n    _TestUtil.rmDir(destDir);\n    destDir.mkdirs();\n    FSDirectory fsDir = FSDirectory.open(dir);\n    IndexWriter iw = new IndexWriter(fsDir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, MaxFieldLength.UNLIMITED);\n    for (int x=0; x < 100; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    for (int x=100; x < 150; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index2\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    for (int x=150; x < 200; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index3\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    assertEquals(3, iw.getReader().getSequentialSubReaders().length);\n    iw.close();\n    // we should have 2 segments now\n    IndexSplitter is = new IndexSplitter(dir);\n    String splitSegName = is.infos.info(1).name;\n    is.split(destDir, new String[] {splitSegName});\n    IndexReader r = IndexReader.open(FSDirectory.open(destDir), true);\n    assertEquals(50, r.maxDoc());\n    \n    // now test cmdline\n    File destDir2 = new File(tmpDir, \"testfilesplitterdest2\");\n    _TestUtil.rmDir(destDir2);\n    destDir2.mkdirs();\n    IndexSplitter.main(new String[] {dir.getAbsolutePath(), destDir2.getAbsolutePath(), splitSegName});\n    assertEquals(3, destDir2.listFiles().length);\n    r = IndexReader.open(FSDirectory.open(destDir2), true);\n    assertEquals(50, r.maxDoc());\n    \n    // now remove the copied segment from src\n    IndexSplitter.main(new String[] {dir.getAbsolutePath(), \"-d\", splitSegName});\n    r = IndexReader.open(FSDirectory.open(dir), true);\n    assertEquals(2, r.getSequentialSubReaders().length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d16275d75dfe0b780ed62df4c811d083187c71a","date":1268583591,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/index/TestIndexSplitter#test().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/index/TestIndexSplitter#test().mjava","sourceNew":"  public void test() throws Exception {\n    File dir = new File(TEMP_DIR, \"testfilesplitter\");\n    _TestUtil.rmDir(dir);\n    dir.mkdirs();\n    File destDir = new File(TEMP_DIR, \"testfilesplitterdest\");\n    _TestUtil.rmDir(destDir);\n    destDir.mkdirs();\n    FSDirectory fsDir = FSDirectory.open(dir);\n    IndexWriter iw = new IndexWriter(fsDir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    for (int x=0; x < 100; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    for (int x=100; x < 150; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index2\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    for (int x=150; x < 200; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index3\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    assertEquals(3, iw.getReader().getSequentialSubReaders().length);\n    iw.close();\n    // we should have 2 segments now\n    IndexSplitter is = new IndexSplitter(dir);\n    String splitSegName = is.infos.info(1).name;\n    is.split(destDir, new String[] {splitSegName});\n    IndexReader r = IndexReader.open(FSDirectory.open(destDir), true);\n    assertEquals(50, r.maxDoc());\n    \n    // now test cmdline\n    File destDir2 = new File(TEMP_DIR, \"testfilesplitterdest2\");\n    _TestUtil.rmDir(destDir2);\n    destDir2.mkdirs();\n    IndexSplitter.main(new String[] {dir.getAbsolutePath(), destDir2.getAbsolutePath(), splitSegName});\n    assertEquals(3, destDir2.listFiles().length);\n    r = IndexReader.open(FSDirectory.open(destDir2), true);\n    assertEquals(50, r.maxDoc());\n    \n    // now remove the copied segment from src\n    IndexSplitter.main(new String[] {dir.getAbsolutePath(), \"-d\", splitSegName});\n    r = IndexReader.open(FSDirectory.open(dir), true);\n    assertEquals(2, r.getSequentialSubReaders().length);\n  }\n\n","sourceOld":"  public void test() throws Exception {\n    String tmpDir = System.getProperty(\"java.io.tmpdir\");\n    File dir = new File(tmpDir, \"testfilesplitter\");\n    _TestUtil.rmDir(dir);\n    dir.mkdirs();\n    File destDir = new File(tmpDir, \"testfilesplitterdest\");\n    _TestUtil.rmDir(destDir);\n    destDir.mkdirs();\n    FSDirectory fsDir = FSDirectory.open(dir);\n    IndexWriter iw = new IndexWriter(fsDir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    for (int x=0; x < 100; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    for (int x=100; x < 150; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index2\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    for (int x=150; x < 200; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index3\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    assertEquals(3, iw.getReader().getSequentialSubReaders().length);\n    iw.close();\n    // we should have 2 segments now\n    IndexSplitter is = new IndexSplitter(dir);\n    String splitSegName = is.infos.info(1).name;\n    is.split(destDir, new String[] {splitSegName});\n    IndexReader r = IndexReader.open(FSDirectory.open(destDir), true);\n    assertEquals(50, r.maxDoc());\n    \n    // now test cmdline\n    File destDir2 = new File(tmpDir, \"testfilesplitterdest2\");\n    _TestUtil.rmDir(destDir2);\n    destDir2.mkdirs();\n    IndexSplitter.main(new String[] {dir.getAbsolutePath(), destDir2.getAbsolutePath(), splitSegName});\n    assertEquals(3, destDir2.listFiles().length);\n    r = IndexReader.open(FSDirectory.open(destDir2), true);\n    assertEquals(50, r.maxDoc());\n    \n    // now remove the copied segment from src\n    IndexSplitter.main(new String[] {dir.getAbsolutePath(), \"-d\", splitSegName});\n    r = IndexReader.open(FSDirectory.open(dir), true);\n    assertEquals(2, r.getSequentialSubReaders().length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestIndexSplitter#test().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/index/TestIndexSplitter#test().mjava","sourceNew":"  public void test() throws Exception {\n    File dir = new File(TEMP_DIR, \"testfilesplitter\");\n    _TestUtil.rmDir(dir);\n    dir.mkdirs();\n    File destDir = new File(TEMP_DIR, \"testfilesplitterdest\");\n    _TestUtil.rmDir(destDir);\n    destDir.mkdirs();\n    FSDirectory fsDir = FSDirectory.open(dir);\n    IndexWriter iw = new IndexWriter(fsDir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    for (int x=0; x < 100; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    for (int x=100; x < 150; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index2\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    for (int x=150; x < 200; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index3\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    assertEquals(3, iw.getReader().getSequentialSubReaders().length);\n    iw.close();\n    // we should have 2 segments now\n    IndexSplitter is = new IndexSplitter(dir);\n    String splitSegName = is.infos.info(1).name;\n    is.split(destDir, new String[] {splitSegName});\n    IndexReader r = IndexReader.open(FSDirectory.open(destDir), true);\n    assertEquals(50, r.maxDoc());\n    \n    // now test cmdline\n    File destDir2 = new File(TEMP_DIR, \"testfilesplitterdest2\");\n    _TestUtil.rmDir(destDir2);\n    destDir2.mkdirs();\n    IndexSplitter.main(new String[] {dir.getAbsolutePath(), destDir2.getAbsolutePath(), splitSegName});\n    assertEquals(3, destDir2.listFiles().length);\n    r = IndexReader.open(FSDirectory.open(destDir2), true);\n    assertEquals(50, r.maxDoc());\n    \n    // now remove the copied segment from src\n    IndexSplitter.main(new String[] {dir.getAbsolutePath(), \"-d\", splitSegName});\n    r = IndexReader.open(FSDirectory.open(dir), true);\n    assertEquals(2, r.getSequentialSubReaders().length);\n  }\n\n","sourceOld":"  public void test() throws Exception {\n    File dir = new File(TEMP_DIR, \"testfilesplitter\");\n    _TestUtil.rmDir(dir);\n    dir.mkdirs();\n    File destDir = new File(TEMP_DIR, \"testfilesplitterdest\");\n    _TestUtil.rmDir(destDir);\n    destDir.mkdirs();\n    FSDirectory fsDir = FSDirectory.open(dir);\n    IndexWriter iw = new IndexWriter(fsDir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    for (int x=0; x < 100; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    for (int x=100; x < 150; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index2\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    for (int x=150; x < 200; x++) {\n      Document doc = TestIndexWriterReader.createDocument(x, \"index3\", 5);\n      iw.addDocument(doc);\n    }\n    iw.commit();\n    assertEquals(3, iw.getReader().getSequentialSubReaders().length);\n    iw.close();\n    // we should have 2 segments now\n    IndexSplitter is = new IndexSplitter(dir);\n    String splitSegName = is.infos.info(1).name;\n    is.split(destDir, new String[] {splitSegName});\n    IndexReader r = IndexReader.open(FSDirectory.open(destDir), true);\n    assertEquals(50, r.maxDoc());\n    \n    // now test cmdline\n    File destDir2 = new File(TEMP_DIR, \"testfilesplitterdest2\");\n    _TestUtil.rmDir(destDir2);\n    destDir2.mkdirs();\n    IndexSplitter.main(new String[] {dir.getAbsolutePath(), destDir2.getAbsolutePath(), splitSegName});\n    assertEquals(3, destDir2.listFiles().length);\n    r = IndexReader.open(FSDirectory.open(destDir2), true);\n    assertEquals(50, r.maxDoc());\n    \n    // now remove the copied segment from src\n    IndexSplitter.main(new String[] {dir.getAbsolutePath(), \"-d\", splitSegName});\n    r = IndexReader.open(FSDirectory.open(dir), true);\n    assertEquals(2, r.getSequentialSubReaders().length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"1d16275d75dfe0b780ed62df4c811d083187c71a":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"6ced3401b9c4e7ed2be67711dbc83e48b81aa736":["eaf0e0736294477314c7bf44dd467dcb3261a6c2"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["6ced3401b9c4e7ed2be67711dbc83e48b81aa736"],"eaf0e0736294477314c7bf44dd467dcb3261a6c2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1d16275d75dfe0b780ed62df4c811d083187c71a"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["1d16275d75dfe0b780ed62df4c811d083187c71a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eaf0e0736294477314c7bf44dd467dcb3261a6c2"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"1d16275d75dfe0b780ed62df4c811d083187c71a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"6ced3401b9c4e7ed2be67711dbc83e48b81aa736":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"eaf0e0736294477314c7bf44dd467dcb3261a6c2":["6ced3401b9c4e7ed2be67711dbc83e48b81aa736"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}