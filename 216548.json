{"path":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#finish(int).mjava","commits":[{"id":"2e5d36d3b999ce76a1e80788e5d243f513c69d50","date":1359044508,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#finish(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedBytesDVWriter#finish(int).mjava","sourceNew":"  @Override\n  public void finish(int maxDoc) {\n    if (pendingIndex < maxDoc) {\n      addOneValue(EMPTY);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void finish(int maxDoc) {\n    if (pendingIndex < maxDoc) {\n      addOneValue(EMPTY);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d805367d8ca5fa9d4d9037076fd87698b9080f53","date":1359549977,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#finish(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#finish(int).mjava","sourceNew":"  @Override\n  public void finish(int maxDoc) {\n    // nocommit: WTF.. why is this not a while but an if?\n    if (pending.size() < maxDoc) {\n      addOneValue(EMPTY);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void finish(int maxDoc) {\n    if (pendingIndex < maxDoc) {\n      addOneValue(EMPTY);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"347468aed01d5da96b445857cdf4cf76ca891e27","date":1359590738,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#finish(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#finish(int).mjava","sourceNew":"  @Override\n  public void finish(int maxDoc) {\n    while(pending.size() < maxDoc) {\n      addOneValue(EMPTY);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void finish(int maxDoc) {\n    // nocommit: WTF.. why is this not a while but an if?\n    if (pending.size() < maxDoc) {\n      addOneValue(EMPTY);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#finish(int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void finish(int maxDoc) {\n    while(pending.size() < maxDoc) {\n      addOneValue(EMPTY);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9faa42f41b6adb98daf009cf99a4ee239189e469","date":1376648738,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#finish(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#finish(int).mjava","sourceNew":"  @Override\n  public void finish(int maxDoc) {\n    while(pending.size() < maxDoc) {\n      pending.add(EMPTY_ORD);\n    }\n    updateBytesUsed();\n  }\n\n","sourceOld":"  @Override\n  public void finish(int maxDoc) {\n    while(pending.size() < maxDoc) {\n      addOneValue(EMPTY);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","date":1377034255,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#finish(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#finish(int).mjava","sourceNew":"  @Override\n  public void finish(int maxDoc) {\n    while(pending.size() < maxDoc) {\n      pending.add(EMPTY_ORD);\n    }\n    updateBytesUsed();\n  }\n\n","sourceOld":"  @Override\n  public void finish(int maxDoc) {\n    while(pending.size() < maxDoc) {\n      addOneValue(EMPTY);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#finish(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#finish(int).mjava","sourceNew":"  @Override\n  public void finish(int maxDoc) {\n    while(pending.size() < maxDoc) {\n      pending.add(EMPTY_ORD);\n    }\n    updateBytesUsed();\n  }\n\n","sourceOld":"  @Override\n  public void finish(int maxDoc) {\n    while(pending.size() < maxDoc) {\n      addOneValue(EMPTY);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5844844466689b1121b12ccb467623f894eb269d","date":1475600453,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#finish(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#finish(int).mjava","sourceNew":"  @Override\n  public void finish(int maxDoc) {\n    updateBytesUsed();\n  }\n\n","sourceOld":"  @Override\n  public void finish(int maxDoc) {\n    while(pending.size() < maxDoc) {\n      pending.add(EMPTY_ORD);\n    }\n    updateBytesUsed();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#finish(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#finish(int).mjava","sourceNew":"  @Override\n  public void finish(int maxDoc) {\n    updateBytesUsed();\n  }\n\n","sourceOld":"  @Override\n  public void finish(int maxDoc) {\n    while(pending.size() < maxDoc) {\n      pending.add(EMPTY_ORD);\n    }\n    updateBytesUsed();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"773bf150032d3ef6c95997a154fb914b82875cb8","date":1590150786,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#finish(int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void finish(int maxDoc) {\n    updateBytesUsed();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"347468aed01d5da96b445857cdf4cf76ca891e27":["d805367d8ca5fa9d4d9037076fd87698b9080f53"],"d805367d8ca5fa9d4d9037076fd87698b9080f53":["2e5d36d3b999ce76a1e80788e5d243f513c69d50"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","347468aed01d5da96b445857cdf4cf76ca891e27"],"2e5d36d3b999ce76a1e80788e5d243f513c69d50":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9faa42f41b6adb98daf009cf99a4ee239189e469":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["d4d69c535930b5cce125cff868d40f6373dc27d4","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"773bf150032d3ef6c95997a154fb914b82875cb8":["5844844466689b1121b12ccb467623f894eb269d"],"5844844466689b1121b12ccb467623f894eb269d":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["d4d69c535930b5cce125cff868d40f6373dc27d4","9faa42f41b6adb98daf009cf99a4ee239189e469"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","5844844466689b1121b12ccb467623f894eb269d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["773bf150032d3ef6c95997a154fb914b82875cb8"]},"commit2Childs":{"347468aed01d5da96b445857cdf4cf76ca891e27":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"d805367d8ca5fa9d4d9037076fd87698b9080f53":["347468aed01d5da96b445857cdf4cf76ca891e27"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["9faa42f41b6adb98daf009cf99a4ee239189e469","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"2e5d36d3b999ce76a1e80788e5d243f513c69d50":["d805367d8ca5fa9d4d9037076fd87698b9080f53"],"9faa42f41b6adb98daf009cf99a4ee239189e469":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","2e5d36d3b999ce76a1e80788e5d243f513c69d50"],"773bf150032d3ef6c95997a154fb914b82875cb8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5844844466689b1121b12ccb467623f894eb269d":["773bf150032d3ef6c95997a154fb914b82875cb8","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","5844844466689b1121b12ccb467623f894eb269d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}