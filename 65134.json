{"path":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingWeight#scorer(LeafReaderContext,Bits).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingWeight#scorer(LeafReaderContext,Bits).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Scorer scorer(LeafReaderContext context, Bits acceptDocs) throws IOException {\n    // if the caller asks for in-order scoring or if the weight does not support\n    // out-of order scoring then collection will have to happen in-order.\n    final Scorer inScorer = in.scorer(context, acceptDocs);\n    return AssertingScorer.wrap(new Random(random.nextLong()), inScorer);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e166cc9c5f45f78a8dd02332b5ac100221063fd8","date":1421678965,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingWeight#scorer(LeafReaderContext,Bits).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingWeight#scorer(LeafReaderContext,Bits).mjava","sourceNew":"  @Override\n  public Scorer scorer(LeafReaderContext context, Bits acceptDocs) throws IOException {\n    final Scorer inScorer = in.scorer(context, acceptDocs);\n    assert inScorer == null || inScorer.docID() == -1;\n    return AssertingScorer.wrap(new Random(random.nextLong()), inScorer);\n  }\n\n","sourceOld":"  @Override\n  public Scorer scorer(LeafReaderContext context, Bits acceptDocs) throws IOException {\n    // if the caller asks for in-order scoring or if the weight does not support\n    // out-of order scoring then collection will have to happen in-order.\n    final Scorer inScorer = in.scorer(context, acceptDocs);\n    return AssertingScorer.wrap(new Random(random.nextLong()), inScorer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"781239fc84d36be12b84e4d3e2618f5f07a182e3","date":1423139668,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingWeight#scorer(LeafReaderContext,Bits,boolean).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingWeight#scorer(LeafReaderContext,Bits).mjava","sourceNew":"  @Override\n  public Scorer scorer(LeafReaderContext context, Bits acceptDocs, boolean needsScores) throws IOException {\n    final Scorer inScorer = in.scorer(context, acceptDocs, needsScores);\n    assert inScorer == null || inScorer.docID() == -1;\n    return AssertingScorer.wrap(new Random(random.nextLong()), inScorer);\n  }\n\n","sourceOld":"  @Override\n  public Scorer scorer(LeafReaderContext context, Bits acceptDocs) throws IOException {\n    final Scorer inScorer = in.scorer(context, acceptDocs);\n    assert inScorer == null || inScorer.docID() == -1;\n    return AssertingScorer.wrap(new Random(random.nextLong()), inScorer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb17639909a369c1e64866842e5c213440acc17e","date":1423238093,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingWeight#scorer(LeafReaderContext,Bits).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingWeight#scorer(LeafReaderContext,Bits,boolean).mjava","sourceNew":"  @Override\n  public Scorer scorer(LeafReaderContext context, Bits acceptDocs) throws IOException {\n    final Scorer inScorer = in.scorer(context, acceptDocs);\n    assert inScorer == null || inScorer.docID() == -1;\n    return AssertingScorer.wrap(new Random(random.nextLong()), inScorer);\n  }\n\n","sourceOld":"  @Override\n  public Scorer scorer(LeafReaderContext context, Bits acceptDocs, boolean needsScores) throws IOException {\n    final Scorer inScorer = in.scorer(context, acceptDocs, needsScores);\n    assert inScorer == null || inScorer.docID() == -1;\n    return AssertingScorer.wrap(new Random(random.nextLong()), inScorer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ab7a7b7d9840c6df78aaf2d36b9e8765da1069c","date":1433506692,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingWeight#scorer(LeafReaderContext,Bits).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingWeight#scorer(LeafReaderContext,Bits).mjava","sourceNew":"  @Override\n  public Scorer scorer(LeafReaderContext context, Bits acceptDocs) throws IOException {\n    final Scorer inScorer = in.scorer(context, acceptDocs);\n    assert inScorer == null || inScorer.docID() == -1;\n    return AssertingScorer.wrap(new Random(random.nextLong()), inScorer, needsScores);\n  }\n\n","sourceOld":"  @Override\n  public Scorer scorer(LeafReaderContext context, Bits acceptDocs) throws IOException {\n    final Scorer inScorer = in.scorer(context, acceptDocs);\n    assert inScorer == null || inScorer.docID() == -1;\n    return AssertingScorer.wrap(new Random(random.nextLong()), inScorer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingWeight#scorer(LeafReaderContext,Bits).mjava","sourceNew":"  @Override\n  public Scorer scorer(LeafReaderContext context) throws IOException {\n    final Scorer inScorer = in.scorer(context);\n    assert inScorer == null || inScorer.docID() == -1;\n    return AssertingScorer.wrap(new Random(random.nextLong()), inScorer, needsScores);\n  }\n\n","sourceOld":"  @Override\n  public Scorer scorer(LeafReaderContext context, Bits acceptDocs) throws IOException {\n    final Scorer inScorer = in.scorer(context, acceptDocs);\n    assert inScorer == null || inScorer.docID() == -1;\n    return AssertingScorer.wrap(new Random(random.nextLong()), inScorer, needsScores);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb17639909a369c1e64866842e5c213440acc17e":["781239fc84d36be12b84e4d3e2618f5f07a182e3"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["0ab7a7b7d9840c6df78aaf2d36b9e8765da1069c"],"e166cc9c5f45f78a8dd02332b5ac100221063fd8":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"781239fc84d36be12b84e4d3e2618f5f07a182e3":["e166cc9c5f45f78a8dd02332b5ac100221063fd8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0ab7a7b7d9840c6df78aaf2d36b9e8765da1069c":["fb17639909a369c1e64866842e5c213440acc17e"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f4464508ee83288c8c4585b533f9faaa93aa314"]},"commit2Childs":{"fb17639909a369c1e64866842e5c213440acc17e":["0ab7a7b7d9840c6df78aaf2d36b9e8765da1069c"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e166cc9c5f45f78a8dd02332b5ac100221063fd8":["781239fc84d36be12b84e4d3e2618f5f07a182e3"],"781239fc84d36be12b84e4d3e2618f5f07a182e3":["fb17639909a369c1e64866842e5c213440acc17e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"0ab7a7b7d9840c6df78aaf2d36b9e8765da1069c":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["e166cc9c5f45f78a8dd02332b5ac100221063fd8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}