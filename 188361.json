{"path":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/vector/PointVectorStrategy#makeQuery(SpatialArgs).mjava","commits":[{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/vector/PointVectorStrategy#makeQuery(SpatialArgs).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/PointVectorStrategy#makeQuery(SpatialArgs).mjava","sourceNew":"  @Override\n  public ConstantScoreQuery makeQuery(SpatialArgs args) {\n    if(! SpatialOperation.is( args.getOperation(),\n        SpatialOperation.Intersects,\n        SpatialOperation.IsWithin ))\n      throw new UnsupportedSpatialOperation(args.getOperation());\n    Shape shape = args.getShape();\n    if (shape instanceof Rectangle) {\n      Rectangle bbox = (Rectangle) shape;\n      return new ConstantScoreQuery(makeWithin(bbox));\n    } else if (shape instanceof Circle) {\n      Circle circle = (Circle)shape;\n      Rectangle bbox = circle.getBoundingBox();\n      Query approxQuery = makeWithin(bbox);\n      BooleanQuery.Builder bqBuilder = new BooleanQuery.Builder();\n      FunctionRangeQuery vsRangeQuery =\n          new FunctionRangeQuery(makeDistanceValueSource(circle.getCenter()), 0.0, circle.getRadius(), true, true);\n      bqBuilder.add(approxQuery, BooleanClause.Occur.FILTER);//should have lowest \"cost\" value; will drive iteration\n      bqBuilder.add(vsRangeQuery, BooleanClause.Occur.FILTER);\n      return new ConstantScoreQuery(bqBuilder.build());\n    } else {\n      throw new UnsupportedOperationException(\"Only Rectangles and Circles are currently supported, \" +\n          \"found [\" + shape.getClass() + \"]\");//TODO\n    }\n  }\n\n","sourceOld":"  @Override\n  public ConstantScoreQuery makeQuery(SpatialArgs args) {\n    if(! SpatialOperation.is( args.getOperation(),\n        SpatialOperation.Intersects,\n        SpatialOperation.IsWithin ))\n      throw new UnsupportedSpatialOperation(args.getOperation());\n    Shape shape = args.getShape();\n    if (shape instanceof Rectangle) {\n      Rectangle bbox = (Rectangle) shape;\n      return new ConstantScoreQuery(makeWithin(bbox));\n    } else if (shape instanceof Circle) {\n      Circle circle = (Circle)shape;\n      Rectangle bbox = circle.getBoundingBox();\n      Query approxQuery = makeWithin(bbox);\n      BooleanQuery.Builder bqBuilder = new BooleanQuery.Builder();\n      FunctionRangeQuery vsRangeQuery =\n          new FunctionRangeQuery(makeDistanceValueSource(circle.getCenter()), 0.0, circle.getRadius(), true, true);\n      bqBuilder.add(approxQuery, BooleanClause.Occur.FILTER);//should have lowest \"cost\" value; will drive iteration\n      bqBuilder.add(vsRangeQuery, BooleanClause.Occur.FILTER);\n      return new ConstantScoreQuery(bqBuilder.build());\n    } else {\n      throw new UnsupportedOperationException(\"Only Rectangles and Circles are currently supported, \" +\n          \"found [\" + shape.getClass() + \"]\");//TODO\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/vector/PointVectorStrategy#makeQuery(SpatialArgs).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/PointVectorStrategy#makeQuery(SpatialArgs).mjava","sourceNew":"  @Override\n  public ConstantScoreQuery makeQuery(SpatialArgs args) {\n    if(! SpatialOperation.is( args.getOperation(),\n        SpatialOperation.Intersects,\n        SpatialOperation.IsWithin ))\n      throw new UnsupportedSpatialOperation(args.getOperation());\n    Shape shape = args.getShape();\n    if (shape instanceof Rectangle) {\n      Rectangle bbox = (Rectangle) shape;\n      return new ConstantScoreQuery(makeWithin(bbox));\n    } else if (shape instanceof Circle) {\n      Circle circle = (Circle)shape;\n      Rectangle bbox = circle.getBoundingBox();\n      Query approxQuery = makeWithin(bbox);\n      BooleanQuery.Builder bqBuilder = new BooleanQuery.Builder();\n      FunctionRangeQuery vsRangeQuery =\n          new FunctionRangeQuery(makeDistanceValueSource(circle.getCenter()), 0.0, circle.getRadius(), true, true);\n      bqBuilder.add(approxQuery, BooleanClause.Occur.FILTER);//should have lowest \"cost\" value; will drive iteration\n      bqBuilder.add(vsRangeQuery, BooleanClause.Occur.FILTER);\n      return new ConstantScoreQuery(bqBuilder.build());\n    } else {\n      throw new UnsupportedOperationException(\"Only Rectangles and Circles are currently supported, \" +\n          \"found [\" + shape.getClass() + \"]\");//TODO\n    }\n  }\n\n","sourceOld":"  @Override\n  public ConstantScoreQuery makeQuery(SpatialArgs args) {\n    if(! SpatialOperation.is( args.getOperation(),\n        SpatialOperation.Intersects,\n        SpatialOperation.IsWithin ))\n      throw new UnsupportedSpatialOperation(args.getOperation());\n    Shape shape = args.getShape();\n    if (shape instanceof Rectangle) {\n      Rectangle bbox = (Rectangle) shape;\n      return new ConstantScoreQuery(makeWithin(bbox));\n    } else if (shape instanceof Circle) {\n      Circle circle = (Circle)shape;\n      Rectangle bbox = circle.getBoundingBox();\n      Query approxQuery = makeWithin(bbox);\n      BooleanQuery.Builder bqBuilder = new BooleanQuery.Builder();\n      FunctionRangeQuery vsRangeQuery =\n          new FunctionRangeQuery(makeDistanceValueSource(circle.getCenter()), 0.0, circle.getRadius(), true, true);\n      bqBuilder.add(approxQuery, BooleanClause.Occur.FILTER);//should have lowest \"cost\" value; will drive iteration\n      bqBuilder.add(vsRangeQuery, BooleanClause.Occur.FILTER);\n      return new ConstantScoreQuery(bqBuilder.build());\n    } else {\n      throw new UnsupportedOperationException(\"Only Rectangles and Circles are currently supported, \" +\n          \"found [\" + shape.getClass() + \"]\");//TODO\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"32b9119890a8e82252b6cc341ac491d18fa1e49b","date":1498575219,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/vector/PointVectorStrategy#makeQuery(SpatialArgs).mjava","pathOld":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/vector/PointVectorStrategy#makeQuery(SpatialArgs).mjava","sourceNew":"  @Override\n  public Query makeQuery(SpatialArgs args) {\n    if(! SpatialOperation.is( args.getOperation(),\n        SpatialOperation.Intersects,\n        SpatialOperation.IsWithin ))\n      throw new UnsupportedSpatialOperation(args.getOperation());\n    Shape shape = args.getShape();\n    if (shape instanceof Rectangle) {\n      Rectangle bbox = (Rectangle) shape;\n      return new ConstantScoreQuery(makeWithin(bbox));\n    } else if (shape instanceof Circle) {\n      Circle circle = (Circle)shape;\n      Rectangle bbox = circle.getBoundingBox();\n      return new DistanceRangeQuery(makeWithin(bbox), makeDistanceValueSource(circle.getCenter()), circle.getRadius());\n    } else {\n      throw new UnsupportedOperationException(\"Only Rectangles and Circles are currently supported, \" +\n          \"found [\" + shape.getClass() + \"]\");//TODO\n    }\n  }\n\n","sourceOld":"  @Override\n  public ConstantScoreQuery makeQuery(SpatialArgs args) {\n    if(! SpatialOperation.is( args.getOperation(),\n        SpatialOperation.Intersects,\n        SpatialOperation.IsWithin ))\n      throw new UnsupportedSpatialOperation(args.getOperation());\n    Shape shape = args.getShape();\n    if (shape instanceof Rectangle) {\n      Rectangle bbox = (Rectangle) shape;\n      return new ConstantScoreQuery(makeWithin(bbox));\n    } else if (shape instanceof Circle) {\n      Circle circle = (Circle)shape;\n      Rectangle bbox = circle.getBoundingBox();\n      Query approxQuery = makeWithin(bbox);\n      BooleanQuery.Builder bqBuilder = new BooleanQuery.Builder();\n      FunctionRangeQuery vsRangeQuery =\n          new FunctionRangeQuery(makeDistanceValueSource(circle.getCenter()), 0.0, circle.getRadius(), true, true);\n      bqBuilder.add(approxQuery, BooleanClause.Occur.FILTER);//should have lowest \"cost\" value; will drive iteration\n      bqBuilder.add(vsRangeQuery, BooleanClause.Occur.FILTER);\n      return new ConstantScoreQuery(bqBuilder.build());\n    } else {\n      throw new UnsupportedOperationException(\"Only Rectangles and Circles are currently supported, \" +\n          \"found [\" + shape.getClass() + \"]\");//TODO\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98f11c416d30e556e0004a9a84960702d12d35b1","date":1498628359,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/vector/PointVectorStrategy#makeQuery(SpatialArgs).mjava","pathOld":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/vector/PointVectorStrategy#makeQuery(SpatialArgs).mjava","sourceNew":"  @Override\n  public Query makeQuery(SpatialArgs args) {\n    if(! SpatialOperation.is( args.getOperation(),\n        SpatialOperation.Intersects,\n        SpatialOperation.IsWithin ))\n      throw new UnsupportedSpatialOperation(args.getOperation());\n    Shape shape = args.getShape();\n    if (shape instanceof Rectangle) {\n      Rectangle bbox = (Rectangle) shape;\n      return new ConstantScoreQuery(makeWithin(bbox));\n    } else if (shape instanceof Circle) {\n      Circle circle = (Circle)shape;\n      Rectangle bbox = circle.getBoundingBox();\n      return new DistanceRangeQuery(makeWithin(bbox), makeDistanceValueSource(circle.getCenter()), circle.getRadius());\n    } else {\n      throw new UnsupportedOperationException(\"Only Rectangles and Circles are currently supported, \" +\n          \"found [\" + shape.getClass() + \"]\");//TODO\n    }\n  }\n\n","sourceOld":"  @Override\n  public ConstantScoreQuery makeQuery(SpatialArgs args) {\n    if(! SpatialOperation.is( args.getOperation(),\n        SpatialOperation.Intersects,\n        SpatialOperation.IsWithin ))\n      throw new UnsupportedSpatialOperation(args.getOperation());\n    Shape shape = args.getShape();\n    if (shape instanceof Rectangle) {\n      Rectangle bbox = (Rectangle) shape;\n      return new ConstantScoreQuery(makeWithin(bbox));\n    } else if (shape instanceof Circle) {\n      Circle circle = (Circle)shape;\n      Rectangle bbox = circle.getBoundingBox();\n      Query approxQuery = makeWithin(bbox);\n      BooleanQuery.Builder bqBuilder = new BooleanQuery.Builder();\n      FunctionRangeQuery vsRangeQuery =\n          new FunctionRangeQuery(makeDistanceValueSource(circle.getCenter()), 0.0, circle.getRadius(), true, true);\n      bqBuilder.add(approxQuery, BooleanClause.Occur.FILTER);//should have lowest \"cost\" value; will drive iteration\n      bqBuilder.add(vsRangeQuery, BooleanClause.Occur.FILTER);\n      return new ConstantScoreQuery(bqBuilder.build());\n    } else {\n      throw new UnsupportedOperationException(\"Only Rectangles and Circles are currently supported, \" +\n          \"found [\" + shape.getClass() + \"]\");//TODO\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/vector/PointVectorStrategy#makeQuery(SpatialArgs).mjava","pathOld":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/vector/PointVectorStrategy#makeQuery(SpatialArgs).mjava","sourceNew":"  @Override\n  public Query makeQuery(SpatialArgs args) {\n    if(! SpatialOperation.is( args.getOperation(),\n        SpatialOperation.Intersects,\n        SpatialOperation.IsWithin ))\n      throw new UnsupportedSpatialOperation(args.getOperation());\n    Shape shape = args.getShape();\n    if (shape instanceof Rectangle) {\n      Rectangle bbox = (Rectangle) shape;\n      return new ConstantScoreQuery(makeWithin(bbox));\n    } else if (shape instanceof Circle) {\n      Circle circle = (Circle)shape;\n      Rectangle bbox = circle.getBoundingBox();\n      return new DistanceRangeQuery(makeWithin(bbox), makeDistanceValueSource(circle.getCenter()), circle.getRadius());\n    } else {\n      throw new UnsupportedOperationException(\"Only Rectangles and Circles are currently supported, \" +\n          \"found [\" + shape.getClass() + \"]\");//TODO\n    }\n  }\n\n","sourceOld":"  @Override\n  public ConstantScoreQuery makeQuery(SpatialArgs args) {\n    if(! SpatialOperation.is( args.getOperation(),\n        SpatialOperation.Intersects,\n        SpatialOperation.IsWithin ))\n      throw new UnsupportedSpatialOperation(args.getOperation());\n    Shape shape = args.getShape();\n    if (shape instanceof Rectangle) {\n      Rectangle bbox = (Rectangle) shape;\n      return new ConstantScoreQuery(makeWithin(bbox));\n    } else if (shape instanceof Circle) {\n      Circle circle = (Circle)shape;\n      Rectangle bbox = circle.getBoundingBox();\n      Query approxQuery = makeWithin(bbox);\n      BooleanQuery.Builder bqBuilder = new BooleanQuery.Builder();\n      FunctionRangeQuery vsRangeQuery =\n          new FunctionRangeQuery(makeDistanceValueSource(circle.getCenter()), 0.0, circle.getRadius(), true, true);\n      bqBuilder.add(approxQuery, BooleanClause.Occur.FILTER);//should have lowest \"cost\" value; will drive iteration\n      bqBuilder.add(vsRangeQuery, BooleanClause.Occur.FILTER);\n      return new ConstantScoreQuery(bqBuilder.build());\n    } else {\n      throw new UnsupportedOperationException(\"Only Rectangles and Circles are currently supported, \" +\n          \"found [\" + shape.getClass() + \"]\");//TODO\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","112d77ac8d3e10a362516ad834c9a11d35c94234"],"32b9119890a8e82252b6cc341ac491d18fa1e49b":["af2638813028b254a88b418ebeafb541afb49653"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28288370235ed02234a64753cdbf0c6ec096304a":["af2638813028b254a88b418ebeafb541afb49653","32b9119890a8e82252b6cc341ac491d18fa1e49b"],"98f11c416d30e556e0004a9a84960702d12d35b1":["af2638813028b254a88b418ebeafb541afb49653","32b9119890a8e82252b6cc341ac491d18fa1e49b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["32b9119890a8e82252b6cc341ac491d18fa1e49b","28288370235ed02234a64753cdbf0c6ec096304a","98f11c416d30e556e0004a9a84960702d12d35b1"],"32b9119890a8e82252b6cc341ac491d18fa1e49b":["28288370235ed02234a64753cdbf0c6ec096304a","98f11c416d30e556e0004a9a84960702d12d35b1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"98f11c416d30e556e0004a9a84960702d12d35b1":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["98f11c416d30e556e0004a9a84960702d12d35b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}