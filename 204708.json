{"path":"contrib/memory/src/java/org/apache/lucene/index/memory/AnalyzerUtil#getMaxTokenAnalyzer(Analyzer,int,int).mjava","commits":[{"id":"ea82415927cafd7c8b8bceca08f31a63db1cbdde","date":1133588579,"type":0,"author":"Wolfgang Hoschek","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/AnalyzerUtil#getMaxTokenAnalyzer(Analyzer,int,int).mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * Returns an analyzer wrapper that returns at most the first\n\t * <code>maxTokens</code> tokens from the underlying child analyzer,\n\t * ignoring all remaining tokens.\n\t * \n\t * @param child\n\t *            the underlying child analyzer\n\t * @param maxTokens\n\t *            the maximum number of tokens to return from the underlying\n\t *            analyzer (a value of Integer.MAX_VALUE indicates unlimited)\n\t * @return an analyzer wrapper\n\t */\n\tpublic static Analyzer getMaxTokenAnalyzer(\n\t\t\tfinal Analyzer child, final int maxTokens, final int maxChars) {\n\t\t\n\t\tif (child == null) \n\t\t\tthrow new IllegalArgumentException(\"child analyzer must not be null\");\n\t\tif (maxTokens < 0) \n\t\t\tthrow new IllegalArgumentException(\"maxTokens must not be negative\");\n\t\tif (maxTokens == Integer.MAX_VALUE) \n\t\t\treturn child; // no need to wrap\n\t\n\t\treturn new Analyzer() {\n\t\t\tpublic TokenStream tokenStream(String fieldName, Reader reader) {\n\t\t\t\treturn new TokenFilter(child.tokenStream(fieldName, reader)) {\n\t\t\t\t\tprivate int todo = maxTokens;\n\t\t\t\t\t\n\t\t\t\t\tpublic Token next() throws IOException {\n\t\t\t\t\t\treturn --todo >= 0 ? input.next() : null;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bae93f7963db7dbae2fece3941cdbcb1369eaeb","date":1133766624,"type":5,"author":"Wolfgang Hoschek","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/AnalyzerUtil#getMaxTokenAnalyzer(Analyzer,int).mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/AnalyzerUtil#getMaxTokenAnalyzer(Analyzer,int,int).mjava","sourceNew":"\t/**\n\t * Returns an analyzer wrapper that returns at most the first\n\t * <code>maxTokens</code> tokens from the underlying child analyzer,\n\t * ignoring all remaining tokens.\n\t * \n\t * @param child\n\t *            the underlying child analyzer\n\t * @param maxTokens\n\t *            the maximum number of tokens to return from the underlying\n\t *            analyzer (a value of Integer.MAX_VALUE indicates unlimited)\n\t * @return an analyzer wrapper\n\t */\n\tpublic static Analyzer getMaxTokenAnalyzer(\n\t\t\tfinal Analyzer child, final int maxTokens) {\n\t\t\n\t\tif (child == null) \n\t\t\tthrow new IllegalArgumentException(\"child analyzer must not be null\");\n\t\tif (maxTokens < 0) \n\t\t\tthrow new IllegalArgumentException(\"maxTokens must not be negative\");\n\t\tif (maxTokens == Integer.MAX_VALUE) \n\t\t\treturn child; // no need to wrap\n\t\n\t\treturn new Analyzer() {\n\t\t\tpublic TokenStream tokenStream(String fieldName, Reader reader) {\n\t\t\t\treturn new TokenFilter(child.tokenStream(fieldName, reader)) {\n\t\t\t\t\tprivate int todo = maxTokens;\n\t\t\t\t\t\n\t\t\t\t\tpublic Token next() throws IOException {\n\t\t\t\t\t\treturn --todo >= 0 ? input.next() : null;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t}\n\n","sourceOld":"\t/**\n\t * Returns an analyzer wrapper that returns at most the first\n\t * <code>maxTokens</code> tokens from the underlying child analyzer,\n\t * ignoring all remaining tokens.\n\t * \n\t * @param child\n\t *            the underlying child analyzer\n\t * @param maxTokens\n\t *            the maximum number of tokens to return from the underlying\n\t *            analyzer (a value of Integer.MAX_VALUE indicates unlimited)\n\t * @return an analyzer wrapper\n\t */\n\tpublic static Analyzer getMaxTokenAnalyzer(\n\t\t\tfinal Analyzer child, final int maxTokens, final int maxChars) {\n\t\t\n\t\tif (child == null) \n\t\t\tthrow new IllegalArgumentException(\"child analyzer must not be null\");\n\t\tif (maxTokens < 0) \n\t\t\tthrow new IllegalArgumentException(\"maxTokens must not be negative\");\n\t\tif (maxTokens == Integer.MAX_VALUE) \n\t\t\treturn child; // no need to wrap\n\t\n\t\treturn new Analyzer() {\n\t\t\tpublic TokenStream tokenStream(String fieldName, Reader reader) {\n\t\t\t\treturn new TokenFilter(child.tokenStream(fieldName, reader)) {\n\t\t\t\t\tprivate int todo = maxTokens;\n\t\t\t\t\t\n\t\t\t\t\tpublic Token next() throws IOException {\n\t\t\t\t\t\treturn --todo >= 0 ? input.next() : null;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ea82415927cafd7c8b8bceca08f31a63db1cbdde":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3bae93f7963db7dbae2fece3941cdbcb1369eaeb":["ea82415927cafd7c8b8bceca08f31a63db1cbdde"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3bae93f7963db7dbae2fece3941cdbcb1369eaeb"]},"commit2Childs":{"ea82415927cafd7c8b8bceca08f31a63db1cbdde":["3bae93f7963db7dbae2fece3941cdbcb1369eaeb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ea82415927cafd7c8b8bceca08f31a63db1cbdde"],"3bae93f7963db7dbae2fece3941cdbcb1369eaeb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}