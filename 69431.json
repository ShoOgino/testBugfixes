{"path":"solr/core/src/test/org/apache/solr/cloud/MoveReplicaHDFSUlogDirTest#setupClass().mjava","commits":[{"id":"8915f526ddcc1f30a75d7e1ef16b6627c8af6f7f","date":1499854368,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MoveReplicaHDFSUlogDirTest#setupClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void setupClass() throws Exception {\n    configureCluster(2)\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-dynamic\").resolve(\"conf\"))\n        .configure();\n\n    System.setProperty(\"solr.hdfs.blockcache.enabled\", \"false\");\n    dfsCluster = HdfsTestUtil.setupClass(createTempDir().toFile().getAbsolutePath());\n\n    ZkConfigManager configManager = new ZkConfigManager(zkClient());\n    configManager.uploadConfigDir(configset(\"cloud-hdfs\"), \"conf1\");\n\n    System.setProperty(\"solr.hdfs.home\", HdfsTestUtil.getDataDir(dfsCluster, \"data\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["add53de9835b2cd1a7a80b4e0036afee171c9fdf","add53de9835b2cd1a7a80b4e0036afee171c9fdf","add53de9835b2cd1a7a80b4e0036afee171c9fdf"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f9a989a32a073c55e3aef6f807a3474184bbcf49","date":1499930209,"type":0,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MoveReplicaHDFSUlogDirTest#setupClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void setupClass() throws Exception {\n    configureCluster(2)\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-dynamic\").resolve(\"conf\"))\n        .configure();\n\n    System.setProperty(\"solr.hdfs.blockcache.enabled\", \"false\");\n    dfsCluster = HdfsTestUtil.setupClass(createTempDir().toFile().getAbsolutePath());\n\n    ZkConfigManager configManager = new ZkConfigManager(zkClient());\n    configManager.uploadConfigDir(configset(\"cloud-hdfs\"), \"conf1\");\n\n    System.setProperty(\"solr.hdfs.home\", HdfsTestUtil.getDataDir(dfsCluster, \"data\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fb569fd721c41eafc2a2d788499a7df490c7f1a5","date":1499930871,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MoveReplicaHDFSUlogDirTest#setupClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void setupClass() throws Exception {\n    configureCluster(2)\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-dynamic\").resolve(\"conf\"))\n        .configure();\n\n    System.setProperty(\"solr.hdfs.blockcache.enabled\", \"false\");\n    dfsCluster = HdfsTestUtil.setupClass(createTempDir().toFile().getAbsolutePath());\n\n    ZkConfigManager configManager = new ZkConfigManager(zkClient());\n    configManager.uploadConfigDir(configset(\"cloud-hdfs\"), \"conf1\");\n\n    System.setProperty(\"solr.hdfs.home\", HdfsTestUtil.getDataDir(dfsCluster, \"data\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"717e5ceb2acae36d422ec75e5a4ce9fac40506e1","date":1501239603,"type":5,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MoveReplicaHDFSFailoverTest#setupClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/MoveReplicaHDFSUlogDirTest#setupClass().mjava","sourceNew":"  @BeforeClass\n  public static void setupClass() throws Exception {\n    configureCluster(2)\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-dynamic\").resolve(\"conf\"))\n        .configure();\n\n    System.setProperty(\"solr.hdfs.blockcache.enabled\", \"false\");\n    dfsCluster = HdfsTestUtil.setupClass(createTempDir().toFile().getAbsolutePath());\n\n    ZkConfigManager configManager = new ZkConfigManager(zkClient());\n    configManager.uploadConfigDir(configset(\"cloud-hdfs\"), \"conf1\");\n\n    System.setProperty(\"solr.hdfs.home\", HdfsTestUtil.getDataDir(dfsCluster, \"data\"));\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupClass() throws Exception {\n    configureCluster(2)\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-dynamic\").resolve(\"conf\"))\n        .configure();\n\n    System.setProperty(\"solr.hdfs.blockcache.enabled\", \"false\");\n    dfsCluster = HdfsTestUtil.setupClass(createTempDir().toFile().getAbsolutePath());\n\n    ZkConfigManager configManager = new ZkConfigManager(zkClient());\n    configManager.uploadConfigDir(configset(\"cloud-hdfs\"), \"conf1\");\n\n    System.setProperty(\"solr.hdfs.home\", HdfsTestUtil.getDataDir(dfsCluster, \"data\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c304e97e7c1d472bc70e801b35ee78583916c6cd","date":1507105431,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MoveReplicaHDFSFailoverTest#setupClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/MoveReplicaHDFSUlogDirTest#setupClass().mjava","sourceNew":"  @BeforeClass\n  public static void setupClass() throws Exception {\n    configureCluster(2)\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-dynamic\").resolve(\"conf\"))\n        .configure();\n\n    System.setProperty(\"solr.hdfs.blockcache.enabled\", \"false\");\n    dfsCluster = HdfsTestUtil.setupClass(createTempDir().toFile().getAbsolutePath());\n\n    ZkConfigManager configManager = new ZkConfigManager(zkClient());\n    configManager.uploadConfigDir(configset(\"cloud-hdfs\"), \"conf1\");\n\n    System.setProperty(\"solr.hdfs.home\", HdfsTestUtil.getDataDir(dfsCluster, \"data\"));\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupClass() throws Exception {\n    configureCluster(2)\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-dynamic\").resolve(\"conf\"))\n        .configure();\n\n    System.setProperty(\"solr.hdfs.blockcache.enabled\", \"false\");\n    dfsCluster = HdfsTestUtil.setupClass(createTempDir().toFile().getAbsolutePath());\n\n    ZkConfigManager configManager = new ZkConfigManager(zkClient());\n    configManager.uploadConfigDir(configset(\"cloud-hdfs\"), \"conf1\");\n\n    System.setProperty(\"solr.hdfs.home\", HdfsTestUtil.getDataDir(dfsCluster, \"data\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"560c18d71dad43d675158783c3840f8c80d6d39c","date":1507105532,"type":5,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MoveReplicaHDFSFailoverTest#setupClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/MoveReplicaHDFSUlogDirTest#setupClass().mjava","sourceNew":"  @BeforeClass\n  public static void setupClass() throws Exception {\n    configureCluster(2)\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-dynamic\").resolve(\"conf\"))\n        .configure();\n\n    System.setProperty(\"solr.hdfs.blockcache.enabled\", \"false\");\n    dfsCluster = HdfsTestUtil.setupClass(createTempDir().toFile().getAbsolutePath());\n\n    ZkConfigManager configManager = new ZkConfigManager(zkClient());\n    configManager.uploadConfigDir(configset(\"cloud-hdfs\"), \"conf1\");\n\n    System.setProperty(\"solr.hdfs.home\", HdfsTestUtil.getDataDir(dfsCluster, \"data\"));\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupClass() throws Exception {\n    configureCluster(2)\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-dynamic\").resolve(\"conf\"))\n        .configure();\n\n    System.setProperty(\"solr.hdfs.blockcache.enabled\", \"false\");\n    dfsCluster = HdfsTestUtil.setupClass(createTempDir().toFile().getAbsolutePath());\n\n    ZkConfigManager configManager = new ZkConfigManager(zkClient());\n    configManager.uploadConfigDir(configset(\"cloud-hdfs\"), \"conf1\");\n\n    System.setProperty(\"solr.hdfs.home\", HdfsTestUtil.getDataDir(dfsCluster, \"data\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"c304e97e7c1d472bc70e801b35ee78583916c6cd":["8915f526ddcc1f30a75d7e1ef16b6627c8af6f7f","717e5ceb2acae36d422ec75e5a4ce9fac40506e1"],"717e5ceb2acae36d422ec75e5a4ce9fac40506e1":["fb569fd721c41eafc2a2d788499a7df490c7f1a5"],"8915f526ddcc1f30a75d7e1ef16b6627c8af6f7f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fb569fd721c41eafc2a2d788499a7df490c7f1a5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f9a989a32a073c55e3aef6f807a3474184bbcf49"],"560c18d71dad43d675158783c3840f8c80d6d39c":["8915f526ddcc1f30a75d7e1ef16b6627c8af6f7f","c304e97e7c1d472bc70e801b35ee78583916c6cd"],"f9a989a32a073c55e3aef6f807a3474184bbcf49":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8915f526ddcc1f30a75d7e1ef16b6627c8af6f7f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["560c18d71dad43d675158783c3840f8c80d6d39c"]},"commit2Childs":{"c304e97e7c1d472bc70e801b35ee78583916c6cd":["560c18d71dad43d675158783c3840f8c80d6d39c"],"717e5ceb2acae36d422ec75e5a4ce9fac40506e1":["c304e97e7c1d472bc70e801b35ee78583916c6cd"],"8915f526ddcc1f30a75d7e1ef16b6627c8af6f7f":["c304e97e7c1d472bc70e801b35ee78583916c6cd","560c18d71dad43d675158783c3840f8c80d6d39c","f9a989a32a073c55e3aef6f807a3474184bbcf49"],"fb569fd721c41eafc2a2d788499a7df490c7f1a5":["717e5ceb2acae36d422ec75e5a4ce9fac40506e1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8915f526ddcc1f30a75d7e1ef16b6627c8af6f7f","fb569fd721c41eafc2a2d788499a7df490c7f1a5","f9a989a32a073c55e3aef6f807a3474184bbcf49"],"560c18d71dad43d675158783c3840f8c80d6d39c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f9a989a32a073c55e3aef6f807a3474184bbcf49":["fb569fd721c41eafc2a2d788499a7df490c7f1a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}