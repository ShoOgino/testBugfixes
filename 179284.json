{"path":"src/java/org/apache/lucene/index/LogMergePolicy#getMaxMergeDocs().mjava","commits":[{"id":"5b05dbf5e8a6920898fb3838ec15c9eb64bc01af","date":1191617513,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/LogMergePolicy#getMaxMergeDocs().mjava","pathOld":"src/java/org/apache/lucene/index/LogDocMergePolicy#getMaxMergeDocs().mjava","sourceNew":"  /** Get the maximum docs for a segment to be merged.\n   *  @see #setMaxMergeDocs */\n  public int getMaxMergeDocs() {\n    return maxMergeDocs;\n  }\n\n","sourceOld":"  /** Get the maximum size for a segment to be merged.\n   *  @see #setMaxMergeDocs */\n  public int getMaxMergeDocs() {\n    return (int) maxMergeSize;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d7f2d45bf4e1ec80e37552ebe21f66cd1a6e4270","date":1192640062,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/LogMergePolicy#getMaxMergeDocs().mjava","pathOld":"src/java/org/apache/lucene/index/LogMergePolicy#getMaxMergeDocs().mjava","sourceNew":"  /** Returns the largest segment (measured by document\n   *  count) that may be merged with other segments.\n   *  @see #setMaxMergeDocs */\n  public int getMaxMergeDocs() {\n    return maxMergeDocs;\n  }\n\n","sourceOld":"  /** Get the maximum docs for a segment to be merged.\n   *  @see #setMaxMergeDocs */\n  public int getMaxMergeDocs() {\n    return maxMergeDocs;\n  }\n\n","bugFix":["5b05dbf5e8a6920898fb3838ec15c9eb64bc01af"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#getMaxMergeDocs().mjava","pathOld":"src/java/org/apache/lucene/index/LogMergePolicy#getMaxMergeDocs().mjava","sourceNew":"  /** Returns the largest segment (measured by document\n   *  count) that may be merged with other segments.\n   *  @see #setMaxMergeDocs */\n  public int getMaxMergeDocs() {\n    return maxMergeDocs;\n  }\n\n","sourceOld":"  /** Returns the largest segment (measured by document\n   *  count) that may be merged with other segments.\n   *  @see #setMaxMergeDocs */\n  public int getMaxMergeDocs() {\n    return maxMergeDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d7f2d45bf4e1ec80e37552ebe21f66cd1a6e4270":["5b05dbf5e8a6920898fb3838ec15c9eb64bc01af"],"5b05dbf5e8a6920898fb3838ec15c9eb64bc01af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d7f2d45bf4e1ec80e37552ebe21f66cd1a6e4270"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5b05dbf5e8a6920898fb3838ec15c9eb64bc01af"],"d7f2d45bf4e1ec80e37552ebe21f66cd1a6e4270":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"5b05dbf5e8a6920898fb3838ec15c9eb64bc01af":["d7f2d45bf4e1ec80e37552ebe21f66cd1a6e4270"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}