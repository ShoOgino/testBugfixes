{"path":"lucene/contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndex#InstantiatedIndex(IndexReader).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndex#InstantiatedIndex(IndexReader).mjava","pathOld":"contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndex#InstantiatedIndex(IndexReader).mjava","sourceNew":"  /**\n   * Creates a new instantiated index that looks just like the index in a specific state as represented by a reader.\n   *\n   * @param sourceIndexReader the source index this new instantiated index will be copied from.\n   * @throws IOException if the source index is not optimized, or when accessing the source.\n   */\n  public InstantiatedIndex(IndexReader sourceIndexReader) throws IOException {\n    this(sourceIndexReader, null);\n  }\n\n","sourceOld":"  /**\n   * Creates a new instantiated index that looks just like the index in a specific state as represented by a reader.\n   *\n   * @param sourceIndexReader the source index this new instantiated index will be copied from.\n   * @throws IOException if the source index is not optimized, or when accessing the source.\n   */\n  public InstantiatedIndex(IndexReader sourceIndexReader) throws IOException {\n    this(sourceIndexReader, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndex#InstantiatedIndex(IndexReader).mjava","pathOld":"lucene/contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndex#InstantiatedIndex(IndexReader).mjava","sourceNew":"  /**\n   * Creates a new instantiated index that looks just like the index in a specific state as represented by a reader.\n   *\n   * @param sourceIndexReader the source index this new instantiated index will be copied from.\n   * @throws IOException if the source index is not single-segment, or when accessing the source.\n   */\n  public InstantiatedIndex(IndexReader sourceIndexReader) throws IOException {\n    this(sourceIndexReader, null);\n  }\n\n","sourceOld":"  /**\n   * Creates a new instantiated index that looks just like the index in a specific state as represented by a reader.\n   *\n   * @param sourceIndexReader the source index this new instantiated index will be copied from.\n   * @throws IOException if the source index is not optimized, or when accessing the source.\n   */\n  public InstantiatedIndex(IndexReader sourceIndexReader) throws IOException {\n    this(sourceIndexReader, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndex#InstantiatedIndex(IndexReader).mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates a new instantiated index that looks just like the index in a specific state as represented by a reader.\n   *\n   * @param sourceIndexReader the source index this new instantiated index will be copied from.\n   * @throws IOException if the source index is not single-segment, or when accessing the source.\n   */\n  public InstantiatedIndex(IndexReader sourceIndexReader) throws IOException {\n    this(sourceIndexReader, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc749c053615f5871f3b95715fe292f34e70a53":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc749c053615f5871f3b95715fe292f34e70a53"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3cc749c053615f5871f3b95715fe292f34e70a53":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["3cc749c053615f5871f3b95715fe292f34e70a53"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}