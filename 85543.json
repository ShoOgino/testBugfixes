{"path":"solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudCluster#createMiniSolrCloudCluster(boolean).mjava","commits":[{"id":"57131fa4ce09b8042f56ebbbd65dfe28c51d2ad7","date":1445955220,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudCluster#createMiniSolrCloudCluster(boolean).mjava","pathOld":"/dev/null","sourceNew":"  private MiniSolrCloudCluster createMiniSolrCloudCluster(boolean multipleBaseDirs) throws Exception {\n\n    File solrXml = new File(SolrTestCaseJ4.TEST_HOME(), \"solr-no-core.xml\");\n    Builder jettyConfig = JettyConfig.builder();\n    jettyConfig.waitForLoadingCoresToFinish(null);\n    if (multipleBaseDirs) {\n      final File baseDirs[] = new File[NUM_SERVERS];\n      for (int ii = 0; ii < NUM_SERVERS; ++ii) {\n        baseDirs[ii] = createTempDir().toFile();\n      }\n      return new MiniSolrCloudCluster(baseDirs, solrXml, jettyConfig.build(), null);\n    } else {\n      return new MiniSolrCloudCluster(NUM_SERVERS, createTempDir().toFile(), solrXml, jettyConfig.build());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0c130ec24cbb2eef3d8e7f0e971736f0bea8f54","date":1446047031,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudCluster#createMiniSolrCloudCluster(boolean).mjava","sourceNew":null,"sourceOld":"  private MiniSolrCloudCluster createMiniSolrCloudCluster(boolean multipleBaseDirs) throws Exception {\n\n    File solrXml = new File(SolrTestCaseJ4.TEST_HOME(), \"solr-no-core.xml\");\n    Builder jettyConfig = JettyConfig.builder();\n    jettyConfig.waitForLoadingCoresToFinish(null);\n    if (multipleBaseDirs) {\n      final File baseDirs[] = new File[NUM_SERVERS];\n      for (int ii = 0; ii < NUM_SERVERS; ++ii) {\n        baseDirs[ii] = createTempDir().toFile();\n      }\n      return new MiniSolrCloudCluster(baseDirs, solrXml, jettyConfig.build(), null);\n    } else {\n      return new MiniSolrCloudCluster(NUM_SERVERS, createTempDir().toFile(), solrXml, jettyConfig.build());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f0c130ec24cbb2eef3d8e7f0e971736f0bea8f54":["57131fa4ce09b8042f56ebbbd65dfe28c51d2ad7"],"57131fa4ce09b8042f56ebbbd65dfe28c51d2ad7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f0c130ec24cbb2eef3d8e7f0e971736f0bea8f54"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["57131fa4ce09b8042f56ebbbd65dfe28c51d2ad7"],"f0c130ec24cbb2eef3d8e7f0e971736f0bea8f54":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"57131fa4ce09b8042f56ebbbd65dfe28c51d2ad7":["f0c130ec24cbb2eef3d8e7f0e971736f0bea8f54"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}