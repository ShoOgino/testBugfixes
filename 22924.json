{"path":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestMultiFieldQueryParserWrapper#testStopWordSearching().mjava","commits":[{"id":"e8a848e758754282137f42bf85793c278e250390","date":1249640668,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestMultiFieldQueryParserWrapper#testStopWordSearching().mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/original/TestMultiFieldQueryParserWrapper#testStopWordSearching().mjava","sourceNew":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer();\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(ramDir, analyzer, true,\n        IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO,\n        Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.close();\n\n    MultiFieldQueryParserWrapper mfqp = new MultiFieldQueryParserWrapper(\n        new String[] { \"body\" }, analyzer);\n    mfqp.setDefaultOperator(QueryParserWrapper.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    is.close();\n  }\n\n","sourceOld":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer();\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(ramDir, analyzer, true,\n        IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO,\n        Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.close();\n\n    MultiFieldQueryParserWrapper mfqp = new MultiFieldQueryParserWrapper(\n        new String[] { \"body\" }, analyzer);\n    mfqp.setDefaultOperator(QueryParserWrapper.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    is.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4256bc1b3c94786287ccdfc751230374521843cf","date":1254612273,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestMultiFieldQueryParserWrapper#testStopWordSearching().mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestMultiFieldQueryParserWrapper#testStopWordSearching().mjava","sourceNew":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer();\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(ramDir, analyzer, true,\n        IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO,\n        Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.close();\n\n    MultiFieldQueryParserWrapper mfqp = new MultiFieldQueryParserWrapper(\n        new String[] { \"body\" }, analyzer);\n    mfqp.setDefaultOperator(QueryParserWrapper.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir, true);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    is.close();\n  }\n\n","sourceOld":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer();\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(ramDir, analyzer, true,\n        IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO,\n        Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.close();\n\n    MultiFieldQueryParserWrapper mfqp = new MultiFieldQueryParserWrapper(\n        new String[] { \"body\" }, analyzer);\n    mfqp.setDefaultOperator(QueryParserWrapper.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    is.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9","date":1256127131,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestMultiFieldQueryParserWrapper#testStopWordSearching().mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestMultiFieldQueryParserWrapper#testStopWordSearching().mjava","sourceNew":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT);\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(ramDir, analyzer, true,\n        IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO,\n        Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.close();\n\n    MultiFieldQueryParserWrapper mfqp = new MultiFieldQueryParserWrapper(\n        new String[] { \"body\" }, analyzer);\n    mfqp.setDefaultOperator(QueryParserWrapper.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir, true);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    is.close();\n  }\n\n","sourceOld":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer();\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(ramDir, analyzer, true,\n        IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO,\n        Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.close();\n\n    MultiFieldQueryParserWrapper mfqp = new MultiFieldQueryParserWrapper(\n        new String[] { \"body\" }, analyzer);\n    mfqp.setDefaultOperator(QueryParserWrapper.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir, true);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    is.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestMultiFieldQueryParserWrapper#testStopWordSearching().mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestMultiFieldQueryParserWrapper#testStopWordSearching().mjava","sourceNew":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer(TEST_VERSION_CURRENT);\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(ramDir, analyzer, true,\n        IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO,\n        Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.close();\n\n    MultiFieldQueryParserWrapper mfqp = new MultiFieldQueryParserWrapper(\n        new String[] { \"body\" }, analyzer);\n    mfqp.setDefaultOperator(QueryParserWrapper.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir, true);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    is.close();\n  }\n\n","sourceOld":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT);\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(ramDir, analyzer, true,\n        IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO,\n        Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.close();\n\n    MultiFieldQueryParserWrapper mfqp = new MultiFieldQueryParserWrapper(\n        new String[] { \"body\" }, analyzer);\n    mfqp.setDefaultOperator(QueryParserWrapper.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir, true);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    is.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestMultiFieldQueryParserWrapper#testStopWordSearching().mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestMultiFieldQueryParserWrapper#testStopWordSearching().mjava","sourceNew":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer(TEST_VERSION_CURRENT);\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(ramDir, analyzer, true,\n        IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO,\n        Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.close();\n\n    MultiFieldQueryParserWrapper mfqp = new MultiFieldQueryParserWrapper(\n        new String[] { \"body\" }, analyzer);\n    mfqp.setDefaultOperator(QueryParserWrapper.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir, true);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    is.close();\n  }\n\n","sourceOld":"  public void testStopWordSearching() throws Exception {\n    Analyzer analyzer = new StandardAnalyzer(TEST_VERSION_CURRENT);\n    Directory ramDir = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(ramDir, analyzer, true,\n        IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"blah the footest blah\", Field.Store.NO,\n        Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.close();\n\n    MultiFieldQueryParserWrapper mfqp = new MultiFieldQueryParserWrapper(\n        new String[] { \"body\" }, analyzer);\n    mfqp.setDefaultOperator(QueryParserWrapper.Operator.AND);\n    Query q = mfqp.parse(\"the footest\");\n    IndexSearcher is = new IndexSearcher(ramDir, true);\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    is.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e8a848e758754282137f42bf85793c278e250390":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["4256bc1b3c94786287ccdfc751230374521843cf"],"4256bc1b3c94786287ccdfc751230374521843cf":["e8a848e758754282137f42bf85793c278e250390"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"]},"commit2Childs":{"e8a848e758754282137f42bf85793c278e250390":["4256bc1b3c94786287ccdfc751230374521843cf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e8a848e758754282137f42bf85793c278e250390"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"4256bc1b3c94786287ccdfc751230374521843cf":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}