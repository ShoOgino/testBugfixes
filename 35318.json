{"path":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.TermsWriter#startTerm(BytesRef).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.TermsWriter#startTerm(BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.TermsWriter#startTerm(BytesRef).mjava","sourceNew":"    @Override\n    public PostingsConsumer startTerm(BytesRef text) throws IOException {\n      //if (DEBUG) System.out.println(\"\\nBTTW.startTerm term=\" + fieldInfo.name + \":\" + toString(text) + \" seg=\" + segment);\n      postingsWriter.startTerm();\n      /*\n      if (fieldInfo.name.equals(\"id\")) {\n        postingsWriter.termID = Integer.parseInt(text.utf8ToString());\n      } else {\n        postingsWriter.termID = -1;\n      }\n      */\n      return postingsWriter;\n    }\n\n","sourceOld":"    @Override\n    public PostingsConsumer startTerm(BytesRef text) throws IOException {\n      //if (DEBUG) System.out.println(\"\\nBTTW.startTerm term=\" + fieldInfo.name + \":\" + toString(text) + \" seg=\" + segment);\n      postingsWriter.startTerm();\n      /*\n      if (fieldInfo.name.equals(\"id\")) {\n        postingsWriter.termID = Integer.parseInt(text.utf8ToString());\n      } else {\n        postingsWriter.termID = -1;\n      }\n      */\n      return postingsWriter;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa80a35d7c4b2b1e83082b275e3e8328ab93db52","date":1381766157,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.TermsWriter#startTerm(BytesRef).mjava","sourceNew":null,"sourceOld":"    @Override\n    public PostingsConsumer startTerm(BytesRef text) throws IOException {\n      //if (DEBUG) System.out.println(\"\\nBTTW.startTerm term=\" + fieldInfo.name + \":\" + toString(text) + \" seg=\" + segment);\n      postingsWriter.startTerm();\n      /*\n      if (fieldInfo.name.equals(\"id\")) {\n        postingsWriter.termID = Integer.parseInt(text.utf8ToString());\n      } else {\n        postingsWriter.termID = -1;\n      }\n      */\n      return postingsWriter;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fa80a35d7c4b2b1e83082b275e3e8328ab93db52":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fa80a35d7c4b2b1e83082b275e3e8328ab93db52"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fa80a35d7c4b2b1e83082b275e3e8328ab93db52"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"fa80a35d7c4b2b1e83082b275e3e8328ab93db52":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}