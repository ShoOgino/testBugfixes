{"path":"solr/core/src/test/org/apache/solr/cloud/autoscaling/ScheduledMaintenanceTriggerTest#restoreDefaults().mjava","commits":[{"id":"9c6c0dad4932399aec99b4818086cb1772773916","date":1520515900,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/ScheduledMaintenanceTriggerTest#restoreDefaults().mjava","pathOld":"/dev/null","sourceNew":"  @After\n  public void restoreDefaults() throws Exception {\n    SolrRequest req = createAutoScalingRequest(SolrRequest.METHOD.POST,\n        \"{'set-trigger' : \" + AutoScaling.SCHEDULED_MAINTENANCE_TRIGGER_DSL + \"}\");\n    NamedList<Object> response = solrClient.request(req);\n    assertEquals(response.get(\"result\").toString(), \"success\");\n    AutoScalingConfig autoScalingConfig = cloudManager.getDistribStateManager().getAutoScalingConfig();\n    if (autoScalingConfig.getTriggerListenerConfigs().containsKey(\"foo\")) {\n      String cmd = \"{\" +\n          \"'remove-listener' : {'name' : 'foo'}\" +\n          \"}\";\n      response = solrClient.request(createAutoScalingRequest(SolrRequest.METHOD.POST, cmd));\n      assertEquals(response.get(\"result\").toString(), \"success\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89948af0461fead48f44ba8fb7866f107ce83f22","date":1545157711,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/ScheduledMaintenanceTriggerTest#restoreDefaults().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/ScheduledMaintenanceTriggerTest#restoreDefaults().mjava","sourceNew":"  @After\n  public void restoreDefaults() throws Exception {\n    SolrRequest req = AutoScalingRequest.create(SolrRequest.METHOD.POST,\n        \"{'set-trigger' : \" + AutoScaling.SCHEDULED_MAINTENANCE_TRIGGER_DSL + \"}\");\n    NamedList<Object> response = solrClient.request(req);\n    assertEquals(response.get(\"result\").toString(), \"success\");\n    AutoScalingConfig autoScalingConfig = cloudManager.getDistribStateManager().getAutoScalingConfig();\n    if (autoScalingConfig.getTriggerListenerConfigs().containsKey(\"foo\")) {\n      String cmd = \"{\" +\n          \"'remove-listener' : {'name' : 'foo'}\" +\n          \"}\";\n      response = solrClient.request(AutoScalingRequest.create(SolrRequest.METHOD.POST, cmd));\n      assertEquals(response.get(\"result\").toString(), \"success\");\n    }\n  }\n\n","sourceOld":"  @After\n  public void restoreDefaults() throws Exception {\n    SolrRequest req = createAutoScalingRequest(SolrRequest.METHOD.POST,\n        \"{'set-trigger' : \" + AutoScaling.SCHEDULED_MAINTENANCE_TRIGGER_DSL + \"}\");\n    NamedList<Object> response = solrClient.request(req);\n    assertEquals(response.get(\"result\").toString(), \"success\");\n    AutoScalingConfig autoScalingConfig = cloudManager.getDistribStateManager().getAutoScalingConfig();\n    if (autoScalingConfig.getTriggerListenerConfigs().containsKey(\"foo\")) {\n      String cmd = \"{\" +\n          \"'remove-listener' : {'name' : 'foo'}\" +\n          \"}\";\n      response = solrClient.request(createAutoScalingRequest(SolrRequest.METHOD.POST, cmd));\n      assertEquals(response.get(\"result\").toString(), \"success\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa2585c33d5d66a1c837c312221eb55ddb3c4300","date":1592493170,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/ScheduledMaintenanceTriggerTest#restoreDefaults().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/ScheduledMaintenanceTriggerTest#restoreDefaults().mjava","sourceNew":"  @After\n  public void restoreDefaults() throws Exception {\n    @SuppressWarnings({\"rawtypes\"})\n    SolrRequest req = AutoScalingRequest.create(SolrRequest.METHOD.POST,\n        \"{'set-trigger' : \" + AutoScaling.SCHEDULED_MAINTENANCE_TRIGGER_DSL + \"}\");\n    NamedList<Object> response = solrClient.request(req);\n    assertEquals(response.get(\"result\").toString(), \"success\");\n    AutoScalingConfig autoScalingConfig = cloudManager.getDistribStateManager().getAutoScalingConfig();\n    if (autoScalingConfig.getTriggerListenerConfigs().containsKey(\"foo\")) {\n      String cmd = \"{\" +\n          \"'remove-listener' : {'name' : 'foo'}\" +\n          \"}\";\n      response = solrClient.request(AutoScalingRequest.create(SolrRequest.METHOD.POST, cmd));\n      assertEquals(response.get(\"result\").toString(), \"success\");\n    }\n  }\n\n","sourceOld":"  @After\n  public void restoreDefaults() throws Exception {\n    SolrRequest req = AutoScalingRequest.create(SolrRequest.METHOD.POST,\n        \"{'set-trigger' : \" + AutoScaling.SCHEDULED_MAINTENANCE_TRIGGER_DSL + \"}\");\n    NamedList<Object> response = solrClient.request(req);\n    assertEquals(response.get(\"result\").toString(), \"success\");\n    AutoScalingConfig autoScalingConfig = cloudManager.getDistribStateManager().getAutoScalingConfig();\n    if (autoScalingConfig.getTriggerListenerConfigs().containsKey(\"foo\")) {\n      String cmd = \"{\" +\n          \"'remove-listener' : {'name' : 'foo'}\" +\n          \"}\";\n      response = solrClient.request(AutoScalingRequest.create(SolrRequest.METHOD.POST, cmd));\n      assertEquals(response.get(\"result\").toString(), \"success\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/ScheduledMaintenanceTriggerTest#restoreDefaults().mjava","sourceNew":null,"sourceOld":"  @After\n  public void restoreDefaults() throws Exception {\n    @SuppressWarnings({\"rawtypes\"})\n    SolrRequest req = AutoScalingRequest.create(SolrRequest.METHOD.POST,\n        \"{'set-trigger' : \" + AutoScaling.SCHEDULED_MAINTENANCE_TRIGGER_DSL + \"}\");\n    NamedList<Object> response = solrClient.request(req);\n    assertEquals(response.get(\"result\").toString(), \"success\");\n    AutoScalingConfig autoScalingConfig = cloudManager.getDistribStateManager().getAutoScalingConfig();\n    if (autoScalingConfig.getTriggerListenerConfigs().containsKey(\"foo\")) {\n      String cmd = \"{\" +\n          \"'remove-listener' : {'name' : 'foo'}\" +\n          \"}\";\n      response = solrClient.request(AutoScalingRequest.create(SolrRequest.METHOD.POST, cmd));\n      assertEquals(response.get(\"result\").toString(), \"success\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9c6c0dad4932399aec99b4818086cb1772773916":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["89948af0461fead48f44ba8fb7866f107ce83f22"],"3f504512a03d978990cbff30db0522b354e846db":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"89948af0461fead48f44ba8fb7866f107ce83f22":["9c6c0dad4932399aec99b4818086cb1772773916"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"9c6c0dad4932399aec99b4818086cb1772773916":["89948af0461fead48f44ba8fb7866f107ce83f22"],"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["3f504512a03d978990cbff30db0522b354e846db"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9c6c0dad4932399aec99b4818086cb1772773916"],"89948af0461fead48f44ba8fb7866f107ce83f22":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}