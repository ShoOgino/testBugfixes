{"path":"src/java/org/apache/solr/search/SortedIntDocSet#firstNonSorted(int[],int,int).mjava","commits":[{"id":"19a6a2b00bd8d0dbd9684de00bb3018e4664a1e5","date":1247703137,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/SortedIntDocSet#firstNonSorted(int[],int,int).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the index of the first non-sorted element or -1 if they are all sorted */\n  public static int firstNonSorted(int[] arr, int offset, int len) {\n    if (len <= 1) return -1;\n    int lower = arr[offset];\n    int end = offset + len;\n    for(int i=offset+1; i<end; i++) {\n      int next = arr[i];\n      if (next <= lower) {\n        for (int j=i-1; j>offset; j--) {\n          if (arr[j]<next) return j+1;\n        }\n        return offset;\n      }\n      lower = next;\n    }\n    return -1;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/SortedIntDocSet#firstNonSorted(int[],int,int).mjava","pathOld":"src/java/org/apache/solr/search/SortedIntDocSet#firstNonSorted(int[],int,int).mjava","sourceNew":"  /** Returns the index of the first non-sorted element or -1 if they are all sorted */\n  public static int firstNonSorted(int[] arr, int offset, int len) {\n    if (len <= 1) return -1;\n    int lower = arr[offset];\n    int end = offset + len;\n    for(int i=offset+1; i<end; i++) {\n      int next = arr[i];\n      if (next <= lower) {\n        for (int j=i-1; j>offset; j--) {\n          if (arr[j]<next) return j+1;\n        }\n        return offset;\n      }\n      lower = next;\n    }\n    return -1;\n  }\n\n","sourceOld":"  /** Returns the index of the first non-sorted element or -1 if they are all sorted */\n  public static int firstNonSorted(int[] arr, int offset, int len) {\n    if (len <= 1) return -1;\n    int lower = arr[offset];\n    int end = offset + len;\n    for(int i=offset+1; i<end; i++) {\n      int next = arr[i];\n      if (next <= lower) {\n        for (int j=i-1; j>offset; j--) {\n          if (arr[j]<next) return j+1;\n        }\n        return offset;\n      }\n      lower = next;\n    }\n    return -1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["19a6a2b00bd8d0dbd9684de00bb3018e4664a1e5"],"19a6a2b00bd8d0dbd9684de00bb3018e4664a1e5":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["19a6a2b00bd8d0dbd9684de00bb3018e4664a1e5"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"19a6a2b00bd8d0dbd9684de00bb3018e4664a1e5":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}