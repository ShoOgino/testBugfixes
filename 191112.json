{"path":"solr/core/src/java/org/apache/solr/security/AuthenticationPlugin#initializeMetrics(SolrMetricManager,String,String,String).mjava","commits":[{"id":"85397dd93927c17347c6bf89800cd0fc566c2d03","date":1544610812,"type":0,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/AuthenticationPlugin#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String tag, final String scope) {\n    this.metricManager = manager;\n    this.registryName = registryName;\n    // Metrics\n    registry = manager.registry(registryName);\n    numErrors = manager.meter(this, registryName, \"errors\", getCategory().toString(), scope);\n    requests = manager.counter(this, registryName, \"requests\", getCategory().toString(), scope);\n    numAuthenticated = manager.counter(this, registryName, \"authenticated\", getCategory().toString(), scope);\n    numPassThrough = manager.counter(this, registryName, \"passThrough\", getCategory().toString(), scope);\n    numWrongCredentials = manager.counter(this, registryName, \"failWrongCredentials\", getCategory().toString(), scope);\n    numMissingCredentials = manager.counter(this, registryName, \"failMissingCredentials\", getCategory().toString(), scope);\n    requestTimes = manager.timer(this, registryName, \"requestTimes\", getCategory().toString(), scope);\n    totalTime = manager.counter(this, registryName, \"totalTime\", getCategory().toString(), scope);\n    metricNames.addAll(Arrays.asList(\"errors\", \"requests\", \"authenticated\", \"passThrough\",\n        \"failWrongCredentials\", \"failMissingCredentials\", \"requestTimes\", \"totalTime\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a117d95183986014a31f25bb04e5464ca06d6068","date":1566208086,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/security/AuthenticationPlugin#initializeMetrics(SolrMetricManager,String,String,String).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String tag, final String scope) {\n    this.metricManager = manager;\n    this.registryName = registryName;\n    // Metrics\n    registry = manager.registry(registryName);\n    numErrors = manager.meter(this, registryName, \"errors\", getCategory().toString(), scope);\n    requests = manager.counter(this, registryName, \"requests\", getCategory().toString(), scope);\n    numAuthenticated = manager.counter(this, registryName, \"authenticated\", getCategory().toString(), scope);\n    numPassThrough = manager.counter(this, registryName, \"passThrough\", getCategory().toString(), scope);\n    numWrongCredentials = manager.counter(this, registryName, \"failWrongCredentials\", getCategory().toString(), scope);\n    numMissingCredentials = manager.counter(this, registryName, \"failMissingCredentials\", getCategory().toString(), scope);\n    requestTimes = manager.timer(this, registryName, \"requestTimes\", getCategory().toString(), scope);\n    totalTime = manager.counter(this, registryName, \"totalTime\", getCategory().toString(), scope);\n    metricNames.addAll(Arrays.asList(\"errors\", \"requests\", \"authenticated\", \"passThrough\",\n        \"failWrongCredentials\", \"failMissingCredentials\", \"requestTimes\", \"totalTime\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17c468812fc0c60f3d66b176339dc70564d8c3cb","date":1567918667,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/AuthenticationPlugin#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String tag, final String scope) {\n    this.metricManager = manager;\n    this.registryName = registryName;\n    // Metrics\n    registry = manager.registry(registryName);\n    numErrors = manager.meter(this, registryName, \"errors\", getCategory().toString(), scope);\n    requests = manager.counter(this, registryName, \"requests\", getCategory().toString(), scope);\n    numAuthenticated = manager.counter(this, registryName, \"authenticated\", getCategory().toString(), scope);\n    numPassThrough = manager.counter(this, registryName, \"passThrough\", getCategory().toString(), scope);\n    numWrongCredentials = manager.counter(this, registryName, \"failWrongCredentials\", getCategory().toString(), scope);\n    numMissingCredentials = manager.counter(this, registryName, \"failMissingCredentials\", getCategory().toString(), scope);\n    requestTimes = manager.timer(this, registryName, \"requestTimes\", getCategory().toString(), scope);\n    totalTime = manager.counter(this, registryName, \"totalTime\", getCategory().toString(), scope);\n    metricNames.addAll(Arrays.asList(\"errors\", \"requests\", \"authenticated\", \"passThrough\",\n        \"failWrongCredentials\", \"failMissingCredentials\", \"requestTimes\", \"totalTime\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52275555c0ae3b55430cef26ad7fca3f02440944","date":1568033329,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/security/AuthenticationPlugin#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String tag, final String scope) {\n    this.metricManager = manager;\n    this.registryName = registryName;\n    // Metrics\n    registry = manager.registry(registryName);\n    numErrors = manager.meter(this, registryName, \"errors\", getCategory().toString(), scope);\n    requests = manager.counter(this, registryName, \"requests\", getCategory().toString(), scope);\n    numAuthenticated = manager.counter(this, registryName, \"authenticated\", getCategory().toString(), scope);\n    numPassThrough = manager.counter(this, registryName, \"passThrough\", getCategory().toString(), scope);\n    numWrongCredentials = manager.counter(this, registryName, \"failWrongCredentials\", getCategory().toString(), scope);\n    numMissingCredentials = manager.counter(this, registryName, \"failMissingCredentials\", getCategory().toString(), scope);\n    requestTimes = manager.timer(this, registryName, \"requestTimes\", getCategory().toString(), scope);\n    totalTime = manager.counter(this, registryName, \"totalTime\", getCategory().toString(), scope);\n    metricNames.addAll(Arrays.asList(\"errors\", \"requests\", \"authenticated\", \"passThrough\",\n        \"failWrongCredentials\", \"failMissingCredentials\", \"requestTimes\", \"totalTime\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa","date":1571411704,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/security/AuthenticationPlugin#initializeMetrics(SolrMetricManager,String,String,String).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String tag, final String scope) {\n    this.metricManager = manager;\n    this.registryName = registryName;\n    // Metrics\n    registry = manager.registry(registryName);\n    numErrors = manager.meter(this, registryName, \"errors\", getCategory().toString(), scope);\n    requests = manager.counter(this, registryName, \"requests\", getCategory().toString(), scope);\n    numAuthenticated = manager.counter(this, registryName, \"authenticated\", getCategory().toString(), scope);\n    numPassThrough = manager.counter(this, registryName, \"passThrough\", getCategory().toString(), scope);\n    numWrongCredentials = manager.counter(this, registryName, \"failWrongCredentials\", getCategory().toString(), scope);\n    numMissingCredentials = manager.counter(this, registryName, \"failMissingCredentials\", getCategory().toString(), scope);\n    requestTimes = manager.timer(this, registryName, \"requestTimes\", getCategory().toString(), scope);\n    totalTime = manager.counter(this, registryName, \"totalTime\", getCategory().toString(), scope);\n    metricNames.addAll(Arrays.asList(\"errors\", \"requests\", \"authenticated\", \"passThrough\",\n        \"failWrongCredentials\", \"failMissingCredentials\", \"requestTimes\", \"totalTime\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"52275555c0ae3b55430cef26ad7fca3f02440944":["a117d95183986014a31f25bb04e5464ca06d6068","17c468812fc0c60f3d66b176339dc70564d8c3cb"],"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa":["52275555c0ae3b55430cef26ad7fca3f02440944"],"85397dd93927c17347c6bf89800cd0fc566c2d03":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a117d95183986014a31f25bb04e5464ca06d6068":["85397dd93927c17347c6bf89800cd0fc566c2d03"],"17c468812fc0c60f3d66b176339dc70564d8c3cb":["a117d95183986014a31f25bb04e5464ca06d6068"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa"]},"commit2Childs":{"52275555c0ae3b55430cef26ad7fca3f02440944":["c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa"],"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"85397dd93927c17347c6bf89800cd0fc566c2d03":["a117d95183986014a31f25bb04e5464ca06d6068"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["85397dd93927c17347c6bf89800cd0fc566c2d03"],"a117d95183986014a31f25bb04e5464ca06d6068":["52275555c0ae3b55430cef26ad7fca3f02440944","17c468812fc0c60f3d66b176339dc70564d8c3cb"],"17c468812fc0c60f3d66b176339dc70564d8c3cb":["52275555c0ae3b55430cef26ad7fca3f02440944"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}