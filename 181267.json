{"path":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testGetHostName().mjava","commits":[{"id":"8a9d31fcebe090a8792e9ec09634c3671ef6a847","date":1388069791,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testGetHostName().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testGetHostName() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    CoreContainer cc = null;\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      ZkController zkController = null;\n\n      try {\n        zkController = new ZkController(cc, server.getZkAddress(), TIMEOUT, 10000,\n            \"http://127.0.0.1\", \"8983\", \"solr\", 0, true, new CurrentCoreDescriptorProvider() {\n\n          @Override\n          public List<CoreDescriptor> getCurrentDescriptors() {\n            // do nothing\n            return null;\n          }\n        });\n      } catch (IllegalArgumentException e) {\n        fail(\"ZkController did not normalize host name correctly\");\n      } finally {\n        if (zkController != null)\n          zkController.close();\n      }\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0b5db1c20d7a379233ae3955449a9e42caef007","date":1394048511,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testGetHostName().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testGetHostName().mjava","sourceNew":"  @Test\n  public void testGetHostName() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    CoreContainer cc = null;\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      ZkController zkController = null;\n\n      try {\n        zkController = new ZkController(cc, server.getZkAddress(), TIMEOUT, 10000,\n            \"http://127.0.0.1\", \"8983\", \"solr\", 0, 60000, true, new CurrentCoreDescriptorProvider() {\n\n          @Override\n          public List<CoreDescriptor> getCurrentDescriptors() {\n            // do nothing\n            return null;\n          }\n        });\n      } catch (IllegalArgumentException e) {\n        fail(\"ZkController did not normalize host name correctly\");\n      } finally {\n        if (zkController != null)\n          zkController.close();\n      }\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testGetHostName() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    CoreContainer cc = null;\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      ZkController zkController = null;\n\n      try {\n        zkController = new ZkController(cc, server.getZkAddress(), TIMEOUT, 10000,\n            \"http://127.0.0.1\", \"8983\", \"solr\", 0, true, new CurrentCoreDescriptorProvider() {\n\n          @Override\n          public List<CoreDescriptor> getCurrentDescriptors() {\n            // do nothing\n            return null;\n          }\n        });\n      } catch (IllegalArgumentException e) {\n        fail(\"ZkController did not normalize host name correctly\");\n      } finally {\n        if (zkController != null)\n          zkController.close();\n      }\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"96ea64d994d340044e0d57aeb6a5871539d10ca5","date":1394225445,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testGetHostName().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testGetHostName().mjava","sourceNew":"  @Test\n  public void testGetHostName() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    CoreContainer cc = null;\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      ZkController zkController = null;\n\n      try {\n        zkController = new ZkController(cc, server.getZkAddress(), TIMEOUT, 10000,\n            \"http://127.0.0.1\", \"8983\", \"solr\", 0, 60000, true, new CurrentCoreDescriptorProvider() {\n\n          @Override\n          public List<CoreDescriptor> getCurrentDescriptors() {\n            // do nothing\n            return null;\n          }\n        });\n      } catch (IllegalArgumentException e) {\n        fail(\"ZkController did not normalize host name correctly\");\n      } finally {\n        if (zkController != null)\n          zkController.close();\n      }\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testGetHostName() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    CoreContainer cc = null;\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      ZkController zkController = null;\n\n      try {\n        zkController = new ZkController(cc, server.getZkAddress(), TIMEOUT, 10000,\n            \"http://127.0.0.1\", \"8983\", \"solr\", 0, true, new CurrentCoreDescriptorProvider() {\n\n          @Override\n          public List<CoreDescriptor> getCurrentDescriptors() {\n            // do nothing\n            return null;\n          }\n        });\n      } catch (IllegalArgumentException e) {\n        fail(\"ZkController did not normalize host name correctly\");\n      } finally {\n        if (zkController != null)\n          zkController.close();\n      }\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testGetHostName().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testGetHostName().mjava","sourceNew":"  @Test\n  public void testGetHostName() throws Exception {\n    String zkDir = createTempDir().getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    CoreContainer cc = null;\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      ZkController zkController = null;\n\n      try {\n        zkController = new ZkController(cc, server.getZkAddress(), TIMEOUT, 10000,\n            \"http://127.0.0.1\", \"8983\", \"solr\", 0, 60000, true, new CurrentCoreDescriptorProvider() {\n\n          @Override\n          public List<CoreDescriptor> getCurrentDescriptors() {\n            // do nothing\n            return null;\n          }\n        });\n      } catch (IllegalArgumentException e) {\n        fail(\"ZkController did not normalize host name correctly\");\n      } finally {\n        if (zkController != null)\n          zkController.close();\n      }\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testGetHostName() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    CoreContainer cc = null;\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      ZkController zkController = null;\n\n      try {\n        zkController = new ZkController(cc, server.getZkAddress(), TIMEOUT, 10000,\n            \"http://127.0.0.1\", \"8983\", \"solr\", 0, 60000, true, new CurrentCoreDescriptorProvider() {\n\n          @Override\n          public List<CoreDescriptor> getCurrentDescriptors() {\n            // do nothing\n            return null;\n          }\n        });\n      } catch (IllegalArgumentException e) {\n        fail(\"ZkController did not normalize host name correctly\");\n      } finally {\n        if (zkController != null)\n          zkController.close();\n      }\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e9ce820cd3ed9efb959c181daaafd22f0c70143","date":1396201051,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testGetHostName().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testGetHostName().mjava","sourceNew":"  @Test\n  public void testGetHostName() throws Exception {\n    String zkDir = createTempDir(\"zkData\").getAbsolutePath();\n    CoreContainer cc = null;\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      ZkController zkController = null;\n\n      try {\n        zkController = new ZkController(cc, server.getZkAddress(), TIMEOUT, 10000,\n            \"http://127.0.0.1\", \"8983\", \"solr\", 0, 60000, true, new CurrentCoreDescriptorProvider() {\n\n          @Override\n          public List<CoreDescriptor> getCurrentDescriptors() {\n            // do nothing\n            return null;\n          }\n        });\n      } catch (IllegalArgumentException e) {\n        fail(\"ZkController did not normalize host name correctly\");\n      } finally {\n        if (zkController != null)\n          zkController.close();\n      }\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testGetHostName() throws Exception {\n    String zkDir = createTempDir().getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    CoreContainer cc = null;\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      ZkController zkController = null;\n\n      try {\n        zkController = new ZkController(cc, server.getZkAddress(), TIMEOUT, 10000,\n            \"http://127.0.0.1\", \"8983\", \"solr\", 0, 60000, true, new CurrentCoreDescriptorProvider() {\n\n          @Override\n          public List<CoreDescriptor> getCurrentDescriptors() {\n            // do nothing\n            return null;\n          }\n        });\n      } catch (IllegalArgumentException e) {\n        fail(\"ZkController did not normalize host name correctly\");\n      } finally {\n        if (zkController != null)\n          zkController.close();\n      }\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n  }\n\n","bugFix":["bb1f22cfa77230b5f05b7784feae5367f6bbb488","8a9d31fcebe090a8792e9ec09634c3671ef6a847"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testGetHostName().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testGetHostName().mjava","sourceNew":"  @Test\n  public void testGetHostName() throws Exception {\n    String zkDir = createTempDir(\"zkData\").getAbsolutePath();\n    CoreContainer cc = null;\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      ZkController zkController = null;\n\n      try {\n        zkController = new ZkController(cc, server.getZkAddress(), TIMEOUT, 10000,\n            \"http://127.0.0.1\", \"8983\", \"solr\", 0, 60000, true, new CurrentCoreDescriptorProvider() {\n\n          @Override\n          public List<CoreDescriptor> getCurrentDescriptors() {\n            // do nothing\n            return null;\n          }\n        });\n      } catch (IllegalArgumentException e) {\n        fail(\"ZkController did not normalize host name correctly\");\n      } finally {\n        if (zkController != null)\n          zkController.close();\n      }\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testGetHostName() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    CoreContainer cc = null;\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      ZkController zkController = null;\n\n      try {\n        zkController = new ZkController(cc, server.getZkAddress(), TIMEOUT, 10000,\n            \"http://127.0.0.1\", \"8983\", \"solr\", 0, 60000, true, new CurrentCoreDescriptorProvider() {\n\n          @Override\n          public List<CoreDescriptor> getCurrentDescriptors() {\n            // do nothing\n            return null;\n          }\n        });\n      } catch (IllegalArgumentException e) {\n        fail(\"ZkController did not normalize host name correctly\");\n      } finally {\n        if (zkController != null)\n          zkController.close();\n      }\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testGetHostName().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testGetHostName().mjava","sourceNew":"  @Test\n  public void testGetHostName() throws Exception {\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();\n    CoreContainer cc = null;\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      ZkController zkController = null;\n\n      try {\n        zkController = new ZkController(cc, server.getZkAddress(), TIMEOUT, 10000,\n            \"http://127.0.0.1\", \"8983\", \"solr\", 0, 60000, true, new CurrentCoreDescriptorProvider() {\n\n          @Override\n          public List<CoreDescriptor> getCurrentDescriptors() {\n            // do nothing\n            return null;\n          }\n        });\n      } catch (IllegalArgumentException e) {\n        fail(\"ZkController did not normalize host name correctly\");\n      } finally {\n        if (zkController != null)\n          zkController.close();\n      }\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testGetHostName() throws Exception {\n    String zkDir = createTempDir(\"zkData\").getAbsolutePath();\n    CoreContainer cc = null;\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      ZkController zkController = null;\n\n      try {\n        zkController = new ZkController(cc, server.getZkAddress(), TIMEOUT, 10000,\n            \"http://127.0.0.1\", \"8983\", \"solr\", 0, 60000, true, new CurrentCoreDescriptorProvider() {\n\n          @Override\n          public List<CoreDescriptor> getCurrentDescriptors() {\n            // do nothing\n            return null;\n          }\n        });\n      } catch (IllegalArgumentException e) {\n        fail(\"ZkController did not normalize host name correctly\");\n      } finally {\n        if (zkController != null)\n          zkController.close();\n      }\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e15199583d3635cb940942caed05132dd6c4c7c6","date":1424875551,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testGetHostName().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testGetHostName().mjava","sourceNew":"  public void testGetHostName() throws Exception {\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();\n    CoreContainer cc = null;\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      ZkController zkController = null;\n\n      try {\n        CloudConfig cloudConfig = new CloudConfig.CloudConfigBuilder(\"127.0.0.1\", 8983, \"solr\").build();\n        zkController = new ZkController(cc, server.getZkAddress(), TIMEOUT, cloudConfig, new CurrentCoreDescriptorProvider() {\n\n          @Override\n          public List<CoreDescriptor> getCurrentDescriptors() {\n            // do nothing\n            return null;\n          }\n        });\n      } catch (IllegalArgumentException e) {\n        fail(\"ZkController did not normalize host name correctly\");\n      } finally {\n        if (zkController != null)\n          zkController.close();\n      }\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testGetHostName() throws Exception {\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();\n    CoreContainer cc = null;\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      ZkController zkController = null;\n\n      try {\n        zkController = new ZkController(cc, server.getZkAddress(), TIMEOUT, 10000,\n            \"http://127.0.0.1\", \"8983\", \"solr\", 0, 60000, true, new CurrentCoreDescriptorProvider() {\n\n          @Override\n          public List<CoreDescriptor> getCurrentDescriptors() {\n            // do nothing\n            return null;\n          }\n        });\n      } catch (IllegalArgumentException e) {\n        fail(\"ZkController did not normalize host name correctly\");\n      } finally {\n        if (zkController != null)\n          zkController.close();\n      }\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testGetHostName().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testGetHostName().mjava","sourceNew":"  public void testGetHostName() throws Exception {\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();\n    CoreContainer cc = null;\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      ZkController zkController = null;\n\n      try {\n        CloudConfig cloudConfig = new CloudConfig.CloudConfigBuilder(\"127.0.0.1\", 8983, \"solr\").build();\n        zkController = new ZkController(cc, server.getZkAddress(), TIMEOUT, cloudConfig, new CurrentCoreDescriptorProvider() {\n\n          @Override\n          public List<CoreDescriptor> getCurrentDescriptors() {\n            // do nothing\n            return null;\n          }\n        });\n      } catch (IllegalArgumentException e) {\n        fail(\"ZkController did not normalize host name correctly\");\n      } finally {\n        if (zkController != null)\n          zkController.close();\n      }\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testGetHostName() throws Exception {\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();\n    CoreContainer cc = null;\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      ZkController zkController = null;\n\n      try {\n        zkController = new ZkController(cc, server.getZkAddress(), TIMEOUT, 10000,\n            \"http://127.0.0.1\", \"8983\", \"solr\", 0, 60000, true, new CurrentCoreDescriptorProvider() {\n\n          @Override\n          public List<CoreDescriptor> getCurrentDescriptors() {\n            // do nothing\n            return null;\n          }\n        });\n      } catch (IllegalArgumentException e) {\n        fail(\"ZkController did not normalize host name correctly\");\n      } finally {\n        if (zkController != null)\n          zkController.close();\n      }\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testGetHostName().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testGetHostName().mjava","sourceNew":"  public void testGetHostName() throws Exception {\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();\n    CoreContainer cc = null;\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      cc = getCoreContainer();\n      ZkController zkController = null;\n\n      try {\n        CloudConfig cloudConfig = new CloudConfig.CloudConfigBuilder(\"127.0.0.1\", 8983, \"solr\").build();\n        zkController = new ZkController(cc, server.getZkAddress(), TIMEOUT, cloudConfig, new CurrentCoreDescriptorProvider() {\n\n          @Override\n          public List<CoreDescriptor> getCurrentDescriptors() {\n            // do nothing\n            return null;\n          }\n        });\n      } catch (IllegalArgumentException e) {\n        fail(\"ZkController did not normalize host name correctly\");\n      } finally {\n        if (zkController != null)\n          zkController.close();\n      }\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n  }\n\n","sourceOld":"  public void testGetHostName() throws Exception {\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();\n    CoreContainer cc = null;\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      cc = getCoreContainer();\n      ZkController zkController = null;\n\n      try {\n        CloudConfig cloudConfig = new CloudConfig.CloudConfigBuilder(\"127.0.0.1\", 8983, \"solr\").build();\n        zkController = new ZkController(cc, server.getZkAddress(), TIMEOUT, cloudConfig, new CurrentCoreDescriptorProvider() {\n\n          @Override\n          public List<CoreDescriptor> getCurrentDescriptors() {\n            // do nothing\n            return null;\n          }\n        });\n      } catch (IllegalArgumentException e) {\n        fail(\"ZkController did not normalize host name correctly\");\n      } finally {\n        if (zkController != null)\n          zkController.close();\n      }\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n  }\n\n","bugFix":["8a9d31fcebe090a8792e9ec09634c3671ef6a847"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1778938cb7fb298e6e07a43e2d5acaf552d61518","date":1559609435,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testGetHostName().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testGetHostName().mjava","sourceNew":"  public void testGetHostName() throws Exception {\n    Path zkDir = createTempDir(\"zkData\");\n    CoreContainer cc = null;\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      cc = getCoreContainer();\n      ZkController zkController = null;\n\n      try {\n        CloudConfig cloudConfig = new CloudConfig.CloudConfigBuilder(\"127.0.0.1\", 8983, \"solr\").build();\n        zkController = new ZkController(cc, server.getZkAddress(), TIMEOUT, cloudConfig, new CurrentCoreDescriptorProvider() {\n\n          @Override\n          public List<CoreDescriptor> getCurrentDescriptors() {\n            // do nothing\n            return null;\n          }\n        });\n      } catch (IllegalArgumentException e) {\n        fail(\"ZkController did not normalize host name correctly\");\n      } finally {\n        if (zkController != null)\n          zkController.close();\n      }\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n  }\n\n","sourceOld":"  public void testGetHostName() throws Exception {\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();\n    CoreContainer cc = null;\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      cc = getCoreContainer();\n      ZkController zkController = null;\n\n      try {\n        CloudConfig cloudConfig = new CloudConfig.CloudConfigBuilder(\"127.0.0.1\", 8983, \"solr\").build();\n        zkController = new ZkController(cc, server.getZkAddress(), TIMEOUT, cloudConfig, new CurrentCoreDescriptorProvider() {\n\n          @Override\n          public List<CoreDescriptor> getCurrentDescriptors() {\n            // do nothing\n            return null;\n          }\n        });\n      } catch (IllegalArgumentException e) {\n        fail(\"ZkController did not normalize host name correctly\");\n      } finally {\n        if (zkController != null)\n          zkController.close();\n      }\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c560208bc8842ee884b76b08784ccb132f05b48","date":1585344697,"type":3,"author":"Mike","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testGetHostName().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testGetHostName().mjava","sourceNew":"  public void testGetHostName() throws Exception {\n    Path zkDir = createTempDir(\"zkData\");\n    CoreContainer cc = null;\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      cc = getCoreContainer();\n      ZkController zkController = null;\n\n      try {\n        CloudConfig cloudConfig = new CloudConfig.CloudConfigBuilder(\"127.0.0.1\", 8983, \"solr\").build();\n        zkController = new ZkController(cc, server.getZkAddress(), TIMEOUT, cloudConfig, () -> null);\n      } catch (IllegalArgumentException e) {\n        fail(\"ZkController did not normalize host name correctly\");\n      } finally {\n        if (zkController != null)\n          zkController.close();\n      }\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n  }\n\n","sourceOld":"  public void testGetHostName() throws Exception {\n    Path zkDir = createTempDir(\"zkData\");\n    CoreContainer cc = null;\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      cc = getCoreContainer();\n      ZkController zkController = null;\n\n      try {\n        CloudConfig cloudConfig = new CloudConfig.CloudConfigBuilder(\"127.0.0.1\", 8983, \"solr\").build();\n        zkController = new ZkController(cc, server.getZkAddress(), TIMEOUT, cloudConfig, new CurrentCoreDescriptorProvider() {\n\n          @Override\n          public List<CoreDescriptor> getCurrentDescriptors() {\n            // do nothing\n            return null;\n          }\n        });\n      } catch (IllegalArgumentException e) {\n        fail(\"ZkController did not normalize host name correctly\");\n      } finally {\n        if (zkController != null)\n          zkController.close();\n      }\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n      server.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"96ea64d994d340044e0d57aeb6a5871539d10ca5":["8a9d31fcebe090a8792e9ec09634c3671ef6a847","a0b5db1c20d7a379233ae3955449a9e42caef007"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["a0b5db1c20d7a379233ae3955449a9e42caef007"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["a0b5db1c20d7a379233ae3955449a9e42caef007","1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"1c560208bc8842ee884b76b08784ccb132f05b48":["1778938cb7fb298e6e07a43e2d5acaf552d61518"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["e15199583d3635cb940942caed05132dd6c4c7c6"],"a0b5db1c20d7a379233ae3955449a9e42caef007":["8a9d31fcebe090a8792e9ec09634c3671ef6a847"],"f4abec28b874149a7223e32cc7a01704c27790de":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"e15199583d3635cb940942caed05132dd6c4c7c6":["f4abec28b874149a7223e32cc7a01704c27790de"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["f4abec28b874149a7223e32cc7a01704c27790de","e15199583d3635cb940942caed05132dd6c4c7c6"],"8a9d31fcebe090a8792e9ec09634c3671ef6a847":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"1778938cb7fb298e6e07a43e2d5acaf552d61518":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1c560208bc8842ee884b76b08784ccb132f05b48"]},"commit2Childs":{"96ea64d994d340044e0d57aeb6a5871539d10ca5":[],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["f4abec28b874149a7223e32cc7a01704c27790de"],"1c560208bc8842ee884b76b08784ccb132f05b48":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["1778938cb7fb298e6e07a43e2d5acaf552d61518"],"a0b5db1c20d7a379233ae3955449a9e42caef007":["96ea64d994d340044e0d57aeb6a5871539d10ca5","bb1f22cfa77230b5f05b7784feae5367f6bbb488","2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"f4abec28b874149a7223e32cc7a01704c27790de":["e15199583d3635cb940942caed05132dd6c4c7c6","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"e15199583d3635cb940942caed05132dd6c4c7c6":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"8a9d31fcebe090a8792e9ec09634c3671ef6a847":["96ea64d994d340044e0d57aeb6a5871539d10ca5","a0b5db1c20d7a379233ae3955449a9e42caef007"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8a9d31fcebe090a8792e9ec09634c3671ef6a847"],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"1778938cb7fb298e6e07a43e2d5acaf552d61518":["1c560208bc8842ee884b76b08784ccb132f05b48"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["96ea64d994d340044e0d57aeb6a5871539d10ca5","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}