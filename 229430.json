{"path":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#OfflinePointWriter(Directory,IndexOutput,int,long,boolean,boolean).mjava","commits":[{"id":"416f9e28900210be57b69bc12e2954fb98ed7ebe","date":1458479803,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#OfflinePointWriter(Directory,IndexOutput,int,long,boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#OfflinePointWriter(Directory,IndexOutput,int,long,boolean).mjava","sourceNew":"  /** Initializes on an already written/closed file, just so consumers can use {@link #getReader} to read the file. */\n  public OfflinePointWriter(Directory tempDir, IndexOutput out, int packedBytesLength, long count, boolean longOrds, boolean singleValuePerDoc) {\n    this.out = out;\n    this.tempDir = tempDir;\n    this.packedBytesLength = packedBytesLength;\n    this.count = count;\n    closed = true;\n    this.longOrds = longOrds;\n    this.singleValuePerDoc = singleValuePerDoc;\n  }\n\n","sourceOld":"  /** Initializes on an already written/closed file, just so consumers can use {@link #getReader} to read the file. */\n  public OfflinePointWriter(Directory tempDir, IndexOutput out, int packedBytesLength, long count, boolean longOrds) {\n    this.out = out;\n    this.tempDir = tempDir;\n    this.packedBytesLength = packedBytesLength;\n    this.count = count;\n    closed = true;\n    this.longOrds = longOrds;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51b2a4c0f6c28a8ba7c41911b421cea2ede8ef40","date":1458553787,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#OfflinePointWriter(Directory,IndexOutput,int,long,boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#OfflinePointWriter(Directory,IndexOutput,int,long,boolean,boolean).mjava","sourceNew":"  /** Initializes on an already written/closed file, just so consumers can use {@link #getReader} to read the file. */\n  public OfflinePointWriter(Directory tempDir, IndexOutput out, int packedBytesLength, long count, boolean longOrds, boolean singleValuePerDoc) {\n    this.out = out;\n    this.tempDir = tempDir;\n    this.packedBytesLength = packedBytesLength;\n    this.count = count;\n    closed = true;\n    this.longOrds = longOrds;\n    this.singleValuePerDoc = singleValuePerDoc;\n    this.expectedCount = 0;\n  }\n\n","sourceOld":"  /** Initializes on an already written/closed file, just so consumers can use {@link #getReader} to read the file. */\n  public OfflinePointWriter(Directory tempDir, IndexOutput out, int packedBytesLength, long count, boolean longOrds, boolean singleValuePerDoc) {\n    this.out = out;\n    this.tempDir = tempDir;\n    this.packedBytesLength = packedBytesLength;\n    this.count = count;\n    closed = true;\n    this.longOrds = longOrds;\n    this.singleValuePerDoc = singleValuePerDoc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee52259641568741fbc6ecc51284431e2a36475c","date":1459331525,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#OfflinePointWriter(Directory,String,int,long,boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#OfflinePointWriter(Directory,IndexOutput,int,long,boolean,boolean).mjava","sourceNew":"  /** Initializes on an already written/closed file, just so consumers can use {@link #getReader} to read the file. */\n  public OfflinePointWriter(Directory tempDir, String name, int packedBytesLength, long count, boolean longOrds, boolean singleValuePerDoc) {\n    this.out = null;\n    this.name = name;\n    this.tempDir = tempDir;\n    this.packedBytesLength = packedBytesLength;\n    this.count = count;\n    closed = true;\n    this.longOrds = longOrds;\n    this.singleValuePerDoc = singleValuePerDoc;\n    this.expectedCount = 0;\n  }\n\n","sourceOld":"  /** Initializes on an already written/closed file, just so consumers can use {@link #getReader} to read the file. */\n  public OfflinePointWriter(Directory tempDir, IndexOutput out, int packedBytesLength, long count, boolean longOrds, boolean singleValuePerDoc) {\n    this.out = out;\n    this.tempDir = tempDir;\n    this.packedBytesLength = packedBytesLength;\n    this.count = count;\n    closed = true;\n    this.longOrds = longOrds;\n    this.singleValuePerDoc = singleValuePerDoc;\n    this.expectedCount = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"51b2a4c0f6c28a8ba7c41911b421cea2ede8ef40":["416f9e28900210be57b69bc12e2954fb98ed7ebe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ee52259641568741fbc6ecc51284431e2a36475c":["51b2a4c0f6c28a8ba7c41911b421cea2ede8ef40"],"416f9e28900210be57b69bc12e2954fb98ed7ebe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ee52259641568741fbc6ecc51284431e2a36475c"]},"commit2Childs":{"51b2a4c0f6c28a8ba7c41911b421cea2ede8ef40":["ee52259641568741fbc6ecc51284431e2a36475c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["416f9e28900210be57b69bc12e2954fb98ed7ebe"],"ee52259641568741fbc6ecc51284431e2a36475c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"416f9e28900210be57b69bc12e2954fb98ed7ebe":["51b2a4c0f6c28a8ba7c41911b421cea2ede8ef40"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}