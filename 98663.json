{"path":"solr/core/src/test/org/apache/solr/rest/schema/analysis/TestManagedSynonymGraphFilterFactory#testCanHandleDecodingAndEncodingForSynonyms().mjava","commits":[{"id":"eb58c4024f450cc56f3a748012536d763700adb5","date":1495748960,"type":0,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/analysis/TestManagedSynonymGraphFilterFactory#testCanHandleDecodingAndEncodingForSynonyms().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Can we add and remove stopwords with umlauts\n   */\n  @Test\n  public void testCanHandleDecodingAndEncodingForSynonyms() throws Exception  {\n    String endpoint = \"/schema/analysis/synonyms/germangraph\";\n\n    assertJQ(endpoint,\n        \"/synonymMappings/initArgs/ignoreCase==false\",\n        \"/synonymMappings/managedMap=={}\");\n\n    // does not exist\n    assertJQ(endpoint+\"/fröhlich\",\n        \"/error/code==404\");\n\n    Map<String,List<String>> syns = new HashMap<>();\n\n    // now put a synonym\n    syns.put(\"fröhlich\", Arrays.asList(\"glücklick\"));\n    assertJPut(endpoint,\n        JSONUtil.toJSON(syns),\n        \"/responseHeader/status==0\");\n\n    // and check if it exists\n    assertJQ(endpoint,\n        \"/synonymMappings/managedMap/fröhlich==['glücklick']\");\n\n    // verify delete works\n    assertJDelete(endpoint+\"/fröhlich\",\n        \"/responseHeader/status==0\");\n\n\n    // was it really deleted?\n    assertJDelete(endpoint+\"/fröhlich\",\n        \"/error/code==404\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1f5728f32a4a256b36cfabd7a2636452f599bb9","date":1496231774,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/analysis/TestManagedSynonymGraphFilterFactory#testCanHandleDecodingAndEncodingForSynonyms().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Can we add and remove stopwords with umlauts\n   */\n  @Test\n  public void testCanHandleDecodingAndEncodingForSynonyms() throws Exception  {\n    String endpoint = \"/schema/analysis/synonyms/germangraph\";\n\n    assertJQ(endpoint,\n        \"/synonymMappings/initArgs/ignoreCase==false\",\n        \"/synonymMappings/managedMap=={}\");\n\n    // does not exist\n    assertJQ(endpoint+\"/fröhlich\",\n        \"/error/code==404\");\n\n    Map<String,List<String>> syns = new HashMap<>();\n\n    // now put a synonym\n    syns.put(\"fröhlich\", Arrays.asList(\"glücklick\"));\n    assertJPut(endpoint,\n        JSONUtil.toJSON(syns),\n        \"/responseHeader/status==0\");\n\n    // and check if it exists\n    assertJQ(endpoint,\n        \"/synonymMappings/managedMap/fröhlich==['glücklick']\");\n\n    // verify delete works\n    assertJDelete(endpoint+\"/fröhlich\",\n        \"/responseHeader/status==0\");\n\n\n    // was it really deleted?\n    assertJDelete(endpoint+\"/fröhlich\",\n        \"/error/code==404\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/analysis/TestManagedSynonymGraphFilterFactory#testCanHandleDecodingAndEncodingForSynonyms().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Can we add and remove stopwords with umlauts\n   */\n  @Test\n  public void testCanHandleDecodingAndEncodingForSynonyms() throws Exception  {\n    String endpoint = \"/schema/analysis/synonyms/germangraph\";\n\n    assertJQ(endpoint,\n        \"/synonymMappings/initArgs/ignoreCase==false\",\n        \"/synonymMappings/managedMap=={}\");\n\n    // does not exist\n    assertJQ(endpoint+\"/fröhlich\",\n        \"/error/code==404\");\n\n    Map<String,List<String>> syns = new HashMap<>();\n\n    // now put a synonym\n    syns.put(\"fröhlich\", Arrays.asList(\"glücklick\"));\n    assertJPut(endpoint,\n        JSONUtil.toJSON(syns),\n        \"/responseHeader/status==0\");\n\n    // and check if it exists\n    assertJQ(endpoint,\n        \"/synonymMappings/managedMap/fröhlich==['glücklick']\");\n\n    // verify delete works\n    assertJDelete(endpoint+\"/fröhlich\",\n        \"/responseHeader/status==0\");\n\n\n    // was it really deleted?\n    assertJDelete(endpoint+\"/fröhlich\",\n        \"/error/code==404\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3714bcf66a68a1600e9dd11442fc1b33b62ef088","date":1556832005,"type":3,"author":"noble","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/analysis/TestManagedSynonymGraphFilterFactory#testCanHandleDecodingAndEncodingForSynonyms().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/analysis/TestManagedSynonymGraphFilterFactory#testCanHandleDecodingAndEncodingForSynonyms().mjava","sourceNew":"  /**\n   * Can we add and remove stopwords with umlauts\n   */\n  @Test\n  public void testCanHandleDecodingAndEncodingForSynonyms() throws Exception  {\n    String endpoint = \"/schema/analysis/synonyms/germangraph\";\n\n    assertJQ(endpoint,\n        \"/synonymMappings/initArgs/ignoreCase==false\",\n        \"/synonymMappings/managedMap=={}\");\n\n    // does not exist\n    assertJQ(endpoint+\"/fröhlich\",\n        \"/error/code==404\");\n\n    Map<String,List<String>> syns = new HashMap<>();\n\n    // now put a synonym\n    syns.put(\"fröhlich\", Arrays.asList(\"glücklick\"));\n    assertJPut(endpoint,\n        toJSONString(syns),\n        \"/responseHeader/status==0\");\n\n    // and check if it exists\n    assertJQ(endpoint,\n        \"/synonymMappings/managedMap/fröhlich==['glücklick']\");\n\n    // verify delete works\n    assertJDelete(endpoint+\"/fröhlich\",\n        \"/responseHeader/status==0\");\n\n\n    // was it really deleted?\n    assertJDelete(endpoint+\"/fröhlich\",\n        \"/error/code==404\");\n  }\n\n","sourceOld":"  /**\n   * Can we add and remove stopwords with umlauts\n   */\n  @Test\n  public void testCanHandleDecodingAndEncodingForSynonyms() throws Exception  {\n    String endpoint = \"/schema/analysis/synonyms/germangraph\";\n\n    assertJQ(endpoint,\n        \"/synonymMappings/initArgs/ignoreCase==false\",\n        \"/synonymMappings/managedMap=={}\");\n\n    // does not exist\n    assertJQ(endpoint+\"/fröhlich\",\n        \"/error/code==404\");\n\n    Map<String,List<String>> syns = new HashMap<>();\n\n    // now put a synonym\n    syns.put(\"fröhlich\", Arrays.asList(\"glücklick\"));\n    assertJPut(endpoint,\n        JSONUtil.toJSON(syns),\n        \"/responseHeader/status==0\");\n\n    // and check if it exists\n    assertJQ(endpoint,\n        \"/synonymMappings/managedMap/fröhlich==['glücklick']\");\n\n    // verify delete works\n    assertJDelete(endpoint+\"/fröhlich\",\n        \"/responseHeader/status==0\");\n\n\n    // was it really deleted?\n    assertJDelete(endpoint+\"/fröhlich\",\n        \"/error/code==404\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","eb58c4024f450cc56f3a748012536d763700adb5"],"eb58c4024f450cc56f3a748012536d763700adb5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3714bcf66a68a1600e9dd11442fc1b33b62ef088":["d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","eb58c4024f450cc56f3a748012536d763700adb5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3714bcf66a68a1600e9dd11442fc1b33b62ef088"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"eb58c4024f450cc56f3a748012536d763700adb5":["e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","eb58c4024f450cc56f3a748012536d763700adb5","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"3714bcf66a68a1600e9dd11442fc1b33b62ef088":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["3714bcf66a68a1600e9dd11442fc1b33b62ef088"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}