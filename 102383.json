{"path":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowCollationMethods#testRangeFilter().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowCollationMethods#testRangeFilter().mjava","pathOld":"lucene/contrib/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowCollationMethods#testRangeFilter().mjava","sourceNew":"  public void testRangeFilter() throws Exception {\n    int numQueries = 50*RANDOM_MULTIPLIER;\n    for (int i = 0; i < numQueries; i++) {\n      String startPoint = _TestUtil.randomUnicodeString(random());\n      String endPoint = _TestUtil.randomUnicodeString(random());\n      Query query = new ConstantScoreQuery(new SlowCollatedTermRangeFilter(\"field\", startPoint, endPoint, true, true, collator));\n      doTestRanges(startPoint, endPoint, query);\n    }\n  }\n\n","sourceOld":"  public void testRangeFilter() throws Exception {\n    int numQueries = 50*RANDOM_MULTIPLIER;\n    for (int i = 0; i < numQueries; i++) {\n      String startPoint = _TestUtil.randomUnicodeString(random());\n      String endPoint = _TestUtil.randomUnicodeString(random());\n      Query query = new ConstantScoreQuery(new SlowCollatedTermRangeFilter(\"field\", startPoint, endPoint, true, true, collator));\n      doTestRanges(startPoint, endPoint, query);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowCollationMethods#testRangeFilter().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowCollationMethods#testRangeFilter().mjava","sourceNew":"  public void testRangeFilter() throws Exception {\n    int numQueries = 50*RANDOM_MULTIPLIER;\n    for (int i = 0; i < numQueries; i++) {\n      String startPoint = TestUtil.randomUnicodeString(random());\n      String endPoint = TestUtil.randomUnicodeString(random());\n      Query query = new ConstantScoreQuery(new SlowCollatedTermRangeFilter(\"field\", startPoint, endPoint, true, true, collator));\n      doTestRanges(startPoint, endPoint, query);\n    }\n  }\n\n","sourceOld":"  public void testRangeFilter() throws Exception {\n    int numQueries = 50*RANDOM_MULTIPLIER;\n    for (int i = 0; i < numQueries; i++) {\n      String startPoint = _TestUtil.randomUnicodeString(random());\n      String endPoint = _TestUtil.randomUnicodeString(random());\n      Query query = new ConstantScoreQuery(new SlowCollatedTermRangeFilter(\"field\", startPoint, endPoint, true, true, collator));\n      doTestRanges(startPoint, endPoint, query);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59cae262d4251e10e2a034b17c45776f6b4c7e68","date":1424712773,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowCollationMethods#testRangeFilter().mjava","sourceNew":null,"sourceOld":"  public void testRangeFilter() throws Exception {\n    int numQueries = 50*RANDOM_MULTIPLIER;\n    for (int i = 0; i < numQueries; i++) {\n      String startPoint = TestUtil.randomUnicodeString(random());\n      String endPoint = TestUtil.randomUnicodeString(random());\n      Query query = new ConstantScoreQuery(new SlowCollatedTermRangeFilter(\"field\", startPoint, endPoint, true, true, collator));\n      doTestRanges(startPoint, endPoint, query);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"59cae262d4251e10e2a034b17c45776f6b4c7e68":["6613659748fe4411a7dcf85266e55db1f95f7315"],"6613659748fe4411a7dcf85266e55db1f95f7315":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["59cae262d4251e10e2a034b17c45776f6b4c7e68"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["6613659748fe4411a7dcf85266e55db1f95f7315"],"59cae262d4251e10e2a034b17c45776f6b4c7e68":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6613659748fe4411a7dcf85266e55db1f95f7315":["59cae262d4251e10e2a034b17c45776f6b4c7e68"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}