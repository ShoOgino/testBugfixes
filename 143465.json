{"path":"lucene/core/src/java/org/apache/lucene/index/ReadersAndLiveDocs#dropReaders().mjava","commits":[{"id":"ae695f21c50b03702b5d0fa2543d5af844bb7cd3","date":1331554994,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndLiveDocs#dropReaders().mjava","pathOld":"/dev/null","sourceNew":"  // NOTE: removes callers ref\n  public synchronized void dropReaders() throws IOException {\n    if (reader != null) {\n      //System.out.println(\"  pool.drop info=\" + info + \" rc=\" + reader.getRefCount());\n      reader.decRef();\n      reader = null;\n    }\n    if (mergeReader != null) {\n      //System.out.println(\"  pool.drop info=\" + info + \" merge rc=\" + mergeReader.getRefCount());\n      mergeReader.decRef();\n      mergeReader = null;\n    }\n    decRef();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndLiveDocs#dropReaders().mjava","pathOld":"/dev/null","sourceNew":"  // NOTE: removes callers ref\n  public synchronized void dropReaders() throws IOException {\n    if (reader != null) {\n      //System.out.println(\"  pool.drop info=\" + info + \" rc=\" + reader.getRefCount());\n      reader.decRef();\n      reader = null;\n    }\n    if (mergeReader != null) {\n      //System.out.println(\"  pool.drop info=\" + info + \" merge rc=\" + mergeReader.getRefCount());\n      mergeReader.decRef();\n      mergeReader = null;\n    }\n    decRef();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"479fba77febd29e498fc4a430359e4cf88341da7","date":1357213856,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndLiveDocs#dropReaders().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndLiveDocs#dropReaders().mjava","sourceNew":"  // NOTE: removes callers ref\n  public synchronized void dropReaders() throws IOException {\n    // TODO: can we somehow use IOUtils here...?  problem is\n    // we are calling .decRef not .close)...\n    try {\n      if (reader != null) {\n        //System.out.println(\"  pool.drop info=\" + info + \" rc=\" + reader.getRefCount());\n        try {\n          reader.decRef();\n        } finally {\n          reader = null;\n        }\n      }\n    } finally {\n      if (mergeReader != null) {\n        //System.out.println(\"  pool.drop info=\" + info + \" merge rc=\" + mergeReader.getRefCount());\n        try {\n          mergeReader.decRef();\n        } finally {\n          mergeReader = null;\n        }\n      }\n    }\n\n    decRef();\n  }\n\n","sourceOld":"  // NOTE: removes callers ref\n  public synchronized void dropReaders() throws IOException {\n    if (reader != null) {\n      //System.out.println(\"  pool.drop info=\" + info + \" rc=\" + reader.getRefCount());\n      reader.decRef();\n      reader = null;\n    }\n    if (mergeReader != null) {\n      //System.out.println(\"  pool.drop info=\" + info + \" merge rc=\" + mergeReader.getRefCount());\n      mergeReader.decRef();\n      mergeReader = null;\n    }\n    decRef();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndLiveDocs#dropReaders().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndLiveDocs#dropReaders().mjava","sourceNew":"  // NOTE: removes callers ref\n  public synchronized void dropReaders() throws IOException {\n    // TODO: can we somehow use IOUtils here...?  problem is\n    // we are calling .decRef not .close)...\n    try {\n      if (reader != null) {\n        //System.out.println(\"  pool.drop info=\" + info + \" rc=\" + reader.getRefCount());\n        try {\n          reader.decRef();\n        } finally {\n          reader = null;\n        }\n      }\n    } finally {\n      if (mergeReader != null) {\n        //System.out.println(\"  pool.drop info=\" + info + \" merge rc=\" + mergeReader.getRefCount());\n        try {\n          mergeReader.decRef();\n        } finally {\n          mergeReader = null;\n        }\n      }\n    }\n\n    decRef();\n  }\n\n","sourceOld":"  // NOTE: removes callers ref\n  public synchronized void dropReaders() throws IOException {\n    if (reader != null) {\n      //System.out.println(\"  pool.drop info=\" + info + \" rc=\" + reader.getRefCount());\n      reader.decRef();\n      reader = null;\n    }\n    if (mergeReader != null) {\n      //System.out.println(\"  pool.drop info=\" + info + \" merge rc=\" + mergeReader.getRefCount());\n      mergeReader.decRef();\n      mergeReader = null;\n    }\n    decRef();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a45bec74b98f6fc05f52770cfb425739e6563960","date":1375119292,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndLiveDocs#dropReaders().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndLiveDocs#dropReaders().mjava","sourceNew":"  // NOTE: removes callers ref\n  public synchronized void dropReaders() throws IOException {\n    // TODO: can we somehow use IOUtils here...?  problem is\n    // we are calling .decRef not .close)...\n    if (reader != null) {\n      //System.out.println(\"  pool.drop info=\" + info + \" rc=\" + reader.getRefCount());\n      try {\n        reader.decRef();\n      } finally {\n        reader = null;\n      }\n    }\n\n    decRef();\n  }\n\n","sourceOld":"  // NOTE: removes callers ref\n  public synchronized void dropReaders() throws IOException {\n    // TODO: can we somehow use IOUtils here...?  problem is\n    // we are calling .decRef not .close)...\n    try {\n      if (reader != null) {\n        //System.out.println(\"  pool.drop info=\" + info + \" rc=\" + reader.getRefCount());\n        try {\n          reader.decRef();\n        } finally {\n          reader = null;\n        }\n      }\n    } finally {\n      if (mergeReader != null) {\n        //System.out.println(\"  pool.drop info=\" + info + \" merge rc=\" + mergeReader.getRefCount());\n        try {\n          mergeReader.decRef();\n        } finally {\n          mergeReader = null;\n        }\n      }\n    }\n\n    decRef();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndLiveDocs#dropReaders().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndLiveDocs#dropReaders().mjava","sourceNew":"  // NOTE: removes callers ref\n  public synchronized void dropReaders() throws IOException {\n    // TODO: can we somehow use IOUtils here...?  problem is\n    // we are calling .decRef not .close)...\n    if (reader != null) {\n      //System.out.println(\"  pool.drop info=\" + info + \" rc=\" + reader.getRefCount());\n      try {\n        reader.decRef();\n      } finally {\n        reader = null;\n      }\n    }\n\n    decRef();\n  }\n\n","sourceOld":"  // NOTE: removes callers ref\n  public synchronized void dropReaders() throws IOException {\n    // TODO: can we somehow use IOUtils here...?  problem is\n    // we are calling .decRef not .close)...\n    try {\n      if (reader != null) {\n        //System.out.println(\"  pool.drop info=\" + info + \" rc=\" + reader.getRefCount());\n        try {\n          reader.decRef();\n        } finally {\n          reader = null;\n        }\n      }\n    } finally {\n      if (mergeReader != null) {\n        //System.out.println(\"  pool.drop info=\" + info + \" merge rc=\" + mergeReader.getRefCount());\n        try {\n          mergeReader.decRef();\n        } finally {\n          mergeReader = null;\n        }\n      }\n    }\n\n    decRef();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#dropReaders().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndLiveDocs#dropReaders().mjava","sourceNew":"  // NOTE: removes callers ref\n  public synchronized void dropReaders() throws IOException {\n    // TODO: can we somehow use IOUtils here...?  problem is\n    // we are calling .decRef not .close)...\n    if (reader != null) {\n      //System.out.println(\"  pool.drop info=\" + info + \" rc=\" + reader.getRefCount());\n      try {\n        reader.decRef();\n      } finally {\n        reader = null;\n      }\n    }\n\n    decRef();\n  }\n\n","sourceOld":"  // NOTE: removes callers ref\n  public synchronized void dropReaders() throws IOException {\n    // TODO: can we somehow use IOUtils here...?  problem is\n    // we are calling .decRef not .close)...\n    if (reader != null) {\n      //System.out.println(\"  pool.drop info=\" + info + \" rc=\" + reader.getRefCount());\n      try {\n        reader.decRef();\n      } finally {\n        reader = null;\n      }\n    }\n\n    decRef();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["ae695f21c50b03702b5d0fa2543d5af844bb7cd3","479fba77febd29e498fc4a430359e4cf88341da7"],"38e3b736c7ca086d61b7dbb841c905ee115490da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ae695f21c50b03702b5d0fa2543d5af844bb7cd3"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["a45bec74b98f6fc05f52770cfb425739e6563960"],"a45bec74b98f6fc05f52770cfb425739e6563960":["479fba77febd29e498fc4a430359e4cf88341da7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["479fba77febd29e498fc4a430359e4cf88341da7"],"ae695f21c50b03702b5d0fa2543d5af844bb7cd3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"479fba77febd29e498fc4a430359e4cf88341da7":["ae695f21c50b03702b5d0fa2543d5af844bb7cd3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a45bec74b98f6fc05f52770cfb425739e6563960":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["38e3b736c7ca086d61b7dbb841c905ee115490da","ae695f21c50b03702b5d0fa2543d5af844bb7cd3"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"ae695f21c50b03702b5d0fa2543d5af844bb7cd3":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","38e3b736c7ca086d61b7dbb841c905ee115490da","479fba77febd29e498fc4a430359e4cf88341da7"],"479fba77febd29e498fc4a430359e4cf88341da7":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a45bec74b98f6fc05f52770cfb425739e6563960","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","38e3b736c7ca086d61b7dbb841c905ee115490da","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}