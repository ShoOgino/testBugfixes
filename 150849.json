{"path":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#numBlocks(long,int).mjava","commits":[{"id":"f375a9203c9124207e176f4dc59bd8e832b239a0","date":1370270173,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#numBlocks(long,int).mjava","pathOld":"/dev/null","sourceNew":"  /** Return the number of blocks required to store <code>size</code> values on\n   *  <code>blockSize</code>. */\n  static int numBlocks(long size, int blockSize) {\n    final int numBlocks = (int) (size / blockSize) + (size % blockSize == 0 ? 0 : 1);\n    if ((long) numBlocks * blockSize < size) {\n      throw new IllegalArgumentException(\"size is too large for this block size\");\n    }\n    return numBlocks;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f375a9203c9124207e176f4dc59bd8e832b239a0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f375a9203c9124207e176f4dc59bd8e832b239a0"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f375a9203c9124207e176f4dc59bd8e832b239a0"],"f375a9203c9124207e176f4dc59bd8e832b239a0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}