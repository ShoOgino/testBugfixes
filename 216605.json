{"path":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#getNumCommits(HttpSolrServer).mjava","commits":[{"id":"7321b77a7bc3edfebd637ef273e9dfaa9969eba6","date":1333023097,"type":1,"author":"Sami Siren","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#getNumCommits(HttpSolrServer).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#getNumCommits(CommonsHttpSolrServer).mjava","sourceNew":"  private Long getNumCommits(HttpSolrServer solrServer) throws MalformedURLException,\n      SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(solrServer.getBaseURL());\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"qt\", \"/admin/mbeans?key=updateHandler&stats=true\");\n    // use generic request to avoid extra processing of queries\n    QueryRequest req = new QueryRequest(params);\n    NamedList<Object> resp = server.request(req);\n    NamedList mbeans = (NamedList) resp.get(\"solr-mbeans\");\n    NamedList uhandlerCat = (NamedList) mbeans.get(\"UPDATEHANDLER\");\n    NamedList uhandler = (NamedList) uhandlerCat.get(\"updateHandler\");\n    NamedList stats = (NamedList) uhandler.get(\"stats\");\n    Long commits = (Long) stats.get(\"commits\");\n\n    return commits;\n  }\n\n","sourceOld":"  private Long getNumCommits(CommonsHttpSolrServer solrServer) throws MalformedURLException,\n      SolrServerException, IOException {\n    CommonsHttpSolrServer server = new CommonsHttpSolrServer(solrServer.getBaseURL());\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"qt\", \"/admin/mbeans?key=updateHandler&stats=true\");\n    // use generic request to avoid extra processing of queries\n    QueryRequest req = new QueryRequest(params);\n    NamedList<Object> resp = server.request(req);\n    NamedList mbeans = (NamedList) resp.get(\"solr-mbeans\");\n    NamedList uhandlerCat = (NamedList) mbeans.get(\"UPDATEHANDLER\");\n    NamedList uhandler = (NamedList) uhandlerCat.get(\"updateHandler\");\n    NamedList stats = (NamedList) uhandler.get(\"stats\");\n    Long commits = (Long) stats.get(\"commits\");\n\n    return commits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#getNumCommits(HttpSolrServer).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#getNumCommits(HttpSolrServer).mjava","sourceNew":"  private Long getNumCommits(HttpSolrServer solrServer) throws\n      SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(solrServer.getBaseURL());\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"qt\", \"/admin/mbeans?key=updateHandler&stats=true\");\n    // use generic request to avoid extra processing of queries\n    QueryRequest req = new QueryRequest(params);\n    NamedList<Object> resp = server.request(req);\n    NamedList mbeans = (NamedList) resp.get(\"solr-mbeans\");\n    NamedList uhandlerCat = (NamedList) mbeans.get(\"UPDATEHANDLER\");\n    NamedList uhandler = (NamedList) uhandlerCat.get(\"updateHandler\");\n    NamedList stats = (NamedList) uhandler.get(\"stats\");\n    Long commits = (Long) stats.get(\"commits\");\n\n    return commits;\n  }\n\n","sourceOld":"  private Long getNumCommits(HttpSolrServer solrServer) throws MalformedURLException,\n      SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(solrServer.getBaseURL());\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"qt\", \"/admin/mbeans?key=updateHandler&stats=true\");\n    // use generic request to avoid extra processing of queries\n    QueryRequest req = new QueryRequest(params);\n    NamedList<Object> resp = server.request(req);\n    NamedList mbeans = (NamedList) resp.get(\"solr-mbeans\");\n    NamedList uhandlerCat = (NamedList) mbeans.get(\"UPDATEHANDLER\");\n    NamedList uhandler = (NamedList) uhandlerCat.get(\"updateHandler\");\n    NamedList stats = (NamedList) uhandler.get(\"stats\");\n    Long commits = (Long) stats.get(\"commits\");\n\n    return commits;\n  }\n\n","bugFix":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#getNumCommits(HttpSolrServer).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#getNumCommits(HttpSolrServer).mjava","sourceNew":"  private Long getNumCommits(HttpSolrServer solrServer) throws\n      SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(solrServer.getBaseURL());\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"qt\", \"/admin/mbeans?key=updateHandler&stats=true\");\n    // use generic request to avoid extra processing of queries\n    QueryRequest req = new QueryRequest(params);\n    NamedList<Object> resp = server.request(req);\n    NamedList mbeans = (NamedList) resp.get(\"solr-mbeans\");\n    NamedList uhandlerCat = (NamedList) mbeans.get(\"UPDATEHANDLER\");\n    NamedList uhandler = (NamedList) uhandlerCat.get(\"updateHandler\");\n    NamedList stats = (NamedList) uhandler.get(\"stats\");\n    Long commits = (Long) stats.get(\"commits\");\n\n    return commits;\n  }\n\n","sourceOld":"  private Long getNumCommits(HttpSolrServer solrServer) throws MalformedURLException,\n      SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(solrServer.getBaseURL());\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"qt\", \"/admin/mbeans?key=updateHandler&stats=true\");\n    // use generic request to avoid extra processing of queries\n    QueryRequest req = new QueryRequest(params);\n    NamedList<Object> resp = server.request(req);\n    NamedList mbeans = (NamedList) resp.get(\"solr-mbeans\");\n    NamedList uhandlerCat = (NamedList) mbeans.get(\"UPDATEHANDLER\");\n    NamedList uhandler = (NamedList) uhandlerCat.get(\"updateHandler\");\n    NamedList stats = (NamedList) uhandler.get(\"stats\");\n    Long commits = (Long) stats.get(\"commits\");\n\n    return commits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a69439d0df009e0bb0038d1e427159f449dd670d","date":1355704683,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#getNumCommits(HttpSolrServer).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#getNumCommits(HttpSolrServer).mjava","sourceNew":"  private Long getNumCommits(HttpSolrServer solrServer) throws\n      SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(solrServer.getBaseURL());\n    server.setConnectionTimeout(15000);\n    server.setSoTimeout(30000);\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"qt\", \"/admin/mbeans?key=updateHandler&stats=true\");\n    // use generic request to avoid extra processing of queries\n    QueryRequest req = new QueryRequest(params);\n    NamedList<Object> resp = server.request(req);\n    NamedList mbeans = (NamedList) resp.get(\"solr-mbeans\");\n    NamedList uhandlerCat = (NamedList) mbeans.get(\"UPDATEHANDLER\");\n    NamedList uhandler = (NamedList) uhandlerCat.get(\"updateHandler\");\n    NamedList stats = (NamedList) uhandler.get(\"stats\");\n    Long commits = (Long) stats.get(\"commits\");\n\n    return commits;\n  }\n\n","sourceOld":"  private Long getNumCommits(HttpSolrServer solrServer) throws\n      SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(solrServer.getBaseURL());\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"qt\", \"/admin/mbeans?key=updateHandler&stats=true\");\n    // use generic request to avoid extra processing of queries\n    QueryRequest req = new QueryRequest(params);\n    NamedList<Object> resp = server.request(req);\n    NamedList mbeans = (NamedList) resp.get(\"solr-mbeans\");\n    NamedList uhandlerCat = (NamedList) mbeans.get(\"UPDATEHANDLER\");\n    NamedList uhandler = (NamedList) uhandlerCat.get(\"updateHandler\");\n    NamedList stats = (NamedList) uhandler.get(\"stats\");\n    Long commits = (Long) stats.get(\"commits\");\n\n    return commits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#getNumCommits(HttpSolrServer).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#getNumCommits(HttpSolrServer).mjava","sourceNew":"  private Long getNumCommits(HttpSolrServer solrServer) throws\n      SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(solrServer.getBaseURL());\n    server.setConnectionTimeout(15000);\n    server.setSoTimeout(30000);\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"qt\", \"/admin/mbeans?key=updateHandler&stats=true\");\n    // use generic request to avoid extra processing of queries\n    QueryRequest req = new QueryRequest(params);\n    NamedList<Object> resp = server.request(req);\n    NamedList mbeans = (NamedList) resp.get(\"solr-mbeans\");\n    NamedList uhandlerCat = (NamedList) mbeans.get(\"UPDATEHANDLER\");\n    NamedList uhandler = (NamedList) uhandlerCat.get(\"updateHandler\");\n    NamedList stats = (NamedList) uhandler.get(\"stats\");\n    Long commits = (Long) stats.get(\"commits\");\n\n    return commits;\n  }\n\n","sourceOld":"  private Long getNumCommits(HttpSolrServer solrServer) throws\n      SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(solrServer.getBaseURL());\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"qt\", \"/admin/mbeans?key=updateHandler&stats=true\");\n    // use generic request to avoid extra processing of queries\n    QueryRequest req = new QueryRequest(params);\n    NamedList<Object> resp = server.request(req);\n    NamedList mbeans = (NamedList) resp.get(\"solr-mbeans\");\n    NamedList uhandlerCat = (NamedList) mbeans.get(\"UPDATEHANDLER\");\n    NamedList uhandler = (NamedList) uhandlerCat.get(\"updateHandler\");\n    NamedList stats = (NamedList) uhandler.get(\"stats\");\n    Long commits = (Long) stats.get(\"commits\");\n\n    return commits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c3e46d3417c353d7be14509cfab11b315927fe","date":1382292560,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#getNumCommits(HttpSolrServer).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#getNumCommits(HttpSolrServer).mjava","sourceNew":"  private Long getNumCommits(HttpSolrServer solrServer) throws\n      SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(solrServer.getBaseURL());\n    server.setConnectionTimeout(15000);\n    server.setSoTimeout(60000);\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"qt\", \"/admin/mbeans?key=updateHandler&stats=true\");\n    // use generic request to avoid extra processing of queries\n    QueryRequest req = new QueryRequest(params);\n    NamedList<Object> resp = server.request(req);\n    NamedList mbeans = (NamedList) resp.get(\"solr-mbeans\");\n    NamedList uhandlerCat = (NamedList) mbeans.get(\"UPDATEHANDLER\");\n    NamedList uhandler = (NamedList) uhandlerCat.get(\"updateHandler\");\n    NamedList stats = (NamedList) uhandler.get(\"stats\");\n    Long commits = (Long) stats.get(\"commits\");\n\n    return commits;\n  }\n\n","sourceOld":"  private Long getNumCommits(HttpSolrServer solrServer) throws\n      SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(solrServer.getBaseURL());\n    server.setConnectionTimeout(15000);\n    server.setSoTimeout(30000);\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"qt\", \"/admin/mbeans?key=updateHandler&stats=true\");\n    // use generic request to avoid extra processing of queries\n    QueryRequest req = new QueryRequest(params);\n    NamedList<Object> resp = server.request(req);\n    NamedList mbeans = (NamedList) resp.get(\"solr-mbeans\");\n    NamedList uhandlerCat = (NamedList) mbeans.get(\"UPDATEHANDLER\");\n    NamedList uhandler = (NamedList) uhandlerCat.get(\"updateHandler\");\n    NamedList stats = (NamedList) uhandler.get(\"stats\");\n    Long commits = (Long) stats.get(\"commits\");\n\n    return commits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7ea7454b4afcb5dc9f7504f83d77b134df2b7c57","date":1391252295,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#getNumCommits(HttpSolrServer).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#getNumCommits(HttpSolrServer).mjava","sourceNew":"  private Long getNumCommits(HttpSolrServer solrServer) throws\n      SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(solrServer.getBaseURL());\n    server.setConnectionTimeout(15000);\n    server.setSoTimeout(60000);\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"qt\", \"/admin/mbeans?key=updateHandler&stats=true\");\n    // use generic request to avoid extra processing of queries\n    QueryRequest req = new QueryRequest(params);\n    NamedList<Object> resp = server.request(req);\n    NamedList mbeans = (NamedList) resp.get(\"solr-mbeans\");\n    NamedList uhandlerCat = (NamedList) mbeans.get(\"UPDATEHANDLER\");\n    NamedList uhandler = (NamedList) uhandlerCat.get(\"updateHandler\");\n    NamedList stats = (NamedList) uhandler.get(\"stats\");\n    Long commits = (Long) stats.get(\"commits\");\n    server.shutdown();\n    return commits;\n  }\n\n","sourceOld":"  private Long getNumCommits(HttpSolrServer solrServer) throws\n      SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(solrServer.getBaseURL());\n    server.setConnectionTimeout(15000);\n    server.setSoTimeout(60000);\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"qt\", \"/admin/mbeans?key=updateHandler&stats=true\");\n    // use generic request to avoid extra processing of queries\n    QueryRequest req = new QueryRequest(params);\n    NamedList<Object> resp = server.request(req);\n    NamedList mbeans = (NamedList) resp.get(\"solr-mbeans\");\n    NamedList uhandlerCat = (NamedList) mbeans.get(\"UPDATEHANDLER\");\n    NamedList uhandler = (NamedList) uhandlerCat.get(\"updateHandler\");\n    NamedList stats = (NamedList) uhandler.get(\"stats\");\n    Long commits = (Long) stats.get(\"commits\");\n\n    return commits;\n  }\n\n","bugFix":["e90f09c8e56fa270cdbf5adc76067c67249dac10"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#getNumCommits(HttpSolrClient).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#getNumCommits(HttpSolrServer).mjava","sourceNew":"  private Long getNumCommits(HttpSolrClient sourceClient) throws\n      SolrServerException, IOException {\n    HttpSolrClient client = new HttpSolrClient(sourceClient.getBaseURL());\n    client.setConnectionTimeout(15000);\n    client.setSoTimeout(60000);\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"qt\", \"/admin/mbeans?key=updateHandler&stats=true\");\n    // use generic request to avoid extra processing of queries\n    QueryRequest req = new QueryRequest(params);\n    NamedList<Object> resp = client.request(req);\n    NamedList mbeans = (NamedList) resp.get(\"solr-mbeans\");\n    NamedList uhandlerCat = (NamedList) mbeans.get(\"UPDATEHANDLER\");\n    NamedList uhandler = (NamedList) uhandlerCat.get(\"updateHandler\");\n    NamedList stats = (NamedList) uhandler.get(\"stats\");\n    Long commits = (Long) stats.get(\"commits\");\n    client.shutdown();\n    return commits;\n  }\n\n","sourceOld":"  private Long getNumCommits(HttpSolrServer solrServer) throws\n      SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(solrServer.getBaseURL());\n    server.setConnectionTimeout(15000);\n    server.setSoTimeout(60000);\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"qt\", \"/admin/mbeans?key=updateHandler&stats=true\");\n    // use generic request to avoid extra processing of queries\n    QueryRequest req = new QueryRequest(params);\n    NamedList<Object> resp = server.request(req);\n    NamedList mbeans = (NamedList) resp.get(\"solr-mbeans\");\n    NamedList uhandlerCat = (NamedList) mbeans.get(\"UPDATEHANDLER\");\n    NamedList uhandler = (NamedList) uhandlerCat.get(\"updateHandler\");\n    NamedList stats = (NamedList) uhandler.get(\"stats\");\n    Long commits = (Long) stats.get(\"commits\");\n    server.shutdown();\n    return commits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7ea7454b4afcb5dc9f7504f83d77b134df2b7c57":["a3c3e46d3417c353d7be14509cfab11b315927fe"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","a69439d0df009e0bb0038d1e427159f449dd670d"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a69439d0df009e0bb0038d1e427159f449dd670d":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bafca15d8e408346a67f4282ad1143b88023893b":["7ea7454b4afcb5dc9f7504f83d77b134df2b7c57"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"a3c3e46d3417c353d7be14509cfab11b315927fe":["a69439d0df009e0bb0038d1e427159f449dd670d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"7ea7454b4afcb5dc9f7504f83d77b134df2b7c57":["bafca15d8e408346a67f4282ad1143b88023893b"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"a69439d0df009e0bb0038d1e427159f449dd670d":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a3c3e46d3417c353d7be14509cfab11b315927fe"],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"bafca15d8e408346a67f4282ad1143b88023893b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","fe33227f6805edab2036cbb80645cc4e2d1fa424","a69439d0df009e0bb0038d1e427159f449dd670d"],"a3c3e46d3417c353d7be14509cfab11b315927fe":["7ea7454b4afcb5dc9f7504f83d77b134df2b7c57"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}