{"path":"src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithSetNorm().mjava","commits":[{"id":"5fe49edd7581c377876998430f9547519f41a60a","date":1242906321,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithSetNorm().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-1648\n  public void testCloneWithSetNorm() throws Throwable {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, false);\n    SegmentReader orig = (SegmentReader) IndexReader.open(dir1);\n    orig.setNorm(1, \"field1\", 17.0f);\n    final byte encoded = Similarity.encodeNorm(17.0f);\n    assertEquals(encoded, orig.norms(\"field1\")[1]);\n\n    // the cloned segmentreader should have 2 references, 1 to itself, and 1 to\n    // the original segmentreader\n    SegmentReader clonedSegmentReader = (SegmentReader) orig.clone();\n    orig.close();\n    clonedSegmentReader.close();\n\n    SegmentReader r = (SegmentReader) IndexReader.open(dir1);\n    assertEquals(encoded, r.norms(\"field1\")[1]);\n    r.close();\n    dir1.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1","date":1244392278,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithSetNorm().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithSetNorm().mjava","sourceNew":"  // LUCENE-1648\n  public void testCloneWithSetNorm() throws Throwable {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, false);\n    IndexReader orig = IndexReader.open(dir1);\n    orig.setNorm(1, \"field1\", 17.0f);\n    final byte encoded = Similarity.encodeNorm(17.0f);\n    assertEquals(encoded, orig.norms(\"field1\")[1]);\n\n    // the cloned segmentreader should have 2 references, 1 to itself, and 1 to\n    // the original segmentreader\n    IndexReader clonedReader = (IndexReader) orig.clone();\n    orig.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1);\n    assertEquals(encoded, r.norms(\"field1\")[1]);\n    r.close();\n    dir1.close();\n  }\n\n","sourceOld":"  // LUCENE-1648\n  public void testCloneWithSetNorm() throws Throwable {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, false);\n    SegmentReader orig = (SegmentReader) IndexReader.open(dir1);\n    orig.setNorm(1, \"field1\", 17.0f);\n    final byte encoded = Similarity.encodeNorm(17.0f);\n    assertEquals(encoded, orig.norms(\"field1\")[1]);\n\n    // the cloned segmentreader should have 2 references, 1 to itself, and 1 to\n    // the original segmentreader\n    SegmentReader clonedSegmentReader = (SegmentReader) orig.clone();\n    orig.close();\n    clonedSegmentReader.close();\n\n    SegmentReader r = (SegmentReader) IndexReader.open(dir1);\n    assertEquals(encoded, r.norms(\"field1\")[1]);\n    r.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithSetNorm().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithSetNorm().mjava","sourceNew":"  // LUCENE-1648\n  public void testCloneWithSetNorm() throws Throwable {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, false);\n    IndexReader orig = IndexReader.open(dir1, false);\n    orig.setNorm(1, \"field1\", 17.0f);\n    final byte encoded = Similarity.encodeNorm(17.0f);\n    assertEquals(encoded, orig.norms(\"field1\")[1]);\n\n    // the cloned segmentreader should have 2 references, 1 to itself, and 1 to\n    // the original segmentreader\n    IndexReader clonedReader = (IndexReader) orig.clone();\n    orig.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1, false);\n    assertEquals(encoded, r.norms(\"field1\")[1]);\n    r.close();\n    dir1.close();\n  }\n\n","sourceOld":"  // LUCENE-1648\n  public void testCloneWithSetNorm() throws Throwable {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, false);\n    IndexReader orig = IndexReader.open(dir1);\n    orig.setNorm(1, \"field1\", 17.0f);\n    final byte encoded = Similarity.encodeNorm(17.0f);\n    assertEquals(encoded, orig.norms(\"field1\")[1]);\n\n    // the cloned segmentreader should have 2 references, 1 to itself, and 1 to\n    // the original segmentreader\n    IndexReader clonedReader = (IndexReader) orig.clone();\n    orig.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1);\n    assertEquals(encoded, r.norms(\"field1\")[1]);\n    r.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithSetNorm().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithSetNorm().mjava","sourceNew":"  // LUCENE-1648\n  public void testCloneWithSetNorm() throws Throwable {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, false);\n    IndexReader orig = IndexReader.open(dir1, false);\n    orig.setNorm(1, \"field1\", 17.0f);\n    final byte encoded = Similarity.encodeNorm(17.0f);\n    assertEquals(encoded, orig.norms(\"field1\")[1]);\n\n    // the cloned segmentreader should have 2 references, 1 to itself, and 1 to\n    // the original segmentreader\n    IndexReader clonedReader = (IndexReader) orig.clone();\n    orig.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1, false);\n    assertEquals(encoded, r.norms(\"field1\")[1]);\n    r.close();\n    dir1.close();\n  }\n\n","sourceOld":"  // LUCENE-1648\n  public void testCloneWithSetNorm() throws Throwable {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, false);\n    IndexReader orig = IndexReader.open(dir1);\n    orig.setNorm(1, \"field1\", 17.0f);\n    final byte encoded = Similarity.encodeNorm(17.0f);\n    assertEquals(encoded, orig.norms(\"field1\")[1]);\n\n    // the cloned segmentreader should have 2 references, 1 to itself, and 1 to\n    // the original segmentreader\n    IndexReader clonedReader = (IndexReader) orig.clone();\n    orig.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1);\n    assertEquals(encoded, r.norms(\"field1\")[1]);\n    r.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0eb5b0b5b98c777dad412afbfb347d2c0889327","date":1259094367,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithSetNorm().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithSetNorm().mjava","sourceNew":"  // LUCENE-1648\n  public void testCloneWithSetNorm() throws Throwable {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, false);\n    IndexReader orig = IndexReader.open(dir1, false);\n    orig.setNorm(1, \"field1\", 17.0f);\n    final byte encoded = Similarity.getDefault().encodeNormValue(17.0f);\n    assertEquals(encoded, orig.norms(\"field1\")[1]);\n\n    // the cloned segmentreader should have 2 references, 1 to itself, and 1 to\n    // the original segmentreader\n    IndexReader clonedReader = (IndexReader) orig.clone();\n    orig.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1, false);\n    assertEquals(encoded, r.norms(\"field1\")[1]);\n    r.close();\n    dir1.close();\n  }\n\n","sourceOld":"  // LUCENE-1648\n  public void testCloneWithSetNorm() throws Throwable {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, false);\n    IndexReader orig = IndexReader.open(dir1, false);\n    orig.setNorm(1, \"field1\", 17.0f);\n    final byte encoded = Similarity.encodeNorm(17.0f);\n    assertEquals(encoded, orig.norms(\"field1\")[1]);\n\n    // the cloned segmentreader should have 2 references, 1 to itself, and 1 to\n    // the original segmentreader\n    IndexReader clonedReader = (IndexReader) orig.clone();\n    orig.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1, false);\n    assertEquals(encoded, r.norms(\"field1\")[1]);\n    r.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithSetNorm().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithSetNorm().mjava","sourceNew":"  // LUCENE-1648\n  public void testCloneWithSetNorm() throws Throwable {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, false);\n    IndexReader orig = IndexReader.open(dir1, false);\n    orig.setNorm(1, \"field1\", 17.0f);\n    final byte encoded = Similarity.getDefault().encodeNormValue(17.0f);\n    assertEquals(encoded, orig.norms(\"field1\")[1]);\n\n    // the cloned segmentreader should have 2 references, 1 to itself, and 1 to\n    // the original segmentreader\n    IndexReader clonedReader = (IndexReader) orig.clone();\n    orig.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1, false);\n    assertEquals(encoded, r.norms(\"field1\")[1]);\n    r.close();\n    dir1.close();\n  }\n\n","sourceOld":"  // LUCENE-1648\n  public void testCloneWithSetNorm() throws Throwable {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, false);\n    IndexReader orig = IndexReader.open(dir1, false);\n    orig.setNorm(1, \"field1\", 17.0f);\n    final byte encoded = Similarity.getDefault().encodeNormValue(17.0f);\n    assertEquals(encoded, orig.norms(\"field1\")[1]);\n\n    // the cloned segmentreader should have 2 references, 1 to itself, and 1 to\n    // the original segmentreader\n    IndexReader clonedReader = (IndexReader) orig.clone();\n    orig.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1, false);\n    assertEquals(encoded, r.norms(\"field1\")[1]);\n    r.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1":["5fe49edd7581c377876998430f9547519f41a60a"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0a046c0c310bc77931fc8441bd920053b607dd14":["0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"b0eb5b0b5b98c777dad412afbfb347d2c0889327":["0a046c0c310bc77931fc8441bd920053b607dd14"],"5fe49edd7581c377876998430f9547519f41a60a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["b0eb5b0b5b98c777dad412afbfb347d2c0889327"]},"commit2Childs":{"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1":["e8d1458a2543cbd30cbfe7929be4dcb5c5251659","0a046c0c310bc77931fc8441bd920053b607dd14"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5fe49edd7581c377876998430f9547519f41a60a"],"0a046c0c310bc77931fc8441bd920053b607dd14":["b0eb5b0b5b98c777dad412afbfb347d2c0889327"],"5fe49edd7581c377876998430f9547519f41a60a":["0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1"],"b0eb5b0b5b98c777dad412afbfb347d2c0889327":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}