{"path":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/UIMATypeAwareAnnotationsTokenizer#initializeIterator().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/UIMATypeAwareAnnotationsTokenizer#initializeIterator().mjava","pathOld":"modules/analysis/uima/src/java/org/apache/lucene/analysis/uima/UIMATypeAwareAnnotationsTokenizer#initializeIterator().mjava","sourceNew":"  protected void initializeIterator() throws IOException {\n    try {\n      analyzeInput();\n    } catch (AnalysisEngineProcessException e) {\n      throw new IOException(e);\n    }\n    featurePath = cas.createFeaturePath();\n    try {\n      featurePath.initialize(typeAttributeFeaturePath);\n    } catch (CASException e) {\n      featurePath = null;\n      throw new IOException(e);\n    }\n    finalOffset = correctOffset(cas.getDocumentText().length());\n    Type tokenType = cas.getTypeSystem().getType(tokenTypeString);\n    iterator = cas.getAnnotationIndex(tokenType).iterator();\n\n  }\n\n","sourceOld":"  protected void initializeIterator() throws IOException {\n    try {\n      analyzeInput();\n    } catch (AnalysisEngineProcessException e) {\n      throw new IOException(e);\n    }\n    featurePath = cas.createFeaturePath();\n    try {\n      featurePath.initialize(typeAttributeFeaturePath);\n    } catch (CASException e) {\n      featurePath = null;\n      throw new IOException(e);\n    }\n    finalOffset = correctOffset(cas.getDocumentText().length());\n    Type tokenType = cas.getTypeSystem().getType(tokenTypeString);\n    iterator = cas.getAnnotationIndex(tokenType).iterator();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/UIMATypeAwareAnnotationsTokenizer#initializeIterator().mjava","pathOld":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/UIMATypeAwareAnnotationsTokenizer#initializeIterator().mjava","sourceNew":"  @Override\n  protected void initializeIterator() throws IOException {\n    try {\n      analyzeInput();\n    } catch (AnalysisEngineProcessException e) {\n      throw new IOException(e);\n    }\n    featurePath = cas.createFeaturePath();\n    try {\n      featurePath.initialize(typeAttributeFeaturePath);\n    } catch (CASException e) {\n      featurePath = null;\n      throw new IOException(e);\n    }\n    finalOffset = correctOffset(cas.getDocumentText().length());\n    Type tokenType = cas.getTypeSystem().getType(tokenTypeString);\n    iterator = cas.getAnnotationIndex(tokenType).iterator();\n\n  }\n\n","sourceOld":"  protected void initializeIterator() throws IOException {\n    try {\n      analyzeInput();\n    } catch (AnalysisEngineProcessException e) {\n      throw new IOException(e);\n    }\n    featurePath = cas.createFeaturePath();\n    try {\n      featurePath.initialize(typeAttributeFeaturePath);\n    } catch (CASException e) {\n      featurePath = null;\n      throw new IOException(e);\n    }\n    finalOffset = correctOffset(cas.getDocumentText().length());\n    Type tokenType = cas.getTypeSystem().getType(tokenTypeString);\n    iterator = cas.getAnnotationIndex(tokenType).iterator();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/UIMATypeAwareAnnotationsTokenizer#initializeIterator().mjava","pathOld":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/UIMATypeAwareAnnotationsTokenizer#initializeIterator().mjava","sourceNew":"  @Override\n  protected void initializeIterator() throws IOException {\n    try {\n      analyzeInput();\n    } catch (AnalysisEngineProcessException e) {\n      throw new IOException(e);\n    }\n    featurePath = cas.createFeaturePath();\n    try {\n      featurePath.initialize(typeAttributeFeaturePath);\n    } catch (CASException e) {\n      featurePath = null;\n      throw new IOException(e);\n    }\n    finalOffset = correctOffset(cas.getDocumentText().length());\n    Type tokenType = cas.getTypeSystem().getType(tokenTypeString);\n    iterator = cas.getAnnotationIndex(tokenType).iterator();\n\n  }\n\n","sourceOld":"  protected void initializeIterator() throws IOException {\n    try {\n      analyzeInput();\n    } catch (AnalysisEngineProcessException e) {\n      throw new IOException(e);\n    }\n    featurePath = cas.createFeaturePath();\n    try {\n      featurePath.initialize(typeAttributeFeaturePath);\n    } catch (CASException e) {\n      featurePath = null;\n      throw new IOException(e);\n    }\n    finalOffset = correctOffset(cas.getDocumentText().length());\n    Type tokenType = cas.getTypeSystem().getType(tokenTypeString);\n    iterator = cas.getAnnotationIndex(tokenType).iterator();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ed7109a575849a2656ac2974fe87da5699a6e50","date":1360143548,"type":3,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/UIMATypeAwareAnnotationsTokenizer#initializeIterator().mjava","pathOld":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/UIMATypeAwareAnnotationsTokenizer#initializeIterator().mjava","sourceNew":"  @Override\n  protected void initializeIterator() throws IOException {\n    try {\n      analyzeInput();\n    } catch (AnalysisEngineProcessException e) {\n      throw new IOException(e);\n    } catch (ResourceInitializationException e) {\n      throw new IOException(e);\n    }\n    featurePath = cas.createFeaturePath();\n    try {\n      featurePath.initialize(typeAttributeFeaturePath);\n    } catch (CASException e) {\n      featurePath = null;\n      throw new IOException(e);\n    }\n    finalOffset = correctOffset(cas.getDocumentText().length());\n    Type tokenType = cas.getTypeSystem().getType(tokenTypeString);\n    iterator = cas.getAnnotationIndex(tokenType).iterator();\n\n  }\n\n","sourceOld":"  @Override\n  protected void initializeIterator() throws IOException {\n    try {\n      analyzeInput();\n    } catch (AnalysisEngineProcessException e) {\n      throw new IOException(e);\n    }\n    featurePath = cas.createFeaturePath();\n    try {\n      featurePath.initialize(typeAttributeFeaturePath);\n    } catch (CASException e) {\n      featurePath = null;\n      throw new IOException(e);\n    }\n    finalOffset = correctOffset(cas.getDocumentText().length());\n    Type tokenType = cas.getTypeSystem().getType(tokenTypeString);\n    iterator = cas.getAnnotationIndex(tokenType).iterator();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5891bd634d5ddbf7c48cff0f4818c682ca42a4a6","date":1421884114,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/UIMATypeAwareAnnotationsTokenizer#initializeIterator().mjava","pathOld":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/UIMATypeAwareAnnotationsTokenizer#initializeIterator().mjava","sourceNew":"  @Override\n  protected void initializeIterator() throws IOException {\n    try {\n      analyzeInput();\n    } catch (AnalysisEngineProcessException | ResourceInitializationException e) {\n      throw new IOException(e);\n    }\n    featurePath = cas.createFeaturePath();\n    try {\n      featurePath.initialize(typeAttributeFeaturePath);\n    } catch (CASException e) {\n      featurePath = null;\n      throw new IOException(e);\n    }\n    finalOffset = correctOffset(cas.getDocumentText().length());\n    Type tokenType = cas.getTypeSystem().getType(tokenTypeString);\n    iterator = cas.getAnnotationIndex(tokenType).iterator();\n\n  }\n\n","sourceOld":"  @Override\n  protected void initializeIterator() throws IOException {\n    try {\n      analyzeInput();\n    } catch (AnalysisEngineProcessException e) {\n      throw new IOException(e);\n    } catch (ResourceInitializationException e) {\n      throw new IOException(e);\n    }\n    featurePath = cas.createFeaturePath();\n    try {\n      featurePath.initialize(typeAttributeFeaturePath);\n    } catch (CASException e) {\n      featurePath = null;\n      throw new IOException(e);\n    }\n    finalOffset = correctOffset(cas.getDocumentText().length());\n    Type tokenType = cas.getTypeSystem().getType(tokenTypeString);\n    iterator = cas.getAnnotationIndex(tokenType).iterator();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8c9a6ea78b00a421744e770568d8c2aab262e4cd","date":1530971937,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/UIMATypeAwareAnnotationsTokenizer#initializeIterator().mjava","sourceNew":null,"sourceOld":"  @Override\n  protected void initializeIterator() throws IOException {\n    try {\n      analyzeInput();\n    } catch (AnalysisEngineProcessException | ResourceInitializationException e) {\n      throw new IOException(e);\n    }\n    featurePath = cas.createFeaturePath();\n    try {\n      featurePath.initialize(typeAttributeFeaturePath);\n    } catch (CASException e) {\n      featurePath = null;\n      throw new IOException(e);\n    }\n    finalOffset = correctOffset(cas.getDocumentText().length());\n    Type tokenType = cas.getTypeSystem().getType(tokenTypeString);\n    iterator = cas.getAnnotationIndex(tokenType).iterator();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":4,"author":"Michael Braun","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/UIMATypeAwareAnnotationsTokenizer#initializeIterator().mjava","sourceNew":null,"sourceOld":"  @Override\n  protected void initializeIterator() throws IOException {\n    try {\n      analyzeInput();\n    } catch (AnalysisEngineProcessException | ResourceInitializationException e) {\n      throw new IOException(e);\n    }\n    featurePath = cas.createFeaturePath();\n    try {\n      featurePath.initialize(typeAttributeFeaturePath);\n    } catch (CASException e) {\n      featurePath = null;\n      throw new IOException(e);\n    }\n    finalOffset = correctOffset(cas.getDocumentText().length());\n    Type tokenType = cas.getTypeSystem().getType(tokenTypeString);\n    iterator = cas.getAnnotationIndex(tokenType).iterator();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":4,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/UIMATypeAwareAnnotationsTokenizer#initializeIterator().mjava","sourceNew":null,"sourceOld":"  @Override\n  protected void initializeIterator() throws IOException {\n    try {\n      analyzeInput();\n    } catch (AnalysisEngineProcessException | ResourceInitializationException e) {\n      throw new IOException(e);\n    }\n    featurePath = cas.createFeaturePath();\n    try {\n      featurePath.initialize(typeAttributeFeaturePath);\n    } catch (CASException e) {\n      featurePath = null;\n      throw new IOException(e);\n    }\n    finalOffset = correctOffset(cas.getDocumentText().length());\n    Type tokenType = cas.getTypeSystem().getType(tokenTypeString);\n    iterator = cas.getAnnotationIndex(tokenType).iterator();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b89678825b68eccaf09e6ab71675fc0b0af1e099","7530de27b87b961b51f01bd1299b7004d46e8823"],"0ed7109a575849a2656ac2974fe87da5699a6e50":["7530de27b87b961b51f01bd1299b7004d46e8823"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["5891bd634d5ddbf7c48cff0f4818c682ca42a4a6","8c9a6ea78b00a421744e770568d8c2aab262e4cd"],"5891bd634d5ddbf7c48cff0f4818c682ca42a4a6":["0ed7109a575849a2656ac2974fe87da5699a6e50"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8c9a6ea78b00a421744e770568d8c2aab262e4cd"],"8c9a6ea78b00a421744e770568d8c2aab262e4cd":["5891bd634d5ddbf7c48cff0f4818c682ca42a4a6"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["5891bd634d5ddbf7c48cff0f4818c682ca42a4a6","8c9a6ea78b00a421744e770568d8c2aab262e4cd"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"0ed7109a575849a2656ac2974fe87da5699a6e50":["5891bd634d5ddbf7c48cff0f4818c682ca42a4a6"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"5891bd634d5ddbf7c48cff0f4818c682ca42a4a6":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","8c9a6ea78b00a421744e770568d8c2aab262e4cd","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","0ed7109a575849a2656ac2974fe87da5699a6e50"],"8c9a6ea78b00a421744e770568d8c2aab262e4cd":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}