{"path":"solr/core/src/test/org/apache/solr/core/TestMergePolicyConfig#testDefaultMergePolicyConfig().mjava","commits":[{"id":"6d0fc107895562138b4cc92eccac979d28579b98","date":1371594707,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestMergePolicyConfig#testDefaultMergePolicyConfig().mjava","pathOld":"/dev/null","sourceNew":"  public void testDefaultMergePolicyConfig() throws Exception {\n    initCore(\"solrconfig-mergepolicy-defaults.xml\",\"schema-minimal.xml\");\n    IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore().getLatestSchema());\n\n    TieredMergePolicy tieredMP = assertAndCast(TieredMergePolicy.class,\n                                               iwc.getMergePolicy());\n    assertEquals(0.0D, tieredMP.getNoCFSRatio(), 0.0D);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e10d5539266ae943f9fa6befa6ac3481a2419c8","date":1371692194,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestMergePolicyConfig#testDefaultMergePolicyConfig().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestMergePolicyConfig#testDefaultMergePolicyConfig().mjava","sourceNew":"  public void testDefaultMergePolicyConfig() throws Exception {\n    initCore(\"solrconfig-mergepolicy-defaults.xml\",\"schema-minimal.xml\");\n    IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore().getLatestSchema());\n    assertEquals(false, iwc.getUseCompoundFile());\n\n    TieredMergePolicy tieredMP = assertAndCast(TieredMergePolicy.class,\n                                               iwc.getMergePolicy());\n    assertEquals(0.0D, tieredMP.getNoCFSRatio(), 0.0D);\n\n    assertCommitSomeNewDocs();\n    assertCompoundSegments(h.getCore(), false);\n  }\n\n","sourceOld":"  public void testDefaultMergePolicyConfig() throws Exception {\n    initCore(\"solrconfig-mergepolicy-defaults.xml\",\"schema-minimal.xml\");\n    IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore().getLatestSchema());\n\n    TieredMergePolicy tieredMP = assertAndCast(TieredMergePolicy.class,\n                                               iwc.getMergePolicy());\n    assertEquals(0.0D, tieredMP.getNoCFSRatio(), 0.0D);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestMergePolicyConfig#testDefaultMergePolicyConfig().mjava","pathOld":"/dev/null","sourceNew":"  public void testDefaultMergePolicyConfig() throws Exception {\n    initCore(\"solrconfig-mergepolicy-defaults.xml\",\"schema-minimal.xml\");\n    IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore().getLatestSchema());\n    assertEquals(false, iwc.getUseCompoundFile());\n\n    TieredMergePolicy tieredMP = assertAndCast(TieredMergePolicy.class,\n                                               iwc.getMergePolicy());\n    assertEquals(0.0D, tieredMP.getNoCFSRatio(), 0.0D);\n\n    assertCommitSomeNewDocs();\n    assertCompoundSegments(h.getCore(), false);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0","date":1422781929,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestMergePolicyConfig#testDefaultMergePolicyConfig().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestMergePolicyConfig#testDefaultMergePolicyConfig().mjava","sourceNew":"  public void testDefaultMergePolicyConfig() throws Exception {\n    initCore(\"solrconfig-mergepolicy-defaults.xml\",\"schema-minimal.xml\");\n    IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore());\n    assertEquals(false, iwc.getUseCompoundFile());\n\n    TieredMergePolicy tieredMP = assertAndCast(TieredMergePolicy.class,\n                                               iwc.getMergePolicy());\n    assertEquals(0.0D, tieredMP.getNoCFSRatio(), 0.0D);\n\n    assertCommitSomeNewDocs();\n    assertCompoundSegments(h.getCore(), false);\n  }\n\n","sourceOld":"  public void testDefaultMergePolicyConfig() throws Exception {\n    initCore(\"solrconfig-mergepolicy-defaults.xml\",\"schema-minimal.xml\");\n    IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore().getLatestSchema());\n    assertEquals(false, iwc.getUseCompoundFile());\n\n    TieredMergePolicy tieredMP = assertAndCast(TieredMergePolicy.class,\n                                               iwc.getMergePolicy());\n    assertEquals(0.0D, tieredMP.getNoCFSRatio(), 0.0D);\n\n    assertCommitSomeNewDocs();\n    assertCompoundSegments(h.getCore(), false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d02cd5e26c3667f84cdedfc0e6f9e92f381a9b5d","date":1432150334,"type":3,"author":"Tomas Eduardo Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestMergePolicyConfig#testDefaultMergePolicyConfig().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestMergePolicyConfig#testDefaultMergePolicyConfig().mjava","sourceNew":"  public void testDefaultMergePolicyConfig() throws Exception {\n    initCore(\"solrconfig-mergepolicy-defaults.xml\",\"schema-minimal.xml\");\n    IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore());\n    assertEquals(false, iwc.getUseCompoundFile());\n\n    TieredMergePolicy tieredMP = assertAndCast(TieredMergePolicy.class,\n                                               iwc.getMergePolicy());\n    assertEquals(TieredMergePolicy.DEFAULT_NO_CFS_RATIO, tieredMP.getNoCFSRatio(), 0.0D);\n\n    assertCommitSomeNewDocs();\n    assertCompoundSegments(h.getCore(), false);\n  }\n\n","sourceOld":"  public void testDefaultMergePolicyConfig() throws Exception {\n    initCore(\"solrconfig-mergepolicy-defaults.xml\",\"schema-minimal.xml\");\n    IndexWriterConfig iwc = solrConfig.indexConfig.toIndexWriterConfig(h.getCore());\n    assertEquals(false, iwc.getUseCompoundFile());\n\n    TieredMergePolicy tieredMP = assertAndCast(TieredMergePolicy.class,\n                                               iwc.getMergePolicy());\n    assertEquals(0.0D, tieredMP.getNoCFSRatio(), 0.0D);\n\n    assertCommitSomeNewDocs();\n    assertCompoundSegments(h.getCore(), false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6d0fc107895562138b4cc92eccac979d28579b98":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0e10d5539266ae943f9fa6befa6ac3481a2419c8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d02cd5e26c3667f84cdedfc0e6f9e92f381a9b5d":["5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0"],"0e10d5539266ae943f9fa6befa6ac3481a2419c8":["6d0fc107895562138b4cc92eccac979d28579b98"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d02cd5e26c3667f84cdedfc0e6f9e92f381a9b5d"],"5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0":["0e10d5539266ae943f9fa6befa6ac3481a2419c8"]},"commit2Childs":{"6d0fc107895562138b4cc92eccac979d28579b98":["0e10d5539266ae943f9fa6befa6ac3481a2419c8"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6d0fc107895562138b4cc92eccac979d28579b98","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"d02cd5e26c3667f84cdedfc0e6f9e92f381a9b5d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0e10d5539266ae943f9fa6befa6ac3481a2419c8":["37a0f60745e53927c4c876cfe5b5a58170f0646c","5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0"],"5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0":["d02cd5e26c3667f84cdedfc0e6f9e92f381a9b5d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}