{"path":"src/java/org/apache/solr/handler/component/StatsValues#accumulate(NamedList).mjava","commits":[{"id":"861fa37cce2d9d3f8978bbb767e87a91d41ed4a8","date":1252682465,"type":1,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/component/StatsValues#accumulate(NamedList).mjava","pathOld":"src/java/org/apache/solr/handler/component/StatsValues[StatsComponent]#accumulate(NamedList).mjava","sourceNew":"  public void accumulate(NamedList stv){\n    min = Math.min(min, (Double)stv.get(\"min\"));\n    max = Math.max(max, (Double)stv.get(\"max\"));\n    sum += (Double)stv.get(\"sum\");\n    count += (Long)stv.get(\"count\");\n    missing += (Long)stv.get(\"missing\");\n    sumOfSquares += (Double)stv.get(\"sumOfSquares\");\n    \n    NamedList f = (NamedList)stv.get( FACETS );\n    if( f != null ) {\n      if( facets == null ) {\n        facets = new HashMap<String, Map<String,StatsValues>>();\n      }\n      \n      for( int i=0; i< f.size(); i++ ) {\n        String field = f.getName(i);\n        NamedList vals = (NamedList)f.getVal( i );\n        Map<String,StatsValues> addTo = facets.get( field );\n        if( addTo == null ) {\n          addTo = new HashMap<String,StatsValues>();\n          facets.put( field, addTo );\n        }\n        for( int j=0; j< vals.size(); j++ ) {\n          String val = f.getName(i);\n          StatsValues vvals = addTo.get( val );\n          if( vvals == null ) {\n            vvals = new StatsValues();\n            addTo.put( val, vvals );\n          }\n          vvals.accumulate( (NamedList)f.getVal( i ) );\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public void accumulate(NamedList stv){\n    min = Math.min(min, (Double)stv.get(\"min\"));\n    max = Math.max(max, (Double)stv.get(\"max\"));\n    sum += (Double)stv.get(\"sum\");\n    count += (Long)stv.get(\"count\");\n    missing += (Long)stv.get(\"missing\");\n    sumOfSquares += (Double)stv.get(\"sumOfSquares\");\n    \n    NamedList f = (NamedList)stv.get( FACETS );\n    if( f != null ) {\n      if( facets == null ) {\n        facets = new HashMap<String, Map<String,StatsValues>>();\n      }\n      \n      for( int i=0; i< f.size(); i++ ) {\n        String field = f.getName(i);\n        NamedList vals = (NamedList)f.getVal( i );\n        Map<String,StatsValues> addTo = facets.get( field );\n        if( addTo == null ) {\n          addTo = new HashMap<String,StatsValues>();\n          facets.put( field, addTo );\n        }\n        for( int j=0; j< vals.size(); j++ ) {\n          String val = f.getName(i);\n          StatsValues vvals = addTo.get( val );\n          if( vvals == null ) {\n            vvals = new StatsValues();\n            addTo.put( val, vvals );\n          }\n          vvals.accumulate( (NamedList)f.getVal( i ) );\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2b4473c164290e61a8ffdadb5dd56b149b85bc0a","date":1265338188,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/component/StatsValues#accumulate(NamedList).mjava","pathOld":"src/java/org/apache/solr/handler/component/StatsValues#accumulate(NamedList).mjava","sourceNew":"  public void accumulate(NamedList stv){\n    min = Math.min(min, (Double)stv.get(\"min\"));\n    max = Math.max(max, (Double)stv.get(\"max\"));\n    sum += (Double)stv.get(\"sum\");\n    count += (Long)stv.get(\"count\");\n    missing += (Long)stv.get(\"missing\");\n    sumOfSquares += (Double)stv.get(\"sumOfSquares\");\n    \n    NamedList f = (NamedList)stv.get( FACETS );\n    if( f != null ) {\n      if( facets == null ) {\n        facets = new HashMap<String, Map<String,StatsValues>>();\n      }\n      \n      for( int i=0; i< f.size(); i++ ) {\n        String field = f.getName(i);\n        NamedList vals = (NamedList)f.getVal( i );\n        Map<String,StatsValues> addTo = facets.get( field );\n        if( addTo == null ) {\n          addTo = new HashMap<String,StatsValues>();\n          facets.put( field, addTo );\n        }\n        for( int j=0; j< vals.size(); j++ ) {\n          String val = vals.getName(j);\n          StatsValues vvals = addTo.get( val );\n          if( vvals == null ) {\n            vvals = new StatsValues();\n            addTo.put( val, vvals );\n          }\n          vvals.accumulate( (NamedList)vals.getVal( j ) );\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public void accumulate(NamedList stv){\n    min = Math.min(min, (Double)stv.get(\"min\"));\n    max = Math.max(max, (Double)stv.get(\"max\"));\n    sum += (Double)stv.get(\"sum\");\n    count += (Long)stv.get(\"count\");\n    missing += (Long)stv.get(\"missing\");\n    sumOfSquares += (Double)stv.get(\"sumOfSquares\");\n    \n    NamedList f = (NamedList)stv.get( FACETS );\n    if( f != null ) {\n      if( facets == null ) {\n        facets = new HashMap<String, Map<String,StatsValues>>();\n      }\n      \n      for( int i=0; i< f.size(); i++ ) {\n        String field = f.getName(i);\n        NamedList vals = (NamedList)f.getVal( i );\n        Map<String,StatsValues> addTo = facets.get( field );\n        if( addTo == null ) {\n          addTo = new HashMap<String,StatsValues>();\n          facets.put( field, addTo );\n        }\n        for( int j=0; j< vals.size(); j++ ) {\n          String val = f.getName(i);\n          StatsValues vvals = addTo.get( val );\n          if( vvals == null ) {\n            vvals = new StatsValues();\n            addTo.put( val, vvals );\n          }\n          vvals.accumulate( (NamedList)f.getVal( i ) );\n        }\n      }\n    }\n  }\n\n","bugFix":["758a0ba5e213f4d1fc89087ae6e4678f7879e450"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/component/StatsValues#accumulate(NamedList).mjava","pathOld":"src/java/org/apache/solr/handler/component/StatsValues#accumulate(NamedList).mjava","sourceNew":"  public void accumulate(NamedList stv){\n    min = Math.min(min, (Double)stv.get(\"min\"));\n    max = Math.max(max, (Double)stv.get(\"max\"));\n    sum += (Double)stv.get(\"sum\");\n    count += (Long)stv.get(\"count\");\n    missing += (Long)stv.get(\"missing\");\n    sumOfSquares += (Double)stv.get(\"sumOfSquares\");\n    \n    NamedList f = (NamedList)stv.get( FACETS );\n    if( f != null ) {\n      if( facets == null ) {\n        facets = new HashMap<String, Map<String,StatsValues>>();\n      }\n      \n      for( int i=0; i< f.size(); i++ ) {\n        String field = f.getName(i);\n        NamedList vals = (NamedList)f.getVal( i );\n        Map<String,StatsValues> addTo = facets.get( field );\n        if( addTo == null ) {\n          addTo = new HashMap<String,StatsValues>();\n          facets.put( field, addTo );\n        }\n        for( int j=0; j< vals.size(); j++ ) {\n          String val = vals.getName(j);\n          StatsValues vvals = addTo.get( val );\n          if( vvals == null ) {\n            vvals = new StatsValues();\n            addTo.put( val, vvals );\n          }\n          vvals.accumulate( (NamedList)vals.getVal( j ) );\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public void accumulate(NamedList stv){\n    min = Math.min(min, (Double)stv.get(\"min\"));\n    max = Math.max(max, (Double)stv.get(\"max\"));\n    sum += (Double)stv.get(\"sum\");\n    count += (Long)stv.get(\"count\");\n    missing += (Long)stv.get(\"missing\");\n    sumOfSquares += (Double)stv.get(\"sumOfSquares\");\n    \n    NamedList f = (NamedList)stv.get( FACETS );\n    if( f != null ) {\n      if( facets == null ) {\n        facets = new HashMap<String, Map<String,StatsValues>>();\n      }\n      \n      for( int i=0; i< f.size(); i++ ) {\n        String field = f.getName(i);\n        NamedList vals = (NamedList)f.getVal( i );\n        Map<String,StatsValues> addTo = facets.get( field );\n        if( addTo == null ) {\n          addTo = new HashMap<String,StatsValues>();\n          facets.put( field, addTo );\n        }\n        for( int j=0; j< vals.size(); j++ ) {\n          String val = vals.getName(j);\n          StatsValues vvals = addTo.get( val );\n          if( vvals == null ) {\n            vvals = new StatsValues();\n            addTo.put( val, vvals );\n          }\n          vvals.accumulate( (NamedList)vals.getVal( j ) );\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["2b4473c164290e61a8ffdadb5dd56b149b85bc0a"],"2b4473c164290e61a8ffdadb5dd56b149b85bc0a":["861fa37cce2d9d3f8978bbb767e87a91d41ed4a8"],"861fa37cce2d9d3f8978bbb767e87a91d41ed4a8":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["861fa37cce2d9d3f8978bbb767e87a91d41ed4a8"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"2b4473c164290e61a8ffdadb5dd56b149b85bc0a":["ad94625fb8d088209f46650c8097196fec67f00c"],"861fa37cce2d9d3f8978bbb767e87a91d41ed4a8":["2b4473c164290e61a8ffdadb5dd56b149b85bc0a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}