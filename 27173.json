{"path":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeSphereModelRectRelationTest#testFailure1().mjava","commits":[{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeSphereModelRectRelationTest#testFailure1().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeSphereModelRectRelationTest#testFailure1().mjava","sourceNew":"  @Test\n  public void testFailure1() {\n    final GeoBBox rect = GeoBBoxFactory.makeGeoBBox(planetModel, 88 * RADIANS_PER_DEGREE, 30 * RADIANS_PER_DEGREE, -30 * RADIANS_PER_DEGREE, 62 * RADIANS_PER_DEGREE);\n    final List<GeoPoint> points = new ArrayList<>();\n    points.add(new GeoPoint(planetModel, 66.2465299717 * RADIANS_PER_DEGREE, -29.1786158537 * RADIANS_PER_DEGREE));\n    points.add(new GeoPoint(planetModel, 43.684447915 * RADIANS_PER_DEGREE, 46.2210986329 * RADIANS_PER_DEGREE));\n    points.add(new GeoPoint(planetModel, 30.4579218227 * RADIANS_PER_DEGREE, 14.5238410082 * RADIANS_PER_DEGREE));\n    final GeoShape path = GeoPolygonFactory.makeGeoPolygon(planetModel, points,0);\n\n    final GeoPoint point = new GeoPoint(planetModel, 34.2730264413182 * RADIANS_PER_DEGREE, 82.75500168892472 * RADIANS_PER_DEGREE);\n\n    // Apparently the rectangle thinks the polygon is completely within it... \"shape inside rectangle\"\n    assertTrue(GeoArea.WITHIN == rect.getRelationship(path));\n\n    // Point is within path? Apparently not...\n    assertFalse(path.isWithin(point));\n\n    // If it is within the path, it must be within the rectangle, and similarly visa versa\n    assertFalse(rect.isWithin(point));\n\n  }\n\n","sourceOld":"  @Test\n  public void testFailure1() {\n    final GeoBBox rect = GeoBBoxFactory.makeGeoBBox(planetModel, 88 * RADIANS_PER_DEGREE, 30 * RADIANS_PER_DEGREE, -30 * RADIANS_PER_DEGREE, 62 * RADIANS_PER_DEGREE);\n    final List<GeoPoint> points = new ArrayList<>();\n    points.add(new GeoPoint(planetModel, 66.2465299717 * RADIANS_PER_DEGREE, -29.1786158537 * RADIANS_PER_DEGREE));\n    points.add(new GeoPoint(planetModel, 43.684447915 * RADIANS_PER_DEGREE, 46.2210986329 * RADIANS_PER_DEGREE));\n    points.add(new GeoPoint(planetModel, 30.4579218227 * RADIANS_PER_DEGREE, 14.5238410082 * RADIANS_PER_DEGREE));\n    final GeoShape path = GeoPolygonFactory.makeGeoPolygon(planetModel, points,0);\n\n    final GeoPoint point = new GeoPoint(planetModel, 34.2730264413182 * RADIANS_PER_DEGREE, 82.75500168892472 * RADIANS_PER_DEGREE);\n\n    // Apparently the rectangle thinks the polygon is completely within it... \"shape inside rectangle\"\n    assertTrue(GeoArea.WITHIN == rect.getRelationship(path));\n\n    // Point is within path? Apparently not...\n    assertFalse(path.isWithin(point));\n\n    // If it is within the path, it must be within the rectangle, and similarly visa versa\n    assertFalse(rect.isWithin(point));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeSphereModelRectRelationTest#testFailure1().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeSphereModelRectRelationTest#testFailure1().mjava","sourceNew":"  @Test\n  public void testFailure1() {\n    final GeoBBox rect = GeoBBoxFactory.makeGeoBBox(planetModel, 88 * RADIANS_PER_DEGREE, 30 * RADIANS_PER_DEGREE, -30 * RADIANS_PER_DEGREE, 62 * RADIANS_PER_DEGREE);\n    final List<GeoPoint> points = new ArrayList<>();\n    points.add(new GeoPoint(planetModel, 66.2465299717 * RADIANS_PER_DEGREE, -29.1786158537 * RADIANS_PER_DEGREE));\n    points.add(new GeoPoint(planetModel, 43.684447915 * RADIANS_PER_DEGREE, 46.2210986329 * RADIANS_PER_DEGREE));\n    points.add(new GeoPoint(planetModel, 30.4579218227 * RADIANS_PER_DEGREE, 14.5238410082 * RADIANS_PER_DEGREE));\n    final GeoShape path = GeoPolygonFactory.makeGeoPolygon(planetModel, points,0);\n\n    final GeoPoint point = new GeoPoint(planetModel, 34.2730264413182 * RADIANS_PER_DEGREE, 82.75500168892472 * RADIANS_PER_DEGREE);\n\n    // Apparently the rectangle thinks the polygon is completely within it... \"shape inside rectangle\"\n    assertTrue(GeoArea.WITHIN == rect.getRelationship(path));\n\n    // Point is within path? Apparently not...\n    assertFalse(path.isWithin(point));\n\n    // If it is within the path, it must be within the rectangle, and similarly visa versa\n    assertFalse(rect.isWithin(point));\n\n  }\n\n","sourceOld":"  @Test\n  public void testFailure1() {\n    final GeoBBox rect = GeoBBoxFactory.makeGeoBBox(planetModel, 88 * RADIANS_PER_DEGREE, 30 * RADIANS_PER_DEGREE, -30 * RADIANS_PER_DEGREE, 62 * RADIANS_PER_DEGREE);\n    final List<GeoPoint> points = new ArrayList<>();\n    points.add(new GeoPoint(planetModel, 66.2465299717 * RADIANS_PER_DEGREE, -29.1786158537 * RADIANS_PER_DEGREE));\n    points.add(new GeoPoint(planetModel, 43.684447915 * RADIANS_PER_DEGREE, 46.2210986329 * RADIANS_PER_DEGREE));\n    points.add(new GeoPoint(planetModel, 30.4579218227 * RADIANS_PER_DEGREE, 14.5238410082 * RADIANS_PER_DEGREE));\n    final GeoShape path = GeoPolygonFactory.makeGeoPolygon(planetModel, points,0);\n\n    final GeoPoint point = new GeoPoint(planetModel, 34.2730264413182 * RADIANS_PER_DEGREE, 82.75500168892472 * RADIANS_PER_DEGREE);\n\n    // Apparently the rectangle thinks the polygon is completely within it... \"shape inside rectangle\"\n    assertTrue(GeoArea.WITHIN == rect.getRelationship(path));\n\n    // Point is within path? Apparently not...\n    assertFalse(path.isWithin(point));\n\n    // If it is within the path, it must be within the rectangle, and similarly visa versa\n    assertFalse(rect.isWithin(point));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"414425421ced68c7064f08c9da6a2c95399226d9","date":1460921822,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeSphereModelRectRelationTest#testFailure1().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeSphereModelRectRelationTest#testFailure1().mjava","sourceNew":"  @Test\n  public void testFailure1() {\n    final GeoBBox rect = GeoBBoxFactory.makeGeoBBox(planetModel, 88 * RADIANS_PER_DEGREE, 30 * RADIANS_PER_DEGREE, -30 * RADIANS_PER_DEGREE, 62 * RADIANS_PER_DEGREE);\n    final List<GeoPoint> points = new ArrayList<>();\n    points.add(new GeoPoint(planetModel, 30.4579218227 * RADIANS_PER_DEGREE, 14.5238410082 * RADIANS_PER_DEGREE));\n    points.add(new GeoPoint(planetModel, 43.684447915 * RADIANS_PER_DEGREE, 46.2210986329 * RADIANS_PER_DEGREE));\n    points.add(new GeoPoint(planetModel, 66.2465299717 * RADIANS_PER_DEGREE, -29.1786158537 * RADIANS_PER_DEGREE));\n    final GeoShape path = GeoPolygonFactory.makeGeoPolygon(planetModel, points);\n\n    final GeoPoint point = new GeoPoint(planetModel, 34.2730264413182 * RADIANS_PER_DEGREE, 82.75500168892472 * RADIANS_PER_DEGREE);\n\n    // Apparently the rectangle thinks the polygon is completely within it... \"shape inside rectangle\"\n    assertTrue(GeoArea.WITHIN == rect.getRelationship(path));\n\n    // Point is within path? Apparently not...\n    assertFalse(path.isWithin(point));\n\n    // If it is within the path, it must be within the rectangle, and similarly visa versa\n    assertFalse(rect.isWithin(point));\n\n  }\n\n","sourceOld":"  @Test\n  public void testFailure1() {\n    final GeoBBox rect = GeoBBoxFactory.makeGeoBBox(planetModel, 88 * RADIANS_PER_DEGREE, 30 * RADIANS_PER_DEGREE, -30 * RADIANS_PER_DEGREE, 62 * RADIANS_PER_DEGREE);\n    final List<GeoPoint> points = new ArrayList<>();\n    points.add(new GeoPoint(planetModel, 66.2465299717 * RADIANS_PER_DEGREE, -29.1786158537 * RADIANS_PER_DEGREE));\n    points.add(new GeoPoint(planetModel, 43.684447915 * RADIANS_PER_DEGREE, 46.2210986329 * RADIANS_PER_DEGREE));\n    points.add(new GeoPoint(planetModel, 30.4579218227 * RADIANS_PER_DEGREE, 14.5238410082 * RADIANS_PER_DEGREE));\n    final GeoShape path = GeoPolygonFactory.makeGeoPolygon(planetModel, points,0);\n\n    final GeoPoint point = new GeoPoint(planetModel, 34.2730264413182 * RADIANS_PER_DEGREE, 82.75500168892472 * RADIANS_PER_DEGREE);\n\n    // Apparently the rectangle thinks the polygon is completely within it... \"shape inside rectangle\"\n    assertTrue(GeoArea.WITHIN == rect.getRelationship(path));\n\n    // Point is within path? Apparently not...\n    assertFalse(path.isWithin(point));\n\n    // If it is within the path, it must be within the rectangle, and similarly visa versa\n    assertFalse(rect.isWithin(point));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","112d77ac8d3e10a362516ad834c9a11d35c94234"],"414425421ced68c7064f08c9da6a2c95399226d9":["af2638813028b254a88b418ebeafb541afb49653"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["414425421ced68c7064f08c9da6a2c95399226d9"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["414425421ced68c7064f08c9da6a2c95399226d9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"414425421ced68c7064f08c9da6a2c95399226d9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}