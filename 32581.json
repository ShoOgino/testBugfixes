{"path":"src/lucene_extras/org/apache/lucene/analysis/SynonymFilter#match(SynonymMap).mjava","commits":[{"id":"0c3e228bf650e96f3002a8fb73dd0c13d55af077","date":1138253849,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/lucene_extras/org/apache/lucene/analysis/SynonymFilter#match(SynonymMap).mjava","pathOld":"/dev/null","sourceNew":"  private SynonymMap match(SynonymMap map) throws IOException {\n    SynonymMap result = null;\n\n    if (map.submap != null) {\n      Token tok = nextTok();\n      if (tok != null) {\n        // check for positionIncrement!=1?  if>1, should not match, if==0, check multiple at this level?\n        String str = ignoreCase ? tok.termText.toLowerCase() : tok.termText;\n\n        SynonymMap subMap = (SynonymMap)map.submap.get(str);\n\n        if (subMap !=null) {\n          // recurse\n          result = match(subMap);\n        }\n        if (result != null) {\n          matched.addFirst(tok);\n        } else {\n          // push back unmatched token\n          pushTok(tok);\n        }\n      }\n    }\n\n    // if no longer sequence matched, so if this node has synonyms, it's the match.\n    if (result==null && map.synonyms!=null) {\n      result = map;\n    }\n\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd72c170d0045d244f19bc40f18b517f56fbf9c9","date":1138916232,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/SynonymFilter#match(SynonymMap).mjava","pathOld":"src/lucene_extras/org/apache/lucene/analysis/SynonymFilter#match(SynonymMap).mjava","sourceNew":"  private SynonymMap match(SynonymMap map) throws IOException {\n    SynonymMap result = null;\n\n    if (map.submap != null) {\n      Token tok = nextTok();\n      if (tok != null) {\n        // check for positionIncrement!=1?  if>1, should not match, if==0, check multiple at this level?\n        String str = ignoreCase ? tok.termText().toLowerCase() : tok.termText();\n\n        SynonymMap subMap = (SynonymMap)map.submap.get(str);\n\n        if (subMap !=null) {\n          // recurse\n          result = match(subMap);\n        }\n        if (result != null) {\n          matched.addFirst(tok);\n        } else {\n          // push back unmatched token\n          pushTok(tok);\n        }\n      }\n    }\n\n    // if no longer sequence matched, so if this node has synonyms, it's the match.\n    if (result==null && map.synonyms!=null) {\n      result = map;\n    }\n\n    return result;\n  }\n\n","sourceOld":"  private SynonymMap match(SynonymMap map) throws IOException {\n    SynonymMap result = null;\n\n    if (map.submap != null) {\n      Token tok = nextTok();\n      if (tok != null) {\n        // check for positionIncrement!=1?  if>1, should not match, if==0, check multiple at this level?\n        String str = ignoreCase ? tok.termText.toLowerCase() : tok.termText;\n\n        SynonymMap subMap = (SynonymMap)map.submap.get(str);\n\n        if (subMap !=null) {\n          // recurse\n          result = match(subMap);\n        }\n        if (result != null) {\n          matched.addFirst(tok);\n        } else {\n          // push back unmatched token\n          pushTok(tok);\n        }\n      }\n    }\n\n    // if no longer sequence matched, so if this node has synonyms, it's the match.\n    if (result==null && map.synonyms!=null) {\n      result = map;\n    }\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bd72c170d0045d244f19bc40f18b517f56fbf9c9":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"bd72c170d0045d244f19bc40f18b517f56fbf9c9":[],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["bd72c170d0045d244f19bc40f18b517f56fbf9c9"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["bd72c170d0045d244f19bc40f18b517f56fbf9c9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}