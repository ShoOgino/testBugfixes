{"path":"lucene/queryparser/src/test/org/apache/lucene/queryparser/classic/TestQueryParser.FoldingFilter#incrementToken().mjava","commits":[{"id":"ea4107f60b9f95623c16025c9c247412ff809092","date":1468333987,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/classic/TestQueryParser.FoldingFilter#incrementToken().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/analyzing/TestAnalyzingQueryParser.FoldingFilter#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (input.incrementToken()) {\n        char term[] = termAtt.buffer();\n        for (int i = 0; i < term.length; i++)\n          switch(term[i]) {\n            case 'ü':\n              term[i] = 'u'; \n              break;\n            case 'ö': \n              term[i] = 'o'; \n              break;\n            case 'é': \n              term[i] = 'e'; \n              break;\n            case 'ï': \n              term[i] = 'i'; \n              break;\n          }\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (input.incrementToken()) {\n        char term[] = termAtt.buffer();\n        for (int i = 0; i < term.length; i++)\n          switch(term[i]) {\n            case 'ü':\n              term[i] = 'u'; \n              break;\n            case 'ö': \n              term[i] = 'o'; \n              break;\n            case 'é': \n              term[i] = 'e'; \n              break;\n            case 'ï': \n              term[i] = 'i'; \n              break;\n          }\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/classic/TestQueryParser.FoldingFilter#incrementToken().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/analyzing/TestAnalyzingQueryParser.FoldingFilter#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (input.incrementToken()) {\n        char term[] = termAtt.buffer();\n        for (int i = 0; i < term.length; i++)\n          switch(term[i]) {\n            case 'ü':\n              term[i] = 'u'; \n              break;\n            case 'ö': \n              term[i] = 'o'; \n              break;\n            case 'é': \n              term[i] = 'e'; \n              break;\n            case 'ï': \n              term[i] = 'i'; \n              break;\n          }\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (input.incrementToken()) {\n        char term[] = termAtt.buffer();\n        for (int i = 0; i < term.length; i++)\n          switch(term[i]) {\n            case 'ü':\n              term[i] = 'u'; \n              break;\n            case 'ö': \n              term[i] = 'o'; \n              break;\n            case 'é': \n              term[i] = 'e'; \n              break;\n            case 'ï': \n              term[i] = 'i'; \n              break;\n          }\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ea4107f60b9f95623c16025c9c247412ff809092":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ea4107f60b9f95623c16025c9c247412ff809092"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ea4107f60b9f95623c16025c9c247412ff809092"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ea4107f60b9f95623c16025c9c247412ff809092","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"ea4107f60b9f95623c16025c9c247412ff809092":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}