{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilter#reset().mjava","commits":[{"id":"b59603a30f81d2af70cd2033270521dc7c8ec626","date":1273513065,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilter#reset().mjava","pathOld":"solr/src/java/org/apache/solr/analysis/SynonymFilter#reset().mjava","sourceNew":"  @Override\n  public void reset() throws IOException {\n    input.reset();\n    replacement = null;\n  }\n\n","sourceOld":"  @Override\n  public void reset() throws IOException {\n    input.reset();\n    replacement = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fcbc12aa8147f5203ca283e7252ba4280d6ffd16","date":1305663400,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilter#reset().mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilter#reset().mjava","sourceNew":"  @Override\n  public void reset() throws IOException {\n    input.reset();\n    replacement = null;\n    exhausted = false;\n  }\n\n","sourceOld":"  @Override\n  public void reset() throws IOException {\n    input.reset();\n    replacement = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilter#reset().mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilter#reset().mjava","sourceNew":"  @Override\n  public void reset() throws IOException {\n    input.reset();\n    replacement = null;\n    exhausted = false;\n  }\n\n","sourceOld":"  @Override\n  public void reset() throws IOException {\n    input.reset();\n    replacement = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilter#reset().mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilter#reset().mjava","sourceNew":"  @Override\n  public void reset() throws IOException {\n    input.reset();\n    replacement = null;\n    exhausted = false;\n  }\n\n","sourceOld":"  @Override\n  public void reset() throws IOException {\n    input.reset();\n    replacement = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c","date":1310389132,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilter#reset().mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilter#reset().mjava","sourceNew":"  @Override\n  public void reset() throws IOException {\n    super.reset();\n    captureCount = 0;\n    finished = false;\n\n    // In normal usage these resets would not be needed,\n    // since they reset-as-they-are-consumed, but the app\n    // may not consume all input tokens in which case we\n    // have leftover state here:\n    for (PendingInput input : futureInputs) {\n      input.reset();\n    }\n    for (PendingOutputs output : futureOutputs) {\n      output.reset();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void reset() throws IOException {\n    input.reset();\n    replacement = null;\n    exhausted = false;\n  }\n\n","bugFix":null,"bugIntro":["71d2a614efdc82f57fe8ada2d0b48e7a4410a3ab"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"71d2a614efdc82f57fe8ada2d0b48e7a4410a3ab","date":1332343348,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilter#reset().mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilter#reset().mjava","sourceNew":"  @Override\n  public void reset() throws IOException {\n    super.reset();\n    captureCount = 0;\n    finished = false;\n    inputSkipCount = 0;\n    nextRead = nextWrite = 0;\n\n    // In normal usage these resets would not be needed,\n    // since they reset-as-they-are-consumed, but the app\n    // may not consume all input tokens (or we might hit an\n    // exception), in which case we have leftover state\n    // here:\n    for (PendingInput input : futureInputs) {\n      input.reset();\n    }\n    for (PendingOutputs output : futureOutputs) {\n      output.reset();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void reset() throws IOException {\n    super.reset();\n    captureCount = 0;\n    finished = false;\n\n    // In normal usage these resets would not be needed,\n    // since they reset-as-they-are-consumed, but the app\n    // may not consume all input tokens in which case we\n    // have leftover state here:\n    for (PendingInput input : futureInputs) {\n      input.reset();\n    }\n    for (PendingOutputs output : futureOutputs) {\n      output.reset();\n    }\n  }\n\n","bugFix":["44d6f0ab53c1962856b9f48dedb7a2a6cc18905c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilter#reset().mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilter#reset().mjava","sourceNew":"  @Override\n  public void reset() throws IOException {\n    super.reset();\n    captureCount = 0;\n    finished = false;\n    inputSkipCount = 0;\n    nextRead = nextWrite = 0;\n\n    // In normal usage these resets would not be needed,\n    // since they reset-as-they-are-consumed, but the app\n    // may not consume all input tokens (or we might hit an\n    // exception), in which case we have leftover state\n    // here:\n    for (PendingInput input : futureInputs) {\n      input.reset();\n    }\n    for (PendingOutputs output : futureOutputs) {\n      output.reset();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void reset() throws IOException {\n    super.reset();\n    captureCount = 0;\n    finished = false;\n    inputSkipCount = 0;\n    nextRead = nextWrite = 0;\n\n    // In normal usage these resets would not be needed,\n    // since they reset-as-they-are-consumed, but the app\n    // may not consume all input tokens (or we might hit an\n    // exception), in which case we have leftover state\n    // here:\n    for (PendingInput input : futureInputs) {\n      input.reset();\n    }\n    for (PendingOutputs output : futureOutputs) {\n      output.reset();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fcbc12aa8147f5203ca283e7252ba4280d6ffd16":["b59603a30f81d2af70cd2033270521dc7c8ec626"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["71d2a614efdc82f57fe8ada2d0b48e7a4410a3ab"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["b59603a30f81d2af70cd2033270521dc7c8ec626","fcbc12aa8147f5203ca283e7252ba4280d6ffd16"],"a3776dccca01c11e7046323cfad46a3b4a471233":["b59603a30f81d2af70cd2033270521dc7c8ec626","fcbc12aa8147f5203ca283e7252ba4280d6ffd16"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b59603a30f81d2af70cd2033270521dc7c8ec626":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"71d2a614efdc82f57fe8ada2d0b48e7a4410a3ab":["44d6f0ab53c1962856b9f48dedb7a2a6cc18905c"],"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c":["fcbc12aa8147f5203ca283e7252ba4280d6ffd16"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"fcbc12aa8147f5203ca283e7252ba4280d6ffd16":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","44d6f0ab53c1962856b9f48dedb7a2a6cc18905c"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":[],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b59603a30f81d2af70cd2033270521dc7c8ec626"],"b59603a30f81d2af70cd2033270521dc7c8ec626":["fcbc12aa8147f5203ca283e7252ba4280d6ffd16","c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233"],"71d2a614efdc82f57fe8ada2d0b48e7a4410a3ab":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c":["71d2a614efdc82f57fe8ada2d0b48e7a4410a3ab"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}