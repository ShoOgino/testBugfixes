{"path":"lucene/backwards/src/test/org/apache/lucene/index/TestParallelReader#testDocument().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/index/TestParallelReader#testDocument().mjava","pathOld":"backwards/src/test/org/apache/lucene/index/TestParallelReader#testDocument().mjava","sourceNew":"  public void testDocument() throws IOException {\n    Directory dir1 = getDir1();\n    Directory dir2 = getDir2();\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(dir1, false));\n    pr.add(IndexReader.open(dir2, false));\n\n    Document doc11 = pr.document(0, new MapFieldSelector(new String[] {\"f1\"}));\n    Document doc24 = pr.document(1, new MapFieldSelector(Arrays.asList(new String[] {\"f4\"})));\n    Document doc223 = pr.document(1, new MapFieldSelector(new String[] {\"f2\", \"f3\"}));\n    \n    assertEquals(1, doc11.getFields().size());\n    assertEquals(1, doc24.getFields().size());\n    assertEquals(2, doc223.getFields().size());\n    \n    assertEquals(\"v1\", doc11.get(\"f1\"));\n    assertEquals(\"v2\", doc24.get(\"f4\"));\n    assertEquals(\"v2\", doc223.get(\"f2\"));\n    assertEquals(\"v2\", doc223.get(\"f3\"));\n  }\n\n","sourceOld":"  public void testDocument() throws IOException {\n    Directory dir1 = getDir1();\n    Directory dir2 = getDir2();\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(dir1, false));\n    pr.add(IndexReader.open(dir2, false));\n\n    Document doc11 = pr.document(0, new MapFieldSelector(new String[] {\"f1\"}));\n    Document doc24 = pr.document(1, new MapFieldSelector(Arrays.asList(new String[] {\"f4\"})));\n    Document doc223 = pr.document(1, new MapFieldSelector(new String[] {\"f2\", \"f3\"}));\n    \n    assertEquals(1, doc11.getFields().size());\n    assertEquals(1, doc24.getFields().size());\n    assertEquals(2, doc223.getFields().size());\n    \n    assertEquals(\"v1\", doc11.get(\"f1\"));\n    assertEquals(\"v2\", doc24.get(\"f4\"));\n    assertEquals(\"v2\", doc223.get(\"f2\"));\n    assertEquals(\"v2\", doc223.get(\"f3\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/index/TestParallelReader#testDocument().mjava","sourceNew":null,"sourceOld":"  public void testDocument() throws IOException {\n    Directory dir1 = getDir1();\n    Directory dir2 = getDir2();\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(dir1, false));\n    pr.add(IndexReader.open(dir2, false));\n\n    Document doc11 = pr.document(0, new MapFieldSelector(new String[] {\"f1\"}));\n    Document doc24 = pr.document(1, new MapFieldSelector(Arrays.asList(new String[] {\"f4\"})));\n    Document doc223 = pr.document(1, new MapFieldSelector(new String[] {\"f2\", \"f3\"}));\n    \n    assertEquals(1, doc11.getFields().size());\n    assertEquals(1, doc24.getFields().size());\n    assertEquals(2, doc223.getFields().size());\n    \n    assertEquals(\"v1\", doc11.get(\"f1\"));\n    assertEquals(\"v2\", doc24.get(\"f4\"));\n    assertEquals(\"v2\", doc223.get(\"f2\"));\n    assertEquals(\"v2\", doc223.get(\"f3\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}