{"path":"solr/core/src/test/org/apache/solr/cloud/TestRebalanceLeaders#testBalancePropertySliceUnique().mjava","commits":[{"id":"73fd358e8ec697393d56617f4d9cedaca74dca14","date":1547954439,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRebalanceLeaders#testBalancePropertySliceUnique().mjava","pathOld":"/dev/null","sourceNew":"  // Test that automatically distributing a slice unique property un-sets that property if it's in any other replica\n  // on that slice.\n  // This is different than the test above. The test above sets individual properties on individual nodes. This one\n  // relies on Solr to pick which replicas to set the property on\n  @Test\n  public void testBalancePropertySliceUnique() throws KeeperException, InterruptedException, IOException, SolrServerException {\n    // Check both cases of \"special\" property preferred(Ll)eader\n    doTestBalancePropertySliceUnique(\"foo\" + random().nextInt(1_000_000));\n    removeAllProperties();\n    doTestBalancePropertySliceUnique(\"preferredleader\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c89f1ef80a9432f4eabaeda9a1e135cd72e60836","date":1547972642,"type":0,"author":"Tommaso Teofili","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRebalanceLeaders#testBalancePropertySliceUnique().mjava","pathOld":"/dev/null","sourceNew":"  // Test that automatically distributing a slice unique property un-sets that property if it's in any other replica\n  // on that slice.\n  // This is different than the test above. The test above sets individual properties on individual nodes. This one\n  // relies on Solr to pick which replicas to set the property on\n  @Test\n  public void testBalancePropertySliceUnique() throws KeeperException, InterruptedException, IOException, SolrServerException {\n    // Check both cases of \"special\" property preferred(Ll)eader\n    doTestBalancePropertySliceUnique(\"foo\" + random().nextInt(1_000_000));\n    removeAllProperties();\n    doTestBalancePropertySliceUnique(\"preferredleader\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","73fd358e8ec697393d56617f4d9cedaca74dca14"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"73fd358e8ec697393d56617f4d9cedaca74dca14":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["73fd358e8ec697393d56617f4d9cedaca74dca14"]},"commit2Childs":{"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","73fd358e8ec697393d56617f4d9cedaca74dca14"],"73fd358e8ec697393d56617f4d9cedaca74dca14":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}