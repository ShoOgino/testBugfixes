{"path":"sandbox/contributions/webcrawler-LARM/src/HTTPClient/HTTPConnection#getSocket(int).mjava","commits":[{"id":"05d36e0b328ec96237035fbcca240e73631396e5","date":1020520725,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/HTTPClient/HTTPConnection#getSocket(int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Gets a socket. Creates a socket to the proxy if set, or else to the\n     * actual destination.\n     *\n     * @param con_timeout      if not 0 then start a new thread to establish the\n     *      the connection and join(con_timeout) it. If the join() times out an\n     *      InteruptedIOException is thrown.\n     * @return                 The socket value\n     * @exception IOException  Description of the Exception\n     */\n    private Socket getSocket(int con_timeout)\n        throws IOException\n    {\n        Socket sock = null;\n\n        String actual_host;\n        int actual_port;\n\n        if (Proxy_Host != null)\n        {\n            actual_host = Proxy_Host;\n            actual_port = Proxy_Port;\n        }\n        else\n        {\n            actual_host = Host;\n            actual_port = Port;\n        }\n\n        Log.write(Log.CONN, \"Conn:  Creating Socket: \" + actual_host + \":\" +\n                actual_port);\n\n        if (con_timeout == 0)\n        {\n            // normal connection establishment\n\n            if (Socks_client != null)\n            {\n                sock = Socks_client.getSocket(actual_host, actual_port);\n            }\n            else\n            {\n                // try all A records\n                InetAddress[] addr_list = InetAddress.getAllByName(actual_host);\n                for (int idx = 0; idx < addr_list.length; idx++)\n                {\n                    try\n                    {\n                        if (LocalAddr == null)\n                        {\n                            sock = new Socket(addr_list[idx], actual_port);\n                        }\n                        else\n                        {\n                            sock = new Socket(addr_list[idx], actual_port,\n                                    LocalAddr, LocalPort);\n                        }\n                        break;\n                        // success\n                    }\n                    catch (SocketException se)\n                    {\n                        if (idx == addr_list.length - 1)\n                        {\n                            throw se;\n                        }\n                        // we tried them all\n                    }\n                }\n            }\n        }\n        else\n        {\n            EstablishConnection con =\n                    new EstablishConnection(actual_host, actual_port, Socks_client);\n            con.start();\n            try\n            {\n                con.join((long) con_timeout);\n            }\n            catch (InterruptedException ie)\n            {\n            }\n\n            if (con.getException() != null)\n            {\n                throw con.getException();\n            }\n            if ((sock = con.getSocket()) == null)\n            {\n                con.forget();\n                if ((sock = con.getSocket()) == null)\n                {\n                    throw new InterruptedIOException(\"Connection establishment timed out\");\n                }\n            }\n        }\n\n        return sock;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afc16d717d9ed1a8e45371668ca6de674164d624","date":1103345442,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/src/HTTPClient/HTTPConnection#getSocket(int).mjava","sourceNew":null,"sourceOld":"    /**\n     * Gets a socket. Creates a socket to the proxy if set, or else to the\n     * actual destination.\n     *\n     * @param con_timeout      if not 0 then start a new thread to establish the\n     *      the connection and join(con_timeout) it. If the join() times out an\n     *      InteruptedIOException is thrown.\n     * @return                 The socket value\n     * @exception IOException  Description of the Exception\n     */\n    private Socket getSocket(int con_timeout)\n        throws IOException\n    {\n        Socket sock = null;\n\n        String actual_host;\n        int actual_port;\n\n        if (Proxy_Host != null)\n        {\n            actual_host = Proxy_Host;\n            actual_port = Proxy_Port;\n        }\n        else\n        {\n            actual_host = Host;\n            actual_port = Port;\n        }\n\n        Log.write(Log.CONN, \"Conn:  Creating Socket: \" + actual_host + \":\" +\n                actual_port);\n\n        if (con_timeout == 0)\n        {\n            // normal connection establishment\n\n            if (Socks_client != null)\n            {\n                sock = Socks_client.getSocket(actual_host, actual_port);\n            }\n            else\n            {\n                // try all A records\n                InetAddress[] addr_list = InetAddress.getAllByName(actual_host);\n                for (int idx = 0; idx < addr_list.length; idx++)\n                {\n                    try\n                    {\n                        if (LocalAddr == null)\n                        {\n                            sock = new Socket(addr_list[idx], actual_port);\n                        }\n                        else\n                        {\n                            sock = new Socket(addr_list[idx], actual_port,\n                                    LocalAddr, LocalPort);\n                        }\n                        break;\n                        // success\n                    }\n                    catch (SocketException se)\n                    {\n                        if (idx == addr_list.length - 1)\n                        {\n                            throw se;\n                        }\n                        // we tried them all\n                    }\n                }\n            }\n        }\n        else\n        {\n            EstablishConnection con =\n                    new EstablishConnection(actual_host, actual_port, Socks_client);\n            con.start();\n            try\n            {\n                con.join((long) con_timeout);\n            }\n            catch (InterruptedException ie)\n            {\n            }\n\n            if (con.getException() != null)\n            {\n                throw con.getException();\n            }\n            if ((sock = con.getSocket()) == null)\n            {\n                con.forget();\n                if ((sock = con.getSocket()) == null)\n                {\n                    throw new InterruptedIOException(\"Connection establishment timed out\");\n                }\n            }\n        }\n\n        return sock;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afc16d717d9ed1a8e45371668ca6de674164d624":["05d36e0b328ec96237035fbcca240e73631396e5"],"05d36e0b328ec96237035fbcca240e73631396e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afc16d717d9ed1a8e45371668ca6de674164d624"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05d36e0b328ec96237035fbcca240e73631396e5"],"afc16d717d9ed1a8e45371668ca6de674164d624":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"05d36e0b328ec96237035fbcca240e73631396e5":["afc16d717d9ed1a8e45371668ca6de674164d624"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}