{"path":"solr/core/src/java/org/apache/solr/schema/TextField#getSortField(SchemaField,boolean).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/TextField#getSortField(SchemaField,boolean).mjava","pathOld":"solr/src/java/org/apache/solr/schema/TextField#getSortField(SchemaField,boolean).mjava","sourceNew":"  @Override\n  public SortField getSortField(SchemaField field, boolean reverse) {\n    /* :TODO: maybe warn if isTokenized(), but doesn't use LimitTokenCountFilter in it's chain? */\n    return getStringSort(field, reverse);\n  }\n\n","sourceOld":"  @Override\n  public SortField getSortField(SchemaField field, boolean reverse) {\n    /* :TODO: maybe warn if isTokenized(), but doesn't use LimitTokenCountFilter in it's chain? */\n    return getStringSort(field, reverse);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/TextField#getSortField(SchemaField,boolean).mjava","pathOld":"solr/src/java/org/apache/solr/schema/TextField#getSortField(SchemaField,boolean).mjava","sourceNew":"  @Override\n  public SortField getSortField(SchemaField field, boolean reverse) {\n    /* :TODO: maybe warn if isTokenized(), but doesn't use LimitTokenCountFilter in it's chain? */\n    return getStringSort(field, reverse);\n  }\n\n","sourceOld":"  @Override\n  public SortField getSortField(SchemaField field, boolean reverse) {\n    /* :TODO: maybe warn if isTokenized(), but doesn't use LimitTokenCountFilter in it's chain? */\n    return getStringSort(field, reverse);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/TextField#getSortField(SchemaField,boolean).mjava","pathOld":"solr/src/java/org/apache/solr/schema/TextField#getSortField(SchemaField,boolean).mjava","sourceNew":"  @Override\n  public SortField getSortField(SchemaField field, boolean reverse) {\n    /* :TODO: maybe warn if isTokenized(), but doesn't use LimitTokenCountFilter in it's chain? */\n    return getStringSort(field, reverse);\n  }\n\n","sourceOld":"  @Override\n  public SortField getSortField(SchemaField field, boolean reverse) {\n    /* :TODO: maybe warn if isTokenized(), but doesn't use LimitTokenCountFilter in it's chain? */\n    return getStringSort(field, reverse);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30b6ad849a21206db510322a3f583ca70ae20a2f","date":1399996150,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/TextField#getSortField(SchemaField,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/TextField#getSortField(SchemaField,boolean).mjava","sourceNew":"  @Override\n  public SortField getSortField(SchemaField field, boolean reverse) {\n    /* :TODO: maybe warn if isTokenized(), but doesn't use LimitTokenCountFilter in it's chain? */\n    return new SortedSetSortField(field.getName(), reverse);\n  }\n\n","sourceOld":"  @Override\n  public SortField getSortField(SchemaField field, boolean reverse) {\n    /* :TODO: maybe warn if isTokenized(), but doesn't use LimitTokenCountFilter in it's chain? */\n    return getStringSort(field, reverse);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5275a994b4fc707fafce0408625bd3456edc28a4","date":1400004510,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/TextField#getSortField(SchemaField,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/TextField#getSortField(SchemaField,boolean).mjava","sourceNew":"  @Override\n  public SortField getSortField(SchemaField field, boolean reverse) {\n    /* :TODO: maybe warn if isTokenized(), but doesn't use LimitTokenCountFilter in it's chain? */\n    field.checkSortability();\n    return new SortedSetSortField(field.getName(), reverse);\n  }\n\n","sourceOld":"  @Override\n  public SortField getSortField(SchemaField field, boolean reverse) {\n    /* :TODO: maybe warn if isTokenized(), but doesn't use LimitTokenCountFilter in it's chain? */\n    return new SortedSetSortField(field.getName(), reverse);\n  }\n\n","bugFix":null,"bugIntro":["70052d44b40be0028db94b4cffeb9aaa5468055e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fa71ac98a8994b246ea3366e4aa282329a55e1a3","date":1400007327,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/TextField#getSortField(SchemaField,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/TextField#getSortField(SchemaField,boolean).mjava","sourceNew":"  @Override\n  public SortField getSortField(SchemaField field, boolean reverse) {\n    /* :TODO: maybe warn if isTokenized(), but doesn't use LimitTokenCountFilter in it's chain? */\n    field.checkSortability();\n    return Sorting.getTextSortField(field.getName(), reverse, field.sortMissingLast(), field.sortMissingFirst());\n  }\n\n","sourceOld":"  @Override\n  public SortField getSortField(SchemaField field, boolean reverse) {\n    /* :TODO: maybe warn if isTokenized(), but doesn't use LimitTokenCountFilter in it's chain? */\n    field.checkSortability();\n    return new SortedSetSortField(field.getName(), reverse);\n  }\n\n","bugFix":null,"bugIntro":["70052d44b40be0028db94b4cffeb9aaa5468055e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/TextField#getSortField(SchemaField,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/TextField#getSortField(SchemaField,boolean).mjava","sourceNew":"  @Override\n  public SortField getSortField(SchemaField field, boolean reverse) {\n    /* :TODO: maybe warn if isTokenized(), but doesn't use LimitTokenCountFilter in it's chain? */\n    field.checkSortability();\n    return Sorting.getTextSortField(field.getName(), reverse, field.sortMissingLast(), field.sortMissingFirst());\n  }\n\n","sourceOld":"  @Override\n  public SortField getSortField(SchemaField field, boolean reverse) {\n    /* :TODO: maybe warn if isTokenized(), but doesn't use LimitTokenCountFilter in it's chain? */\n    return getStringSort(field, reverse);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/TextField#getSortField(SchemaField,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/TextField#getSortField(SchemaField,boolean).mjava","sourceNew":"  @Override\n  public SortField getSortField(SchemaField field, boolean reverse) {\n    /* :TODO: maybe warn if isTokenized(), but doesn't use LimitTokenCountFilter in it's chain? */\n    field.checkSortability();\n    return Sorting.getTextSortField(field.getName(), reverse, field.sortMissingLast(), field.sortMissingFirst());\n  }\n\n","sourceOld":"  @Override\n  public SortField getSortField(SchemaField field, boolean reverse) {\n    /* :TODO: maybe warn if isTokenized(), but doesn't use LimitTokenCountFilter in it's chain? */\n    return getStringSort(field, reverse);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","date":1419400138,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/TextField#getSortField(SchemaField,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/TextField#getSortField(SchemaField,boolean).mjava","sourceNew":"  @Override\n  public SortField getSortField(SchemaField field, boolean reverse) {\n    /* :TODO: maybe warn if isTokenized(), but doesn't use LimitTokenCountFilter in its chain? */\n    field.checkSortability();\n    return Sorting.getTextSortField(field.getName(), reverse, field.sortMissingLast(), field.sortMissingFirst());\n  }\n\n","sourceOld":"  @Override\n  public SortField getSortField(SchemaField field, boolean reverse) {\n    /* :TODO: maybe warn if isTokenized(), but doesn't use LimitTokenCountFilter in it's chain? */\n    field.checkSortability();\n    return Sorting.getTextSortField(field.getName(), reverse, field.sortMissingLast(), field.sortMissingFirst());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"70052d44b40be0028db94b4cffeb9aaa5468055e","date":1505151510,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/TextField#getSortField(SchemaField,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/TextField#getSortField(SchemaField,boolean).mjava","sourceNew":"  @Override\n  public SortField getSortField(SchemaField field, boolean reverse) {\n    /* :TODO: maybe warn if isTokenized(), but doesn't use LimitTokenCountFilter in its chain? */\n    return getSortedSetSortField(field, SortedSetSelector.Type.MIN, reverse,\n                                 SortField.STRING_FIRST, SortField.STRING_LAST);\n  }\n\n","sourceOld":"  @Override\n  public SortField getSortField(SchemaField field, boolean reverse) {\n    /* :TODO: maybe warn if isTokenized(), but doesn't use LimitTokenCountFilter in its chain? */\n    field.checkSortability();\n    return Sorting.getTextSortField(field.getName(), reverse, field.sortMissingLast(), field.sortMissingFirst());\n  }\n\n","bugFix":["5275a994b4fc707fafce0408625bd3456edc28a4","fa71ac98a8994b246ea3366e4aa282329a55e1a3"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ffb85feece8645a035c02443a625f5af15e1106b","date":1505219692,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/TextField#getSortField(SchemaField,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/TextField#getSortField(SchemaField,boolean).mjava","sourceNew":"  @Override\n  public SortField getSortField(SchemaField field, boolean reverse) {\n    /* :TODO: maybe warn if isTokenized(), but doesn't use LimitTokenCountFilter in its chain? */\n    return getSortedSetSortField(field, SortedSetSelector.Type.MIN, reverse,\n                                 SortField.STRING_FIRST, SortField.STRING_LAST);\n  }\n\n","sourceOld":"  @Override\n  public SortField getSortField(SchemaField field, boolean reverse) {\n    /* :TODO: maybe warn if isTokenized(), but doesn't use LimitTokenCountFilter in its chain? */\n    field.checkSortability();\n    return Sorting.getTextSortField(field.getName(), reverse, field.sortMissingLast(), field.sortMissingFirst());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"685bd38810c206c93e9058f3c2cfa9827c086c27","date":1505751821,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/TextField#getSortField(SchemaField,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/TextField#getSortField(SchemaField,boolean).mjava","sourceNew":"  @Override\n  public SortField getSortField(SchemaField field, boolean reverse) {\n    /* :TODO: maybe warn if isTokenized(), but doesn't use LimitTokenCountFilter in its chain? */\n    return getSortedSetSortField(field, SortedSetSelector.Type.MIN, reverse,\n                                 SortField.STRING_FIRST, SortField.STRING_LAST);\n  }\n\n","sourceOld":"  @Override\n  public SortField getSortField(SchemaField field, boolean reverse) {\n    /* :TODO: maybe warn if isTokenized(), but doesn't use LimitTokenCountFilter in its chain? */\n    field.checkSortability();\n    return Sorting.getTextSortField(field.getName(), reverse, field.sortMissingLast(), field.sortMissingFirst());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09db84b25dda87b73022d145a68f14c86a3a552d","date":1517506829,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/TextField#getSortField(SchemaField,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/TextField#getSortField(SchemaField,boolean).mjava","sourceNew":"  @Override\n  public SortField getSortField(SchemaField field, boolean reverse) {\n    /* :TODO: maybe warn if isTokenized(), but doesn't use LimitTokenCountFilter in its chain? */\n    return getSortedSetSortField(field,\n                                 // historical behavior based on how the early versions of the FieldCache\n                                 // would deal with multiple indexed terms in a singled valued field...\n                                 //\n                                 // Always use the 'min' value from the (Uninverted) \"psuedo doc values\"\n                                 SortedSetSelector.Type.MIN,\n                                 reverse, SortField.STRING_FIRST, SortField.STRING_LAST);\n  }\n\n","sourceOld":"  @Override\n  public SortField getSortField(SchemaField field, boolean reverse) {\n    /* :TODO: maybe warn if isTokenized(), but doesn't use LimitTokenCountFilter in its chain? */\n    return getSortedSetSortField(field, SortedSetSelector.Type.MIN, reverse,\n                                 SortField.STRING_FIRST, SortField.STRING_LAST);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ffb85feece8645a035c02443a625f5af15e1106b":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","70052d44b40be0028db94b4cffeb9aaa5468055e"],"5275a994b4fc707fafce0408625bd3456edc28a4":["30b6ad849a21206db510322a3f583ca70ae20a2f"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"09db84b25dda87b73022d145a68f14c86a3a552d":["ffb85feece8645a035c02443a625f5af15e1106b"],"70052d44b40be0028db94b4cffeb9aaa5468055e":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"56572ec06f1407c066d6b7399413178b33176cd8":["c26f00b574427b55127e869b935845554afde1fa","93dd449115a9247533e44bab47e8429e5dccbc6d"],"fa71ac98a8994b246ea3366e4aa282329a55e1a3":["5275a994b4fc707fafce0408625bd3456edc28a4"],"685bd38810c206c93e9058f3c2cfa9827c086c27":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","ffb85feece8645a035c02443a625f5af15e1106b"],"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["c26f00b574427b55127e869b935845554afde1fa","fa71ac98a8994b246ea3366e4aa282329a55e1a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"30b6ad849a21206db510322a3f583ca70ae20a2f":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09db84b25dda87b73022d145a68f14c86a3a552d"]},"commit2Childs":{"ffb85feece8645a035c02443a625f5af15e1106b":["09db84b25dda87b73022d145a68f14c86a3a552d","685bd38810c206c93e9058f3c2cfa9827c086c27"],"5275a994b4fc707fafce0408625bd3456edc28a4":["fa71ac98a8994b246ea3366e4aa282329a55e1a3"],"c26f00b574427b55127e869b935845554afde1fa":["56572ec06f1407c066d6b7399413178b33176cd8","93dd449115a9247533e44bab47e8429e5dccbc6d","30b6ad849a21206db510322a3f583ca70ae20a2f"],"09db84b25dda87b73022d145a68f14c86a3a552d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"70052d44b40be0028db94b4cffeb9aaa5468055e":["ffb85feece8645a035c02443a625f5af15e1106b"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"fa71ac98a8994b246ea3366e4aa282329a55e1a3":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"685bd38810c206c93e9058f3c2cfa9827c086c27":[],"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["ffb85feece8645a035c02443a625f5af15e1106b","70052d44b40be0028db94b4cffeb9aaa5468055e","685bd38810c206c93e9058f3c2cfa9827c086c27"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"30b6ad849a21206db510322a3f583ca70ae20a2f":["5275a994b4fc707fafce0408625bd3456edc28a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","685bd38810c206c93e9058f3c2cfa9827c086c27","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}