{"path":"lucene/core/src/java/org/apache/lucene/index/PendingDeletes#onNewReader(SegmentReader,SegmentCommitInfo).mjava","commits":[{"id":"d60c1bb96a28a26d197c36299f7b6c9c5da617a1","date":1522484702,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PendingDeletes#onNewReader(SegmentReader,SegmentCommitInfo).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Called once a new reader is opened for this segment ie. when deletes or updates are applied.\n   */\n  void onNewReader(SegmentReader reader, SegmentCommitInfo info) {\n    if (liveDocs == null) {\n      liveDocs = reader.getLiveDocs();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa5e39259dfd4a68287c824d3b7e1bc9097dc895","date":1522505041,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PendingDeletes#onNewReader(SegmentReader,SegmentCommitInfo).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Called once a new reader is opened for this segment ie. when deletes or updates are applied.\n   */\n  void onNewReader(SegmentReader reader, SegmentCommitInfo info) {\n    if (liveDocs == null) {\n      liveDocs = reader.getLiveDocs();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ee0394b8176abd7c90a4be8c05465be1879db79","date":1522842314,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PendingDeletes#onNewReader(SegmentReader,SegmentCommitInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PendingDeletes#onNewReader(SegmentReader,SegmentCommitInfo).mjava","sourceNew":"  /**\n   * Called once a new reader is opened for this segment ie. when deletes or updates are applied.\n   */\n  void onNewReader(SegmentReader reader, SegmentCommitInfo info) throws IOException {\n    if (liveDocsInitialized == false) {\n      if (reader.hasDeletions()) {\n        // we only initialize this once either in the ctor or here\n        // if we use the live docs from a reader it has to be in a situation where we don't\n        // have any existing live docs\n        assert pendingDeleteCount == 0 : \"pendingDeleteCount: \" + pendingDeleteCount;\n        liveDocs = reader.getLiveDocs();\n        assert liveDocs == null || assertCheckLiveDocs(liveDocs, info.info.maxDoc(), info.getDelCount());\n        liveDocsShared = true;\n\n      }\n      liveDocsInitialized = true;\n    }\n  }\n\n","sourceOld":"  /**\n   * Called once a new reader is opened for this segment ie. when deletes or updates are applied.\n   */\n  void onNewReader(SegmentReader reader, SegmentCommitInfo info) {\n    if (liveDocs == null) {\n      liveDocs = reader.getLiveDocs();\n    }\n  }\n\n","bugFix":null,"bugIntro":["36d84416fc00253f9e834f8dba14fa89b298e64e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"36d13f271b6649357e07f71f7e46559479f69b5b","date":1523888226,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PendingDeletes#onNewReader(CodecReader,SegmentCommitInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PendingDeletes#onNewReader(SegmentReader,SegmentCommitInfo).mjava","sourceNew":"  /**\n   * Called once a new reader is opened for this segment ie. when deletes or updates are applied.\n   */\n  void onNewReader(CodecReader reader, SegmentCommitInfo info) throws IOException {\n    if (liveDocsInitialized == false) {\n      if (reader.hasDeletions()) {\n        // we only initialize this once either in the ctor or here\n        // if we use the live docs from a reader it has to be in a situation where we don't\n        // have any existing live docs\n        assert pendingDeleteCount == 0 : \"pendingDeleteCount: \" + pendingDeleteCount;\n        liveDocs = reader.getLiveDocs();\n        assert liveDocs == null || assertCheckLiveDocs(liveDocs, info.info.maxDoc(), info.getDelCount());\n        liveDocsShared = true;\n\n      }\n      liveDocsInitialized = true;\n    }\n  }\n\n","sourceOld":"  /**\n   * Called once a new reader is opened for this segment ie. when deletes or updates are applied.\n   */\n  void onNewReader(SegmentReader reader, SegmentCommitInfo info) throws IOException {\n    if (liveDocsInitialized == false) {\n      if (reader.hasDeletions()) {\n        // we only initialize this once either in the ctor or here\n        // if we use the live docs from a reader it has to be in a situation where we don't\n        // have any existing live docs\n        assert pendingDeleteCount == 0 : \"pendingDeleteCount: \" + pendingDeleteCount;\n        liveDocs = reader.getLiveDocs();\n        assert liveDocs == null || assertCheckLiveDocs(liveDocs, info.info.maxDoc(), info.getDelCount());\n        liveDocsShared = true;\n\n      }\n      liveDocsInitialized = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"5ee0394b8176abd7c90a4be8c05465be1879db79":["aa5e39259dfd4a68287c824d3b7e1bc9097dc895"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"36d13f271b6649357e07f71f7e46559479f69b5b":["5ee0394b8176abd7c90a4be8c05465be1879db79"],"aa5e39259dfd4a68287c824d3b7e1bc9097dc895":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d60c1bb96a28a26d197c36299f7b6c9c5da617a1"],"d60c1bb96a28a26d197c36299f7b6c9c5da617a1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["36d13f271b6649357e07f71f7e46559479f69b5b"]},"commit2Childs":{"5ee0394b8176abd7c90a4be8c05465be1879db79":["36d13f271b6649357e07f71f7e46559479f69b5b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aa5e39259dfd4a68287c824d3b7e1bc9097dc895","d60c1bb96a28a26d197c36299f7b6c9c5da617a1"],"36d13f271b6649357e07f71f7e46559479f69b5b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"aa5e39259dfd4a68287c824d3b7e1bc9097dc895":["5ee0394b8176abd7c90a4be8c05465be1879db79"],"d60c1bb96a28a26d197c36299f7b6c9c5da617a1":["aa5e39259dfd4a68287c824d3b7e1bc9097dc895"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}