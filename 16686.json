{"path":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter.DiskOrdinalMap#getMap().mjava","commits":[{"id":"ea469eab8fd0f3032f4fcde1c644a721e8309d3b","date":1320301582,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter.DiskOrdinalMap#getMap().mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/lucene/LuceneTaxonomyWriter.DiskOrdinalMap#getMap().mjava","sourceNew":"    @Override\n    public int[] getMap() throws IOException {\n      if (map!=null) {\n        return map;\n      }\n      addDone(); // in case this wasn't previously called\n      DataInputStream in = new DataInputStream(new BufferedInputStream(\n          new FileInputStream(tmpfile)));\n      map = new int[in.readInt()];\n      // NOTE: The current code assumes here that the map is complete,\n      // i.e., every ordinal gets one and exactly one value. Otherwise,\n      // we may run into an EOF here, or vice versa, not read everything.\n      for (int i=0; i<map.length; i++) {\n        int origordinal = in.readInt();\n        int newordinal = in.readInt();\n        map[origordinal] = newordinal;\n      }\n      in.close();\n      // Delete the temporary file, which is no longer needed.\n      if (!tmpfile.delete()) {\n        tmpfile.deleteOnExit();\n      }\n      return map;\n    }\n\n","sourceOld":"    public int[] getMap() throws IOException {\n      if (map!=null) {\n        return map;\n      }\n      addDone(); // in case this wasn't previously called\n      DataInputStream in = new DataInputStream(new BufferedInputStream(\n          new FileInputStream(tmpfile)));\n      map = new int[in.readInt()];\n      // NOTE: The current code assumes here that the map is complete,\n      // i.e., every ordinal gets one and exactly one value. Otherwise,\n      // we may run into an EOF here, or vice versa, not read everything.\n      for (int i=0; i<map.length; i++) {\n        int origordinal = in.readInt();\n        int newordinal = in.readInt();\n        map[origordinal] = newordinal;\n      }\n      in.close();\n      // Delete the temporary file, which is no longer needed.\n      if (!tmpfile.delete()) {\n        tmpfile.deleteOnExit();\n      }\n      return map;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter.DiskOrdinalMap#getMap().mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter.DiskOrdinalMap#getMap().mjava","sourceNew":"    @Override\n    public int[] getMap() throws IOException {\n      if (map!=null) {\n        return map;\n      }\n      addDone(); // in case this wasn't previously called\n      DataInputStream in = new DataInputStream(new BufferedInputStream(\n          new FileInputStream(tmpfile)));\n      map = new int[in.readInt()];\n      // NOTE: The current code assumes here that the map is complete,\n      // i.e., every ordinal gets one and exactly one value. Otherwise,\n      // we may run into an EOF here, or vice versa, not read everything.\n      for (int i=0; i<map.length; i++) {\n        int origordinal = in.readInt();\n        int newordinal = in.readInt();\n        map[origordinal] = newordinal;\n      }\n      in.close();\n      // Delete the temporary file, which is no longer needed.\n      if (!tmpfile.delete()) {\n        tmpfile.deleteOnExit();\n      }\n      return map;\n    }\n\n","sourceOld":"    @Override\n    public int[] getMap() throws IOException {\n      if (map!=null) {\n        return map;\n      }\n      addDone(); // in case this wasn't previously called\n      DataInputStream in = new DataInputStream(new BufferedInputStream(\n          new FileInputStream(tmpfile)));\n      map = new int[in.readInt()];\n      // NOTE: The current code assumes here that the map is complete,\n      // i.e., every ordinal gets one and exactly one value. Otherwise,\n      // we may run into an EOF here, or vice versa, not read everything.\n      for (int i=0; i<map.length; i++) {\n        int origordinal = in.readInt();\n        int newordinal = in.readInt();\n        map[origordinal] = newordinal;\n      }\n      in.close();\n      // Delete the temporary file, which is no longer needed.\n      if (!tmpfile.delete()) {\n        tmpfile.deleteOnExit();\n      }\n      return map;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ea469eab8fd0f3032f4fcde1c644a721e8309d3b"],"ea469eab8fd0f3032f4fcde1c644a721e8309d3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ea469eab8fd0f3032f4fcde1c644a721e8309d3b":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ea469eab8fd0f3032f4fcde1c644a721e8309d3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}