{"path":"solr/core/src/java/org/apache/solr/util/xslt/RecordingJSONParser#getStringChars().mjava","commits":[{"id":"ab10d7c14ce9f8db61956611a57a5a377362a633","date":1413903184,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/xslt/RecordingJSONParser#getStringChars().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public CharArr getStringChars() throws IOException {\n    CharArr chars = super.getStringChars();\n    recordStr(chars.toString());\n    position = getPosition();\n    // if reading a String , the getStringChars do not return the closing single quote or double quote\n    //so, try to capture that\n    if(chars.getArray().length >=chars.getStart()+chars.size()) {\n      char next = chars.getArray()[chars.getStart() + chars.size()];\n      if(next =='\"' || next == '\\'') {\n        recordChar(next);\n      }\n    }\n    return chars;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["106927166c797ce84895d289b9a5d6117a2bc939"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"039f6e410720e5f67d6da6e89c5b58f6821f762b","date":1413904375,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/RecordingJSONParser#getStringChars().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/xslt/RecordingJSONParser#getStringChars().mjava","sourceNew":"  @Override\n  public CharArr getStringChars() throws IOException {\n    CharArr chars = super.getStringChars();\n    recordStr(chars.toString());\n    position = getPosition();\n    // if reading a String , the getStringChars do not return the closing single quote or double quote\n    //so, try to capture that\n    if(chars.getArray().length >=chars.getStart()+chars.size()) {\n      char next = chars.getArray()[chars.getStart() + chars.size()];\n      if(next =='\"' || next == '\\'') {\n        recordChar(next);\n      }\n    }\n    return chars;\n  }\n\n","sourceOld":"  @Override\n  public CharArr getStringChars() throws IOException {\n    CharArr chars = super.getStringChars();\n    recordStr(chars.toString());\n    position = getPosition();\n    // if reading a String , the getStringChars do not return the closing single quote or double quote\n    //so, try to capture that\n    if(chars.getArray().length >=chars.getStart()+chars.size()) {\n      char next = chars.getArray()[chars.getStart() + chars.size()];\n      if(next =='\"' || next == '\\'') {\n        recordChar(next);\n      }\n    }\n    return chars;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"ab10d7c14ce9f8db61956611a57a5a377362a633":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"039f6e410720e5f67d6da6e89c5b58f6821f762b":["ab10d7c14ce9f8db61956611a57a5a377362a633"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["039f6e410720e5f67d6da6e89c5b58f6821f762b"]},"commit2Childs":{"ab10d7c14ce9f8db61956611a57a5a377362a633":["039f6e410720e5f67d6da6e89c5b58f6821f762b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ab10d7c14ce9f8db61956611a57a5a377362a633"],"039f6e410720e5f67d6da6e89c5b58f6821f762b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}