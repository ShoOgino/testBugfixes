{"path":"lucene/core/src/java/org/apache/lucene/index/ReaderPool#anyDocValuesChanges().mjava","commits":[{"id":"1926100d9b67becc9701c54266fee3ba7878a5f0","date":1524472150,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReaderPool#anyDocValuesChanges().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns <code>true</code> iff there are any buffered doc values updates. Otherwise <code>false</code>.\n   * @see #anyPendingDeletes()\n   */\n  synchronized boolean anyDocValuesChanges() {\n    for (ReadersAndUpdates rld : readerMap.values()) {\n      // NOTE: we don't check for pending deletes because deletes carry over in RAM to NRT readers\n      if (rld.getNumDVUpdates() != 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aef2a94da918b657d107b616a643e1759db43b6a","date":1527706131,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReaderPool#anyDocValuesChanges().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReaderPool#anyDocValuesChanges().mjava","sourceNew":"  /**\n   * Returns <code>true</code> iff there are any buffered doc values updates. Otherwise <code>false</code>.\n   */\n  synchronized boolean anyDocValuesChanges() {\n    for (ReadersAndUpdates rld : readerMap.values()) {\n      // NOTE: we don't check for pending deletes because deletes carry over in RAM to NRT readers\n      if (rld.getNumDVUpdates() != 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n","sourceOld":"  /**\n   * Returns <code>true</code> iff there are any buffered doc values updates. Otherwise <code>false</code>.\n   * @see #anyPendingDeletes()\n   */\n  synchronized boolean anyDocValuesChanges() {\n    for (ReadersAndUpdates rld : readerMap.values()) {\n      // NOTE: we don't check for pending deletes because deletes carry over in RAM to NRT readers\n      if (rld.getNumDVUpdates() != 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1926100d9b67becc9701c54266fee3ba7878a5f0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aef2a94da918b657d107b616a643e1759db43b6a":["1926100d9b67becc9701c54266fee3ba7878a5f0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["aef2a94da918b657d107b616a643e1759db43b6a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1926100d9b67becc9701c54266fee3ba7878a5f0"],"1926100d9b67becc9701c54266fee3ba7878a5f0":["aef2a94da918b657d107b616a643e1759db43b6a"],"aef2a94da918b657d107b616a643e1759db43b6a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}