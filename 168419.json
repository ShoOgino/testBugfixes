{"path":"client/java/solrj/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testJSP().mjava","commits":[{"id":"c9872b04d7e54d66427e5da43975b2b19ff5651c","date":1206230272,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testJSP().mjava","pathOld":"/dev/null","sourceNew":"  public void testJSP() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make \n    // sure they compile ok\n    \n    String adminPath = \"http://localhost:\"+port+context+\"/admin/\";\n    String html = IOUtils.toString( new URL(adminPath).openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // analysis\n    html = IOUtils.toString( new URL(adminPath+\"analysis.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // schema browser\n    html = IOUtils.toString( new URL(adminPath+\"schema.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5076075b16a0d263ac02ff9f0d18c36763038e8","date":1206495541,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testJSP().mjava","pathOld":"client/java/solrj/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testJSP().mjava","sourceNew":"  public void testJSP() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make \n    // sure they compile ok\n    \n    String adminPath = \"http://localhost:\"+port+context+\"/\";\n    String html = IOUtils.toString( new URL(adminPath).openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    adminPath += \"admin/\";\n    assertNotNull( html ); // real error will be an exception\n\n    // analysis\n    html = IOUtils.toString( new URL(adminPath+\"analysis.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // schema browser\n    html = IOUtils.toString( new URL(adminPath+\"schema.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // schema browser\n    html = IOUtils.toString( new URL(adminPath+\"threaddump.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n  }\n\n","sourceOld":"  public void testJSP() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make \n    // sure they compile ok\n    \n    String adminPath = \"http://localhost:\"+port+context+\"/admin/\";\n    String html = IOUtils.toString( new URL(adminPath).openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // analysis\n    html = IOUtils.toString( new URL(adminPath+\"analysis.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // schema browser\n    html = IOUtils.toString( new URL(adminPath+\"schema.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5","date":1218639440,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testJSP().mjava","pathOld":"client/java/solrj/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testJSP().mjava","sourceNew":"  public void testJSP() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make \n    // sure they compile ok\n    \n    String adminPath = \"http://localhost:\"+port+context+\"/\";\n    String html = IOUtils.toString( new URL(adminPath).openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    adminPath += \"admin/\";\n    html = IOUtils.toString( new URL(adminPath).openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // analysis\n    html = IOUtils.toString( new URL(adminPath+\"analysis.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // schema browser\n    html = IOUtils.toString( new URL(adminPath+\"schema.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // schema browser\n    html = IOUtils.toString( new URL(adminPath+\"threaddump.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n  }\n\n","sourceOld":"  public void testJSP() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make \n    // sure they compile ok\n    \n    String adminPath = \"http://localhost:\"+port+context+\"/\";\n    String html = IOUtils.toString( new URL(adminPath).openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    adminPath += \"admin/\";\n    assertNotNull( html ); // real error will be an exception\n\n    // analysis\n    html = IOUtils.toString( new URL(adminPath+\"analysis.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // schema browser\n    html = IOUtils.toString( new URL(adminPath+\"schema.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // schema browser\n    html = IOUtils.toString( new URL(adminPath+\"threaddump.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3602d5eab954caecc726ab136ad580ac1ceb917","date":1228676831,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testJSP().mjava","pathOld":"client/java/solrj/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testJSP().mjava","sourceNew":"  public void testJSP() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make \n    // sure they compile ok\n    \n    String adminPath = \"http://localhost:\"+port+context+\"/\";\n    String html = IOUtils.toString( new URL(adminPath).openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    adminPath += \"admin/\";\n    html = IOUtils.toString( new URL(adminPath).openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // analysis\n    html = IOUtils.toString( new URL(adminPath+\"analysis.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // schema browser\n    html = IOUtils.toString( new URL(adminPath+\"schema.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // schema browser\n    html = IOUtils.toString( new URL(adminPath+\"threaddump.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n  }\n\n","sourceOld":"  public void testJSP() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make \n    // sure they compile ok\n    \n    String adminPath = \"http://localhost:\"+port+context+\"/\";\n    String html = IOUtils.toString( new URL(adminPath).openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    adminPath += \"admin/\";\n    html = IOUtils.toString( new URL(adminPath).openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // analysis\n    html = IOUtils.toString( new URL(adminPath+\"analysis.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // schema browser\n    html = IOUtils.toString( new URL(adminPath+\"schema.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n\n    // schema browser\n    html = IOUtils.toString( new URL(adminPath+\"threaddump.jsp\").openStream() );\n    assertNotNull( html ); // real error will be an exception\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5"],"a5076075b16a0d263ac02ff9f0d18c36763038e8":["c9872b04d7e54d66427e5da43975b2b19ff5651c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"c9872b04d7e54d66427e5da43975b2b19ff5651c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5":["a5076075b16a0d263ac02ff9f0d18c36763038e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e3602d5eab954caecc726ab136ad580ac1ceb917":[],"a5076075b16a0d263ac02ff9f0d18c36763038e8":["9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["c9872b04d7e54d66427e5da43975b2b19ff5651c"],"c9872b04d7e54d66427e5da43975b2b19ff5651c":["a5076075b16a0d263ac02ff9f0d18c36763038e8"],"9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e3602d5eab954caecc726ab136ad580ac1ceb917","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}