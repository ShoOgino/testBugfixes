{"path":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#hashCode().mjava","commits":[{"id":"c1a89fbf5a750bffb59fe3bf0779dd9fb5ee0c4d","date":1382570352,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#hashCode().mjava","pathOld":"/dev/null","sourceNew":"    public int hashCode() {\n      return this.cacheId.hashCode()*((1+Float.floatToIntBits(this.getBoost()))*31);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f9eac2f0b568b3694682edb863185a273fbbc6f","date":1391883217,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#hashCode().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#hashCode().mjava","sourceNew":"    public int hashCode() {\n      int hashCode = field.hashCode();\n      hashCode = max!=null ? hashCode+max.hashCode():hashCode;\n      hashCode = min!=null ? hashCode+min.hashCode():hashCode;\n      hashCode = boosted!=null ? hashCode+boosted.hashCode():hashCode;\n      hashCode = hashCode+nullPolicy;\n      hashCode = hashCode*((1+Float.floatToIntBits(this.getBoost()))*31);\n      return hashCode;\n    }\n\n","sourceOld":"    public int hashCode() {\n      return this.cacheId.hashCode()*((1+Float.floatToIntBits(this.getBoost()))*31);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b2e9f25eee714813f83b18cc74b92f324c3d26ec","date":1392217764,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#hashCode().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#hashCode().mjava","sourceNew":"    public int hashCode() {\n\n      /*\n      *  Checking for boosted here because the request context will not have the elevated docs\n      *  until after the query is constructed. So to be sure there are no elevated docs in the query\n      *  while checking the cache we must check the request context during the call to hashCode().\n      */\n\n      if(this.boosted == null) {\n        SolrRequestInfo info = SolrRequestInfo.getRequestInfo();\n        if(info != null) {\n          this.boosted = (Set<String>)info.getReq().getContext().get(QueryElevationComponent.BOOSTED);\n        }\n      }\n\n      int hashCode = field.hashCode();\n      hashCode = max!=null ? hashCode+max.hashCode():hashCode;\n      hashCode = min!=null ? hashCode+min.hashCode():hashCode;\n      hashCode = boosted!=null ? hashCode+boosted.hashCode():hashCode;\n      hashCode = hashCode+nullPolicy;\n      hashCode = hashCode*((1+Float.floatToIntBits(this.getBoost()))*31);\n      return hashCode;\n    }\n\n","sourceOld":"    public int hashCode() {\n      int hashCode = field.hashCode();\n      hashCode = max!=null ? hashCode+max.hashCode():hashCode;\n      hashCode = min!=null ? hashCode+min.hashCode():hashCode;\n      hashCode = boosted!=null ? hashCode+boosted.hashCode():hashCode;\n      hashCode = hashCode+nullPolicy;\n      hashCode = hashCode*((1+Float.floatToIntBits(this.getBoost()))*31);\n      return hashCode;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a667f95e8b4d25c8e45a6bb9ba8ce9654e7858d7","date":1401992910,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#hashCode().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#hashCode().mjava","sourceNew":"    public int hashCode() {\n      int hashCode = field.hashCode();\n      hashCode = max!=null ? hashCode+max.hashCode():hashCode;\n      hashCode = min!=null ? hashCode+min.hashCode():hashCode;\n      hashCode = hashCode+nullPolicy;\n      hashCode = hashCode*((1+Float.floatToIntBits(this.getBoost()))*31);\n      return hashCode;\n    }\n\n","sourceOld":"    public int hashCode() {\n\n      /*\n      *  Checking for boosted here because the request context will not have the elevated docs\n      *  until after the query is constructed. So to be sure there are no elevated docs in the query\n      *  while checking the cache we must check the request context during the call to hashCode().\n      */\n\n      if(this.boosted == null) {\n        SolrRequestInfo info = SolrRequestInfo.getRequestInfo();\n        if(info != null) {\n          this.boosted = (Set<String>)info.getReq().getContext().get(QueryElevationComponent.BOOSTED);\n        }\n      }\n\n      int hashCode = field.hashCode();\n      hashCode = max!=null ? hashCode+max.hashCode():hashCode;\n      hashCode = min!=null ? hashCode+min.hashCode():hashCode;\n      hashCode = boosted!=null ? hashCode+boosted.hashCode():hashCode;\n      hashCode = hashCode+nullPolicy;\n      hashCode = hashCode*((1+Float.floatToIntBits(this.getBoost()))*31);\n      return hashCode;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ced52befdc8d88d90766aadbaac496f3fd0e4ee","date":1421070034,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#hashCode().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#hashCode().mjava","sourceNew":"    public int hashCode() {\n      int hashCode = collapseField.hashCode();\n      hashCode = max!=null ? hashCode+max.hashCode():hashCode;\n      hashCode = min!=null ? hashCode+min.hashCode():hashCode;\n      hashCode = hashCode+nullPolicy;\n      hashCode = hashCode*((1+Float.floatToIntBits(this.getBoost()))*31);\n      return hashCode;\n    }\n\n","sourceOld":"    public int hashCode() {\n      int hashCode = field.hashCode();\n      hashCode = max!=null ? hashCode+max.hashCode():hashCode;\n      hashCode = min!=null ? hashCode+min.hashCode():hashCode;\n      hashCode = hashCode+nullPolicy;\n      hashCode = hashCode*((1+Float.floatToIntBits(this.getBoost()))*31);\n      return hashCode;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#hashCode().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#hashCode().mjava","sourceNew":"    public int hashCode() {\n      int hashCode = super.hashCode();\n      hashCode = 31 * hashCode + collapseField.hashCode();\n      hashCode = max!=null ? hashCode+max.hashCode():hashCode;\n      hashCode = min!=null ? hashCode+min.hashCode():hashCode;\n      hashCode = hashCode+nullPolicy;\n      return hashCode;\n    }\n\n","sourceOld":"    public int hashCode() {\n      int hashCode = collapseField.hashCode();\n      hashCode = max!=null ? hashCode+max.hashCode():hashCode;\n      hashCode = min!=null ? hashCode+min.hashCode():hashCode;\n      hashCode = hashCode+nullPolicy;\n      hashCode = hashCode*((1+Float.floatToIntBits(this.getBoost()))*31);\n      return hashCode;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0325de99180d346d61d36938843a5c8451fe26ae","date":1447368726,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#hashCode().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#hashCode().mjava","sourceNew":"    public int hashCode() {\n      int hashCode = super.hashCode();\n      hashCode = 31 * hashCode + collapseField.hashCode();\n      hashCode = 31 * hashCode + groupHeadSelector.hashCode();\n      hashCode = 31 * hashCode + nullPolicy;\n      return hashCode;\n    }\n\n","sourceOld":"    public int hashCode() {\n      int hashCode = super.hashCode();\n      hashCode = 31 * hashCode + collapseField.hashCode();\n      hashCode = max!=null ? hashCode+max.hashCode():hashCode;\n      hashCode = min!=null ? hashCode+min.hashCode():hashCode;\n      hashCode = hashCode+nullPolicy;\n      return hashCode;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7bc21595222ae4f75509300fbb7726691f387f","date":1464078795,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#hashCode().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#hashCode().mjava","sourceNew":"    public int hashCode() {\n      int hashCode = classHash();\n      hashCode = 31 * hashCode + collapseField.hashCode();\n      hashCode = 31 * hashCode + groupHeadSelector.hashCode();\n      hashCode = 31 * hashCode + nullPolicy;\n      return hashCode;\n    }\n\n","sourceOld":"    public int hashCode() {\n      int hashCode = super.hashCode();\n      hashCode = 31 * hashCode + collapseField.hashCode();\n      hashCode = 31 * hashCode + groupHeadSelector.hashCode();\n      hashCode = 31 * hashCode + nullPolicy;\n      return hashCode;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#hashCode().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#hashCode().mjava","sourceNew":"    public int hashCode() {\n      int hashCode = classHash();\n      hashCode = 31 * hashCode + collapseField.hashCode();\n      hashCode = 31 * hashCode + groupHeadSelector.hashCode();\n      hashCode = 31 * hashCode + nullPolicy;\n      return hashCode;\n    }\n\n","sourceOld":"    public int hashCode() {\n      int hashCode = super.hashCode();\n      hashCode = 31 * hashCode + collapseField.hashCode();\n      hashCode = 31 * hashCode + groupHeadSelector.hashCode();\n      hashCode = 31 * hashCode + nullPolicy;\n      return hashCode;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a813b523bf76aa0a68013d636b6eb53cedb142a4","date":1601387389,"type":3,"author":"Guna Sekhar Dora Kovvuru","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#hashCode().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#hashCode().mjava","sourceNew":"    public int hashCode() {\n      int hashCode = classHash();\n      hashCode = 31 * hashCode + collapseField.hashCode();\n      hashCode = 31 * hashCode + groupHeadSelector.hashCode();\n      hashCode = 31 * hashCode + nullPolicy.hashCode();\n      return hashCode;\n    }\n\n","sourceOld":"    public int hashCode() {\n      int hashCode = classHash();\n      hashCode = 31 * hashCode + collapseField.hashCode();\n      hashCode = 31 * hashCode + groupHeadSelector.hashCode();\n      hashCode = 31 * hashCode + nullPolicy;\n      return hashCode;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a813b523bf76aa0a68013d636b6eb53cedb142a4":["0e7bc21595222ae4f75509300fbb7726691f387f"],"8ced52befdc8d88d90766aadbaac496f3fd0e4ee":["a667f95e8b4d25c8e45a6bb9ba8ce9654e7858d7"],"c1a89fbf5a750bffb59fe3bf0779dd9fb5ee0c4d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e7bc21595222ae4f75509300fbb7726691f387f":["0325de99180d346d61d36938843a5c8451fe26ae"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"],"b2e9f25eee714813f83b18cc74b92f324c3d26ec":["6f9eac2f0b568b3694682edb863185a273fbbc6f"],"6f9eac2f0b568b3694682edb863185a273fbbc6f":["c1a89fbf5a750bffb59fe3bf0779dd9fb5ee0c4d"],"0325de99180d346d61d36938843a5c8451fe26ae":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"a667f95e8b4d25c8e45a6bb9ba8ce9654e7858d7":["b2e9f25eee714813f83b18cc74b92f324c3d26ec"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["0325de99180d346d61d36938843a5c8451fe26ae","0e7bc21595222ae4f75509300fbb7726691f387f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a813b523bf76aa0a68013d636b6eb53cedb142a4"]},"commit2Childs":{"a813b523bf76aa0a68013d636b6eb53cedb142a4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8ced52befdc8d88d90766aadbaac496f3fd0e4ee":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"c1a89fbf5a750bffb59fe3bf0779dd9fb5ee0c4d":["6f9eac2f0b568b3694682edb863185a273fbbc6f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c1a89fbf5a750bffb59fe3bf0779dd9fb5ee0c4d"],"0e7bc21595222ae4f75509300fbb7726691f387f":["a813b523bf76aa0a68013d636b6eb53cedb142a4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["0325de99180d346d61d36938843a5c8451fe26ae"],"b2e9f25eee714813f83b18cc74b92f324c3d26ec":["a667f95e8b4d25c8e45a6bb9ba8ce9654e7858d7"],"6f9eac2f0b568b3694682edb863185a273fbbc6f":["b2e9f25eee714813f83b18cc74b92f324c3d26ec"],"a667f95e8b4d25c8e45a6bb9ba8ce9654e7858d7":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"],"0325de99180d346d61d36938843a5c8451fe26ae":["0e7bc21595222ae4f75509300fbb7726691f387f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}