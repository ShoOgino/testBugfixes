{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeWGS84ModelRectRelationTest#testFailure1().mjava","commits":[{"id":"f9f97ca977ad649f14b4f60a888adef2edd7a64e","date":1432702490,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeWGS84ModelRectRelationTest#testFailure1().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testFailure1() {\n    final GeoBBox rect = GeoBBoxFactory.makeGeoBBox(planetModel, 90 * RADIANS_PER_DEGREE, 74 * RADIANS_PER_DEGREE,\n        40 * RADIANS_PER_DEGREE, 60 * RADIANS_PER_DEGREE);\n    final GeoPath path = new GeoPath(planetModel, 4 * RADIANS_PER_DEGREE);\n    path.addPoint(84.4987594274 * RADIANS_PER_DEGREE, -22.8345484402 * RADIANS_PER_DEGREE);\n    path.done();\n    assertTrue(GeoArea.DISJOINT == rect.getRelationship(path));\n    // This is what the test failure claimed...\n    //assertTrue(GeoArea.CONTAINS == rect.getRelationship(path));\n    //final GeoBBox bbox = getBoundingBox(path);\n    //assertFalse(GeoArea.DISJOINT == rect.getRelationship(bbox));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fec06d6753751ae302c7d35866763e6cb414112d","date":1433250698,"type":0,"author":"David Wayne Smiley","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeWGS84ModelRectRelationTest#testFailure1().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testFailure1() {\n    final GeoBBox rect = GeoBBoxFactory.makeGeoBBox(planetModel, 90 * RADIANS_PER_DEGREE, 74 * RADIANS_PER_DEGREE,\n        40 * RADIANS_PER_DEGREE, 60 * RADIANS_PER_DEGREE);\n    final GeoPath path = new GeoPath(planetModel, 4 * RADIANS_PER_DEGREE);\n    path.addPoint(84.4987594274 * RADIANS_PER_DEGREE, -22.8345484402 * RADIANS_PER_DEGREE);\n    path.done();\n    assertTrue(GeoArea.DISJOINT == rect.getRelationship(path));\n    // This is what the test failure claimed...\n    //assertTrue(GeoArea.CONTAINS == rect.getRelationship(path));\n    //final GeoBBox bbox = getBoundingBox(path);\n    //assertFalse(GeoArea.DISJOINT == rect.getRelationship(bbox));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeWGS84ModelRectRelationTest#testFailure1().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeWGS84ModelRectRelationTest#testFailure1().mjava","sourceNew":"  @Test\n  public void testFailure1() {\n    final GeoBBox rect = GeoBBoxFactory.makeGeoBBox(planetModel, 90 * RADIANS_PER_DEGREE, 74 * RADIANS_PER_DEGREE,\n        40 * RADIANS_PER_DEGREE, 60 * RADIANS_PER_DEGREE);\n    final GeoPath path = new GeoPath(planetModel, 4 * RADIANS_PER_DEGREE);\n    path.addPoint(84.4987594274 * RADIANS_PER_DEGREE, -22.8345484402 * RADIANS_PER_DEGREE);\n    path.done();\n    assertTrue(GeoArea.DISJOINT == rect.getRelationship(path));\n    // This is what the test failure claimed...\n    //assertTrue(GeoArea.CONTAINS == rect.getRelationship(path));\n    //final GeoBBox bbox = getBoundingBox(path);\n    //assertFalse(GeoArea.DISJOINT == rect.getRelationship(bbox));\n  }\n\n","sourceOld":"  @Test\n  public void testFailure1() {\n    final GeoBBox rect = GeoBBoxFactory.makeGeoBBox(planetModel, 90 * RADIANS_PER_DEGREE, 74 * RADIANS_PER_DEGREE,\n        40 * RADIANS_PER_DEGREE, 60 * RADIANS_PER_DEGREE);\n    final GeoPath path = new GeoPath(planetModel, 4 * RADIANS_PER_DEGREE);\n    path.addPoint(84.4987594274 * RADIANS_PER_DEGREE, -22.8345484402 * RADIANS_PER_DEGREE);\n    path.done();\n    assertTrue(GeoArea.DISJOINT == rect.getRelationship(path));\n    // This is what the test failure claimed...\n    //assertTrue(GeoArea.CONTAINS == rect.getRelationship(path));\n    //final GeoBBox bbox = getBoundingBox(path);\n    //assertFalse(GeoArea.DISJOINT == rect.getRelationship(bbox));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeWGS84ModelRectRelationTest#testFailure1().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeWGS84ModelRectRelationTest#testFailure1().mjava","sourceNew":"  @Test\n  public void testFailure1() {\n    final GeoBBox rect = GeoBBoxFactory.makeGeoBBox(planetModel, 90 * RADIANS_PER_DEGREE, 74 * RADIANS_PER_DEGREE,\n        40 * RADIANS_PER_DEGREE, 60 * RADIANS_PER_DEGREE);\n    final GeoPath path = new GeoPath(planetModel, 4 * RADIANS_PER_DEGREE);\n    path.addPoint(84.4987594274 * RADIANS_PER_DEGREE, -22.8345484402 * RADIANS_PER_DEGREE);\n    path.done();\n    assertTrue(GeoArea.DISJOINT == rect.getRelationship(path));\n    // This is what the test failure claimed...\n    //assertTrue(GeoArea.CONTAINS == rect.getRelationship(path));\n    //final GeoBBox bbox = getBoundingBox(path);\n    //assertFalse(GeoArea.DISJOINT == rect.getRelationship(bbox));\n  }\n\n","sourceOld":"  @Test\n  public void testFailure1() {\n    final GeoBBox rect = GeoBBoxFactory.makeGeoBBox(planetModel, 90 * RADIANS_PER_DEGREE, 74 * RADIANS_PER_DEGREE,\n        40 * RADIANS_PER_DEGREE, 60 * RADIANS_PER_DEGREE);\n    final GeoPath path = new GeoPath(planetModel, 4 * RADIANS_PER_DEGREE);\n    path.addPoint(84.4987594274 * RADIANS_PER_DEGREE, -22.8345484402 * RADIANS_PER_DEGREE);\n    path.done();\n    assertTrue(GeoArea.DISJOINT == rect.getRelationship(path));\n    // This is what the test failure claimed...\n    //assertTrue(GeoArea.CONTAINS == rect.getRelationship(path));\n    //final GeoBBox bbox = getBoundingBox(path);\n    //assertFalse(GeoArea.DISJOINT == rect.getRelationship(bbox));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["fec06d6753751ae302c7d35866763e6cb414112d","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fec06d6753751ae302c7d35866763e6cb414112d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f9f97ca977ad649f14b4f60a888adef2edd7a64e"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["fec06d6753751ae302c7d35866763e6cb414112d"],"f9f97ca977ad649f14b4f60a888adef2edd7a64e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fec06d6753751ae302c7d35866763e6cb414112d":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fec06d6753751ae302c7d35866763e6cb414112d","f9f97ca977ad649f14b4f60a888adef2edd7a64e"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"f9f97ca977ad649f14b4f60a888adef2edd7a64e":["fec06d6753751ae302c7d35866763e6cb414112d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}