{"path":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#getLines(String,Charset).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#getLines(String,Charset).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrResourceLoader#getLines(String,Charset).mjava","sourceNew":"  public List<String> getLines(String resource, Charset charset) throws IOException{\n    BufferedReader input = null;\n    ArrayList<String> lines;\n    try {\n      input = new BufferedReader(new InputStreamReader(openResource(resource),\n          charset.newDecoder()\n          .onMalformedInput(CodingErrorAction.REPORT)\n          .onUnmappableCharacter(CodingErrorAction.REPORT)));\n\n      lines = new ArrayList<String>();\n      for (String word=null; (word=input.readLine())!=null;) {\n        // skip initial bom marker\n        if (lines.isEmpty() && word.length() > 0 && word.charAt(0) == '\\uFEFF')\n          word = word.substring(1);\n        // skip comments\n        if (word.startsWith(\"#\")) continue;\n        word=word.trim();\n        // skip blank lines\n        if (word.length()==0) continue;\n        lines.add(word);\n      }\n    } catch (CharacterCodingException ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n          \"Error loading resource (wrong encoding?): \" + resource, ex);\n    } finally {\n      if (input != null)\n        input.close();\n    }\n    return lines;\n  }\n\n","sourceOld":"  public List<String> getLines(String resource, Charset charset) throws IOException{\n    BufferedReader input = null;\n    ArrayList<String> lines;\n    try {\n      input = new BufferedReader(new InputStreamReader(openResource(resource),\n          charset.newDecoder()\n          .onMalformedInput(CodingErrorAction.REPORT)\n          .onUnmappableCharacter(CodingErrorAction.REPORT)));\n\n      lines = new ArrayList<String>();\n      for (String word=null; (word=input.readLine())!=null;) {\n        // skip initial bom marker\n        if (lines.isEmpty() && word.length() > 0 && word.charAt(0) == '\\uFEFF')\n          word = word.substring(1);\n        // skip comments\n        if (word.startsWith(\"#\")) continue;\n        word=word.trim();\n        // skip blank lines\n        if (word.length()==0) continue;\n        lines.add(word);\n      }\n    } catch (CharacterCodingException ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n          \"Error loading resource (wrong encoding?): \" + resource, ex);\n    } finally {\n      if (input != null)\n        input.close();\n    }\n    return lines;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#getLines(String,Charset).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrResourceLoader#getLines(String,Charset).mjava","sourceNew":"  public List<String> getLines(String resource, Charset charset) throws IOException{\n    BufferedReader input = null;\n    ArrayList<String> lines;\n    try {\n      input = new BufferedReader(new InputStreamReader(openResource(resource),\n          charset.newDecoder()\n          .onMalformedInput(CodingErrorAction.REPORT)\n          .onUnmappableCharacter(CodingErrorAction.REPORT)));\n\n      lines = new ArrayList<String>();\n      for (String word=null; (word=input.readLine())!=null;) {\n        // skip initial bom marker\n        if (lines.isEmpty() && word.length() > 0 && word.charAt(0) == '\\uFEFF')\n          word = word.substring(1);\n        // skip comments\n        if (word.startsWith(\"#\")) continue;\n        word=word.trim();\n        // skip blank lines\n        if (word.length()==0) continue;\n        lines.add(word);\n      }\n    } catch (CharacterCodingException ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n          \"Error loading resource (wrong encoding?): \" + resource, ex);\n    } finally {\n      if (input != null)\n        input.close();\n    }\n    return lines;\n  }\n\n","sourceOld":"  public List<String> getLines(String resource, Charset charset) throws IOException{\n    BufferedReader input = null;\n    ArrayList<String> lines;\n    try {\n      input = new BufferedReader(new InputStreamReader(openResource(resource),\n          charset.newDecoder()\n          .onMalformedInput(CodingErrorAction.REPORT)\n          .onUnmappableCharacter(CodingErrorAction.REPORT)));\n\n      lines = new ArrayList<String>();\n      for (String word=null; (word=input.readLine())!=null;) {\n        // skip initial bom marker\n        if (lines.isEmpty() && word.length() > 0 && word.charAt(0) == '\\uFEFF')\n          word = word.substring(1);\n        // skip comments\n        if (word.startsWith(\"#\")) continue;\n        word=word.trim();\n        // skip blank lines\n        if (word.length()==0) continue;\n        lines.add(word);\n      }\n    } catch (CharacterCodingException ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n          \"Error loading resource (wrong encoding?): \" + resource, ex);\n    } finally {\n      if (input != null)\n        input.close();\n    }\n    return lines;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#getLines(String,Charset).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrResourceLoader#getLines(String,Charset).mjava","sourceNew":"  public List<String> getLines(String resource, Charset charset) throws IOException{\n    BufferedReader input = null;\n    ArrayList<String> lines;\n    try {\n      input = new BufferedReader(new InputStreamReader(openResource(resource),\n          charset.newDecoder()\n          .onMalformedInput(CodingErrorAction.REPORT)\n          .onUnmappableCharacter(CodingErrorAction.REPORT)));\n\n      lines = new ArrayList<String>();\n      for (String word=null; (word=input.readLine())!=null;) {\n        // skip initial bom marker\n        if (lines.isEmpty() && word.length() > 0 && word.charAt(0) == '\\uFEFF')\n          word = word.substring(1);\n        // skip comments\n        if (word.startsWith(\"#\")) continue;\n        word=word.trim();\n        // skip blank lines\n        if (word.length()==0) continue;\n        lines.add(word);\n      }\n    } catch (CharacterCodingException ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n          \"Error loading resource (wrong encoding?): \" + resource, ex);\n    } finally {\n      if (input != null)\n        input.close();\n    }\n    return lines;\n  }\n\n","sourceOld":"  public List<String> getLines(String resource, Charset charset) throws IOException{\n    BufferedReader input = null;\n    ArrayList<String> lines;\n    try {\n      input = new BufferedReader(new InputStreamReader(openResource(resource),\n          charset.newDecoder()\n          .onMalformedInput(CodingErrorAction.REPORT)\n          .onUnmappableCharacter(CodingErrorAction.REPORT)));\n\n      lines = new ArrayList<String>();\n      for (String word=null; (word=input.readLine())!=null;) {\n        // skip initial bom marker\n        if (lines.isEmpty() && word.length() > 0 && word.charAt(0) == '\\uFEFF')\n          word = word.substring(1);\n        // skip comments\n        if (word.startsWith(\"#\")) continue;\n        word=word.trim();\n        // skip blank lines\n        if (word.length()==0) continue;\n        lines.add(word);\n      }\n    } catch (CharacterCodingException ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n          \"Error loading resource (wrong encoding?): \" + resource, ex);\n    } finally {\n      if (input != null)\n        input.close();\n    }\n    return lines;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de6b1e414481e1c25c32f310b02a6d192f7f9faa","date":1343310208,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#getLines(String,Charset).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#getLines(String,Charset).mjava","sourceNew":"  public List<String> getLines(String resource, Charset charset) throws IOException{\n    try {\n      return WordlistLoader.getLines(openResource(resource), charset);\n    } catch (CharacterCodingException ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n         \"Error loading resource (wrong encoding?): \" + resource, ex);\n    }\n  }\n\n","sourceOld":"  public List<String> getLines(String resource, Charset charset) throws IOException{\n    BufferedReader input = null;\n    ArrayList<String> lines;\n    try {\n      input = new BufferedReader(new InputStreamReader(openResource(resource),\n          charset.newDecoder()\n          .onMalformedInput(CodingErrorAction.REPORT)\n          .onUnmappableCharacter(CodingErrorAction.REPORT)));\n\n      lines = new ArrayList<String>();\n      for (String word=null; (word=input.readLine())!=null;) {\n        // skip initial bom marker\n        if (lines.isEmpty() && word.length() > 0 && word.charAt(0) == '\\uFEFF')\n          word = word.substring(1);\n        // skip comments\n        if (word.startsWith(\"#\")) continue;\n        word=word.trim();\n        // skip blank lines\n        if (word.length()==0) continue;\n        lines.add(word);\n      }\n    } catch (CharacterCodingException ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n          \"Error loading resource (wrong encoding?): \" + resource, ex);\n    } finally {\n      if (input != null)\n        input.close();\n    }\n    return lines;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#getLines(String,Charset).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#getLines(String,Charset).mjava","sourceNew":"  public List<String> getLines(String resource, Charset charset) throws IOException{\n    try {\n      return WordlistLoader.getLines(openResource(resource), charset);\n    } catch (CharacterCodingException ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n         \"Error loading resource (wrong encoding?): \" + resource, ex);\n    }\n  }\n\n","sourceOld":"  public List<String> getLines(String resource, Charset charset) throws IOException{\n    BufferedReader input = null;\n    ArrayList<String> lines;\n    try {\n      input = new BufferedReader(new InputStreamReader(openResource(resource),\n          charset.newDecoder()\n          .onMalformedInput(CodingErrorAction.REPORT)\n          .onUnmappableCharacter(CodingErrorAction.REPORT)));\n\n      lines = new ArrayList<String>();\n      for (String word=null; (word=input.readLine())!=null;) {\n        // skip initial bom marker\n        if (lines.isEmpty() && word.length() > 0 && word.charAt(0) == '\\uFEFF')\n          word = word.substring(1);\n        // skip comments\n        if (word.startsWith(\"#\")) continue;\n        word=word.trim();\n        // skip blank lines\n        if (word.length()==0) continue;\n        lines.add(word);\n      }\n    } catch (CharacterCodingException ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n          \"Error loading resource (wrong encoding?): \" + resource, ex);\n    } finally {\n      if (input != null)\n        input.close();\n    }\n    return lines;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#getLines(String,Charset).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#getLines(String,Charset).mjava","sourceNew":"  public List<String> getLines(String resource, Charset charset) throws IOException{\n    try {\n      return WordlistLoader.getLines(openResource(resource), charset);\n    } catch (CharacterCodingException ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n         \"Error loading resource (wrong encoding?): \" + resource, ex);\n    }\n  }\n\n","sourceOld":"  public List<String> getLines(String resource, Charset charset) throws IOException{\n    BufferedReader input = null;\n    ArrayList<String> lines;\n    try {\n      input = new BufferedReader(new InputStreamReader(openResource(resource),\n          charset.newDecoder()\n          .onMalformedInput(CodingErrorAction.REPORT)\n          .onUnmappableCharacter(CodingErrorAction.REPORT)));\n\n      lines = new ArrayList<String>();\n      for (String word=null; (word=input.readLine())!=null;) {\n        // skip initial bom marker\n        if (lines.isEmpty() && word.length() > 0 && word.charAt(0) == '\\uFEFF')\n          word = word.substring(1);\n        // skip comments\n        if (word.startsWith(\"#\")) continue;\n        word=word.trim();\n        // skip blank lines\n        if (word.length()==0) continue;\n        lines.add(word);\n      }\n    } catch (CharacterCodingException ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n          \"Error loading resource (wrong encoding?): \" + resource, ex);\n    } finally {\n      if (input != null)\n        input.close();\n    }\n    return lines;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"954ae83b7dfacaa33d48ea056448ae11f7745a93","date":1571867711,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#getLines(String,Charset).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#getLines(String,Charset).mjava","sourceNew":"  public List<String> getLines(String resource, Charset charset) throws IOException {\n    try {\n      return WordlistLoader.getLines(openResource(resource), charset);\n    } catch (CharacterCodingException ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Error loading resource (wrong encoding?): \" + resource, ex);\n    }\n  }\n\n","sourceOld":"  public List<String> getLines(String resource, Charset charset) throws IOException{\n    try {\n      return WordlistLoader.getLines(openResource(resource), charset);\n    } catch (CharacterCodingException ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n         \"Error loading resource (wrong encoding?): \" + resource, ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"954ae83b7dfacaa33d48ea056448ae11f7745a93":["de6b1e414481e1c25c32f310b02a6d192f7f9faa"],"aba371508186796cc6151d8223a5b4e16d02e26e":["c26f00b574427b55127e869b935845554afde1fa","de6b1e414481e1c25c32f310b02a6d192f7f9faa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["c26f00b574427b55127e869b935845554afde1fa","de6b1e414481e1c25c32f310b02a6d192f7f9faa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"de6b1e414481e1c25c32f310b02a6d192f7f9faa":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["954ae83b7dfacaa33d48ea056448ae11f7745a93"]},"commit2Childs":{"954ae83b7dfacaa33d48ea056448ae11f7745a93":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","de6b1e414481e1c25c32f310b02a6d192f7f9faa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"de6b1e414481e1c25c32f310b02a6d192f7f9faa":["954ae83b7dfacaa33d48ea056448ae11f7745a93","aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}