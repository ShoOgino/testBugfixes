{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/GetSupportPointsEvaluator#doWork(Object).mjava","commits":[{"id":"2fdcdc78c76a7a8715b8f63e938936c0327dd155","date":1538663787,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/GetSupportPointsEvaluator#doWork(Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Object doWork(Object value) throws IOException {\n    if(!(value instanceof EnclosingBall)){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - found type %s for value, expecting an EnclosingBall\",toExpression(constructingFactory), value.getClass().getSimpleName()));\n    } else {\n      EnclosingBall enclosingBall = (EnclosingBall)value;\n      Point[] points = enclosingBall.getSupport();\n      double[][] data = new double[points.length][2];\n      int i=0;\n      for(Point point : points) {\n        Vector2D eu = (Vector2D)point;\n        data[i][0] = eu.getX();\n        data[i][1] = eu.getY();\n        ++i;\n      }\n\n      return new Matrix(data);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885","date":1591579911,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/GetSupportPointsEvaluator#doWork(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/GetSupportPointsEvaluator#doWork(Object).mjava","sourceNew":"  @Override\n  public Object doWork(Object value) throws IOException {\n    if(!(value instanceof EnclosingBall)){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - found type %s for value, expecting an EnclosingBall\",toExpression(constructingFactory), value.getClass().getSimpleName()));\n    } else {\n      @SuppressWarnings({\"rawtypes\"})\n      EnclosingBall enclosingBall = (EnclosingBall)value;\n      @SuppressWarnings({\"rawtypes\"})\n      Point[] points = enclosingBall.getSupport();\n      double[][] data = new double[points.length][2];\n      int i=0;\n      for(@SuppressWarnings({\"rawtypes\"})Point point : points) {\n        Vector2D eu = (Vector2D)point;\n        data[i][0] = eu.getX();\n        data[i][1] = eu.getY();\n        ++i;\n      }\n\n      return new Matrix(data);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Object doWork(Object value) throws IOException {\n    if(!(value instanceof EnclosingBall)){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - found type %s for value, expecting an EnclosingBall\",toExpression(constructingFactory), value.getClass().getSimpleName()));\n    } else {\n      EnclosingBall enclosingBall = (EnclosingBall)value;\n      Point[] points = enclosingBall.getSupport();\n      double[][] data = new double[points.length][2];\n      int i=0;\n      for(Point point : points) {\n        Vector2D eu = (Vector2D)point;\n        data[i][0] = eu.getX();\n        data[i][1] = eu.getY();\n        ++i;\n      }\n\n      return new Matrix(data);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885":["2fdcdc78c76a7a8715b8f63e938936c0327dd155"],"2fdcdc78c76a7a8715b8f63e938936c0327dd155":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885"]},"commit2Childs":{"df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2fdcdc78c76a7a8715b8f63e938936c0327dd155":["df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2fdcdc78c76a7a8715b8f63e938936c0327dd155"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}