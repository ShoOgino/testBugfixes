{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","commits":[{"id":"3128e6d07d9fef0d1aa24f58b07133c9293131b2","date":1342190719,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","pathOld":"/dev/null","sourceNew":"  // TODO: we could add some useful checks here?\n  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n    return in.fieldsConsumer(state);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["29e23e367cc757f42cdfce2bcbf21e68cd209cda"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","pathOld":"/dev/null","sourceNew":"  // TODO: we could add some useful checks here?\n  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n    return in.fieldsConsumer(state);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"29e23e367cc757f42cdfce2bcbf21e68cd209cda","date":1343071560,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n    return new AssertingFieldsConsumer(in.fieldsConsumer(state));\n  }\n\n","sourceOld":"  // TODO: we could add some useful checks here?\n  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n    return in.fieldsConsumer(state);\n  }\n\n","bugFix":["3128e6d07d9fef0d1aa24f58b07133c9293131b2"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57635ff388fa1bee703f3b892a86a3e48975576a","date":1343077051,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n    return new AssertingFieldsConsumer(in.fieldsConsumer(state));\n  }\n\n","sourceOld":"  // TODO: we could add some useful checks here?\n  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n    return in.fieldsConsumer(state);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n    return new AssertingFieldsConsumer(in.fieldsConsumer(state));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5","date":1379624229,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n    FieldsConsumer fieldsConsumer = in.fieldsConsumer(state);\n    if (fieldsConsumer instanceof PushFieldsConsumer) {\n      return new AssertingPushFieldsConsumer(state, (PushFieldsConsumer) fieldsConsumer);\n    } else {\n      return new AssertingFieldsConsumer(state, fieldsConsumer);\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n    return new AssertingFieldsConsumer(in.fieldsConsumer(state));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa80a35d7c4b2b1e83082b275e3e8328ab93db52","date":1381766157,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n    return new AssertingFieldsConsumer(state, in.fieldsConsumer(state));\n  }\n\n","sourceOld":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n    FieldsConsumer fieldsConsumer = in.fieldsConsumer(state);\n    if (fieldsConsumer instanceof PushFieldsConsumer) {\n      return new AssertingPushFieldsConsumer(state, (PushFieldsConsumer) fieldsConsumer);\n    } else {\n      return new AssertingFieldsConsumer(state, fieldsConsumer);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","29e23e367cc757f42cdfce2bcbf21e68cd209cda"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3128e6d07d9fef0d1aa24f58b07133c9293131b2"],"519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5":["29e23e367cc757f42cdfce2bcbf21e68cd209cda"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fa80a35d7c4b2b1e83082b275e3e8328ab93db52":["519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5"],"29e23e367cc757f42cdfce2bcbf21e68cd209cda":["3128e6d07d9fef0d1aa24f58b07133c9293131b2"],"57635ff388fa1bee703f3b892a86a3e48975576a":["fe33227f6805edab2036cbb80645cc4e2d1fa424","29e23e367cc757f42cdfce2bcbf21e68cd209cda"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fa80a35d7c4b2b1e83082b275e3e8328ab93db52"],"3128e6d07d9fef0d1aa24f58b07133c9293131b2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"aba371508186796cc6151d8223a5b4e16d02e26e":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["57635ff388fa1bee703f3b892a86a3e48975576a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","3128e6d07d9fef0d1aa24f58b07133c9293131b2"],"519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5":["fa80a35d7c4b2b1e83082b275e3e8328ab93db52"],"fa80a35d7c4b2b1e83082b275e3e8328ab93db52":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29e23e367cc757f42cdfce2bcbf21e68cd209cda":["aba371508186796cc6151d8223a5b4e16d02e26e","519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5","57635ff388fa1bee703f3b892a86a3e48975576a"],"57635ff388fa1bee703f3b892a86a3e48975576a":[],"3128e6d07d9fef0d1aa24f58b07133c9293131b2":["fe33227f6805edab2036cbb80645cc4e2d1fa424","29e23e367cc757f42cdfce2bcbf21e68cd209cda"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","57635ff388fa1bee703f3b892a86a3e48975576a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}