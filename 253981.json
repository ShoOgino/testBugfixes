{"path":"solr/core/src/java/org/apache/solr/search/facet/SlotAcc#setNextReader(LeafReaderContext).mjava","commits":[{"id":"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d","date":1426480823,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/SlotAcc#setNextReader(LeafReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  public void setNextReader(LeafReaderContext readerContext) throws IOException {\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/SlotAcc#setNextReader(LeafReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  public void setNextReader(LeafReaderContext readerContext) throws IOException {\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de0d7af063e5c03bbc9db87e7e708da8102fdbc3","date":1492482629,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/SlotAcc#setNextReader(LeafReaderContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/SlotAcc#setNextReader(LeafReaderContext).mjava","sourceNew":"  public void setNextReader(LeafReaderContext readerContext) throws IOException {}\n\n","sourceOld":"  public void setNextReader(LeafReaderContext readerContext) throws IOException {\n  }\n\n","bugFix":null,"bugIntro":["fda8b161f9c4961c742ebb186f89adc0b4c654a9"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/SlotAcc#setNextReader(LeafReaderContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/SlotAcc#setNextReader(LeafReaderContext).mjava","sourceNew":"  public void setNextReader(LeafReaderContext readerContext) throws IOException {}\n\n","sourceOld":"  public void setNextReader(LeafReaderContext readerContext) throws IOException {\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fda8b161f9c4961c742ebb186f89adc0b4c654a9","date":1512522897,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/SlotAcc#setNextReader(LeafReaderContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/SlotAcc#setNextReader(LeafReaderContext).mjava","sourceNew":"  /**\n   * NOTE: this currently detects when it is being reused and calls resetIterators by comparing reader ords\n   * with previous calls to setNextReader.  For this reason, current users must call setNextReader\n   * in segment order.  Failure to do so will cause worse performance.\n   */\n  public void setNextReader(LeafReaderContext readerContext) throws IOException {\n    LeafReaderContext lastReaderContext = currentReaderContext;\n    currentReaderContext = readerContext;\n    currentDocBase = currentReaderContext.docBase;\n    if (lastReaderContext == null || lastReaderContext.ord >= currentReaderContext.ord) {\n      // if we went backwards (or reused) a reader, we need to reset iterators that can be used only once.\n      resetIterators();\n    }\n  }\n\n","sourceOld":"  public void setNextReader(LeafReaderContext readerContext) throws IOException {}\n\n","bugFix":["de0d7af063e5c03bbc9db87e7e708da8102fdbc3"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"de0d7af063e5c03bbc9db87e7e708da8102fdbc3":["ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fda8b161f9c4961c742ebb186f89adc0b4c654a9":["de0d7af063e5c03bbc9db87e7e708da8102fdbc3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fda8b161f9c4961c742ebb186f89adc0b4c654a9"]},"commit2Childs":{"de0d7af063e5c03bbc9db87e7e708da8102fdbc3":["fda8b161f9c4961c742ebb186f89adc0b4c654a9"],"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["de0d7af063e5c03bbc9db87e7e708da8102fdbc3","54ca69905c5d9d1529286f06ab1d12c68f6c13cb","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"fda8b161f9c4961c742ebb186f89adc0b4c654a9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}