{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#waitForDocsInBuffers(IndexWriter,int).mjava","commits":[{"id":"29ca74ff59eae86a0bcce9cd5c062498fbd2242e","date":1512738648,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#waitForDocsInBuffers(IndexWriter,int).mjava","pathOld":"/dev/null","sourceNew":"  private static void waitForDocsInBuffers(IndexWriter w, int buffersWithDocs) {\n    // wait until at least N threadstates have a doc in order to observe\n    // who flushes the segments.\n    while(true) {\n      int numStatesWithDocs = 0;\n      DocumentsWriterPerThreadPool perThreadPool = w.docWriter.perThreadPool;\n      for (int i = 0; i < perThreadPool.getActiveThreadStateCount(); i++) {\n        DocumentsWriterPerThreadPool.ThreadState threadState = perThreadPool.getThreadState(i);\n        threadState.lock();\n        try {\n          DocumentsWriterPerThread dwpt = threadState.dwpt;\n          if (dwpt != null && dwpt.getNumDocsInRAM() > 1) {\n            numStatesWithDocs++;\n          }\n        } finally {\n          threadState.unlock();\n        }\n      }\n      if (numStatesWithDocs >= buffersWithDocs) {\n        return;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20b20de317c33f1d6e07d9280783d860035c5b80","date":1512905863,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#waitForDocsInBuffers(IndexWriter,int).mjava","pathOld":"/dev/null","sourceNew":"  private static void waitForDocsInBuffers(IndexWriter w, int buffersWithDocs) {\n    // wait until at least N threadstates have a doc in order to observe\n    // who flushes the segments.\n    while(true) {\n      int numStatesWithDocs = 0;\n      DocumentsWriterPerThreadPool perThreadPool = w.docWriter.perThreadPool;\n      for (int i = 0; i < perThreadPool.getActiveThreadStateCount(); i++) {\n        DocumentsWriterPerThreadPool.ThreadState threadState = perThreadPool.getThreadState(i);\n        threadState.lock();\n        try {\n          DocumentsWriterPerThread dwpt = threadState.dwpt;\n          if (dwpt != null && dwpt.getNumDocsInRAM() > 1) {\n            numStatesWithDocs++;\n          }\n        } finally {\n          threadState.unlock();\n        }\n      }\n      if (numStatesWithDocs >= buffersWithDocs) {\n        return;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"264935965977b4a9e2f3920420647072c9c49176","date":1586600626,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#waitForDocsInBuffers(IndexWriter,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#waitForDocsInBuffers(IndexWriter,int).mjava","sourceNew":"  private static void waitForDocsInBuffers(IndexWriter w, int buffersWithDocs) {\n    // wait until at least N DWPTs have a doc in order to observe\n    // who flushes the segments.\n    while(true) {\n      int numStatesWithDocs = 0;\n      DocumentsWriterPerThreadPool perThreadPool = w.docWriter.perThreadPool;\n      for (DocumentsWriterPerThread dwpt : perThreadPool) {\n        dwpt.lock();\n        try {\n          if (dwpt.getNumDocsInRAM() > 1) {\n            numStatesWithDocs++;\n          }\n        } finally {\n          dwpt.unlock();\n        }\n      }\n      if (numStatesWithDocs >= buffersWithDocs) {\n        return;\n      }\n    }\n  }\n\n","sourceOld":"  private static void waitForDocsInBuffers(IndexWriter w, int buffersWithDocs) {\n    // wait until at least N threadstates have a doc in order to observe\n    // who flushes the segments.\n    while(true) {\n      int numStatesWithDocs = 0;\n      DocumentsWriterPerThreadPool perThreadPool = w.docWriter.perThreadPool;\n      for (int i = 0; i < perThreadPool.getActiveThreadStateCount(); i++) {\n        DocumentsWriterPerThreadPool.ThreadState threadState = perThreadPool.getThreadState(i);\n        threadState.lock();\n        try {\n          DocumentsWriterPerThread dwpt = threadState.dwpt;\n          if (dwpt != null && dwpt.getNumDocsInRAM() > 1) {\n            numStatesWithDocs++;\n          }\n        } finally {\n          threadState.unlock();\n        }\n      }\n      if (numStatesWithDocs >= buffersWithDocs) {\n        return;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"264935965977b4a9e2f3920420647072c9c49176":["20b20de317c33f1d6e07d9280783d860035c5b80"],"20b20de317c33f1d6e07d9280783d860035c5b80":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","29ca74ff59eae86a0bcce9cd5c062498fbd2242e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"29ca74ff59eae86a0bcce9cd5c062498fbd2242e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["264935965977b4a9e2f3920420647072c9c49176"]},"commit2Childs":{"264935965977b4a9e2f3920420647072c9c49176":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"20b20de317c33f1d6e07d9280783d860035c5b80":["264935965977b4a9e2f3920420647072c9c49176"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["20b20de317c33f1d6e07d9280783d860035c5b80","29ca74ff59eae86a0bcce9cd5c062498fbd2242e"],"29ca74ff59eae86a0bcce9cd5c062498fbd2242e":["20b20de317c33f1d6e07d9280783d860035c5b80"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}