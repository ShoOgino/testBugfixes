{"path":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#CachingWrapperFilter(Filter).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#CachingWrapperFilter(Filter).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/CachingWrapperFilter#CachingWrapperFilter(Filter).mjava","sourceNew":"  /** Wraps another filter's result and caches it.\n   * Deletions are not cached and AND'd in on the fly, see\n   * {@link #CachingWrapperFilter(Filter,boolean)} for an explanation.\n   * This constructor is recommended for often changing indexes.\n   * @param filter Filter to cache results of\n   * @see #CachingWrapperFilter(Filter,boolean)\n   */\n  public CachingWrapperFilter(Filter filter) {\n    this(filter, false);\n  }\n\n","sourceOld":"  /** Wraps another filter's result and caches it.\n   * Deletions are not cached and AND'd in on the fly, see\n   * {@link #CachingWrapperFilter(Filter,boolean)} for an explanation.\n   * This constructor is recommended for often changing indexes.\n   * @param filter Filter to cache results of\n   * @see #CachingWrapperFilter(Filter,boolean)\n   */\n  public CachingWrapperFilter(Filter filter) {\n    this(filter, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a3bd393140af58401b6bcd1d1f6bdc896c718c8","date":1354060578,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#CachingWrapperFilter(Filter).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#CachingWrapperFilter(Filter).mjava","sourceNew":"  /** Wraps another filter's result and caches it.\n   * @param filter Filter to cache results of\n   */\n  public CachingWrapperFilter(Filter filter) {\n    this.filter = filter;\n  }\n\n","sourceOld":"  /** Wraps another filter's result and caches it.\n   * Deletions are not cached and AND'd in on the fly, see\n   * {@link #CachingWrapperFilter(Filter,boolean)} for an explanation.\n   * This constructor is recommended for often changing indexes.\n   * @param filter Filter to cache results of\n   * @see #CachingWrapperFilter(Filter,boolean)\n   */\n  public CachingWrapperFilter(Filter filter) {\n    this(filter, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#CachingWrapperFilter(Filter).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#CachingWrapperFilter(Filter).mjava","sourceNew":"  /** Wraps another filter's result and caches it.\n   * @param filter Filter to cache results of\n   */\n  public CachingWrapperFilter(Filter filter) {\n    this.filter = filter;\n  }\n\n","sourceOld":"  /** Wraps another filter's result and caches it.\n   * Deletions are not cached and AND'd in on the fly, see\n   * {@link #CachingWrapperFilter(Filter,boolean)} for an explanation.\n   * This constructor is recommended for often changing indexes.\n   * @param filter Filter to cache results of\n   * @see #CachingWrapperFilter(Filter,boolean)\n   */\n  public CachingWrapperFilter(Filter filter) {\n    this(filter, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e5eed7b3a60b52b9f1c32db9c49da397e06f88af","date":1417105424,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#CachingWrapperFilter(Filter).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#CachingWrapperFilter(Filter).mjava","sourceNew":"  /** Same as {@link CachingWrapperFilter#CachingWrapperFilter(Filter, FilterCachingPolicy)}\n   *  but enforces the use of the\n   *  {@link FilterCachingPolicy.CacheOnLargeSegments#DEFAULT} policy. */\n  public CachingWrapperFilter(Filter filter) {\n    this(filter, FilterCachingPolicy.CacheOnLargeSegments.DEFAULT);\n  }\n\n","sourceOld":"  /** Wraps another filter's result and caches it.\n   * @param filter Filter to cache results of\n   */\n  public CachingWrapperFilter(Filter filter) {\n    this.filter = filter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60596f28be69b10c37a56a303c2dbea07b2ca4ba","date":1425060541,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#CachingWrapperFilter(Filter).mjava","sourceNew":null,"sourceOld":"  /** Same as {@link CachingWrapperFilter#CachingWrapperFilter(Filter, FilterCachingPolicy)}\n   *  but enforces the use of the\n   *  {@link FilterCachingPolicy.CacheOnLargeSegments#DEFAULT} policy. */\n  public CachingWrapperFilter(Filter filter) {\n    this(filter, FilterCachingPolicy.CacheOnLargeSegments.DEFAULT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":4,"author":"Ryan Ernst","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#CachingWrapperFilter(Filter).mjava","sourceNew":null,"sourceOld":"  /** Same as {@link CachingWrapperFilter#CachingWrapperFilter(Filter, FilterCachingPolicy)}\n   *  but enforces the use of the\n   *  {@link FilterCachingPolicy.CacheOnLargeSegments#DEFAULT} policy. */\n  public CachingWrapperFilter(Filter filter) {\n    this(filter, FilterCachingPolicy.CacheOnLargeSegments.DEFAULT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["e5eed7b3a60b52b9f1c32db9c49da397e06f88af","60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["e5eed7b3a60b52b9f1c32db9c49da397e06f88af"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e5eed7b3a60b52b9f1c32db9c49da397e06f88af":["9a3bd393140af58401b6bcd1d1f6bdc896c718c8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","9a3bd393140af58401b6bcd1d1f6bdc896c718c8"],"9a3bd393140af58401b6bcd1d1f6bdc896c718c8":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["60596f28be69b10c37a56a303c2dbea07b2ca4ba"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["407687e67faf6e1f02a211ca078d8e3eed631027","9a3bd393140af58401b6bcd1d1f6bdc896c718c8"],"e5eed7b3a60b52b9f1c32db9c49da397e06f88af":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"9a3bd393140af58401b6bcd1d1f6bdc896c718c8":["e5eed7b3a60b52b9f1c32db9c49da397e06f88af","407687e67faf6e1f02a211ca078d8e3eed631027"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}