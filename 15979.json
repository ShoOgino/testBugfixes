{"path":"solr/src/test/org/apache/solr/servlet/CacheHeaderTest#checkVetoHeaders(HttpMethodBase,boolean).mjava","commits":[{"id":"7403146dc57e882c359dc27cb4ce57dedab022bf","date":1269352328,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/servlet/CacheHeaderTest#checkVetoHeaders(HttpMethodBase,boolean).mjava","pathOld":"/dev/null","sourceNew":"  protected void checkVetoHeaders(HttpMethodBase m, boolean checkExpires) throws Exception {\n    Header head = m.getResponseHeader(\"Cache-Control\");\n    assertNotNull(\"We got no Cache-Control header\", head);\n    assertTrue(\"We got no no-cache in the Cache-Control header\", head.getValue().contains(\"no-cache\"));\n    assertTrue(\"We got no no-store in the Cache-Control header\", head.getValue().contains(\"no-store\"));\n\n    head = m.getResponseHeader(\"Pragma\");\n    assertNotNull(\"We got no Pragma header\", head);\n    assertEquals(\"no-cache\", head.getValue());\n\n    if (checkExpires) {\n      head = m.getResponseHeader(\"Expires\");\n      assertNotNull(\"We got no Expires header:\" + m.getResponseHeaders(), head);\n      Date d = DateUtil.parseDate(head.getValue());\n      assertTrue(\"We got no Expires header far in the past\", System\n          .currentTimeMillis()\n          - d.getTime() > 100000);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/servlet/CacheHeaderTest#checkVetoHeaders(HttpMethodBase,boolean).mjava","pathOld":"solr/src/test/org/apache/solr/servlet/CacheHeaderTest#checkVetoHeaders(HttpMethodBase,boolean).mjava","sourceNew":"  protected void checkVetoHeaders(HttpMethodBase m, boolean checkExpires) throws Exception {\n    Header head = m.getResponseHeader(\"Cache-Control\");\n    assertNotNull(\"We got no Cache-Control header\", head);\n    assertTrue(\"We got no no-cache in the Cache-Control header\", head.getValue().contains(\"no-cache\"));\n    assertTrue(\"We got no no-store in the Cache-Control header\", head.getValue().contains(\"no-store\"));\n\n    head = m.getResponseHeader(\"Pragma\");\n    assertNotNull(\"We got no Pragma header\", head);\n    assertEquals(\"no-cache\", head.getValue());\n\n    if (checkExpires) {\n      head = m.getResponseHeader(\"Expires\");\n      assertNotNull(\"We got no Expires header:\" + m.getResponseHeaders(), head);\n      Date d = DateUtil.parseDate(head.getValue());\n      assertTrue(\"We got no Expires header far in the past\", System\n          .currentTimeMillis()\n          - d.getTime() > 100000);\n    }\n  }\n\n","sourceOld":"  protected void checkVetoHeaders(HttpMethodBase m, boolean checkExpires) throws Exception {\n    Header head = m.getResponseHeader(\"Cache-Control\");\n    assertNotNull(\"We got no Cache-Control header\", head);\n    assertTrue(\"We got no no-cache in the Cache-Control header\", head.getValue().contains(\"no-cache\"));\n    assertTrue(\"We got no no-store in the Cache-Control header\", head.getValue().contains(\"no-store\"));\n\n    head = m.getResponseHeader(\"Pragma\");\n    assertNotNull(\"We got no Pragma header\", head);\n    assertEquals(\"no-cache\", head.getValue());\n\n    if (checkExpires) {\n      head = m.getResponseHeader(\"Expires\");\n      assertNotNull(\"We got no Expires header:\" + m.getResponseHeaders(), head);\n      Date d = DateUtil.parseDate(head.getValue());\n      assertTrue(\"We got no Expires header far in the past\", System\n          .currentTimeMillis()\n          - d.getTime() > 100000);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/servlet/CacheHeaderTest#checkVetoHeaders(HttpMethodBase,boolean).mjava","pathOld":"solr/src/test/org/apache/solr/servlet/CacheHeaderTest#checkVetoHeaders(HttpMethodBase,boolean).mjava","sourceNew":"  protected void checkVetoHeaders(HttpMethodBase m, boolean checkExpires) throws Exception {\n    Header head = m.getResponseHeader(\"Cache-Control\");\n    assertNotNull(\"We got no Cache-Control header\", head);\n    assertTrue(\"We got no no-cache in the Cache-Control header\", head.getValue().contains(\"no-cache\"));\n    assertTrue(\"We got no no-store in the Cache-Control header\", head.getValue().contains(\"no-store\"));\n\n    head = m.getResponseHeader(\"Pragma\");\n    assertNotNull(\"We got no Pragma header\", head);\n    assertEquals(\"no-cache\", head.getValue());\n\n    if (checkExpires) {\n      head = m.getResponseHeader(\"Expires\");\n      assertNotNull(\"We got no Expires header:\" + m.getResponseHeaders(), head);\n      Date d = DateUtil.parseDate(head.getValue());\n      assertTrue(\"We got no Expires header far in the past\", System\n          .currentTimeMillis()\n          - d.getTime() > 100000);\n    }\n  }\n\n","sourceOld":"  protected void checkVetoHeaders(HttpMethodBase m, boolean checkExpires) throws Exception {\n    Header head = m.getResponseHeader(\"Cache-Control\");\n    assertNotNull(\"We got no Cache-Control header\", head);\n    assertTrue(\"We got no no-cache in the Cache-Control header\", head.getValue().contains(\"no-cache\"));\n    assertTrue(\"We got no no-store in the Cache-Control header\", head.getValue().contains(\"no-store\"));\n\n    head = m.getResponseHeader(\"Pragma\");\n    assertNotNull(\"We got no Pragma header\", head);\n    assertEquals(\"no-cache\", head.getValue());\n\n    if (checkExpires) {\n      head = m.getResponseHeader(\"Expires\");\n      assertNotNull(\"We got no Expires header:\" + m.getResponseHeaders(), head);\n      Date d = DateUtil.parseDate(head.getValue());\n      assertTrue(\"We got no Expires header far in the past\", System\n          .currentTimeMillis()\n          - d.getTime() > 100000);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/servlet/CacheHeaderTest#checkVetoHeaders(HttpMethodBase,boolean).mjava","pathOld":"solr/src/test/org/apache/solr/servlet/CacheHeaderTest#checkVetoHeaders(HttpMethodBase,boolean).mjava","sourceNew":"  protected void checkVetoHeaders(HttpMethodBase m, boolean checkExpires) throws Exception {\n    Header head = m.getResponseHeader(\"Cache-Control\");\n    assertNotNull(\"We got no Cache-Control header\", head);\n    assertTrue(\"We got no no-cache in the Cache-Control header\", head.getValue().contains(\"no-cache\"));\n    assertTrue(\"We got no no-store in the Cache-Control header\", head.getValue().contains(\"no-store\"));\n\n    head = m.getResponseHeader(\"Pragma\");\n    assertNotNull(\"We got no Pragma header\", head);\n    assertEquals(\"no-cache\", head.getValue());\n\n    if (checkExpires) {\n      head = m.getResponseHeader(\"Expires\");\n      assertNotNull(\"We got no Expires header:\" + m.getResponseHeaders(), head);\n      Date d = DateUtil.parseDate(head.getValue());\n      assertTrue(\"We got no Expires header far in the past\", System\n          .currentTimeMillis()\n          - d.getTime() > 100000);\n    }\n  }\n\n","sourceOld":"  protected void checkVetoHeaders(HttpMethodBase m, boolean checkExpires) throws Exception {\n    Header head = m.getResponseHeader(\"Cache-Control\");\n    assertNotNull(\"We got no Cache-Control header\", head);\n    assertTrue(\"We got no no-cache in the Cache-Control header\", head.getValue().contains(\"no-cache\"));\n    assertTrue(\"We got no no-store in the Cache-Control header\", head.getValue().contains(\"no-store\"));\n\n    head = m.getResponseHeader(\"Pragma\");\n    assertNotNull(\"We got no Pragma header\", head);\n    assertEquals(\"no-cache\", head.getValue());\n\n    if (checkExpires) {\n      head = m.getResponseHeader(\"Expires\");\n      assertNotNull(\"We got no Expires header:\" + m.getResponseHeaders(), head);\n      Date d = DateUtil.parseDate(head.getValue());\n      assertTrue(\"We got no Expires header far in the past\", System\n          .currentTimeMillis()\n          - d.getTime() > 100000);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["7403146dc57e882c359dc27cb4ce57dedab022bf"],"7403146dc57e882c359dc27cb4ce57dedab022bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["7403146dc57e882c359dc27cb4ce57dedab022bf","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["7403146dc57e882c359dc27cb4ce57dedab022bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"7403146dc57e882c359dc27cb4ce57dedab022bf":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7403146dc57e882c359dc27cb4ce57dedab022bf"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}