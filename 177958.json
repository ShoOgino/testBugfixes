{"path":"lucene/core/src/java/org/apache/lucene/util/BitUtil#interleave(int,int).mjava","commits":[{"id":"065f36185d91a7d825ce7adac5b0d8df5cb4f73f","date":1461251676,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BitUtil#interleave(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/BitUtil#interleave(long,long).mjava","sourceNew":"  /**\n   * Interleaves the first 32 bits of each long value\n   *\n   * Adapted from: http://graphics.stanford.edu/~seander/bithacks.html#InterleaveBMN\n   */\n  public static long interleave(int even, int odd) {\n    long v1 = 0x00000000FFFFFFFFL & even;\n    long v2 = 0x00000000FFFFFFFFL & odd;\n    v1 = (v1 | (v1 << SHIFT[4])) & MAGIC[4];\n    v1 = (v1 | (v1 << SHIFT[3])) & MAGIC[3];\n    v1 = (v1 | (v1 << SHIFT[2])) & MAGIC[2];\n    v1 = (v1 | (v1 << SHIFT[1])) & MAGIC[1];\n    v1 = (v1 | (v1 << SHIFT[0])) & MAGIC[0];\n    v2 = (v2 | (v2 << SHIFT[4])) & MAGIC[4];\n    v2 = (v2 | (v2 << SHIFT[3])) & MAGIC[3];\n    v2 = (v2 | (v2 << SHIFT[2])) & MAGIC[2];\n    v2 = (v2 | (v2 << SHIFT[1])) & MAGIC[1];\n    v2 = (v2 | (v2 << SHIFT[0])) & MAGIC[0];\n\n    return (v2<<1) | v1;\n  }\n\n","sourceOld":"  /**\n   * Interleaves the first 32 bits of each long value\n   *\n   * Adapted from: http://graphics.stanford.edu/~seander/bithacks.html#InterleaveBMN\n   */\n  public static long interleave(long v1, long v2) {\n    v1 = (v1 | (v1 << SHIFT[4])) & MAGIC[4];\n    v1 = (v1 | (v1 << SHIFT[3])) & MAGIC[3];\n    v1 = (v1 | (v1 << SHIFT[2])) & MAGIC[2];\n    v1 = (v1 | (v1 << SHIFT[1])) & MAGIC[1];\n    v1 = (v1 | (v1 << SHIFT[0])) & MAGIC[0];\n    v2 = (v2 | (v2 << SHIFT[4])) & MAGIC[4];\n    v2 = (v2 | (v2 << SHIFT[3])) & MAGIC[3];\n    v2 = (v2 | (v2 << SHIFT[2])) & MAGIC[2];\n    v2 = (v2 | (v2 << SHIFT[1])) & MAGIC[1];\n    v2 = (v2 | (v2 << SHIFT[0])) & MAGIC[0];\n\n    return (v2<<1) | v1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec4dfcb8d7e7f83ca209a5bcc83e8b98658e9dca","date":1461308643,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BitUtil#interleave(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/BitUtil#interleave(long,long).mjava","sourceNew":"  /**\n   * Interleaves the first 32 bits of each long value\n   *\n   * Adapted from: http://graphics.stanford.edu/~seander/bithacks.html#InterleaveBMN\n   */\n  public static long interleave(int even, int odd) {\n    long v1 = 0x00000000FFFFFFFFL & even;\n    long v2 = 0x00000000FFFFFFFFL & odd;\n    v1 = (v1 | (v1 << SHIFT[4])) & MAGIC[4];\n    v1 = (v1 | (v1 << SHIFT[3])) & MAGIC[3];\n    v1 = (v1 | (v1 << SHIFT[2])) & MAGIC[2];\n    v1 = (v1 | (v1 << SHIFT[1])) & MAGIC[1];\n    v1 = (v1 | (v1 << SHIFT[0])) & MAGIC[0];\n    v2 = (v2 | (v2 << SHIFT[4])) & MAGIC[4];\n    v2 = (v2 | (v2 << SHIFT[3])) & MAGIC[3];\n    v2 = (v2 | (v2 << SHIFT[2])) & MAGIC[2];\n    v2 = (v2 | (v2 << SHIFT[1])) & MAGIC[1];\n    v2 = (v2 | (v2 << SHIFT[0])) & MAGIC[0];\n\n    return (v2<<1) | v1;\n  }\n\n","sourceOld":"  /**\n   * Interleaves the first 32 bits of each long value\n   *\n   * Adapted from: http://graphics.stanford.edu/~seander/bithacks.html#InterleaveBMN\n   */\n  public static long interleave(long v1, long v2) {\n    v1 = (v1 | (v1 << SHIFT[4])) & MAGIC[4];\n    v1 = (v1 | (v1 << SHIFT[3])) & MAGIC[3];\n    v1 = (v1 | (v1 << SHIFT[2])) & MAGIC[2];\n    v1 = (v1 | (v1 << SHIFT[1])) & MAGIC[1];\n    v1 = (v1 | (v1 << SHIFT[0])) & MAGIC[0];\n    v2 = (v2 | (v2 << SHIFT[4])) & MAGIC[4];\n    v2 = (v2 | (v2 << SHIFT[3])) & MAGIC[3];\n    v2 = (v2 | (v2 << SHIFT[2])) & MAGIC[2];\n    v2 = (v2 | (v2 << SHIFT[1])) & MAGIC[1];\n    v2 = (v2 | (v2 << SHIFT[0])) & MAGIC[0];\n\n    return (v2<<1) | v1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"617d6d4150e0fb2acef8980ce51e3b8e628fb200","date":1580326292,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BitUtil#interleave(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/BitUtil#interleave(int,int).mjava","sourceNew":"  /**\n   * Interleaves the first 32 bits of each long value\n   *\n   * Adapted from: http://graphics.stanford.edu/~seander/bithacks.html#InterleaveBMN\n   */\n  public static long interleave(int even, int odd) {\n    long v1 = 0x00000000FFFFFFFFL & even;\n    long v2 = 0x00000000FFFFFFFFL & odd;\n    v1 = (v1 | (v1 << SHIFT4)) & MAGIC4;\n    v1 = (v1 | (v1 << SHIFT3)) & MAGIC3;\n    v1 = (v1 | (v1 << SHIFT2)) & MAGIC2;\n    v1 = (v1 | (v1 << SHIFT1)) & MAGIC1;\n    v1 = (v1 | (v1 << SHIFT0)) & MAGIC0;\n    v2 = (v2 | (v2 << SHIFT4)) & MAGIC4;\n    v2 = (v2 | (v2 << SHIFT3)) & MAGIC3;\n    v2 = (v2 | (v2 << SHIFT2)) & MAGIC2;\n    v2 = (v2 | (v2 << SHIFT1)) & MAGIC1;\n    v2 = (v2 | (v2 << SHIFT0)) & MAGIC0;\n\n    return (v2<<1) | v1;\n  }\n\n","sourceOld":"  /**\n   * Interleaves the first 32 bits of each long value\n   *\n   * Adapted from: http://graphics.stanford.edu/~seander/bithacks.html#InterleaveBMN\n   */\n  public static long interleave(int even, int odd) {\n    long v1 = 0x00000000FFFFFFFFL & even;\n    long v2 = 0x00000000FFFFFFFFL & odd;\n    v1 = (v1 | (v1 << SHIFT[4])) & MAGIC[4];\n    v1 = (v1 | (v1 << SHIFT[3])) & MAGIC[3];\n    v1 = (v1 | (v1 << SHIFT[2])) & MAGIC[2];\n    v1 = (v1 | (v1 << SHIFT[1])) & MAGIC[1];\n    v1 = (v1 | (v1 << SHIFT[0])) & MAGIC[0];\n    v2 = (v2 | (v2 << SHIFT[4])) & MAGIC[4];\n    v2 = (v2 | (v2 << SHIFT[3])) & MAGIC[3];\n    v2 = (v2 | (v2 << SHIFT[2])) & MAGIC[2];\n    v2 = (v2 | (v2 << SHIFT[1])) & MAGIC[1];\n    v2 = (v2 | (v2 << SHIFT[0])) & MAGIC[0];\n\n    return (v2<<1) | v1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"065f36185d91a7d825ce7adac5b0d8df5cb4f73f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ec4dfcb8d7e7f83ca209a5bcc83e8b98658e9dca":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","065f36185d91a7d825ce7adac5b0d8df5cb4f73f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"617d6d4150e0fb2acef8980ce51e3b8e628fb200":["ec4dfcb8d7e7f83ca209a5bcc83e8b98658e9dca"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["617d6d4150e0fb2acef8980ce51e3b8e628fb200"]},"commit2Childs":{"065f36185d91a7d825ce7adac5b0d8df5cb4f73f":["ec4dfcb8d7e7f83ca209a5bcc83e8b98658e9dca"],"ec4dfcb8d7e7f83ca209a5bcc83e8b98658e9dca":["617d6d4150e0fb2acef8980ce51e3b8e628fb200"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["065f36185d91a7d825ce7adac5b0d8df5cb4f73f","ec4dfcb8d7e7f83ca209a5bcc83e8b98658e9dca"],"617d6d4150e0fb2acef8980ce51e3b8e628fb200":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}