{"path":"backwards/src/java/org/apache/lucene/util/SortedVIntList.SortedVIntListBuilder#addInt(int).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/util/SortedVIntList.SortedVIntListBuilder#addInt(int).mjava","pathOld":"/dev/null","sourceNew":"    void addInt(int nextInt) {\n      int diff = nextInt - lastInt;\n      if (diff < 0) {\n        throw new IllegalArgumentException(\n            \"Input not sorted or first element negative.\");\n      }\n  \n      if ((lastBytePos + MAX_BYTES_PER_INT) > bytes.length) {\n        // biggest possible int does not fit\n        resizeBytes((bytes.length * 2) + MAX_BYTES_PER_INT);\n      }\n  \n      // See org.apache.lucene.store.IndexOutput.writeVInt()\n      while ((diff & ~VB1) != 0) { // The high bit of the next byte needs to be set.\n        bytes[lastBytePos++] = (byte) ((diff & VB1) | ~VB1);\n        diff >>>= BIT_SHIFT;\n      }\n      bytes[lastBytePos++] = (byte) diff; // Last byte, high bit not set.\n      size++;\n      lastInt = nextInt;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/util/SortedVIntList.SortedVIntListBuilder#addInt(int).mjava","pathOld":"backwards/src/java/org/apache/lucene/util/SortedVIntList.SortedVIntListBuilder#addInt(int).mjava","sourceNew":"    void addInt(int nextInt) {\n      int diff = nextInt - lastInt;\n      if (diff < 0) {\n        throw new IllegalArgumentException(\n            \"Input not sorted or first element negative.\");\n      }\n  \n      if ((lastBytePos + MAX_BYTES_PER_INT) > bytes.length) {\n        // biggest possible int does not fit\n        resizeBytes((bytes.length * 2) + MAX_BYTES_PER_INT);\n      }\n  \n      // See org.apache.lucene.store.IndexOutput.writeVInt()\n      while ((diff & ~VB1) != 0) { // The high bit of the next byte needs to be set.\n        bytes[lastBytePos++] = (byte) ((diff & VB1) | ~VB1);\n        diff >>>= BIT_SHIFT;\n      }\n      bytes[lastBytePos++] = (byte) diff; // Last byte, high bit not set.\n      size++;\n      lastInt = nextInt;\n    }\n\n","sourceOld":"    void addInt(int nextInt) {\n      int diff = nextInt - lastInt;\n      if (diff < 0) {\n        throw new IllegalArgumentException(\n            \"Input not sorted or first element negative.\");\n      }\n  \n      if ((lastBytePos + MAX_BYTES_PER_INT) > bytes.length) {\n        // biggest possible int does not fit\n        resizeBytes((bytes.length * 2) + MAX_BYTES_PER_INT);\n      }\n  \n      // See org.apache.lucene.store.IndexOutput.writeVInt()\n      while ((diff & ~VB1) != 0) { // The high bit of the next byte needs to be set.\n        bytes[lastBytePos++] = (byte) ((diff & VB1) | ~VB1);\n        diff >>>= BIT_SHIFT;\n      }\n      bytes[lastBytePos++] = (byte) diff; // Last byte, high bit not set.\n      size++;\n      lastInt = nextInt;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}