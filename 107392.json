{"path":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#MemoryIndexReader().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#MemoryIndexReader().mjava","pathOld":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#MemoryIndexReader().mjava","sourceNew":"    private MemoryIndexReader() {\n      super(); // avoid as much superclass baggage as possible\n    }\n\n","sourceOld":"    private MemoryIndexReader() {\n      super(); // avoid as much superclass baggage as possible\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"253a79e1af11467dd01315b1919025d288aa0ccb","date":1458032260,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#MemoryIndexReader().mjava","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#MemoryIndexReader().mjava","sourceNew":"    private MemoryIndexReader() {\n      super(); // avoid as much superclass baggage as possible\n      for (Info info : fields.values()) {\n        info.prepareDocValues();\n      }\n    }\n\n","sourceOld":"    private MemoryIndexReader() {\n      super(); // avoid as much superclass baggage as possible\n    }\n\n","bugFix":null,"bugIntro":["74d5d70ec9df9b59ea6d0dbdb5f7af1991ba7275"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"74d5d70ec9df9b59ea6d0dbdb5f7af1991ba7275","date":1458043999,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#MemoryIndexReader().mjava","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#MemoryIndexReader().mjava","sourceNew":"    private MemoryIndexReader() {\n      super(); // avoid as much superclass baggage as possible\n      boolean hasPointValues = false;\n      for (Info info : fields.values()) {\n        info.prepareDocValuesAndPointValues();\n        if (info.pointValues != null) {\n          hasPointValues = true;\n        }\n      }\n      if (hasPointValues) {\n        pointValues = new MemoryIndexPointValues();\n      } else {\n        pointValues = null;\n      }\n    }\n\n","sourceOld":"    private MemoryIndexReader() {\n      super(); // avoid as much superclass baggage as possible\n      for (Info info : fields.values()) {\n        info.prepareDocValues();\n      }\n    }\n\n","bugFix":["253a79e1af11467dd01315b1919025d288aa0ccb"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"367f57e2ee85b7f7e28cfe73370a22cf67624f65","date":1476778467,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#MemoryIndexReader().mjava","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#MemoryIndexReader().mjava","sourceNew":"    private MemoryIndexReader() {\n      super(); // avoid as much superclass baggage as possible\n      for (Info info : fields.values()) {\n        info.prepareDocValuesAndPointValues();\n      }\n    }\n\n","sourceOld":"    private MemoryIndexReader() {\n      super(); // avoid as much superclass baggage as possible\n      boolean hasPointValues = false;\n      for (Info info : fields.values()) {\n        info.prepareDocValuesAndPointValues();\n        if (info.pointValues != null) {\n          hasPointValues = true;\n        }\n      }\n      if (hasPointValues) {\n        pointValues = new MemoryIndexPointValues();\n      } else {\n        pointValues = null;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#MemoryIndexReader().mjava","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#MemoryIndexReader().mjava","sourceNew":"    private MemoryIndexReader() {\n      super(); // avoid as much superclass baggage as possible\n      for (Info info : fields.values()) {\n        info.prepareDocValuesAndPointValues();\n      }\n    }\n\n","sourceOld":"    private MemoryIndexReader() {\n      super(); // avoid as much superclass baggage as possible\n      boolean hasPointValues = false;\n      for (Info info : fields.values()) {\n        info.prepareDocValuesAndPointValues();\n        if (info.pointValues != null) {\n          hasPointValues = true;\n        }\n      }\n      if (hasPointValues) {\n        pointValues = new MemoryIndexPointValues();\n      } else {\n        pointValues = null;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7bc10aeb596994a4cbfa5801932a4dac9fdd2afc","date":1541533532,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#MemoryIndexReader().mjava","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#MemoryIndexReader().mjava","sourceNew":"    private MemoryIndexReader() {\n      super(); // avoid as much superclass baggage as possible\n\n      FieldInfo[] fieldInfosArr = new FieldInfo[fields.size()];\n\n      int i = 0;\n      for (Info info : fields.values()) {\n        info.prepareDocValuesAndPointValues();\n        fieldInfosArr[i++] = info.fieldInfo;\n      }\n\n      fieldInfos = new FieldInfos(fieldInfosArr);\n    }\n\n","sourceOld":"    private MemoryIndexReader() {\n      super(); // avoid as much superclass baggage as possible\n      for (Info info : fields.values()) {\n        info.prepareDocValuesAndPointValues();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7bc10aeb596994a4cbfa5801932a4dac9fdd2afc":["367f57e2ee85b7f7e28cfe73370a22cf67624f65"],"74d5d70ec9df9b59ea6d0dbdb5f7af1991ba7275":["253a79e1af11467dd01315b1919025d288aa0ccb"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"253a79e1af11467dd01315b1919025d288aa0ccb":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"367f57e2ee85b7f7e28cfe73370a22cf67624f65":["74d5d70ec9df9b59ea6d0dbdb5f7af1991ba7275"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["74d5d70ec9df9b59ea6d0dbdb5f7af1991ba7275","367f57e2ee85b7f7e28cfe73370a22cf67624f65"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7bc10aeb596994a4cbfa5801932a4dac9fdd2afc"]},"commit2Childs":{"7bc10aeb596994a4cbfa5801932a4dac9fdd2afc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"74d5d70ec9df9b59ea6d0dbdb5f7af1991ba7275":["367f57e2ee85b7f7e28cfe73370a22cf67624f65","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["253a79e1af11467dd01315b1919025d288aa0ccb"],"253a79e1af11467dd01315b1919025d288aa0ccb":["74d5d70ec9df9b59ea6d0dbdb5f7af1991ba7275"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"367f57e2ee85b7f7e28cfe73370a22cf67624f65":["7bc10aeb596994a4cbfa5801932a4dac9fdd2afc","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}