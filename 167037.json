{"path":"solr/core/src/java/org/apache/solr/handler/SQLHandler#inform(SolrCore).mjava","commits":[{"id":"7b2c4e17100e207bc842e56d016b9f91f411304e","date":1434336696,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SQLHandler#inform(SolrCore).mjava","pathOld":"/dev/null","sourceNew":"  public void inform(SolrCore core) {\n\n    CoreContainer coreContainer = core.getCoreDescriptor().getCoreContainer();\n\n    if(coreContainer.isZooKeeperAware()) {\n      defaultZkhost = core.getCoreDescriptor().getCoreContainer().getZkController().getZkServerAddress();\n      defaultWorkerCollection = core.getCoreDescriptor().getCollectionName();\n    }\n\n    NamedList<String> tableConf = (NamedList<String>)initArgs.get(\"tables\");\n\n    for(Entry<String,String> entry : tableConf) {\n      String tableName = entry.getKey();\n      if(entry.getValue().indexOf(\"@\") > -1) {\n        String[] parts = entry.getValue().split(\"@\");\n        tableMappings.put(tableName, new TableSpec(parts[0], parts[1]));\n      } else {\n        String collection = entry.getValue();\n        tableMappings.put(tableName, new TableSpec(collection, defaultZkhost));\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["ed509e20c5e173e5a72924d126d600d7e539654a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8da9a71da64ce12a97dcfcdd912893aeb1fa2981","date":1437510515,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SQLHandler#inform(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SQLHandler#inform(SolrCore).mjava","sourceNew":"  public void inform(SolrCore core) {\n\n    CoreContainer coreContainer = core.getCoreDescriptor().getCoreContainer();\n\n    if(coreContainer.isZooKeeperAware()) {\n      defaultZkhost = core.getCoreDescriptor().getCoreContainer().getZkController().getZkServerAddress();\n      defaultWorkerCollection = core.getCoreDescriptor().getCollectionName();\n    }\n  }\n\n","sourceOld":"  public void inform(SolrCore core) {\n\n    CoreContainer coreContainer = core.getCoreDescriptor().getCoreContainer();\n\n    if(coreContainer.isZooKeeperAware()) {\n      defaultZkhost = core.getCoreDescriptor().getCoreContainer().getZkController().getZkServerAddress();\n      defaultWorkerCollection = core.getCoreDescriptor().getCollectionName();\n    }\n\n    NamedList<String> tableConf = (NamedList<String>)initArgs.get(\"tables\");\n\n    for(Entry<String,String> entry : tableConf) {\n      String tableName = entry.getKey();\n      if(entry.getValue().indexOf(\"@\") > -1) {\n        String[] parts = entry.getValue().split(\"@\");\n        tableMappings.put(tableName, new TableSpec(parts[0], parts[1]));\n      } else {\n        String collection = entry.getValue();\n        tableMappings.put(tableName, new TableSpec(collection, defaultZkhost));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0104212f65198f40658f73c83200eaa99553ea09","date":1462026700,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SQLHandler#inform(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SQLHandler#inform(SolrCore).mjava","sourceNew":"  public void inform(SolrCore core) {\n    CoreContainer coreContainer = core.getCoreDescriptor().getCoreContainer();\n\n    if(coreContainer.isZooKeeperAware()) {\n      defaultZkhost = core.getCoreDescriptor().getCoreContainer().getZkController().getZkServerAddress();\n      defaultWorkerCollection = core.getCoreDescriptor().getCollectionName();\n    }\n  }\n\n","sourceOld":"  public void inform(SolrCore core) {\n\n    CoreContainer coreContainer = core.getCoreDescriptor().getCoreContainer();\n\n    if(coreContainer.isZooKeeperAware()) {\n      defaultZkhost = core.getCoreDescriptor().getCoreContainer().getZkController().getZkServerAddress();\n      defaultWorkerCollection = core.getCoreDescriptor().getCollectionName();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ed509e20c5e173e5a72924d126d600d7e539654a","date":1476217650,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SQLHandler#inform(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SQLHandler#inform(SolrCore).mjava","sourceNew":"  public void inform(SolrCore core) {\n    CoreContainer coreContainer = core.getCoreDescriptor().getCoreContainer();\n\n    if(coreContainer.isZooKeeperAware()) {\n      defaultZkhost = core.getCoreDescriptor().getCoreContainer().getZkController().getZkServerAddress();\n      defaultWorkerCollection = core.getCoreDescriptor().getCollectionName();\n      isCloud = true;\n    }\n  }\n\n","sourceOld":"  public void inform(SolrCore core) {\n\n    CoreContainer coreContainer = core.getCoreDescriptor().getCoreContainer();\n\n    if(coreContainer.isZooKeeperAware()) {\n      defaultZkhost = core.getCoreDescriptor().getCoreContainer().getZkController().getZkServerAddress();\n      defaultWorkerCollection = core.getCoreDescriptor().getCollectionName();\n    }\n  }\n\n","bugFix":["7b2c4e17100e207bc842e56d016b9f91f411304e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SQLHandler#inform(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SQLHandler#inform(SolrCore).mjava","sourceNew":"  public void inform(SolrCore core) {\n    CoreContainer coreContainer = core.getCoreDescriptor().getCoreContainer();\n\n    if(coreContainer.isZooKeeperAware()) {\n      defaultZkhost = core.getCoreDescriptor().getCoreContainer().getZkController().getZkServerAddress();\n      defaultWorkerCollection = core.getCoreDescriptor().getCollectionName();\n      isCloud = true;\n    }\n  }\n\n","sourceOld":"  public void inform(SolrCore core) {\n    CoreContainer coreContainer = core.getCoreDescriptor().getCoreContainer();\n\n    if(coreContainer.isZooKeeperAware()) {\n      defaultZkhost = core.getCoreDescriptor().getCoreContainer().getZkController().getZkServerAddress();\n      defaultWorkerCollection = core.getCoreDescriptor().getCollectionName();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"729cb470f975115d4c60517b2cb7c42e37a7a2e1","date":1492041760,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SQLHandler#inform(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SQLHandler#inform(SolrCore).mjava","sourceNew":"  public void inform(SolrCore core) {\n    CoreContainer coreContainer = core.getCoreContainer();\n\n    if(coreContainer.isZooKeeperAware()) {\n      defaultZkhost = core.getCoreContainer().getZkController().getZkServerAddress();\n      defaultWorkerCollection = core.getCoreDescriptor().getCollectionName();\n      isCloud = true;\n    }\n  }\n\n","sourceOld":"  public void inform(SolrCore core) {\n    CoreContainer coreContainer = core.getCoreDescriptor().getCoreContainer();\n\n    if(coreContainer.isZooKeeperAware()) {\n      defaultZkhost = core.getCoreDescriptor().getCoreContainer().getZkController().getZkServerAddress();\n      defaultWorkerCollection = core.getCoreDescriptor().getCollectionName();\n      isCloud = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SQLHandler#inform(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SQLHandler#inform(SolrCore).mjava","sourceNew":"  public void inform(SolrCore core) {\n    CoreContainer coreContainer = core.getCoreContainer();\n\n    if(coreContainer.isZooKeeperAware()) {\n      defaultZkhost = core.getCoreContainer().getZkController().getZkServerAddress();\n      defaultWorkerCollection = core.getCoreDescriptor().getCollectionName();\n      isCloud = true;\n    }\n  }\n\n","sourceOld":"  public void inform(SolrCore core) {\n    CoreContainer coreContainer = core.getCoreDescriptor().getCoreContainer();\n\n    if(coreContainer.isZooKeeperAware()) {\n      defaultZkhost = core.getCoreDescriptor().getCoreContainer().getZkController().getZkServerAddress();\n      defaultWorkerCollection = core.getCoreDescriptor().getCollectionName();\n      isCloud = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["ed509e20c5e173e5a72924d126d600d7e539654a"],"0104212f65198f40658f73c83200eaa99553ea09":["8da9a71da64ce12a97dcfcdd912893aeb1fa2981"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7b2c4e17100e207bc842e56d016b9f91f411304e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8da9a71da64ce12a97dcfcdd912893aeb1fa2981":["7b2c4e17100e207bc842e56d016b9f91f411304e"],"729cb470f975115d4c60517b2cb7c42e37a7a2e1":["ed509e20c5e173e5a72924d126d600d7e539654a"],"ed509e20c5e173e5a72924d126d600d7e539654a":["8da9a71da64ce12a97dcfcdd912893aeb1fa2981"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["0104212f65198f40658f73c83200eaa99553ea09","ed509e20c5e173e5a72924d126d600d7e539654a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["729cb470f975115d4c60517b2cb7c42e37a7a2e1"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"0104212f65198f40658f73c83200eaa99553ea09":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b2c4e17100e207bc842e56d016b9f91f411304e"],"7b2c4e17100e207bc842e56d016b9f91f411304e":["8da9a71da64ce12a97dcfcdd912893aeb1fa2981"],"8da9a71da64ce12a97dcfcdd912893aeb1fa2981":["0104212f65198f40658f73c83200eaa99553ea09","ed509e20c5e173e5a72924d126d600d7e539654a"],"ed509e20c5e173e5a72924d126d600d7e539654a":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","729cb470f975115d4c60517b2cb7c42e37a7a2e1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"729cb470f975115d4c60517b2cb7c42e37a7a2e1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}