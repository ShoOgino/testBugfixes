{"path":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#checkAllSegmentsUpgraded(Directory,Version).mjava","commits":[{"id":"d97ba94eef1fc33c5451259a7aa2ac682646c1af","date":1488285427,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#checkAllSegmentsUpgraded(Directory,Version).mjava","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#checkAllSegmentsUpgraded(Directory).mjava","sourceNew":"  private int checkAllSegmentsUpgraded(Directory dir, Version indexCreatedVersion) throws IOException {\n    final SegmentInfos infos = SegmentInfos.readLatestCommit(dir);\n    if (VERBOSE) {\n      System.out.println(\"checkAllSegmentsUpgraded: \" + infos);\n    }\n    for (SegmentCommitInfo si : infos) {\n      assertEquals(Version.LATEST, si.info.getVersion());\n    }\n    assertEquals(Version.LATEST, infos.getCommitLuceneVersion());\n    assertEquals(indexCreatedVersion, infos.getIndexCreatedVersion());\n    return infos.size();\n  }\n\n","sourceOld":"  private int checkAllSegmentsUpgraded(Directory dir) throws IOException {\n    final SegmentInfos infos = SegmentInfos.readLatestCommit(dir);\n    if (VERBOSE) {\n      System.out.println(\"checkAllSegmentsUpgraded: \" + infos);\n    }\n    for (SegmentCommitInfo si : infos) {\n      assertEquals(Version.LATEST, si.info.getVersion());\n    }\n    assertEquals(Version.LATEST, infos.getCommitLuceneVersion());\n    return infos.size();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31741cf1390044e38a2ec3127cf302ba841bfd75","date":1491292636,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#checkAllSegmentsUpgraded(Directory,int).mjava","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#checkAllSegmentsUpgraded(Directory,Version).mjava","sourceNew":"  private int checkAllSegmentsUpgraded(Directory dir, int indexCreatedVersion) throws IOException {\n    final SegmentInfos infos = SegmentInfos.readLatestCommit(dir);\n    if (VERBOSE) {\n      System.out.println(\"checkAllSegmentsUpgraded: \" + infos);\n    }\n    for (SegmentCommitInfo si : infos) {\n      assertEquals(Version.LATEST, si.info.getVersion());\n    }\n    assertEquals(Version.LATEST, infos.getCommitLuceneVersion());\n    assertEquals(indexCreatedVersion, infos.getIndexCreatedVersionMajor());\n    return infos.size();\n  }\n\n","sourceOld":"  private int checkAllSegmentsUpgraded(Directory dir, Version indexCreatedVersion) throws IOException {\n    final SegmentInfos infos = SegmentInfos.readLatestCommit(dir);\n    if (VERBOSE) {\n      System.out.println(\"checkAllSegmentsUpgraded: \" + infos);\n    }\n    for (SegmentCommitInfo si : infos) {\n      assertEquals(Version.LATEST, si.info.getVersion());\n    }\n    assertEquals(Version.LATEST, infos.getCommitLuceneVersion());\n    assertEquals(indexCreatedVersion, infos.getIndexCreatedVersion());\n    return infos.size();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92212fd254551a0b1156aafc3a1a6ed1a43932ad","date":1491296431,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#checkAllSegmentsUpgraded(Directory,int).mjava","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#checkAllSegmentsUpgraded(Directory,Version).mjava","sourceNew":"  private int checkAllSegmentsUpgraded(Directory dir, int indexCreatedVersion) throws IOException {\n    final SegmentInfos infos = SegmentInfos.readLatestCommit(dir);\n    if (VERBOSE) {\n      System.out.println(\"checkAllSegmentsUpgraded: \" + infos);\n    }\n    for (SegmentCommitInfo si : infos) {\n      assertEquals(Version.LATEST, si.info.getVersion());\n    }\n    assertEquals(Version.LATEST, infos.getCommitLuceneVersion());\n    assertEquals(indexCreatedVersion, infos.getIndexCreatedVersionMajor());\n    return infos.size();\n  }\n\n","sourceOld":"  private int checkAllSegmentsUpgraded(Directory dir, Version indexCreatedVersion) throws IOException {\n    final SegmentInfos infos = SegmentInfos.readLatestCommit(dir);\n    if (VERBOSE) {\n      System.out.println(\"checkAllSegmentsUpgraded: \" + infos);\n    }\n    for (SegmentCommitInfo si : infos) {\n      assertEquals(Version.LATEST, si.info.getVersion());\n    }\n    assertEquals(Version.LATEST, infos.getCommitLuceneVersion());\n    assertEquals(indexCreatedVersion, infos.getIndexCreatedVersion());\n    return infos.size();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d97ba94eef1fc33c5451259a7aa2ac682646c1af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"92212fd254551a0b1156aafc3a1a6ed1a43932ad":["d97ba94eef1fc33c5451259a7aa2ac682646c1af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["31741cf1390044e38a2ec3127cf302ba841bfd75"],"31741cf1390044e38a2ec3127cf302ba841bfd75":["d97ba94eef1fc33c5451259a7aa2ac682646c1af"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d97ba94eef1fc33c5451259a7aa2ac682646c1af"],"d97ba94eef1fc33c5451259a7aa2ac682646c1af":["92212fd254551a0b1156aafc3a1a6ed1a43932ad","31741cf1390044e38a2ec3127cf302ba841bfd75"],"92212fd254551a0b1156aafc3a1a6ed1a43932ad":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"31741cf1390044e38a2ec3127cf302ba841bfd75":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["92212fd254551a0b1156aafc3a1a6ed1a43932ad","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}