{"path":"contrib/gdata-server/src/java/org/apache/lucene/gdata/search/index/IndexController#getNewServiceSearcher(Directory).mjava","commits":[{"id":"09fe963da2613c724ffe82353b4ca2364a1f93c6","date":1155249160,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/search/index/IndexController#getNewServiceSearcher(Directory).mjava","pathOld":"/dev/null","sourceNew":"    /*\n     * create a new ReferenceCounter for the indexSearcher.\n     * The reference is already incremented before returned\n     */\n    private ReferenceCounter<IndexSearcher> getNewServiceSearcher(Directory dir)\n            throws IOException {\n        if(LOG.isInfoEnabled())\n            LOG.info(\"Create new ServiceSearcher\");\n        IndexSearcher searcher = new IndexSearcher(dir);\n        ReferenceCounter<IndexSearcher> holder = new ReferenceCounter<IndexSearcher>(\n                searcher) {\n\n            @Override\n            protected void close() {\n                try {\n                    LOG\n                            .info(\"Close IndexSearcher -- Zero references remaining\");\n                    this.resource.close();\n                } catch (IOException e) {\n                    LOG.warn(\"Can not close IndexSearcher -- \", e);\n                }\n            }\n\n        };\n        holder.increamentReference();\n        return holder;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"032a97fadd06b99cd75ebc3be22b74701f80e25d","date":1155763286,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/search/index/IndexController#getNewServiceSearcher(Directory).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/search/index/IndexController#getNewServiceSearcher(Directory).mjava","sourceNew":"    /*\n     * create a new ReferenceCounter for the indexSearcher.\n     * The reference is already incremented before returned\n     */\n    private ReferenceCounter<IndexSearcher> getNewServiceSearcher(final Directory dir)\n            throws IOException {\n        if(LOG.isInfoEnabled())\n            LOG.info(\"Create new ServiceSearcher\");\n        IndexSearcher searcher = new IndexSearcher(dir);\n        ReferenceCounter<IndexSearcher> holder = new ReferenceCounter<IndexSearcher>(\n                searcher) {\n\n            @Override\n            protected void close() {\n                try {\n                    LOG\n                            .info(\"Close IndexSearcher -- Zero references remaining\");\n                    this.resource.close();\n                } catch (IOException e) {\n                    LOG.warn(\"Can not close IndexSearcher -- \", e);\n                }\n            }\n\n        };\n        holder.increamentReference();\n        return holder;\n    }\n\n","sourceOld":"    /*\n     * create a new ReferenceCounter for the indexSearcher.\n     * The reference is already incremented before returned\n     */\n    private ReferenceCounter<IndexSearcher> getNewServiceSearcher(Directory dir)\n            throws IOException {\n        if(LOG.isInfoEnabled())\n            LOG.info(\"Create new ServiceSearcher\");\n        IndexSearcher searcher = new IndexSearcher(dir);\n        ReferenceCounter<IndexSearcher> holder = new ReferenceCounter<IndexSearcher>(\n                searcher) {\n\n            @Override\n            protected void close() {\n                try {\n                    LOG\n                            .info(\"Close IndexSearcher -- Zero references remaining\");\n                    this.resource.close();\n                } catch (IOException e) {\n                    LOG.warn(\"Can not close IndexSearcher -- \", e);\n                }\n            }\n\n        };\n        holder.increamentReference();\n        return holder;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/search/index/IndexController#getNewServiceSearcher(Directory).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/search/index/IndexController#getNewServiceSearcher(Directory).mjava","sourceNew":"    /*\n     * create a new ReferenceCounter for the indexSearcher.\n     * The reference is already incremented before returned\n     */\n    private ReferenceCounter<IndexSearcher> getNewServiceSearcher(final Directory dir)\n            throws IOException {\n        if(LOG.isInfoEnabled())\n            LOG.info(\"Create new ServiceSearcher\");\n        IndexSearcher searcher = new IndexSearcher(dir);\n        ReferenceCounter<IndexSearcher> holder = new ReferenceCounter<IndexSearcher>(\n                searcher) {\n\n            @Override\n            protected void close() {\n                try {\n                    LOG\n                            .info(\"Close IndexSearcher -- Zero references remaining\");\n                    this.resource.close();\n                } catch (IOException e) {\n                    LOG.warn(\"Can not close IndexSearcher -- \", e);\n                }\n            }\n\n        };\n        holder.increamentReference();\n        return holder;\n    }\n\n","sourceOld":"    /*\n     * create a new ReferenceCounter for the indexSearcher.\n     * The reference is already incremented before returned\n     */\n    private ReferenceCounter<IndexSearcher> getNewServiceSearcher(final Directory dir)\n            throws IOException {\n        if(LOG.isInfoEnabled())\n            LOG.info(\"Create new ServiceSearcher\");\n        IndexSearcher searcher = new IndexSearcher(dir);\n        ReferenceCounter<IndexSearcher> holder = new ReferenceCounter<IndexSearcher>(\n                searcher) {\n\n            @Override\n            protected void close() {\n                try {\n                    LOG\n                            .info(\"Close IndexSearcher -- Zero references remaining\");\n                    this.resource.close();\n                } catch (IOException e) {\n                    LOG.warn(\"Can not close IndexSearcher -- \", e);\n                }\n            }\n\n        };\n        holder.increamentReference();\n        return holder;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"09fe963da2613c724ffe82353b4ca2364a1f93c6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"032a97fadd06b99cd75ebc3be22b74701f80e25d":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["032a97fadd06b99cd75ebc3be22b74701f80e25d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5824af871ba6863399636aa5989bfc0ef2ea448c"]},"commit2Childs":{"09fe963da2613c724ffe82353b4ca2364a1f93c6":["032a97fadd06b99cd75ebc3be22b74701f80e25d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"032a97fadd06b99cd75ebc3be22b74701f80e25d":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}