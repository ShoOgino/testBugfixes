{"path":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/parser/Tokenizer#isCtlOrTspecial(int).mjava","commits":[{"id":"05d36e0b328ec96237035fbcca240e73631396e5","date":1020520725,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/parser/Tokenizer#isCtlOrTspecial(int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Returns true if c is either an ascii control character or a tspecial\n     * according to the HTTP specification.\n     *\n     * @param c  Description of the Parameter\n     * @return   The ctlOrTspecial value\n     */\n    //   private static final boolean[] isCtlOrTSpecial = new boolean[]\n//     {\n//        /* 0 */     true , true , true , true , true , true , true , true , true , true , true , true , true , true ,\n//        /* 14 */    true , true , true , true , true , true , true , true , true , true , true , true , true , true ,\n//        /* 28 */    true , true , true , true , true , false, true , false, false, false, false, false, true , true ,\n//        /* 42 */    false, false, true , false, false, true , false, false, false, false, false, false, false, false,\n//        /* 56 */    false, false, /*FIX: / no control char: true*/ false, true , true , true , true , true , true , false, false, false, false, false,\n//        /* 70 */    false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 84 */    false, false, false, false, false, false, false, true , true , true , false, false, false, false,\n//        /* 98 */    false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 112 */   false, false, false, false, false, false, false, false, false, false, false, true , false, true ,\n//        /* 126 */   false, true , false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 140 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 154 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 168 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 182 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 196 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 210 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 224 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 238 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 252 */   false, false, false, false\n//    };\n\n    public final static boolean isCtlOrTspecial(int c)\n    {\n        switch (c)\n        {\n            // control characters (0-31 and 127):\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n            case 16:\n            case 17:\n            case 18:\n            case 19:\n            case 20:\n            case 21:\n            case 22:\n            case 23:\n            case 24:\n            case 25:\n            case 26:\n            case 27:\n            case 28:\n            case 29:\n            case 30:\n            case 31:\n            case 127:\n\n            // tspecials:\n            case '(':\n            case ')':\n            case '<':\n            case '>':\n            case '@':\n            case ',':\n            case ';':\n            case ':':\n            case '\\\\':\n            case '\"':\n            /*\n             *  case '/':\n             */\n            case '[':\n            case ']':\n            case '?':\n            case '=':\n            case '{':\n            case '}':\n            case ' ':\n                // case '\\t':\n                return true;\n            default:\n                return false;\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afc16d717d9ed1a8e45371668ca6de674164d624","date":1103345442,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/parser/Tokenizer#isCtlOrTspecial(int).mjava","sourceNew":null,"sourceOld":"    /**\n     * Returns true if c is either an ascii control character or a tspecial\n     * according to the HTTP specification.\n     *\n     * @param c  Description of the Parameter\n     * @return   The ctlOrTspecial value\n     */\n    //   private static final boolean[] isCtlOrTSpecial = new boolean[]\n//     {\n//        /* 0 */     true , true , true , true , true , true , true , true , true , true , true , true , true , true ,\n//        /* 14 */    true , true , true , true , true , true , true , true , true , true , true , true , true , true ,\n//        /* 28 */    true , true , true , true , true , false, true , false, false, false, false, false, true , true ,\n//        /* 42 */    false, false, true , false, false, true , false, false, false, false, false, false, false, false,\n//        /* 56 */    false, false, /*FIX: / no control char: true*/ false, true , true , true , true , true , true , false, false, false, false, false,\n//        /* 70 */    false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 84 */    false, false, false, false, false, false, false, true , true , true , false, false, false, false,\n//        /* 98 */    false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 112 */   false, false, false, false, false, false, false, false, false, false, false, true , false, true ,\n//        /* 126 */   false, true , false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 140 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 154 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 168 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 182 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 196 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 210 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 224 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 238 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 252 */   false, false, false, false\n//    };\n\n    public final static boolean isCtlOrTspecial(int c)\n    {\n        switch (c)\n        {\n            // control characters (0-31 and 127):\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n            case 16:\n            case 17:\n            case 18:\n            case 19:\n            case 20:\n            case 21:\n            case 22:\n            case 23:\n            case 24:\n            case 25:\n            case 26:\n            case 27:\n            case 28:\n            case 29:\n            case 30:\n            case 31:\n            case 127:\n\n            // tspecials:\n            case '(':\n            case ')':\n            case '<':\n            case '>':\n            case '@':\n            case ',':\n            case ';':\n            case ':':\n            case '\\\\':\n            case '\"':\n            /*\n             *  case '/':\n             */\n            case '[':\n            case ']':\n            case '?':\n            case '=':\n            case '{':\n            case '}':\n            case ' ':\n                // case '\\t':\n                return true;\n            default:\n                return false;\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afc16d717d9ed1a8e45371668ca6de674164d624":["05d36e0b328ec96237035fbcca240e73631396e5"],"05d36e0b328ec96237035fbcca240e73631396e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afc16d717d9ed1a8e45371668ca6de674164d624"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05d36e0b328ec96237035fbcca240e73631396e5"],"afc16d717d9ed1a8e45371668ca6de674164d624":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"05d36e0b328ec96237035fbcca240e73631396e5":["afc16d717d9ed1a8e45371668ca6de674164d624"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}