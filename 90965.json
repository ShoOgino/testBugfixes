{"path":"modules/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#testCustomScoreShort().mjava","commits":[{"id":"c8fda790e002fff32e201cbd0f7bed4c2b333a64","date":1309401082,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#testCustomScoreShort().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/function/TestCustomScoreQuery#testCustomScoreShort().mjava","sourceNew":"  /**\n   * Test that CustomScoreQuery of Type.SHORT returns the expected scores.\n   */\n  @Test\n  public void testCustomScoreShort() throws Exception {\n    // INT field values are small enough to be parsed as short\n    ShortValuesCreator valuesCreator = new ShortValuesCreator(INT_FIELD, null, CachedArrayCreator.CACHE_VALUES_AND_BITS);\n    FunctionQuery functionQuery = new FunctionQuery(new ShortFieldSource(valuesCreator));\n\n    doTestCustomScore(functionQuery, 1.0);\n    doTestCustomScore(functionQuery, 3.0);\n  }\n\n","sourceOld":"  /**\n   * Test that CustomScoreQuery of Type.SHORT returns the expected scores.\n   */\n  @Test\n  public void testCustomScoreShort() throws Exception, ParseException {\n    // INT field values are small enough to be parsed as short\n    doTestCustomScore(INT_FIELD, FieldScoreQuery.Type.SHORT, 1.0);\n    doTestCustomScore(INT_FIELD, FieldScoreQuery.Type.SHORT, 3.0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"290622dd4fb1bcc2f06bcd5d4494522d1f24df5c","date":1309476031,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#testCustomScoreShort().mjava","pathOld":"modules/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#testCustomScoreShort().mjava","sourceNew":"  /**\n   * Test that CustomScoreQuery of Type.SHORT returns the expected scores.\n   */\n  @Test\n  public void testCustomScoreShort() throws Exception {\n    // INT field values are small enough to be parsed as short\n    doTestCustomScore(SHORT_VALUESOURCE, 1.0);\n    doTestCustomScore(SHORT_VALUESOURCE, 3.0);\n  }\n\n","sourceOld":"  /**\n   * Test that CustomScoreQuery of Type.SHORT returns the expected scores.\n   */\n  @Test\n  public void testCustomScoreShort() throws Exception {\n    // INT field values are small enough to be parsed as short\n    ShortValuesCreator valuesCreator = new ShortValuesCreator(INT_FIELD, null, CachedArrayCreator.CACHE_VALUES_AND_BITS);\n    FunctionQuery functionQuery = new FunctionQuery(new ShortFieldSource(valuesCreator));\n\n    doTestCustomScore(functionQuery, 1.0);\n    doTestCustomScore(functionQuery, 3.0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#testCustomScoreShort().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test that CustomScoreQuery of Type.SHORT returns the expected scores.\n   */\n  @Test\n  public void testCustomScoreShort() throws Exception {\n    // INT field values are small enough to be parsed as short\n    doTestCustomScore(SHORT_VALUESOURCE, 1.0);\n    doTestCustomScore(SHORT_VALUESOURCE, 3.0);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#testCustomScoreShort().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test that CustomScoreQuery of Type.SHORT returns the expected scores.\n   */\n  @Test\n  public void testCustomScoreShort() throws Exception {\n    // INT field values are small enough to be parsed as short\n    doTestCustomScore(SHORT_VALUESOURCE, 1.0);\n    doTestCustomScore(SHORT_VALUESOURCE, 3.0);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#testCustomScoreShort().mjava","pathOld":"modules/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#testCustomScoreShort().mjava","sourceNew":"  /**\n   * Test that CustomScoreQuery of Type.SHORT returns the expected scores.\n   */\n  @Test\n  public void testCustomScoreShort() throws Exception {\n    // INT field values are small enough to be parsed as short\n    doTestCustomScore(SHORT_VALUESOURCE, 1.0);\n    doTestCustomScore(SHORT_VALUESOURCE, 3.0);\n  }\n\n","sourceOld":"  /**\n   * Test that CustomScoreQuery of Type.SHORT returns the expected scores.\n   */\n  @Test\n  public void testCustomScoreShort() throws Exception {\n    // INT field values are small enough to be parsed as short\n    doTestCustomScore(SHORT_VALUESOURCE, 1.0);\n    doTestCustomScore(SHORT_VALUESOURCE, 3.0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["290622dd4fb1bcc2f06bcd5d4494522d1f24df5c"],"290622dd4fb1bcc2f06bcd5d4494522d1f24df5c":["c8fda790e002fff32e201cbd0f7bed4c2b333a64"],"c8fda790e002fff32e201cbd0f7bed4c2b333a64":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","290622dd4fb1bcc2f06bcd5d4494522d1f24df5c"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","290622dd4fb1bcc2f06bcd5d4494522d1f24df5c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"290622dd4fb1bcc2f06bcd5d4494522d1f24df5c":["b89678825b68eccaf09e6ab71675fc0b0af1e099","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"c8fda790e002fff32e201cbd0f7bed4c2b333a64":["290622dd4fb1bcc2f06bcd5d4494522d1f24df5c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c8fda790e002fff32e201cbd0f7bed4c2b333a64","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}