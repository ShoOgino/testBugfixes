{"path":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDUtil#contains(int,byte[],byte[],byte[],byte[]).mjava","commits":[{"id":"e3ce1ef883d26aa73919aa2d53991726e96caa13","date":1445421402,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDUtil#contains(int,byte[],byte[],byte[],byte[]).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns true if N-dim rect A contains N-dim rect B */\n  public static boolean contains(int bytesPerDim,\n                                 byte[] minPackedA, byte[] maxPackedA,\n                                 byte[] minPackedB, byte[] maxPackedB) {\n    int dims = minPackedA.length / bytesPerDim;\n    for(int dim=0;dim<dims;dim++) {\n      if (compare(bytesPerDim, minPackedA, dim, minPackedB, dim) > 0) {\n        return false;\n      }\n      if (compare(bytesPerDim, maxPackedA, dim, maxPackedB, dim) < 0) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"770342641f7b505eaa8dccdc666158bff2419109","date":1449868421,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/NumericUtils#contains(int,byte[],byte[],byte[],byte[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDUtil#contains(int,byte[],byte[],byte[],byte[]).mjava","sourceNew":"  /** Returns true if N-dim rect A contains N-dim rect B */\n  public static boolean contains(int bytesPerDim,\n                                 byte[] minPackedA, byte[] maxPackedA,\n                                 byte[] minPackedB, byte[] maxPackedB) {\n    int dims = minPackedA.length / bytesPerDim;\n    for(int dim=0;dim<dims;dim++) {\n      if (compare(bytesPerDim, minPackedA, dim, minPackedB, dim) > 0) {\n        return false;\n      }\n      if (compare(bytesPerDim, maxPackedA, dim, maxPackedB, dim) < 0) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n","sourceOld":"  /** Returns true if N-dim rect A contains N-dim rect B */\n  public static boolean contains(int bytesPerDim,\n                                 byte[] minPackedA, byte[] maxPackedA,\n                                 byte[] minPackedB, byte[] maxPackedB) {\n    int dims = minPackedA.length / bytesPerDim;\n    for(int dim=0;dim<dims;dim++) {\n      if (compare(bytesPerDim, minPackedA, dim, minPackedB, dim) > 0) {\n        return false;\n      }\n      if (compare(bytesPerDim, maxPackedA, dim, maxPackedB, dim) < 0) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e3ce1ef883d26aa73919aa2d53991726e96caa13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"770342641f7b505eaa8dccdc666158bff2419109":["e3ce1ef883d26aa73919aa2d53991726e96caa13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["770342641f7b505eaa8dccdc666158bff2419109"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e3ce1ef883d26aa73919aa2d53991726e96caa13"],"e3ce1ef883d26aa73919aa2d53991726e96caa13":["770342641f7b505eaa8dccdc666158bff2419109"],"770342641f7b505eaa8dccdc666158bff2419109":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}