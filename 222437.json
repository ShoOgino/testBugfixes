{"path":"src/java/org/apache/lucene/index/MultiReader#getTermFreqVector(int,TermVectorMapper).mjava","commits":[{"id":"352bfe1fae83b92d1562f01c057bfbe6f5af3ddb","date":1185160645,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#getTermFreqVector(int,TermVectorMapper).mjava","pathOld":"/dev/null","sourceNew":"  public void getTermFreqVector(int docNumber, TermVectorMapper mapper) throws IOException {\n    ensureOpen();\n    int i = readerIndex(docNumber);        // find segment num\n    subReaders[i].getTermFreqVector(docNumber - starts[i], mapper);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7f2552b9f13037c62acd400d263d1e9262d6e4e","date":1185490328,"type":5,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiSegmentReader#getTermFreqVector(int,TermVectorMapper).mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#getTermFreqVector(int,TermVectorMapper).mjava","sourceNew":"  public void getTermFreqVector(int docNumber, TermVectorMapper mapper) throws IOException {\r\n    ensureOpen();\r\n    int i = readerIndex(docNumber);        // find segment num\r\n    subReaders[i].getTermFreqVector(docNumber - starts[i], mapper);\r\n  }\r\n\n","sourceOld":"  public void getTermFreqVector(int docNumber, TermVectorMapper mapper) throws IOException {\n    ensureOpen();\n    int i = readerIndex(docNumber);        // find segment num\n    subReaders[i].getTermFreqVector(docNumber - starts[i], mapper);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"125b5699f11b58d9be0820c6ce8b1648812902e8","date":1190273227,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#getTermFreqVector(int,TermVectorMapper).mjava","pathOld":"/dev/null","sourceNew":"  public void getTermFreqVector(int docNumber, TermVectorMapper mapper) throws IOException {\n    ensureOpen();\n    int i = readerIndex(docNumber);        // find segment num\n    subReaders[i].getTermFreqVector(docNumber - starts[i], mapper);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#getTermFreqVector(int,TermVectorMapper).mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#getTermFreqVector(int,TermVectorMapper).mjava","sourceNew":"  @Override\n  public void getTermFreqVector(int docNumber, TermVectorMapper mapper) throws IOException {\n    ensureOpen();\n    int i = readerIndex(docNumber);        // find segment num\n    subReaders[i].getTermFreqVector(docNumber - starts[i], mapper);\n  }\n\n","sourceOld":"  public void getTermFreqVector(int docNumber, TermVectorMapper mapper) throws IOException {\n    ensureOpen();\n    int i = readerIndex(docNumber);        // find segment num\n    subReaders[i].getTermFreqVector(docNumber - starts[i], mapper);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/MultiReader#getTermFreqVector(int,TermVectorMapper).mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#getTermFreqVector(int,TermVectorMapper).mjava","sourceNew":"  @Override\n  public void getTermFreqVector(int docNumber, TermVectorMapper mapper) throws IOException {\n    ensureOpen();\n    int i = readerIndex(docNumber);        // find segment num\n    subReaders[i].getTermFreqVector(docNumber - starts[i], mapper);\n  }\n\n","sourceOld":"  @Override\n  public void getTermFreqVector(int docNumber, TermVectorMapper mapper) throws IOException {\n    ensureOpen();\n    int i = readerIndex(docNumber);        // find segment num\n    subReaders[i].getTermFreqVector(docNumber - starts[i], mapper);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"125b5699f11b58d9be0820c6ce8b1648812902e8":["f7f2552b9f13037c62acd400d263d1e9262d6e4e"],"352bfe1fae83b92d1562f01c057bfbe6f5af3ddb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8a9e385641d717e641408d8fbbc62be8fc766357":["125b5699f11b58d9be0820c6ce8b1648812902e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f7f2552b9f13037c62acd400d263d1e9262d6e4e":["352bfe1fae83b92d1562f01c057bfbe6f5af3ddb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"]},"commit2Childs":{"125b5699f11b58d9be0820c6ce8b1648812902e8":["8a9e385641d717e641408d8fbbc62be8fc766357"],"352bfe1fae83b92d1562f01c057bfbe6f5af3ddb":["f7f2552b9f13037c62acd400d263d1e9262d6e4e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["352bfe1fae83b92d1562f01c057bfbe6f5af3ddb"],"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"f7f2552b9f13037c62acd400d263d1e9262d6e4e":["125b5699f11b58d9be0820c6ce8b1648812902e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}