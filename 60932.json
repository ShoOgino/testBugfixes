{"path":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue.LatchChildWatcher#process(WatchedEvent).mjava","commits":[{"id":"a5093a9e893633cc091cf2f729d7863671c2b715","date":1339132888,"type":0,"author":"Sami Siren","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue.LatchChildWatcher#process(WatchedEvent).mjava","pathOld":"/dev/null","sourceNew":"    public void process(WatchedEvent event) {\n      LOG.debug(\"Watcher fired on path: \" + event.getPath() + \" state: \"\n          + event.getState() + \" type \" + event.getType());\n      latch.countDown();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["fd1b710c5464a5da208b929fe456d5cb5126b6e8"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fd1b710c5464a5da208b929fe456d5cb5126b6e8","date":1353510167,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue.LatchChildWatcher#process(WatchedEvent).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue.LatchChildWatcher#process(WatchedEvent).mjava","sourceNew":"    public void process(WatchedEvent event) {\n      LOG.info(\"Watcher fired on path: \" + event.getPath() + \" state: \"\n          + event.getState() + \" type \" + event.getType());\n      synchronized (lock) {\n        lock.notifyAll();\n      }\n    }\n\n","sourceOld":"    public void process(WatchedEvent event) {\n      LOG.debug(\"Watcher fired on path: \" + event.getPath() + \" state: \"\n          + event.getState() + \" type \" + event.getType());\n      latch.countDown();\n    }\n\n","bugFix":["a5093a9e893633cc091cf2f729d7863671c2b715"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue.LatchChildWatcher#process(WatchedEvent).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue.LatchChildWatcher#process(WatchedEvent).mjava","sourceNew":"    public void process(WatchedEvent event) {\n      LOG.info(\"Watcher fired on path: \" + event.getPath() + \" state: \"\n          + event.getState() + \" type \" + event.getType());\n      synchronized (lock) {\n        lock.notifyAll();\n      }\n    }\n\n","sourceOld":"    public void process(WatchedEvent event) {\n      LOG.debug(\"Watcher fired on path: \" + event.getPath() + \" state: \"\n          + event.getState() + \" type \" + event.getType());\n      latch.countDown();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue.LatchChildWatcher#process(WatchedEvent).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue.LatchChildWatcher#process(WatchedEvent).mjava","sourceNew":"    @Override\n    public void process(WatchedEvent event) {\n      LOG.info(\"Watcher fired on path: \" + event.getPath() + \" state: \"\n          + event.getState() + \" type \" + event.getType());\n      synchronized (lock) {\n        lock.notifyAll();\n      }\n    }\n\n","sourceOld":"    public void process(WatchedEvent event) {\n      LOG.info(\"Watcher fired on path: \" + event.getPath() + \" state: \"\n          + event.getState() + \" type \" + event.getType());\n      synchronized (lock) {\n        lock.notifyAll();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue.LatchChildWatcher#process(WatchedEvent).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue.LatchChildWatcher#process(WatchedEvent).mjava","sourceNew":"    @Override\n    public void process(WatchedEvent event) {\n      LOG.info(\"Watcher fired on path: \" + event.getPath() + \" state: \"\n          + event.getState() + \" type \" + event.getType());\n      synchronized (lock) {\n        lock.notifyAll();\n      }\n    }\n\n","sourceOld":"    public void process(WatchedEvent event) {\n      LOG.info(\"Watcher fired on path: \" + event.getPath() + \" state: \"\n          + event.getState() + \" type \" + event.getType());\n      synchronized (lock) {\n        lock.notifyAll();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c986b1ea9768aff3c903f05a2c85b7b672b5c225","date":1359126891,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue.LatchChildWatcher#process(WatchedEvent).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue.LatchChildWatcher#process(WatchedEvent).mjava","sourceNew":"    @Override\n    public void process(WatchedEvent event) {\n      LOG.info(\"Watcher fired on path: \" + event.getPath() + \" state: \"\n          + event.getState() + \" type \" + event.getType());\n      synchronized (lock) {\n        this.event = event;\n        lock.notifyAll();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void process(WatchedEvent event) {\n      LOG.info(\"Watcher fired on path: \" + event.getPath() + \" state: \"\n          + event.getState() + \" type \" + event.getType());\n      synchronized (lock) {\n        lock.notifyAll();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd45d4a2ee01a1932d33eec42f5272c2402da679","date":1359316912,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue.LatchChildWatcher#process(WatchedEvent).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue.LatchChildWatcher#process(WatchedEvent).mjava","sourceNew":"    @Override\n    public void process(WatchedEvent event) {\n      LOG.info(\"Watcher fired on path: \" + event.getPath() + \" state: \"\n          + event.getState() + \" type \" + event.getType());\n      synchronized (lock) {\n        this.event = event;\n        lock.notifyAll();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void process(WatchedEvent event) {\n      LOG.info(\"Watcher fired on path: \" + event.getPath() + \" state: \"\n          + event.getState() + \" type \" + event.getType());\n      synchronized (lock) {\n        lock.notifyAll();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e6c873b95174ff04c895232927baa76a95925eb","date":1385054916,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue.LatchChildWatcher#process(WatchedEvent).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue.LatchChildWatcher#process(WatchedEvent).mjava","sourceNew":"    @Override\n    public void process(WatchedEvent event) {\n      LOG.info(\"LatchChildWatcher fired on path: \" + event.getPath() + \" state: \"\n          + event.getState() + \" type \" + event.getType());\n      synchronized (lock) {\n        this.event = event;\n        lock.notifyAll();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void process(WatchedEvent event) {\n      LOG.info(\"Watcher fired on path: \" + event.getPath() + \" state: \"\n          + event.getState() + \" type \" + event.getType());\n      synchronized (lock) {\n        this.event = event;\n        lock.notifyAll();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue.LatchChildWatcher#process(WatchedEvent).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue.LatchChildWatcher#process(WatchedEvent).mjava","sourceNew":"    @Override\n    public void process(WatchedEvent event) {\n      LOG.info(\"LatchChildWatcher fired on path: \" + event.getPath() + \" state: \"\n          + event.getState() + \" type \" + event.getType());\n      synchronized (lock) {\n        this.event = event;\n        lock.notifyAll();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void process(WatchedEvent event) {\n      LOG.info(\"Watcher fired on path: \" + event.getPath() + \" state: \"\n          + event.getState() + \" type \" + event.getType());\n      synchronized (lock) {\n        this.event = event;\n        lock.notifyAll();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a26e5b19dd569457c97ec923d7e132aa4c8b2a41","date":1414589895,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue.LatchChildWatcher#process(WatchedEvent).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue.LatchChildWatcher#process(WatchedEvent).mjava","sourceNew":"    @Override\n    public void process(WatchedEvent event) {\n      Event.EventType eventType = event.getType();\n      LOG.info(\"LatchChildWatcher fired on path: \" + event.getPath() + \" state: \"\n          + event.getState() + \" type \" + eventType);\n      if (eventType == Event.EventType.NodeChildrenChanged) {\n        synchronized (lock) {\n          this.event = event;\n          lock.notifyAll();\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void process(WatchedEvent event) {\n      LOG.info(\"LatchChildWatcher fired on path: \" + event.getPath() + \" state: \"\n          + event.getState() + \" type \" + event.getType());\n      synchronized (lock) {\n        this.event = event;\n        lock.notifyAll();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b04fb085d4cabdbb4b2bbd931fb0571d37e24805","date":1414593989,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue.LatchChildWatcher#process(WatchedEvent).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue.LatchChildWatcher#process(WatchedEvent).mjava","sourceNew":"    @Override\n    public void process(WatchedEvent event) {\n      LOG.info(\"LatchChildWatcher fired on path: \" + event.getPath() + \" state: \"\n          + event.getState() + \" type \" + event.getType());\n      synchronized (lock) {\n        this.event = event;\n        lock.notifyAll();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void process(WatchedEvent event) {\n      Event.EventType eventType = event.getType();\n      LOG.info(\"LatchChildWatcher fired on path: \" + event.getPath() + \" state: \"\n          + event.getState() + \" type \" + eventType);\n      if (eventType == Event.EventType.NodeChildrenChanged) {\n        synchronized (lock) {\n          this.event = event;\n          lock.notifyAll();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f1a0016e65424cb251992c72022616d73753b7e","date":1414693186,"type":4,"author":"Timothy Potter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue.LatchChildWatcher#process(WatchedEvent).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void process(WatchedEvent event) {\n      LOG.info(\"LatchChildWatcher fired on path: \" + event.getPath() + \" state: \"\n          + event.getState() + \" type \" + event.getType());\n      synchronized (lock) {\n        this.event = event;\n        lock.notifyAll();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["407687e67faf6e1f02a211ca078d8e3eed631027","7530de27b87b961b51f01bd1299b7004d46e8823"],"b04fb085d4cabdbb4b2bbd931fb0571d37e24805":["a26e5b19dd569457c97ec923d7e132aa4c8b2a41"],"fd1b710c5464a5da208b929fe456d5cb5126b6e8":["a5093a9e893633cc091cf2f729d7863671c2b715"],"407687e67faf6e1f02a211ca078d8e3eed631027":["a5093a9e893633cc091cf2f729d7863671c2b715","fd1b710c5464a5da208b929fe456d5cb5126b6e8"],"dd45d4a2ee01a1932d33eec42f5272c2402da679":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","c986b1ea9768aff3c903f05a2c85b7b672b5c225"],"9e6c873b95174ff04c895232927baa76a95925eb":["c986b1ea9768aff3c903f05a2c85b7b672b5c225"],"c986b1ea9768aff3c903f05a2c85b7b672b5c225":["7530de27b87b961b51f01bd1299b7004d46e8823"],"a26e5b19dd569457c97ec923d7e132aa4c8b2a41":["9e6c873b95174ff04c895232927baa76a95925eb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3f1a0016e65424cb251992c72022616d73753b7e":["b04fb085d4cabdbb4b2bbd931fb0571d37e24805"],"a5093a9e893633cc091cf2f729d7863671c2b715":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["c986b1ea9768aff3c903f05a2c85b7b672b5c225","9e6c873b95174ff04c895232927baa76a95925eb"],"7530de27b87b961b51f01bd1299b7004d46e8823":["fd1b710c5464a5da208b929fe456d5cb5126b6e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f1a0016e65424cb251992c72022616d73753b7e"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["dd45d4a2ee01a1932d33eec42f5272c2402da679"],"b04fb085d4cabdbb4b2bbd931fb0571d37e24805":["3f1a0016e65424cb251992c72022616d73753b7e"],"fd1b710c5464a5da208b929fe456d5cb5126b6e8":["407687e67faf6e1f02a211ca078d8e3eed631027","7530de27b87b961b51f01bd1299b7004d46e8823"],"407687e67faf6e1f02a211ca078d8e3eed631027":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064"],"dd45d4a2ee01a1932d33eec42f5272c2402da679":[],"9e6c873b95174ff04c895232927baa76a95925eb":["a26e5b19dd569457c97ec923d7e132aa4c8b2a41","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"c986b1ea9768aff3c903f05a2c85b7b672b5c225":["dd45d4a2ee01a1932d33eec42f5272c2402da679","9e6c873b95174ff04c895232927baa76a95925eb","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"a26e5b19dd569457c97ec923d7e132aa4c8b2a41":["b04fb085d4cabdbb4b2bbd931fb0571d37e24805"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a5093a9e893633cc091cf2f729d7863671c2b715"],"a5093a9e893633cc091cf2f729d7863671c2b715":["fd1b710c5464a5da208b929fe456d5cb5126b6e8","407687e67faf6e1f02a211ca078d8e3eed631027"],"3f1a0016e65424cb251992c72022616d73753b7e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","c986b1ea9768aff3c903f05a2c85b7b672b5c225"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["dd45d4a2ee01a1932d33eec42f5272c2402da679","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}