{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testSumDifference().mjava","commits":[{"id":"4d1fe2d12f66f09580b2d3b3834ea4ece50eeab4","date":1504919309,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testSumDifference().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSumDifference() throws Exception {\n    String cexpr = \"sumDifference(array(2,4,6,8,10,12),array(1,2,3,4,5,6))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    double sd = tuples.get(0).getDouble(\"return-value\");\n    assertEquals(sd, 21.0D, 0.0);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08e30330b33aca2e2864d648a9e1ed2d2f4086f3","date":1504933371,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testSumDifference().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSumDifference() throws Exception {\n    String cexpr = \"sumDifference(array(2,4,6,8,10,12),array(1,2,3,4,5,6))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    double sd = tuples.get(0).getDouble(\"return-value\");\n    assertEquals(sd, 21.0D, 0.0);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"685bd38810c206c93e9058f3c2cfa9827c086c27","date":1505751821,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testSumDifference().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSumDifference() throws Exception {\n    String cexpr = \"sumDifference(array(2,4,6,8,10,12),array(1,2,3,4,5,6))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    double sd = tuples.get(0).getDouble(\"return-value\");\n    assertEquals(sd, 21.0D, 0.0);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf","date":1522951207,"type":5,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testSumDifference().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testSumDifference().mjava","sourceNew":"  @Test\n  public void testSumDifference() throws Exception {\n    String cexpr = \"sumDifference(array(2,4,6,8,10,12),array(1,2,3,4,5,6))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    double sd = tuples.get(0).getDouble(\"return-value\");\n    assertEquals(sd, 21.0D, 0.0);\n  }\n\n","sourceOld":"  @Test\n  public void testSumDifference() throws Exception {\n    String cexpr = \"sumDifference(array(2,4,6,8,10,12),array(1,2,3,4,5,6))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    double sd = tuples.get(0).getDouble(\"return-value\");\n    assertEquals(sd, 21.0D, 0.0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"685bd38810c206c93e9058f3c2cfa9827c086c27":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","08e30330b33aca2e2864d648a9e1ed2d2f4086f3"],"08e30330b33aca2e2864d648a9e1ed2d2f4086f3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4d1fe2d12f66f09580b2d3b3834ea4ece50eeab4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4d1fe2d12f66f09580b2d3b3834ea4ece50eeab4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["08e30330b33aca2e2864d648a9e1ed2d2f4086f3"]},"commit2Childs":{"685bd38810c206c93e9058f3c2cfa9827c086c27":[],"08e30330b33aca2e2864d648a9e1ed2d2f4086f3":["685bd38810c206c93e9058f3c2cfa9827c086c27","8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["685bd38810c206c93e9058f3c2cfa9827c086c27","08e30330b33aca2e2864d648a9e1ed2d2f4086f3","4d1fe2d12f66f09580b2d3b3834ea4ece50eeab4"],"4d1fe2d12f66f09580b2d3b3834ea4ece50eeab4":["08e30330b33aca2e2864d648a9e1ed2d2f4086f3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["685bd38810c206c93e9058f3c2cfa9827c086c27","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}