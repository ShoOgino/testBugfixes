{"path":"solr/core/src/java/org/apache/solr/util/hll/BitVector#BitVector(int,long).mjava","commits":[{"id":"6d8714f9ceaaff94f0968d1c2d037978c3fde569","date":1437042727,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/hll/BitVector#BitVector(int,long).mjava","pathOld":"/dev/null","sourceNew":"    // ========================================================================\n    /**\n     * @param  width the width of each register.  This cannot be negative or\n     *         zero or greater than 63 (the signed word size).\n     * @param  count the number of registers.  This cannot be negative or zero\n     */\n    public BitVector(final int width, final long count) {\n        // ceil((width * count)/BITS_PER_WORD)\n        this.words = new long[(int)(((width * count) + BITS_PER_WORD_MASK) >>> LOG2_BITS_PER_WORD)];\n        this.registerWidth = width;\n        this.count = count;\n\n        this.registerMask = (1L << width) - 1;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b5ee4c66244bdfcc4796a114519d47701b2c026","date":1437132013,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/hll/BitVector#BitVector(int,long).mjava","pathOld":"/dev/null","sourceNew":"    // ========================================================================\n    /**\n     * @param  width the width of each register.  This cannot be negative or\n     *         zero or greater than 63 (the signed word size).\n     * @param  count the number of registers.  This cannot be negative or zero\n     */\n    public BitVector(final int width, final long count) {\n        // ceil((width * count)/BITS_PER_WORD)\n        this.words = new long[(int)(((width * count) + BITS_PER_WORD_MASK) >>> LOG2_BITS_PER_WORD)];\n        this.registerWidth = width;\n        this.count = count;\n\n        this.registerMask = (1L << width) - 1;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3b5ee4c66244bdfcc4796a114519d47701b2c026":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6d8714f9ceaaff94f0968d1c2d037978c3fde569"],"6d8714f9ceaaff94f0968d1c2d037978c3fde569":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3b5ee4c66244bdfcc4796a114519d47701b2c026"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3b5ee4c66244bdfcc4796a114519d47701b2c026","6d8714f9ceaaff94f0968d1c2d037978c3fde569"],"3b5ee4c66244bdfcc4796a114519d47701b2c026":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6d8714f9ceaaff94f0968d1c2d037978c3fde569":["3b5ee4c66244bdfcc4796a114519d47701b2c026"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}