{"path":"src/test/org/apache/lucene/analysis/TestCharArraySet#testIterator().mjava","commits":[{"id":"13ac8c35a1a0871e1e8c4677feb742c1a1059e14","date":1265275016,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestCharArraySet#testIterator().mjava","pathOld":"/dev/null","sourceNew":"  @Deprecated @SuppressWarnings(\"unchecked\")\n  public void testIterator() {\n    HashSet<String> hset = new HashSet<String>();\n    hset.addAll(Arrays.asList(TEST_STOP_WORDS));\n\n    assertTrue(\"in 3.0 version, iterator should be CharArraySetIterator\",\n      ((Iterator) CharArraySet.copy(Version.LUCENE_30, hset).iterator()) instanceof CharArraySet.CharArraySetIterator);\n\n    CharArraySet set = CharArraySet.copy(Version.LUCENE_CURRENT, hset);\n    assertFalse(\"in current version, iterator should not be CharArraySetIterator\",\n      ((Iterator) set.iterator()) instanceof CharArraySet.CharArraySetIterator);\n    \n    Iterator<String> it = set.stringIterator();\n    assertTrue(it instanceof CharArraySet.CharArraySetIterator);\n    while (it.hasNext()) {\n      // as the set returns String instances, this must work:\n      assertTrue(hset.contains(it.next()));\n      try {\n        it.remove();\n        fail(\"remove() should not work on CharArraySetIterator\");\n      } catch (UnsupportedOperationException uoe) {\n        // pass\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestCharArraySet#testIterator().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestCharArraySet#testIterator().mjava","sourceNew":"  @Deprecated @SuppressWarnings(\"unchecked\")\n  public void testIterator() {\n    HashSet<String> hset = new HashSet<String>();\n    hset.addAll(Arrays.asList(TEST_STOP_WORDS));\n\n    assertTrue(\"in 3.0 version, iterator should be CharArraySetIterator\",\n      ((Iterator) CharArraySet.copy(Version.LUCENE_30, hset).iterator()) instanceof CharArraySet.CharArraySetIterator);\n\n    CharArraySet set = CharArraySet.copy(TEST_VERSION_CURRENT, hset);\n    assertFalse(\"in current version, iterator should not be CharArraySetIterator\",\n      ((Iterator) set.iterator()) instanceof CharArraySet.CharArraySetIterator);\n    \n    Iterator<String> it = set.stringIterator();\n    assertTrue(it instanceof CharArraySet.CharArraySetIterator);\n    while (it.hasNext()) {\n      // as the set returns String instances, this must work:\n      assertTrue(hset.contains(it.next()));\n      try {\n        it.remove();\n        fail(\"remove() should not work on CharArraySetIterator\");\n      } catch (UnsupportedOperationException uoe) {\n        // pass\n      }\n    }\n  }\n\n","sourceOld":"  @Deprecated @SuppressWarnings(\"unchecked\")\n  public void testIterator() {\n    HashSet<String> hset = new HashSet<String>();\n    hset.addAll(Arrays.asList(TEST_STOP_WORDS));\n\n    assertTrue(\"in 3.0 version, iterator should be CharArraySetIterator\",\n      ((Iterator) CharArraySet.copy(Version.LUCENE_30, hset).iterator()) instanceof CharArraySet.CharArraySetIterator);\n\n    CharArraySet set = CharArraySet.copy(Version.LUCENE_CURRENT, hset);\n    assertFalse(\"in current version, iterator should not be CharArraySetIterator\",\n      ((Iterator) set.iterator()) instanceof CharArraySet.CharArraySetIterator);\n    \n    Iterator<String> it = set.stringIterator();\n    assertTrue(it instanceof CharArraySet.CharArraySetIterator);\n    while (it.hasNext()) {\n      // as the set returns String instances, this must work:\n      assertTrue(hset.contains(it.next()));\n      try {\n        it.remove();\n        fail(\"remove() should not work on CharArraySetIterator\");\n      } catch (UnsupportedOperationException uoe) {\n        // pass\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/analysis/TestCharArraySet#testIterator().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestCharArraySet#testIterator().mjava","sourceNew":"  @Deprecated @SuppressWarnings(\"unchecked\")\n  public void testIterator() {\n    HashSet<String> hset = new HashSet<String>();\n    hset.addAll(Arrays.asList(TEST_STOP_WORDS));\n\n    assertTrue(\"in 3.0 version, iterator should be CharArraySetIterator\",\n      ((Iterator) CharArraySet.copy(Version.LUCENE_30, hset).iterator()) instanceof CharArraySet.CharArraySetIterator);\n\n    CharArraySet set = CharArraySet.copy(TEST_VERSION_CURRENT, hset);\n    assertFalse(\"in current version, iterator should not be CharArraySetIterator\",\n      ((Iterator) set.iterator()) instanceof CharArraySet.CharArraySetIterator);\n    \n    Iterator<String> it = set.stringIterator();\n    assertTrue(it instanceof CharArraySet.CharArraySetIterator);\n    while (it.hasNext()) {\n      // as the set returns String instances, this must work:\n      assertTrue(hset.contains(it.next()));\n      try {\n        it.remove();\n        fail(\"remove() should not work on CharArraySetIterator\");\n      } catch (UnsupportedOperationException uoe) {\n        // pass\n      }\n    }\n  }\n\n","sourceOld":"  @Deprecated @SuppressWarnings(\"unchecked\")\n  public void testIterator() {\n    HashSet<String> hset = new HashSet<String>();\n    hset.addAll(Arrays.asList(TEST_STOP_WORDS));\n\n    assertTrue(\"in 3.0 version, iterator should be CharArraySetIterator\",\n      ((Iterator) CharArraySet.copy(Version.LUCENE_30, hset).iterator()) instanceof CharArraySet.CharArraySetIterator);\n\n    CharArraySet set = CharArraySet.copy(TEST_VERSION_CURRENT, hset);\n    assertFalse(\"in current version, iterator should not be CharArraySetIterator\",\n      ((Iterator) set.iterator()) instanceof CharArraySet.CharArraySetIterator);\n    \n    Iterator<String> it = set.stringIterator();\n    assertTrue(it instanceof CharArraySet.CharArraySetIterator);\n    while (it.hasNext()) {\n      // as the set returns String instances, this must work:\n      assertTrue(hset.contains(it.next()));\n      try {\n        it.remove();\n        fail(\"remove() should not work on CharArraySetIterator\");\n      } catch (UnsupportedOperationException uoe) {\n        // pass\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"13ac8c35a1a0871e1e8c4677feb742c1a1059e14":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["13ac8c35a1a0871e1e8c4677feb742c1a1059e14"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"]},"commit2Childs":{"13ac8c35a1a0871e1e8c4677feb742c1a1059e14":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["13ac8c35a1a0871e1e8c4677feb742c1a1059e14"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}