{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/writercache/lru/LruTaxonomyWriterCache#put(CategoryPath,int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/writercache/lru/LruTaxonomyWriterCache#put(CategoryPath,int).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/writercache/lru/LruTaxonomyWriterCache#put(CategoryPath,int).mjava","sourceNew":"  public boolean put(CategoryPath categoryPath, int ordinal) {\n    boolean ret = cache.put(categoryPath, new Integer(ordinal));\n    // If the cache is full, we need to clear one or more old entries\n    // from the cache. However, if we delete from the cache a recent\n    // addition that isn't yet in our reader, for this entry to be\n    // visible to us we need to make sure that the changes have been\n    // committed and we reopen the reader. Because this is a slow\n    // operation, we don't delete entries one-by-one but rather in bulk\n    // (put() removes the 2/3rd oldest entries).\n    if (ret) {\n      cache.makeRoomLRU();\n    }\n    return ret;\n  }\n\n","sourceOld":"  public boolean put(CategoryPath categoryPath, int ordinal) {\n    boolean ret = cache.put(categoryPath, new Integer(ordinal));\n    // If the cache is full, we need to clear one or more old entries\n    // from the cache. However, if we delete from the cache a recent\n    // addition that isn't yet in our reader, for this entry to be\n    // visible to us we need to make sure that the changes have been\n    // committed and we reopen the reader. Because this is a slow\n    // operation, we don't delete entries one-by-one but rather in bulk\n    // (put() removes the 2/3rd oldest entries).\n    if (ret) {\n      cache.makeRoomLRU();\n    }\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"533890d1266aa8169162ec556395d0c5d0377566","date":1337173867,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/writercache/lru/LruTaxonomyWriterCache#put(CategoryPath,int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/writercache/lru/LruTaxonomyWriterCache#put(CategoryPath,int).mjava","sourceNew":"  @Override\n  public synchronized boolean put(CategoryPath categoryPath, int ordinal) {\n    boolean ret = cache.put(categoryPath, new Integer(ordinal));\n    // If the cache is full, we need to clear one or more old entries\n    // from the cache. However, if we delete from the cache a recent\n    // addition that isn't yet in our reader, for this entry to be\n    // visible to us we need to make sure that the changes have been\n    // committed and we reopen the reader. Because this is a slow\n    // operation, we don't delete entries one-by-one but rather in bulk\n    // (put() removes the 2/3rd oldest entries).\n    if (ret) {\n      cache.makeRoomLRU();\n    }\n    return ret;\n  }\n\n","sourceOld":"  public boolean put(CategoryPath categoryPath, int ordinal) {\n    boolean ret = cache.put(categoryPath, new Integer(ordinal));\n    // If the cache is full, we need to clear one or more old entries\n    // from the cache. However, if we delete from the cache a recent\n    // addition that isn't yet in our reader, for this entry to be\n    // visible to us we need to make sure that the changes have been\n    // committed and we reopen the reader. Because this is a slow\n    // operation, we don't delete entries one-by-one but rather in bulk\n    // (put() removes the 2/3rd oldest entries).\n    if (ret) {\n      cache.makeRoomLRU();\n    }\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ef0d8a69209261514c5739c770bba706c2308450","date":1337607597,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/writercache/lru/LruTaxonomyWriterCache#put(CategoryPath,int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/writercache/lru/LruTaxonomyWriterCache#put(CategoryPath,int).mjava","sourceNew":"  @Override\n  public synchronized boolean put(CategoryPath categoryPath, int ordinal) {\n    boolean ret = cache.put(categoryPath, new Integer(ordinal));\n    // If the cache is full, we need to clear one or more old entries\n    // from the cache. However, if we delete from the cache a recent\n    // addition that isn't yet in our reader, for this entry to be\n    // visible to us we need to make sure that the changes have been\n    // committed and we reopen the reader. Because this is a slow\n    // operation, we don't delete entries one-by-one but rather in bulk\n    // (put() removes the 2/3rd oldest entries).\n    if (ret) {\n      cache.makeRoomLRU();\n    }\n    return ret;\n  }\n\n","sourceOld":"  public boolean put(CategoryPath categoryPath, int ordinal) {\n    boolean ret = cache.put(categoryPath, new Integer(ordinal));\n    // If the cache is full, we need to clear one or more old entries\n    // from the cache. However, if we delete from the cache a recent\n    // addition that isn't yet in our reader, for this entry to be\n    // visible to us we need to make sure that the changes have been\n    // committed and we reopen the reader. Because this is a slow\n    // operation, we don't delete entries one-by-one but rather in bulk\n    // (put() removes the 2/3rd oldest entries).\n    if (ret) {\n      cache.makeRoomLRU();\n    }\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/writercache/lru/LruTaxonomyWriterCache#put(FacetLabel,int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/writercache/lru/LruTaxonomyWriterCache#put(CategoryPath,int).mjava","sourceNew":"  @Override\n  public synchronized boolean put(FacetLabel categoryPath, int ordinal) {\n    boolean ret = cache.put(categoryPath, new Integer(ordinal));\n    // If the cache is full, we need to clear one or more old entries\n    // from the cache. However, if we delete from the cache a recent\n    // addition that isn't yet in our reader, for this entry to be\n    // visible to us we need to make sure that the changes have been\n    // committed and we reopen the reader. Because this is a slow\n    // operation, we don't delete entries one-by-one but rather in bulk\n    // (put() removes the 2/3rd oldest entries).\n    if (ret) {\n      cache.makeRoomLRU();\n    }\n    return ret;\n  }\n\n","sourceOld":"  @Override\n  public synchronized boolean put(CategoryPath categoryPath, int ordinal) {\n    boolean ret = cache.put(categoryPath, new Integer(ordinal));\n    // If the cache is full, we need to clear one or more old entries\n    // from the cache. However, if we delete from the cache a recent\n    // addition that isn't yet in our reader, for this entry to be\n    // visible to us we need to make sure that the changes have been\n    // committed and we reopen the reader. Because this is a slow\n    // operation, we don't delete entries one-by-one but rather in bulk\n    // (put() removes the 2/3rd oldest entries).\n    if (ret) {\n      cache.makeRoomLRU();\n    }\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/writercache/lru/LruTaxonomyWriterCache#put(CategoryPath,int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public synchronized boolean put(CategoryPath categoryPath, int ordinal) {\n    boolean ret = cache.put(categoryPath, new Integer(ordinal));\n    // If the cache is full, we need to clear one or more old entries\n    // from the cache. However, if we delete from the cache a recent\n    // addition that isn't yet in our reader, for this entry to be\n    // visible to us we need to make sure that the changes have been\n    // committed and we reopen the reader. Because this is a slow\n    // operation, we don't delete entries one-by-one but rather in bulk\n    // (put() removes the 2/3rd oldest entries).\n    if (ret) {\n      cache.makeRoomLRU();\n    }\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["533890d1266aa8169162ec556395d0c5d0377566","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"533890d1266aa8169162ec556395d0c5d0377566":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"ef0d8a69209261514c5739c770bba706c2308450":["b89678825b68eccaf09e6ab71675fc0b0af1e099","533890d1266aa8169162ec556395d0c5d0377566"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["533890d1266aa8169162ec556395d0c5d0377566"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["533890d1266aa8169162ec556395d0c5d0377566","ef0d8a69209261514c5739c770bba706c2308450"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"533890d1266aa8169162ec556395d0c5d0377566":["3cc728b07df73b197e6d940d27f9b08b63918f13","ef0d8a69209261514c5739c770bba706c2308450","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"ef0d8a69209261514c5739c770bba706c2308450":[],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ef0d8a69209261514c5739c770bba706c2308450","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}