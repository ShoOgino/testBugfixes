{"path":"solr/core/src/test/org/apache/solr/cloud/SolrCloudExampleTest#doTestHealthcheck(String,String).mjava","commits":[{"id":"547b9bdc942b65ebcd943738bb12c2a222fcf566","date":1432317527,"type":0,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrCloudExampleTest#doTestHealthcheck(String,String).mjava","pathOld":"/dev/null","sourceNew":"  protected void doTestHealthcheck(String testCollectionName, String zkHost) throws Exception {\n    String[] args = new String[]{\n        \"healthcheck\",\n        \"-collection\", testCollectionName,\n        \"-zkHost\", zkHost\n    };\n    SolrCLI.HealthcheckTool tool = new SolrCLI.HealthcheckTool();\n    CommandLine cli =\n        SolrCLI.processCommandLineArgs(SolrCLI.joinCommonAndToolOptions(tool.getOptions()), args);\n    assertTrue(\"Healthcheck action failed!\", tool.runTool(cli) == 0);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3e2df0ef4d31d965ccc4afc2ec6349c06c3cccf","date":1432317730,"type":4,"author":"Timothy Potter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/SolrCloudExampleTest#doTestHealthcheck(String,String).mjava","sourceNew":null,"sourceOld":"  protected void doTestHealthcheck(String testCollectionName, String zkHost) throws Exception {\n    String[] args = new String[]{\n        \"healthcheck\",\n        \"-collection\", testCollectionName,\n        \"-zkHost\", zkHost\n    };\n    SolrCLI.HealthcheckTool tool = new SolrCLI.HealthcheckTool();\n    CommandLine cli =\n        SolrCLI.processCommandLineArgs(SolrCLI.joinCommonAndToolOptions(tool.getOptions()), args);\n    assertTrue(\"Healthcheck action failed!\", tool.runTool(cli) == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"919a9ff0212f46eb240b8716a6d189b06659d3f2","date":1432317985,"type":0,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrCloudExampleTest#doTestHealthcheck(String,String).mjava","pathOld":"/dev/null","sourceNew":"  protected void doTestHealthcheck(String testCollectionName, String zkHost) throws Exception {\n    String[] args = new String[]{\n        \"healthcheck\",\n        \"-collection\", testCollectionName,\n        \"-zkHost\", zkHost\n    };\n    SolrCLI.HealthcheckTool tool = new SolrCLI.HealthcheckTool();\n    CommandLine cli =\n        SolrCLI.processCommandLineArgs(SolrCLI.joinCommonAndToolOptions(tool.getOptions()), args);\n    assertTrue(\"Healthcheck action failed!\", tool.runTool(cli) == 0);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ca20be81c9284c840498143264e583ccbb8525a","date":1438705932,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrCloudExampleTest#doTestHealthcheck(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SolrCloudExampleTest#doTestHealthcheck(String,String).mjava","sourceNew":"  protected void doTestHealthcheck(String testCollectionName, String zkHost) throws Exception {\n    String[] args = new String[]{\n        \"-collection\", testCollectionName,\n        \"-zkHost\", zkHost\n    };\n    SolrCLI.HealthcheckTool tool = new SolrCLI.HealthcheckTool();\n    CommandLine cli =\n        SolrCLI.processCommandLineArgs(SolrCLI.joinCommonAndToolOptions(tool.getOptions()), args);\n    assertTrue(\"Healthcheck action failed!\", tool.runTool(cli) == 0);\n  }\n\n","sourceOld":"  protected void doTestHealthcheck(String testCollectionName, String zkHost) throws Exception {\n    String[] args = new String[]{\n        \"healthcheck\",\n        \"-collection\", testCollectionName,\n        \"-zkHost\", zkHost\n    };\n    SolrCLI.HealthcheckTool tool = new SolrCLI.HealthcheckTool();\n    CommandLine cli =\n        SolrCLI.processCommandLineArgs(SolrCLI.joinCommonAndToolOptions(tool.getOptions()), args);\n    assertTrue(\"Healthcheck action failed!\", tool.runTool(cli) == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4ca20be81c9284c840498143264e583ccbb8525a":["919a9ff0212f46eb240b8716a6d189b06659d3f2"],"547b9bdc942b65ebcd943738bb12c2a222fcf566":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"919a9ff0212f46eb240b8716a6d189b06659d3f2":["b3e2df0ef4d31d965ccc4afc2ec6349c06c3cccf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4ca20be81c9284c840498143264e583ccbb8525a"],"b3e2df0ef4d31d965ccc4afc2ec6349c06c3cccf":["547b9bdc942b65ebcd943738bb12c2a222fcf566"]},"commit2Childs":{"4ca20be81c9284c840498143264e583ccbb8525a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"547b9bdc942b65ebcd943738bb12c2a222fcf566":["b3e2df0ef4d31d965ccc4afc2ec6349c06c3cccf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["547b9bdc942b65ebcd943738bb12c2a222fcf566"],"919a9ff0212f46eb240b8716a6d189b06659d3f2":["4ca20be81c9284c840498143264e583ccbb8525a"],"b3e2df0ef4d31d965ccc4afc2ec6349c06c3cccf":["919a9ff0212f46eb240b8716a6d189b06659d3f2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}