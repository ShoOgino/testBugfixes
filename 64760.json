{"path":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testIDChangesOnAdvance().mjava","commits":[{"id":"14654be3f7a82c9a3c52169e365baa55bfe64f66","date":1587212697,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testIDChangesOnAdvance().mjava","pathOld":"/dev/null","sourceNew":"  public void testIDChangesOnAdvance() throws IOException {\n    try (BaseDirectoryWrapper dir = newDirectory()) {\n      dir.setCheckIndexOnClose(false);\n      byte id[] = StringHelper.randomId();\n      SegmentInfo info = new SegmentInfo(dir, Version.LUCENE_9_0_0, Version.LUCENE_9_0_0, \"_0\", 1, false, Codec.getDefault(),\n          Collections.<String, String>emptyMap(), StringHelper.randomId(), Collections.<String, String>emptyMap(), null);\n      SegmentCommitInfo commitInfo = new SegmentCommitInfo(info, 0, 0, -1, -1, -1, id);\n      assertEquals(StringHelper.idToString(id), StringHelper.idToString(commitInfo.getId()));\n      commitInfo.advanceDelGen();\n      assertNotEquals(StringHelper.idToString(id), StringHelper.idToString(commitInfo.getId()));\n\n      id = commitInfo.getId();\n      commitInfo.advanceDocValuesGen();\n      assertNotEquals(StringHelper.idToString(id), StringHelper.idToString(commitInfo.getId()));\n\n      id = commitInfo.getId();\n      commitInfo.advanceFieldInfosGen();\n      assertNotEquals(StringHelper.idToString(id), StringHelper.idToString(commitInfo.getId()));\n      SegmentCommitInfo clone = commitInfo.clone();\n      id = commitInfo.getId();\n      assertEquals(StringHelper.idToString(id), StringHelper.idToString(commitInfo.getId()));\n      assertEquals(StringHelper.idToString(id), StringHelper.idToString(clone.getId()));\n\n      commitInfo.advanceFieldInfosGen();\n      assertNotEquals(StringHelper.idToString(id), StringHelper.idToString(commitInfo.getId()));\n      assertEquals(\"clone changed but shouldn't\", StringHelper.idToString(id), StringHelper.idToString(clone.getId()));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"14654be3f7a82c9a3c52169e365baa55bfe64f66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["14654be3f7a82c9a3c52169e365baa55bfe64f66"]},"commit2Childs":{"14654be3f7a82c9a3c52169e365baa55bfe64f66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["14654be3f7a82c9a3c52169e365baa55bfe64f66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}