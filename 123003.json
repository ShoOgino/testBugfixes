{"path":"lucene/src/test-framework/java/org/apache/lucene/codecs/lucene3x/PreFlexRWFieldsWriter.PreFlexTermsWriter.PostingsWriter#startDoc(int,int).mjava","commits":[{"id":"e92a321a2612261e1010a4038c8586e30b081552","date":1328456689,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/codecs/lucene3x/PreFlexRWFieldsWriter.PreFlexTermsWriter.PostingsWriter#startDoc(int,int).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/codecs/preflexrw/PreFlexRWFieldsWriter.PreFlexTermsWriter.PostingsWriter#startDoc(int,int).mjava","sourceNew":"      @Override\n      public void startDoc(int docID, int termDocFreq) throws IOException {\n        //System.out.println(\"    w doc=\" + docID);\n\n        final int delta = docID - lastDocID;\n        if (docID < 0 || (df > 0 && delta <= 0)) {\n          throw new CorruptIndexException(\"docs out of order (\" + docID + \" <= \" + lastDocID + \" )\");\n        }\n\n        if ((++df % termsOut.skipInterval) == 0) {\n          skipListWriter.setSkipData(lastDocID, storePayloads, lastPayloadLength, false, 0);\n          skipListWriter.bufferSkip(df);\n        }\n\n        lastDocID = docID;\n\n        assert docID < totalNumDocs: \"docID=\" + docID + \" totalNumDocs=\" + totalNumDocs;\n\n        if (omitTF) {\n          freqOut.writeVInt(delta);\n        } else {\n          final int code = delta << 1;\n          if (termDocFreq == 1) {\n            freqOut.writeVInt(code|1);\n          } else {\n            freqOut.writeVInt(code);\n            freqOut.writeVInt(termDocFreq);\n          }\n        }\n        lastPosition = 0;\n      }\n\n","sourceOld":"      @Override\n      public void startDoc(int docID, int termDocFreq) throws IOException {\n        //System.out.println(\"    w doc=\" + docID);\n\n        final int delta = docID - lastDocID;\n        if (docID < 0 || (df > 0 && delta <= 0)) {\n          throw new CorruptIndexException(\"docs out of order (\" + docID + \" <= \" + lastDocID + \" )\");\n        }\n\n        if ((++df % termsOut.skipInterval) == 0) {\n          skipListWriter.setSkipData(lastDocID, storePayloads, lastPayloadLength, false, 0);\n          skipListWriter.bufferSkip(df);\n        }\n\n        lastDocID = docID;\n\n        assert docID < totalNumDocs: \"docID=\" + docID + \" totalNumDocs=\" + totalNumDocs;\n\n        if (omitTF) {\n          freqOut.writeVInt(delta);\n        } else {\n          final int code = delta << 1;\n          if (termDocFreq == 1) {\n            freqOut.writeVInt(code|1);\n          } else {\n            freqOut.writeVInt(code);\n            freqOut.writeVInt(termDocFreq);\n          }\n        }\n        lastPosition = 0;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene3x/PreFlexRWFieldsWriter.PreFlexTermsWriter.PostingsWriter#startDoc(int,int).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/codecs/lucene3x/PreFlexRWFieldsWriter.PreFlexTermsWriter.PostingsWriter#startDoc(int,int).mjava","sourceNew":"      @Override\n      public void startDoc(int docID, int termDocFreq) throws IOException {\n        //System.out.println(\"    w doc=\" + docID);\n\n        final int delta = docID - lastDocID;\n        if (docID < 0 || (df > 0 && delta <= 0)) {\n          throw new CorruptIndexException(\"docs out of order (\" + docID + \" <= \" + lastDocID + \" )\");\n        }\n\n        if ((++df % termsOut.skipInterval) == 0) {\n          skipListWriter.setSkipData(lastDocID, storePayloads, lastPayloadLength, false, 0);\n          skipListWriter.bufferSkip(df);\n        }\n\n        lastDocID = docID;\n\n        assert docID < totalNumDocs: \"docID=\" + docID + \" totalNumDocs=\" + totalNumDocs;\n\n        if (omitTF) {\n          freqOut.writeVInt(delta);\n        } else {\n          final int code = delta << 1;\n          if (termDocFreq == 1) {\n            freqOut.writeVInt(code|1);\n          } else {\n            freqOut.writeVInt(code);\n            freqOut.writeVInt(termDocFreq);\n          }\n        }\n        lastPosition = 0;\n      }\n\n","sourceOld":"      @Override\n      public void startDoc(int docID, int termDocFreq) throws IOException {\n        //System.out.println(\"    w doc=\" + docID);\n\n        final int delta = docID - lastDocID;\n        if (docID < 0 || (df > 0 && delta <= 0)) {\n          throw new CorruptIndexException(\"docs out of order (\" + docID + \" <= \" + lastDocID + \" )\");\n        }\n\n        if ((++df % termsOut.skipInterval) == 0) {\n          skipListWriter.setSkipData(lastDocID, storePayloads, lastPayloadLength, false, 0);\n          skipListWriter.bufferSkip(df);\n        }\n\n        lastDocID = docID;\n\n        assert docID < totalNumDocs: \"docID=\" + docID + \" totalNumDocs=\" + totalNumDocs;\n\n        if (omitTF) {\n          freqOut.writeVInt(delta);\n        } else {\n          final int code = delta << 1;\n          if (termDocFreq == 1) {\n            freqOut.writeVInt(code|1);\n          } else {\n            freqOut.writeVInt(code);\n            freqOut.writeVInt(termDocFreq);\n          }\n        }\n        lastPosition = 0;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["e92a321a2612261e1010a4038c8586e30b081552"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e92a321a2612261e1010a4038c8586e30b081552":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e92a321a2612261e1010a4038c8586e30b081552"],"e92a321a2612261e1010a4038c8586e30b081552":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}