{"path":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestMultipleIndexFields#assertCorrectResults(Facets).mjava","commits":[{"id":"f01616d06510fc630b6ef0ec324bdebc2fc49b3c","date":1385331328,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestMultipleIndexFields#assertCorrectResults(Facets).mjava","pathOld":"/dev/null","sourceNew":"  private void assertCorrectResults(Facets facets) throws IOException {\n    assertEquals(5, facets.getSpecificValue(\"Band\"));\n    assertEquals(\"value=5 childCount=2\\n  Rock & Pop (4)\\n  Punk (1)\\n\", facets.getTopChildren(10, \"Band\").toString());\n    assertEquals(\"value=4 childCount=4\\n  The Beatles (1)\\n  U2 (1)\\n  REM (1)\\n  Dave Matthews Band (1)\\n\", facets.getTopChildren(10, \"Band\", \"Rock & Pop\").toString());\n    assertEquals(\"value=3 childCount=3\\n  Mark Twain (1)\\n  Stephen King (1)\\n  Kurt Vonnegut (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestMultipleIndexFields#assertCorrectResults(Facets).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestMultipleIndexFields#assertCorrectResults(Facets).mjava","sourceNew":"  private void assertCorrectResults(Facets facets) throws IOException {\n    assertEquals(5, facets.getSpecificValue(\"Band\"));\n    assertEquals(\"value=5 childCount=2\\n  Rock & Pop (4)\\n  Punk (1)\\n\", facets.getTopChildren(10, \"Band\").toString());\n    assertEquals(\"value=4 childCount=4\\n  The Beatles (1)\\n  U2 (1)\\n  REM (1)\\n  Dave Matthews Band (1)\\n\", facets.getTopChildren(10, \"Band\", \"Rock & Pop\").toString());\n    assertEquals(\"value=3 childCount=3\\n  Mark Twain (1)\\n  Stephen King (1)\\n  Kurt Vonnegut (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n  }\n\n","sourceOld":"  private void assertCorrectResults(Facets facets) throws IOException {\n    assertEquals(5, facets.getSpecificValue(\"Band\"));\n    assertEquals(\"value=5 childCount=2\\n  Rock & Pop (4)\\n  Punk (1)\\n\", facets.getTopChildren(10, \"Band\").toString());\n    assertEquals(\"value=4 childCount=4\\n  The Beatles (1)\\n  U2 (1)\\n  REM (1)\\n  Dave Matthews Band (1)\\n\", facets.getTopChildren(10, \"Band\", \"Rock & Pop\").toString());\n    assertEquals(\"value=3 childCount=3\\n  Mark Twain (1)\\n  Stephen King (1)\\n  Kurt Vonnegut (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["f01616d06510fc630b6ef0ec324bdebc2fc49b3c"],"f01616d06510fc630b6ef0ec324bdebc2fc49b3c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f01616d06510fc630b6ef0ec324bdebc2fc49b3c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"21d36d0db865f7b84026b447bec653469a6e66df":[],"f01616d06510fc630b6ef0ec324bdebc2fc49b3c":["21d36d0db865f7b84026b447bec653469a6e66df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}