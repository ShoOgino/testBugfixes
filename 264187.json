{"path":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeIndex(IndexOutput,int,byte[]).mjava","commits":[{"id":"9fc0d60683b47b5d922124c31f57c8b34734f9e6","date":1480846684,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeIndex(IndexOutput,int,byte[]).mjava","pathOld":"/dev/null","sourceNew":"  private void writeIndex(IndexOutput out, int numLeaves, byte[] packedIndex) throws IOException {\n    \n    CodecUtil.writeHeader(out, CODEC_NAME, VERSION_CURRENT);\n    out.writeVInt(numDims);\n    out.writeVInt(maxPointsInLeafNode);\n    out.writeVInt(bytesPerDim);\n\n    assert numLeaves > 0;\n    out.writeVInt(numLeaves);\n    out.writeBytes(minPackedValue, 0, packedBytesLength);\n    out.writeBytes(maxPackedValue, 0, packedBytesLength);\n\n    out.writeVLong(pointCount);\n    out.writeVInt(docsSeen.cardinality());\n    out.writeVInt(packedIndex.length);\n    out.writeBytes(packedIndex, 0, packedIndex.length);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9856095f7afb5a607bf5e65077615ed91273508c","date":1481837697,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeIndex(IndexOutput,int,byte[]).mjava","pathOld":"/dev/null","sourceNew":"  private void writeIndex(IndexOutput out, int numLeaves, byte[] packedIndex) throws IOException {\n    \n    CodecUtil.writeHeader(out, CODEC_NAME, VERSION_CURRENT);\n    out.writeVInt(numDims);\n    out.writeVInt(maxPointsInLeafNode);\n    out.writeVInt(bytesPerDim);\n\n    assert numLeaves > 0;\n    out.writeVInt(numLeaves);\n    out.writeBytes(minPackedValue, 0, packedBytesLength);\n    out.writeBytes(maxPackedValue, 0, packedBytesLength);\n\n    out.writeVLong(pointCount);\n    out.writeVInt(docsSeen.cardinality());\n    out.writeVInt(packedIndex.length);\n    out.writeBytes(packedIndex, 0, packedIndex.length);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15fe6782474c00ec2ccc636052a025f8fe0bdb8b","date":1484743707,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeIndex(IndexOutput,int,int,byte[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeIndex(IndexOutput,int,byte[]).mjava","sourceNew":"  private void writeIndex(IndexOutput out, int countPerLeaf, int numLeaves, byte[] packedIndex) throws IOException {\n    \n    CodecUtil.writeHeader(out, CODEC_NAME, VERSION_CURRENT);\n    out.writeVInt(numDims);\n    out.writeVInt(countPerLeaf);\n    out.writeVInt(bytesPerDim);\n\n    assert numLeaves > 0;\n    out.writeVInt(numLeaves);\n    out.writeBytes(minPackedValue, 0, packedBytesLength);\n    out.writeBytes(maxPackedValue, 0, packedBytesLength);\n\n    out.writeVLong(pointCount);\n    out.writeVInt(docsSeen.cardinality());\n    out.writeVInt(packedIndex.length);\n    out.writeBytes(packedIndex, 0, packedIndex.length);\n  }\n\n","sourceOld":"  private void writeIndex(IndexOutput out, int numLeaves, byte[] packedIndex) throws IOException {\n    \n    CodecUtil.writeHeader(out, CODEC_NAME, VERSION_CURRENT);\n    out.writeVInt(numDims);\n    out.writeVInt(maxPointsInLeafNode);\n    out.writeVInt(bytesPerDim);\n\n    assert numLeaves > 0;\n    out.writeVInt(numLeaves);\n    out.writeBytes(minPackedValue, 0, packedBytesLength);\n    out.writeBytes(maxPackedValue, 0, packedBytesLength);\n\n    out.writeVLong(pointCount);\n    out.writeVInt(docsSeen.cardinality());\n    out.writeVInt(packedIndex.length);\n    out.writeBytes(packedIndex, 0, packedIndex.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"302d34f2c66e8d489ee13078305c330cbf67b226","date":1484754357,"type":5,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeIndex(IndexOutput,int,int,byte[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeIndex(IndexOutput,int,byte[]).mjava","sourceNew":"  private void writeIndex(IndexOutput out, int countPerLeaf, int numLeaves, byte[] packedIndex) throws IOException {\n    \n    CodecUtil.writeHeader(out, CODEC_NAME, VERSION_CURRENT);\n    out.writeVInt(numDims);\n    out.writeVInt(countPerLeaf);\n    out.writeVInt(bytesPerDim);\n\n    assert numLeaves > 0;\n    out.writeVInt(numLeaves);\n    out.writeBytes(minPackedValue, 0, packedBytesLength);\n    out.writeBytes(maxPackedValue, 0, packedBytesLength);\n\n    out.writeVLong(pointCount);\n    out.writeVInt(docsSeen.cardinality());\n    out.writeVInt(packedIndex.length);\n    out.writeBytes(packedIndex, 0, packedIndex.length);\n  }\n\n","sourceOld":"  private void writeIndex(IndexOutput out, int numLeaves, byte[] packedIndex) throws IOException {\n    \n    CodecUtil.writeHeader(out, CODEC_NAME, VERSION_CURRENT);\n    out.writeVInt(numDims);\n    out.writeVInt(maxPointsInLeafNode);\n    out.writeVInt(bytesPerDim);\n\n    assert numLeaves > 0;\n    out.writeVInt(numLeaves);\n    out.writeBytes(minPackedValue, 0, packedBytesLength);\n    out.writeBytes(maxPackedValue, 0, packedBytesLength);\n\n    out.writeVLong(pointCount);\n    out.writeVInt(docsSeen.cardinality());\n    out.writeVInt(packedIndex.length);\n    out.writeBytes(packedIndex, 0, packedIndex.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9fc0d60683b47b5d922124c31f57c8b34734f9e6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9856095f7afb5a607bf5e65077615ed91273508c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9fc0d60683b47b5d922124c31f57c8b34734f9e6"],"15fe6782474c00ec2ccc636052a025f8fe0bdb8b":["9fc0d60683b47b5d922124c31f57c8b34734f9e6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["15fe6782474c00ec2ccc636052a025f8fe0bdb8b"],"302d34f2c66e8d489ee13078305c330cbf67b226":["9856095f7afb5a607bf5e65077615ed91273508c","15fe6782474c00ec2ccc636052a025f8fe0bdb8b"]},"commit2Childs":{"9fc0d60683b47b5d922124c31f57c8b34734f9e6":["9856095f7afb5a607bf5e65077615ed91273508c","15fe6782474c00ec2ccc636052a025f8fe0bdb8b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9fc0d60683b47b5d922124c31f57c8b34734f9e6","9856095f7afb5a607bf5e65077615ed91273508c"],"9856095f7afb5a607bf5e65077615ed91273508c":["302d34f2c66e8d489ee13078305c330cbf67b226"],"15fe6782474c00ec2ccc636052a025f8fe0bdb8b":["cd5edd1f2b162a5cfa08efd17851a07373a96817","302d34f2c66e8d489ee13078305c330cbf67b226"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"302d34f2c66e8d489ee13078305c330cbf67b226":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","302d34f2c66e8d489ee13078305c330cbf67b226"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}