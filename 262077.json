{"path":"lucene/core/src/java/org/apache/lucene/index/FieldInfos#FieldInfos(FieldInfo[],boolean,boolean,boolean).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos#FieldInfos(FieldInfo[],boolean,boolean,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#FieldInfos(FieldInfo[],boolean,boolean,boolean).mjava","sourceNew":"  /**\n   * Creates a new read-only FieldInfos: only public to be accessible\n   * from the codecs package\n   * \n   * @lucene.internal\n   */\n  public FieldInfos(FieldInfo[] infos, boolean hasFreq, boolean hasProx, boolean hasVectors) {\n    this(null);\n    this.hasFreq = hasFreq;\n    this.hasProx = hasProx;\n    this.hasVectors = hasVectors;\n    for (FieldInfo info : infos) {\n      putInternal(info);\n    }\n  }\n\n","sourceOld":"  /**\n   * Creates a new read-only FieldInfos: only public to be accessible\n   * from the codecs package\n   * \n   * @lucene.internal\n   */\n  public FieldInfos(FieldInfo[] infos, boolean hasFreq, boolean hasProx, boolean hasVectors) {\n    this(null);\n    this.hasFreq = hasFreq;\n    this.hasProx = hasProx;\n    this.hasVectors = hasVectors;\n    for (FieldInfo info : infos) {\n      putInternal(info);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6eee1e5a8555d83dd8f2f2e3c0a4ccec8e7cf9b","date":1337136355,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MutableFieldInfos#MutableFieldInfos(FieldInfo[],boolean,boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos#FieldInfos(FieldInfo[],boolean,boolean,boolean).mjava","sourceNew":"  /**\n   * Creates a new read-only FieldInfos: only public to be accessible\n   * from the codecs package\n   * \n   * @lucene.internal\n   */\n  public MutableFieldInfos(FieldInfo[] infos, boolean hasFreq, boolean hasProx, boolean hasVectors) {\n    this(null);\n    this.hasFreq = hasFreq;\n    this.hasProx = hasProx;\n    this.hasVectors = hasVectors;\n    for (FieldInfo info : infos) {\n      putInternal(info);\n    }\n  }\n\n","sourceOld":"  /**\n   * Creates a new read-only FieldInfos: only public to be accessible\n   * from the codecs package\n   * \n   * @lucene.internal\n   */\n  public FieldInfos(FieldInfo[] infos, boolean hasFreq, boolean hasProx, boolean hasVectors) {\n    this(null);\n    this.hasFreq = hasFreq;\n    this.hasProx = hasProx;\n    this.hasVectors = hasVectors;\n    for (FieldInfo info : infos) {\n      putInternal(info);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos#FieldInfos(FieldInfo[],boolean,boolean,boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates a new read-only FieldInfos: only public to be accessible\n   * from the codecs package\n   * \n   * @lucene.internal\n   */\n  public FieldInfos(FieldInfo[] infos, boolean hasFreq, boolean hasProx, boolean hasVectors) {\n    this(null);\n    this.hasFreq = hasFreq;\n    this.hasProx = hasProx;\n    this.hasVectors = hasVectors;\n    for (FieldInfo info : infos) {\n      putInternal(info);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","f6eee1e5a8555d83dd8f2f2e3c0a4ccec8e7cf9b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f6eee1e5a8555d83dd8f2f2e3c0a4ccec8e7cf9b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"]},"commit2Childs":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","f6eee1e5a8555d83dd8f2f2e3c0a4ccec8e7cf9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"f6eee1e5a8555d83dd8f2f2e3c0a4ccec8e7cf9b":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}