{"path":"modules/grouping/src/test/org/apache/lucene/search/grouping/AbstractGroupingTestCase#generateRandomNonEmptyString().mjava","commits":[{"id":"369f44b665973d5aa5fc7d0f2a75ffad475d21ee","date":1331157468,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"modules/grouping/src/test/org/apache/lucene/search/grouping/AbstractGroupingTestCase#generateRandomNonEmptyString().mjava","pathOld":"/dev/null","sourceNew":"  protected String generateRandomNonEmptyString() {\n    String randomValue;\n    do {\n      // B/c of DV based impl we can't see the difference between an empty string and a null value.\n      // For that reason we don't generate empty string groups.\n      randomValue = _TestUtil.randomRealisticUnicodeString(random);\n    } while (\"\".equals(randomValue));\n    return randomValue;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"modules/grouping/src/test/org/apache/lucene/search/grouping/AbstractGroupingTestCase#generateRandomNonEmptyString().mjava","pathOld":"/dev/null","sourceNew":"  protected String generateRandomNonEmptyString() {\n    String randomValue;\n    do {\n      // B/c of DV based impl we can't see the difference between an empty string and a null value.\n      // For that reason we don't generate empty string groups.\n      randomValue = _TestUtil.randomRealisticUnicodeString(random);\n    } while (\"\".equals(randomValue));\n    return randomValue;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"modules/grouping/src/test/org/apache/lucene/search/grouping/AbstractGroupingTestCase#generateRandomNonEmptyString().mjava","pathOld":"modules/grouping/src/test/org/apache/lucene/search/grouping/AbstractGroupingTestCase#generateRandomNonEmptyString().mjava","sourceNew":"  protected String generateRandomNonEmptyString() {\n    String randomValue;\n    do {\n      // B/c of DV based impl we can't see the difference between an empty string and a null value.\n      // For that reason we don't generate empty string groups.\n      randomValue = _TestUtil.randomRealisticUnicodeString(random());\n    } while (\"\".equals(randomValue));\n    return randomValue;\n  }\n\n","sourceOld":"  protected String generateRandomNonEmptyString() {\n    String randomValue;\n    do {\n      // B/c of DV based impl we can't see the difference between an empty string and a null value.\n      // For that reason we don't generate empty string groups.\n      randomValue = _TestUtil.randomRealisticUnicodeString(random);\n    } while (\"\".equals(randomValue));\n    return randomValue;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AbstractGroupingTestCase#generateRandomNonEmptyString().mjava","pathOld":"modules/grouping/src/test/org/apache/lucene/search/grouping/AbstractGroupingTestCase#generateRandomNonEmptyString().mjava","sourceNew":"  protected String generateRandomNonEmptyString() {\n    String randomValue;\n    do {\n      // B/c of DV based impl we can't see the difference between an empty string and a null value.\n      // For that reason we don't generate empty string groups.\n      randomValue = _TestUtil.randomRealisticUnicodeString(random());\n    } while (\"\".equals(randomValue));\n    return randomValue;\n  }\n\n","sourceOld":"  protected String generateRandomNonEmptyString() {\n    String randomValue;\n    do {\n      // B/c of DV based impl we can't see the difference between an empty string and a null value.\n      // For that reason we don't generate empty string groups.\n      randomValue = _TestUtil.randomRealisticUnicodeString(random());\n    } while (\"\".equals(randomValue));\n    return randomValue;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","369f44b665973d5aa5fc7d0f2a75ffad475d21ee"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["369f44b665973d5aa5fc7d0f2a75ffad475d21ee"],"369f44b665973d5aa5fc7d0f2a75ffad475d21ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["38e3b736c7ca086d61b7dbb841c905ee115490da","369f44b665973d5aa5fc7d0f2a75ffad475d21ee"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"369f44b665973d5aa5fc7d0f2a75ffad475d21ee":["38e3b736c7ca086d61b7dbb841c905ee115490da","629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}