{"path":"contrib/analyzers/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUpSearcher(Analyzer).mjava","commits":[{"id":"c3e328a6f2b163170d23e06008798fb82c27af8b","date":1206825093,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/analyzers/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUpSearcher(Analyzer).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  public IndexSearcher setUpSearcher(Analyzer analyzer) throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, analyzer, true);\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\",\n            Field.Store.YES,Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\",\n                      Field.Store.YES,Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\",\n                      Field.Store.YES,Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    return new IndexSearcher(dir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","date":1221082732,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUpSearcher(Analyzer).mjava","pathOld":"contrib/analyzers/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUpSearcher(Analyzer).mjava","sourceNew":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  public IndexSearcher setUpSearcher(Analyzer analyzer) throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, analyzer, true);\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\",\n            Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    return new IndexSearcher(dir);\n  }\n\n","sourceOld":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  public IndexSearcher setUpSearcher(Analyzer analyzer) throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, analyzer, true);\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\",\n            Field.Store.YES,Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\",\n                      Field.Store.YES,Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\",\n                      Field.Store.YES,Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    return new IndexSearcher(dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUpSearcher(Analyzer).mjava","pathOld":"contrib/analyzers/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUpSearcher(Analyzer).mjava","sourceNew":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  public IndexSearcher setUpSearcher(Analyzer analyzer) throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, analyzer, true);\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\",\n            Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    return new IndexSearcher(dir);\n  }\n\n","sourceOld":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  public IndexSearcher setUpSearcher(Analyzer analyzer) throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, analyzer, true);\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\",\n            Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    return new IndexSearcher(dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["c3e328a6f2b163170d23e06008798fb82c27af8b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"c3e328a6f2b163170d23e06008798fb82c27af8b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c3e328a6f2b163170d23e06008798fb82c27af8b"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"c3e328a6f2b163170d23e06008798fb82c27af8b":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}