{"path":"solr/test-framework/src/java/org/apache/solr/util/RandomMergePolicy#findForcedMerges(SegmentInfos,int,Map[SegmentInfoPerCommit,Boolean]).mjava","commits":[{"id":"505b4ec77395cb555366a54a97b24b0906a3d056","date":1375203457,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/RandomMergePolicy#findForcedMerges(SegmentInfos,int,Map[SegmentInfoPerCommit,Boolean]).mjava","pathOld":"/dev/null","sourceNew":"  public MergeSpecification findForcedMerges(SegmentInfos segmentInfos, \n                                             int maxSegmentCount, \n                                             Map<SegmentInfoPerCommit,Boolean> segmentsToMerge) \n    throws IOException {\n    \n    return inner.findForcedMerges(segmentInfos, maxSegmentCount, segmentsToMerge);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/RandomMergePolicy#findForcedMerges(SegmentInfos,int,Map[SegmentInfoPerCommit,Boolean]).mjava","pathOld":"/dev/null","sourceNew":"  public MergeSpecification findForcedMerges(SegmentInfos segmentInfos, \n                                             int maxSegmentCount, \n                                             Map<SegmentInfoPerCommit,Boolean> segmentsToMerge) \n    throws IOException {\n    \n    return inner.findForcedMerges(segmentInfos, maxSegmentCount, segmentsToMerge);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/RandomMergePolicy#findForcedMerges(SegmentInfos,int,Map[SegmentCommitInfo,Boolean]).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/RandomMergePolicy#findForcedMerges(SegmentInfos,int,Map[SegmentInfoPerCommit,Boolean]).mjava","sourceNew":"  public MergeSpecification findForcedMerges(SegmentInfos segmentInfos, \n                                             int maxSegmentCount, \n                                             Map<SegmentCommitInfo,Boolean> segmentsToMerge) \n    throws IOException {\n    \n    return inner.findForcedMerges(segmentInfos, maxSegmentCount, segmentsToMerge);\n  }\n\n","sourceOld":"  public MergeSpecification findForcedMerges(SegmentInfos segmentInfos, \n                                             int maxSegmentCount, \n                                             Map<SegmentInfoPerCommit,Boolean> segmentsToMerge) \n    throws IOException {\n    \n    return inner.findForcedMerges(segmentInfos, maxSegmentCount, segmentsToMerge);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["505b4ec77395cb555366a54a97b24b0906a3d056"],"505b4ec77395cb555366a54a97b24b0906a3d056":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","505b4ec77395cb555366a54a97b24b0906a3d056"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"]},"commit2Childs":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"505b4ec77395cb555366a54a97b24b0906a3d056":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["505b4ec77395cb555366a54a97b24b0906a3d056","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}