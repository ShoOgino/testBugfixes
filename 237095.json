{"path":"lucene/core/src/java/org/apache/lucene/index/FieldInfos#hasFreq().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos#hasFreq().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#hasFreq().mjava","sourceNew":"  /** Returns true if any fields have freqs */\n  public boolean hasFreq() {\n    if (isReadOnly()) {\n      return hasFreq;\n    }\n    // mutable FIs must check!\n    for (FieldInfo fi : this) {\n      if (fi.isIndexed && fi.indexOptions != IndexOptions.DOCS_ONLY) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n","sourceOld":"  /** Returns true if any fields have freqs */\n  public boolean hasFreq() {\n    if (isReadOnly()) {\n      return hasFreq;\n    }\n    // mutable FIs must check!\n    for (FieldInfo fi : this) {\n      if (fi.isIndexed && fi.indexOptions != IndexOptions.DOCS_ONLY) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6eee1e5a8555d83dd8f2f2e3c0a4ccec8e7cf9b","date":1337136355,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos#hasFreq().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos#hasFreq().mjava","sourceNew":"  /** Returns true if any fields have freqs */\n  // nocommit\n  public abstract boolean hasFreq();\n\n","sourceOld":"  /** Returns true if any fields have freqs */\n  public boolean hasFreq() {\n    if (isReadOnly()) {\n      return hasFreq;\n    }\n    // mutable FIs must check!\n    for (FieldInfo fi : this) {\n      if (fi.isIndexed && fi.indexOptions != IndexOptions.DOCS_ONLY) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"76923f6a33f2c4bec7f584e3f251261afe7ea276","date":1337149711,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos#hasFreq().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos#hasFreq().mjava","sourceNew":"  /** Returns true if any fields have freqs */\n  public boolean hasFreq() {\n    for (FieldInfo fi : this) {\n      if (fi.isIndexed() && fi.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n","sourceOld":"  /** Returns true if any fields have freqs */\n  // nocommit\n  public abstract boolean hasFreq();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a851824c09818632c94eba41e60ef5e72e323c8e","date":1337355760,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos#hasFreq().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos#hasFreq().mjava","sourceNew":"  /** Returns true if any fields have freqs */\n  public boolean hasFreq() {\n    return hasFreq;\n  }\n\n","sourceOld":"  /** Returns true if any fields have freqs */\n  public boolean hasFreq() {\n    for (FieldInfo fi : this) {\n      if (fi.isIndexed() && fi.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos#hasFreq().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos#hasFreq().mjava","sourceNew":"  /** Returns true if any fields have freqs */\n  public boolean hasFreq() {\n    return hasFreq;\n  }\n\n","sourceOld":"  /** Returns true if any fields have freqs */\n  public boolean hasFreq() {\n    if (isReadOnly()) {\n      return hasFreq;\n    }\n    // mutable FIs must check!\n    for (FieldInfo fi : this) {\n      if (fi.isIndexed && fi.indexOptions != IndexOptions.DOCS_ONLY) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"76923f6a33f2c4bec7f584e3f251261afe7ea276":["f6eee1e5a8555d83dd8f2f2e3c0a4ccec8e7cf9b"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","a851824c09818632c94eba41e60ef5e72e323c8e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a851824c09818632c94eba41e60ef5e72e323c8e":["76923f6a33f2c4bec7f584e3f251261afe7ea276"],"f6eee1e5a8555d83dd8f2f2e3c0a4ccec8e7cf9b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"]},"commit2Childs":{"76923f6a33f2c4bec7f584e3f251261afe7ea276":["a851824c09818632c94eba41e60ef5e72e323c8e"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","f6eee1e5a8555d83dd8f2f2e3c0a4ccec8e7cf9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a851824c09818632c94eba41e60ef5e72e323c8e":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"f6eee1e5a8555d83dd8f2f2e3c0a4ccec8e7cf9b":["76923f6a33f2c4bec7f584e3f251261afe7ea276"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}