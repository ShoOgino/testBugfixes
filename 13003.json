{"path":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.OrdScoreAllGroupHeadsCollector.GroupHead#GroupHead(int,BytesRef).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.OrdScoreAllGroupHeadsCollector.GroupHead#GroupHead(int,BytesRef).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.OrdScoreAllGroupHeadsCollector.GroupHead#GroupHead(int,BytesRef).mjava","sourceNew":"      private GroupHead(int doc, BytesRef groupValue) throws IOException {\n        super(groupValue, doc + readerContext.docBase);\n        sortValues = new BytesRef[sortsIndex.length];\n        sortOrds = new int[sortsIndex.length];\n        scores = new float[sortsIndex.length];\n        for (int i = 0; i < sortsIndex.length; i++) {\n          if (fields[i].getType() == SortField.Type.SCORE) {\n            scores[i] = scorer.score();\n          } else {\n            sortValues[i] = sortsIndex[i].getTerm(doc, new BytesRef());\n            sortOrds[i] = sortsIndex[i].getOrd(doc);\n          }\n        }\n\n      }\n\n","sourceOld":"      private GroupHead(int doc, BytesRef groupValue) throws IOException {\n        super(groupValue, doc + readerContext.docBase);\n        sortValues = new BytesRef[sortsIndex.length];\n        sortOrds = new int[sortsIndex.length];\n        scores = new float[sortsIndex.length];\n        for (int i = 0; i < sortsIndex.length; i++) {\n          if (fields[i].getType() == SortField.Type.SCORE) {\n            scores[i] = scorer.score();\n          } else {\n            sortValues[i] = sortsIndex[i].getTerm(doc, new BytesRef());\n            sortOrds[i] = sortsIndex[i].getOrd(doc);\n          }\n        }\n\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e2893fd5349134af382d33ccc3d84840394c6c1","date":1353682567,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.OrdScoreAllGroupHeadsCollector.GroupHead#GroupHead(int,BytesRef).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.OrdScoreAllGroupHeadsCollector.GroupHead#GroupHead(int,BytesRef).mjava","sourceNew":"      private GroupHead(int doc, BytesRef groupValue) throws IOException {\n        super(groupValue, doc + readerContext.docBase);\n        sortValues = new BytesRef[sortsIndex.length];\n        sortOrds = new int[sortsIndex.length];\n        scores = new float[sortsIndex.length];\n        for (int i = 0; i < sortsIndex.length; i++) {\n          if (fields[i].getType() == SortField.Type.SCORE) {\n            scores[i] = scorer.score();\n          } else {\n            sortOrds[i] = sortsIndex[i].getOrd(doc);\n            sortValues[i] = new BytesRef();\n            if (sortOrds[i] != -1) {\n              sortValues[i] = sortsIndex[i].getTerm(doc, sortValues[i]);\n            }\n          }\n        }\n      }\n\n","sourceOld":"      private GroupHead(int doc, BytesRef groupValue) throws IOException {\n        super(groupValue, doc + readerContext.docBase);\n        sortValues = new BytesRef[sortsIndex.length];\n        sortOrds = new int[sortsIndex.length];\n        scores = new float[sortsIndex.length];\n        for (int i = 0; i < sortsIndex.length; i++) {\n          if (fields[i].getType() == SortField.Type.SCORE) {\n            scores[i] = scorer.score();\n          } else {\n            sortValues[i] = sortsIndex[i].getTerm(doc, new BytesRef());\n            sortOrds[i] = sortsIndex[i].getOrd(doc);\n          }\n        }\n\n      }\n\n","bugFix":null,"bugIntro":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9d7e5f3aa5935964617824d1f9b2599ddb334464","date":1353762831,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.OrdScoreAllGroupHeadsCollector.GroupHead#GroupHead(int,BytesRef).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.OrdScoreAllGroupHeadsCollector.GroupHead#GroupHead(int,BytesRef).mjava","sourceNew":"      private GroupHead(int doc, BytesRef groupValue) throws IOException {\n        super(groupValue, doc + readerContext.docBase);\n        sortValues = new BytesRef[sortsIndex.length];\n        sortOrds = new int[sortsIndex.length];\n        scores = new float[sortsIndex.length];\n        for (int i = 0; i < sortsIndex.length; i++) {\n          if (fields[i].getType() == SortField.Type.SCORE) {\n            scores[i] = scorer.score();\n          } else {\n            sortOrds[i] = sortsIndex[i].getOrd(doc);\n            sortValues[i] = new BytesRef();\n            if (sortOrds[i] != -1) {\n              sortsIndex[i].get(doc, sortValues[i]);\n            }\n          }\n        }\n      }\n\n","sourceOld":"      private GroupHead(int doc, BytesRef groupValue) throws IOException {\n        super(groupValue, doc + readerContext.docBase);\n        sortValues = new BytesRef[sortsIndex.length];\n        sortOrds = new int[sortsIndex.length];\n        scores = new float[sortsIndex.length];\n        for (int i = 0; i < sortsIndex.length; i++) {\n          if (fields[i].getType() == SortField.Type.SCORE) {\n            scores[i] = scorer.score();\n          } else {\n            sortOrds[i] = sortsIndex[i].getOrd(doc);\n            sortValues[i] = new BytesRef();\n            if (sortOrds[i] != -1) {\n              sortValues[i] = sortsIndex[i].getTerm(doc, sortValues[i]);\n            }\n          }\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.OrdScoreAllGroupHeadsCollector.GroupHead#GroupHead(int,BytesRef).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.OrdScoreAllGroupHeadsCollector.GroupHead#GroupHead(int,BytesRef).mjava","sourceNew":"      private GroupHead(int doc, BytesRef groupValue) throws IOException {\n        super(groupValue, doc + readerContext.docBase);\n        sortValues = new BytesRef[sortsIndex.length];\n        sortOrds = new int[sortsIndex.length];\n        scores = new float[sortsIndex.length];\n        for (int i = 0; i < sortsIndex.length; i++) {\n          if (fields[i].getType() == SortField.Type.SCORE) {\n            scores[i] = scorer.score();\n          } else {\n            sortOrds[i] = sortsIndex[i].getOrd(doc);\n            sortValues[i] = new BytesRef();\n            if (sortOrds[i] != -1) {\n              sortsIndex[i].get(doc, sortValues[i]);\n            }\n          }\n        }\n      }\n\n","sourceOld":"      private GroupHead(int doc, BytesRef groupValue) throws IOException {\n        super(groupValue, doc + readerContext.docBase);\n        sortValues = new BytesRef[sortsIndex.length];\n        sortOrds = new int[sortsIndex.length];\n        scores = new float[sortsIndex.length];\n        for (int i = 0; i < sortsIndex.length; i++) {\n          if (fields[i].getType() == SortField.Type.SCORE) {\n            scores[i] = scorer.score();\n          } else {\n            sortValues[i] = sortsIndex[i].getTerm(doc, new BytesRef());\n            sortOrds[i] = sortsIndex[i].getOrd(doc);\n          }\n        }\n\n      }\n\n","bugFix":["4e622d1d7e4496e3a8c1709c84e5be91ced69889"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf","date":1401983689,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.OrdScoreAllGroupHeadsCollector.GroupHead#GroupHead(int,BytesRef).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.OrdScoreAllGroupHeadsCollector.GroupHead#GroupHead(int,BytesRef).mjava","sourceNew":"      private GroupHead(int doc, BytesRef groupValue) throws IOException {\n        super(groupValue, doc + readerContext.docBase);\n        sortValues = new BytesRef[sortsIndex.length];\n        sortOrds = new int[sortsIndex.length];\n        scores = new float[sortsIndex.length];\n        for (int i = 0; i < sortsIndex.length; i++) {\n          if (fields[i].getType() == SortField.Type.SCORE) {\n            scores[i] = scorer.score();\n          } else {\n            sortOrds[i] = sortsIndex[i].getOrd(doc);\n            sortValues[i] = new BytesRef();\n            if (sortOrds[i] != -1) {\n              sortValues[i].copyBytes(sortsIndex[i].get(doc));\n            }\n          }\n        }\n      }\n\n","sourceOld":"      private GroupHead(int doc, BytesRef groupValue) throws IOException {\n        super(groupValue, doc + readerContext.docBase);\n        sortValues = new BytesRef[sortsIndex.length];\n        sortOrds = new int[sortsIndex.length];\n        scores = new float[sortsIndex.length];\n        for (int i = 0; i < sortsIndex.length; i++) {\n          if (fields[i].getType() == SortField.Type.SCORE) {\n            scores[i] = scorer.score();\n          } else {\n            sortOrds[i] = sortsIndex[i].getOrd(doc);\n            sortValues[i] = new BytesRef();\n            if (sortOrds[i] != -1) {\n              sortsIndex[i].get(doc, sortValues[i]);\n            }\n          }\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","date":1407854805,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.OrdScoreAllGroupHeadsCollector.GroupHead#GroupHead(int,BytesRef).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.OrdScoreAllGroupHeadsCollector.GroupHead#GroupHead(int,BytesRef).mjava","sourceNew":"      private GroupHead(int doc, BytesRef groupValue) throws IOException {\n        super(groupValue, doc + readerContext.docBase);\n        sortValues = new BytesRefBuilder[sortsIndex.length];\n        sortOrds = new int[sortsIndex.length];\n        scores = new float[sortsIndex.length];\n        for (int i = 0; i < sortsIndex.length; i++) {\n          if (fields[i].getType() == SortField.Type.SCORE) {\n            scores[i] = scorer.score();\n          } else {\n            sortOrds[i] = sortsIndex[i].getOrd(doc);\n            sortValues[i] = new BytesRefBuilder();\n            if (sortOrds[i] != -1) {\n              sortValues[i].copyBytes(sortsIndex[i].get(doc));\n            }\n          }\n        }\n      }\n\n","sourceOld":"      private GroupHead(int doc, BytesRef groupValue) throws IOException {\n        super(groupValue, doc + readerContext.docBase);\n        sortValues = new BytesRef[sortsIndex.length];\n        sortOrds = new int[sortsIndex.length];\n        scores = new float[sortsIndex.length];\n        for (int i = 0; i < sortsIndex.length; i++) {\n          if (fields[i].getType() == SortField.Type.SCORE) {\n            scores[i] = scorer.score();\n          } else {\n            sortOrds[i] = sortsIndex[i].getOrd(doc);\n            sortValues[i] = new BytesRef();\n            if (sortOrds[i] != -1) {\n              sortValues[i].copyBytes(sortsIndex[i].get(doc));\n            }\n          }\n        }\n      }\n\n","bugFix":["6e2893fd5349134af382d33ccc3d84840394c6c1","4e622d1d7e4496e3a8c1709c84e5be91ced69889"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4db7976c38cb8d2fbd54bae4fa5ec4b0f0d5c789","date":1439672757,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.OrdScoreAllGroupHeadsCollector.GroupHead#GroupHead(int,BytesRef).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.OrdScoreAllGroupHeadsCollector.GroupHead#GroupHead(int,BytesRef).mjava","sourceNew":"      GroupHead(int doc, BytesRef groupValue) throws IOException {\n        super(groupValue, doc + readerContext.docBase);\n        sortValues = new BytesRefBuilder[sortsIndex.length];\n        sortOrds = new int[sortsIndex.length];\n        scores = new float[sortsIndex.length];\n        for (int i = 0; i < sortsIndex.length; i++) {\n          if (fields[i].getType() == SortField.Type.SCORE) {\n            scores[i] = scorer.score();\n          } else {\n            sortOrds[i] = sortsIndex[i].getOrd(doc);\n            sortValues[i] = new BytesRefBuilder();\n            if (sortOrds[i] != -1) {\n              sortValues[i].copyBytes(sortsIndex[i].get(doc));\n            }\n          }\n        }\n      }\n\n","sourceOld":"      private GroupHead(int doc, BytesRef groupValue) throws IOException {\n        super(groupValue, doc + readerContext.docBase);\n        sortValues = new BytesRefBuilder[sortsIndex.length];\n        sortOrds = new int[sortsIndex.length];\n        scores = new float[sortsIndex.length];\n        for (int i = 0; i < sortsIndex.length; i++) {\n          if (fields[i].getType() == SortField.Type.SCORE) {\n            scores[i] = scorer.score();\n          } else {\n            sortOrds[i] = sortsIndex[i].getOrd(doc);\n            sortValues[i] = new BytesRefBuilder();\n            if (sortOrds[i] != -1) {\n              sortValues[i].copyBytes(sortsIndex[i].get(doc));\n            }\n          }\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.OrdScoreAllGroupHeadsCollector.GroupHead#GroupHead(int,BytesRef).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.OrdScoreAllGroupHeadsCollector.GroupHead#GroupHead(int,BytesRef).mjava","sourceNew":"      GroupHead(int doc, BytesRef groupValue) throws IOException {\n        super(groupValue, doc + readerContext.docBase);\n        sortValues = new BytesRefBuilder[sortsIndex.length];\n        sortOrds = new int[sortsIndex.length];\n        scores = new float[sortsIndex.length];\n        setDoc(doc);\n        for (int i = 0; i < sortsIndex.length; i++) {\n          if (fields[i].getType() == SortField.Type.SCORE) {\n            scores[i] = scorer.score();\n          } else {\n            if (doc == sortsIndex[i].docID()) {\n              sortOrds[i] = sortsIndex[i].ordValue();\n            } else {\n              sortOrds[i] = -1;\n            }\n            sortValues[i] = new BytesRefBuilder();\n            if (sortOrds[i] != -1) {\n              sortValues[i].copyBytes(sortsIndex[i].binaryValue());\n            }\n          }\n        }\n      }\n\n","sourceOld":"      GroupHead(int doc, BytesRef groupValue) throws IOException {\n        super(groupValue, doc + readerContext.docBase);\n        sortValues = new BytesRefBuilder[sortsIndex.length];\n        sortOrds = new int[sortsIndex.length];\n        scores = new float[sortsIndex.length];\n        for (int i = 0; i < sortsIndex.length; i++) {\n          if (fields[i].getType() == SortField.Type.SCORE) {\n            scores[i] = scorer.score();\n          } else {\n            sortOrds[i] = sortsIndex[i].getOrd(doc);\n            sortValues[i] = new BytesRefBuilder();\n            if (sortOrds[i] != -1) {\n              sortValues[i].copyBytes(sortsIndex[i].get(doc));\n            }\n          }\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.OrdScoreAllGroupHeadsCollector.GroupHead#GroupHead(int,BytesRef).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.OrdScoreAllGroupHeadsCollector.GroupHead#GroupHead(int,BytesRef).mjava","sourceNew":"      GroupHead(int doc, BytesRef groupValue) throws IOException {\n        super(groupValue, doc + readerContext.docBase);\n        sortValues = new BytesRefBuilder[sortsIndex.length];\n        sortOrds = new int[sortsIndex.length];\n        scores = new float[sortsIndex.length];\n        setDoc(doc);\n        for (int i = 0; i < sortsIndex.length; i++) {\n          if (fields[i].getType() == SortField.Type.SCORE) {\n            scores[i] = scorer.score();\n          } else {\n            if (doc == sortsIndex[i].docID()) {\n              sortOrds[i] = sortsIndex[i].ordValue();\n            } else {\n              sortOrds[i] = -1;\n            }\n            sortValues[i] = new BytesRefBuilder();\n            if (sortOrds[i] != -1) {\n              sortValues[i].copyBytes(sortsIndex[i].binaryValue());\n            }\n          }\n        }\n      }\n\n","sourceOld":"      GroupHead(int doc, BytesRef groupValue) throws IOException {\n        super(groupValue, doc + readerContext.docBase);\n        sortValues = new BytesRefBuilder[sortsIndex.length];\n        sortOrds = new int[sortsIndex.length];\n        scores = new float[sortsIndex.length];\n        for (int i = 0; i < sortsIndex.length; i++) {\n          if (fields[i].getType() == SortField.Type.SCORE) {\n            scores[i] = scorer.score();\n          } else {\n            sortOrds[i] = sortsIndex[i].getOrd(doc);\n            sortValues[i] = new BytesRefBuilder();\n            if (sortOrds[i] != -1) {\n              sortValues[i].copyBytes(sortsIndex[i].get(doc));\n            }\n          }\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.OrdScoreAllGroupHeadsCollector.GroupHead#GroupHead(int,BytesRef).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.OrdScoreAllGroupHeadsCollector.GroupHead#GroupHead(int,BytesRef).mjava","sourceNew":"      GroupHead(int doc, BytesRef groupValue) throws IOException {\n        super(groupValue, doc + readerContext.docBase);\n        sortValues = new BytesRefBuilder[sortsIndex.length];\n        sortOrds = new int[sortsIndex.length];\n        scores = new float[sortsIndex.length];\n        setDoc(doc);\n        for (int i = 0; i < sortsIndex.length; i++) {\n          if (fields[i].getType() == SortField.Type.SCORE) {\n            scores[i] = scorer.score();\n          } else {\n            if (doc == sortsIndex[i].docID()) {\n              sortOrds[i] = sortsIndex[i].ordValue();\n            } else {\n              sortOrds[i] = -1;\n            }\n            sortValues[i] = new BytesRefBuilder();\n            if (sortOrds[i] != -1) {\n              sortValues[i].copyBytes(sortsIndex[i].binaryValue());\n            }\n          }\n        }\n      }\n\n","sourceOld":"      GroupHead(int doc, BytesRef groupValue) throws IOException {\n        super(groupValue, doc + readerContext.docBase);\n        sortValues = new BytesRefBuilder[sortsIndex.length];\n        sortOrds = new int[sortsIndex.length];\n        scores = new float[sortsIndex.length];\n        for (int i = 0; i < sortsIndex.length; i++) {\n          if (fields[i].getType() == SortField.Type.SCORE) {\n            scores[i] = scorer.score();\n          } else {\n            sortOrds[i] = sortsIndex[i].getOrd(doc);\n            sortValues[i] = new BytesRefBuilder();\n            if (sortOrds[i] != -1) {\n              sortValues[i].copyBytes(sortsIndex[i].get(doc));\n            }\n          }\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ae958a739da1866696f442384393ba2f13e33e5","date":1491819018,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.OrdScoreAllGroupHeadsCollector.GroupHead#GroupHead(int,BytesRef).mjava","sourceNew":null,"sourceOld":"      GroupHead(int doc, BytesRef groupValue) throws IOException {\n        super(groupValue, doc + readerContext.docBase);\n        sortValues = new BytesRefBuilder[sortsIndex.length];\n        sortOrds = new int[sortsIndex.length];\n        scores = new float[sortsIndex.length];\n        setDoc(doc);\n        for (int i = 0; i < sortsIndex.length; i++) {\n          if (fields[i].getType() == SortField.Type.SCORE) {\n            scores[i] = scorer.score();\n          } else {\n            if (doc == sortsIndex[i].docID()) {\n              sortOrds[i] = sortsIndex[i].ordValue();\n            } else {\n              sortOrds[i] = -1;\n            }\n            sortValues[i] = new BytesRefBuilder();\n            if (sortOrds[i] != -1) {\n              sortValues[i].copyBytes(sortsIndex[i].binaryValue());\n            }\n          }\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.OrdScoreAllGroupHeadsCollector.GroupHead#GroupHead(int,BytesRef).mjava","sourceNew":null,"sourceOld":"      GroupHead(int doc, BytesRef groupValue) throws IOException {\n        super(groupValue, doc + readerContext.docBase);\n        sortValues = new BytesRefBuilder[sortsIndex.length];\n        sortOrds = new int[sortsIndex.length];\n        scores = new float[sortsIndex.length];\n        setDoc(doc);\n        for (int i = 0; i < sortsIndex.length; i++) {\n          if (fields[i].getType() == SortField.Type.SCORE) {\n            scores[i] = scorer.score();\n          } else {\n            if (doc == sortsIndex[i].docID()) {\n              sortOrds[i] = sortsIndex[i].ordValue();\n            } else {\n              sortOrds[i] = -1;\n            }\n            sortValues[i] = new BytesRefBuilder();\n            if (sortOrds[i] != -1) {\n              sortValues[i].copyBytes(sortsIndex[i].binaryValue());\n            }\n          }\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"6e2893fd5349134af382d33ccc3d84840394c6c1":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["4db7976c38cb8d2fbd54bae4fa5ec4b0f0d5c789","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["b89678825b68eccaf09e6ab71675fc0b0af1e099","9d7e5f3aa5935964617824d1f9b2599ddb334464"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4db7976c38cb8d2fbd54bae4fa5ec4b0f0d5c789","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["4db7976c38cb8d2fbd54bae4fa5ec4b0f0d5c789"],"9d7e5f3aa5935964617824d1f9b2599ddb334464":["6e2893fd5349134af382d33ccc3d84840394c6c1"],"4db7976c38cb8d2fbd54bae4fa5ec4b0f0d5c789":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7ae958a739da1866696f442384393ba2f13e33e5"],"7ae958a739da1866696f442384393ba2f13e33e5":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"6e2893fd5349134af382d33ccc3d84840394c6c1":["9d7e5f3aa5935964617824d1f9b2599ddb334464"],"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["4db7976c38cb8d2fbd54bae4fa5ec4b0f0d5c789"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["6e2893fd5349134af382d33ccc3d84840394c6c1","d4d69c535930b5cce125cff868d40f6373dc27d4"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","7ae958a739da1866696f442384393ba2f13e33e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"9d7e5f3aa5935964617824d1f9b2599ddb334464":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"4db7976c38cb8d2fbd54bae4fa5ec4b0f0d5c789":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7ae958a739da1866696f442384393ba2f13e33e5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}