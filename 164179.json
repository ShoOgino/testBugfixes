{"path":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighterRanking#newSentence(Random,int).mjava","commits":[{"id":"4b3d16cba9355e2e97962eb1c441bbd0b6735c15","date":1357426290,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighterRanking#newSentence(Random,int).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/postingshighlight/TestPostingsHighlighterRanking#newSentence(Random,int).mjava","sourceNew":"  /** \n   * returns a new random sentence, up to maxSentenceLength \"words\" in length.\n   * each word is a single character (a-z). The first one is capitalized.\n   */\n  private String newSentence(Random r, int maxSentenceLength) {\n    StringBuilder sb = new StringBuilder();\n    int numElements = _TestUtil.nextInt(r, 1, maxSentenceLength);\n    for (int i = 0; i < numElements; i++) {\n      if (sb.length() > 0) {\n        sb.append(' ');\n        sb.append((char)_TestUtil.nextInt(r, 'a', 'z'));\n      } else {\n        // capitalize the first word to help breakiterator\n        sb.append((char)_TestUtil.nextInt(r, 'A', 'Z'));\n      }\n    }\n    sb.append(\". \"); // finalize sentence\n    return sb.toString();\n  }\n\n","sourceOld":"  /** \n   * returns a new random sentence, up to maxSentenceLength \"words\" in length.\n   * each word is a single character (a-z). The first one is capitalized.\n   */\n  private String newSentence(Random r, int maxSentenceLength) {\n    StringBuilder sb = new StringBuilder();\n    int numElements = _TestUtil.nextInt(r, 1, maxSentenceLength);\n    for (int i = 0; i < numElements; i++) {\n      if (sb.length() > 0) {\n        sb.append(' ');\n        sb.append((char)_TestUtil.nextInt(r, 'a', 'z'));\n      } else {\n        // capitalize the first word to help breakiterator\n        sb.append((char)_TestUtil.nextInt(r, 'A', 'Z'));\n      }\n    }\n    sb.append(\". \"); // finalize sentence\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighterRanking#newSentence(Random,int).mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * returns a new random sentence, up to maxSentenceLength \"words\" in length.\n   * each word is a single character (a-z). The first one is capitalized.\n   */\n  private String newSentence(Random r, int maxSentenceLength) {\n    StringBuilder sb = new StringBuilder();\n    int numElements = _TestUtil.nextInt(r, 1, maxSentenceLength);\n    for (int i = 0; i < numElements; i++) {\n      if (sb.length() > 0) {\n        sb.append(' ');\n        sb.append((char)_TestUtil.nextInt(r, 'a', 'z'));\n      } else {\n        // capitalize the first word to help breakiterator\n        sb.append((char)_TestUtil.nextInt(r, 'A', 'Z'));\n      }\n    }\n    sb.append(\". \"); // finalize sentence\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighterRanking#newSentence(Random,int).mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighterRanking#newSentence(Random,int).mjava","sourceNew":"  /** \n   * returns a new random sentence, up to maxSentenceLength \"words\" in length.\n   * each word is a single character (a-z). The first one is capitalized.\n   */\n  private String newSentence(Random r, int maxSentenceLength) {\n    StringBuilder sb = new StringBuilder();\n    int numElements = TestUtil.nextInt(r, 1, maxSentenceLength);\n    for (int i = 0; i < numElements; i++) {\n      if (sb.length() > 0) {\n        sb.append(' ');\n        sb.append((char) TestUtil.nextInt(r, 'a', 'z'));\n      } else {\n        // capitalize the first word to help breakiterator\n        sb.append((char) TestUtil.nextInt(r, 'A', 'Z'));\n      }\n    }\n    sb.append(\". \"); // finalize sentence\n    return sb.toString();\n  }\n\n","sourceOld":"  /** \n   * returns a new random sentence, up to maxSentenceLength \"words\" in length.\n   * each word is a single character (a-z). The first one is capitalized.\n   */\n  private String newSentence(Random r, int maxSentenceLength) {\n    StringBuilder sb = new StringBuilder();\n    int numElements = _TestUtil.nextInt(r, 1, maxSentenceLength);\n    for (int i = 0; i < numElements; i++) {\n      if (sb.length() > 0) {\n        sb.append(' ');\n        sb.append((char)_TestUtil.nextInt(r, 'a', 'z'));\n      } else {\n        // capitalize the first word to help breakiterator\n        sb.append((char)_TestUtil.nextInt(r, 'A', 'Z'));\n      }\n    }\n    sb.append(\". \"); // finalize sentence\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"381618eac2691bb34ab9a3fca76ad55c6274517e","date":1495564791,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighterRanking#newSentence(Random,int).mjava","sourceNew":null,"sourceOld":"  /** \n   * returns a new random sentence, up to maxSentenceLength \"words\" in length.\n   * each word is a single character (a-z). The first one is capitalized.\n   */\n  private String newSentence(Random r, int maxSentenceLength) {\n    StringBuilder sb = new StringBuilder();\n    int numElements = TestUtil.nextInt(r, 1, maxSentenceLength);\n    for (int i = 0; i < numElements; i++) {\n      if (sb.length() > 0) {\n        sb.append(' ');\n        sb.append((char) TestUtil.nextInt(r, 'a', 'z'));\n      } else {\n        // capitalize the first word to help breakiterator\n        sb.append((char) TestUtil.nextInt(r, 'A', 'Z'));\n      }\n    }\n    sb.append(\". \"); // finalize sentence\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighterRanking#newSentence(Random,int).mjava","sourceNew":null,"sourceOld":"  /** \n   * returns a new random sentence, up to maxSentenceLength \"words\" in length.\n   * each word is a single character (a-z). The first one is capitalized.\n   */\n  private String newSentence(Random r, int maxSentenceLength) {\n    StringBuilder sb = new StringBuilder();\n    int numElements = TestUtil.nextInt(r, 1, maxSentenceLength);\n    for (int i = 0; i < numElements; i++) {\n      if (sb.length() > 0) {\n        sb.append(' ');\n        sb.append((char) TestUtil.nextInt(r, 'a', 'z'));\n      } else {\n        // capitalize the first word to help breakiterator\n        sb.append((char) TestUtil.nextInt(r, 'A', 'Z'));\n      }\n    }\n    sb.append(\". \"); // finalize sentence\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"381618eac2691bb34ab9a3fca76ad55c6274517e":["6613659748fe4411a7dcf85266e55db1f95f7315"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4b3d16cba9355e2e97962eb1c441bbd0b6735c15"],"4b3d16cba9355e2e97962eb1c441bbd0b6735c15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["6613659748fe4411a7dcf85266e55db1f95f7315","381618eac2691bb34ab9a3fca76ad55c6274517e"],"6613659748fe4411a7dcf85266e55db1f95f7315":["4b3d16cba9355e2e97962eb1c441bbd0b6735c15"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["381618eac2691bb34ab9a3fca76ad55c6274517e"]},"commit2Childs":{"381618eac2691bb34ab9a3fca76ad55c6274517e":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"4b3d16cba9355e2e97962eb1c441bbd0b6735c15":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","6613659748fe4411a7dcf85266e55db1f95f7315"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"6613659748fe4411a7dcf85266e55db1f95f7315":["381618eac2691bb34ab9a3fca76ad55c6274517e","e9017cf144952056066919f1ebc7897ff9bd71b1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","4b3d16cba9355e2e97962eb1c441bbd0b6735c15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}