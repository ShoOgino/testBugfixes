{"path":"solr/core/src/test/org/apache/solr/cloud/autoscaling/IndexSizeTriggerTest.CapturingTriggerListener#onEvent(TriggerEvent,TriggerEventProcessorStage,String,ActionContext,Throwable,String).mjava","commits":[{"id":"ce71a9836bf1eba34a0ab31884e9eb8ad3f1cef1","date":1523453934,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/IndexSizeTriggerTest.CapturingTriggerListener#onEvent(TriggerEvent,TriggerEventProcessorStage,String,ActionContext,Throwable,String).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public synchronized void onEvent(TriggerEvent event, TriggerEventProcessorStage stage, String actionName,\n                                     ActionContext context, Throwable error, String message) {\n      List<CapturedEvent> lst = listenerEvents.computeIfAbsent(config.name, s -> new ArrayList<>());\n      CapturedEvent ev = new CapturedEvent(timeSource.getTimeNs(), context, config, stage, actionName, event, message);\n      log.info(\"=======> \" + ev);\n      lst.add(ev);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43345f1452f9510f8aaadae6156fe0c834e7d957","date":1523483670,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/IndexSizeTriggerTest.CapturingTriggerListener#onEvent(TriggerEvent,TriggerEventProcessorStage,String,ActionContext,Throwable,String).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public synchronized void onEvent(TriggerEvent event, TriggerEventProcessorStage stage, String actionName,\n                                     ActionContext context, Throwable error, String message) {\n      List<CapturedEvent> lst = listenerEvents.computeIfAbsent(config.name, s -> new ArrayList<>());\n      CapturedEvent ev = new CapturedEvent(timeSource.getTimeNs(), context, config, stage, actionName, event, message);\n      log.info(\"=======> \" + ev);\n      lst.add(ev);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4","date":1588172214,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/IndexSizeTriggerTest.CapturingTriggerListener#onEvent(TriggerEvent,TriggerEventProcessorStage,String,ActionContext,Throwable,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/IndexSizeTriggerTest.CapturingTriggerListener#onEvent(TriggerEvent,TriggerEventProcessorStage,String,ActionContext,Throwable,String).mjava","sourceNew":"    @Override\n    public synchronized void onEvent(TriggerEvent event, TriggerEventProcessorStage stage, String actionName,\n                                     ActionContext context, Throwable error, String message) {\n      List<CapturedEvent> lst = listenerEvents.computeIfAbsent(config.name, s -> new ArrayList<>());\n      CapturedEvent ev = new CapturedEvent(timeSource.getTimeNs(), context, config, stage, actionName, event, message);\n      log.info(\"=======> {}\", ev);\n      lst.add(ev);\n    }\n\n","sourceOld":"    @Override\n    public synchronized void onEvent(TriggerEvent event, TriggerEventProcessorStage stage, String actionName,\n                                     ActionContext context, Throwable error, String message) {\n      List<CapturedEvent> lst = listenerEvents.computeIfAbsent(config.name, s -> new ArrayList<>());\n      CapturedEvent ev = new CapturedEvent(timeSource.getTimeNs(), context, config, stage, actionName, event, message);\n      log.info(\"=======> \" + ev);\n      lst.add(ev);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/IndexSizeTriggerTest.CapturingTriggerListener#onEvent(TriggerEvent,TriggerEventProcessorStage,String,ActionContext,Throwable,String).mjava","sourceNew":null,"sourceOld":"    @Override\n    public synchronized void onEvent(TriggerEvent event, TriggerEventProcessorStage stage, String actionName,\n                                     ActionContext context, Throwable error, String message) {\n      List<CapturedEvent> lst = listenerEvents.computeIfAbsent(config.name, s -> new ArrayList<>());\n      CapturedEvent ev = new CapturedEvent(timeSource.getTimeNs(), context, config, stage, actionName, event, message);\n      log.info(\"=======> {}\", ev);\n      lst.add(ev);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f504512a03d978990cbff30db0522b354e846db":["fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4"],"ce71a9836bf1eba34a0ab31884e9eb8ad3f1cef1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4":["43345f1452f9510f8aaadae6156fe0c834e7d957"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"43345f1452f9510f8aaadae6156fe0c834e7d957":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ce71a9836bf1eba34a0ab31884e9eb8ad3f1cef1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ce71a9836bf1eba34a0ab31884e9eb8ad3f1cef1":["43345f1452f9510f8aaadae6156fe0c834e7d957"],"fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4":["3f504512a03d978990cbff30db0522b354e846db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ce71a9836bf1eba34a0ab31884e9eb8ad3f1cef1","43345f1452f9510f8aaadae6156fe0c834e7d957"],"43345f1452f9510f8aaadae6156fe0c834e7d957":["fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}