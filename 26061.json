{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/request/SchemaTest#testMultipleUpdateRequestAccuracy().mjava","commits":[{"id":"c6ff97491f7791aa98e90d71c4c7fee58688c37b","date":1434817448,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/SchemaTest#testMultipleUpdateRequestAccuracy().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMultipleUpdateRequestAccuracy() throws Exception {\n    String fieldTypeName = \"accuracyTextField\";\n    SchemaRequest.AddFieldType addFieldTypeRequest = createFieldTypeRequest(fieldTypeName);\n\n    String field1Name = \"accuracyField1\";\n    String field2Name = \"accuracyField2\";\n    Map<String, Object> fieldAttributes = new LinkedHashMap<>();\n    fieldAttributes.put(\"name\", field1Name);\n    fieldAttributes.put(\"type\", fieldTypeName);\n    fieldAttributes.put(\"stored\", true);\n    fieldAttributes.put(\"indexed\", true);\n    SchemaRequest.AddField addFieldName1Request = new SchemaRequest.AddField(fieldAttributes);\n    fieldAttributes.put(\"name\", field2Name);\n    SchemaRequest.AddField addFieldName2Request = new SchemaRequest.AddField(fieldAttributes);\n\n    List<SchemaRequest.Update> list = new ArrayList<>(3);\n    list.add(addFieldTypeRequest);\n    list.add(addFieldName1Request);\n    list.add(addFieldName2Request);\n    SchemaRequest.MultiUpdate multiUpdateRequest = new SchemaRequest.MultiUpdate(list);\n    SchemaResponse.UpdateResponse multipleUpdatesResponse = multiUpdateRequest.process(getSolrClient());\n    assertValidSchemaResponse(multipleUpdatesResponse);\n\n    SchemaRequest.FieldType fieldTypeSchemaRequest =\n        new SchemaRequest.FieldType(fieldTypeName);\n    SchemaResponse.FieldTypeResponse fieldTypeResponse = fieldTypeSchemaRequest.process(getSolrClient());\n    assertValidSchemaResponse(fieldTypeResponse);\n    FieldTypeRepresentation fieldTypeRepresentation = fieldTypeResponse.getFieldType();\n    assertThat(fieldTypeName, is(equalTo(fieldTypeRepresentation.getAttributes().get(\"name\"))));\n\n    SchemaRequest.Field field1SchemaRequest = new SchemaRequest.Field(field1Name);\n    SchemaResponse.FieldResponse field1Response = field1SchemaRequest.process(getSolrClient());\n    assertValidSchemaResponse(field1Response);\n    Map<String, ?> field1Attributes = field1Response.getField();\n    assertThat(field1Name, is(equalTo(field1Attributes.get(\"name\"))));\n    assertThat(fieldTypeName, is(equalTo(field1Attributes.get(\"type\"))));\n    assertThat(true, is(equalTo(field1Attributes.get(\"stored\"))));\n    assertThat(true, is(equalTo(field1Attributes.get(\"indexed\"))));\n\n    SchemaRequest.Field field2SchemaRequest = new SchemaRequest.Field(field1Name);\n    SchemaResponse.FieldResponse field2Response = field2SchemaRequest.process(getSolrClient());\n    assertValidSchemaResponse(field2Response);\n    Map<String, ?> field2Attributes = field2Response.getField();\n    assertThat(field1Name, is(equalTo(field2Attributes.get(\"name\"))));\n    assertThat(fieldTypeName, is(equalTo(field2Attributes.get(\"type\"))));\n    assertThat(true, is(equalTo(field2Attributes.get(\"stored\"))));\n    assertThat(true, is(equalTo(field2Attributes.get(\"indexed\"))));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c6ff97491f7791aa98e90d71c4c7fee58688c37b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c6ff97491f7791aa98e90d71c4c7fee58688c37b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c6ff97491f7791aa98e90d71c4c7fee58688c37b"],"c6ff97491f7791aa98e90d71c4c7fee58688c37b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}