{"path":"src/java/org/apache/solr/search/function/TopValueSource#getValues(IndexReader).mjava","commits":[{"id":"e1720d203cff791bcdef2bae580cf24e8906b4d8","date":1240608665,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/function/TopValueSource#getValues(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  public DocValues getValues(IndexReader reader) throws IOException {\n    int offset = 0;\n    IndexReader topReader = reader;\n    if (topReader instanceof SolrIndexReader) {\n      SolrIndexReader r = (SolrIndexReader)topReader;\n      while (r.getParent() != null) {\n        offset += r.getBase();\n        r = r.getParent();\n      }\n      topReader = r;\n    }\n    final int off = offset;\n    final DocValues vals = vs.getValues(topReader);\n    if (topReader == reader) return vals;\n\n    return new DocValues() {\n      public float floatVal(int doc) {\n        return vals.floatVal(doc + off);\n      }\n\n      public int intVal(int doc) {\n        return vals.intVal(doc + off);\n      }\n\n      public long longVal(int doc) {\n        return vals.longVal(doc + off);\n      }\n\n      public double doubleVal(int doc) {\n        return vals.doubleVal(doc + off);\n      }\n\n      public String strVal(int doc) {\n        return vals.strVal(doc + off);\n      }\n\n      public String toString(int doc) {\n        return vals.strVal(doc + off);\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e00023dc6828d09dbfb05d4dfa4d488cc81ee42","date":1253196493,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/function/TopValueSource#getValues(Map,IndexReader).mjava","pathOld":"src/java/org/apache/solr/search/function/TopValueSource#getValues(IndexReader).mjava","sourceNew":"  public DocValues getValues(Map context, IndexReader reader) throws IOException {\n    int offset = 0;\n    IndexReader topReader = reader;\n    if (topReader instanceof SolrIndexReader) {\n      SolrIndexReader r = (SolrIndexReader)topReader;\n      while (r.getParent() != null) {\n        offset += r.getBase();\n        r = r.getParent();\n      }\n      topReader = r;\n    }\n    final int off = offset;\n    final DocValues vals = vs.getValues(context, topReader);\n    if (topReader == reader) return vals;\n\n    return new DocValues() {\n      public float floatVal(int doc) {\n        return vals.floatVal(doc + off);\n      }\n\n      public int intVal(int doc) {\n        return vals.intVal(doc + off);\n      }\n\n      public long longVal(int doc) {\n        return vals.longVal(doc + off);\n      }\n\n      public double doubleVal(int doc) {\n        return vals.doubleVal(doc + off);\n      }\n\n      public String strVal(int doc) {\n        return vals.strVal(doc + off);\n      }\n\n      public String toString(int doc) {\n        return vals.strVal(doc + off);\n      }\n    };\n  }\n\n","sourceOld":"  public DocValues getValues(IndexReader reader) throws IOException {\n    int offset = 0;\n    IndexReader topReader = reader;\n    if (topReader instanceof SolrIndexReader) {\n      SolrIndexReader r = (SolrIndexReader)topReader;\n      while (r.getParent() != null) {\n        offset += r.getBase();\n        r = r.getParent();\n      }\n      topReader = r;\n    }\n    final int off = offset;\n    final DocValues vals = vs.getValues(topReader);\n    if (topReader == reader) return vals;\n\n    return new DocValues() {\n      public float floatVal(int doc) {\n        return vals.floatVal(doc + off);\n      }\n\n      public int intVal(int doc) {\n        return vals.intVal(doc + off);\n      }\n\n      public long longVal(int doc) {\n        return vals.longVal(doc + off);\n      }\n\n      public double doubleVal(int doc) {\n        return vals.doubleVal(doc + off);\n      }\n\n      public String strVal(int doc) {\n        return vals.strVal(doc + off);\n      }\n\n      public String toString(int doc) {\n        return vals.strVal(doc + off);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e00023dc6828d09dbfb05d4dfa4d488cc81ee42":["e1720d203cff791bcdef2bae580cf24e8906b4d8"],"e1720d203cff791bcdef2bae580cf24e8906b4d8":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7e00023dc6828d09dbfb05d4dfa4d488cc81ee42":[],"e1720d203cff791bcdef2bae580cf24e8906b4d8":["7e00023dc6828d09dbfb05d4dfa4d488cc81ee42"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["e1720d203cff791bcdef2bae580cf24e8906b4d8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7e00023dc6828d09dbfb05d4dfa4d488cc81ee42","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}