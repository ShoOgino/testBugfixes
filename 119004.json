{"path":"lucene/sandbox/src/test/org/apache/lucene/document/BaseShapeTestCase#testLowCardinalityShapeManyTimes().mjava","commits":[{"id":"c286b0d8c507a88b289407e2fe161effa275c6b0","date":1562615977,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/BaseShapeTestCase#testLowCardinalityShapeManyTimes().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/BaseLatLonShapeTestCase#testLowCardinalityShapeManyTimes().mjava","sourceNew":"  // Force low cardinality leaves\n  public void testLowCardinalityShapeManyTimes() throws Exception {\n    int numShapes = atLeast(500);\n    int cardinality = TestUtil.nextInt(random(), 2, 20);\n\n    Object[] diffShapes = new Object[cardinality];\n    for (int i = 0; i < cardinality; i++) {\n      diffShapes[i] = nextShape();\n    }\n\n    Object[] shapes = new Object[numShapes];\n    for (int i = 0; i < numShapes; i++) {\n      shapes[i] =  diffShapes[random().nextInt(cardinality)];\n    }\n\n    verify(shapes);\n  }\n\n","sourceOld":"  // Force low cardinality leaves\n  public void testLowCardinalityShapeManyTimes() throws Exception {\n    int numShapes = atLeast(500);\n    int cardinality = TestUtil.nextInt(random(), 2, 20);\n\n    Object[] diffShapes = new Object[cardinality];\n    for (int i = 0; i < cardinality; i++) {\n      diffShapes[i] = nextShape();\n    }\n\n    Object[] shapes = new Object[numShapes];\n    for (int i = 0; i < numShapes; i++) {\n      shapes[i] =  diffShapes[random().nextInt(cardinality)];\n    }\n\n    verify(shapes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c1e6d465800c73af60624bf9d4459a19f7940c","date":1579293280,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/BaseShapeTestCase#testLowCardinalityShapeManyTimes().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/BaseShapeTestCase#testLowCardinalityShapeManyTimes().mjava","sourceNew":"  // Force low cardinality leaves\n  public void testLowCardinalityShapeManyTimes() throws Exception {\n    int numShapes = atLeast(500);\n    int cardinality = TestUtil.nextInt(random(), 2, 20);\n\n    Object[] diffShapes = new Object[cardinality];\n    for (int i = 0; i < cardinality; i++) {\n      diffShapes[i] = nextShape();\n    }\n\n    Object[] shapes = new Object[numShapes];\n    for (int i = 0; i < numShapes; i++) {\n      shapes[i] =  diffShapes[random().nextInt(cardinality)];\n    }\n\n    verify(shapes);\n  }\n\n","sourceOld":"  // Force low cardinality leaves\n  public void testLowCardinalityShapeManyTimes() throws Exception {\n    int numShapes = atLeast(500);\n    int cardinality = TestUtil.nextInt(random(), 2, 20);\n\n    Object[] diffShapes = new Object[cardinality];\n    for (int i = 0; i < cardinality; i++) {\n      diffShapes[i] = nextShape();\n    }\n\n    Object[] shapes = new Object[numShapes];\n    for (int i = 0; i < numShapes; i++) {\n      shapes[i] =  diffShapes[random().nextInt(cardinality)];\n    }\n\n    verify(shapes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c1e6d465800c73af60624bf9d4459a19f7940c":["c286b0d8c507a88b289407e2fe161effa275c6b0"],"c286b0d8c507a88b289407e2fe161effa275c6b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09c1e6d465800c73af60624bf9d4459a19f7940c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c286b0d8c507a88b289407e2fe161effa275c6b0"],"09c1e6d465800c73af60624bf9d4459a19f7940c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c286b0d8c507a88b289407e2fe161effa275c6b0":["09c1e6d465800c73af60624bf9d4459a19f7940c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}