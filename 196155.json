{"path":"solr/core/src/test/org/apache/solr/TestRandomDVFaceting#deleteSomeDocs().mjava","commits":[{"id":"a9cc184ce59bfe09f739d9aaa34fdb28ddc738c3","date":1361894345,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestRandomDVFaceting#deleteSomeDocs().mjava","pathOld":"/dev/null","sourceNew":"  void deleteSomeDocs() {\n    Random rand = random();\n    int percent = rand.nextInt(100);\n    if (model == null) return;\n    ArrayList<String> ids = new ArrayList<String>(model.size());\n    for (Comparable id : model.keySet()) {\n      if (rand.nextInt(100) < percent) {\n        ids.add(id.toString());\n      }\n    }\n    if (ids.size() == 0) return;\n\n    StringBuffer sb = new StringBuffer(\"id:(\");\n    for (String id : ids) {\n      sb.append(id).append(' ');\n      model.remove(id);\n    }\n    sb.append(')');\n\n    assertU(delQ(sb.toString()));\n\n    if (rand.nextInt(10)==0) {\n      assertU(optimize());\n    } else {\n      assertU(commit(\"softCommit\",\"\"+(rand.nextInt(10)!=0)));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d06343967a29132f5d782f74e8d0988400278a02"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d06343967a29132f5d782f74e8d0988400278a02","date":1388963049,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestRandomDVFaceting#deleteSomeDocs().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestRandomDVFaceting#deleteSomeDocs().mjava","sourceNew":"  void deleteSomeDocs() {\n    Random rand = random();\n    int percent = rand.nextInt(100);\n    if (model == null) return;\n    ArrayList<String> ids = new ArrayList<String>(model.size());\n    for (Comparable id : model.keySet()) {\n      if (rand.nextInt(100) < percent) {\n        ids.add(id.toString());\n      }\n    }\n    if (ids.size() == 0) return;\n\n    StringBuilder sb = new StringBuilder(\"id:(\");\n    for (String id : ids) {\n      sb.append(id).append(' ');\n      model.remove(id);\n    }\n    sb.append(')');\n\n    assertU(delQ(sb.toString()));\n\n    if (rand.nextInt(10)==0) {\n      assertU(optimize());\n    } else {\n      assertU(commit(\"softCommit\",\"\"+(rand.nextInt(10)!=0)));\n    }\n  }\n\n","sourceOld":"  void deleteSomeDocs() {\n    Random rand = random();\n    int percent = rand.nextInt(100);\n    if (model == null) return;\n    ArrayList<String> ids = new ArrayList<String>(model.size());\n    for (Comparable id : model.keySet()) {\n      if (rand.nextInt(100) < percent) {\n        ids.add(id.toString());\n      }\n    }\n    if (ids.size() == 0) return;\n\n    StringBuffer sb = new StringBuffer(\"id:(\");\n    for (String id : ids) {\n      sb.append(id).append(' ');\n      model.remove(id);\n    }\n    sb.append(')');\n\n    assertU(delQ(sb.toString()));\n\n    if (rand.nextInt(10)==0) {\n      assertU(optimize());\n    } else {\n      assertU(commit(\"softCommit\",\"\"+(rand.nextInt(10)!=0)));\n    }\n  }\n\n","bugFix":["a9cc184ce59bfe09f739d9aaa34fdb28ddc738c3"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestRandomDVFaceting#deleteSomeDocs().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestRandomDVFaceting#deleteSomeDocs().mjava","sourceNew":"  void deleteSomeDocs() {\n    Random rand = random();\n    int percent = rand.nextInt(100);\n    if (model == null) return;\n    ArrayList<String> ids = new ArrayList<>(model.size());\n    for (Comparable id : model.keySet()) {\n      if (rand.nextInt(100) < percent) {\n        ids.add(id.toString());\n      }\n    }\n    if (ids.size() == 0) return;\n\n    StringBuilder sb = new StringBuilder(\"id:(\");\n    for (String id : ids) {\n      sb.append(id).append(' ');\n      model.remove(id);\n    }\n    sb.append(')');\n\n    assertU(delQ(sb.toString()));\n\n    if (rand.nextInt(10)==0) {\n      assertU(optimize());\n    } else {\n      assertU(commit(\"softCommit\",\"\"+(rand.nextInt(10)!=0)));\n    }\n  }\n\n","sourceOld":"  void deleteSomeDocs() {\n    Random rand = random();\n    int percent = rand.nextInt(100);\n    if (model == null) return;\n    ArrayList<String> ids = new ArrayList<String>(model.size());\n    for (Comparable id : model.keySet()) {\n      if (rand.nextInt(100) < percent) {\n        ids.add(id.toString());\n      }\n    }\n    if (ids.size() == 0) return;\n\n    StringBuilder sb = new StringBuilder(\"id:(\");\n    for (String id : ids) {\n      sb.append(id).append(' ');\n      model.remove(id);\n    }\n    sb.append(')');\n\n    assertU(delQ(sb.toString()));\n\n    if (rand.nextInt(10)==0) {\n      assertU(optimize());\n    } else {\n      assertU(commit(\"softCommit\",\"\"+(rand.nextInt(10)!=0)));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestRandomDVFaceting#deleteSomeDocs().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestRandomDVFaceting#deleteSomeDocs().mjava","sourceNew":"  void deleteSomeDocs() {\n    Random rand = random();\n    int percent = rand.nextInt(100);\n    if (model == null) return;\n    ArrayList<String> ids = new ArrayList<>(model.size());\n    for (@SuppressWarnings({\"rawtypes\"})Comparable id : model.keySet()) {\n      if (rand.nextInt(100) < percent) {\n        ids.add(id.toString());\n      }\n    }\n    if (ids.size() == 0) return;\n\n    StringBuilder sb = new StringBuilder(\"id:(\");\n    for (String id : ids) {\n      sb.append(id).append(' ');\n      model.remove(id);\n    }\n    sb.append(')');\n\n    assertU(delQ(sb.toString()));\n\n    if (rand.nextInt(10)==0) {\n      assertU(optimize());\n    } else {\n      assertU(commit(\"softCommit\",\"\"+(rand.nextInt(10)!=0)));\n    }\n  }\n\n","sourceOld":"  void deleteSomeDocs() {\n    Random rand = random();\n    int percent = rand.nextInt(100);\n    if (model == null) return;\n    ArrayList<String> ids = new ArrayList<>(model.size());\n    for (Comparable id : model.keySet()) {\n      if (rand.nextInt(100) < percent) {\n        ids.add(id.toString());\n      }\n    }\n    if (ids.size() == 0) return;\n\n    StringBuilder sb = new StringBuilder(\"id:(\");\n    for (String id : ids) {\n      sb.append(id).append(' ');\n      model.remove(id);\n    }\n    sb.append(')');\n\n    assertU(delQ(sb.toString()));\n\n    if (rand.nextInt(10)==0) {\n      assertU(optimize());\n    } else {\n      assertU(commit(\"softCommit\",\"\"+(rand.nextInt(10)!=0)));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a9cc184ce59bfe09f739d9aaa34fdb28ddc738c3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["d06343967a29132f5d782f74e8d0988400278a02"],"d06343967a29132f5d782f74e8d0988400278a02":["a9cc184ce59bfe09f739d9aaa34fdb28ddc738c3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"a9cc184ce59bfe09f739d9aaa34fdb28ddc738c3":["d06343967a29132f5d782f74e8d0988400278a02"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["e98520789adb1d5ad05afb4956eca0944a929688"],"d06343967a29132f5d782f74e8d0988400278a02":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a9cc184ce59bfe09f739d9aaa34fdb28ddc738c3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}