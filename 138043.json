{"path":"lucene/core/src/java/org/apache/lucene/index/LogMergePolicy#setMergeFactor(int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LogMergePolicy#setMergeFactor(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#setMergeFactor(int).mjava","sourceNew":"  /** Determines how often segment indices are merged by\n   * addDocument().  With smaller values, less RAM is used\n   * while indexing, and searches are\n   * faster, but indexing speed is slower.  With larger\n   * values, more RAM is used during indexing, and while\n   * searches is slower, indexing is\n   * faster.  Thus larger values (> 10) are best for batch\n   * index creation, and smaller values (< 10) for indices\n   * that are interactively maintained. */\n  public void setMergeFactor(int mergeFactor) {\n    if (mergeFactor < 2)\n      throw new IllegalArgumentException(\"mergeFactor cannot be less than 2\");\n    this.mergeFactor = mergeFactor;\n  }\n\n","sourceOld":"  /** Determines how often segment indices are merged by\n   * addDocument().  With smaller values, less RAM is used\n   * while indexing, and searches are\n   * faster, but indexing speed is slower.  With larger\n   * values, more RAM is used during indexing, and while\n   * searches is slower, indexing is\n   * faster.  Thus larger values (> 10) are best for batch\n   * index creation, and smaller values (< 10) for indices\n   * that are interactively maintained. */\n  public void setMergeFactor(int mergeFactor) {\n    if (mergeFactor < 2)\n      throw new IllegalArgumentException(\"mergeFactor cannot be less than 2\");\n    this.mergeFactor = mergeFactor;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1eb427f2c6beed80d1724555fc1db003ccf3030","date":1417137397,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LogMergePolicy#setMergeFactor(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LogMergePolicy#setMergeFactor(int).mjava","sourceNew":"  /** Determines how often segment indices are merged by\n   * addDocument().  With smaller values, less RAM is used\n   * while indexing, and searches are\n   * faster, but indexing speed is slower.  With larger\n   * values, more RAM is used during indexing, and while\n   * searches is slower, indexing is\n   * faster.  Thus larger values ({@code > 10}) are best for batch\n   * index creation, and smaller values ({@code < 10}) for indices\n   * that are interactively maintained. */\n  public void setMergeFactor(int mergeFactor) {\n    if (mergeFactor < 2)\n      throw new IllegalArgumentException(\"mergeFactor cannot be less than 2\");\n    this.mergeFactor = mergeFactor;\n  }\n\n","sourceOld":"  /** Determines how often segment indices are merged by\n   * addDocument().  With smaller values, less RAM is used\n   * while indexing, and searches are\n   * faster, but indexing speed is slower.  With larger\n   * values, more RAM is used during indexing, and while\n   * searches is slower, indexing is\n   * faster.  Thus larger values (> 10) are best for batch\n   * index creation, and smaller values (< 10) for indices\n   * that are interactively maintained. */\n  public void setMergeFactor(int mergeFactor) {\n    if (mergeFactor < 2)\n      throw new IllegalArgumentException(\"mergeFactor cannot be less than 2\");\n    this.mergeFactor = mergeFactor;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b1eb427f2c6beed80d1724555fc1db003ccf3030":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b1eb427f2c6beed80d1724555fc1db003ccf3030"]},"commit2Childs":{"b1eb427f2c6beed80d1724555fc1db003ccf3030":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["b1eb427f2c6beed80d1724555fc1db003ccf3030"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}