{"path":"solr/core/src/test/org/apache/solr/core/MockInfoBean#initializeMetrics(SolrMetricManager,String,String).mjava","commits":[{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/MockInfoBean#initializeMetrics(SolrMetricManager,String,String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String scope) {\n    registry = manager.registry(registryName);\n    MetricsMap metricsMap = new MetricsMap((detailed, map) -> {\n      map.put(\"Integer\", 123);\n      map.put(\"Double\",567.534);\n      map.put(\"Long\", 32352463l);\n      map.put(\"Short\", (short) 32768);\n      map.put(\"Byte\", (byte) 254);\n      map.put(\"Float\", 3.456f);\n      map.put(\"String\",\"testing\");\n      map.put(\"Object\", new Object());\n    });\n    manager.registerGauge(this, registryName, metricsMap, true, getClass().getSimpleName(), getCategory().toString(), scope);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/MockInfoBean#initializeMetrics(SolrMetricManager,String,String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String scope) {\n    registry = manager.registry(registryName);\n    MetricsMap metricsMap = new MetricsMap((detailed, map) -> {\n      map.put(\"Integer\", 123);\n      map.put(\"Double\",567.534);\n      map.put(\"Long\", 32352463l);\n      map.put(\"Short\", (short) 32768);\n      map.put(\"Byte\", (byte) 254);\n      map.put(\"Float\", 3.456f);\n      map.put(\"String\",\"testing\");\n      map.put(\"Object\", new Object());\n    });\n    manager.registerGauge(this, registryName, metricsMap, true, getClass().getSimpleName(), getCategory().toString(), scope);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bfc52860e6d13d034226a760813c59d984c6817a","date":1522229027,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/MockInfoBean#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/MockInfoBean#initializeMetrics(SolrMetricManager,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String tag, String scope) {\n    this.metricManager = manager;\n    this.registryName = registryName;\n    registry = manager.registry(registryName);\n    MetricsMap metricsMap = new MetricsMap((detailed, map) -> {\n      map.put(\"Integer\", 123);\n      map.put(\"Double\",567.534);\n      map.put(\"Long\", 32352463l);\n      map.put(\"Short\", (short) 32768);\n      map.put(\"Byte\", (byte) 254);\n      map.put(\"Float\", 3.456f);\n      map.put(\"String\",\"testing\");\n      map.put(\"Object\", new Object());\n    });\n    manager.registerGauge(this, registryName, metricsMap, tag, true, getClass().getSimpleName(), getCategory().toString(), scope);\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String scope) {\n    registry = manager.registry(registryName);\n    MetricsMap metricsMap = new MetricsMap((detailed, map) -> {\n      map.put(\"Integer\", 123);\n      map.put(\"Double\",567.534);\n      map.put(\"Long\", 32352463l);\n      map.put(\"Short\", (short) 32768);\n      map.put(\"Byte\", (byte) 254);\n      map.put(\"Float\", 3.456f);\n      map.put(\"String\",\"testing\");\n      map.put(\"Object\", new Object());\n    });\n    manager.registerGauge(this, registryName, metricsMap, true, getClass().getSimpleName(), getCategory().toString(), scope);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43564cbb30b064675027cfb569564e8531096e97","date":1522334265,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/MockInfoBean#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/MockInfoBean#initializeMetrics(SolrMetricManager,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String tag, String scope) {\n    this.metricManager = manager;\n    this.registryName = registryName;\n    registry = manager.registry(registryName);\n    MetricsMap metricsMap = new MetricsMap((detailed, map) -> {\n      map.put(\"Integer\", 123);\n      map.put(\"Double\",567.534);\n      map.put(\"Long\", 32352463l);\n      map.put(\"Short\", (short) 32768);\n      map.put(\"Byte\", (byte) 254);\n      map.put(\"Float\", 3.456f);\n      map.put(\"String\",\"testing\");\n      map.put(\"Object\", new Object());\n    });\n    manager.registerGauge(this, registryName, metricsMap, tag, true, getClass().getSimpleName(), getCategory().toString(), scope);\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String scope) {\n    registry = manager.registry(registryName);\n    MetricsMap metricsMap = new MetricsMap((detailed, map) -> {\n      map.put(\"Integer\", 123);\n      map.put(\"Double\",567.534);\n      map.put(\"Long\", 32352463l);\n      map.put(\"Short\", (short) 32768);\n      map.put(\"Byte\", (byte) 254);\n      map.put(\"Float\", 3.456f);\n      map.put(\"String\",\"testing\");\n      map.put(\"Object\", new Object());\n    });\n    manager.registerGauge(this, registryName, metricsMap, true, getClass().getSimpleName(), getCategory().toString(), scope);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bfc52860e6d13d034226a760813c59d984c6817a":["816521ebaad5add9cb96bb88c577394e2938c40b"],"43564cbb30b064675027cfb569564e8531096e97":["816521ebaad5add9cb96bb88c577394e2938c40b","bfc52860e6d13d034226a760813c59d984c6817a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"816521ebaad5add9cb96bb88c577394e2938c40b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["43564cbb30b064675027cfb569564e8531096e97"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"bfc52860e6d13d034226a760813c59d984c6817a":["43564cbb30b064675027cfb569564e8531096e97"],"43564cbb30b064675027cfb569564e8531096e97":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","816521ebaad5add9cb96bb88c577394e2938c40b"],"816521ebaad5add9cb96bb88c577394e2938c40b":["bfc52860e6d13d034226a760813c59d984c6817a","43564cbb30b064675027cfb569564e8531096e97"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}