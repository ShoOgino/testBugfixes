{"path":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","commits":[{"id":"43b04c27924fe393e38e9f0986e32c634f261859","date":1284399440,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCaseJ4#reportAdditionalFailureInfo().mjava","sourceNew":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    Long staticSeed = staticSeeds.get(getClass());\n    if (staticSeed != null) {\n      System.out.println(\"NOTE: random static seed of testclass '\" + getName() + \"' was: \" + staticSeed);\n    }\n    \n    System.out.println(\"NOTE: random codec of testcase '\" + getName() + \"' was: \" + codec);\n    if (TEST_LOCALE.equals(\"random\"))\n      System.out.println(\"NOTE: random locale of testcase '\" + getName() + \"' was: \" + locale);\n    if (TEST_TIMEZONE.equals(\"random\")) // careful to not deliver NPE here in case they forgot super.setUp\n      System.out.println(\"NOTE: random timezone of testcase '\" + getName() + \"' was: \" + (timeZone == null ? \"(null)\" : timeZone.getID()));\n    if (seed != null) {\n      System.out.println(\"NOTE: random seed of testcase '\" + getName() + \"' was: \" + seed);\n    }\n  }\n\n","sourceOld":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    Long staticSeed = staticSeeds.get(getClass());\n    if (staticSeed != null) {\n      System.out.println(\"NOTE: random static seed of testclass '\" + getName() + \"' was: \" + staticSeed);\n    }\n    \n    System.out.println(\"NOTE: random codec of testcase '\" + getName() + \"' was: \" + codec);\n    if (TEST_LOCALE.equals(\"random\"))\n      System.out.println(\"NOTE: random locale of testcase '\" + getName() + \"' was: \" + locale);\n    if (TEST_TIMEZONE.equals(\"random\")) // careful to not deliver NPE here in case they forgot super.setUp\n      System.out.println(\"NOTE: random timezone of testcase '\" + getName() + \"' was: \" + (timeZone == null ? \"(null)\" : timeZone.getID()));\n    if (seed != null) {\n      System.out.println(\"NOTE: random seed of testcase '\" + getName() + \"' was: \" + seed);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f9dba8ffba48fba97d7a90fd45f6da87ba55736","date":1285244347,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","sourceNew":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.out.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName() \n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new UUID(staticSeed, seed));\n  }\n\n","sourceOld":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    Long staticSeed = staticSeeds.get(getClass());\n    if (staticSeed != null) {\n      System.out.println(\"NOTE: random static seed of testclass '\" + getName() + \"' was: \" + staticSeed);\n    }\n    \n    System.out.println(\"NOTE: random codec of testcase '\" + getName() + \"' was: \" + codec);\n    if (TEST_LOCALE.equals(\"random\"))\n      System.out.println(\"NOTE: random locale of testcase '\" + getName() + \"' was: \" + locale);\n    if (TEST_TIMEZONE.equals(\"random\")) // careful to not deliver NPE here in case they forgot super.setUp\n      System.out.println(\"NOTE: random timezone of testcase '\" + getName() + \"' was: \" + (timeZone == null ? \"(null)\" : timeZone.getID()));\n    if (seed != null) {\n      System.out.println(\"NOTE: random seed of testcase '\" + getName() + \"' was: \" + seed);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d47f68d60cbff5718136b945ba8c55982342f38","date":1285583375,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","sourceNew":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.out.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName() \n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed));\n  }\n\n","sourceOld":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.out.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName() \n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new UUID(staticSeed, seed));\n  }\n\n","bugFix":null,"bugIntro":["0c839e28bbf8e26233e9cb58aa45188ae669f2be"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0c839e28bbf8e26233e9cb58aa45188ae669f2be","date":1287228474,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","sourceNew":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.out.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName() \n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed)\n        + reproduceWithExtraParams());\n  }\n\n","sourceOld":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.out.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName() \n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed));\n  }\n\n","bugFix":["8d47f68d60cbff5718136b945ba8c55982342f38"],"bugIntro":["0ed97703eb37066163749ca2f635433a2f2184a5","0ed97703eb37066163749ca2f635433a2f2184a5","0ed97703eb37066163749ca2f635433a2f2184a5","b88f145033cba453c8f65cc86eb444c625ee86c0","b88f145033cba453c8f65cc86eb444c625ee86c0","b88f145033cba453c8f65cc86eb444c625ee86c0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","sourceNew":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.out.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName() \n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed)\n        + reproduceWithExtraParams());\n  }\n\n","sourceOld":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.out.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName() \n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e4f2388e507c1b2d15471448118c30973dbe05c1","date":1292336937,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","sourceNew":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName() \n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed)\n        + reproduceWithExtraParams());\n  }\n\n","sourceOld":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.out.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName() \n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed)\n        + reproduceWithExtraParams());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","sourceNew":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName() \n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed)\n        + reproduceWithExtraParams());\n  }\n\n","sourceOld":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.out.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName() \n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed)\n        + reproduceWithExtraParams());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","pathOld":"/dev/null","sourceNew":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName()\n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed)\n        + reproduceWithExtraParams());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["0ed97703eb37066163749ca2f635433a2f2184a5","0ed97703eb37066163749ca2f635433a2f2184a5","0ed97703eb37066163749ca2f635433a2f2184a5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"06b0b2c47429b3a6cbafeb352edcdf35c6eb1514","date":1294860324,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","sourceNew":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName() \n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed)\n        + reproduceWithExtraParams());\n    System.err.println(\"NOTE: \" + System.getProperty(\"os.name\") + \" \" \n        + System.getProperty(\"os.version\") + \" \" \n        + System.getProperty(\"os.arch\") + \"/\"\n        + System.getProperty(\"java.vendor\") + \" \"\n        + System.getProperty(\"java.version\") + \" \"\n        + (Constants.JRE_IS_64BIT ? \"(64-bit)\" : \"(32-bit)\") + \"/\"\n        + \"cpus=\" + Runtime.getRuntime().availableProcessors() + \",\"\n        + \"threads=\" + Thread.activeCount() + \",\"\n        + \"free=\" + Runtime.getRuntime().freeMemory() + \",\"\n        + \"total=\" + Runtime.getRuntime().totalMemory());\n  }\n\n","sourceOld":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName() \n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed)\n        + reproduceWithExtraParams());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ea53729544bfdd226c3fb0367da9ec4db3e5f8b7","date":1294861323,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","sourceNew":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName() \n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed)\n        + reproduceWithExtraParams());\n  }\n\n","sourceOld":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName() \n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed)\n        + reproduceWithExtraParams());\n    System.err.println(\"NOTE: \" + System.getProperty(\"os.name\") + \" \" \n        + System.getProperty(\"os.version\") + \" \" \n        + System.getProperty(\"os.arch\") + \"/\"\n        + System.getProperty(\"java.vendor\") + \" \"\n        + System.getProperty(\"java.version\") + \" \"\n        + (Constants.JRE_IS_64BIT ? \"(64-bit)\" : \"(32-bit)\") + \"/\"\n        + \"cpus=\" + Runtime.getRuntime().availableProcessors() + \",\"\n        + \"threads=\" + Thread.activeCount() + \",\"\n        + \"free=\" + Runtime.getRuntime().freeMemory() + \",\"\n        + \"total=\" + Runtime.getRuntime().totalMemory());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","sourceNew":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName() \n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed)\n        + reproduceWithExtraParams());\n  }\n\n","sourceOld":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName() \n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed)\n        + reproduceWithExtraParams());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","sourceNew":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName() \n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed)\n        + reproduceWithExtraParams());\n  }\n\n","sourceOld":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName() \n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed)\n        + reproduceWithExtraParams());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","sourceNew":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName()\n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed)\n        + reproduceWithExtraParams());\n  }\n\n","sourceOld":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName()\n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed)\n        + reproduceWithExtraParams());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"e4f2388e507c1b2d15471448118c30973dbe05c1":["0c839e28bbf8e26233e9cb58aa45188ae669f2be"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","e4f2388e507c1b2d15471448118c30973dbe05c1"],"8d47f68d60cbff5718136b945ba8c55982342f38":["5f9dba8ffba48fba97d7a90fd45f6da87ba55736"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e4f2388e507c1b2d15471448118c30973dbe05c1"],"ea53729544bfdd226c3fb0367da9ec4db3e5f8b7":["06b0b2c47429b3a6cbafeb352edcdf35c6eb1514"],"5f9dba8ffba48fba97d7a90fd45f6da87ba55736":["43b04c27924fe393e38e9f0986e32c634f261859"],"43b04c27924fe393e38e9f0986e32c634f261859":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["ea53729544bfdd226c3fb0367da9ec4db3e5f8b7"],"0c839e28bbf8e26233e9cb58aa45188ae669f2be":["8d47f68d60cbff5718136b945ba8c55982342f38"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"06b0b2c47429b3a6cbafeb352edcdf35c6eb1514":["e4f2388e507c1b2d15471448118c30973dbe05c1"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["8d47f68d60cbff5718136b945ba8c55982342f38","0c839e28bbf8e26233e9cb58aa45188ae669f2be"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"]},"commit2Childs":{"e4f2388e507c1b2d15471448118c30973dbe05c1":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","06b0b2c47429b3a6cbafeb352edcdf35c6eb1514"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"8d47f68d60cbff5718136b945ba8c55982342f38":["0c839e28bbf8e26233e9cb58aa45188ae669f2be","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"ea53729544bfdd226c3fb0367da9ec4db3e5f8b7":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"5f9dba8ffba48fba97d7a90fd45f6da87ba55736":["8d47f68d60cbff5718136b945ba8c55982342f38"],"43b04c27924fe393e38e9f0986e32c634f261859":["5f9dba8ffba48fba97d7a90fd45f6da87ba55736"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0c839e28bbf8e26233e9cb58aa45188ae669f2be":["e4f2388e507c1b2d15471448118c30973dbe05c1","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","43b04c27924fe393e38e9f0986e32c634f261859"],"06b0b2c47429b3a6cbafeb352edcdf35c6eb1514":["ea53729544bfdd226c3fb0367da9ec4db3e5f8b7"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}