{"path":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/PorterStemmer#stem().mjava","commits":[{"id":"a5aa159e1ac4009d23cea92797d3804da4f5e7ad","date":1264041909,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/PorterStemmer#stem().mjava","pathOld":"contrib/snowball/src/java/org/tartarus/snowball/ext/PorterStemmer#stem().mjava","sourceNew":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n            int v_14;\n            int v_15;\n            int v_16;\n            int v_17;\n            int v_18;\n            int v_19;\n            int v_20;\n            // (, line 113\n            // unset Y_found, line 115\n            B_Y_found = false;\n            // do, line 116\n            v_1 = cursor;\n            lab0: do {\n                // (, line 116\n                // [, line 116\n                bra = cursor;\n                // literal, line 116\n                if (!(eq_s(1, \"y\")))\n                {\n                    break lab0;\n                }\n                // ], line 116\n                ket = cursor;\n                // <-, line 116\n                slice_from(\"Y\");\n                // set Y_found, line 116\n                B_Y_found = true;\n            } while (false);\n            cursor = v_1;\n            // do, line 117\n            v_2 = cursor;\n            lab1: do {\n                // repeat, line 117\n                replab2: while(true)\n                {\n                    v_3 = cursor;\n                    lab3: do {\n                        // (, line 117\n                        // goto, line 117\n                        golab4: while(true)\n                        {\n                            v_4 = cursor;\n                            lab5: do {\n                                // (, line 117\n                                if (!(in_grouping(g_v, 97, 121)))\n                                {\n                                    break lab5;\n                                }\n                                // [, line 117\n                                bra = cursor;\n                                // literal, line 117\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab5;\n                                }\n                                // ], line 117\n                                ket = cursor;\n                                cursor = v_4;\n                                break golab4;\n                            } while (false);\n                            cursor = v_4;\n                            if (cursor >= limit)\n                            {\n                                break lab3;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 117\n                        slice_from(\"Y\");\n                        // set Y_found, line 117\n                        B_Y_found = true;\n                        continue replab2;\n                    } while (false);\n                    cursor = v_3;\n                    break replab2;\n                }\n            } while (false);\n            cursor = v_2;\n            I_p1 = limit;\n            I_p2 = limit;\n            // do, line 121\n            v_5 = cursor;\n            lab6: do {\n                // (, line 121\n                // gopast, line 122\n                golab7: while(true)\n                {\n                    lab8: do {\n                        if (!(in_grouping(g_v, 97, 121)))\n                        {\n                            break lab8;\n                        }\n                        break golab7;\n                    } while (false);\n                    if (cursor >= limit)\n                    {\n                        break lab6;\n                    }\n                    cursor++;\n                }\n                // gopast, line 122\n                golab9: while(true)\n                {\n                    lab10: do {\n                        if (!(out_grouping(g_v, 97, 121)))\n                        {\n                            break lab10;\n                        }\n                        break golab9;\n                    } while (false);\n                    if (cursor >= limit)\n                    {\n                        break lab6;\n                    }\n                    cursor++;\n                }\n                // setmark p1, line 122\n                I_p1 = cursor;\n                // gopast, line 123\n                golab11: while(true)\n                {\n                    lab12: do {\n                        if (!(in_grouping(g_v, 97, 121)))\n                        {\n                            break lab12;\n                        }\n                        break golab11;\n                    } while (false);\n                    if (cursor >= limit)\n                    {\n                        break lab6;\n                    }\n                    cursor++;\n                }\n                // gopast, line 123\n                golab13: while(true)\n                {\n                    lab14: do {\n                        if (!(out_grouping(g_v, 97, 121)))\n                        {\n                            break lab14;\n                        }\n                        break golab13;\n                    } while (false);\n                    if (cursor >= limit)\n                    {\n                        break lab6;\n                    }\n                    cursor++;\n                }\n                // setmark p2, line 123\n                I_p2 = cursor;\n            } while (false);\n            cursor = v_5;\n            // backwards, line 126\n            limit_backward = cursor; cursor = limit;\n            // (, line 126\n            // do, line 127\n            v_10 = limit - cursor;\n            lab15: do {\n                // call Step_1a, line 127\n                if (!r_Step_1a())\n                {\n                    break lab15;\n                }\n            } while (false);\n            cursor = limit - v_10;\n            // do, line 128\n            v_11 = limit - cursor;\n            lab16: do {\n                // call Step_1b, line 128\n                if (!r_Step_1b())\n                {\n                    break lab16;\n                }\n            } while (false);\n            cursor = limit - v_11;\n            // do, line 129\n            v_12 = limit - cursor;\n            lab17: do {\n                // call Step_1c, line 129\n                if (!r_Step_1c())\n                {\n                    break lab17;\n                }\n            } while (false);\n            cursor = limit - v_12;\n            // do, line 130\n            v_13 = limit - cursor;\n            lab18: do {\n                // call Step_2, line 130\n                if (!r_Step_2())\n                {\n                    break lab18;\n                }\n            } while (false);\n            cursor = limit - v_13;\n            // do, line 131\n            v_14 = limit - cursor;\n            lab19: do {\n                // call Step_3, line 131\n                if (!r_Step_3())\n                {\n                    break lab19;\n                }\n            } while (false);\n            cursor = limit - v_14;\n            // do, line 132\n            v_15 = limit - cursor;\n            lab20: do {\n                // call Step_4, line 132\n                if (!r_Step_4())\n                {\n                    break lab20;\n                }\n            } while (false);\n            cursor = limit - v_15;\n            // do, line 133\n            v_16 = limit - cursor;\n            lab21: do {\n                // call Step_5a, line 133\n                if (!r_Step_5a())\n                {\n                    break lab21;\n                }\n            } while (false);\n            cursor = limit - v_16;\n            // do, line 134\n            v_17 = limit - cursor;\n            lab22: do {\n                // call Step_5b, line 134\n                if (!r_Step_5b())\n                {\n                    break lab22;\n                }\n            } while (false);\n            cursor = limit - v_17;\n            cursor = limit_backward;            // do, line 137\n            v_18 = cursor;\n            lab23: do {\n                // (, line 137\n                // Boolean test Y_found, line 137\n                if (!(B_Y_found))\n                {\n                    break lab23;\n                }\n                // repeat, line 137\n                replab24: while(true)\n                {\n                    v_19 = cursor;\n                    lab25: do {\n                        // (, line 137\n                        // goto, line 137\n                        golab26: while(true)\n                        {\n                            v_20 = cursor;\n                            lab27: do {\n                                // (, line 137\n                                // [, line 137\n                                bra = cursor;\n                                // literal, line 137\n                                if (!(eq_s(1, \"Y\")))\n                                {\n                                    break lab27;\n                                }\n                                // ], line 137\n                                ket = cursor;\n                                cursor = v_20;\n                                break golab26;\n                            } while (false);\n                            cursor = v_20;\n                            if (cursor >= limit)\n                            {\n                                break lab25;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 137\n                        slice_from(\"y\");\n                        continue replab24;\n                    } while (false);\n                    cursor = v_19;\n                    break replab24;\n                }\n            } while (false);\n            cursor = v_18;\n            return true;\n        }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n            int v_14;\n            int v_15;\n            int v_16;\n            int v_17;\n            int v_18;\n            int v_19;\n            int v_20;\n            // (, line 113\n            // unset Y_found, line 115\n            B_Y_found = false;\n            // do, line 116\n            v_1 = cursor;\n            lab0: do {\n                // (, line 116\n                // [, line 116\n                bra = cursor;\n                // literal, line 116\n                if (!(eq_s(1, \"y\")))\n                {\n                    break lab0;\n                }\n                // ], line 116\n                ket = cursor;\n                // <-, line 116\n                slice_from(\"Y\");\n                // set Y_found, line 116\n                B_Y_found = true;\n            } while (false);\n            cursor = v_1;\n            // do, line 117\n            v_2 = cursor;\n            lab1: do {\n                // repeat, line 117\n                replab2: while(true)\n                {\n                    v_3 = cursor;\n                    lab3: do {\n                        // (, line 117\n                        // goto, line 117\n                        golab4: while(true)\n                        {\n                            v_4 = cursor;\n                            lab5: do {\n                                // (, line 117\n                                if (!(in_grouping(g_v, 97, 121)))\n                                {\n                                    break lab5;\n                                }\n                                // [, line 117\n                                bra = cursor;\n                                // literal, line 117\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab5;\n                                }\n                                // ], line 117\n                                ket = cursor;\n                                cursor = v_4;\n                                break golab4;\n                            } while (false);\n                            cursor = v_4;\n                            if (cursor >= limit)\n                            {\n                                break lab3;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 117\n                        slice_from(\"Y\");\n                        // set Y_found, line 117\n                        B_Y_found = true;\n                        continue replab2;\n                    } while (false);\n                    cursor = v_3;\n                    break replab2;\n                }\n            } while (false);\n            cursor = v_2;\n            I_p1 = limit;\n            I_p2 = limit;\n            // do, line 121\n            v_5 = cursor;\n            lab6: do {\n                // (, line 121\n                // gopast, line 122\n                golab7: while(true)\n                {\n                    lab8: do {\n                        if (!(in_grouping(g_v, 97, 121)))\n                        {\n                            break lab8;\n                        }\n                        break golab7;\n                    } while (false);\n                    if (cursor >= limit)\n                    {\n                        break lab6;\n                    }\n                    cursor++;\n                }\n                // gopast, line 122\n                golab9: while(true)\n                {\n                    lab10: do {\n                        if (!(out_grouping(g_v, 97, 121)))\n                        {\n                            break lab10;\n                        }\n                        break golab9;\n                    } while (false);\n                    if (cursor >= limit)\n                    {\n                        break lab6;\n                    }\n                    cursor++;\n                }\n                // setmark p1, line 122\n                I_p1 = cursor;\n                // gopast, line 123\n                golab11: while(true)\n                {\n                    lab12: do {\n                        if (!(in_grouping(g_v, 97, 121)))\n                        {\n                            break lab12;\n                        }\n                        break golab11;\n                    } while (false);\n                    if (cursor >= limit)\n                    {\n                        break lab6;\n                    }\n                    cursor++;\n                }\n                // gopast, line 123\n                golab13: while(true)\n                {\n                    lab14: do {\n                        if (!(out_grouping(g_v, 97, 121)))\n                        {\n                            break lab14;\n                        }\n                        break golab13;\n                    } while (false);\n                    if (cursor >= limit)\n                    {\n                        break lab6;\n                    }\n                    cursor++;\n                }\n                // setmark p2, line 123\n                I_p2 = cursor;\n            } while (false);\n            cursor = v_5;\n            // backwards, line 126\n            limit_backward = cursor; cursor = limit;\n            // (, line 126\n            // do, line 127\n            v_10 = limit - cursor;\n            lab15: do {\n                // call Step_1a, line 127\n                if (!r_Step_1a())\n                {\n                    break lab15;\n                }\n            } while (false);\n            cursor = limit - v_10;\n            // do, line 128\n            v_11 = limit - cursor;\n            lab16: do {\n                // call Step_1b, line 128\n                if (!r_Step_1b())\n                {\n                    break lab16;\n                }\n            } while (false);\n            cursor = limit - v_11;\n            // do, line 129\n            v_12 = limit - cursor;\n            lab17: do {\n                // call Step_1c, line 129\n                if (!r_Step_1c())\n                {\n                    break lab17;\n                }\n            } while (false);\n            cursor = limit - v_12;\n            // do, line 130\n            v_13 = limit - cursor;\n            lab18: do {\n                // call Step_2, line 130\n                if (!r_Step_2())\n                {\n                    break lab18;\n                }\n            } while (false);\n            cursor = limit - v_13;\n            // do, line 131\n            v_14 = limit - cursor;\n            lab19: do {\n                // call Step_3, line 131\n                if (!r_Step_3())\n                {\n                    break lab19;\n                }\n            } while (false);\n            cursor = limit - v_14;\n            // do, line 132\n            v_15 = limit - cursor;\n            lab20: do {\n                // call Step_4, line 132\n                if (!r_Step_4())\n                {\n                    break lab20;\n                }\n            } while (false);\n            cursor = limit - v_15;\n            // do, line 133\n            v_16 = limit - cursor;\n            lab21: do {\n                // call Step_5a, line 133\n                if (!r_Step_5a())\n                {\n                    break lab21;\n                }\n            } while (false);\n            cursor = limit - v_16;\n            // do, line 134\n            v_17 = limit - cursor;\n            lab22: do {\n                // call Step_5b, line 134\n                if (!r_Step_5b())\n                {\n                    break lab22;\n                }\n            } while (false);\n            cursor = limit - v_17;\n            cursor = limit_backward;            // do, line 137\n            v_18 = cursor;\n            lab23: do {\n                // (, line 137\n                // Boolean test Y_found, line 137\n                if (!(B_Y_found))\n                {\n                    break lab23;\n                }\n                // repeat, line 137\n                replab24: while(true)\n                {\n                    v_19 = cursor;\n                    lab25: do {\n                        // (, line 137\n                        // goto, line 137\n                        golab26: while(true)\n                        {\n                            v_20 = cursor;\n                            lab27: do {\n                                // (, line 137\n                                // [, line 137\n                                bra = cursor;\n                                // literal, line 137\n                                if (!(eq_s(1, \"Y\")))\n                                {\n                                    break lab27;\n                                }\n                                // ], line 137\n                                ket = cursor;\n                                cursor = v_20;\n                                break golab26;\n                            } while (false);\n                            cursor = v_20;\n                            if (cursor >= limit)\n                            {\n                                break lab25;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 137\n                        slice_from(\"y\");\n                        continue replab24;\n                    } while (false);\n                    cursor = v_19;\n                    break replab24;\n                }\n            } while (false);\n            cursor = v_18;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/PorterStemmer#stem().mjava","pathOld":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/PorterStemmer#stem().mjava","sourceNew":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n            int v_14;\n            int v_15;\n            int v_16;\n            int v_17;\n            int v_18;\n            int v_19;\n            int v_20;\n            // (, line 113\n            // unset Y_found, line 115\n            B_Y_found = false;\n            // do, line 116\n            v_1 = cursor;\n            lab0: do {\n                // (, line 116\n                // [, line 116\n                bra = cursor;\n                // literal, line 116\n                if (!(eq_s(1, \"y\")))\n                {\n                    break lab0;\n                }\n                // ], line 116\n                ket = cursor;\n                // <-, line 116\n                slice_from(\"Y\");\n                // set Y_found, line 116\n                B_Y_found = true;\n            } while (false);\n            cursor = v_1;\n            // do, line 117\n            v_2 = cursor;\n            lab1: do {\n                // repeat, line 117\n                replab2: while(true)\n                {\n                    v_3 = cursor;\n                    lab3: do {\n                        // (, line 117\n                        // goto, line 117\n                        golab4: while(true)\n                        {\n                            v_4 = cursor;\n                            lab5: do {\n                                // (, line 117\n                                if (!(in_grouping(g_v, 97, 121)))\n                                {\n                                    break lab5;\n                                }\n                                // [, line 117\n                                bra = cursor;\n                                // literal, line 117\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab5;\n                                }\n                                // ], line 117\n                                ket = cursor;\n                                cursor = v_4;\n                                break golab4;\n                            } while (false);\n                            cursor = v_4;\n                            if (cursor >= limit)\n                            {\n                                break lab3;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 117\n                        slice_from(\"Y\");\n                        // set Y_found, line 117\n                        B_Y_found = true;\n                        continue replab2;\n                    } while (false);\n                    cursor = v_3;\n                    break replab2;\n                }\n            } while (false);\n            cursor = v_2;\n            I_p1 = limit;\n            I_p2 = limit;\n            // do, line 121\n            v_5 = cursor;\n            lab6: do {\n                // (, line 121\n                // gopast, line 122\n                golab7: while(true)\n                {\n                    lab8: do {\n                        if (!(in_grouping(g_v, 97, 121)))\n                        {\n                            break lab8;\n                        }\n                        break golab7;\n                    } while (false);\n                    if (cursor >= limit)\n                    {\n                        break lab6;\n                    }\n                    cursor++;\n                }\n                // gopast, line 122\n                golab9: while(true)\n                {\n                    lab10: do {\n                        if (!(out_grouping(g_v, 97, 121)))\n                        {\n                            break lab10;\n                        }\n                        break golab9;\n                    } while (false);\n                    if (cursor >= limit)\n                    {\n                        break lab6;\n                    }\n                    cursor++;\n                }\n                // setmark p1, line 122\n                I_p1 = cursor;\n                // gopast, line 123\n                golab11: while(true)\n                {\n                    lab12: do {\n                        if (!(in_grouping(g_v, 97, 121)))\n                        {\n                            break lab12;\n                        }\n                        break golab11;\n                    } while (false);\n                    if (cursor >= limit)\n                    {\n                        break lab6;\n                    }\n                    cursor++;\n                }\n                // gopast, line 123\n                golab13: while(true)\n                {\n                    lab14: do {\n                        if (!(out_grouping(g_v, 97, 121)))\n                        {\n                            break lab14;\n                        }\n                        break golab13;\n                    } while (false);\n                    if (cursor >= limit)\n                    {\n                        break lab6;\n                    }\n                    cursor++;\n                }\n                // setmark p2, line 123\n                I_p2 = cursor;\n            } while (false);\n            cursor = v_5;\n            // backwards, line 126\n            limit_backward = cursor; cursor = limit;\n            // (, line 126\n            // do, line 127\n            v_10 = limit - cursor;\n            lab15: do {\n                // call Step_1a, line 127\n                if (!r_Step_1a())\n                {\n                    break lab15;\n                }\n            } while (false);\n            cursor = limit - v_10;\n            // do, line 128\n            v_11 = limit - cursor;\n            lab16: do {\n                // call Step_1b, line 128\n                if (!r_Step_1b())\n                {\n                    break lab16;\n                }\n            } while (false);\n            cursor = limit - v_11;\n            // do, line 129\n            v_12 = limit - cursor;\n            lab17: do {\n                // call Step_1c, line 129\n                if (!r_Step_1c())\n                {\n                    break lab17;\n                }\n            } while (false);\n            cursor = limit - v_12;\n            // do, line 130\n            v_13 = limit - cursor;\n            lab18: do {\n                // call Step_2, line 130\n                if (!r_Step_2())\n                {\n                    break lab18;\n                }\n            } while (false);\n            cursor = limit - v_13;\n            // do, line 131\n            v_14 = limit - cursor;\n            lab19: do {\n                // call Step_3, line 131\n                if (!r_Step_3())\n                {\n                    break lab19;\n                }\n            } while (false);\n            cursor = limit - v_14;\n            // do, line 132\n            v_15 = limit - cursor;\n            lab20: do {\n                // call Step_4, line 132\n                if (!r_Step_4())\n                {\n                    break lab20;\n                }\n            } while (false);\n            cursor = limit - v_15;\n            // do, line 133\n            v_16 = limit - cursor;\n            lab21: do {\n                // call Step_5a, line 133\n                if (!r_Step_5a())\n                {\n                    break lab21;\n                }\n            } while (false);\n            cursor = limit - v_16;\n            // do, line 134\n            v_17 = limit - cursor;\n            lab22: do {\n                // call Step_5b, line 134\n                if (!r_Step_5b())\n                {\n                    break lab22;\n                }\n            } while (false);\n            cursor = limit - v_17;\n            cursor = limit_backward;            // do, line 137\n            v_18 = cursor;\n            lab23: do {\n                // (, line 137\n                // Boolean test Y_found, line 137\n                if (!(B_Y_found))\n                {\n                    break lab23;\n                }\n                // repeat, line 137\n                replab24: while(true)\n                {\n                    v_19 = cursor;\n                    lab25: do {\n                        // (, line 137\n                        // goto, line 137\n                        golab26: while(true)\n                        {\n                            v_20 = cursor;\n                            lab27: do {\n                                // (, line 137\n                                // [, line 137\n                                bra = cursor;\n                                // literal, line 137\n                                if (!(eq_s(1, \"Y\")))\n                                {\n                                    break lab27;\n                                }\n                                // ], line 137\n                                ket = cursor;\n                                cursor = v_20;\n                                break golab26;\n                            } while (false);\n                            cursor = v_20;\n                            if (cursor >= limit)\n                            {\n                                break lab25;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 137\n                        slice_from(\"y\");\n                        continue replab24;\n                    } while (false);\n                    cursor = v_19;\n                    break replab24;\n                }\n            } while (false);\n            cursor = v_18;\n            return true;\n        }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n            int v_14;\n            int v_15;\n            int v_16;\n            int v_17;\n            int v_18;\n            int v_19;\n            int v_20;\n            // (, line 113\n            // unset Y_found, line 115\n            B_Y_found = false;\n            // do, line 116\n            v_1 = cursor;\n            lab0: do {\n                // (, line 116\n                // [, line 116\n                bra = cursor;\n                // literal, line 116\n                if (!(eq_s(1, \"y\")))\n                {\n                    break lab0;\n                }\n                // ], line 116\n                ket = cursor;\n                // <-, line 116\n                slice_from(\"Y\");\n                // set Y_found, line 116\n                B_Y_found = true;\n            } while (false);\n            cursor = v_1;\n            // do, line 117\n            v_2 = cursor;\n            lab1: do {\n                // repeat, line 117\n                replab2: while(true)\n                {\n                    v_3 = cursor;\n                    lab3: do {\n                        // (, line 117\n                        // goto, line 117\n                        golab4: while(true)\n                        {\n                            v_4 = cursor;\n                            lab5: do {\n                                // (, line 117\n                                if (!(in_grouping(g_v, 97, 121)))\n                                {\n                                    break lab5;\n                                }\n                                // [, line 117\n                                bra = cursor;\n                                // literal, line 117\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab5;\n                                }\n                                // ], line 117\n                                ket = cursor;\n                                cursor = v_4;\n                                break golab4;\n                            } while (false);\n                            cursor = v_4;\n                            if (cursor >= limit)\n                            {\n                                break lab3;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 117\n                        slice_from(\"Y\");\n                        // set Y_found, line 117\n                        B_Y_found = true;\n                        continue replab2;\n                    } while (false);\n                    cursor = v_3;\n                    break replab2;\n                }\n            } while (false);\n            cursor = v_2;\n            I_p1 = limit;\n            I_p2 = limit;\n            // do, line 121\n            v_5 = cursor;\n            lab6: do {\n                // (, line 121\n                // gopast, line 122\n                golab7: while(true)\n                {\n                    lab8: do {\n                        if (!(in_grouping(g_v, 97, 121)))\n                        {\n                            break lab8;\n                        }\n                        break golab7;\n                    } while (false);\n                    if (cursor >= limit)\n                    {\n                        break lab6;\n                    }\n                    cursor++;\n                }\n                // gopast, line 122\n                golab9: while(true)\n                {\n                    lab10: do {\n                        if (!(out_grouping(g_v, 97, 121)))\n                        {\n                            break lab10;\n                        }\n                        break golab9;\n                    } while (false);\n                    if (cursor >= limit)\n                    {\n                        break lab6;\n                    }\n                    cursor++;\n                }\n                // setmark p1, line 122\n                I_p1 = cursor;\n                // gopast, line 123\n                golab11: while(true)\n                {\n                    lab12: do {\n                        if (!(in_grouping(g_v, 97, 121)))\n                        {\n                            break lab12;\n                        }\n                        break golab11;\n                    } while (false);\n                    if (cursor >= limit)\n                    {\n                        break lab6;\n                    }\n                    cursor++;\n                }\n                // gopast, line 123\n                golab13: while(true)\n                {\n                    lab14: do {\n                        if (!(out_grouping(g_v, 97, 121)))\n                        {\n                            break lab14;\n                        }\n                        break golab13;\n                    } while (false);\n                    if (cursor >= limit)\n                    {\n                        break lab6;\n                    }\n                    cursor++;\n                }\n                // setmark p2, line 123\n                I_p2 = cursor;\n            } while (false);\n            cursor = v_5;\n            // backwards, line 126\n            limit_backward = cursor; cursor = limit;\n            // (, line 126\n            // do, line 127\n            v_10 = limit - cursor;\n            lab15: do {\n                // call Step_1a, line 127\n                if (!r_Step_1a())\n                {\n                    break lab15;\n                }\n            } while (false);\n            cursor = limit - v_10;\n            // do, line 128\n            v_11 = limit - cursor;\n            lab16: do {\n                // call Step_1b, line 128\n                if (!r_Step_1b())\n                {\n                    break lab16;\n                }\n            } while (false);\n            cursor = limit - v_11;\n            // do, line 129\n            v_12 = limit - cursor;\n            lab17: do {\n                // call Step_1c, line 129\n                if (!r_Step_1c())\n                {\n                    break lab17;\n                }\n            } while (false);\n            cursor = limit - v_12;\n            // do, line 130\n            v_13 = limit - cursor;\n            lab18: do {\n                // call Step_2, line 130\n                if (!r_Step_2())\n                {\n                    break lab18;\n                }\n            } while (false);\n            cursor = limit - v_13;\n            // do, line 131\n            v_14 = limit - cursor;\n            lab19: do {\n                // call Step_3, line 131\n                if (!r_Step_3())\n                {\n                    break lab19;\n                }\n            } while (false);\n            cursor = limit - v_14;\n            // do, line 132\n            v_15 = limit - cursor;\n            lab20: do {\n                // call Step_4, line 132\n                if (!r_Step_4())\n                {\n                    break lab20;\n                }\n            } while (false);\n            cursor = limit - v_15;\n            // do, line 133\n            v_16 = limit - cursor;\n            lab21: do {\n                // call Step_5a, line 133\n                if (!r_Step_5a())\n                {\n                    break lab21;\n                }\n            } while (false);\n            cursor = limit - v_16;\n            // do, line 134\n            v_17 = limit - cursor;\n            lab22: do {\n                // call Step_5b, line 134\n                if (!r_Step_5b())\n                {\n                    break lab22;\n                }\n            } while (false);\n            cursor = limit - v_17;\n            cursor = limit_backward;            // do, line 137\n            v_18 = cursor;\n            lab23: do {\n                // (, line 137\n                // Boolean test Y_found, line 137\n                if (!(B_Y_found))\n                {\n                    break lab23;\n                }\n                // repeat, line 137\n                replab24: while(true)\n                {\n                    v_19 = cursor;\n                    lab25: do {\n                        // (, line 137\n                        // goto, line 137\n                        golab26: while(true)\n                        {\n                            v_20 = cursor;\n                            lab27: do {\n                                // (, line 137\n                                // [, line 137\n                                bra = cursor;\n                                // literal, line 137\n                                if (!(eq_s(1, \"Y\")))\n                                {\n                                    break lab27;\n                                }\n                                // ], line 137\n                                ket = cursor;\n                                cursor = v_20;\n                                break golab26;\n                            } while (false);\n                            cursor = v_20;\n                            if (cursor >= limit)\n                            {\n                                break lab25;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 137\n                        slice_from(\"y\");\n                        continue replab24;\n                    } while (false);\n                    cursor = v_19;\n                    break replab24;\n                }\n            } while (false);\n            cursor = v_18;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"]},"commit2Childs":{"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}