{"path":"lucene/src/java/org/apache/lucene/index/values/PackedIntValues.DirectPackedIntsSource#DirectPackedIntsSource(IndexInput).mjava","commits":[{"id":"e128967bca58657bc0039d4bfe631e63e81f1977","date":1317978310,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/PackedIntValues.DirectPackedIntsSource#DirectPackedIntsSource(IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/PackedIntValues.PackedIntsEnumImpl#PackedIntsEnumImpl(AttributeSource,IndexInput).mjava","sourceNew":"    private DirectPackedIntsSource(IndexInput dataIn)\n        throws IOException {\n      super(ValueType.VAR_INTS);\n      minValue = dataIn.readLong();\n      defaultValue = dataIn.readLong();\n      this.ints = PackedInts.getRandomAccessReaderIterator(dataIn);\n    }\n\n","sourceOld":"    private PackedIntsEnumImpl(AttributeSource source, IndexInput dataIn)\n        throws IOException {\n      super(source, ValueType.VAR_INTS);\n      intsRef.offset = 0;\n      this.dataIn = dataIn;\n      minValue = dataIn.readLong();\n      defaultValue = dataIn.readLong();\n      this.ints = PackedInts.getReaderIterator(dataIn);\n      maxDoc = ints.size();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"142daaa8f2b32cb229bd23e7aabd06d2a7d3c6fb","date":1320691430,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/PackedIntValues.PackedIntsSource#PackedIntsSource(IndexInput,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/PackedIntValues.DirectPackedIntsSource#DirectPackedIntsSource(IndexInput).mjava","sourceNew":"    public PackedIntsSource(IndexInput dataIn, boolean direct) throws IOException {\n      super(ValueType.VAR_INTS);\n      minValue = dataIn.readLong();\n      defaultValue = dataIn.readLong();\n      values = direct ? PackedInts.getDirectReader(dataIn) : PackedInts.getReader(dataIn);\n    }\n\n","sourceOld":"    private DirectPackedIntsSource(IndexInput dataIn)\n        throws IOException {\n      super(ValueType.VAR_INTS);\n      minValue = dataIn.readLong();\n      defaultValue = dataIn.readLong();\n      this.ints = PackedInts.getRandomAccessReaderIterator(dataIn);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"142daaa8f2b32cb229bd23e7aabd06d2a7d3c6fb":["e128967bca58657bc0039d4bfe631e63e81f1977"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e128967bca58657bc0039d4bfe631e63e81f1977":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["142daaa8f2b32cb229bd23e7aabd06d2a7d3c6fb"]},"commit2Childs":{"142daaa8f2b32cb229bd23e7aabd06d2a7d3c6fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e128967bca58657bc0039d4bfe631e63e81f1977"],"e128967bca58657bc0039d4bfe631e63e81f1977":["142daaa8f2b32cb229bd23e7aabd06d2a7d3c6fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}