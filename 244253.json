{"path":"lucene/misc/src/java/org/apache/lucene/store/WindowsDirectory.WindowsIndexInput#readInternal(byte[],int,int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/store/WindowsDirectory.WindowsIndexInput#readInternal(byte[],int,int).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/store/WindowsDirectory.WindowsIndexInput#readInternal(byte[],int,int).mjava","sourceNew":"    @Override\n    protected void readInternal(byte[] b, int offset, int length) throws IOException {\n      int bytesRead;\n      try {\n        bytesRead = WindowsDirectory.read(fd, b, offset, length, getFilePointer());\n      } catch (IOException ioe) {\n        throw new IOException(ioe.getMessage() + \": \" + this, ioe);\n      }\n\n      if (bytesRead != length) {\n        throw new EOFException(\"read past EOF: \" + this);\n      }\n    }\n\n","sourceOld":"    @Override\n    protected void readInternal(byte[] b, int offset, int length) throws IOException {\n      int bytesRead;\n      try {\n        bytesRead = WindowsDirectory.read(fd, b, offset, length, getFilePointer());\n      } catch (IOException ioe) {\n        throw new IOException(ioe.getMessage() + \": \" + this, ioe);\n      }\n\n      if (bytesRead != length) {\n        throw new EOFException(\"read past EOF: \" + this);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af9ce763a9d61cb88781e638d593430b71efa7dc","date":1586259009,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/store/WindowsDirectory.WindowsIndexInput#readInternal(ByteBuffer).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/store/WindowsDirectory.WindowsIndexInput#readInternal(byte[],int,int).mjava","sourceNew":"    @Override\n    protected void readInternal(ByteBuffer b) throws IOException {\n      int bytesRead;\n      try {\n        bytesRead = WindowsDirectory.read(fd, b.array(), b.position(), b.remaining(), getFilePointer());\n      } catch (IOException ioe) {\n        throw new IOException(ioe.getMessage() + \": \" + this, ioe);\n      }\n\n      if (bytesRead != length) {\n        throw new EOFException(\"read past EOF: \" + this);\n      }\n    }\n\n","sourceOld":"    @Override\n    protected void readInternal(byte[] b, int offset, int length) throws IOException {\n      int bytesRead;\n      try {\n        bytesRead = WindowsDirectory.read(fd, b, offset, length, getFilePointer());\n      } catch (IOException ioe) {\n        throw new IOException(ioe.getMessage() + \": \" + this, ioe);\n      }\n\n      if (bytesRead != length) {\n        throw new EOFException(\"read past EOF: \" + this);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"af9ce763a9d61cb88781e638d593430b71efa7dc":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af9ce763a9d61cb88781e638d593430b71efa7dc"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["af9ce763a9d61cb88781e638d593430b71efa7dc"],"af9ce763a9d61cb88781e638d593430b71efa7dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}