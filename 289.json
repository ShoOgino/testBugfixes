{"path":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter.OneDimensionBKDWriter#OneDimensionBKDWriter(IndexOutput,IndexOutput,IndexOutput).mjava","commits":[{"id":"78e689a3b60e84c75dc6dd7b181a71fc19ef8482","date":1591689554,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter.OneDimensionBKDWriter#OneDimensionBKDWriter(IndexOutput,IndexOutput,IndexOutput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter.OneDimensionBKDWriter#OneDimensionBKDWriter(IndexOutput).mjava","sourceNew":"    OneDimensionBKDWriter(IndexOutput metaOut, IndexOutput indexOut, IndexOutput dataOut) {\n      if (numIndexDims != 1) {\n        throw new UnsupportedOperationException(\"numIndexDims must be 1 but got \" + numIndexDims);\n      }\n      if (pointCount != 0) {\n        throw new IllegalStateException(\"cannot mix add and merge\");\n      }\n\n      // Catch user silliness:\n      if (finished == true) {\n        throw new IllegalStateException(\"already finished\");\n      }\n\n      // Mark that we already finished:\n      finished = true;\n\n      this.metaOut = metaOut;\n      this.indexOut = indexOut;\n      this.dataOut = dataOut;\n      this.dataStartFP = dataOut.getFilePointer();\n\n      lastPackedValue = new byte[packedBytesLength];\n    }\n\n","sourceOld":"    OneDimensionBKDWriter(IndexOutput out) {\n      if (numIndexDims != 1) {\n        throw new UnsupportedOperationException(\"numIndexDims must be 1 but got \" + numIndexDims);\n      }\n      if (pointCount != 0) {\n        throw new IllegalStateException(\"cannot mix add and merge\");\n      }\n\n      // Catch user silliness:\n      if (finished == true) {\n        throw new IllegalStateException(\"already finished\");\n      }\n\n      // Mark that we already finished:\n      finished = true;\n\n      this.out = out;\n\n      lastPackedValue = new byte[packedBytesLength];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb94bf667d51f9c390c99d97afb36b7caab6b6e9","date":1599548621,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter.OneDimensionBKDWriter#OneDimensionBKDWriter(IndexOutput,IndexOutput,IndexOutput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter.OneDimensionBKDWriter#OneDimensionBKDWriter(IndexOutput,IndexOutput,IndexOutput).mjava","sourceNew":"    OneDimensionBKDWriter(IndexOutput metaOut, IndexOutput indexOut, IndexOutput dataOut) {\n      if (config.numIndexDims != 1) {\n        throw new UnsupportedOperationException(\"config.numIndexDims must be 1 but got \" + config.numIndexDims);\n      }\n      if (pointCount != 0) {\n        throw new IllegalStateException(\"cannot mix add and merge\");\n      }\n\n      // Catch user silliness:\n      if (finished == true) {\n        throw new IllegalStateException(\"already finished\");\n      }\n\n      // Mark that we already finished:\n      finished = true;\n\n      this.metaOut = metaOut;\n      this.indexOut = indexOut;\n      this.dataOut = dataOut;\n      this.dataStartFP = dataOut.getFilePointer();\n\n      lastPackedValue = new byte[config.packedBytesLength];\n    }\n\n","sourceOld":"    OneDimensionBKDWriter(IndexOutput metaOut, IndexOutput indexOut, IndexOutput dataOut) {\n      if (numIndexDims != 1) {\n        throw new UnsupportedOperationException(\"numIndexDims must be 1 but got \" + numIndexDims);\n      }\n      if (pointCount != 0) {\n        throw new IllegalStateException(\"cannot mix add and merge\");\n      }\n\n      // Catch user silliness:\n      if (finished == true) {\n        throw new IllegalStateException(\"already finished\");\n      }\n\n      // Mark that we already finished:\n      finished = true;\n\n      this.metaOut = metaOut;\n      this.indexOut = indexOut;\n      this.dataOut = dataOut;\n      this.dataStartFP = dataOut.getFilePointer();\n\n      lastPackedValue = new byte[packedBytesLength];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["78e689a3b60e84c75dc6dd7b181a71fc19ef8482"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"78e689a3b60e84c75dc6dd7b181a71fc19ef8482":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"]},"commit2Childs":{"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["78e689a3b60e84c75dc6dd7b181a71fc19ef8482"],"78e689a3b60e84c75dc6dd7b181a71fc19ef8482":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}