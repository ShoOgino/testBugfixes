{"path":"lucene/backwards/src/test/org/apache/lucene/index/TestIndexWriterMergePolicy#testMergeFactorChange().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/index/TestIndexWriterMergePolicy#testMergeFactorChange().mjava","pathOld":"backwards/src/test/org/apache/lucene/index/TestIndexWriterMergePolicy#testMergeFactorChange().mjava","sourceNew":"  // Test the case where mergeFactor changes\n  public void testMergeFactorChange() throws IOException {\n    Directory dir = new RAMDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMaxBufferedDocs(10);\n    writer.setMergeFactor(100);\n    writer.setMergePolicy(new LogDocMergePolicy(writer));\n\n    for (int i = 0; i < 250; i++) {\n      addDoc(writer);\n      checkInvariants(writer);\n    }\n\n    writer.setMergeFactor(5);\n\n    // merge policy only fixes segments on levels where merges\n    // have been triggered, so check invariants after all adds\n    for (int i = 0; i < 10; i++) {\n      addDoc(writer);\n    }\n    checkInvariants(writer);\n\n    writer.close();\n  }\n\n","sourceOld":"  // Test the case where mergeFactor changes\n  public void testMergeFactorChange() throws IOException {\n    Directory dir = new RAMDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMaxBufferedDocs(10);\n    writer.setMergeFactor(100);\n    writer.setMergePolicy(new LogDocMergePolicy(writer));\n\n    for (int i = 0; i < 250; i++) {\n      addDoc(writer);\n      checkInvariants(writer);\n    }\n\n    writer.setMergeFactor(5);\n\n    // merge policy only fixes segments on levels where merges\n    // have been triggered, so check invariants after all adds\n    for (int i = 0; i < 10; i++) {\n      addDoc(writer);\n    }\n    checkInvariants(writer);\n\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ab99e8c71442b92c320e218141dee04a9b91ce8","date":1269203801,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/index/TestIndexWriterMergePolicy#testMergeFactorChange().mjava","pathOld":"lucene/backwards/src/test/org/apache/lucene/index/TestIndexWriterMergePolicy#testMergeFactorChange().mjava","sourceNew":"  // Test the case where mergeFactor changes\n  public void testMergeFactorChange() throws IOException {\n    Directory dir = new RAMDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMaxBufferedDocs(10);\n    writer.setMergeFactor(100);\n    writer.setMergePolicy(new LogDocMergePolicy());\n\n    for (int i = 0; i < 250; i++) {\n      addDoc(writer);\n      checkInvariants(writer);\n    }\n\n    writer.setMergeFactor(5);\n\n    // merge policy only fixes segments on levels where merges\n    // have been triggered, so check invariants after all adds\n    for (int i = 0; i < 10; i++) {\n      addDoc(writer);\n    }\n    checkInvariants(writer);\n\n    writer.close();\n  }\n\n","sourceOld":"  // Test the case where mergeFactor changes\n  public void testMergeFactorChange() throws IOException {\n    Directory dir = new RAMDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMaxBufferedDocs(10);\n    writer.setMergeFactor(100);\n    writer.setMergePolicy(new LogDocMergePolicy(writer));\n\n    for (int i = 0; i < 250; i++) {\n      addDoc(writer);\n      checkInvariants(writer);\n    }\n\n    writer.setMergeFactor(5);\n\n    // merge policy only fixes segments on levels where merges\n    // have been triggered, so check invariants after all adds\n    for (int i = 0; i < 10; i++) {\n      addDoc(writer);\n    }\n    checkInvariants(writer);\n\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/index/TestIndexWriterMergePolicy#testMergeFactorChange().mjava","sourceNew":null,"sourceOld":"  // Test the case where mergeFactor changes\n  public void testMergeFactorChange() throws IOException {\n    Directory dir = new RAMDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMaxBufferedDocs(10);\n    writer.setMergeFactor(100);\n    writer.setMergePolicy(new LogDocMergePolicy());\n\n    for (int i = 0; i < 250; i++) {\n      addDoc(writer);\n      checkInvariants(writer);\n    }\n\n    writer.setMergeFactor(5);\n\n    // merge policy only fixes segments on levels where merges\n    // have been triggered, so check invariants after all adds\n    for (int i = 0; i < 10; i++) {\n      addDoc(writer);\n    }\n    checkInvariants(writer);\n\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["7ab99e8c71442b92c320e218141dee04a9b91ce8"],"7ab99e8c71442b92c320e218141dee04a9b91ce8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7ab99e8c71442b92c320e218141dee04a9b91ce8":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7ab99e8c71442b92c320e218141dee04a9b91ce8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}