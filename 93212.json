{"path":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testEncodeDecodeIsStable().mjava","commits":[{"id":"4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9","date":1459984736,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testEncodeDecodeIsStable().mjava","pathOld":"/dev/null","sourceNew":"  public void testEncodeDecodeIsStable() throws Exception {\n\n    int iters = atLeast(1000);\n    for(int iter=0;iter<iters;iter++) {\n      double lat = GeoTestUtil.nextLatitude();\n      double lon = GeoTestUtil.nextLongitude();\n\n      GeoPoint point = new GeoPoint(PlanetModel.WGS84, toRadians(lat), toRadians(lon));\n\n      // encode point\n      GeoPoint pointEnc = new GeoPoint(Geo3DUtil.decodeValue(Geo3DUtil.encodeValue(point.x)),\n                                       Geo3DUtil.decodeValue(Geo3DUtil.encodeValue(point.y)),\n                                       Geo3DUtil.decodeValue(Geo3DUtil.encodeValue(point.z)));\n\n      // encode it again (double encode)\n      GeoPoint pointEnc2 = new GeoPoint(Geo3DUtil.decodeValue(Geo3DUtil.encodeValue(pointEnc.x)),\n                                        Geo3DUtil.decodeValue(Geo3DUtil.encodeValue(pointEnc.y)),\n                                        Geo3DUtil.decodeValue(Geo3DUtil.encodeValue(pointEnc.z)));\n      //System.out.println(\"TEST \" + iter + \":\\n  point    =\" + point + \"\\n  pointEnc =\" + pointEnc + \"\\n  pointEnc2=\" + pointEnc2);\n    \n      assertEquals(pointEnc.x, pointEnc2.x, 0.0);\n      assertEquals(pointEnc.y, pointEnc2.y, 0.0);\n      assertEquals(pointEnc.z, pointEnc2.z, 0.0);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a","date":1583186777,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testEncodeDecodeIsStable().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testEncodeDecodeIsStable().mjava","sourceNew":"  public void testEncodeDecodeIsStable() throws Exception {\n    PlanetModel planetModel = randomPlanetModel();\n    int iters = atLeast(1000);\n    for(int iter=0;iter<iters;iter++) {\n      double lat = GeoTestUtil.nextLatitude();\n      double lon = GeoTestUtil.nextLongitude();\n\n      GeoPoint point = new GeoPoint(planetModel, toRadians(lat), toRadians(lon));\n\n      // encode point\n      GeoPoint pointEnc = new GeoPoint(planetModel.decodeValue(planetModel.encodeValue(point.x)),\n                                       planetModel.decodeValue(planetModel.encodeValue(point.y)),\n                                       planetModel.decodeValue(planetModel.encodeValue(point.z)));\n\n      // encode it again (double encode)\n      GeoPoint pointEnc2 = new GeoPoint(planetModel.decodeValue(planetModel.encodeValue(pointEnc.x)),\n                                        planetModel.decodeValue(planetModel.encodeValue(pointEnc.y)),\n                                        planetModel.decodeValue(planetModel.encodeValue(pointEnc.z)));\n      //System.out.println(\"TEST \" + iter + \":\\n  point    =\" + point + \"\\n  pointEnc =\" + pointEnc + \"\\n  pointEnc2=\" + pointEnc2);\n    \n      assertEquals(pointEnc.x, pointEnc2.x, 0.0);\n      assertEquals(pointEnc.y, pointEnc2.y, 0.0);\n      assertEquals(pointEnc.z, pointEnc2.z, 0.0);\n    }\n  }\n\n","sourceOld":"  public void testEncodeDecodeIsStable() throws Exception {\n\n    int iters = atLeast(1000);\n    for(int iter=0;iter<iters;iter++) {\n      double lat = GeoTestUtil.nextLatitude();\n      double lon = GeoTestUtil.nextLongitude();\n\n      GeoPoint point = new GeoPoint(PlanetModel.WGS84, toRadians(lat), toRadians(lon));\n\n      // encode point\n      GeoPoint pointEnc = new GeoPoint(Geo3DUtil.decodeValue(Geo3DUtil.encodeValue(point.x)),\n                                       Geo3DUtil.decodeValue(Geo3DUtil.encodeValue(point.y)),\n                                       Geo3DUtil.decodeValue(Geo3DUtil.encodeValue(point.z)));\n\n      // encode it again (double encode)\n      GeoPoint pointEnc2 = new GeoPoint(Geo3DUtil.decodeValue(Geo3DUtil.encodeValue(pointEnc.x)),\n                                        Geo3DUtil.decodeValue(Geo3DUtil.encodeValue(pointEnc.y)),\n                                        Geo3DUtil.decodeValue(Geo3DUtil.encodeValue(pointEnc.z)));\n      //System.out.println(\"TEST \" + iter + \":\\n  point    =\" + point + \"\\n  pointEnc =\" + pointEnc + \"\\n  pointEnc2=\" + pointEnc2);\n    \n      assertEquals(pointEnc.x, pointEnc2.x, 0.0);\n      assertEquals(pointEnc.y, pointEnc2.y, 0.0);\n      assertEquals(pointEnc.z, pointEnc2.z, 0.0);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a"]},"commit2Childs":{"4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9"],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}