{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ca/CatalanAnalyzer#CatalanAnalyzer(CharArraySet,CharArraySet).mjava","commits":[{"id":"ff4227bb146f97aabae888091c19e48c88dbb0db","date":1406758576,"type":2,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ca/CatalanAnalyzer#CatalanAnalyzer(CharArraySet,CharArraySet).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/lv/LatvianAnalyzer#LatvianAnalyzer(Version,CharArraySet,CharArraySet).mjava","sourceNew":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link SetKeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public CatalanAnalyzer(CharArraySet stopwords, CharArraySet stemExclusionSet) {\n    super(stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(stemExclusionSet));\n  }\n\n","sourceOld":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link SetKeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public LatvianAnalyzer(Version matchVersion, CharArraySet stopwords, CharArraySet stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cdab62f058ea765dd33deb05b4f19b7d626c801","date":1406803479,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ca/CatalanAnalyzer#CatalanAnalyzer(CharArraySet,CharArraySet).mjava","sourceNew":null,"sourceOld":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link SetKeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public CatalanAnalyzer(CharArraySet stopwords, CharArraySet stemExclusionSet) {\n    super(stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(stemExclusionSet));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"379db3ad24c4f0214f30a122265a6d6be003a99d","date":1407537768,"type":2,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ca/CatalanAnalyzer#CatalanAnalyzer(CharArraySet,CharArraySet).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/lv/LatvianAnalyzer#LatvianAnalyzer(Version,CharArraySet,CharArraySet).mjava","sourceNew":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link SetKeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public CatalanAnalyzer(CharArraySet stopwords, CharArraySet stemExclusionSet) {\n    super(stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(stemExclusionSet));\n  }\n\n","sourceOld":"  /**\n   * Builds an analyzer with the given stop words. If a non-empty stem exclusion set is\n   * provided this analyzer will add a {@link SetKeywordMarkerFilter} before\n   * stemming.\n   * \n   * @param matchVersion lucene compatibility version\n   * @param stopwords a stopword set\n   * @param stemExclusionSet a set of terms not to be stemmed\n   */\n  public LatvianAnalyzer(Version matchVersion, CharArraySet stopwords, CharArraySet stemExclusionSet) {\n    super(matchVersion, stopwords);\n    this.stemExclusionSet = CharArraySet.unmodifiableSet(CharArraySet.copy(\n        matchVersion, stemExclusionSet));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["379db3ad24c4f0214f30a122265a6d6be003a99d"]},"commit2Childs":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}