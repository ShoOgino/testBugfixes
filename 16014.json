{"path":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/BaseFragListBuilder#acceptPhrase(WeightedPhraseInfo,int,int).mjava","commits":[{"id":"4de9b9325d973e4bc4c97eb91fe119eafa6caa99","date":1365179986,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/BaseFragListBuilder#acceptPhrase(WeightedPhraseInfo,int,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * A predicate to decide if the given {@link WeightedPhraseInfo} should be\n   * accepted as a highlighted phrase or if it should be discarded.\n   * <p>\n   * The default implementation discards phrases that are composed of more than one term\n   * and where the matchLength exceeds the fragment character size.\n   * \n   * @param info the phrase info to accept\n   * @param matchLength the match length of the current phrase\n   * @param fragCharSize the configured fragment character size\n   * @return <code>true</code> if this phrase info should be accepted as a highligh phrase\n   */\n protected boolean acceptPhrase(WeightedPhraseInfo info, int matchLength, int fragCharSize) {\n   return info.getTermsOffsets().size() <= 1 ||  matchLength <= fragCharSize;\n }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4de9b9325d973e4bc4c97eb91fe119eafa6caa99":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4de9b9325d973e4bc4c97eb91fe119eafa6caa99"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4de9b9325d973e4bc4c97eb91fe119eafa6caa99"],"4de9b9325d973e4bc4c97eb91fe119eafa6caa99":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}