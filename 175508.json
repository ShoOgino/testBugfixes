{"path":"solr/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","pathOld":"/dev/null","sourceNew":"  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","sourceNew":null,"sourceOld":"  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","pathOld":"src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","sourceNew":"  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","sourceOld":"  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","pathOld":"/dev/null","sourceNew":"  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"58ff089c0435ea4ba0821cdd897256fcd95fc092","date":1269094725,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","pathOld":"solr/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","sourceNew":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","sourceOld":"  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"08fd846faeaddb28f2b20f569afe4f79b394f62d","date":1274127743,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","pathOld":"solr/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","sourceNew":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.US);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","bugFix":["5e62bfc99fea332bfdcdca0f73a821428d533279"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","pathOld":"solr/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","sourceNew":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.US);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.US);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","pathOld":"solr/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","sourceNew":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.US);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.US);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","pathOld":"solr/src/test/org/apache/solr/TestTrie#testTrieFacet_PrecisionStep().mjava","sourceNew":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.US);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieFacet_PrecisionStep() throws Exception {\n    // Future protect - assert 0<precisionStep<64\n    checkPrecisionSteps(\"tint\");\n    checkPrecisionSteps(\"tfloat\");\n    checkPrecisionSteps(\"tdouble\");\n    checkPrecisionSteps(\"tlong\");\n    checkPrecisionSteps(\"tdate\");\n\n    // For tdate tests\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.US);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n\n    for (int i = 0; i < 10; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    for (int i = 0; i < 5; i++) {\n      long l = Integer.MAX_VALUE + i*1L;\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf((i+1)*10), \"tint\", String.valueOf(i),\n              \"tlong\", String.valueOf(l),\n              \"tfloat\", String.valueOf(i * i * 31.11f),\n              \"tdouble\", String.valueOf(i * 2.33d),\n              \"tdate\", d));\n    }\n    assertU(commit());\n\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"facet\", \"true\", \"rows\", \"15\",\n            \"facet.field\", \"tint\",\n            \"facet.field\", \"tlong\",\n            \"facet.field\", \"tfloat\",\n            \"facet.field\", \"tdouble\",\n            \"facet.date\", \"tdate\",\n            \"facet.date.start\", \"NOW/DAY\",\n            \"facet.date.end\", \"NOW/DAY+6DAYS\",\n            \"facet.date.gap\", \"+1DAY\");\n    testFacetField(req, \"tint\", \"0\", \"2\");\n    testFacetField(req, \"tint\", \"5\", \"1\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE), \"2\");\n    testFacetField(req, \"tlong\", String.valueOf(Integer.MAX_VALUE+5L), \"1\");\n    testFacetField(req, \"tfloat\", String.valueOf(31.11f), \"2\");\n    testFacetField(req, \"tfloat\", String.valueOf(5*5*31.11f), \"1\");\n    testFacetField(req, \"tdouble\", String.valueOf(2.33d), \"2\");\n    testFacetField(req, \"tdouble\", String.valueOf(5*2.33d), \"1\");\n\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY\")), \"4\");\n    testFacetDate(req, \"tdate\", format.format(dmp.parseMath(\"/DAY+5DAYS\")), \"2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["08fd846faeaddb28f2b20f569afe4f79b394f62d"],"08fd846faeaddb28f2b20f569afe4f79b394f62d":["58ff089c0435ea4ba0821cdd897256fcd95fc092"],"c26f00b574427b55127e869b935845554afde1fa":["08fd846faeaddb28f2b20f569afe4f79b394f62d","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["08fd846faeaddb28f2b20f569afe4f79b394f62d"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"58ff089c0435ea4ba0821cdd897256fcd95fc092":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"1da8d55113b689b06716246649de6f62430f15c0":["58ff089c0435ea4ba0821cdd897256fcd95fc092"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"08fd846faeaddb28f2b20f569afe4f79b394f62d":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"58ff089c0435ea4ba0821cdd897256fcd95fc092":["08fd846faeaddb28f2b20f569afe4f79b394f62d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}