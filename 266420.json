{"path":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempPostingsWriter#encodeTerm(long[],DataOutput,FieldInfo,BlockTermState,boolean).mjava","commits":[{"id":"abfc4a4873131874a50c6f6e3deb59a743ee1f44","date":1376737165,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempPostingsWriter#encodeTerm(long[],DataOutput,FieldInfo,BlockTermState,boolean).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void encodeTerm(long[] longs, DataOutput out, FieldInfo fieldInfo, BlockTermState _state, boolean absolute) throws IOException {\n    IntBlockTermState state = (IntBlockTermState)_state;\n    if (absolute) {\n      lastState = emptyState;\n    }\n    longs[0] = state.docTermStartFP - lastState.docTermStartFP;\n    if (fieldHasPositions) {\n      longs[1] = state.posTermStartFP - lastState.posTermStartFP;\n      if (fieldHasPayloads || fieldHasOffsets) {\n        longs[2] = state.payTermStartFP - lastState.payTermStartFP;\n      }\n    }\n    if (state.singletonDocID != -1) {\n      out.writeVInt(state.singletonDocID);\n    }\n    if (fieldHasPositions) {\n      if (state.lastPosBlockOffset != -1) {\n        out.writeVLong(state.lastPosBlockOffset);\n      }\n    }\n    if (state.skipOffset != -1) {\n      out.writeVLong(state.skipOffset);\n    }\n    lastState = state;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6904bcc97d8afa27bd72ee29ac01e525e327ad4","date":1377958787,"type":4,"author":"Han Jiang","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempPostingsWriter#encodeTerm(long[],DataOutput,FieldInfo,BlockTermState,boolean).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void encodeTerm(long[] longs, DataOutput out, FieldInfo fieldInfo, BlockTermState _state, boolean absolute) throws IOException {\n    IntBlockTermState state = (IntBlockTermState)_state;\n    if (absolute) {\n      lastState = emptyState;\n    }\n    longs[0] = state.docTermStartFP - lastState.docTermStartFP;\n    if (fieldHasPositions) {\n      longs[1] = state.posTermStartFP - lastState.posTermStartFP;\n      if (fieldHasPayloads || fieldHasOffsets) {\n        longs[2] = state.payTermStartFP - lastState.payTermStartFP;\n      }\n    }\n    if (state.singletonDocID != -1) {\n      out.writeVInt(state.singletonDocID);\n    }\n    if (fieldHasPositions) {\n      if (state.lastPosBlockOffset != -1) {\n        out.writeVLong(state.lastPosBlockOffset);\n      }\n    }\n    if (state.skipOffset != -1) {\n      out.writeVLong(state.skipOffset);\n    }\n    lastState = state;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"abfc4a4873131874a50c6f6e3deb59a743ee1f44":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":["abfc4a4873131874a50c6f6e3deb59a743ee1f44"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"abfc4a4873131874a50c6f6e3deb59a743ee1f44":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["abfc4a4873131874a50c6f6e3deb59a743ee1f44","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}