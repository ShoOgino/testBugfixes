{"path":"lucene/monitor/src/test/org/apache/lucene/monitor/FieldFilterPresearcherComponentTestBase#testFieldFiltering().mjava","commits":[{"id":"7c529b189e09de25455d82ebd7260748cf11ee14","date":1560415257,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/monitor/src/test/org/apache/lucene/monitor/FieldFilterPresearcherComponentTestBase#testFieldFiltering().mjava","pathOld":"/dev/null","sourceNew":"  public void testFieldFiltering() throws IOException {\n\n    try (Monitor monitor = newMonitor()) {\n      monitor.register(\n          new MonitorQuery(\"1\", parse(\"test\"), null, Collections.singletonMap(\"language\", \"en\")),\n          new MonitorQuery(\"2\", parse(\"test\"), null, Collections.singletonMap(\"language\", \"de\")),\n          new MonitorQuery(\"3\", parse(\"wibble\"), null, Collections.singletonMap(\"language\", \"en\")),\n          new MonitorQuery(\"4\", parse(\"*:*\"), null, Collections.singletonMap(\"language\", \"de\")));\n\n      Document enDoc = new Document();\n      enDoc.add(newTextField(TEXTFIELD, \"this is a test\", Field.Store.NO));\n      enDoc.add(newTextField(\"language\", \"en\", Field.Store.NO));\n\n      MatchingQueries<QueryMatch> en = monitor.match(enDoc, QueryMatch.SIMPLE_MATCHER);\n      assertEquals(1, en.getMatchCount());\n      assertNotNull(en.matches(\"1\"));\n      assertEquals(1, en.getQueriesRun());\n\n      Document deDoc = new Document();\n      deDoc.add(newTextField(TEXTFIELD, \"das ist ein test\", Field.Store.NO));\n      deDoc.add(newTextField(\"language\", \"de\", Field.Store.NO));\n\n      MatchingQueries<QueryMatch> de = monitor.match(deDoc, QueryMatch.SIMPLE_MATCHER);\n      assertEquals(2, de.getMatchCount());\n      assertEquals(2, de.getQueriesRun());\n      assertNotNull(de.matches(\"2\"));\n      assertNotNull(de.matches(\"4\"));\n\n      Document bothDoc = new Document();\n      bothDoc.add(newTextField(TEXTFIELD, \"this is ein test\", Field.Store.NO));\n      bothDoc.add(newTextField(\"language\", \"en\", Field.Store.NO));\n      bothDoc.add(newTextField(\"language\", \"de\", Field.Store.NO));\n\n      MatchingQueries<QueryMatch> both = monitor.match(bothDoc, QueryMatch.SIMPLE_MATCHER);\n      assertEquals(3, both.getMatchCount());\n      assertEquals(3, both.getQueriesRun());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7c529b189e09de25455d82ebd7260748cf11ee14":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7c529b189e09de25455d82ebd7260748cf11ee14"]},"commit2Childs":{"7c529b189e09de25455d82ebd7260748cf11ee14":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c529b189e09de25455d82ebd7260748cf11ee14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}