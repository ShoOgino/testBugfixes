{"path":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTTermsReader.TermsReader.IntersectTermsEnum#loadNextFrame(Frame,Frame).mjava","commits":[{"id":"050ba1ba249733cac50c2612418b7179591d2df9","date":1374633633,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTTermsReader.TermsReader.IntersectTermsEnum#loadNextFrame(Frame,Frame).mjava","pathOld":"/dev/null","sourceNew":"      /** Load frame for sibling arc(node) on fst */\n      Frame loadNextFrame(Frame top, Frame frame) throws IOException {\n        if (!canRewind(frame)) {\n          return null;\n        }\n        fstReader.setPosition(frame.fstPos);\n        while (!frame.fstArc.isLast()) {\n          frame.fstArc = fst.readNextRealArc(frame.fstArc, fstReader);\n          frame.fsaState = fsa.step(top.fsaState, frame.fstArc.label);\n          if (frame.fsaState != -1) {\n            break;\n          }\n        }\n        //if (DEBUG) System.out.println(\" loadNext frame=\"+frame);\n        if (frame.fsaState == -1) {\n          return null;\n        }\n        frame.fstPos = fstReader.getPosition();\n        return frame;\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d7b1c6dfde5c14fc13ffb78626073d55020636fe","date":1374636171,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTTermsReader.TermsReader.IntersectTermsEnum#loadNextFrame(Frame,Frame).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTTermsReader.TermsReader.IntersectTermsEnum#loadNextFrame(Frame,Frame).mjava","sourceNew":"      /** Load frame for sibling arc(node) on fst */\n      Frame loadNextFrame(Frame top, Frame frame) throws IOException {\n        if (!canRewind(frame)) {\n          return null;\n        }\n        while (!frame.fstArc.isLast()) {\n          frame.fstArc = fst.readNextRealArc(frame.fstArc, fstReader);\n          frame.fsaState = fsa.step(top.fsaState, frame.fstArc.label);\n          if (frame.fsaState != -1) {\n            break;\n          }\n        }\n        //if (DEBUG) System.out.println(\" loadNext frame=\"+frame);\n        if (frame.fsaState == -1) {\n          return null;\n        }\n        return frame;\n      }\n\n","sourceOld":"      /** Load frame for sibling arc(node) on fst */\n      Frame loadNextFrame(Frame top, Frame frame) throws IOException {\n        if (!canRewind(frame)) {\n          return null;\n        }\n        fstReader.setPosition(frame.fstPos);\n        while (!frame.fstArc.isLast()) {\n          frame.fstArc = fst.readNextRealArc(frame.fstArc, fstReader);\n          frame.fsaState = fsa.step(top.fsaState, frame.fstArc.label);\n          if (frame.fsaState != -1) {\n            break;\n          }\n        }\n        //if (DEBUG) System.out.println(\" loadNext frame=\"+frame);\n        if (frame.fsaState == -1) {\n          return null;\n        }\n        frame.fstPos = fstReader.getPosition();\n        return frame;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6904bcc97d8afa27bd72ee29ac01e525e327ad4","date":1377958787,"type":5,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/temp/TempFSTTermsReader.TermsReader.IntersectTermsEnum#loadNextFrame(Frame,Frame).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTTermsReader.TermsReader.IntersectTermsEnum#loadNextFrame(Frame,Frame).mjava","sourceNew":"      /** Load frame for sibling arc(node) on fst */\n      Frame loadNextFrame(Frame top, Frame frame) throws IOException {\n        if (!canRewind(frame)) {\n          return null;\n        }\n        while (!frame.fstArc.isLast()) {\n          frame.fstArc = fst.readNextRealArc(frame.fstArc, fstReader);\n          frame.fsaState = fsa.step(top.fsaState, frame.fstArc.label);\n          if (frame.fsaState != -1) {\n            break;\n          }\n        }\n        //if (DEBUG) System.out.println(\" loadNext frame=\"+frame);\n        if (frame.fsaState == -1) {\n          return null;\n        }\n        return frame;\n      }\n\n","sourceOld":"      /** Load frame for sibling arc(node) on fst */\n      Frame loadNextFrame(Frame top, Frame frame) throws IOException {\n        if (!canRewind(frame)) {\n          return null;\n        }\n        while (!frame.fstArc.isLast()) {\n          frame.fstArc = fst.readNextRealArc(frame.fstArc, fstReader);\n          frame.fsaState = fsa.step(top.fsaState, frame.fstArc.label);\n          if (frame.fsaState != -1) {\n            break;\n          }\n        }\n        //if (DEBUG) System.out.println(\" loadNext frame=\"+frame);\n        if (frame.fsaState == -1) {\n          return null;\n        }\n        return frame;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":["d7b1c6dfde5c14fc13ffb78626073d55020636fe"],"d7b1c6dfde5c14fc13ffb78626073d55020636fe":["050ba1ba249733cac50c2612418b7179591d2df9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"050ba1ba249733cac50c2612418b7179591d2df9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817","050ba1ba249733cac50c2612418b7179591d2df9"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":[],"d7b1c6dfde5c14fc13ffb78626073d55020636fe":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4"],"050ba1ba249733cac50c2612418b7179591d2df9":["d7b1c6dfde5c14fc13ffb78626073d55020636fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}