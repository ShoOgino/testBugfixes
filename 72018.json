{"path":"solr/core/src/java/org/apache/solr/schema/FileExchangeRateProvider[CurrencyField]#addRate(Map[String,Map[String,Double]],String,String,double).mjava","commits":[{"id":"c2635332d49f7c5a0b484950462a01775512628e","date":1331332806,"type":0,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/FileExchangeRateProvider[CurrencyField]#addRate(Map[String,Map[String,Double]],String,String,double).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Registers the specified exchange rate.\n   *\n   * @param ratesMap           The map to add rate to\n   * @param sourceCurrencyCode The source currency.\n   * @param targetCurrencyCode The target currency.\n   * @param rate               The known exchange rate.\n   */\n  private void addRate(Map<String, Map<String, Double>> ratesMap, String sourceCurrencyCode, String targetCurrencyCode, double rate) {\n    Map<String, Double> rhs = ratesMap.get(sourceCurrencyCode);\n\n    if (rhs == null) {\n      rhs = new HashMap<String, Double>();\n      ratesMap.put(sourceCurrencyCode, rhs);\n    }\n\n    rhs.put(targetCurrencyCode, rate);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/FileExchangeRateProvider[CurrencyField]#addRate(Map[String,Map[String,Double]],String,String,double).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Registers the specified exchange rate.\n   *\n   * @param ratesMap           The map to add rate to\n   * @param sourceCurrencyCode The source currency.\n   * @param targetCurrencyCode The target currency.\n   * @param rate               The known exchange rate.\n   */\n  private void addRate(Map<String, Map<String, Double>> ratesMap, String sourceCurrencyCode, String targetCurrencyCode, double rate) {\n    Map<String, Double> rhs = ratesMap.get(sourceCurrencyCode);\n\n    if (rhs == null) {\n      rhs = new HashMap<String, Double>();\n      ratesMap.put(sourceCurrencyCode, rhs);\n    }\n\n    rhs.put(targetCurrencyCode, rate);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/FileExchangeRateProvider[CurrencyField]#addRate(Map[String,Map[String,Double]],String,String,double).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/FileExchangeRateProvider[CurrencyField]#addRate(Map[String,Map[String,Double]],String,String,double).mjava","sourceNew":"  /**\n   * Registers the specified exchange rate.\n   *\n   * @param ratesMap           The map to add rate to\n   * @param sourceCurrencyCode The source currency.\n   * @param targetCurrencyCode The target currency.\n   * @param rate               The known exchange rate.\n   */\n  private void addRate(Map<String, Map<String, Double>> ratesMap, String sourceCurrencyCode, String targetCurrencyCode, double rate) {\n    Map<String, Double> rhs = ratesMap.get(sourceCurrencyCode);\n\n    if (rhs == null) {\n      rhs = new HashMap<>();\n      ratesMap.put(sourceCurrencyCode, rhs);\n    }\n\n    rhs.put(targetCurrencyCode, rate);\n  }\n\n","sourceOld":"  /**\n   * Registers the specified exchange rate.\n   *\n   * @param ratesMap           The map to add rate to\n   * @param sourceCurrencyCode The source currency.\n   * @param targetCurrencyCode The target currency.\n   * @param rate               The known exchange rate.\n   */\n  private void addRate(Map<String, Map<String, Double>> ratesMap, String sourceCurrencyCode, String targetCurrencyCode, double rate) {\n    Map<String, Double> rhs = ratesMap.get(sourceCurrencyCode);\n\n    if (rhs == null) {\n      rhs = new HashMap<String, Double>();\n      ratesMap.put(sourceCurrencyCode, rhs);\n    }\n\n    rhs.put(targetCurrencyCode, rate);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f107636c2cc82350a2607d774c092da5b73152e5","date":1498227268,"type":5,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/FileExchangeRateProvider#addRate(Map[String,Map[String,Double]],String,String,double).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/FileExchangeRateProvider[CurrencyField]#addRate(Map[String,Map[String,Double]],String,String,double).mjava","sourceNew":"  /**\n   * Registers the specified exchange rate.\n   *\n   * @param ratesMap           The map to add rate to\n   * @param sourceCurrencyCode The source currency.\n   * @param targetCurrencyCode The target currency.\n   * @param rate               The known exchange rate.\n   */\n  private void addRate(Map<String, Map<String, Double>> ratesMap, String sourceCurrencyCode, String targetCurrencyCode, double rate) {\n    Map<String, Double> rhs = ratesMap.get(sourceCurrencyCode);\n\n    if (rhs == null) {\n      rhs = new HashMap<>();\n      ratesMap.put(sourceCurrencyCode, rhs);\n    }\n\n    rhs.put(targetCurrencyCode, rate);\n  }\n\n","sourceOld":"  /**\n   * Registers the specified exchange rate.\n   *\n   * @param ratesMap           The map to add rate to\n   * @param sourceCurrencyCode The source currency.\n   * @param targetCurrencyCode The target currency.\n   * @param rate               The known exchange rate.\n   */\n  private void addRate(Map<String, Map<String, Double>> ratesMap, String sourceCurrencyCode, String targetCurrencyCode, double rate) {\n    Map<String, Double> rhs = ratesMap.get(sourceCurrencyCode);\n\n    if (rhs == null) {\n      rhs = new HashMap<>();\n      ratesMap.put(sourceCurrencyCode, rhs);\n    }\n\n    rhs.put(targetCurrencyCode, rate);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":5,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/FileExchangeRateProvider#addRate(Map[String,Map[String,Double]],String,String,double).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/FileExchangeRateProvider[CurrencyField]#addRate(Map[String,Map[String,Double]],String,String,double).mjava","sourceNew":"  /**\n   * Registers the specified exchange rate.\n   *\n   * @param ratesMap           The map to add rate to\n   * @param sourceCurrencyCode The source currency.\n   * @param targetCurrencyCode The target currency.\n   * @param rate               The known exchange rate.\n   */\n  private void addRate(Map<String, Map<String, Double>> ratesMap, String sourceCurrencyCode, String targetCurrencyCode, double rate) {\n    Map<String, Double> rhs = ratesMap.get(sourceCurrencyCode);\n\n    if (rhs == null) {\n      rhs = new HashMap<>();\n      ratesMap.put(sourceCurrencyCode, rhs);\n    }\n\n    rhs.put(targetCurrencyCode, rate);\n  }\n\n","sourceOld":"  /**\n   * Registers the specified exchange rate.\n   *\n   * @param ratesMap           The map to add rate to\n   * @param sourceCurrencyCode The source currency.\n   * @param targetCurrencyCode The target currency.\n   * @param rate               The known exchange rate.\n   */\n  private void addRate(Map<String, Map<String, Double>> ratesMap, String sourceCurrencyCode, String targetCurrencyCode, double rate) {\n    Map<String, Double> rhs = ratesMap.get(sourceCurrencyCode);\n\n    if (rhs == null) {\n      rhs = new HashMap<>();\n      ratesMap.put(sourceCurrencyCode, rhs);\n    }\n\n    rhs.put(targetCurrencyCode, rate);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/FileExchangeRateProvider#addRate(Map[String,Map[String,Double]],String,String,double).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/FileExchangeRateProvider[CurrencyField]#addRate(Map[String,Map[String,Double]],String,String,double).mjava","sourceNew":"  /**\n   * Registers the specified exchange rate.\n   *\n   * @param ratesMap           The map to add rate to\n   * @param sourceCurrencyCode The source currency.\n   * @param targetCurrencyCode The target currency.\n   * @param rate               The known exchange rate.\n   */\n  private void addRate(Map<String, Map<String, Double>> ratesMap, String sourceCurrencyCode, String targetCurrencyCode, double rate) {\n    Map<String, Double> rhs = ratesMap.get(sourceCurrencyCode);\n\n    if (rhs == null) {\n      rhs = new HashMap<>();\n      ratesMap.put(sourceCurrencyCode, rhs);\n    }\n\n    rhs.put(targetCurrencyCode, rate);\n  }\n\n","sourceOld":"  /**\n   * Registers the specified exchange rate.\n   *\n   * @param ratesMap           The map to add rate to\n   * @param sourceCurrencyCode The source currency.\n   * @param targetCurrencyCode The target currency.\n   * @param rate               The known exchange rate.\n   */\n  private void addRate(Map<String, Map<String, Double>> ratesMap, String sourceCurrencyCode, String targetCurrencyCode, double rate) {\n    Map<String, Double> rhs = ratesMap.get(sourceCurrencyCode);\n\n    if (rhs == null) {\n      rhs = new HashMap<>();\n      ratesMap.put(sourceCurrencyCode, rhs);\n    }\n\n    rhs.put(targetCurrencyCode, rate);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c2635332d49f7c5a0b484950462a01775512628e"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["c2635332d49f7c5a0b484950462a01775512628e"],"c2635332d49f7c5a0b484950462a01775512628e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","f107636c2cc82350a2607d774c092da5b73152e5"],"28288370235ed02234a64753cdbf0c6ec096304a":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","f107636c2cc82350a2607d774c092da5b73152e5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"],"f107636c2cc82350a2607d774c092da5b73152e5":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a","f107636c2cc82350a2607d774c092da5b73152e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["38e3b736c7ca086d61b7dbb841c905ee115490da","c2635332d49f7c5a0b484950462a01775512628e"],"c2635332d49f7c5a0b484950462a01775512628e":["38e3b736c7ca086d61b7dbb841c905ee115490da","634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f107636c2cc82350a2607d774c092da5b73152e5":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}