{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest#testRollupWithNoParallel().mjava","commits":[{"id":"85b7d92fa7b7dac117c267e0ad18c1f62df5a15c","date":1534705178,"type":0,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest#testRollupWithNoParallel().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testRollupWithNoParallel() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamContext streamContext = new StreamContext();\n    SolrClientCache solrClientCache = new SolrClientCache();\n    streamContext.setSolrClientCache(solrClientCache);\n\n    try {\n      //Intentionally adding partitionKeys to trigger SOLR-12674\n      SolrParams sParamsA = mapParams(\"q\", \"*:*\", \"fl\", \"a_s,a_i,a_f\", \"sort\", \"a_s asc\", \"partitionKeys\", \"a_s\");\n      CloudSolrStream stream = new CloudSolrStream(zkHost, COLLECTIONORALIAS, sParamsA);\n\n      Bucket[] buckets = {new Bucket(\"a_s\")};\n\n      Metric[] metrics = {new SumMetric(\"a_i\"),\n          new SumMetric(\"a_f\"),\n          new MinMetric(\"a_i\"),\n          new MinMetric(\"a_f\"),\n          new MaxMetric(\"a_i\"),\n          new MaxMetric(\"a_f\"),\n          new MeanMetric(\"a_i\"),\n          new MeanMetric(\"a_f\"),\n          new CountMetric()};\n\n      RollupStream rollupStream = new RollupStream(stream, buckets, metrics);\n      rollupStream.setStreamContext(streamContext);\n      List<Tuple> tuples = getTuples(rollupStream);\n      assertEquals(3, tuples.size());\n\n\n      List<String> shardUrls = TupleStream.getShards(cluster.getZkServer().getZkAddress(), COLLECTIONORALIAS, streamContext);\n      ModifiableSolrParams solrParams = new ModifiableSolrParams();\n      solrParams.add(\"qt\", \"/stream\");\n      solrParams.add(\"expr\", \"rollup(search(\" + COLLECTIONORALIAS + \",q=\\\"*:*\\\",fl=\\\"a_s,a_i,a_f\\\",sort=\\\"a_s desc\\\",partitionKeys=\\\"a_s\\\"),over=\\\"a_s\\\")\\n\");\n      SolrStream solrStream = new SolrStream(shardUrls.get(0), solrParams);\n      streamContext = new StreamContext();\n      solrStream.setStreamContext(streamContext);\n      tuples = getTuples(solrStream);\n      assert (tuples.size() == 3);\n    } finally {\n      solrClientCache.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b73cc5cc718a5ccdc940b7e3ecbf17e6c145d233","date":1543335722,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest#testRollupWithNoParallel().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest#testRollupWithNoParallel().mjava","sourceNew":"  @Test\n  public void testRollupWithNoParallel() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamContext streamContext = new StreamContext();\n    SolrClientCache solrClientCache = new SolrClientCache();\n    streamContext.setSolrClientCache(solrClientCache);\n\n    try {\n      //Intentionally adding partitionKeys to trigger SOLR-12674\n      SolrParams sParamsA = mapParams(\"q\", \"*:*\", \"fl\", \"a_s,a_i,a_f\", \"sort\", \"a_s asc\", \"partitionKeys\", \"a_s\", \"qt\", \"/export\" );\n      CloudSolrStream stream = new CloudSolrStream(zkHost, COLLECTIONORALIAS, sParamsA);\n\n      Bucket[] buckets = {new Bucket(\"a_s\")};\n\n      Metric[] metrics = {new SumMetric(\"a_i\"),\n          new SumMetric(\"a_f\"),\n          new MinMetric(\"a_i\"),\n          new MinMetric(\"a_f\"),\n          new MaxMetric(\"a_i\"),\n          new MaxMetric(\"a_f\"),\n          new MeanMetric(\"a_i\"),\n          new MeanMetric(\"a_f\"),\n          new CountMetric()};\n\n      RollupStream rollupStream = new RollupStream(stream, buckets, metrics);\n      rollupStream.setStreamContext(streamContext);\n      List<Tuple> tuples = getTuples(rollupStream);\n      assertEquals(3, tuples.size());\n\n\n      List<String> shardUrls = TupleStream.getShards(cluster.getZkServer().getZkAddress(), COLLECTIONORALIAS, streamContext);\n      ModifiableSolrParams solrParams = new ModifiableSolrParams();\n      solrParams.add(\"qt\", \"/stream\");\n      solrParams.add(\"expr\", \"rollup(search(\" + COLLECTIONORALIAS + \",q=\\\"*:*\\\",fl=\\\"a_s,a_i,a_f\\\",sort=\\\"a_s desc\\\",partitionKeys=\\\"a_s\\\", qt=\\\"/export\\\"),over=\\\"a_s\\\")\\n\");\n      SolrStream solrStream = new SolrStream(shardUrls.get(0), solrParams);\n      streamContext = new StreamContext();\n      solrStream.setStreamContext(streamContext);\n      tuples = getTuples(solrStream);\n      assert (tuples.size() == 3);\n    } finally {\n      solrClientCache.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testRollupWithNoParallel() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamContext streamContext = new StreamContext();\n    SolrClientCache solrClientCache = new SolrClientCache();\n    streamContext.setSolrClientCache(solrClientCache);\n\n    try {\n      //Intentionally adding partitionKeys to trigger SOLR-12674\n      SolrParams sParamsA = mapParams(\"q\", \"*:*\", \"fl\", \"a_s,a_i,a_f\", \"sort\", \"a_s asc\", \"partitionKeys\", \"a_s\");\n      CloudSolrStream stream = new CloudSolrStream(zkHost, COLLECTIONORALIAS, sParamsA);\n\n      Bucket[] buckets = {new Bucket(\"a_s\")};\n\n      Metric[] metrics = {new SumMetric(\"a_i\"),\n          new SumMetric(\"a_f\"),\n          new MinMetric(\"a_i\"),\n          new MinMetric(\"a_f\"),\n          new MaxMetric(\"a_i\"),\n          new MaxMetric(\"a_f\"),\n          new MeanMetric(\"a_i\"),\n          new MeanMetric(\"a_f\"),\n          new CountMetric()};\n\n      RollupStream rollupStream = new RollupStream(stream, buckets, metrics);\n      rollupStream.setStreamContext(streamContext);\n      List<Tuple> tuples = getTuples(rollupStream);\n      assertEquals(3, tuples.size());\n\n\n      List<String> shardUrls = TupleStream.getShards(cluster.getZkServer().getZkAddress(), COLLECTIONORALIAS, streamContext);\n      ModifiableSolrParams solrParams = new ModifiableSolrParams();\n      solrParams.add(\"qt\", \"/stream\");\n      solrParams.add(\"expr\", \"rollup(search(\" + COLLECTIONORALIAS + \",q=\\\"*:*\\\",fl=\\\"a_s,a_i,a_f\\\",sort=\\\"a_s desc\\\",partitionKeys=\\\"a_s\\\"),over=\\\"a_s\\\")\\n\");\n      SolrStream solrStream = new SolrStream(shardUrls.get(0), solrParams);\n      streamContext = new StreamContext();\n      solrStream.setStreamContext(streamContext);\n      tuples = getTuples(solrStream);\n      assert (tuples.size() == 3);\n    } finally {\n      solrClientCache.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85b7d92fa7b7dac117c267e0ad18c1f62df5a15c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b73cc5cc718a5ccdc940b7e3ecbf17e6c145d233"],"b73cc5cc718a5ccdc940b7e3ecbf17e6c145d233":["85b7d92fa7b7dac117c267e0ad18c1f62df5a15c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["85b7d92fa7b7dac117c267e0ad18c1f62df5a15c"],"85b7d92fa7b7dac117c267e0ad18c1f62df5a15c":["b73cc5cc718a5ccdc940b7e3ecbf17e6c145d233"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b73cc5cc718a5ccdc940b7e3ecbf17e6c145d233":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}