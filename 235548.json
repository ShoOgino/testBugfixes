{"path":"lucene/core/src/test/org/apache/lucene/analysis/TestDelegatingAnalyzerWrapper#testDelegatesNormalization().mjava","commits":[{"id":"1964308aac54eb27f1a144665f19e6bfa27eca60","date":1477578465,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestDelegatingAnalyzerWrapper#testDelegatesNormalization().mjava","pathOld":"/dev/null","sourceNew":"  public void testDelegatesNormalization() {\n    Analyzer analyzer1 = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    DelegatingAnalyzerWrapper w1 = new DelegatingAnalyzerWrapper(Analyzer.GLOBAL_REUSE_STRATEGY) {\n      @Override\n      protected Analyzer getWrappedAnalyzer(String fieldName) {\n        return analyzer1;\n      }\n    };\n    assertEquals(new BytesRef(\"Ab C\"), w1.normalize(\"foo\", \"Ab C\"));\n\n    Analyzer analyzer2 = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, true);\n    DelegatingAnalyzerWrapper w2 = new DelegatingAnalyzerWrapper(Analyzer.GLOBAL_REUSE_STRATEGY) {\n      @Override\n      protected Analyzer getWrappedAnalyzer(String fieldName) {\n        return analyzer2;\n      }\n    };\n    assertEquals(new BytesRef(\"ab c\"), w2.normalize(\"foo\", \"Ab C\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestDelegatingAnalyzerWrapper#testDelegatesNormalization().mjava","pathOld":"/dev/null","sourceNew":"  public void testDelegatesNormalization() {\n    Analyzer analyzer1 = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    DelegatingAnalyzerWrapper w1 = new DelegatingAnalyzerWrapper(Analyzer.GLOBAL_REUSE_STRATEGY) {\n      @Override\n      protected Analyzer getWrappedAnalyzer(String fieldName) {\n        return analyzer1;\n      }\n    };\n    assertEquals(new BytesRef(\"Ab C\"), w1.normalize(\"foo\", \"Ab C\"));\n\n    Analyzer analyzer2 = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, true);\n    DelegatingAnalyzerWrapper w2 = new DelegatingAnalyzerWrapper(Analyzer.GLOBAL_REUSE_STRATEGY) {\n      @Override\n      protected Analyzer getWrappedAnalyzer(String fieldName) {\n        return analyzer2;\n      }\n    };\n    assertEquals(new BytesRef(\"ab c\"), w2.normalize(\"foo\", \"Ab C\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e24ef15e7e97c77f0829a62180966fccd2e94b5","date":1477623326,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestDelegatingAnalyzerWrapper#testDelegatesNormalization().mjava","pathOld":"/dev/null","sourceNew":"  public void testDelegatesNormalization() {\n    Analyzer analyzer1 = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    DelegatingAnalyzerWrapper w1 = new DelegatingAnalyzerWrapper(Analyzer.GLOBAL_REUSE_STRATEGY) {\n      @Override\n      protected Analyzer getWrappedAnalyzer(String fieldName) {\n        return analyzer1;\n      }\n    };\n    assertEquals(new BytesRef(\"Ab C\"), w1.normalize(\"foo\", \"Ab C\"));\n\n    Analyzer analyzer2 = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, true);\n    DelegatingAnalyzerWrapper w2 = new DelegatingAnalyzerWrapper(Analyzer.GLOBAL_REUSE_STRATEGY) {\n      @Override\n      protected Analyzer getWrappedAnalyzer(String fieldName) {\n        return analyzer2;\n      }\n    };\n    assertEquals(new BytesRef(\"ab c\"), w2.normalize(\"foo\", \"Ab C\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1964308aac54eb27f1a144665f19e6bfa27eca60":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1964308aac54eb27f1a144665f19e6bfa27eca60"],"7e24ef15e7e97c77f0829a62180966fccd2e94b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1964308aac54eb27f1a144665f19e6bfa27eca60"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7e24ef15e7e97c77f0829a62180966fccd2e94b5"]},"commit2Childs":{"1964308aac54eb27f1a144665f19e6bfa27eca60":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","7e24ef15e7e97c77f0829a62180966fccd2e94b5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1964308aac54eb27f1a144665f19e6bfa27eca60","80d0e6d59ae23f4a6f30eaf40bfb40742300287f","7e24ef15e7e97c77f0829a62180966fccd2e94b5"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"7e24ef15e7e97c77f0829a62180966fccd2e94b5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}