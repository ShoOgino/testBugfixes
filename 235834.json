{"path":"solr/core/src/test/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessorTest#testFailedDocument(Instant,String).mjava","commits":[{"id":"af3e10d8a1fbcc5c79b22f7477e79de467dd326c","date":1515178406,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessorTest#testFailedDocument(Instant,String).mjava","pathOld":"/dev/null","sourceNew":"  private void testFailedDocument(Instant timestamp, String errorMsg) throws SolrServerException, IOException {\n    try {\n      final UpdateResponse resp = solrClient.add(alias, newDoc(timestamp));\n      // if we have a TolerantUpdateProcessor then we see it there)\n      final Object errors = resp.getResponseHeader().get(\"errors\"); // Tolerant URP\n      assertTrue(errors != null && errors.toString().contains(errorMsg));\n    } catch (SolrException e) {\n      assertTrue(e.getMessage().contains(errorMsg));\n    }\n    numDocsDeletedOrFailed++;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessorTest#testFailedDocument(Instant,String).mjava","pathOld":"/dev/null","sourceNew":"  private void testFailedDocument(Instant timestamp, String errorMsg) throws SolrServerException, IOException {\n    try {\n      final UpdateResponse resp = solrClient.add(alias, newDoc(timestamp));\n      // if we have a TolerantUpdateProcessor then we see it there)\n      final Object errors = resp.getResponseHeader().get(\"errors\"); // Tolerant URP\n      assertTrue(errors != null && errors.toString().contains(errorMsg));\n    } catch (SolrException e) {\n      assertTrue(e.getMessage().contains(errorMsg));\n    }\n    numDocsDeletedOrFailed++;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","af3e10d8a1fbcc5c79b22f7477e79de467dd326c"],"af3e10d8a1fbcc5c79b22f7477e79de467dd326c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"af3e10d8a1fbcc5c79b22f7477e79de467dd326c":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b94236357aaa22b76c10629851fe4e376e0cea82","af3e10d8a1fbcc5c79b22f7477e79de467dd326c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}