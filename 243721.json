{"path":"lucene/contrib/wordnet/src/java/org/apache/lucene/wordnet/Syns2Index#isDecent(String).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/wordnet/src/java/org/apache/lucene/wordnet/Syns2Index#isDecent(String).mjava","pathOld":"contrib/wordnet/src/java/org/apache/lucene/wordnet/Syns2Index#isDecent(String).mjava","sourceNew":"    /**\n     * Checks to see if a word contains only alphabetic characters by\n     * checking it one character at a time.\n     *\n     * @param s string to check\n     * @return <code>true</code> if the string is decent\n     */\n    private static boolean isDecent(String s)\n    {\n        int len = s.length();\n        for (int i = 0; i < len; i++)\n        {\n            if (!Character.isLetter(s.charAt(i)))\n            {\n                return false;\n            }\n        }\n        return true;\n    }\n\n","sourceOld":"    /**\n     * Checks to see if a word contains only alphabetic characters by\n     * checking it one character at a time.\n     *\n     * @param s string to check\n     * @return <code>true</code> if the string is decent\n     */\n    private static boolean isDecent(String s)\n    {\n        int len = s.length();\n        for (int i = 0; i < len; i++)\n        {\n            if (!Character.isLetter(s.charAt(i)))\n            {\n                return false;\n            }\n        }\n        return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c","date":1310389132,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/wordnet/src/java/org/apache/lucene/wordnet/Syns2Index#isDecent(String).mjava","sourceNew":null,"sourceOld":"    /**\n     * Checks to see if a word contains only alphabetic characters by\n     * checking it one character at a time.\n     *\n     * @param s string to check\n     * @return <code>true</code> if the string is decent\n     */\n    private static boolean isDecent(String s)\n    {\n        int len = s.length();\n        for (int i = 0; i < len; i++)\n        {\n            if (!Character.isLetter(s.charAt(i)))\n            {\n                return false;\n            }\n        }\n        return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["44d6f0ab53c1962856b9f48dedb7a2a6cc18905c"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["44d6f0ab53c1962856b9f48dedb7a2a6cc18905c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}