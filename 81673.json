{"path":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#isMerged(SegmentInfoPerCommit).mjava","commits":[{"id":"088a7ef694fd43d5d9a4d200c4005865f773d1e7","date":1371136274,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#isMerged(SegmentInfoPerCommit).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LogMergePolicy#isMerged(SegmentInfoPerCommit).mjava","sourceNew":"  /** Returns true if this single info is already fully merged (has no\n   *  pending deletes, is in the same dir as the\n   *  writer, and matches the current compound file setting */\n  protected final boolean isMerged(SegmentInfoPerCommit info) {\n    IndexWriter w = writer.get();\n    assert w != null;\n    boolean hasDeletions = w.numDeletedDocs(info) > 0;\n    return !hasDeletions &&\n      info.info.dir == w.getDirectory() &&\n      ((noCFSRatio > 0.0 && noCFSRatio < 1.0) || maxCFSSegmentSize < Long.MAX_VALUE);\n  }\n\n","sourceOld":"  /** Returns true if this single info is already fully merged (has no\n   *  pending norms or deletes, is in the same dir as the\n   *  writer, and matches the current compound file setting */\n  protected boolean isMerged(SegmentInfoPerCommit info)\n    throws IOException {\n    IndexWriter w = writer.get();\n    assert w != null;\n    boolean hasDeletions = w.numDeletedDocs(info) > 0;\n    return !hasDeletions &&\n      info.info.dir == w.getDirectory() &&\n      (info.info.getUseCompoundFile() == useCompoundFile || noCFSRatio < 1.0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#isMerged(SegmentCommitInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#isMerged(SegmentInfoPerCommit).mjava","sourceNew":"  /** Returns true if this single info is already fully merged (has no\n   *  pending deletes, is in the same dir as the\n   *  writer, and matches the current compound file setting */\n  protected final boolean isMerged(SegmentCommitInfo info) {\n    IndexWriter w = writer.get();\n    assert w != null;\n    boolean hasDeletions = w.numDeletedDocs(info) > 0;\n    return !hasDeletions &&\n      info.info.dir == w.getDirectory() &&\n      ((noCFSRatio > 0.0 && noCFSRatio < 1.0) || maxCFSSegmentSize < Long.MAX_VALUE);\n  }\n\n","sourceOld":"  /** Returns true if this single info is already fully merged (has no\n   *  pending deletes, is in the same dir as the\n   *  writer, and matches the current compound file setting */\n  protected final boolean isMerged(SegmentInfoPerCommit info) {\n    IndexWriter w = writer.get();\n    assert w != null;\n    boolean hasDeletions = w.numDeletedDocs(info) > 0;\n    return !hasDeletions &&\n      info.info.dir == w.getDirectory() &&\n      ((noCFSRatio > 0.0 && noCFSRatio < 1.0) || maxCFSSegmentSize < Long.MAX_VALUE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["088a7ef694fd43d5d9a4d200c4005865f773d1e7"],"088a7ef694fd43d5d9a4d200c4005865f773d1e7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"]},"commit2Childs":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"088a7ef694fd43d5d9a4d200c4005865f773d1e7":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["088a7ef694fd43d5d9a4d200c4005865f773d1e7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}