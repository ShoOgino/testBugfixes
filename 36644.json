{"path":"src/java/org/apache/lucene/index/SegmentTermPositions#readDeltaPosition().mjava","commits":[{"id":"8522ae207a56c6db28ca06fe6cc33e70911c3600","date":1173935743,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentTermPositions#readDeltaPosition().mjava","pathOld":"/dev/null","sourceNew":"  private final int readDeltaPosition() throws IOException {\n    int delta = proxStream.readVInt();\n    if (currentFieldStoresPayloads) {\n      // if the current field stores payloads then\n      // the position delta is shifted one bit to the left.\n      // if the LSB is set, then we have to read the current\n      // payload length\n      if ((delta & 1) != 0) {\n        payloadLength = proxStream.readVInt();\n      } \n      delta >>>= 1;\n      needToLoadPayload = true;\n    } else {\n      payloadLength = 0;\n      needToLoadPayload = false;\n    }\n    return delta;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21f1a29c71d77edc36e6fc9cd892f93026127388","date":1194924816,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentTermPositions#readDeltaPosition().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentTermPositions#readDeltaPosition().mjava","sourceNew":"  private final int readDeltaPosition() throws IOException {\n    int delta = proxStream.readVInt();\n    if (currentFieldStoresPayloads) {\n      // if the current field stores payloads then\n      // the position delta is shifted one bit to the left.\n      // if the LSB is set, then we have to read the current\n      // payload length\n      if ((delta & 1) != 0) {\n        payloadLength = proxStream.readVInt();\n      } \n      delta >>>= 1;\n      needToLoadPayload = true;\n    }\n    return delta;\n  }\n\n","sourceOld":"  private final int readDeltaPosition() throws IOException {\n    int delta = proxStream.readVInt();\n    if (currentFieldStoresPayloads) {\n      // if the current field stores payloads then\n      // the position delta is shifted one bit to the left.\n      // if the LSB is set, then we have to read the current\n      // payload length\n      if ((delta & 1) != 0) {\n        payloadLength = proxStream.readVInt();\n      } \n      delta >>>= 1;\n      needToLoadPayload = true;\n    } else {\n      payloadLength = 0;\n      needToLoadPayload = false;\n    }\n    return delta;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentTermPositions#readDeltaPosition().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentTermPositions#readDeltaPosition().mjava","sourceNew":"  private final int readDeltaPosition() throws IOException {\n    int delta = proxStream.readVInt();\n    if (currentFieldStoresPayloads) {\n      // if the current field stores payloads then\n      // the position delta is shifted one bit to the left.\n      // if the LSB is set, then we have to read the current\n      // payload length\n      if ((delta & 1) != 0) {\n        payloadLength = proxStream.readVInt();\n      } \n      delta >>>= 1;\n      needToLoadPayload = true;\n    }\n    return delta;\n  }\n\n","sourceOld":"  private final int readDeltaPosition() throws IOException {\n    int delta = proxStream.readVInt();\n    if (currentFieldStoresPayloads) {\n      // if the current field stores payloads then\n      // the position delta is shifted one bit to the left.\n      // if the LSB is set, then we have to read the current\n      // payload length\n      if ((delta & 1) != 0) {\n        payloadLength = proxStream.readVInt();\n      } \n      delta >>>= 1;\n      needToLoadPayload = true;\n    }\n    return delta;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8522ae207a56c6db28ca06fe6cc33e70911c3600":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21f1a29c71d77edc36e6fc9cd892f93026127388":["8522ae207a56c6db28ca06fe6cc33e70911c3600"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["21f1a29c71d77edc36e6fc9cd892f93026127388"]},"commit2Childs":{"8522ae207a56c6db28ca06fe6cc33e70911c3600":["21f1a29c71d77edc36e6fc9cd892f93026127388"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8522ae207a56c6db28ca06fe6cc33e70911c3600"],"21f1a29c71d77edc36e6fc9cd892f93026127388":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}