{"path":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SnapshotDistribStateManager#SnapshotDistribStateManager(Map[String,Object]).mjava","commits":[{"id":"edf5b262a72d10530eb2f01dc8f19060355b213e","date":1557765866,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SnapshotDistribStateManager#SnapshotDistribStateManager(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Populate this instance from a previously generated snapshot.\n   * @param snapshot previous snapshot created using this class.\n   */\n  public SnapshotDistribStateManager(Map<String, Object> snapshot) {\n    snapshot.forEach((path, value) -> {\n      Map<String, Object> map = (Map<String, Object>)value;\n      Number version = (Number)map.getOrDefault(\"version\", 0);\n      String owner = (String)map.get(\"owner\");\n      String modeStr = (String)map.getOrDefault(\"mode\", CreateMode.PERSISTENT.toString());\n      CreateMode mode = CreateMode.valueOf(modeStr);\n      byte[] bytes = null;\n      if (map.containsKey(\"data\")) {\n        bytes = Base64.base64ToByteArray((String)map.get(\"data\"));\n      }\n      dataMap.put(path, new VersionedData(version.intValue(), bytes, mode, owner));\n    });\n    log.debug(\"- loaded snapshot of {} resources\", dataMap.size());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3d2a34ea3732f91149b31bcad82026ad85fda69","date":1567850949,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SnapshotDistribStateManager#SnapshotDistribStateManager(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SnapshotDistribStateManager#SnapshotDistribStateManager(Map[String,Object]).mjava","sourceNew":"  /**\n   * Populate this instance from a previously generated snapshot.\n   * @param snapshot previous snapshot created using this class.\n   */\n  public SnapshotDistribStateManager(Map<String, Object> snapshot) {\n    this(snapshot, null);\n  }\n\n","sourceOld":"  /**\n   * Populate this instance from a previously generated snapshot.\n   * @param snapshot previous snapshot created using this class.\n   */\n  public SnapshotDistribStateManager(Map<String, Object> snapshot) {\n    snapshot.forEach((path, value) -> {\n      Map<String, Object> map = (Map<String, Object>)value;\n      Number version = (Number)map.getOrDefault(\"version\", 0);\n      String owner = (String)map.get(\"owner\");\n      String modeStr = (String)map.getOrDefault(\"mode\", CreateMode.PERSISTENT.toString());\n      CreateMode mode = CreateMode.valueOf(modeStr);\n      byte[] bytes = null;\n      if (map.containsKey(\"data\")) {\n        bytes = Base64.base64ToByteArray((String)map.get(\"data\"));\n      }\n      dataMap.put(path, new VersionedData(version.intValue(), bytes, mode, owner));\n    });\n    log.debug(\"- loaded snapshot of {} resources\", dataMap.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SnapshotDistribStateManager#SnapshotDistribStateManager(Map[String,Object]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Populate this instance from a previously generated snapshot.\n   * @param snapshot previous snapshot created using this class.\n   */\n  public SnapshotDistribStateManager(Map<String, Object> snapshot) {\n    this(snapshot, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3d2a34ea3732f91149b31bcad82026ad85fda69":["edf5b262a72d10530eb2f01dc8f19060355b213e"],"3f504512a03d978990cbff30db0522b354e846db":["d3d2a34ea3732f91149b31bcad82026ad85fda69"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"edf5b262a72d10530eb2f01dc8f19060355b213e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"d3d2a34ea3732f91149b31bcad82026ad85fda69":["3f504512a03d978990cbff30db0522b354e846db"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["edf5b262a72d10530eb2f01dc8f19060355b213e"],"edf5b262a72d10530eb2f01dc8f19060355b213e":["d3d2a34ea3732f91149b31bcad82026ad85fda69"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}