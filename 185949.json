{"path":"lucene/core/src/test/org/apache/lucene/search/TestQueryRescorer.FixedScoreQuery#equals(Object).mjava","commits":[{"id":"222ff577a0e1b2399d3151966bf561ecd7a0b7d0","date":1395575041,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestQueryRescorer.FixedScoreQuery#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public boolean equals(Object o) {\n      if ((o instanceof FixedScoreQuery) == false) {\n        return false;\n      }\n      FixedScoreQuery other = (FixedScoreQuery) o;\n      return Float.floatToIntBits(getBoost()) == Float.floatToIntBits(other.getBoost()) &&\n        reverse == other.reverse &&\n        Arrays.equals(idToNum, other.idToNum);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fdd0e99daabe8cd52cd4d7755679337bede8abe0","date":1425571318,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestQueryRescorer.FixedScoreQuery#equals(Object).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestQueryRescorer.FixedScoreQuery#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object o) {\n      if ((o instanceof FixedScoreQuery) == false) {\n        return false;\n      }\n      FixedScoreQuery other = (FixedScoreQuery) o;\n      return super.equals(o) &&\n        reverse == other.reverse &&\n        Arrays.equals(idToNum, other.idToNum);\n    }\n\n","sourceOld":"    @Override\n    public boolean equals(Object o) {\n      if ((o instanceof FixedScoreQuery) == false) {\n        return false;\n      }\n      FixedScoreQuery other = (FixedScoreQuery) o;\n      return Float.floatToIntBits(getBoost()) == Float.floatToIntBits(other.getBoost()) &&\n        reverse == other.reverse &&\n        Arrays.equals(idToNum, other.idToNum);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestQueryRescorer.FixedScoreQuery#equals(Object).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestQueryRescorer.FixedScoreQuery#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object o) {\n      if ((o instanceof FixedScoreQuery) == false) {\n        return false;\n      }\n      FixedScoreQuery other = (FixedScoreQuery) o;\n      return super.equals(o) &&\n        reverse == other.reverse &&\n        Arrays.equals(idToNum, other.idToNum);\n    }\n\n","sourceOld":"    @Override\n    public boolean equals(Object o) {\n      if ((o instanceof FixedScoreQuery) == false) {\n        return false;\n      }\n      FixedScoreQuery other = (FixedScoreQuery) o;\n      return Float.floatToIntBits(getBoost()) == Float.floatToIntBits(other.getBoost()) &&\n        reverse == other.reverse &&\n        Arrays.equals(idToNum, other.idToNum);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7bc21595222ae4f75509300fbb7726691f387f","date":1464078795,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestQueryRescorer.FixedScoreQuery#equals(Object).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestQueryRescorer.FixedScoreQuery#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object other) {\n      return sameClassAs(other) &&\n             equalsTo(getClass().cast(other));\n    }\n\n","sourceOld":"    @Override\n    public boolean equals(Object o) {\n      if ((o instanceof FixedScoreQuery) == false) {\n        return false;\n      }\n      FixedScoreQuery other = (FixedScoreQuery) o;\n      return super.equals(o) &&\n        reverse == other.reverse &&\n        Arrays.equals(idToNum, other.idToNum);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestQueryRescorer.FixedScoreQuery#equals(Object).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestQueryRescorer.FixedScoreQuery#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object other) {\n      return sameClassAs(other) &&\n             equalsTo(getClass().cast(other));\n    }\n\n","sourceOld":"    @Override\n    public boolean equals(Object o) {\n      if ((o instanceof FixedScoreQuery) == false) {\n        return false;\n      }\n      FixedScoreQuery other = (FixedScoreQuery) o;\n      return super.equals(o) &&\n        reverse == other.reverse &&\n        Arrays.equals(idToNum, other.idToNum);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"222ff577a0e1b2399d3151966bf561ecd7a0b7d0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fdd0e99daabe8cd52cd4d7755679337bede8abe0":["222ff577a0e1b2399d3151966bf561ecd7a0b7d0"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["222ff577a0e1b2399d3151966bf561ecd7a0b7d0","fdd0e99daabe8cd52cd4d7755679337bede8abe0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e7bc21595222ae4f75509300fbb7726691f387f":["fdd0e99daabe8cd52cd4d7755679337bede8abe0"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["fdd0e99daabe8cd52cd4d7755679337bede8abe0","0e7bc21595222ae4f75509300fbb7726691f387f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0e7bc21595222ae4f75509300fbb7726691f387f"]},"commit2Childs":{"222ff577a0e1b2399d3151966bf561ecd7a0b7d0":["fdd0e99daabe8cd52cd4d7755679337bede8abe0","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"fdd0e99daabe8cd52cd4d7755679337bede8abe0":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","0e7bc21595222ae4f75509300fbb7726691f387f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["222ff577a0e1b2399d3151966bf561ecd7a0b7d0"],"0e7bc21595222ae4f75509300fbb7726691f387f":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}