{"path":"solr/core/src/test/org/apache/solr/search/ReturnFieldsTest#testFunctions().mjava","commits":[{"id":"937d1992553892661e4efbb659656cc565a9e621","date":1330719427,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/ReturnFieldsTest#testFunctions().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testFunctions() {\n    ReturnFields rf = new ReturnFields( req(\"fl\", \"id sum(1,1)\") );\n    assertFalse(rf.wantsScore());\n    assertTrue( rf.wantsField( \"id\" ) );\n    assertFalse( rf.wantsAllFields() );\n    assertFalse( rf.wantsField( \"xxx\" ) );\n    assertTrue( rf.getTransformer() instanceof ValueSourceAugmenter);\n    assertEquals(\"sum(1,1)\", ((ValueSourceAugmenter) rf.getTransformer()).name);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/ReturnFieldsTest#testFunctions().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testFunctions() {\n    ReturnFields rf = new ReturnFields( req(\"fl\", \"id sum(1,1)\") );\n    assertFalse(rf.wantsScore());\n    assertTrue( rf.wantsField( \"id\" ) );\n    assertFalse( rf.wantsAllFields() );\n    assertFalse( rf.wantsField( \"xxx\" ) );\n    assertTrue( rf.getTransformer() instanceof ValueSourceAugmenter);\n    assertEquals(\"sum(1,1)\", ((ValueSourceAugmenter) rf.getTransformer()).name);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d17ffdbce80d3dce181982a9cd16f4f90bc8619a","date":1357583592,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/ReturnFieldsTest#testFunctions().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/ReturnFieldsTest#testFunctions().mjava","sourceNew":"  @Test\n  public void testFunctions() {\n    ReturnFields rf = new SolrReturnFields( req(\"fl\", \"id sum(1,1)\") );\n    assertFalse(rf.wantsScore());\n    assertTrue( rf.wantsField( \"id\" ) );\n    assertFalse( rf.wantsAllFields() );\n    assertFalse( rf.wantsField( \"xxx\" ) );\n    assertTrue( rf.getTransformer() instanceof ValueSourceAugmenter);\n    assertEquals(\"sum(1,1)\", ((ValueSourceAugmenter) rf.getTransformer()).name);\n  }\n\n","sourceOld":"  @Test\n  public void testFunctions() {\n    ReturnFields rf = new ReturnFields( req(\"fl\", \"id sum(1,1)\") );\n    assertFalse(rf.wantsScore());\n    assertTrue( rf.wantsField( \"id\" ) );\n    assertFalse( rf.wantsAllFields() );\n    assertFalse( rf.wantsField( \"xxx\" ) );\n    assertTrue( rf.getTransformer() instanceof ValueSourceAugmenter);\n    assertEquals(\"sum(1,1)\", ((ValueSourceAugmenter) rf.getTransformer()).name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/ReturnFieldsTest#testFunctions().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/ReturnFieldsTest#testFunctions().mjava","sourceNew":"  @Test\n  public void testFunctions() {\n    ReturnFields rf = new SolrReturnFields( req(\"fl\", \"id sum(1,1)\") );\n    assertFalse(rf.wantsScore());\n    assertTrue( rf.wantsField( \"id\" ) );\n    assertFalse( rf.wantsAllFields() );\n    assertFalse( rf.wantsField( \"xxx\" ) );\n    assertTrue( rf.getTransformer() instanceof ValueSourceAugmenter);\n    assertEquals(\"sum(1,1)\", ((ValueSourceAugmenter) rf.getTransformer()).name);\n  }\n\n","sourceOld":"  @Test\n  public void testFunctions() {\n    ReturnFields rf = new ReturnFields( req(\"fl\", \"id sum(1,1)\") );\n    assertFalse(rf.wantsScore());\n    assertTrue( rf.wantsField( \"id\" ) );\n    assertFalse( rf.wantsAllFields() );\n    assertFalse( rf.wantsField( \"xxx\" ) );\n    assertTrue( rf.getTransformer() instanceof ValueSourceAugmenter);\n    assertEquals(\"sum(1,1)\", ((ValueSourceAugmenter) rf.getTransformer()).name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bbe4071a9e5fdbe880c93e2adac10a688e43f4ba","date":1393290187,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/ReturnFieldsTest#testFunctions().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/ReturnFieldsTest#testFunctions().mjava","sourceNew":"  @Test\n  public void testFunctions() {\n    ReturnFields rf = new SolrReturnFields( req(\"fl\", \"exists(text),id,sum(1,1)\") );\n    assertFalse(rf.wantsScore());\n    assertTrue( rf.wantsField( \"id\" ) );\n    assertTrue( rf.wantsField( \"sum(1,1)\" ));\n    assertTrue( rf.wantsField( \"exists(text)\" ));\n    assertFalse( rf.wantsAllFields() );\n    assertFalse( rf.wantsField( \"xxx\" ) );\n    assertTrue( rf.getTransformer() instanceof DocTransformers);\n    DocTransformers transformers = (DocTransformers)rf.getTransformer();\n    assertEquals(\"exists(text)\", transformers.getTransformer(0).getName());\n    assertEquals(\"sum(1,1)\", transformers.getTransformer(1).getName());\n  }\n\n","sourceOld":"  @Test\n  public void testFunctions() {\n    ReturnFields rf = new SolrReturnFields( req(\"fl\", \"id sum(1,1)\") );\n    assertFalse(rf.wantsScore());\n    assertTrue( rf.wantsField( \"id\" ) );\n    assertFalse( rf.wantsAllFields() );\n    assertFalse( rf.wantsField( \"xxx\" ) );\n    assertTrue( rf.getTransformer() instanceof ValueSourceAugmenter);\n    assertEquals(\"sum(1,1)\", ((ValueSourceAugmenter) rf.getTransformer()).name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8","date":1393532551,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/ReturnFieldsTest#testFunctions().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/ReturnFieldsTest#testFunctions().mjava","sourceNew":"  @Test\n  public void testFunctions() {\n    ReturnFields rf = new SolrReturnFields( req(\"fl\", \"exists(text),id,sum(1,1)\") );\n    assertFalse(rf.wantsScore());\n    assertTrue( rf.wantsField( \"id\" ) );\n    assertTrue( rf.wantsField( \"sum(1,1)\" ));\n    assertTrue( rf.wantsField( \"exists(text)\" ));\n    assertFalse( rf.wantsAllFields() );\n    assertFalse( rf.wantsField( \"xxx\" ) );\n    assertTrue( rf.getTransformer() instanceof DocTransformers);\n    DocTransformers transformers = (DocTransformers)rf.getTransformer();\n    assertEquals(\"exists(text)\", transformers.getTransformer(0).getName());\n    assertEquals(\"sum(1,1)\", transformers.getTransformer(1).getName());\n  }\n\n","sourceOld":"  @Test\n  public void testFunctions() {\n    ReturnFields rf = new SolrReturnFields( req(\"fl\", \"id sum(1,1)\") );\n    assertFalse(rf.wantsScore());\n    assertTrue( rf.wantsField( \"id\" ) );\n    assertFalse( rf.wantsAllFields() );\n    assertFalse( rf.wantsField( \"xxx\" ) );\n    assertTrue( rf.getTransformer() instanceof ValueSourceAugmenter);\n    assertEquals(\"sum(1,1)\", ((ValueSourceAugmenter) rf.getTransformer()).name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bbe4071a9e5fdbe880c93e2adac10a688e43f4ba":["d17ffdbce80d3dce181982a9cd16f4f90bc8619a"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["937d1992553892661e4efbb659656cc565a9e621","d17ffdbce80d3dce181982a9cd16f4f90bc8619a"],"d17ffdbce80d3dce181982a9cd16f4f90bc8619a":["937d1992553892661e4efbb659656cc565a9e621"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","937d1992553892661e4efbb659656cc565a9e621"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"937d1992553892661e4efbb659656cc565a9e621":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8":["d17ffdbce80d3dce181982a9cd16f4f90bc8619a","bbe4071a9e5fdbe880c93e2adac10a688e43f4ba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bbe4071a9e5fdbe880c93e2adac10a688e43f4ba"]},"commit2Childs":{"bbe4071a9e5fdbe880c93e2adac10a688e43f4ba":["13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"d17ffdbce80d3dce181982a9cd16f4f90bc8619a":["bbe4071a9e5fdbe880c93e2adac10a688e43f4ba","d3fcb70cf561547c7bb1506e0cf32ca7b1287064","13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","937d1992553892661e4efbb659656cc565a9e621"],"937d1992553892661e4efbb659656cc565a9e621":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d17ffdbce80d3dce181982a9cd16f4f90bc8619a","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}