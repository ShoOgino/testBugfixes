{"path":"solr/core/src/java/org/apache/solr/cloud/Overseer#Overseer(ShardHandler,String,ZkStateReader,ZkController).mjava","commits":[{"id":"5b15576cafd8b5d06857055c28f26912321937e3","date":1396452121,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer#Overseer(ShardHandler,String,ZkStateReader,ZkController).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer#Overseer(ShardHandler,String,ZkStateReader).mjava","sourceNew":"  // overseer not responsible for closing reader\n  public Overseer(ShardHandler shardHandler, String adminPath, final ZkStateReader reader, ZkController zkController) throws KeeperException, InterruptedException {\n    this.reader = reader;\n    this.shardHandler = shardHandler;\n    this.adminPath = adminPath;\n    this.zkController = zkController;\n    this.stats = new Stats();\n  }\n\n","sourceOld":"  // overseer not responsible for closing reader\n  public Overseer(ShardHandler shardHandler, String adminPath, final ZkStateReader reader) throws KeeperException, InterruptedException {\n    this.reader = reader;\n    this.shardHandler = shardHandler;\n    this.adminPath = adminPath;\n    this.stats = new Stats();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":1,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer#Overseer(ShardHandler,String,ZkStateReader,ZkController).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer#Overseer(ShardHandler,String,ZkStateReader).mjava","sourceNew":"  // overseer not responsible for closing reader\n  public Overseer(ShardHandler shardHandler, String adminPath, final ZkStateReader reader, ZkController zkController) throws KeeperException, InterruptedException {\n    this.reader = reader;\n    this.shardHandler = shardHandler;\n    this.adminPath = adminPath;\n    this.zkController = zkController;\n    this.stats = new Stats();\n  }\n\n","sourceOld":"  // overseer not responsible for closing reader\n  public Overseer(ShardHandler shardHandler, String adminPath, final ZkStateReader reader) throws KeeperException, InterruptedException {\n    this.reader = reader;\n    this.shardHandler = shardHandler;\n    this.adminPath = adminPath;\n    this.stats = new Stats();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad7bdba3e91cf3373cda2e52239cb761fc0b452","date":1408019547,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer#Overseer(ShardHandler,UpdateShardHandler,String,ZkStateReader,ZkController,ConfigSolr).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer#Overseer(ShardHandler,String,ZkStateReader,ZkController).mjava","sourceNew":"  // overseer not responsible for closing reader\n  public Overseer(ShardHandler shardHandler,\n      UpdateShardHandler updateShardHandler, String adminPath,\n      final ZkStateReader reader, ZkController zkController, ConfigSolr config)\n      throws KeeperException, InterruptedException {\n    this.reader = reader;\n    this.shardHandler = shardHandler;\n    this.updateShardHandler = updateShardHandler;\n    this.adminPath = adminPath;\n    this.zkController = zkController;\n    this.stats = new Stats();\n    this.config = config;\n  }\n\n","sourceOld":"  // overseer not responsible for closing reader\n  public Overseer(ShardHandler shardHandler, String adminPath, final ZkStateReader reader, ZkController zkController) throws KeeperException, InterruptedException {\n    this.reader = reader;\n    this.shardHandler = shardHandler;\n    this.adminPath = adminPath;\n    this.zkController = zkController;\n    this.stats = new Stats();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5b15576cafd8b5d06857055c28f26912321937e3"],"5b15576cafd8b5d06857055c28f26912321937e3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0ad7bdba3e91cf3373cda2e52239cb761fc0b452":["5b15576cafd8b5d06857055c28f26912321937e3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0ad7bdba3e91cf3373cda2e52239cb761fc0b452"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"5b15576cafd8b5d06857055c28f26912321937e3":["5eb2511ababf862ea11e10761c70ee560cd84510","0ad7bdba3e91cf3373cda2e52239cb761fc0b452"],"0ad7bdba3e91cf3373cda2e52239cb761fc0b452":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5eb2511ababf862ea11e10761c70ee560cd84510","5b15576cafd8b5d06857055c28f26912321937e3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}