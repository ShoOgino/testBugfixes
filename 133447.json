{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence#startlThreadsWithRate(ParallelTask[]).mjava","commits":[{"id":"3353540ef2debe4c4c017e9d86e2c60f9e784336","date":1258197258,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence#startlThreadsWithRate(ParallelTask[]).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence#startlThreadsWithRate(Thread[]).mjava","sourceNew":"  // run threads with rate\n  private void startlThreadsWithRate(ParallelTask[] t) throws InterruptedException {\n    long delayStep = (perMin ? 60000 : 1000) /rate;\n    long nextStartTime = System.currentTimeMillis();\n    for (int i = 0; i < t.length; i++) {\n      long waitMore = nextStartTime - System.currentTimeMillis();\n      if (waitMore > 0) {\n        Thread.sleep(waitMore);\n      }\n      nextStartTime += delayStep; // this aims at average rate of starting threads. \n      t[i].start();\n    }\n  }\n\n","sourceOld":"  // run threads with rate\n  private void startlThreadsWithRate(Thread[] t) throws InterruptedException {\n    long delayStep = (perMin ? 60000 : 1000) /rate;\n    long nextStartTime = System.currentTimeMillis();\n    for (int i = 0; i < t.length; i++) {\n      long waitMore = nextStartTime - System.currentTimeMillis();\n      if (waitMore > 0) {\n        //System.out.println(\"thread wait: \"+waitMore+\" for rate: \"+ratePerMin+\" (delayStep=\"+delayStep+\")\");\n        Thread.sleep(waitMore);\n      }\n      nextStartTime += delayStep; // this aims at average rate of starting threads. \n      t[i].start();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence#startlThreadsWithRate(ParallelTask[]).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence#startlThreadsWithRate(ParallelTask[]).mjava","sourceNew":"  // run threads with rate\n  private void startlThreadsWithRate(ParallelTask[] t) throws InterruptedException {\n    long delayStep = (perMin ? 60000 : 1000) /rate;\n    long nextStartTime = System.currentTimeMillis();\n    for (int i = 0; i < t.length; i++) {\n      long waitMore = nextStartTime - System.currentTimeMillis();\n      if (waitMore > 0) {\n        Thread.sleep(waitMore);\n      }\n      nextStartTime += delayStep; // this aims at average rate of starting threads. \n      t[i].start();\n    }\n  }\n\n","sourceOld":"  // run threads with rate\n  private void startlThreadsWithRate(ParallelTask[] t) throws InterruptedException {\n    long delayStep = (perMin ? 60000 : 1000) /rate;\n    long nextStartTime = System.currentTimeMillis();\n    for (int i = 0; i < t.length; i++) {\n      long waitMore = nextStartTime - System.currentTimeMillis();\n      if (waitMore > 0) {\n        Thread.sleep(waitMore);\n      }\n      nextStartTime += delayStep; // this aims at average rate of starting threads. \n      t[i].start();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3353540ef2debe4c4c017e9d86e2c60f9e784336":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["3353540ef2debe4c4c017e9d86e2c60f9e784336"]},"commit2Childs":{"3353540ef2debe4c4c017e9d86e2c60f9e784336":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3353540ef2debe4c4c017e9d86e2c60f9e784336"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}