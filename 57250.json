{"path":"contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#addPartToDocument(Part,Map[String,Object],boolean).mjava","commits":[{"id":"db22d0edb2467b44638dfe7d72c29c2ef6fc84e5","date":1239654370,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#addPartToDocument(Part,Map[String,Object],boolean).mjava","pathOld":"/dev/null","sourceNew":"  public void addPartToDocument(Part part, Map<String, Object> row, boolean outerMost) throws Exception {\n    if (part instanceof Message) {\n      addEnvelopToDocument(part, row);\n    }\n\n    String ct = part.getContentType();\n    ContentType ctype = new ContentType(ct);\n    if (part.isMimeType(\"multipart/*\")) {\n      Multipart mp = (Multipart) part.getContent();\n      int count = mp.getCount();\n      if (part.isMimeType(\"multipart/alternative\"))\n        count = 1;\n      for (int i = 0; i < count; i++)\n        addPartToDocument(mp.getBodyPart(i), row, false);\n    } else if (part.isMimeType(\"message/rfc822\")) {\n      addPartToDocument((Part) part.getContent(), row, false);\n    } else {\n      String disp = part.getDisposition();\n      if (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)\n              && !processAttachment)\n        return;\n      InputStream is = part.getInputStream();\n      String fileName = part.getFileName();\n      String content = ParseUtils.getStringContent(is, TikaConfig.getDefaultConfig(), ctype.getBaseType().toLowerCase());\n      if (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)) {\n        if (row.get(ATTACHMENT) == null)\n          row.put(ATTACHMENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(ATTACHMENT);\n        contents.add(content);\n        row.put(ATTACHMENT, contents);\n        if (row.get(ATTACHMENT_NAMES) == null)\n          row.put(ATTACHMENT_NAMES, new ArrayList<String>());\n        List<String> names = (List<String>) row.get(ATTACHMENT_NAMES);\n        names.add(fileName);\n        row.put(ATTACHMENT_NAMES, names);\n      } else {\n        if (row.get(CONTENT) == null)\n          row.put(CONTENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(CONTENT);\n        contents.add(content);\n        row.put(CONTENT, contents);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42ba78899a8d7323de3bf926f840628a4a87898e","date":1253786290,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#addPartToDocument(Part,Map[String,Object],boolean).mjava","pathOld":"contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#addPartToDocument(Part,Map[String,Object],boolean).mjava","sourceNew":"  public void addPartToDocument(Part part, Map<String, Object> row, boolean outerMost) throws Exception {\n    if (part instanceof Message) {\n      addEnvelopToDocument(part, row);\n    }\n\n    String ct = part.getContentType();\n    ContentType ctype = new ContentType(ct);\n    if (part.isMimeType(\"multipart/*\")) {\n      Multipart mp = (Multipart) part.getContent();\n      int count = mp.getCount();\n      if (part.isMimeType(\"multipart/alternative\"))\n        count = 1;\n      for (int i = 0; i < count; i++)\n        addPartToDocument(mp.getBodyPart(i), row, false);\n    } else if (part.isMimeType(\"message/rfc822\")) {\n      addPartToDocument((Part) part.getContent(), row, false);\n    } else {\n      String disp = part.getDisposition();\n      if (!processAttachment || (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)))        return;\n      InputStream is = part.getInputStream();\n      String fileName = part.getFileName();\n      String content = ParseUtils.getStringContent(is, TikaConfig.getDefaultConfig(), ctype.getBaseType().toLowerCase());\n      if (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)) {\n        if (row.get(ATTACHMENT) == null)\n          row.put(ATTACHMENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(ATTACHMENT);\n        contents.add(content);\n        row.put(ATTACHMENT, contents);\n        if (row.get(ATTACHMENT_NAMES) == null)\n          row.put(ATTACHMENT_NAMES, new ArrayList<String>());\n        List<String> names = (List<String>) row.get(ATTACHMENT_NAMES);\n        names.add(fileName);\n        row.put(ATTACHMENT_NAMES, names);\n      } else {\n        if (row.get(CONTENT) == null)\n          row.put(CONTENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(CONTENT);\n        contents.add(content);\n        row.put(CONTENT, contents);\n      }\n    }\n  }\n\n","sourceOld":"  public void addPartToDocument(Part part, Map<String, Object> row, boolean outerMost) throws Exception {\n    if (part instanceof Message) {\n      addEnvelopToDocument(part, row);\n    }\n\n    String ct = part.getContentType();\n    ContentType ctype = new ContentType(ct);\n    if (part.isMimeType(\"multipart/*\")) {\n      Multipart mp = (Multipart) part.getContent();\n      int count = mp.getCount();\n      if (part.isMimeType(\"multipart/alternative\"))\n        count = 1;\n      for (int i = 0; i < count; i++)\n        addPartToDocument(mp.getBodyPart(i), row, false);\n    } else if (part.isMimeType(\"message/rfc822\")) {\n      addPartToDocument((Part) part.getContent(), row, false);\n    } else {\n      String disp = part.getDisposition();\n      if (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)\n              && !processAttachment)\n        return;\n      InputStream is = part.getInputStream();\n      String fileName = part.getFileName();\n      String content = ParseUtils.getStringContent(is, TikaConfig.getDefaultConfig(), ctype.getBaseType().toLowerCase());\n      if (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)) {\n        if (row.get(ATTACHMENT) == null)\n          row.put(ATTACHMENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(ATTACHMENT);\n        contents.add(content);\n        row.put(ATTACHMENT, contents);\n        if (row.get(ATTACHMENT_NAMES) == null)\n          row.put(ATTACHMENT_NAMES, new ArrayList<String>());\n        List<String> names = (List<String>) row.get(ATTACHMENT_NAMES);\n        names.add(fileName);\n        row.put(ATTACHMENT_NAMES, names);\n      } else {\n        if (row.get(CONTENT) == null)\n          row.put(CONTENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(CONTENT);\n        contents.add(content);\n        row.put(CONTENT, contents);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d2b69725d5832c3c9fa9df6b9081c7d4e46a281","date":1260515652,"type":5,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#addPartToDocument(Part,Map[String,Object],boolean).mjava","pathOld":"contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#addPartToDocument(Part,Map[String,Object],boolean).mjava","sourceNew":"  public void addPartToDocument(Part part, Map<String, Object> row, boolean outerMost) throws Exception {\n    if (part instanceof Message) {\n      addEnvelopToDocument(part, row);\n    }\n\n    String ct = part.getContentType();\n    ContentType ctype = new ContentType(ct);\n    if (part.isMimeType(\"multipart/*\")) {\n      Multipart mp = (Multipart) part.getContent();\n      int count = mp.getCount();\n      if (part.isMimeType(\"multipart/alternative\"))\n        count = 1;\n      for (int i = 0; i < count; i++)\n        addPartToDocument(mp.getBodyPart(i), row, false);\n    } else if (part.isMimeType(\"message/rfc822\")) {\n      addPartToDocument((Part) part.getContent(), row, false);\n    } else {\n      String disp = part.getDisposition();\n      if (!processAttachment || (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)))        return;\n      InputStream is = part.getInputStream();\n      String fileName = part.getFileName();\n      String content = ParseUtils.getStringContent(is, TikaConfig.getDefaultConfig(), ctype.getBaseType().toLowerCase());\n      if (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)) {\n        if (row.get(ATTACHMENT) == null)\n          row.put(ATTACHMENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(ATTACHMENT);\n        contents.add(content);\n        row.put(ATTACHMENT, contents);\n        if (row.get(ATTACHMENT_NAMES) == null)\n          row.put(ATTACHMENT_NAMES, new ArrayList<String>());\n        List<String> names = (List<String>) row.get(ATTACHMENT_NAMES);\n        names.add(fileName);\n        row.put(ATTACHMENT_NAMES, names);\n      } else {\n        if (row.get(CONTENT) == null)\n          row.put(CONTENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(CONTENT);\n        contents.add(content);\n        row.put(CONTENT, contents);\n      }\n    }\n  }\n\n","sourceOld":"  public void addPartToDocument(Part part, Map<String, Object> row, boolean outerMost) throws Exception {\n    if (part instanceof Message) {\n      addEnvelopToDocument(part, row);\n    }\n\n    String ct = part.getContentType();\n    ContentType ctype = new ContentType(ct);\n    if (part.isMimeType(\"multipart/*\")) {\n      Multipart mp = (Multipart) part.getContent();\n      int count = mp.getCount();\n      if (part.isMimeType(\"multipart/alternative\"))\n        count = 1;\n      for (int i = 0; i < count; i++)\n        addPartToDocument(mp.getBodyPart(i), row, false);\n    } else if (part.isMimeType(\"message/rfc822\")) {\n      addPartToDocument((Part) part.getContent(), row, false);\n    } else {\n      String disp = part.getDisposition();\n      if (!processAttachment || (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)))        return;\n      InputStream is = part.getInputStream();\n      String fileName = part.getFileName();\n      String content = ParseUtils.getStringContent(is, TikaConfig.getDefaultConfig(), ctype.getBaseType().toLowerCase());\n      if (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)) {\n        if (row.get(ATTACHMENT) == null)\n          row.put(ATTACHMENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(ATTACHMENT);\n        contents.add(content);\n        row.put(ATTACHMENT, contents);\n        if (row.get(ATTACHMENT_NAMES) == null)\n          row.put(ATTACHMENT_NAMES, new ArrayList<String>());\n        List<String> names = (List<String>) row.get(ATTACHMENT_NAMES);\n        names.add(fileName);\n        row.put(ATTACHMENT_NAMES, names);\n      } else {\n        if (row.get(CONTENT) == null)\n          row.put(CONTENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(CONTENT);\n        contents.add(content);\n        row.put(CONTENT, contents);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b7b8ee0df825b37bc7fb44a2bfd91aa08357492","date":1260863347,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#addPartToDocument(Part,Map[String,Object],boolean).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#addPartToDocument(Part,Map[String,Object],boolean).mjava","sourceNew":"  public void addPartToDocument(Part part, Map<String, Object> row, boolean outerMost) throws Exception {\n    if (part instanceof Message) {\n      addEnvelopToDocument(part, row);\n    }\n\n    String ct = part.getContentType();\n    ContentType ctype = new ContentType(ct);\n    if (part.isMimeType(\"multipart/*\")) {\n      Multipart mp = (Multipart) part.getContent();\n      int count = mp.getCount();\n      if (part.isMimeType(\"multipart/alternative\"))\n        count = 1;\n      for (int i = 0; i < count; i++)\n        addPartToDocument(mp.getBodyPart(i), row, false);\n    } else if (part.isMimeType(\"message/rfc822\")) {\n      addPartToDocument((Part) part.getContent(), row, false);\n    } else {\n      String disp = part.getDisposition();\n      if (!processAttachment || (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)))        return;\n      InputStream is = part.getInputStream();\n      String fileName = part.getFileName();\n      String content = ParseUtils.getStringContent(is, TikaConfig.getDefaultConfig(), ctype.getBaseType().toLowerCase());\n      if (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)) {\n        if (row.get(ATTACHMENT) == null)\n          row.put(ATTACHMENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(ATTACHMENT);\n        contents.add(content);\n        row.put(ATTACHMENT, contents);\n        if (row.get(ATTACHMENT_NAMES) == null)\n          row.put(ATTACHMENT_NAMES, new ArrayList<String>());\n        List<String> names = (List<String>) row.get(ATTACHMENT_NAMES);\n        names.add(fileName);\n        row.put(ATTACHMENT_NAMES, names);\n      } else {\n        if (row.get(CONTENT) == null)\n          row.put(CONTENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(CONTENT);\n        contents.add(content);\n        row.put(CONTENT, contents);\n      }\n    }\n  }\n\n","sourceOld":"  public void addPartToDocument(Part part, Map<String, Object> row, boolean outerMost) throws Exception {\n    if (part instanceof Message) {\n      addEnvelopToDocument(part, row);\n    }\n\n    String ct = part.getContentType();\n    ContentType ctype = new ContentType(ct);\n    if (part.isMimeType(\"multipart/*\")) {\n      Multipart mp = (Multipart) part.getContent();\n      int count = mp.getCount();\n      if (part.isMimeType(\"multipart/alternative\"))\n        count = 1;\n      for (int i = 0; i < count; i++)\n        addPartToDocument(mp.getBodyPart(i), row, false);\n    } else if (part.isMimeType(\"message/rfc822\")) {\n      addPartToDocument((Part) part.getContent(), row, false);\n    } else {\n      String disp = part.getDisposition();\n      if (!processAttachment || (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)))        return;\n      InputStream is = part.getInputStream();\n      String fileName = part.getFileName();\n      String content = ParseUtils.getStringContent(is, TikaConfig.getDefaultConfig(), ctype.getBaseType().toLowerCase());\n      if (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)) {\n        if (row.get(ATTACHMENT) == null)\n          row.put(ATTACHMENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(ATTACHMENT);\n        contents.add(content);\n        row.put(ATTACHMENT, contents);\n        if (row.get(ATTACHMENT_NAMES) == null)\n          row.put(ATTACHMENT_NAMES, new ArrayList<String>());\n        List<String> names = (List<String>) row.get(ATTACHMENT_NAMES);\n        names.add(fileName);\n        row.put(ATTACHMENT_NAMES, names);\n      } else {\n        if (row.get(CONTENT) == null)\n          row.put(CONTENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(CONTENT);\n        contents.add(content);\n        row.put(CONTENT, contents);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#addPartToDocument(Part,Map[String,Object],boolean).mjava","pathOld":"contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#addPartToDocument(Part,Map[String,Object],boolean).mjava","sourceNew":"  public void addPartToDocument(Part part, Map<String, Object> row, boolean outerMost) throws Exception {\n    if (part instanceof Message) {\n      addEnvelopToDocument(part, row);\n    }\n\n    String ct = part.getContentType();\n    ContentType ctype = new ContentType(ct);\n    if (part.isMimeType(\"multipart/*\")) {\n      Multipart mp = (Multipart) part.getContent();\n      int count = mp.getCount();\n      if (part.isMimeType(\"multipart/alternative\"))\n        count = 1;\n      for (int i = 0; i < count; i++)\n        addPartToDocument(mp.getBodyPart(i), row, false);\n    } else if (part.isMimeType(\"message/rfc822\")) {\n      addPartToDocument((Part) part.getContent(), row, false);\n    } else {\n      String disp = part.getDisposition();\n      if (!processAttachment || (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)))        return;\n      InputStream is = part.getInputStream();\n      String fileName = part.getFileName();\n      String content = ParseUtils.getStringContent(is, TikaConfig.getDefaultConfig(), ctype.getBaseType().toLowerCase());\n      if (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)) {\n        if (row.get(ATTACHMENT) == null)\n          row.put(ATTACHMENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(ATTACHMENT);\n        contents.add(content);\n        row.put(ATTACHMENT, contents);\n        if (row.get(ATTACHMENT_NAMES) == null)\n          row.put(ATTACHMENT_NAMES, new ArrayList<String>());\n        List<String> names = (List<String>) row.get(ATTACHMENT_NAMES);\n        names.add(fileName);\n        row.put(ATTACHMENT_NAMES, names);\n      } else {\n        if (row.get(CONTENT) == null)\n          row.put(CONTENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(CONTENT);\n        contents.add(content);\n        row.put(CONTENT, contents);\n      }\n    }\n  }\n\n","sourceOld":"  public void addPartToDocument(Part part, Map<String, Object> row, boolean outerMost) throws Exception {\n    if (part instanceof Message) {\n      addEnvelopToDocument(part, row);\n    }\n\n    String ct = part.getContentType();\n    ContentType ctype = new ContentType(ct);\n    if (part.isMimeType(\"multipart/*\")) {\n      Multipart mp = (Multipart) part.getContent();\n      int count = mp.getCount();\n      if (part.isMimeType(\"multipart/alternative\"))\n        count = 1;\n      for (int i = 0; i < count; i++)\n        addPartToDocument(mp.getBodyPart(i), row, false);\n    } else if (part.isMimeType(\"message/rfc822\")) {\n      addPartToDocument((Part) part.getContent(), row, false);\n    } else {\n      String disp = part.getDisposition();\n      if (!processAttachment || (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)))        return;\n      InputStream is = part.getInputStream();\n      String fileName = part.getFileName();\n      String content = ParseUtils.getStringContent(is, TikaConfig.getDefaultConfig(), ctype.getBaseType().toLowerCase());\n      if (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)) {\n        if (row.get(ATTACHMENT) == null)\n          row.put(ATTACHMENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(ATTACHMENT);\n        contents.add(content);\n        row.put(ATTACHMENT, contents);\n        if (row.get(ATTACHMENT_NAMES) == null)\n          row.put(ATTACHMENT_NAMES, new ArrayList<String>());\n        List<String> names = (List<String>) row.get(ATTACHMENT_NAMES);\n        names.add(fileName);\n        row.put(ATTACHMENT_NAMES, names);\n      } else {\n        if (row.get(CONTENT) == null)\n          row.put(CONTENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(CONTENT);\n        contents.add(content);\n        row.put(CONTENT, contents);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0d2b69725d5832c3c9fa9df6b9081c7d4e46a281":["42ba78899a8d7323de3bf926f840628a4a87898e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"6b7b8ee0df825b37bc7fb44a2bfd91aa08357492":["0d2b69725d5832c3c9fa9df6b9081c7d4e46a281"],"ad94625fb8d088209f46650c8097196fec67f00c":["6b7b8ee0df825b37bc7fb44a2bfd91aa08357492"],"42ba78899a8d7323de3bf926f840628a4a87898e":["db22d0edb2467b44638dfe7d72c29c2ef6fc84e5"],"db22d0edb2467b44638dfe7d72c29c2ef6fc84e5":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0d2b69725d5832c3c9fa9df6b9081c7d4e46a281":["6b7b8ee0df825b37bc7fb44a2bfd91aa08357492"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["db22d0edb2467b44638dfe7d72c29c2ef6fc84e5"],"6b7b8ee0df825b37bc7fb44a2bfd91aa08357492":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"42ba78899a8d7323de3bf926f840628a4a87898e":["0d2b69725d5832c3c9fa9df6b9081c7d4e46a281"],"db22d0edb2467b44638dfe7d72c29c2ef6fc84e5":["42ba78899a8d7323de3bf926f840628a4a87898e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}