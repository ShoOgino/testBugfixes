{"path":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchStemmer#step1().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchStemmer#step1().mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchStemmer#step1().mjava","sourceNew":"\t/**\n\t * First step of the Porter Algorithm<br>\n\t * refer to http://snowball.sourceforge.net/french/stemmer.html for an explanation\n\t */\n\tprivate void step1( ) {\n\t\tString[] suffix = { \"ances\", \"iqUes\", \"ismes\", \"ables\", \"istes\", \"ance\", \"iqUe\", \"isme\", \"able\", \"iste\" };\n\t\tdeleteFrom( R2, suffix );\n\n\t\treplaceFrom( R2, new String[] { \"logies\", \"logie\" }, \"log\" );\n\t\treplaceFrom( R2, new String[] { \"usions\", \"utions\", \"usion\", \"ution\" }, \"u\" );\n\t\treplaceFrom( R2, new String[] { \"ences\", \"ence\" }, \"ent\" );\n\n\t\tString[] search = { \"atrices\", \"ateurs\", \"ations\", \"atrice\", \"ateur\", \"ation\"};\n\t\tdeleteButSuffixFromElseReplace( R2, search, \"ic\",  true, R0, \"iqU\" );\n\n\t\tdeleteButSuffixFromElseReplace( R2, new String[] { \"ements\", \"ement\" }, \"eus\", false, R0, \"eux\" );\n\t\tdeleteButSuffixFrom( R2, new String[] { \"ements\", \"ement\" }, \"ativ\", false );\n\t\tdeleteButSuffixFrom( R2, new String[] { \"ements\", \"ement\" }, \"iv\", false );\n\t\tdeleteButSuffixFrom( R2, new String[] { \"ements\", \"ement\" }, \"abl\", false );\n\t\tdeleteButSuffixFrom( R2, new String[] { \"ements\", \"ement\" }, \"iqU\", false );\n\n\t\tdeleteFromIfTestVowelBeforeIn( R1, new String[] { \"issements\", \"issement\" }, false, R0 );\n\t\tdeleteFrom( RV, new String[] { \"ements\", \"ement\" } );\n\n\t\tdeleteButSuffixFromElseReplace( R2, new String[] { \"ités\", \"ité\" }, \"abil\", false, R0, \"abl\" );\n\t\tdeleteButSuffixFromElseReplace( R2, new String[] { \"ités\", \"ité\" }, \"ic\", false, R0, \"iqU\" );\n\t\tdeleteButSuffixFrom( R2, new String[] { \"ités\", \"ité\" }, \"iv\", true );\n\n\t\tString[] autre = { \"ifs\", \"ives\", \"if\", \"ive\" };\n\t\tdeleteButSuffixFromElseReplace( R2, autre, \"icat\", false, R0, \"iqU\" );\n\t\tdeleteButSuffixFromElseReplace( R2, autre, \"at\", true, R2, \"iqU\" );\n\n\t\treplaceFrom( R0, new String[] { \"eaux\" }, \"eau\" );\n\n\t\treplaceFrom( R1, new String[] { \"aux\" }, \"al\" );\n\n\t\tdeleteButSuffixFromElseReplace( R2, new String[] { \"euses\", \"euse\" }, \"\", true, R1, \"eux\" );\n\n\t\tdeleteFrom( R2, new String[] { \"eux\" } );\n\n\t\t// if one of the next steps is performed, we will need to perform step2a\n\t\tboolean temp = false;\n\t\ttemp = replaceFrom( RV, new String[] { \"amment\" }, \"ant\" );\n\t\tif (temp == true)\n\t\t\tsuite = true;\n\t\ttemp = replaceFrom( RV, new String[] { \"emment\" }, \"ent\" );\n\t\tif (temp == true)\n\t\t\tsuite = true;\n\t\ttemp = deleteFromIfTestVowelBeforeIn( RV, new String[] { \"ments\", \"ment\" }, true, RV );\n\t\tif (temp == true)\n\t\t\tsuite = true;\n\n\t}\n\n","sourceOld":"\t/**\n\t * First step of the Porter Algorithm<br>\n\t * refer to http://snowball.sourceforge.net/french/stemmer.html for an explanation\n\t */\n\tprivate void step1( ) {\n\t\tString[] suffix = { \"ances\", \"iqUes\", \"ismes\", \"ables\", \"istes\", \"ance\", \"iqUe\", \"isme\", \"able\", \"iste\" };\n\t\tdeleteFrom( R2, suffix );\n\n\t\treplaceFrom( R2, new String[] { \"logies\", \"logie\" }, \"log\" );\n\t\treplaceFrom( R2, new String[] { \"usions\", \"utions\", \"usion\", \"ution\" }, \"u\" );\n\t\treplaceFrom( R2, new String[] { \"ences\", \"ence\" }, \"ent\" );\n\n\t\tString[] search = { \"atrices\", \"ateurs\", \"ations\", \"atrice\", \"ateur\", \"ation\"};\n\t\tdeleteButSuffixFromElseReplace( R2, search, \"ic\",  true, R0, \"iqU\" );\n\n\t\tdeleteButSuffixFromElseReplace( R2, new String[] { \"ements\", \"ement\" }, \"eus\", false, R0, \"eux\" );\n\t\tdeleteButSuffixFrom( R2, new String[] { \"ements\", \"ement\" }, \"ativ\", false );\n\t\tdeleteButSuffixFrom( R2, new String[] { \"ements\", \"ement\" }, \"iv\", false );\n\t\tdeleteButSuffixFrom( R2, new String[] { \"ements\", \"ement\" }, \"abl\", false );\n\t\tdeleteButSuffixFrom( R2, new String[] { \"ements\", \"ement\" }, \"iqU\", false );\n\n\t\tdeleteFromIfTestVowelBeforeIn( R1, new String[] { \"issements\", \"issement\" }, false, R0 );\n\t\tdeleteFrom( RV, new String[] { \"ements\", \"ement\" } );\n\n\t\tdeleteButSuffixFromElseReplace( R2, new String[] { \"ités\", \"ité\" }, \"abil\", false, R0, \"abl\" );\n\t\tdeleteButSuffixFromElseReplace( R2, new String[] { \"ités\", \"ité\" }, \"ic\", false, R0, \"iqU\" );\n\t\tdeleteButSuffixFrom( R2, new String[] { \"ités\", \"ité\" }, \"iv\", true );\n\n\t\tString[] autre = { \"ifs\", \"ives\", \"if\", \"ive\" };\n\t\tdeleteButSuffixFromElseReplace( R2, autre, \"icat\", false, R0, \"iqU\" );\n\t\tdeleteButSuffixFromElseReplace( R2, autre, \"at\", true, R2, \"iqU\" );\n\n\t\treplaceFrom( R0, new String[] { \"eaux\" }, \"eau\" );\n\n\t\treplaceFrom( R1, new String[] { \"aux\" }, \"al\" );\n\n\t\tdeleteButSuffixFromElseReplace( R2, new String[] { \"euses\", \"euse\" }, \"\", true, R1, \"eux\" );\n\n\t\tdeleteFrom( R2, new String[] { \"eux\" } );\n\n\t\t// if one of the next steps is performed, we will need to perform step2a\n\t\tboolean temp = false;\n\t\ttemp = replaceFrom( RV, new String[] { \"amment\" }, \"ant\" );\n\t\tif (temp == true)\n\t\t\tsuite = true;\n\t\ttemp = replaceFrom( RV, new String[] { \"emment\" }, \"ent\" );\n\t\tif (temp == true)\n\t\t\tsuite = true;\n\t\ttemp = deleteFromIfTestVowelBeforeIn( RV, new String[] { \"ments\", \"ment\" }, true, RV );\n\t\tif (temp == true)\n\t\t\tsuite = true;\n\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/fr/FrenchStemmer#step1().mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchStemmer#step1().mjava","sourceNew":"\t/**\n\t * First step of the Porter Algorithm<br>\n\t * refer to http://snowball.sourceforge.net/french/stemmer.html for an explanation\n\t */\n\tprivate void step1( ) {\n\t\tString[] suffix = { \"ances\", \"iqUes\", \"ismes\", \"ables\", \"istes\", \"ance\", \"iqUe\", \"isme\", \"able\", \"iste\" };\n\t\tdeleteFrom( R2, suffix );\n\n\t\treplaceFrom( R2, new String[] { \"logies\", \"logie\" }, \"log\" );\n\t\treplaceFrom( R2, new String[] { \"usions\", \"utions\", \"usion\", \"ution\" }, \"u\" );\n\t\treplaceFrom( R2, new String[] { \"ences\", \"ence\" }, \"ent\" );\n\n\t\tString[] search = { \"atrices\", \"ateurs\", \"ations\", \"atrice\", \"ateur\", \"ation\"};\n\t\tdeleteButSuffixFromElseReplace( R2, search, \"ic\",  true, R0, \"iqU\" );\n\n\t\tdeleteButSuffixFromElseReplace( R2, new String[] { \"ements\", \"ement\" }, \"eus\", false, R0, \"eux\" );\n\t\tdeleteButSuffixFrom( R2, new String[] { \"ements\", \"ement\" }, \"ativ\", false );\n\t\tdeleteButSuffixFrom( R2, new String[] { \"ements\", \"ement\" }, \"iv\", false );\n\t\tdeleteButSuffixFrom( R2, new String[] { \"ements\", \"ement\" }, \"abl\", false );\n\t\tdeleteButSuffixFrom( R2, new String[] { \"ements\", \"ement\" }, \"iqU\", false );\n\n\t\tdeleteFromIfTestVowelBeforeIn( R1, new String[] { \"issements\", \"issement\" }, false, R0 );\n\t\tdeleteFrom( RV, new String[] { \"ements\", \"ement\" } );\n\n\t\tdeleteButSuffixFromElseReplace( R2, new String[] { \"ités\", \"ité\" }, \"abil\", false, R0, \"abl\" );\n\t\tdeleteButSuffixFromElseReplace( R2, new String[] { \"ités\", \"ité\" }, \"ic\", false, R0, \"iqU\" );\n\t\tdeleteButSuffixFrom( R2, new String[] { \"ités\", \"ité\" }, \"iv\", true );\n\n\t\tString[] autre = { \"ifs\", \"ives\", \"if\", \"ive\" };\n\t\tdeleteButSuffixFromElseReplace( R2, autre, \"icat\", false, R0, \"iqU\" );\n\t\tdeleteButSuffixFromElseReplace( R2, autre, \"at\", true, R2, \"iqU\" );\n\n\t\treplaceFrom( R0, new String[] { \"eaux\" }, \"eau\" );\n\n\t\treplaceFrom( R1, new String[] { \"aux\" }, \"al\" );\n\n\t\tdeleteButSuffixFromElseReplace( R2, new String[] { \"euses\", \"euse\" }, \"\", true, R1, \"eux\" );\n\n\t\tdeleteFrom( R2, new String[] { \"eux\" } );\n\n\t\t// if one of the next steps is performed, we will need to perform step2a\n\t\tboolean temp = false;\n\t\ttemp = replaceFrom( RV, new String[] { \"amment\" }, \"ant\" );\n\t\tif (temp == true)\n\t\t\tsuite = true;\n\t\ttemp = replaceFrom( RV, new String[] { \"emment\" }, \"ent\" );\n\t\tif (temp == true)\n\t\t\tsuite = true;\n\t\ttemp = deleteFromIfTestVowelBeforeIn( RV, new String[] { \"ments\", \"ment\" }, true, RV );\n\t\tif (temp == true)\n\t\t\tsuite = true;\n\n\t}\n\n","sourceOld":"\t/**\n\t * First step of the Porter Algorithm<br>\n\t * refer to http://snowball.sourceforge.net/french/stemmer.html for an explanation\n\t */\n\tprivate void step1( ) {\n\t\tString[] suffix = { \"ances\", \"iqUes\", \"ismes\", \"ables\", \"istes\", \"ance\", \"iqUe\", \"isme\", \"able\", \"iste\" };\n\t\tdeleteFrom( R2, suffix );\n\n\t\treplaceFrom( R2, new String[] { \"logies\", \"logie\" }, \"log\" );\n\t\treplaceFrom( R2, new String[] { \"usions\", \"utions\", \"usion\", \"ution\" }, \"u\" );\n\t\treplaceFrom( R2, new String[] { \"ences\", \"ence\" }, \"ent\" );\n\n\t\tString[] search = { \"atrices\", \"ateurs\", \"ations\", \"atrice\", \"ateur\", \"ation\"};\n\t\tdeleteButSuffixFromElseReplace( R2, search, \"ic\",  true, R0, \"iqU\" );\n\n\t\tdeleteButSuffixFromElseReplace( R2, new String[] { \"ements\", \"ement\" }, \"eus\", false, R0, \"eux\" );\n\t\tdeleteButSuffixFrom( R2, new String[] { \"ements\", \"ement\" }, \"ativ\", false );\n\t\tdeleteButSuffixFrom( R2, new String[] { \"ements\", \"ement\" }, \"iv\", false );\n\t\tdeleteButSuffixFrom( R2, new String[] { \"ements\", \"ement\" }, \"abl\", false );\n\t\tdeleteButSuffixFrom( R2, new String[] { \"ements\", \"ement\" }, \"iqU\", false );\n\n\t\tdeleteFromIfTestVowelBeforeIn( R1, new String[] { \"issements\", \"issement\" }, false, R0 );\n\t\tdeleteFrom( RV, new String[] { \"ements\", \"ement\" } );\n\n\t\tdeleteButSuffixFromElseReplace( R2, new String[] { \"ités\", \"ité\" }, \"abil\", false, R0, \"abl\" );\n\t\tdeleteButSuffixFromElseReplace( R2, new String[] { \"ités\", \"ité\" }, \"ic\", false, R0, \"iqU\" );\n\t\tdeleteButSuffixFrom( R2, new String[] { \"ités\", \"ité\" }, \"iv\", true );\n\n\t\tString[] autre = { \"ifs\", \"ives\", \"if\", \"ive\" };\n\t\tdeleteButSuffixFromElseReplace( R2, autre, \"icat\", false, R0, \"iqU\" );\n\t\tdeleteButSuffixFromElseReplace( R2, autre, \"at\", true, R2, \"iqU\" );\n\n\t\treplaceFrom( R0, new String[] { \"eaux\" }, \"eau\" );\n\n\t\treplaceFrom( R1, new String[] { \"aux\" }, \"al\" );\n\n\t\tdeleteButSuffixFromElseReplace( R2, new String[] { \"euses\", \"euse\" }, \"\", true, R1, \"eux\" );\n\n\t\tdeleteFrom( R2, new String[] { \"eux\" } );\n\n\t\t// if one of the next steps is performed, we will need to perform step2a\n\t\tboolean temp = false;\n\t\ttemp = replaceFrom( RV, new String[] { \"amment\" }, \"ant\" );\n\t\tif (temp == true)\n\t\t\tsuite = true;\n\t\ttemp = replaceFrom( RV, new String[] { \"emment\" }, \"ent\" );\n\t\tif (temp == true)\n\t\t\tsuite = true;\n\t\ttemp = deleteFromIfTestVowelBeforeIn( RV, new String[] { \"ments\", \"ment\" }, true, RV );\n\t\tif (temp == true)\n\t\t\tsuite = true;\n\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}