{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/Aliases#Aliases(Map[String,List[String]],Map[String,Map[String,String]],int).mjava","commits":[{"id":"215e40821821b2df2e69355e208532c05ef095a5","date":1510858642,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Aliases#Aliases(Map[String,List[String]],Map[String,Map[String,String]],int).mjava","pathOld":"/dev/null","sourceNew":"  /** Construct aliases directly with this information -- caller should not retain.\n   * Any deeply nested collections are assumed to already be unmodifiable. */\n  private Aliases(Map<String, List<String>> collectionAliases,\n                 Map<String, Map<String, String>> collectionAliasMetadata,\n                 int zNodeVersion) {\n    this.collectionAliases = Objects.requireNonNull(collectionAliases);\n    this.collectionAliasMetadata = Objects.requireNonNull(collectionAliasMetadata);\n    this.zNodeVersion = zNodeVersion;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767","date":1520865397,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Aliases#Aliases(Map[String,List[String]],Map[String,Map[String,String]],int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/Aliases#Aliases(Map[String,List[String]],Map[String,Map[String,String]],int).mjava","sourceNew":"  /** Construct aliases directly with this information -- caller should not retain.\n   * Any deeply nested collections are assumed to already be unmodifiable. */\n  private Aliases(Map<String, List<String>> collectionAliases,\n                 Map<String, Map<String, String>> collectionAliasProperties,\n                 int zNodeVersion) {\n    this.collectionAliases = Objects.requireNonNull(collectionAliases);\n    this.collectionAliasProperties = Objects.requireNonNull(collectionAliasProperties);\n    this.zNodeVersion = zNodeVersion;\n  }\n\n","sourceOld":"  /** Construct aliases directly with this information -- caller should not retain.\n   * Any deeply nested collections are assumed to already be unmodifiable. */\n  private Aliases(Map<String, List<String>> collectionAliases,\n                 Map<String, Map<String, String>> collectionAliasMetadata,\n                 int zNodeVersion) {\n    this.collectionAliases = Objects.requireNonNull(collectionAliases);\n    this.collectionAliasMetadata = Objects.requireNonNull(collectionAliasMetadata);\n    this.zNodeVersion = zNodeVersion;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767":["215e40821821b2df2e69355e208532c05ef095a5"],"215e40821821b2df2e69355e208532c05ef095a5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767"]},"commit2Childs":{"6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"215e40821821b2df2e69355e208532c05ef095a5":["6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["215e40821821b2df2e69355e208532c05ef095a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}