{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/FieldValueEvaluator#toExplanation(StreamFactory).mjava","commits":[{"id":"ba1e7de64990e3928b90142a52fb92eeff556475","date":1503713257,"type":1,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/FieldValueEvaluator#toExplanation(StreamFactory).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/FieldEvaluator#toExplanation(StreamFactory).mjava","sourceNew":"  @Override\n  public Explanation toExplanation(StreamFactory factory) throws IOException {\n    return new Explanation(nodeId.toString())\n      .withExpressionType(ExpressionType.EVALUATOR)\n      .withImplementingClass(getClass().getName())\n      .withExpression(toExpression(factory).toString());\n  }\n\n","sourceOld":"  @Override\n  public Explanation toExplanation(StreamFactory factory) throws IOException {\n    return new Explanation(nodeId.toString())\n      .withExpressionType(ExpressionType.EVALUATOR)\n      .withImplementingClass(getClass().getName())\n      .withExpression(toExpression(factory).toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45c28dbb559366e1f4ef8077346552bfb3f7ecf6","date":1503738439,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/FieldValueEvaluator#toExplanation(StreamFactory).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/FieldEvaluator#toExplanation(StreamFactory).mjava","sourceNew":"  @Override\n  public Explanation toExplanation(StreamFactory factory) throws IOException {\n    return new Explanation(nodeId.toString())\n      .withExpressionType(ExpressionType.EVALUATOR)\n      .withImplementingClass(getClass().getName())\n      .withExpression(toExpression(factory).toString());\n  }\n\n","sourceOld":"  @Override\n  public Explanation toExplanation(StreamFactory factory) throws IOException {\n    return new Explanation(nodeId.toString())\n      .withExpressionType(ExpressionType.EVALUATOR)\n      .withImplementingClass(getClass().getName())\n      .withExpression(toExpression(factory).toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":1,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/FieldValueEvaluator#toExplanation(StreamFactory).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/FieldEvaluator#toExplanation(StreamFactory).mjava","sourceNew":"  @Override\n  public Explanation toExplanation(StreamFactory factory) throws IOException {\n    return new Explanation(nodeId.toString())\n      .withExpressionType(ExpressionType.EVALUATOR)\n      .withImplementingClass(getClass().getName())\n      .withExpression(toExpression(factory).toString());\n  }\n\n","sourceOld":"  @Override\n  public Explanation toExplanation(StreamFactory factory) throws IOException {\n    return new Explanation(nodeId.toString())\n      .withExpressionType(ExpressionType.EVALUATOR)\n      .withImplementingClass(getClass().getName())\n      .withExpression(toExpression(factory).toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ca4bed7510b582a13d1b2e91a0c58b224590e1d","date":1522091107,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/FieldValueEvaluator#toExplanation(StreamFactory).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/FieldValueEvaluator#toExplanation(StreamFactory).mjava","sourceNew":"  @Override\n  public Explanation toExplanation(StreamFactory factory) throws IOException {\n    return new Explanation(nodeId.toString())\n        .withExpressionType(ExpressionType.EVALUATOR)\n        .withImplementingClass(getClass().getName())\n        .withExpression(toExpression(factory).toString());\n  }\n\n","sourceOld":"  @Override\n  public Explanation toExplanation(StreamFactory factory) throws IOException {\n    return new Explanation(nodeId.toString())\n      .withExpressionType(ExpressionType.EVALUATOR)\n      .withImplementingClass(getClass().getName())\n      .withExpression(toExpression(factory).toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d61a3e0821ed080b9b21e1328bbaa91dcf79f7d7","date":1522191940,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/FieldValueEvaluator#toExplanation(StreamFactory).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/FieldValueEvaluator#toExplanation(StreamFactory).mjava","sourceNew":"  @Override\n  public Explanation toExplanation(StreamFactory factory) throws IOException {\n    return new Explanation(nodeId.toString())\n        .withExpressionType(ExpressionType.EVALUATOR)\n        .withImplementingClass(getClass().getName())\n        .withExpression(toExpression(factory).toString());\n  }\n\n","sourceOld":"  @Override\n  public Explanation toExplanation(StreamFactory factory) throws IOException {\n    return new Explanation(nodeId.toString())\n      .withExpressionType(ExpressionType.EVALUATOR)\n      .withImplementingClass(getClass().getName())\n      .withExpression(toExpression(factory).toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","45c28dbb559366e1f4ef8077346552bfb3f7ecf6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"45c28dbb559366e1f4ef8077346552bfb3f7ecf6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ba1e7de64990e3928b90142a52fb92eeff556475"],"ba1e7de64990e3928b90142a52fb92eeff556475":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d61a3e0821ed080b9b21e1328bbaa91dcf79f7d7":["45c28dbb559366e1f4ef8077346552bfb3f7ecf6","2ca4bed7510b582a13d1b2e91a0c58b224590e1d"],"2ca4bed7510b582a13d1b2e91a0c58b224590e1d":["45c28dbb559366e1f4ef8077346552bfb3f7ecf6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d61a3e0821ed080b9b21e1328bbaa91dcf79f7d7"]},"commit2Childs":{"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","45c28dbb559366e1f4ef8077346552bfb3f7ecf6","ba1e7de64990e3928b90142a52fb92eeff556475"],"45c28dbb559366e1f4ef8077346552bfb3f7ecf6":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","d61a3e0821ed080b9b21e1328bbaa91dcf79f7d7","2ca4bed7510b582a13d1b2e91a0c58b224590e1d"],"ba1e7de64990e3928b90142a52fb92eeff556475":["45c28dbb559366e1f4ef8077346552bfb3f7ecf6"],"d61a3e0821ed080b9b21e1328bbaa91dcf79f7d7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2ca4bed7510b582a13d1b2e91a0c58b224590e1d":["d61a3e0821ed080b9b21e1328bbaa91dcf79f7d7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}