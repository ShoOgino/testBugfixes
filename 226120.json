{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDIHCacheTestCase#clobToString(Clob).mjava","commits":[{"id":"3337b86edd36607f0208321f1deee79c55e5fd21","date":1321266471,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDIHCacheTestCase#clobToString(Clob).mjava","pathOld":"/dev/null","sourceNew":"\tprotected String clobToString(Clob cl) {\n\t\tStringBuilder sb = new StringBuilder();\n\t\ttry {\n\t\t\tReader in = cl.getCharacterStream();\n\t\t\tchar[] cbuf = new char[1024];\n\t\t\tint numGot = -1;\n\t\t\twhile ((numGot = in.read(cbuf)) != -1) {\n\t\t\t\tsb.append(String.valueOf(cbuf, 0, numGot));\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tAssert.fail(e.toString());\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4093b270ba337f9c25a4c0e6cb2ae2c07f697376","date":1347897716,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDIHCacheTestCase#clobToString(Clob).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDIHCacheTestCase#clobToString(Clob).mjava","sourceNew":"  protected String clobToString(Clob cl) {\n    StringBuilder sb = new StringBuilder();\n    try {\n      Reader in = cl.getCharacterStream();\n      char[] cbuf = new char[1024];\n      int numGot = -1;\n      while ((numGot = in.read(cbuf)) != -1) {\n        sb.append(String.valueOf(cbuf, 0, numGot));\n      }\n    } catch (Exception e) {\n      Assert.fail(e.toString());\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"\tprotected String clobToString(Clob cl) {\n\t\tStringBuilder sb = new StringBuilder();\n\t\ttry {\n\t\t\tReader in = cl.getCharacterStream();\n\t\t\tchar[] cbuf = new char[1024];\n\t\t\tint numGot = -1;\n\t\t\twhile ((numGot = in.read(cbuf)) != -1) {\n\t\t\t\tsb.append(String.valueOf(cbuf, 0, numGot));\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tAssert.fail(e.toString());\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDIHCacheTestCase#clobToString(Clob).mjava","sourceNew":null,"sourceOld":"  protected String clobToString(Clob cl) {\n    StringBuilder sb = new StringBuilder();\n    try {\n      Reader in = cl.getCharacterStream();\n      char[] cbuf = new char[1024];\n      int numGot = -1;\n      while ((numGot = in.read(cbuf)) != -1) {\n        sb.append(String.valueOf(cbuf, 0, numGot));\n      }\n    } catch (Exception e) {\n      Assert.fail(e.toString());\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"3337b86edd36607f0208321f1deee79c55e5fd21":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["3337b86edd36607f0208321f1deee79c55e5fd21"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3337b86edd36607f0208321f1deee79c55e5fd21":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3337b86edd36607f0208321f1deee79c55e5fd21"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}