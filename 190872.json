{"path":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetsCollector#create(FacetSearchParams,IndexReader,TaxonomyReader).mjava","commits":[{"id":"f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d","date":1358784296,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetsCollector#create(FacetSearchParams,IndexReader,TaxonomyReader).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the most optimized {@link FacetsCollector} for the given search\n   * parameters. The returned {@link FacetsCollector} is guaranteed to satisfy\n   * the requested parameters.\n   */\n  public static FacetsCollector create(FacetSearchParams fsp, IndexReader indexReader, TaxonomyReader taxoReader) {\n    if (CountingFacetsCollector.assertParams(fsp) == null) {\n      return new CountingFacetsCollector(fsp, taxoReader);\n    }\n    \n    return new StandardFacetsCollector(fsp, indexReader, taxoReader);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07155cdd910937cdf6877e48884d5782845c8b8b","date":1358796205,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetsCollector#create(FacetSearchParams,IndexReader,TaxonomyReader).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the most optimized {@link FacetsCollector} for the given search\n   * parameters. The returned {@link FacetsCollector} is guaranteed to satisfy\n   * the requested parameters.\n   */\n  public static FacetsCollector create(FacetSearchParams fsp, IndexReader indexReader, TaxonomyReader taxoReader) {\n    if (CountingFacetsCollector.assertParams(fsp) == null) {\n      return new CountingFacetsCollector(fsp, taxoReader);\n    }\n    \n    return new StandardFacetsCollector(fsp, indexReader, taxoReader);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"239f79ed06f0979cfe1911ec5fba32b94fda43c1","date":1359553898,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetsCollector#create(FacetSearchParams,IndexReader,TaxonomyReader).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetsCollector#create(FacetSearchParams,IndexReader,TaxonomyReader).mjava","sourceNew":"  /**\n   * Returns the most optimized {@link FacetsCollector} for the given search\n   * parameters. The returned {@link FacetsCollector} is guaranteed to satisfy\n   * the requested parameters.\n   * \n   * @throws IllegalArgumentException\n   *           if there is no built-in collector that can satisfy the search\n   *           parameters.\n   */\n  public static FacetsCollector create(FacetSearchParams fsp, IndexReader indexReader, TaxonomyReader taxoReader) {\n    if (CountingFacetsCollector.assertParams(fsp) == null) {\n      return new CountingFacetsCollector(fsp, taxoReader);\n    }\n    \n    if (StandardFacetsCollector.assertParams(fsp) == null) {\n      return new StandardFacetsCollector(fsp, indexReader, taxoReader);\n    }\n    \n    throw new IllegalArgumentException(\"None of the built-in FacetsCollectors can handle the given search params\");\n  }\n\n","sourceOld":"  /**\n   * Returns the most optimized {@link FacetsCollector} for the given search\n   * parameters. The returned {@link FacetsCollector} is guaranteed to satisfy\n   * the requested parameters.\n   */\n  public static FacetsCollector create(FacetSearchParams fsp, IndexReader indexReader, TaxonomyReader taxoReader) {\n    if (CountingFacetsCollector.assertParams(fsp) == null) {\n      return new CountingFacetsCollector(fsp, taxoReader);\n    }\n    \n    return new StandardFacetsCollector(fsp, indexReader, taxoReader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61d5f95d14e5b9b046998c51e16709a398c15226","date":1359603451,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetsCollector#create(FacetSearchParams,IndexReader,TaxonomyReader).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetsCollector#create(FacetSearchParams,IndexReader,TaxonomyReader).mjava","sourceNew":"  /**\n   * Returns the most optimized {@link FacetsCollector} for the given search\n   * parameters. The returned {@link FacetsCollector} is guaranteed to satisfy\n   * the requested parameters.\n   * \n   * @throws IllegalArgumentException\n   *           if there is no built-in collector that can satisfy the search\n   *           parameters.\n   */\n  public static FacetsCollector create(FacetSearchParams fsp, IndexReader indexReader, TaxonomyReader taxoReader) {\n    if (CountingFacetsCollector.assertParams(fsp) == null) {\n      return new CountingFacetsCollector(fsp, taxoReader);\n    }\n    \n    if (StandardFacetsCollector.assertParams(fsp) == null) {\n      return new StandardFacetsCollector(fsp, indexReader, taxoReader);\n    }\n    \n    throw new IllegalArgumentException(\"None of the built-in FacetsCollectors can handle the given search params\");\n  }\n\n","sourceOld":"  /**\n   * Returns the most optimized {@link FacetsCollector} for the given search\n   * parameters. The returned {@link FacetsCollector} is guaranteed to satisfy\n   * the requested parameters.\n   */\n  public static FacetsCollector create(FacetSearchParams fsp, IndexReader indexReader, TaxonomyReader taxoReader) {\n    if (CountingFacetsCollector.assertParams(fsp) == null) {\n      return new CountingFacetsCollector(fsp, taxoReader);\n    }\n    \n    return new StandardFacetsCollector(fsp, indexReader, taxoReader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"571abba77e55fea386a38c0024f72ffa5b37a9ad","date":1360272747,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetsCollector#create(FacetSearchParams,IndexReader,TaxonomyReader).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetsCollector#create(FacetSearchParams,IndexReader,TaxonomyReader).mjava","sourceNew":"  /**\n   * Creates a {@link FacetsCollector} with the default\n   * {@link FacetsAccumulator}.\n   */\n  public static FacetsCollector create(FacetSearchParams fsp, IndexReader indexReader, TaxonomyReader taxoReader) {\n    if (fsp.indexingParams.getPartitionSize() != Integer.MAX_VALUE) {\n      return create(new StandardFacetsAccumulator(fsp, indexReader, taxoReader));\n    }\n    \n    for (FacetRequest fr : fsp.facetRequests) {\n      if (!(fr instanceof CountFacetRequest)) {\n        return create(new StandardFacetsAccumulator(fsp, indexReader, taxoReader));\n      }\n    }\n    \n    return create(new FacetsAccumulator(fsp, indexReader, taxoReader));\n  }\n\n","sourceOld":"  /**\n   * Returns the most optimized {@link FacetsCollector} for the given search\n   * parameters. The returned {@link FacetsCollector} is guaranteed to satisfy\n   * the requested parameters.\n   * \n   * @throws IllegalArgumentException\n   *           if there is no built-in collector that can satisfy the search\n   *           parameters.\n   */\n  public static FacetsCollector create(FacetSearchParams fsp, IndexReader indexReader, TaxonomyReader taxoReader) {\n    if (CountingFacetsCollector.assertParams(fsp) == null) {\n      return new CountingFacetsCollector(fsp, taxoReader);\n    }\n    \n    if (StandardFacetsCollector.assertParams(fsp) == null) {\n      return new StandardFacetsCollector(fsp, indexReader, taxoReader);\n    }\n    \n    throw new IllegalArgumentException(\"None of the built-in FacetsCollectors can handle the given search params\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b1ac4be5e40d7bda6ec0f850c933a95ca0642fd","date":1361836936,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetsCollector#create(FacetSearchParams,IndexReader,TaxonomyReader).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetsCollector#create(FacetSearchParams,IndexReader,TaxonomyReader).mjava","sourceNew":"  /**\n   * Creates a {@link FacetsCollector} using the {@link\n   * FacetsAccumulator} from {@link FacetsAccumulator#create}.\n   */\n  public static FacetsCollector create(FacetSearchParams fsp, IndexReader indexReader, TaxonomyReader taxoReader) {\n    return create(FacetsAccumulator.create(fsp, indexReader, taxoReader));\n  }\n\n","sourceOld":"  /**\n   * Creates a {@link FacetsCollector} with the default\n   * {@link FacetsAccumulator}.\n   */\n  public static FacetsCollector create(FacetSearchParams fsp, IndexReader indexReader, TaxonomyReader taxoReader) {\n    if (fsp.indexingParams.getPartitionSize() != Integer.MAX_VALUE) {\n      return create(new StandardFacetsAccumulator(fsp, indexReader, taxoReader));\n    }\n    \n    for (FacetRequest fr : fsp.facetRequests) {\n      if (!(fr instanceof CountFacetRequest)) {\n        return create(new StandardFacetsAccumulator(fsp, indexReader, taxoReader));\n      }\n    }\n    \n    return create(new FacetsAccumulator(fsp, indexReader, taxoReader));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6249cba93d7ad1bf6f5a225c34fbe3d547ed9f49","date":1375103250,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetsCollector#create(FacetSearchParams,IndexReader,TaxonomyReader).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetsCollector#create(FacetSearchParams,IndexReader,TaxonomyReader).mjava","sourceNew":"  /**\n   * Creates a {@link FacetsCollector} using the {@link\n   * FacetsAccumulator} from {@link FacetsAccumulator#create}.\n   */\n  public static FacetsCollector create(FacetSearchParams fsp, IndexReader indexReader, TaxonomyReader taxoReader) {\n    return create(FacetsAccumulator.create(fsp, indexReader, taxoReader, null));\n  }\n\n","sourceOld":"  /**\n   * Creates a {@link FacetsCollector} using the {@link\n   * FacetsAccumulator} from {@link FacetsAccumulator#create}.\n   */\n  public static FacetsCollector create(FacetSearchParams fsp, IndexReader indexReader, TaxonomyReader taxoReader) {\n    return create(FacetsAccumulator.create(fsp, indexReader, taxoReader));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetsCollector#create(FacetSearchParams,IndexReader,TaxonomyReader).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetsCollector#create(FacetSearchParams,IndexReader,TaxonomyReader).mjava","sourceNew":"  /**\n   * Creates a {@link FacetsCollector} using the {@link\n   * FacetsAccumulator} from {@link FacetsAccumulator#create}.\n   */\n  public static FacetsCollector create(FacetSearchParams fsp, IndexReader indexReader, TaxonomyReader taxoReader) {\n    return create(FacetsAccumulator.create(fsp, indexReader, taxoReader, null));\n  }\n\n","sourceOld":"  /**\n   * Creates a {@link FacetsCollector} using the {@link\n   * FacetsAccumulator} from {@link FacetsAccumulator#create}.\n   */\n  public static FacetsCollector create(FacetSearchParams fsp, IndexReader indexReader, TaxonomyReader taxoReader) {\n    return create(FacetsAccumulator.create(fsp, indexReader, taxoReader));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d33e19a97046248623a7591aeaa6547233fd15e2","date":1385424777,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetsCollector#create(FacetSearchParams,IndexReader,TaxonomyReader).mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates a {@link FacetsCollector} using the {@link\n   * FacetsAccumulator} from {@link FacetsAccumulator#create}.\n   */\n  public static FacetsCollector create(FacetSearchParams fsp, IndexReader indexReader, TaxonomyReader taxoReader) {\n    return create(FacetsAccumulator.create(fsp, indexReader, taxoReader, null));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetsCollector#create(FacetSearchParams,IndexReader,TaxonomyReader).mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates a {@link FacetsCollector} using the {@link\n   * FacetsAccumulator} from {@link FacetsAccumulator#create}.\n   */\n  public static FacetsCollector create(FacetSearchParams fsp, IndexReader indexReader, TaxonomyReader taxoReader) {\n    return create(FacetsAccumulator.create(fsp, indexReader, taxoReader, null));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5b1ac4be5e40d7bda6ec0f850c933a95ca0642fd":["571abba77e55fea386a38c0024f72ffa5b37a9ad"],"f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d33e19a97046248623a7591aeaa6547233fd15e2":["6249cba93d7ad1bf6f5a225c34fbe3d547ed9f49"],"61d5f95d14e5b9b046998c51e16709a398c15226":["07155cdd910937cdf6877e48884d5782845c8b8b","239f79ed06f0979cfe1911ec5fba32b94fda43c1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"239f79ed06f0979cfe1911ec5fba32b94fda43c1":["f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["5b1ac4be5e40d7bda6ec0f850c933a95ca0642fd"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["6249cba93d7ad1bf6f5a225c34fbe3d547ed9f49","d33e19a97046248623a7591aeaa6547233fd15e2"],"07155cdd910937cdf6877e48884d5782845c8b8b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d"],"571abba77e55fea386a38c0024f72ffa5b37a9ad":["239f79ed06f0979cfe1911ec5fba32b94fda43c1"],"6249cba93d7ad1bf6f5a225c34fbe3d547ed9f49":["5b1ac4be5e40d7bda6ec0f850c933a95ca0642fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"]},"commit2Childs":{"5b1ac4be5e40d7bda6ec0f850c933a95ca0642fd":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","6249cba93d7ad1bf6f5a225c34fbe3d547ed9f49"],"f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d":["239f79ed06f0979cfe1911ec5fba32b94fda43c1","07155cdd910937cdf6877e48884d5782845c8b8b"],"d33e19a97046248623a7591aeaa6547233fd15e2":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"61d5f95d14e5b9b046998c51e16709a398c15226":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d","07155cdd910937cdf6877e48884d5782845c8b8b"],"239f79ed06f0979cfe1911ec5fba32b94fda43c1":["61d5f95d14e5b9b046998c51e16709a398c15226","571abba77e55fea386a38c0024f72ffa5b37a9ad"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"07155cdd910937cdf6877e48884d5782845c8b8b":["61d5f95d14e5b9b046998c51e16709a398c15226"],"571abba77e55fea386a38c0024f72ffa5b37a9ad":["5b1ac4be5e40d7bda6ec0f850c933a95ca0642fd"],"6249cba93d7ad1bf6f5a225c34fbe3d547ed9f49":["d33e19a97046248623a7591aeaa6547233fd15e2","3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["61d5f95d14e5b9b046998c51e16709a398c15226","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}