{"path":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#slices(List[LeafReaderContext],int,int).mjava","commits":[{"id":"cb1ea7c2a1a6c0b29808a5562d417545dd5529e4","date":1558462722,"type":0,"author":"Atri Sharma","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#slices(List[LeafReaderContext],int,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Static method to segregate LeafReaderContexts amongst multiple slices\n   */\n  public static LeafSlice[] slices (List<LeafReaderContext> leaves, int maxDocsPerSlice,\n                                    int maxSegmentsPerSlice) {\n    // Make a copy so we can sort:\n    List<LeafReaderContext> sortedLeaves = new ArrayList<>(leaves);\n\n    // Sort by maxDoc, descending:\n    Collections.sort(sortedLeaves,\n        Collections.reverseOrder(Comparator.comparingInt(l -> l.reader().maxDoc())));\n\n    final List<List<LeafReaderContext>> groupedLeaves = new ArrayList<>();\n    long docSum = 0;\n    List<LeafReaderContext> group = null;\n    for (LeafReaderContext ctx : sortedLeaves) {\n      if (ctx.reader().maxDoc() > maxDocsPerSlice) {\n        assert group == null;\n        groupedLeaves.add(Collections.singletonList(ctx));\n      } else {\n        if (group == null) {\n          group = new ArrayList<>();\n          group.add(ctx);\n\n          groupedLeaves.add(group);\n        } else {\n          group.add(ctx);\n        }\n\n        docSum += ctx.reader().maxDoc();\n        if (group.size() >= maxSegmentsPerSlice || docSum > maxDocsPerSlice) {\n          group = null;\n          docSum = 0;\n        }\n      }\n    }\n\n    LeafSlice[] slices = new LeafSlice[groupedLeaves.size()];\n    int upto = 0;\n    for (List<LeafReaderContext> currentLeaf : groupedLeaves) {\n      slices[upto] = new LeafSlice(currentLeaf);\n      ++upto;\n    }\n\n    return slices;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cb1ea7c2a1a6c0b29808a5562d417545dd5529e4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cb1ea7c2a1a6c0b29808a5562d417545dd5529e4"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cb1ea7c2a1a6c0b29808a5562d417545dd5529e4"],"cb1ea7c2a1a6c0b29808a5562d417545dd5529e4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}