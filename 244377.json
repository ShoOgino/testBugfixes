{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testTrunc().mjava","commits":[{"id":"b6331fb5344e3d737be63af3a7bd470ee133004a","date":1569798100,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testTrunc().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testTrunc() throws Exception {\n    String expr = \" select(list(tuple(field1=\\\"abcde\\\", field2=\\\"012345\\\")), trunc(field1, 2) as field3, trunc(field2, 4) as field4)\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", expr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString() + \"/\" + COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertEquals(tuples.size(),  1);\n    String s1 = tuples.get(0).getString(\"field3\");\n    assertEquals(s1, \"ab\");\n    String s2 = tuples.get(0).getString(\"field4\");\n    assertEquals(s2, \"0123\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b9f74021389e2b32ee750fa5a24281c87951ec3","date":1569845983,"type":0,"author":"jimczi","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testTrunc().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testTrunc() throws Exception {\n    String expr = \" select(list(tuple(field1=\\\"abcde\\\", field2=\\\"012345\\\")), trunc(field1, 2) as field3, trunc(field2, 4) as field4)\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", expr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString() + \"/\" + COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertEquals(tuples.size(),  1);\n    String s1 = tuples.get(0).getString(\"field3\");\n    assertEquals(s1, \"ab\");\n    String s2 = tuples.get(0).getString(\"field4\");\n    assertEquals(s2, \"0123\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b6331fb5344e3d737be63af3a7bd470ee133004a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4b9f74021389e2b32ee750fa5a24281c87951ec3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b6331fb5344e3d737be63af3a7bd470ee133004a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b6331fb5344e3d737be63af3a7bd470ee133004a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b6331fb5344e3d737be63af3a7bd470ee133004a","4b9f74021389e2b32ee750fa5a24281c87951ec3"],"b6331fb5344e3d737be63af3a7bd470ee133004a":["4b9f74021389e2b32ee750fa5a24281c87951ec3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4b9f74021389e2b32ee750fa5a24281c87951ec3":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4b9f74021389e2b32ee750fa5a24281c87951ec3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}