{"path":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_prelude().mjava","commits":[{"id":"a5aa159e1ac4009d23cea92797d3804da4f5e7ad","date":1264041909,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_prelude().mjava","pathOld":"contrib/snowball/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_prelude().mjava","sourceNew":"        private boolean r_prelude() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            // (, line 25\n            // unset Y_found, line 26\n            B_Y_found = false;\n            // do, line 27\n            v_1 = cursor;\n            lab0: do {\n                // (, line 27\n                // [, line 27\n                bra = cursor;\n                // literal, line 27\n                if (!(eq_s(1, \"'\")))\n                {\n                    break lab0;\n                }\n                // ], line 27\n                ket = cursor;\n                // delete, line 27\n                slice_del();\n            } while (false);\n            cursor = v_1;\n            // do, line 28\n            v_2 = cursor;\n            lab1: do {\n                // (, line 28\n                // [, line 28\n                bra = cursor;\n                // literal, line 28\n                if (!(eq_s(1, \"y\")))\n                {\n                    break lab1;\n                }\n                // ], line 28\n                ket = cursor;\n                // <-, line 28\n                slice_from(\"Y\");\n                // set Y_found, line 28\n                B_Y_found = true;\n            } while (false);\n            cursor = v_2;\n            // do, line 29\n            v_3 = cursor;\n            lab2: do {\n                // repeat, line 29\n                replab3: while(true)\n                {\n                    v_4 = cursor;\n                    lab4: do {\n                        // (, line 29\n                        // goto, line 29\n                        golab5: while(true)\n                        {\n                            v_5 = cursor;\n                            lab6: do {\n                                // (, line 29\n                                if (!(in_grouping(g_v, 97, 121)))\n                                {\n                                    break lab6;\n                                }\n                                // [, line 29\n                                bra = cursor;\n                                // literal, line 29\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab6;\n                                }\n                                // ], line 29\n                                ket = cursor;\n                                cursor = v_5;\n                                break golab5;\n                            } while (false);\n                            cursor = v_5;\n                            if (cursor >= limit)\n                            {\n                                break lab4;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 29\n                        slice_from(\"Y\");\n                        // set Y_found, line 29\n                        B_Y_found = true;\n                        continue replab3;\n                    } while (false);\n                    cursor = v_4;\n                    break replab3;\n                }\n            } while (false);\n            cursor = v_3;\n            return true;\n        }\n\n","sourceOld":"        private boolean r_prelude() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            // (, line 25\n            // unset Y_found, line 26\n            B_Y_found = false;\n            // do, line 27\n            v_1 = cursor;\n            lab0: do {\n                // (, line 27\n                // [, line 27\n                bra = cursor;\n                // literal, line 27\n                if (!(eq_s(1, \"'\")))\n                {\n                    break lab0;\n                }\n                // ], line 27\n                ket = cursor;\n                // delete, line 27\n                slice_del();\n            } while (false);\n            cursor = v_1;\n            // do, line 28\n            v_2 = cursor;\n            lab1: do {\n                // (, line 28\n                // [, line 28\n                bra = cursor;\n                // literal, line 28\n                if (!(eq_s(1, \"y\")))\n                {\n                    break lab1;\n                }\n                // ], line 28\n                ket = cursor;\n                // <-, line 28\n                slice_from(\"Y\");\n                // set Y_found, line 28\n                B_Y_found = true;\n            } while (false);\n            cursor = v_2;\n            // do, line 29\n            v_3 = cursor;\n            lab2: do {\n                // repeat, line 29\n                replab3: while(true)\n                {\n                    v_4 = cursor;\n                    lab4: do {\n                        // (, line 29\n                        // goto, line 29\n                        golab5: while(true)\n                        {\n                            v_5 = cursor;\n                            lab6: do {\n                                // (, line 29\n                                if (!(in_grouping(g_v, 97, 121)))\n                                {\n                                    break lab6;\n                                }\n                                // [, line 29\n                                bra = cursor;\n                                // literal, line 29\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab6;\n                                }\n                                // ], line 29\n                                ket = cursor;\n                                cursor = v_5;\n                                break golab5;\n                            } while (false);\n                            cursor = v_5;\n                            if (cursor >= limit)\n                            {\n                                break lab4;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 29\n                        slice_from(\"Y\");\n                        // set Y_found, line 29\n                        B_Y_found = true;\n                        continue replab3;\n                    } while (false);\n                    cursor = v_4;\n                    break replab3;\n                }\n            } while (false);\n            cursor = v_3;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_prelude().mjava","pathOld":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_prelude().mjava","sourceNew":"        private boolean r_prelude() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            // (, line 25\n            // unset Y_found, line 26\n            B_Y_found = false;\n            // do, line 27\n            v_1 = cursor;\n            lab0: do {\n                // (, line 27\n                // [, line 27\n                bra = cursor;\n                // literal, line 27\n                if (!(eq_s(1, \"'\")))\n                {\n                    break lab0;\n                }\n                // ], line 27\n                ket = cursor;\n                // delete, line 27\n                slice_del();\n            } while (false);\n            cursor = v_1;\n            // do, line 28\n            v_2 = cursor;\n            lab1: do {\n                // (, line 28\n                // [, line 28\n                bra = cursor;\n                // literal, line 28\n                if (!(eq_s(1, \"y\")))\n                {\n                    break lab1;\n                }\n                // ], line 28\n                ket = cursor;\n                // <-, line 28\n                slice_from(\"Y\");\n                // set Y_found, line 28\n                B_Y_found = true;\n            } while (false);\n            cursor = v_2;\n            // do, line 29\n            v_3 = cursor;\n            lab2: do {\n                // repeat, line 29\n                replab3: while(true)\n                {\n                    v_4 = cursor;\n                    lab4: do {\n                        // (, line 29\n                        // goto, line 29\n                        golab5: while(true)\n                        {\n                            v_5 = cursor;\n                            lab6: do {\n                                // (, line 29\n                                if (!(in_grouping(g_v, 97, 121)))\n                                {\n                                    break lab6;\n                                }\n                                // [, line 29\n                                bra = cursor;\n                                // literal, line 29\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab6;\n                                }\n                                // ], line 29\n                                ket = cursor;\n                                cursor = v_5;\n                                break golab5;\n                            } while (false);\n                            cursor = v_5;\n                            if (cursor >= limit)\n                            {\n                                break lab4;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 29\n                        slice_from(\"Y\");\n                        // set Y_found, line 29\n                        B_Y_found = true;\n                        continue replab3;\n                    } while (false);\n                    cursor = v_4;\n                    break replab3;\n                }\n            } while (false);\n            cursor = v_3;\n            return true;\n        }\n\n","sourceOld":"        private boolean r_prelude() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            // (, line 25\n            // unset Y_found, line 26\n            B_Y_found = false;\n            // do, line 27\n            v_1 = cursor;\n            lab0: do {\n                // (, line 27\n                // [, line 27\n                bra = cursor;\n                // literal, line 27\n                if (!(eq_s(1, \"'\")))\n                {\n                    break lab0;\n                }\n                // ], line 27\n                ket = cursor;\n                // delete, line 27\n                slice_del();\n            } while (false);\n            cursor = v_1;\n            // do, line 28\n            v_2 = cursor;\n            lab1: do {\n                // (, line 28\n                // [, line 28\n                bra = cursor;\n                // literal, line 28\n                if (!(eq_s(1, \"y\")))\n                {\n                    break lab1;\n                }\n                // ], line 28\n                ket = cursor;\n                // <-, line 28\n                slice_from(\"Y\");\n                // set Y_found, line 28\n                B_Y_found = true;\n            } while (false);\n            cursor = v_2;\n            // do, line 29\n            v_3 = cursor;\n            lab2: do {\n                // repeat, line 29\n                replab3: while(true)\n                {\n                    v_4 = cursor;\n                    lab4: do {\n                        // (, line 29\n                        // goto, line 29\n                        golab5: while(true)\n                        {\n                            v_5 = cursor;\n                            lab6: do {\n                                // (, line 29\n                                if (!(in_grouping(g_v, 97, 121)))\n                                {\n                                    break lab6;\n                                }\n                                // [, line 29\n                                bra = cursor;\n                                // literal, line 29\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab6;\n                                }\n                                // ], line 29\n                                ket = cursor;\n                                cursor = v_5;\n                                break golab5;\n                            } while (false);\n                            cursor = v_5;\n                            if (cursor >= limit)\n                            {\n                                break lab4;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 29\n                        slice_from(\"Y\");\n                        // set Y_found, line 29\n                        B_Y_found = true;\n                        continue replab3;\n                    } while (false);\n                    cursor = v_4;\n                    break replab3;\n                }\n            } while (false);\n            cursor = v_3;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"]},"commit2Childs":{"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}