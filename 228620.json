{"path":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#isMerged(SegmentInfo).mjava","commits":[{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#isMerged(SegmentInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#isOptimized(SegmentInfo).mjava","sourceNew":"  /** Returns true if this single info is already fully merged (has no\n   *  pending norms or deletes, is in the same dir as the\n   *  writer, and matches the current compound file setting */\n  protected boolean isMerged(SegmentInfo info)\n    throws IOException {\n    IndexWriter w = writer.get();\n    assert w != null;\n    boolean hasDeletions = w.numDeletedDocs(info) > 0;\n    return !hasDeletions &&\n      !info.hasSeparateNorms() &&\n      info.dir == w.getDirectory() &&\n      (info.getUseCompoundFile() == useCompoundFile || noCFSRatio < 1.0);\n  }\n\n","sourceOld":"  /** Returns true if this single info is optimized (has no\n   *  pending norms or deletes, is in the same dir as the\n   *  writer, and matches the current compound file setting */\n  protected boolean isOptimized(SegmentInfo info)\n    throws IOException {\n    IndexWriter w = writer.get();\n    assert w != null;\n    boolean hasDeletions = w.numDeletedDocs(info) > 0;\n    return !hasDeletions &&\n      !info.hasSeparateNorms() &&\n      info.dir == w.getDirectory() &&\n      (info.getUseCompoundFile() == useCompoundFile || noCFSRatio < 1.0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LogMergePolicy#isMerged(SegmentInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#isMerged(SegmentInfo).mjava","sourceNew":"  /** Returns true if this single info is already fully merged (has no\n   *  pending norms or deletes, is in the same dir as the\n   *  writer, and matches the current compound file setting */\n  protected boolean isMerged(SegmentInfo info)\n    throws IOException {\n    IndexWriter w = writer.get();\n    assert w != null;\n    boolean hasDeletions = w.numDeletedDocs(info) > 0;\n    return !hasDeletions &&\n      !info.hasSeparateNorms() &&\n      info.dir == w.getDirectory() &&\n      (info.getUseCompoundFile() == useCompoundFile || noCFSRatio < 1.0);\n  }\n\n","sourceOld":"  /** Returns true if this single info is already fully merged (has no\n   *  pending norms or deletes, is in the same dir as the\n   *  writer, and matches the current compound file setting */\n  protected boolean isMerged(SegmentInfo info)\n    throws IOException {\n    IndexWriter w = writer.get();\n    assert w != null;\n    boolean hasDeletions = w.numDeletedDocs(info) > 0;\n    return !hasDeletions &&\n      !info.hasSeparateNorms() &&\n      info.dir == w.getDirectory() &&\n      (info.getUseCompoundFile() == useCompoundFile || noCFSRatio < 1.0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}