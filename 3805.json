{"path":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#getStopWords().mjava","commits":[{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#getStopWords().mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#getStopWords().mjava","sourceNew":"  /**\n   * Provides information on which stop words have been identified for all fields\n   *\n   * @return the stop words (as terms)\n   */\n  public Term[] getStopWords() {\n    ArrayList allStopWords = new ArrayList();\n    for (Iterator iter = stopWordsPerField.keySet().iterator(); iter.hasNext();) {\n      String fieldName = (String) iter.next();\n      HashSet stopWords = (HashSet) stopWordsPerField.get(fieldName);\n      for (Iterator iterator = stopWords.iterator(); iterator.hasNext();) {\n        String text = (String) iterator.next();\n        allStopWords.add(new Term(fieldName, text));\n      }\n    }\n    return (Term[]) allStopWords.toArray(new Term[allStopWords.size()]);\n\t}\n\n","sourceOld":"  /**\n   * Provides information on which stop words have been identified for all fields\n   *\n   * @return the stop words (as terms)\n   */\n  public Term[] getStopWords() {\n    ArrayList allStopWords = new ArrayList();\n    for (Iterator iter = stopWordsPerField.keySet().iterator(); iter.hasNext();) {\n      String fieldName = (String) iter.next();\n      HashSet stopWords = (HashSet) stopWordsPerField.get(fieldName);\n      for (Iterator iterator = stopWords.iterator(); iterator.hasNext();) {\n        String text = (String) iterator.next();\n        allStopWords.add(new Term(fieldName, text));\n      }\n    }\n    return (Term[]) allStopWords.toArray(new Term[allStopWords.size()]);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60cdc0e643184821eb066795a8791cd82559f46e","date":1257941914,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#getStopWords().mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#getStopWords().mjava","sourceNew":"  /**\n   * Provides information on which stop words have been identified for all fields\n   *\n   * @return the stop words (as terms)\n   */\n  public Term[] getStopWords() {\n    ArrayList<Term> allStopWords = new ArrayList<Term>();\n    for (Iterator<String> iter = stopWordsPerField.keySet().iterator(); iter.hasNext();) {\n      String fieldName = iter.next();\n      HashSet<String> stopWords = stopWordsPerField.get(fieldName);\n      for (Iterator<String> iterator = stopWords.iterator(); iterator.hasNext();) {\n        String text = iterator.next();\n        allStopWords.add(new Term(fieldName, text));\n      }\n    }\n    return allStopWords.toArray(new Term[allStopWords.size()]);\n\t}\n\n","sourceOld":"  /**\n   * Provides information on which stop words have been identified for all fields\n   *\n   * @return the stop words (as terms)\n   */\n  public Term[] getStopWords() {\n    ArrayList allStopWords = new ArrayList();\n    for (Iterator iter = stopWordsPerField.keySet().iterator(); iter.hasNext();) {\n      String fieldName = (String) iter.next();\n      HashSet stopWords = (HashSet) stopWordsPerField.get(fieldName);\n      for (Iterator iterator = stopWords.iterator(); iterator.hasNext();) {\n        String text = (String) iterator.next();\n        allStopWords.add(new Term(fieldName, text));\n      }\n    }\n    return (Term[]) allStopWords.toArray(new Term[allStopWords.size()]);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#getStopWords().mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#getStopWords().mjava","sourceNew":"  /**\n   * Provides information on which stop words have been identified for all fields\n   *\n   * @return the stop words (as terms)\n   */\n  public Term[] getStopWords() {\n    ArrayList<Term> allStopWords = new ArrayList<Term>();\n    for (Iterator<String> iter = stopWordsPerField.keySet().iterator(); iter.hasNext();) {\n      String fieldName = iter.next();\n      HashSet<String> stopWords = stopWordsPerField.get(fieldName);\n      for (Iterator<String> iterator = stopWords.iterator(); iterator.hasNext();) {\n        String text = iterator.next();\n        allStopWords.add(new Term(fieldName, text));\n      }\n    }\n    return allStopWords.toArray(new Term[allStopWords.size()]);\n\t}\n\n","sourceOld":"  /**\n   * Provides information on which stop words have been identified for all fields\n   *\n   * @return the stop words (as terms)\n   */\n  public Term[] getStopWords() {\n    ArrayList<Term> allStopWords = new ArrayList<Term>();\n    for (Iterator<String> iter = stopWordsPerField.keySet().iterator(); iter.hasNext();) {\n      String fieldName = iter.next();\n      HashSet<String> stopWords = stopWordsPerField.get(fieldName);\n      for (Iterator<String> iterator = stopWords.iterator(); iterator.hasNext();) {\n        String text = iterator.next();\n        allStopWords.add(new Term(fieldName, text));\n      }\n    }\n    return allStopWords.toArray(new Term[allStopWords.size()]);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60cdc0e643184821eb066795a8791cd82559f46e":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["60cdc0e643184821eb066795a8791cd82559f46e"]},"commit2Childs":{"60cdc0e643184821eb066795a8791cd82559f46e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["60cdc0e643184821eb066795a8791cd82559f46e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}