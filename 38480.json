{"path":"solr/core/src/test/org/apache/solr/handler/component/TermVectorComponentDistributedTest#test().mjava","commits":[{"id":"abb23fcc2461782ab204e61213240feb77d355aa","date":1422029612,"type":1,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TermVectorComponentDistributedTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TermVectorComponentDistributedTest#doTest().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n\n    handle.clear();\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    handle.put(\"score\", SKIPVAL);\n    handle.put(\"[docid]\", SKIPVAL);\n    handle.put(\"_version_\", SKIPVAL); // not a cloud test, but may use updateLog\n\n    // SOLR-3720: TODO: TVC doesn't \"merge\" df and idf .. should it?\n    handle.put(\"df\", SKIPVAL);\n    handle.put(\"tf-idf\", SKIPVAL);\n\n    index(\"id\", \"0\",\n          \"test_posofftv\", \"This is a title and another title\",\n          \"test_basictv\", \"This is a title and another title\",\n          \"test_notv\", \"This is a title and another title\",\n          \"test_postv\", \"This is a title and another title\",\n          \"test_offtv\", \"This is a title and another title\"\n          );\n    index(\"id\", \"1\",\n          \"test_posofftv\", \"The quick reb fox jumped over the lazy brown dogs.\",\n          \"test_basictv\", \"The quick reb fox jumped over the lazy brown dogs.\",\n          \"test_notv\", \"The quick reb fox jumped over the lazy brown dogs.\",\n          \"test_postv\", \"The quick reb fox jumped over the lazy brown dogs.\",\n          \"test_offtv\", \"The quick reb fox jumped over the lazy brown dogs.\"\n          );\n    \n    index(\"id\", \"2\",\n          \"test_posofftv\", \"This is a document\",\n          \"test_basictv\", \"This is a document\",\n          \"test_notv\", \"This is a document\",\n          \"test_postv\", \"This is a document\",\n          \"test_offtv\", \"This is a document\"\n          );\n    index(\"id\", \"3\",\n          \"test_posofftv\", \"another document\",\n          \"test_basictv\", \"another document\",\n          \"test_notv\", \"another document\",\n          \"test_postv\", \"another document\",\n          \"test_offtv\", \"another document\"\n          );\n    //bunch of docs that are variants on blue\n    index(\"id\", \"4\",\n          \"test_posofftv\", \"blue\",\n          \"test_basictv\", \"blue\",\n          \"test_notv\", \"blue\",\n          \"test_postv\", \"blue\",\n          \"test_offtv\", \"blue\"\n          );\n    index(\"id\", \"5\",\n          \"test_posofftv\", \"blud\",\n          \"test_basictv\", \"blud\",\n          \"test_notv\", \"blud\",\n          \"test_postv\", \"blud\",\n          \"test_offtv\", \"blud\"\n          );\n    index(\"id\", \"6\",\n          \"test_posofftv\", \"boue\",\n          \"test_basictv\", \"boue\",\n          \"test_notv\", \"boue\",\n          \"test_postv\", \"boue\",\n          \"test_offtv\", \"boue\"\n          );\n    index(\"id\", \"7\",\n          \"test_posofftv\", \"glue\",\n          \"test_basictv\", \"glue\",\n          \"test_notv\", \"glue\",\n          \"test_postv\", \"glue\",\n          \"test_offtv\", \"glue\"\n          );\n    index(\"id\", \"8\",\n          \"test_posofftv\", \"blee\",\n          \"test_basictv\", \"blee\",\n          \"test_notv\", \"blee\",\n          \"test_postv\", \"blee\",\n          \"test_offtv\", \"blee\"\n          );\n    index(\"id\", \"9\",\n          \"test_posofftv\", \"blah\",\n          \"test_basictv\", \"blah\",\n          \"test_notv\", \"blah\",\n          \"test_postv\", \"blah\",\n          \"test_offtv\", \"blah\"\n          );\n\n    commit();\n\n    final String tv = \"tvrh\";\n\n    for (String q : new String[] {\"id:0\", \"id:7\", \"id:[3 TO 6]\", \"*:*\"}) {\n\n      query(\"sort\",\"id desc\",\n            \"qt\",tv, \n            \"shards.qt\",tv,\n            \"q\", q, \n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n\n      // tv.fl diff from fl\n      query(\"sort\", \"id asc\",\n            \"qt\",tv, \n            \"shards.qt\",tv,\n            \"q\", q, \n            \"fl\", \"*,score\",\n            \"tv.fl\", \"test_basictv,test_offtv\",\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n\n      // multi-valued tv.fl \n      query(\"sort\", \"id asc\",\n            \"qt\",tv, \n            \"shards.qt\",tv,\n            \"q\", q, \n            \"fl\", \"*,score\",\n            \"tv.fl\", \"test_basictv\",\n            \"tv.fl\",\"test_offtv\",\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n      // re-use fl glob\n      query(\"sort\", \"id desc\",\n            \"qt\",tv, \n            \"shards.qt\",tv,\n            \"q\", q, \n            \"fl\", \"*,score\",\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n      // re-use fl, ignore things we can't handle\n      query(\"sort\", \"id desc\",\n            \"qt\",tv, \n            \"shards.qt\",tv,\n            \"q\", q, \n            \"fl\", \"score,test_basictv,[docid],test_postv,val:sum(3,4)\",\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n\n      // re-use (multi-valued) fl, ignore things we can't handle\n      query(\"sort\", \"id desc\",\n            \"qt\",tv, \n            \"shards.qt\",tv,\n            \"q\", q, \n            \"fl\", \"score,test_basictv\",\n            \"fl\", \"[docid],test_postv,val:sum(3,4)\",\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n\n      // test some other options\n    \n      query(\"sort\", \"id asc\",\n            \"qt\",tv, \n            \"shards.qt\",tv,\n            \"q\", q, \n            TermVectorComponent.COMPONENT_NAME, \"true\",\n            TermVectorParams.TF, \"true\", \n            TermVectorParams.DF, \"true\", \n            TermVectorParams.OFFSETS, \"true\", \n            TermVectorParams.POSITIONS, \"true\", \n            TermVectorParams.TF_IDF, \"true\");\n    \n      query(\"sort\", \"id desc\",\n            \"qt\",tv, \n            \"shards.qt\",tv,\n            \"q\", q, \n            TermVectorComponent.COMPONENT_NAME, \"true\",\n            TermVectorParams.ALL, \"true\");\n    \n      // per field stuff\n\n      query(\"sort\", \"id desc\",\n            \"qt\",tv, \n            \"shards.qt\",tv,\n            \"q\", q, \n            TermVectorComponent.COMPONENT_NAME, \"true\",\n            TermVectorParams.TF, \"true\", \n            TermVectorParams.DF, \"true\", \n            TermVectorParams.OFFSETS, \"true\", \n            TermVectorParams.POSITIONS, \"true\", \n            TermVectorParams.TF_IDF, \"true\",\n            TermVectorParams.FIELDS, \"test_basictv,test_notv,test_postv,test_offtv,test_posofftv\",\n            \"f.test_posofftv.\" + TermVectorParams.POSITIONS, \"false\",\n            \"f.test_offtv.\" + TermVectorParams.OFFSETS, \"false\",\n            \"f.test_basictv.\" + TermVectorParams.DF, \"false\",\n            \"f.test_basictv.\" + TermVectorParams.TF, \"false\",\n            \"f.test_basictv.\" + TermVectorParams.TF_IDF, \"false\");\n    }\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n\n    handle.clear();\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    handle.put(\"score\", SKIPVAL);\n    handle.put(\"[docid]\", SKIPVAL);\n    handle.put(\"_version_\", SKIPVAL); // not a cloud test, but may use updateLog\n\n    // SOLR-3720: TODO: TVC doesn't \"merge\" df and idf .. should it?\n    handle.put(\"df\", SKIPVAL);\n    handle.put(\"tf-idf\", SKIPVAL);\n\n    index(\"id\", \"0\",\n          \"test_posofftv\", \"This is a title and another title\",\n          \"test_basictv\", \"This is a title and another title\",\n          \"test_notv\", \"This is a title and another title\",\n          \"test_postv\", \"This is a title and another title\",\n          \"test_offtv\", \"This is a title and another title\"\n          );\n    index(\"id\", \"1\",\n          \"test_posofftv\", \"The quick reb fox jumped over the lazy brown dogs.\",\n          \"test_basictv\", \"The quick reb fox jumped over the lazy brown dogs.\",\n          \"test_notv\", \"The quick reb fox jumped over the lazy brown dogs.\",\n          \"test_postv\", \"The quick reb fox jumped over the lazy brown dogs.\",\n          \"test_offtv\", \"The quick reb fox jumped over the lazy brown dogs.\"\n          );\n    \n    index(\"id\", \"2\",\n          \"test_posofftv\", \"This is a document\",\n          \"test_basictv\", \"This is a document\",\n          \"test_notv\", \"This is a document\",\n          \"test_postv\", \"This is a document\",\n          \"test_offtv\", \"This is a document\"\n          );\n    index(\"id\", \"3\",\n          \"test_posofftv\", \"another document\",\n          \"test_basictv\", \"another document\",\n          \"test_notv\", \"another document\",\n          \"test_postv\", \"another document\",\n          \"test_offtv\", \"another document\"\n          );\n    //bunch of docs that are variants on blue\n    index(\"id\", \"4\",\n          \"test_posofftv\", \"blue\",\n          \"test_basictv\", \"blue\",\n          \"test_notv\", \"blue\",\n          \"test_postv\", \"blue\",\n          \"test_offtv\", \"blue\"\n          );\n    index(\"id\", \"5\",\n          \"test_posofftv\", \"blud\",\n          \"test_basictv\", \"blud\",\n          \"test_notv\", \"blud\",\n          \"test_postv\", \"blud\",\n          \"test_offtv\", \"blud\"\n          );\n    index(\"id\", \"6\",\n          \"test_posofftv\", \"boue\",\n          \"test_basictv\", \"boue\",\n          \"test_notv\", \"boue\",\n          \"test_postv\", \"boue\",\n          \"test_offtv\", \"boue\"\n          );\n    index(\"id\", \"7\",\n          \"test_posofftv\", \"glue\",\n          \"test_basictv\", \"glue\",\n          \"test_notv\", \"glue\",\n          \"test_postv\", \"glue\",\n          \"test_offtv\", \"glue\"\n          );\n    index(\"id\", \"8\",\n          \"test_posofftv\", \"blee\",\n          \"test_basictv\", \"blee\",\n          \"test_notv\", \"blee\",\n          \"test_postv\", \"blee\",\n          \"test_offtv\", \"blee\"\n          );\n    index(\"id\", \"9\",\n          \"test_posofftv\", \"blah\",\n          \"test_basictv\", \"blah\",\n          \"test_notv\", \"blah\",\n          \"test_postv\", \"blah\",\n          \"test_offtv\", \"blah\"\n          );\n\n    commit();\n\n    final String tv = \"tvrh\";\n\n    for (String q : new String[] {\"id:0\", \"id:7\", \"id:[3 TO 6]\", \"*:*\"}) {\n\n      query(\"sort\",\"id desc\",\n            \"qt\",tv, \n            \"shards.qt\",tv,\n            \"q\", q, \n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n\n      // tv.fl diff from fl\n      query(\"sort\", \"id asc\",\n            \"qt\",tv, \n            \"shards.qt\",tv,\n            \"q\", q, \n            \"fl\", \"*,score\",\n            \"tv.fl\", \"test_basictv,test_offtv\",\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n\n      // multi-valued tv.fl \n      query(\"sort\", \"id asc\",\n            \"qt\",tv, \n            \"shards.qt\",tv,\n            \"q\", q, \n            \"fl\", \"*,score\",\n            \"tv.fl\", \"test_basictv\",\n            \"tv.fl\",\"test_offtv\",\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n      // re-use fl glob\n      query(\"sort\", \"id desc\",\n            \"qt\",tv, \n            \"shards.qt\",tv,\n            \"q\", q, \n            \"fl\", \"*,score\",\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n      // re-use fl, ignore things we can't handle\n      query(\"sort\", \"id desc\",\n            \"qt\",tv, \n            \"shards.qt\",tv,\n            \"q\", q, \n            \"fl\", \"score,test_basictv,[docid],test_postv,val:sum(3,4)\",\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n\n      // re-use (multi-valued) fl, ignore things we can't handle\n      query(\"sort\", \"id desc\",\n            \"qt\",tv, \n            \"shards.qt\",tv,\n            \"q\", q, \n            \"fl\", \"score,test_basictv\",\n            \"fl\", \"[docid],test_postv,val:sum(3,4)\",\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n\n      // test some other options\n    \n      query(\"sort\", \"id asc\",\n            \"qt\",tv, \n            \"shards.qt\",tv,\n            \"q\", q, \n            TermVectorComponent.COMPONENT_NAME, \"true\",\n            TermVectorParams.TF, \"true\", \n            TermVectorParams.DF, \"true\", \n            TermVectorParams.OFFSETS, \"true\", \n            TermVectorParams.POSITIONS, \"true\", \n            TermVectorParams.TF_IDF, \"true\");\n    \n      query(\"sort\", \"id desc\",\n            \"qt\",tv, \n            \"shards.qt\",tv,\n            \"q\", q, \n            TermVectorComponent.COMPONENT_NAME, \"true\",\n            TermVectorParams.ALL, \"true\");\n    \n      // per field stuff\n\n      query(\"sort\", \"id desc\",\n            \"qt\",tv, \n            \"shards.qt\",tv,\n            \"q\", q, \n            TermVectorComponent.COMPONENT_NAME, \"true\",\n            TermVectorParams.TF, \"true\", \n            TermVectorParams.DF, \"true\", \n            TermVectorParams.OFFSETS, \"true\", \n            TermVectorParams.POSITIONS, \"true\", \n            TermVectorParams.TF_IDF, \"true\",\n            TermVectorParams.FIELDS, \"test_basictv,test_notv,test_postv,test_offtv,test_posofftv\",\n            \"f.test_posofftv.\" + TermVectorParams.POSITIONS, \"false\",\n            \"f.test_offtv.\" + TermVectorParams.OFFSETS, \"false\",\n            \"f.test_basictv.\" + TermVectorParams.DF, \"false\",\n            \"f.test_basictv.\" + TermVectorParams.TF, \"false\",\n            \"f.test_basictv.\" + TermVectorParams.TF_IDF, \"false\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"edd89d5655f0e7381ecdfc7770e8bdaa1741ed3c","date":1423863597,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TermVectorComponentDistributedTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TermVectorComponentDistributedTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n\n    handle.clear();\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    handle.put(\"score\", SKIPVAL);\n    handle.put(\"[docid]\", SKIPVAL);\n    handle.put(\"_version_\", SKIPVAL); // not a cloud test, but may use updateLog\n\n    // SOLR-3720: TODO: TVC doesn't \"merge\" df and idf .. should it?\n    handle.put(\"df\", SKIPVAL);\n    handle.put(\"tf-idf\", SKIPVAL);\n\n    index(\"id\", \"0\",\n          \"test_posofftv\", \"This is a title and another title\",\n          \"test_basictv\", \"This is a title and another title\",\n          \"test_notv\", \"This is a title and another title\",\n          \"test_postv\", \"This is a title and another title\",\n          \"test_offtv\", \"This is a title and another title\"\n          );\n    index(\"id\", \"1\",\n          \"test_posofftv\", \"The quick reb fox jumped over the lazy brown dogs.\",\n          \"test_basictv\", \"The quick reb fox jumped over the lazy brown dogs.\",\n          \"test_notv\", \"The quick reb fox jumped over the lazy brown dogs.\",\n          \"test_postv\", \"The quick reb fox jumped over the lazy brown dogs.\",\n          \"test_offtv\", \"The quick reb fox jumped over the lazy brown dogs.\"\n          );\n    \n    index(\"id\", \"2\",\n          \"test_posofftv\", \"This is a document\",\n          \"test_basictv\", \"This is a document\",\n          \"test_notv\", \"This is a document\",\n          \"test_postv\", \"This is a document\",\n          \"test_offtv\", \"This is a document\"\n          );\n    index(\"id\", \"3\",\n          \"test_posofftv\", \"another document\",\n          \"test_basictv\", \"another document\",\n          \"test_notv\", \"another document\",\n          \"test_postv\", \"another document\",\n          \"test_offtv\", \"another document\"\n          );\n    //bunch of docs that are variants on blue\n    index(\"id\", \"4\",\n          \"test_posofftv\", \"blue\",\n          \"test_basictv\", \"blue\",\n          \"test_notv\", \"blue\",\n          \"test_postv\", \"blue\",\n          \"test_offtv\", \"blue\"\n          );\n    index(\"id\", \"5\",\n          \"test_posofftv\", \"blud\",\n          \"test_basictv\", \"blud\",\n          \"test_notv\", \"blud\",\n          \"test_postv\", \"blud\",\n          \"test_offtv\", \"blud\"\n          );\n    index(\"id\", \"6\",\n          \"test_posofftv\", \"boue\",\n          \"test_basictv\", \"boue\",\n          \"test_notv\", \"boue\",\n          \"test_postv\", \"boue\",\n          \"test_offtv\", \"boue\"\n          );\n    index(\"id\", \"7\",\n          \"test_posofftv\", \"glue\",\n          \"test_basictv\", \"glue\",\n          \"test_notv\", \"glue\",\n          \"test_postv\", \"glue\",\n          \"test_offtv\", \"glue\"\n          );\n    index(\"id\", \"8\",\n          \"test_posofftv\", \"blee\",\n          \"test_basictv\", \"blee\",\n          \"test_notv\", \"blee\",\n          \"test_postv\", \"blee\",\n          \"test_offtv\", \"blee\"\n          );\n    index(\"id\", \"9\",\n          \"test_posofftv\", \"blah\",\n          \"test_basictv\", \"blah\",\n          \"test_notv\", \"blah\",\n          \"test_postv\", \"blah\",\n          \"test_offtv\", \"blah\"\n          );\n\n    commit();\n\n    final String tv = \"tvrh\";\n\n    for (String q : new String[] {\"id:0\", \"id:7\", \"id:[3 TO 6]\", \"*:*\"}) {\n      query(\"sort\",\"id desc\",\n            \"qt\",tv, \n            \"q\", q,\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n\n      // tv.fl diff from fl\n      query(\"sort\", \"id asc\",\n            \"qt\",tv, \n            \"q\", q,\n            \"fl\", \"*,score\",\n            \"tv.fl\", \"test_basictv,test_offtv\",\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n\n      // multi-valued tv.fl \n      query(\"sort\", \"id asc\",\n            \"qt\",tv, \n            \"q\", q,\n            \"fl\", \"*,score\",\n            \"tv.fl\", \"test_basictv\",\n            \"tv.fl\",\"test_offtv\",\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n      // re-use fl glob\n      query(\"sort\", \"id desc\",\n            \"qt\",tv, \n            \"q\", q,\n            \"fl\", \"*,score\",\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n      // re-use fl, ignore things we can't handle\n      query(\"sort\", \"id desc\",\n            \"qt\",tv, \n            \"q\", q,\n            \"fl\", \"score,test_basictv,[docid],test_postv,val:sum(3,4)\",\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n\n      // re-use (multi-valued) fl, ignore things we can't handle\n      query(\"sort\", \"id desc\",\n            \"qt\",tv, \n            \"q\", q,\n            \"fl\", \"score,test_basictv\",\n            \"fl\", \"[docid],test_postv,val:sum(3,4)\",\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n\n      // test some other options\n    \n      query(\"sort\", \"id asc\",\n            \"qt\",tv, \n            \"q\", q,\n            TermVectorComponent.COMPONENT_NAME, \"true\",\n            TermVectorParams.TF, \"true\", \n            TermVectorParams.DF, \"true\", \n            TermVectorParams.OFFSETS, \"true\", \n            TermVectorParams.POSITIONS, \"true\", \n            TermVectorParams.TF_IDF, \"true\");\n    \n      query(\"sort\", \"id desc\",\n            \"qt\",tv, \n            \"q\", q,\n            TermVectorComponent.COMPONENT_NAME, \"true\",\n            TermVectorParams.ALL, \"true\");\n    \n      // per field stuff\n\n      query(\"sort\", \"id desc\",\n            \"qt\",tv, \n            \"q\", q,\n            TermVectorComponent.COMPONENT_NAME, \"true\",\n            TermVectorParams.TF, \"true\", \n            TermVectorParams.DF, \"true\", \n            TermVectorParams.OFFSETS, \"true\", \n            TermVectorParams.POSITIONS, \"true\", \n            TermVectorParams.TF_IDF, \"true\",\n            TermVectorParams.FIELDS, \"test_basictv,test_notv,test_postv,test_offtv,test_posofftv\",\n            \"f.test_posofftv.\" + TermVectorParams.POSITIONS, \"false\",\n            \"f.test_offtv.\" + TermVectorParams.OFFSETS, \"false\",\n            \"f.test_basictv.\" + TermVectorParams.DF, \"false\",\n            \"f.test_basictv.\" + TermVectorParams.TF, \"false\",\n            \"f.test_basictv.\" + TermVectorParams.TF_IDF, \"false\");\n    }\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n\n    handle.clear();\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    handle.put(\"score\", SKIPVAL);\n    handle.put(\"[docid]\", SKIPVAL);\n    handle.put(\"_version_\", SKIPVAL); // not a cloud test, but may use updateLog\n\n    // SOLR-3720: TODO: TVC doesn't \"merge\" df and idf .. should it?\n    handle.put(\"df\", SKIPVAL);\n    handle.put(\"tf-idf\", SKIPVAL);\n\n    index(\"id\", \"0\",\n          \"test_posofftv\", \"This is a title and another title\",\n          \"test_basictv\", \"This is a title and another title\",\n          \"test_notv\", \"This is a title and another title\",\n          \"test_postv\", \"This is a title and another title\",\n          \"test_offtv\", \"This is a title and another title\"\n          );\n    index(\"id\", \"1\",\n          \"test_posofftv\", \"The quick reb fox jumped over the lazy brown dogs.\",\n          \"test_basictv\", \"The quick reb fox jumped over the lazy brown dogs.\",\n          \"test_notv\", \"The quick reb fox jumped over the lazy brown dogs.\",\n          \"test_postv\", \"The quick reb fox jumped over the lazy brown dogs.\",\n          \"test_offtv\", \"The quick reb fox jumped over the lazy brown dogs.\"\n          );\n    \n    index(\"id\", \"2\",\n          \"test_posofftv\", \"This is a document\",\n          \"test_basictv\", \"This is a document\",\n          \"test_notv\", \"This is a document\",\n          \"test_postv\", \"This is a document\",\n          \"test_offtv\", \"This is a document\"\n          );\n    index(\"id\", \"3\",\n          \"test_posofftv\", \"another document\",\n          \"test_basictv\", \"another document\",\n          \"test_notv\", \"another document\",\n          \"test_postv\", \"another document\",\n          \"test_offtv\", \"another document\"\n          );\n    //bunch of docs that are variants on blue\n    index(\"id\", \"4\",\n          \"test_posofftv\", \"blue\",\n          \"test_basictv\", \"blue\",\n          \"test_notv\", \"blue\",\n          \"test_postv\", \"blue\",\n          \"test_offtv\", \"blue\"\n          );\n    index(\"id\", \"5\",\n          \"test_posofftv\", \"blud\",\n          \"test_basictv\", \"blud\",\n          \"test_notv\", \"blud\",\n          \"test_postv\", \"blud\",\n          \"test_offtv\", \"blud\"\n          );\n    index(\"id\", \"6\",\n          \"test_posofftv\", \"boue\",\n          \"test_basictv\", \"boue\",\n          \"test_notv\", \"boue\",\n          \"test_postv\", \"boue\",\n          \"test_offtv\", \"boue\"\n          );\n    index(\"id\", \"7\",\n          \"test_posofftv\", \"glue\",\n          \"test_basictv\", \"glue\",\n          \"test_notv\", \"glue\",\n          \"test_postv\", \"glue\",\n          \"test_offtv\", \"glue\"\n          );\n    index(\"id\", \"8\",\n          \"test_posofftv\", \"blee\",\n          \"test_basictv\", \"blee\",\n          \"test_notv\", \"blee\",\n          \"test_postv\", \"blee\",\n          \"test_offtv\", \"blee\"\n          );\n    index(\"id\", \"9\",\n          \"test_posofftv\", \"blah\",\n          \"test_basictv\", \"blah\",\n          \"test_notv\", \"blah\",\n          \"test_postv\", \"blah\",\n          \"test_offtv\", \"blah\"\n          );\n\n    commit();\n\n    final String tv = \"tvrh\";\n\n    for (String q : new String[] {\"id:0\", \"id:7\", \"id:[3 TO 6]\", \"*:*\"}) {\n\n      query(\"sort\",\"id desc\",\n            \"qt\",tv, \n            \"shards.qt\",tv,\n            \"q\", q, \n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n\n      // tv.fl diff from fl\n      query(\"sort\", \"id asc\",\n            \"qt\",tv, \n            \"shards.qt\",tv,\n            \"q\", q, \n            \"fl\", \"*,score\",\n            \"tv.fl\", \"test_basictv,test_offtv\",\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n\n      // multi-valued tv.fl \n      query(\"sort\", \"id asc\",\n            \"qt\",tv, \n            \"shards.qt\",tv,\n            \"q\", q, \n            \"fl\", \"*,score\",\n            \"tv.fl\", \"test_basictv\",\n            \"tv.fl\",\"test_offtv\",\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n      // re-use fl glob\n      query(\"sort\", \"id desc\",\n            \"qt\",tv, \n            \"shards.qt\",tv,\n            \"q\", q, \n            \"fl\", \"*,score\",\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n      // re-use fl, ignore things we can't handle\n      query(\"sort\", \"id desc\",\n            \"qt\",tv, \n            \"shards.qt\",tv,\n            \"q\", q, \n            \"fl\", \"score,test_basictv,[docid],test_postv,val:sum(3,4)\",\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n\n      // re-use (multi-valued) fl, ignore things we can't handle\n      query(\"sort\", \"id desc\",\n            \"qt\",tv, \n            \"shards.qt\",tv,\n            \"q\", q, \n            \"fl\", \"score,test_basictv\",\n            \"fl\", \"[docid],test_postv,val:sum(3,4)\",\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n\n      // test some other options\n    \n      query(\"sort\", \"id asc\",\n            \"qt\",tv, \n            \"shards.qt\",tv,\n            \"q\", q, \n            TermVectorComponent.COMPONENT_NAME, \"true\",\n            TermVectorParams.TF, \"true\", \n            TermVectorParams.DF, \"true\", \n            TermVectorParams.OFFSETS, \"true\", \n            TermVectorParams.POSITIONS, \"true\", \n            TermVectorParams.TF_IDF, \"true\");\n    \n      query(\"sort\", \"id desc\",\n            \"qt\",tv, \n            \"shards.qt\",tv,\n            \"q\", q, \n            TermVectorComponent.COMPONENT_NAME, \"true\",\n            TermVectorParams.ALL, \"true\");\n    \n      // per field stuff\n\n      query(\"sort\", \"id desc\",\n            \"qt\",tv, \n            \"shards.qt\",tv,\n            \"q\", q, \n            TermVectorComponent.COMPONENT_NAME, \"true\",\n            TermVectorParams.TF, \"true\", \n            TermVectorParams.DF, \"true\", \n            TermVectorParams.OFFSETS, \"true\", \n            TermVectorParams.POSITIONS, \"true\", \n            TermVectorParams.TF_IDF, \"true\",\n            TermVectorParams.FIELDS, \"test_basictv,test_notv,test_postv,test_offtv,test_posofftv\",\n            \"f.test_posofftv.\" + TermVectorParams.POSITIONS, \"false\",\n            \"f.test_offtv.\" + TermVectorParams.OFFSETS, \"false\",\n            \"f.test_basictv.\" + TermVectorParams.DF, \"false\",\n            \"f.test_basictv.\" + TermVectorParams.TF, \"false\",\n            \"f.test_basictv.\" + TermVectorParams.TF_IDF, \"false\");\n    }\n  }\n\n","bugFix":["ba3a184cc785359756dd0a77bbdb0e4f06bf727b"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4e32cd9d49e5cda7e131c54c05d8e970583b7063","date":1450404956,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TermVectorComponentDistributedTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TermVectorComponentDistributedTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n\n    handle.clear();\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    handle.put(\"score\", SKIPVAL);\n    handle.put(\"[docid]\", SKIPVAL);\n    handle.put(\"_version_\", SKIPVAL); // not a cloud test, but may use updateLog\n\n    // SOLR-3720: TODO: TVC doesn't \"merge\" df and idf .. should it?\n    handle.put(\"df\", SKIPVAL);\n    handle.put(\"tf-idf\", SKIPVAL);\n\n    index(\"id\", \"0\",\n          \"test_posofftv\", \"This is a title and another title\",\n          \"test_basictv\", \"This is a title and another title\",\n          \"test_notv\", \"This is a title and another title\",\n          \"test_postv\", \"This is a title and another title\",\n          \"test_offtv\", \"This is a title and another title\"\n          );\n    index(\"id\", \"1\",\n          \"test_posofftv\", \"The quick reb fox jumped over the lazy brown dogs.\",\n          \"test_basictv\", \"The quick reb fox jumped over the lazy brown dogs.\",\n          \"test_notv\", \"The quick reb fox jumped over the lazy brown dogs.\",\n          \"test_postv\", \"The quick reb fox jumped over the lazy brown dogs.\",\n          \"test_offtv\", \"The quick reb fox jumped over the lazy brown dogs.\"\n          );\n    \n    index(\"id\", \"2\",\n          \"test_posofftv\", \"This is a document\",\n          \"test_basictv\", \"This is a document\",\n          \"test_notv\", \"This is a document\",\n          \"test_postv\", \"This is a document\",\n          \"test_offtv\", \"This is a document\"\n          );\n    index(\"id\", \"3\",\n          \"test_posofftv\", \"another document\",\n          \"test_basictv\", \"another document\",\n          \"test_notv\", \"another document\",\n          \"test_postv\", \"another document\",\n          \"test_offtv\", \"another document\"\n          );\n    //bunch of docs that are variants on blue\n    index(\"id\", \"4\",\n          \"test_posofftv\", \"blue\",\n          \"test_basictv\", \"blue\",\n          \"test_notv\", \"blue\",\n          \"test_postv\", \"blue\",\n          \"test_offtv\", \"blue\"\n          );\n    index(\"id\", \"5\",\n          \"test_posofftv\", \"blud\",\n          \"test_basictv\", \"blud\",\n          \"test_notv\", \"blud\",\n          \"test_postv\", \"blud\",\n          \"test_offtv\", \"blud\"\n          );\n    index(\"id\", \"6\",\n          \"test_posofftv\", \"boue\",\n          \"test_basictv\", \"boue\",\n          \"test_notv\", \"boue\",\n          \"test_postv\", \"boue\",\n          \"test_offtv\", \"boue\"\n          );\n    index(\"id\", \"7\",\n          \"test_posofftv\", \"glue\",\n          \"test_basictv\", \"glue\",\n          \"test_notv\", \"glue\",\n          \"test_postv\", \"glue\",\n          \"test_offtv\", \"glue\"\n          );\n    index(\"id\", \"8\",\n          \"test_posofftv\", \"blee\",\n          \"test_basictv\", \"blee\",\n          \"test_notv\", \"blee\",\n          \"test_postv\", \"blee\",\n          \"test_offtv\", \"blee\"\n          );\n    index(\"id\", \"9\",\n          \"test_posofftv\", \"blah\",\n          \"test_basictv\", \"blah\",\n          \"test_notv\", \"blah\",\n          \"test_postv\", \"blah\",\n          \"test_offtv\", \"blah\"\n          );\n\n    commit();\n\n    final String tv = \"tvrh\";\n\n    for (String q : new String[] {\"id:0\", \"id:7\", \"id:[3 TO 6]\", \"*:*\"}) {\n      query(\"sort\",\"id desc\",\n            \"qt\",tv, \n            \"q\", q,\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n\n      // tv.fl diff from fl\n      query(\"sort\", \"id asc\",\n            \"qt\",tv, \n            \"q\", q,\n            \"fl\", \"*,score\",\n            \"tv.fl\", \"test_basictv,test_offtv\",\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n\n      // multi-valued tv.fl \n      query(\"sort\", \"id asc\",\n            \"qt\",tv, \n            \"q\", q,\n            \"fl\", \"*,score\",\n            \"tv.fl\", \"test_basictv\",\n            \"tv.fl\",\"test_offtv\",\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n      // re-use fl glob\n      query(\"sort\", \"id desc\",\n            \"qt\",tv, \n            \"q\", q,\n            \"fl\", \"*,score\",\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n      // re-use fl, ignore things we can't handle\n      query(\"sort\", \"id desc\",\n            \"qt\",tv, \n            \"q\", q,\n            \"fl\", \"score,test_basictv,[docid],test_postv,val:sum(3,4)\",\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n\n      // re-use (multi-valued) fl, ignore things we can't handle\n      query(\"sort\", \"id desc\",\n            \"qt\",tv, \n            \"q\", q,\n            \"fl\", \"score,test_basictv\",\n            \"fl\", \"[docid],test_postv,val:sum(3,4)\",\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n\n      // test some other options\n    \n      query(\"sort\", \"id asc\",\n            \"qt\",tv, \n            \"q\", q,\n            TermVectorComponent.COMPONENT_NAME, \"true\",\n            TermVectorParams.TF, \"true\", \n            TermVectorParams.DF, \"true\", \n            TermVectorParams.OFFSETS, \"true\", \n            TermVectorParams.POSITIONS, \"true\", \n            TermVectorParams.TF_IDF, \"true\");\n    \n      query(\"sort\", \"id desc\",\n            \"qt\",tv, \n            \"q\", q,\n            TermVectorComponent.COMPONENT_NAME, \"true\",\n            TermVectorParams.ALL, \"true\");\n\n      query(\"sort\", \"id desc\",\n          \"qt\",tv,\n          \"q\", q,\n          \"rows\", 1,\n          ShardParams.DISTRIB_SINGLE_PASS, \"true\",\n          TermVectorComponent.COMPONENT_NAME, \"true\",\n          TermVectorParams.ALL, \"true\");\n\n      // per field stuff\n\n      query(\"sort\", \"id desc\",\n            \"qt\",tv, \n            \"q\", q,\n            TermVectorComponent.COMPONENT_NAME, \"true\",\n            TermVectorParams.TF, \"true\", \n            TermVectorParams.DF, \"true\", \n            TermVectorParams.OFFSETS, \"true\", \n            TermVectorParams.POSITIONS, \"true\", \n            TermVectorParams.TF_IDF, \"true\",\n            TermVectorParams.FIELDS, \"test_basictv,test_notv,test_postv,test_offtv,test_posofftv\",\n            \"f.test_posofftv.\" + TermVectorParams.POSITIONS, \"false\",\n            \"f.test_offtv.\" + TermVectorParams.OFFSETS, \"false\",\n            \"f.test_basictv.\" + TermVectorParams.DF, \"false\",\n            \"f.test_basictv.\" + TermVectorParams.TF, \"false\",\n            \"f.test_basictv.\" + TermVectorParams.TF_IDF, \"false\");\n    }\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n\n    handle.clear();\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    handle.put(\"score\", SKIPVAL);\n    handle.put(\"[docid]\", SKIPVAL);\n    handle.put(\"_version_\", SKIPVAL); // not a cloud test, but may use updateLog\n\n    // SOLR-3720: TODO: TVC doesn't \"merge\" df and idf .. should it?\n    handle.put(\"df\", SKIPVAL);\n    handle.put(\"tf-idf\", SKIPVAL);\n\n    index(\"id\", \"0\",\n          \"test_posofftv\", \"This is a title and another title\",\n          \"test_basictv\", \"This is a title and another title\",\n          \"test_notv\", \"This is a title and another title\",\n          \"test_postv\", \"This is a title and another title\",\n          \"test_offtv\", \"This is a title and another title\"\n          );\n    index(\"id\", \"1\",\n          \"test_posofftv\", \"The quick reb fox jumped over the lazy brown dogs.\",\n          \"test_basictv\", \"The quick reb fox jumped over the lazy brown dogs.\",\n          \"test_notv\", \"The quick reb fox jumped over the lazy brown dogs.\",\n          \"test_postv\", \"The quick reb fox jumped over the lazy brown dogs.\",\n          \"test_offtv\", \"The quick reb fox jumped over the lazy brown dogs.\"\n          );\n    \n    index(\"id\", \"2\",\n          \"test_posofftv\", \"This is a document\",\n          \"test_basictv\", \"This is a document\",\n          \"test_notv\", \"This is a document\",\n          \"test_postv\", \"This is a document\",\n          \"test_offtv\", \"This is a document\"\n          );\n    index(\"id\", \"3\",\n          \"test_posofftv\", \"another document\",\n          \"test_basictv\", \"another document\",\n          \"test_notv\", \"another document\",\n          \"test_postv\", \"another document\",\n          \"test_offtv\", \"another document\"\n          );\n    //bunch of docs that are variants on blue\n    index(\"id\", \"4\",\n          \"test_posofftv\", \"blue\",\n          \"test_basictv\", \"blue\",\n          \"test_notv\", \"blue\",\n          \"test_postv\", \"blue\",\n          \"test_offtv\", \"blue\"\n          );\n    index(\"id\", \"5\",\n          \"test_posofftv\", \"blud\",\n          \"test_basictv\", \"blud\",\n          \"test_notv\", \"blud\",\n          \"test_postv\", \"blud\",\n          \"test_offtv\", \"blud\"\n          );\n    index(\"id\", \"6\",\n          \"test_posofftv\", \"boue\",\n          \"test_basictv\", \"boue\",\n          \"test_notv\", \"boue\",\n          \"test_postv\", \"boue\",\n          \"test_offtv\", \"boue\"\n          );\n    index(\"id\", \"7\",\n          \"test_posofftv\", \"glue\",\n          \"test_basictv\", \"glue\",\n          \"test_notv\", \"glue\",\n          \"test_postv\", \"glue\",\n          \"test_offtv\", \"glue\"\n          );\n    index(\"id\", \"8\",\n          \"test_posofftv\", \"blee\",\n          \"test_basictv\", \"blee\",\n          \"test_notv\", \"blee\",\n          \"test_postv\", \"blee\",\n          \"test_offtv\", \"blee\"\n          );\n    index(\"id\", \"9\",\n          \"test_posofftv\", \"blah\",\n          \"test_basictv\", \"blah\",\n          \"test_notv\", \"blah\",\n          \"test_postv\", \"blah\",\n          \"test_offtv\", \"blah\"\n          );\n\n    commit();\n\n    final String tv = \"tvrh\";\n\n    for (String q : new String[] {\"id:0\", \"id:7\", \"id:[3 TO 6]\", \"*:*\"}) {\n      query(\"sort\",\"id desc\",\n            \"qt\",tv, \n            \"q\", q,\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n\n      // tv.fl diff from fl\n      query(\"sort\", \"id asc\",\n            \"qt\",tv, \n            \"q\", q,\n            \"fl\", \"*,score\",\n            \"tv.fl\", \"test_basictv,test_offtv\",\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n\n      // multi-valued tv.fl \n      query(\"sort\", \"id asc\",\n            \"qt\",tv, \n            \"q\", q,\n            \"fl\", \"*,score\",\n            \"tv.fl\", \"test_basictv\",\n            \"tv.fl\",\"test_offtv\",\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n      // re-use fl glob\n      query(\"sort\", \"id desc\",\n            \"qt\",tv, \n            \"q\", q,\n            \"fl\", \"*,score\",\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n      // re-use fl, ignore things we can't handle\n      query(\"sort\", \"id desc\",\n            \"qt\",tv, \n            \"q\", q,\n            \"fl\", \"score,test_basictv,[docid],test_postv,val:sum(3,4)\",\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n\n      // re-use (multi-valued) fl, ignore things we can't handle\n      query(\"sort\", \"id desc\",\n            \"qt\",tv, \n            \"q\", q,\n            \"fl\", \"score,test_basictv\",\n            \"fl\", \"[docid],test_postv,val:sum(3,4)\",\n            TermVectorComponent.COMPONENT_NAME, \"true\", \n            TermVectorParams.TF, \"true\");\n\n      // test some other options\n    \n      query(\"sort\", \"id asc\",\n            \"qt\",tv, \n            \"q\", q,\n            TermVectorComponent.COMPONENT_NAME, \"true\",\n            TermVectorParams.TF, \"true\", \n            TermVectorParams.DF, \"true\", \n            TermVectorParams.OFFSETS, \"true\", \n            TermVectorParams.POSITIONS, \"true\", \n            TermVectorParams.TF_IDF, \"true\");\n    \n      query(\"sort\", \"id desc\",\n            \"qt\",tv, \n            \"q\", q,\n            TermVectorComponent.COMPONENT_NAME, \"true\",\n            TermVectorParams.ALL, \"true\");\n    \n      // per field stuff\n\n      query(\"sort\", \"id desc\",\n            \"qt\",tv, \n            \"q\", q,\n            TermVectorComponent.COMPONENT_NAME, \"true\",\n            TermVectorParams.TF, \"true\", \n            TermVectorParams.DF, \"true\", \n            TermVectorParams.OFFSETS, \"true\", \n            TermVectorParams.POSITIONS, \"true\", \n            TermVectorParams.TF_IDF, \"true\",\n            TermVectorParams.FIELDS, \"test_basictv,test_notv,test_postv,test_offtv,test_posofftv\",\n            \"f.test_posofftv.\" + TermVectorParams.POSITIONS, \"false\",\n            \"f.test_offtv.\" + TermVectorParams.OFFSETS, \"false\",\n            \"f.test_basictv.\" + TermVectorParams.DF, \"false\",\n            \"f.test_basictv.\" + TermVectorParams.TF, \"false\",\n            \"f.test_basictv.\" + TermVectorParams.TF_IDF, \"false\");\n    }\n  }\n\n","bugFix":["ba3a184cc785359756dd0a77bbdb0e4f06bf727b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4e32cd9d49e5cda7e131c54c05d8e970583b7063":["edd89d5655f0e7381ecdfc7770e8bdaa1741ed3c"],"abb23fcc2461782ab204e61213240feb77d355aa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"edd89d5655f0e7381ecdfc7770e8bdaa1741ed3c":["abb23fcc2461782ab204e61213240feb77d355aa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4e32cd9d49e5cda7e131c54c05d8e970583b7063"]},"commit2Childs":{"4e32cd9d49e5cda7e131c54c05d8e970583b7063":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"abb23fcc2461782ab204e61213240feb77d355aa":["edd89d5655f0e7381ecdfc7770e8bdaa1741ed3c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["abb23fcc2461782ab204e61213240feb77d355aa"],"edd89d5655f0e7381ecdfc7770e8bdaa1741ed3c":["4e32cd9d49e5cda7e131c54c05d8e970583b7063"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}