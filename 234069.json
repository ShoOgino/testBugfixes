{"path":"lucene/sandbox/src/test/org/apache/lucene/geo/TestTessellator#checkPolygon(String).mjava","commits":[{"id":"3154b8a89750f531ca89c2fc8d7dc22a6ee5739d","date":1559804329,"type":0,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/geo/TestTessellator#checkPolygon(String).mjava","pathOld":"/dev/null","sourceNew":"  private void checkPolygon(String wkt) throws Exception {\n    Polygon polygon = (Polygon) SimpleWKTShapeParser.parse(wkt);\n    List<Tessellator.Triangle> tessellation = Tessellator.tessellate(polygon);\n    assertTrue(tessellation.size() > 0);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["9ebcaa353d633ad1f42e11b495fa6e35efe711f7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9ebcaa353d633ad1f42e11b495fa6e35efe711f7","date":1560229302,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/geo/TestTessellator#checkPolygon(String).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/geo/TestTessellator#checkPolygon(String).mjava","sourceNew":"  private void checkPolygon(String wkt) throws Exception {\n    Polygon polygon = (Polygon) SimpleWKTShapeParser.parse(wkt);\n    List<Tessellator.Triangle> tessellation = Tessellator.tessellate(polygon);\n    assertEquals(area(polygon), area(tessellation), 0.0);\n  }\n\n","sourceOld":"  private void checkPolygon(String wkt) throws Exception {\n    Polygon polygon = (Polygon) SimpleWKTShapeParser.parse(wkt);\n    List<Tessellator.Triangle> tessellation = Tessellator.tessellate(polygon);\n    assertTrue(tessellation.size() > 0);\n  }\n\n","bugFix":["3154b8a89750f531ca89c2fc8d7dc22a6ee5739d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ed90f8ba7e7be13d155f954862178b23a324125","date":1568020603,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/geo/TestTessellator#checkPolygon(String).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/geo/TestTessellator#checkPolygon(String).mjava","sourceNew":"  private void checkPolygon(String wkt) throws Exception {\n    Polygon polygon = (Polygon) SimpleWKTShapeParser.parse(wkt);\n    List<Tessellator.Triangle> tessellation = Tessellator.tessellate(polygon);\n    assertEquals(area(polygon), area(tessellation), 0.0);\n    for (Tessellator.Triangle t : tessellation) {\n      checkTriangleEdgesFromPolygon(polygon, t);\n    }\n  }\n\n","sourceOld":"  private void checkPolygon(String wkt) throws Exception {\n    Polygon polygon = (Polygon) SimpleWKTShapeParser.parse(wkt);\n    List<Tessellator.Triangle> tessellation = Tessellator.tessellate(polygon);\n    assertEquals(area(polygon), area(tessellation), 0.0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c1e6d465800c73af60624bf9d4459a19f7940c","date":1579293280,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestTessellator#checkPolygon(String).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/geo/TestTessellator#checkPolygon(String).mjava","sourceNew":"  private void checkPolygon(String wkt) throws Exception {\n    Polygon polygon = (Polygon) SimpleWKTShapeParser.parse(wkt);\n    List<Tessellator.Triangle> tessellation = Tessellator.tessellate(polygon);\n    assertEquals(area(polygon), area(tessellation), 0.0);\n    for (Tessellator.Triangle t : tessellation) {\n      checkTriangleEdgesFromPolygon(polygon, t);\n    }\n  }\n\n","sourceOld":"  private void checkPolygon(String wkt) throws Exception {\n    Polygon polygon = (Polygon) SimpleWKTShapeParser.parse(wkt);\n    List<Tessellator.Triangle> tessellation = Tessellator.tessellate(polygon);\n    assertEquals(area(polygon), area(tessellation), 0.0);\n    for (Tessellator.Triangle t : tessellation) {\n      checkTriangleEdgesFromPolygon(polygon, t);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ebcaa353d633ad1f42e11b495fa6e35efe711f7":["3154b8a89750f531ca89c2fc8d7dc22a6ee5739d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c1e6d465800c73af60624bf9d4459a19f7940c":["5ed90f8ba7e7be13d155f954862178b23a324125"],"5ed90f8ba7e7be13d155f954862178b23a324125":["9ebcaa353d633ad1f42e11b495fa6e35efe711f7"],"3154b8a89750f531ca89c2fc8d7dc22a6ee5739d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09c1e6d465800c73af60624bf9d4459a19f7940c"]},"commit2Childs":{"9ebcaa353d633ad1f42e11b495fa6e35efe711f7":["5ed90f8ba7e7be13d155f954862178b23a324125"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3154b8a89750f531ca89c2fc8d7dc22a6ee5739d"],"09c1e6d465800c73af60624bf9d4459a19f7940c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5ed90f8ba7e7be13d155f954862178b23a324125":["09c1e6d465800c73af60624bf9d4459a19f7940c"],"3154b8a89750f531ca89c2fc8d7dc22a6ee5739d":["9ebcaa353d633ad1f42e11b495fa6e35efe711f7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}