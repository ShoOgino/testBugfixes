{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/HashBasedRouter#getSearchSlices(String,SolrParams,DocCollection).mjava","commits":[{"id":"c78bb747213f4a3449337db2399309566a08241a","date":1354823430,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/HashBasedRouter#getSearchSlices(String,SolrParams,DocCollection).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/HashBasedRouter[DocRouter]#getSearchSlices(String,SolrParams,DocCollection).mjava","sourceNew":"  @Override\n  public Collection<Slice> getSearchSlices(String shardKey, SolrParams params, DocCollection collection) {\n    if (shardKey == null) {\n      // search across whole collection\n      // TODO: this may need modification in the future when shard splitting could cause an overlap\n      return collection.getSlices();\n    }\n\n    // use the shardKey as an id for plain hashing\n    return Collections.singletonList(getTargetSlice(shardKey, null, params, collection));\n  }\n\n","sourceOld":"  @Override\n  public Collection<Slice> getSearchSlices(String shardKey, SolrParams params, DocCollection collection) {\n    if (shardKey == null) {\n      // search across whole collection\n      // TODO: this may need modification in the future when shard splitting could cause an overlap\n      return collection.getSlices();\n    }\n\n    // use the shardKey as an id for plain hashing\n    return Collections.singletonList(getTargetSlice(shardKey, null, params, collection));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eec5368fa415ebab044b7ae01de50d5b49519b7e","date":1355029764,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/HashBasedRouter#getSearchSlicesSingle(String,SolrParams,DocCollection).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/HashBasedRouter#getSearchSlices(String,SolrParams,DocCollection).mjava","sourceNew":"  @Override\n  public Collection<Slice> getSearchSlicesSingle(String shardKey, SolrParams params, DocCollection collection) {\n    if (shardKey == null) {\n      // search across whole collection\n      // TODO: this may need modification in the future when shard splitting could cause an overlap\n      return collection.getSlices();\n    }\n\n    // use the shardKey as an id for plain hashing\n    return Collections.singletonList(getTargetSlice(shardKey, null, params, collection));\n  }\n\n","sourceOld":"  @Override\n  public Collection<Slice> getSearchSlices(String shardKey, SolrParams params, DocCollection collection) {\n    if (shardKey == null) {\n      // search across whole collection\n      // TODO: this may need modification in the future when shard splitting could cause an overlap\n      return collection.getSlices();\n    }\n\n    // use the shardKey as an id for plain hashing\n    return Collections.singletonList(getTargetSlice(shardKey, null, params, collection));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eec5368fa415ebab044b7ae01de50d5b49519b7e":["c78bb747213f4a3449337db2399309566a08241a"],"c78bb747213f4a3449337db2399309566a08241a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["eec5368fa415ebab044b7ae01de50d5b49519b7e"]},"commit2Childs":{"eec5368fa415ebab044b7ae01de50d5b49519b7e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c78bb747213f4a3449337db2399309566a08241a":["eec5368fa415ebab044b7ae01de50d5b49519b7e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c78bb747213f4a3449337db2399309566a08241a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}