{"path":"src/java/org/apache/solr/handler/XMLLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","commits":[{"id":"e34a66231ee53fe909c5f7c0e71131fcb5246d89","date":1226598668,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/XMLLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","pathOld":"/dev/null","sourceNew":"  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"XMLLoader: \" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (XmlUpdateRequestHandler.log.isTraceEnabled()) {\n        String body = IOUtils.toString(reader);\n        XmlUpdateRequestHandler.log.trace(\"body\", body);\n        reader = new StringReader(body);\n      }\n\n      XMLStreamReader parser = inputFactory.createXMLStreamReader(reader);\n      this.processUpdate(processor, parser);\n    }\n    catch (XMLStreamException e) {\n      //Hmmm, not quite right\n      throw new IOException(e.getMessage());\n    } finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["cd3b76649a43cf723b4db58864a8ceaf13fa6b3c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d46853cb4c0cbbb7cb86b2b98805f5724550bf92","date":1231356747,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/XMLLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","pathOld":"src/java/org/apache/solr/handler/XMLLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","sourceNew":"  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"XMLLoader: \" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (XmlUpdateRequestHandler.log.isTraceEnabled()) {\n        String body = IOUtils.toString(reader);\n        XmlUpdateRequestHandler.log.trace(\"body\", body);\n        reader = new StringReader(body);\n      }\n\n      XMLStreamReader parser = inputFactory.createXMLStreamReader(reader);\n      this.processUpdate(processor, parser);\n    }\n    catch (XMLStreamException e) {\n      //Hmmm, not quite right\n      throw new IOException(e.getMessage(), e);\n    } finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","sourceOld":"  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"XMLLoader: \" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (XmlUpdateRequestHandler.log.isTraceEnabled()) {\n        String body = IOUtils.toString(reader);\n        XmlUpdateRequestHandler.log.trace(\"body\", body);\n        reader = new StringReader(body);\n      }\n\n      XMLStreamReader parser = inputFactory.createXMLStreamReader(reader);\n      this.processUpdate(processor, parser);\n    }\n    catch (XMLStreamException e) {\n      //Hmmm, not quite right\n      throw new IOException(e.getMessage());\n    } finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"89a734aafc2c42ad7085ac8b16c9de24b50d0de3","date":1231376353,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/XMLLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","pathOld":"src/java/org/apache/solr/handler/XMLLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","sourceNew":"  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"XMLLoader: \" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (XmlUpdateRequestHandler.log.isTraceEnabled()) {\n        String body = IOUtils.toString(reader);\n        XmlUpdateRequestHandler.log.trace(\"body\", body);\n        reader = new StringReader(body);\n      }\n\n      XMLStreamReader parser = inputFactory.createXMLStreamReader(reader);\n      this.processUpdate(processor, parser);\n    }\n    catch (XMLStreamException e) {\n      //Hmmm, not quite right\n      throw new IOException(e.getMessage());\n    } finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","sourceOld":"  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"XMLLoader: \" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (XmlUpdateRequestHandler.log.isTraceEnabled()) {\n        String body = IOUtils.toString(reader);\n        XmlUpdateRequestHandler.log.trace(\"body\", body);\n        reader = new StringReader(body);\n      }\n\n      XMLStreamReader parser = inputFactory.createXMLStreamReader(reader);\n      this.processUpdate(processor, parser);\n    }\n    catch (XMLStreamException e) {\n      //Hmmm, not quite right\n      throw new IOException(e.getMessage(), e);\n    } finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"259b6dcdfbf9be956680028f4d17980f8a186d1b","date":1232063480,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/XMLLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","pathOld":"src/java/org/apache/solr/handler/XMLLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","sourceNew":"  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"XMLLoader: \" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (XmlUpdateRequestHandler.log.isTraceEnabled()) {\n        String body = IOUtils.toString(reader);\n        XmlUpdateRequestHandler.log.trace(\"body\", body);\n        reader = new StringReader(body);\n      }\n\n      XMLStreamReader parser = inputFactory.createXMLStreamReader(reader);\n      this.processUpdate(processor, parser);\n    }\n    catch (XMLStreamException e) {\n      //Hmmm, not quite right\n      throw (IOException) new IOException(e.getMessage()).initCause(e);\n    } finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","sourceOld":"  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"XMLLoader: \" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (XmlUpdateRequestHandler.log.isTraceEnabled()) {\n        String body = IOUtils.toString(reader);\n        XmlUpdateRequestHandler.log.trace(\"body\", body);\n        reader = new StringReader(body);\n      }\n\n      XMLStreamReader parser = inputFactory.createXMLStreamReader(reader);\n      this.processUpdate(processor, parser);\n    }\n    catch (XMLStreamException e) {\n      //Hmmm, not quite right\n      throw new IOException(e.getMessage());\n    } finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","bugFix":null,"bugIntro":["cd3b76649a43cf723b4db58864a8ceaf13fa6b3c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cd3b76649a43cf723b4db58864a8ceaf13fa6b3c","date":1255173238,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/XMLLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","pathOld":"src/java/org/apache/solr/handler/XMLLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","sourceNew":"  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"XMLLoader: \" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (XmlUpdateRequestHandler.log.isTraceEnabled()) {\n        String body = IOUtils.toString(reader);\n        XmlUpdateRequestHandler.log.trace(\"body\", body);\n        reader = new StringReader(body);\n      }\n\n      XMLStreamReader parser = inputFactory.createXMLStreamReader(reader);\n      this.processUpdate(processor, parser);\n    }\n    catch (XMLStreamException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e.getMessage(), e);\n    } finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","sourceOld":"  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"XMLLoader: \" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (XmlUpdateRequestHandler.log.isTraceEnabled()) {\n        String body = IOUtils.toString(reader);\n        XmlUpdateRequestHandler.log.trace(\"body\", body);\n        reader = new StringReader(body);\n      }\n\n      XMLStreamReader parser = inputFactory.createXMLStreamReader(reader);\n      this.processUpdate(processor, parser);\n    }\n    catch (XMLStreamException e) {\n      //Hmmm, not quite right\n      throw (IOException) new IOException(e.getMessage()).initCause(e);\n    } finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","bugFix":["e34a66231ee53fe909c5f7c0e71131fcb5246d89","259b6dcdfbf9be956680028f4d17980f8a186d1b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/XMLLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","pathOld":"src/java/org/apache/solr/handler/XMLLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","sourceNew":"  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"XMLLoader: \" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (XmlUpdateRequestHandler.log.isTraceEnabled()) {\n        String body = IOUtils.toString(reader);\n        XmlUpdateRequestHandler.log.trace(\"body\", body);\n        reader = new StringReader(body);\n      }\n\n      XMLStreamReader parser = inputFactory.createXMLStreamReader(reader);\n      this.processUpdate(processor, parser);\n    }\n    catch (XMLStreamException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e.getMessage(), e);\n    } finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","sourceOld":"  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"XMLLoader: \" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (XmlUpdateRequestHandler.log.isTraceEnabled()) {\n        String body = IOUtils.toString(reader);\n        XmlUpdateRequestHandler.log.trace(\"body\", body);\n        reader = new StringReader(body);\n      }\n\n      XMLStreamReader parser = inputFactory.createXMLStreamReader(reader);\n      this.processUpdate(processor, parser);\n    }\n    catch (XMLStreamException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e.getMessage(), e);\n    } finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d46853cb4c0cbbb7cb86b2b98805f5724550bf92":["e34a66231ee53fe909c5f7c0e71131fcb5246d89"],"259b6dcdfbf9be956680028f4d17980f8a186d1b":["89a734aafc2c42ad7085ac8b16c9de24b50d0de3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["cd3b76649a43cf723b4db58864a8ceaf13fa6b3c"],"89a734aafc2c42ad7085ac8b16c9de24b50d0de3":["d46853cb4c0cbbb7cb86b2b98805f5724550bf92"],"cd3b76649a43cf723b4db58864a8ceaf13fa6b3c":["259b6dcdfbf9be956680028f4d17980f8a186d1b"],"e34a66231ee53fe909c5f7c0e71131fcb5246d89":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d46853cb4c0cbbb7cb86b2b98805f5724550bf92":["89a734aafc2c42ad7085ac8b16c9de24b50d0de3"],"259b6dcdfbf9be956680028f4d17980f8a186d1b":["cd3b76649a43cf723b4db58864a8ceaf13fa6b3c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["e34a66231ee53fe909c5f7c0e71131fcb5246d89"],"89a734aafc2c42ad7085ac8b16c9de24b50d0de3":["259b6dcdfbf9be956680028f4d17980f8a186d1b"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd3b76649a43cf723b4db58864a8ceaf13fa6b3c":["ad94625fb8d088209f46650c8097196fec67f00c"],"e34a66231ee53fe909c5f7c0e71131fcb5246d89":["d46853cb4c0cbbb7cb86b2b98805f5724550bf92"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}