{"path":"solr/core/src/java/org/apache/solr/search/DocSlice#DocSlice(int,int,int[],float[],int,float).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DocSlice#DocSlice(int,int,int[],float[],int,float).mjava","pathOld":"solr/src/java/org/apache/solr/search/DocSlice#DocSlice(int,int,int[],float[],int,float).mjava","sourceNew":"  /**\n   * Primary constructor for a DocSlice instance.\n   *\n   * @param offset  starting offset for this range of docs\n   * @param len     length of results\n   * @param docs    array of docids starting at position 0\n   * @param scores  array of scores that corresponds to docs, may be null\n   * @param matches total number of matches for the query\n   */\n  public DocSlice(int offset, int len, int[] docs, float[] scores, int matches, float maxScore) {\n    this.offset=offset;\n    this.len=len;\n    this.docs=docs;\n    this.scores=scores;\n    this.matches=matches;\n    this.maxScore=maxScore;\n  }\n\n","sourceOld":"  /**\n   * Primary constructor for a DocSlice instance.\n   *\n   * @param offset  starting offset for this range of docs\n   * @param len     length of results\n   * @param docs    array of docids starting at position 0\n   * @param scores  array of scores that corresponds to docs, may be null\n   * @param matches total number of matches for the query\n   */\n  public DocSlice(int offset, int len, int[] docs, float[] scores, int matches, float maxScore) {\n    this.offset=offset;\n    this.len=len;\n    this.docs=docs;\n    this.scores=scores;\n    this.matches=matches;\n    this.maxScore=maxScore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DocSlice#DocSlice(int,int,int[],float[],int,float).mjava","pathOld":"solr/src/java/org/apache/solr/search/DocSlice#DocSlice(int,int,int[],float[],int,float).mjava","sourceNew":"  /**\n   * Primary constructor for a DocSlice instance.\n   *\n   * @param offset  starting offset for this range of docs\n   * @param len     length of results\n   * @param docs    array of docids starting at position 0\n   * @param scores  array of scores that corresponds to docs, may be null\n   * @param matches total number of matches for the query\n   */\n  public DocSlice(int offset, int len, int[] docs, float[] scores, int matches, float maxScore) {\n    this.offset=offset;\n    this.len=len;\n    this.docs=docs;\n    this.scores=scores;\n    this.matches=matches;\n    this.maxScore=maxScore;\n  }\n\n","sourceOld":"  /**\n   * Primary constructor for a DocSlice instance.\n   *\n   * @param offset  starting offset for this range of docs\n   * @param len     length of results\n   * @param docs    array of docids starting at position 0\n   * @param scores  array of scores that corresponds to docs, may be null\n   * @param matches total number of matches for the query\n   */\n  public DocSlice(int offset, int len, int[] docs, float[] scores, int matches, float maxScore) {\n    this.offset=offset;\n    this.len=len;\n    this.docs=docs;\n    this.scores=scores;\n    this.matches=matches;\n    this.maxScore=maxScore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/DocSlice#DocSlice(int,int,int[],float[],int,float).mjava","pathOld":"solr/src/java/org/apache/solr/search/DocSlice#DocSlice(int,int,int[],float[],int,float).mjava","sourceNew":"  /**\n   * Primary constructor for a DocSlice instance.\n   *\n   * @param offset  starting offset for this range of docs\n   * @param len     length of results\n   * @param docs    array of docids starting at position 0\n   * @param scores  array of scores that corresponds to docs, may be null\n   * @param matches total number of matches for the query\n   */\n  public DocSlice(int offset, int len, int[] docs, float[] scores, int matches, float maxScore) {\n    this.offset=offset;\n    this.len=len;\n    this.docs=docs;\n    this.scores=scores;\n    this.matches=matches;\n    this.maxScore=maxScore;\n  }\n\n","sourceOld":"  /**\n   * Primary constructor for a DocSlice instance.\n   *\n   * @param offset  starting offset for this range of docs\n   * @param len     length of results\n   * @param docs    array of docids starting at position 0\n   * @param scores  array of scores that corresponds to docs, may be null\n   * @param matches total number of matches for the query\n   */\n  public DocSlice(int offset, int len, int[] docs, float[] scores, int matches, float maxScore) {\n    this.offset=offset;\n    this.len=len;\n    this.docs=docs;\n    this.scores=scores;\n    this.matches=matches;\n    this.maxScore=maxScore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c996b769d988552a15ae14a911b94a2d4c534b08","date":1428592217,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DocSlice#DocSlice(int,int,int[],float[],int,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DocSlice#DocSlice(int,int,int[],float[],int,float).mjava","sourceNew":"  /**\n   * Primary constructor for a DocSlice instance.\n   *\n   * @param offset  starting offset for this range of docs\n   * @param len     length of results\n   * @param docs    array of docids starting at position 0\n   * @param scores  array of scores that corresponds to docs, may be null\n   * @param matches total number of matches for the query\n   */\n  public DocSlice(int offset, int len, int[] docs, float[] scores, int matches, float maxScore) {\n    this.offset=offset;\n    this.len=len;\n    this.docs=docs;\n    this.scores=scores;\n    this.matches=matches;\n    this.maxScore=maxScore;\n    this.ramBytesUsed = BASE_RAM_BYTES_USED + RamUsageEstimator.sizeOf(docs) + RamUsageEstimator.sizeOf(scores);\n  }\n\n","sourceOld":"  /**\n   * Primary constructor for a DocSlice instance.\n   *\n   * @param offset  starting offset for this range of docs\n   * @param len     length of results\n   * @param docs    array of docids starting at position 0\n   * @param scores  array of scores that corresponds to docs, may be null\n   * @param matches total number of matches for the query\n   */\n  public DocSlice(int offset, int len, int[] docs, float[] scores, int matches, float maxScore) {\n    this.offset=offset;\n    this.len=len;\n    this.docs=docs;\n    this.scores=scores;\n    this.matches=matches;\n    this.maxScore=maxScore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a42b68b360da873747290774e08068ebe1434c4","date":1428594552,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DocSlice#DocSlice(int,int,int[],float[],int,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DocSlice#DocSlice(int,int,int[],float[],int,float).mjava","sourceNew":"  /**\n   * Primary constructor for a DocSlice instance.\n   *\n   * @param offset  starting offset for this range of docs\n   * @param len     length of results\n   * @param docs    array of docids starting at position 0\n   * @param scores  array of scores that corresponds to docs, may be null\n   * @param matches total number of matches for the query\n   */\n  public DocSlice(int offset, int len, int[] docs, float[] scores, int matches, float maxScore) {\n    this.offset=offset;\n    this.len=len;\n    this.docs=docs;\n    this.scores=scores;\n    this.matches=matches;\n    this.maxScore=maxScore;\n    this.ramBytesUsed = BASE_RAM_BYTES_USED + RamUsageEstimator.sizeOf(docs) + (scores != null ? RamUsageEstimator.sizeOf(scores) : 0);\n  }\n\n","sourceOld":"  /**\n   * Primary constructor for a DocSlice instance.\n   *\n   * @param offset  starting offset for this range of docs\n   * @param len     length of results\n   * @param docs    array of docids starting at position 0\n   * @param scores  array of scores that corresponds to docs, may be null\n   * @param matches total number of matches for the query\n   */\n  public DocSlice(int offset, int len, int[] docs, float[] scores, int matches, float maxScore) {\n    this.offset=offset;\n    this.len=len;\n    this.docs=docs;\n    this.scores=scores;\n    this.matches=matches;\n    this.maxScore=maxScore;\n    this.ramBytesUsed = BASE_RAM_BYTES_USED + RamUsageEstimator.sizeOf(docs) + RamUsageEstimator.sizeOf(scores);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee9dd8b366ecd2954493d63ef9b4bdc78c57608c","date":1428598336,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DocSlice#DocSlice(int,int,int[],float[],int,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DocSlice#DocSlice(int,int,int[],float[],int,float).mjava","sourceNew":"  /**\n   * Primary constructor for a DocSlice instance.\n   *\n   * @param offset  starting offset for this range of docs\n   * @param len     length of results\n   * @param docs    array of docids starting at position 0\n   * @param scores  array of scores that corresponds to docs, may be null\n   * @param matches total number of matches for the query\n   */\n  public DocSlice(int offset, int len, int[] docs, float[] scores, int matches, float maxScore) {\n    this.offset=offset;\n    this.len=len;\n    this.docs=docs;\n    this.scores=scores;\n    this.matches=matches;\n    this.maxScore=maxScore;\n  }\n\n","sourceOld":"  /**\n   * Primary constructor for a DocSlice instance.\n   *\n   * @param offset  starting offset for this range of docs\n   * @param len     length of results\n   * @param docs    array of docids starting at position 0\n   * @param scores  array of scores that corresponds to docs, may be null\n   * @param matches total number of matches for the query\n   */\n  public DocSlice(int offset, int len, int[] docs, float[] scores, int matches, float maxScore) {\n    this.offset=offset;\n    this.len=len;\n    this.docs=docs;\n    this.scores=scores;\n    this.matches=matches;\n    this.maxScore=maxScore;\n    this.ramBytesUsed = BASE_RAM_BYTES_USED + RamUsageEstimator.sizeOf(docs) + (scores != null ? RamUsageEstimator.sizeOf(scores) : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8f3dce1d4820d9634c1a6a46cd50ac13cf0f5a6","date":1498031702,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DocSlice#DocSlice(int,int,int[],float[],long,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DocSlice#DocSlice(int,int,int[],float[],int,float).mjava","sourceNew":"  /**\n   * Primary constructor for a DocSlice instance.\n   *\n   * @param offset  starting offset for this range of docs\n   * @param len     length of results\n   * @param docs    array of docids starting at position 0\n   * @param scores  array of scores that corresponds to docs, may be null\n   * @param matches total number of matches for the query\n   */\n  public DocSlice(int offset, int len, int[] docs, float[] scores, long matches, float maxScore) {\n    this.offset=offset;\n    this.len=len;\n    this.docs=docs;\n    this.scores=scores;\n    this.matches=matches;\n    this.maxScore=maxScore;\n  }\n\n","sourceOld":"  /**\n   * Primary constructor for a DocSlice instance.\n   *\n   * @param offset  starting offset for this range of docs\n   * @param len     length of results\n   * @param docs    array of docids starting at position 0\n   * @param scores  array of scores that corresponds to docs, may be null\n   * @param matches total number of matches for the query\n   */\n  public DocSlice(int offset, int len, int[] docs, float[] scores, int matches, float maxScore) {\n    this.offset=offset;\n    this.len=len;\n    this.docs=docs;\n    this.scores=scores;\n    this.matches=matches;\n    this.maxScore=maxScore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":5,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/DocSlice#DocSlice(int,int,int[],float[],long,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DocSlice#DocSlice(int,int,int[],float[],int,float).mjava","sourceNew":"  /**\n   * Primary constructor for a DocSlice instance.\n   *\n   * @param offset  starting offset for this range of docs\n   * @param len     length of results\n   * @param docs    array of docids starting at position 0\n   * @param scores  array of scores that corresponds to docs, may be null\n   * @param matches total number of matches for the query\n   */\n  public DocSlice(int offset, int len, int[] docs, float[] scores, long matches, float maxScore) {\n    this.offset=offset;\n    this.len=len;\n    this.docs=docs;\n    this.scores=scores;\n    this.matches=matches;\n    this.maxScore=maxScore;\n  }\n\n","sourceOld":"  /**\n   * Primary constructor for a DocSlice instance.\n   *\n   * @param offset  starting offset for this range of docs\n   * @param len     length of results\n   * @param docs    array of docids starting at position 0\n   * @param scores  array of scores that corresponds to docs, may be null\n   * @param matches total number of matches for the query\n   */\n  public DocSlice(int offset, int len, int[] docs, float[] scores, int matches, float maxScore) {\n    this.offset=offset;\n    this.len=len;\n    this.docs=docs;\n    this.scores=scores;\n    this.matches=matches;\n    this.maxScore=maxScore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/DocSlice#DocSlice(int,int,int[],float[],int,float).mjava","sourceNew":null,"sourceOld":"  /**\n   * Primary constructor for a DocSlice instance.\n   *\n   * @param offset  starting offset for this range of docs\n   * @param len     length of results\n   * @param docs    array of docids starting at position 0\n   * @param scores  array of scores that corresponds to docs, may be null\n   * @param matches total number of matches for the query\n   */\n  public DocSlice(int offset, int len, int[] docs, float[] scores, int matches, float maxScore) {\n    this.offset=offset;\n    this.len=len;\n    this.docs=docs;\n    this.scores=scores;\n    this.matches=matches;\n    this.maxScore=maxScore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"f8f3dce1d4820d9634c1a6a46cd50ac13cf0f5a6":["ee9dd8b366ecd2954493d63ef9b4bdc78c57608c"],"9a42b68b360da873747290774e08068ebe1434c4":["c996b769d988552a15ae14a911b94a2d4c534b08"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["ee9dd8b366ecd2954493d63ef9b4bdc78c57608c","f8f3dce1d4820d9634c1a6a46cd50ac13cf0f5a6"],"c996b769d988552a15ae14a911b94a2d4c534b08":["c26f00b574427b55127e869b935845554afde1fa"],"28288370235ed02234a64753cdbf0c6ec096304a":["ee9dd8b366ecd2954493d63ef9b4bdc78c57608c","f8f3dce1d4820d9634c1a6a46cd50ac13cf0f5a6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"],"ee9dd8b366ecd2954493d63ef9b4bdc78c57608c":["9a42b68b360da873747290774e08068ebe1434c4"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["c996b769d988552a15ae14a911b94a2d4c534b08"],"f8f3dce1d4820d9634c1a6a46cd50ac13cf0f5a6":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"9a42b68b360da873747290774e08068ebe1434c4":["ee9dd8b366ecd2954493d63ef9b4bdc78c57608c"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"c996b769d988552a15ae14a911b94a2d4c534b08":["9a42b68b360da873747290774e08068ebe1434c4"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ee9dd8b366ecd2954493d63ef9b4bdc78c57608c":["f8f3dce1d4820d9634c1a6a46cd50ac13cf0f5a6","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}