{"path":"src/java/org/apache/lucene/index/SegmentTermEnum#next().mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentTermEnum#next().mjava","pathOld":"/dev/null","sourceNew":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  public final boolean next() throws IOException {\n    if (position++ >= size-1) {\n      term = null;\n      return false;\n    }\n\n    prev = term;\n    term = readTerm();\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15c469602973ef1a33c9a07367a380d278ffab20","date":1074206555,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentTermEnum#next().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentTermEnum#next().mjava","sourceNew":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  public final boolean next() throws IOException {\n    if (position++ >= size-1) {\n      term = null;\n      return false;\n    }\n\n    prev = term;\n    term = readTerm();\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if (!isIndex) {\n      if (termInfo.docFreq > skipInterval) {\n        termInfo.skipOffset = input.readVInt();\n      }\n    }\n\n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    return true;\n  }\n\n","sourceOld":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  public final boolean next() throws IOException {\n    if (position++ >= size-1) {\n      term = null;\n      return false;\n    }\n\n    prev = term;\n    term = readTerm();\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"770281b8a8459cafcdd2354b6a06078fea2d83c9","date":1077308096,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentTermEnum#next().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentTermEnum#next().mjava","sourceNew":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  public final boolean next() throws IOException {\n    if (position++ >= size - 1) {\n      term = null;\n      return false;\n    }\n\n    prev = term;\n    term = readTerm();\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n\n    if (!isIndex) {\n      if (termInfo.docFreq > skipInterval) {\n        termInfo.skipOffset = input.readVInt();\n      }\n    }\n\n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    return true;\n  }\n\n","sourceOld":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  public final boolean next() throws IOException {\n    if (position++ >= size-1) {\n      term = null;\n      return false;\n    }\n\n    prev = term;\n    term = readTerm();\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if (!isIndex) {\n      if (termInfo.docFreq > skipInterval) {\n        termInfo.skipOffset = input.readVInt();\n      }\n    }\n\n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f5cf8ed8dfc080044944e2cabac618bc36199013","date":1082468878,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentTermEnum#next().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentTermEnum#next().mjava","sourceNew":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  public final boolean next() throws IOException {\n    if (position++ >= size - 1) {\n      term = null;\n      return false;\n    }\n\n    prev = term;\n    term = readTerm();\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if(format == -1){\n    //  just read skipOffset in order to increment  file pointer; \n    // value is never used since skipTo is switched off\n      if (!isIndex) {\n        if (termInfo.docFreq > formatM1SkipInterval) {\n          termInfo.skipOffset = input.readVInt(); \n        }\n      }\n    }\n    else{\n      if (termInfo.docFreq >= skipInterval) \n        termInfo.skipOffset = input.readVInt();\n    }\n    \n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    return true;\n  }\n\n","sourceOld":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  public final boolean next() throws IOException {\n    if (position++ >= size - 1) {\n      term = null;\n      return false;\n    }\n\n    prev = term;\n    term = readTerm();\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n\n    if (!isIndex) {\n      if (termInfo.docFreq > skipInterval) {\n        termInfo.skipOffset = input.readVInt();\n      }\n    }\n\n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3778b73bb813f2d72a86f83c78f3fd5a988eb08c","date":1097251129,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentTermEnum#next().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentTermEnum#next().mjava","sourceNew":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  public final boolean next() throws IOException {\n    if (position++ >= size - 1) {\n      termBuffer.reset();\n      return false;\n    }\n\n    prevBuffer.set(termBuffer);\n    termBuffer.read(input, fieldInfos);\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if(format == -1){\n    //  just read skipOffset in order to increment  file pointer; \n    // value is never used since skipTo is switched off\n      if (!isIndex) {\n        if (termInfo.docFreq > formatM1SkipInterval) {\n          termInfo.skipOffset = input.readVInt(); \n        }\n      }\n    }\n    else{\n      if (termInfo.docFreq >= skipInterval) \n        termInfo.skipOffset = input.readVInt();\n    }\n    \n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    return true;\n  }\n\n","sourceOld":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  public final boolean next() throws IOException {\n    if (position++ >= size - 1) {\n      term = null;\n      return false;\n    }\n\n    prev = term;\n    term = readTerm();\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if(format == -1){\n    //  just read skipOffset in order to increment  file pointer; \n    // value is never used since skipTo is switched off\n      if (!isIndex) {\n        if (termInfo.docFreq > formatM1SkipInterval) {\n          termInfo.skipOffset = input.readVInt(); \n        }\n      }\n    }\n    else{\n      if (termInfo.docFreq >= skipInterval) \n        termInfo.skipOffset = input.readVInt();\n    }\n    \n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f938ab9a2d44da709a64fbc5e024b6673c99bda8","date":1199740548,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentTermEnum#next().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentTermEnum#next().mjava","sourceNew":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  public final boolean next() throws IOException {\n    if (position++ >= size - 1) {\n      prevBuffer.set(termBuffer);\n      termBuffer.reset();\n      return false;\n    }\n\n    prevBuffer.set(termBuffer);\n    termBuffer.read(input, fieldInfos);\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if(format == -1){\n    //  just read skipOffset in order to increment  file pointer; \n    // value is never used since skipTo is switched off\n      if (!isIndex) {\n        if (termInfo.docFreq > formatM1SkipInterval) {\n          termInfo.skipOffset = input.readVInt(); \n        }\n      }\n    }\n    else{\n      if (termInfo.docFreq >= skipInterval) \n        termInfo.skipOffset = input.readVInt();\n    }\n    \n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    return true;\n  }\n\n","sourceOld":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  public final boolean next() throws IOException {\n    if (position++ >= size - 1) {\n      termBuffer.reset();\n      return false;\n    }\n\n    prevBuffer.set(termBuffer);\n    termBuffer.read(input, fieldInfos);\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if(format == -1){\n    //  just read skipOffset in order to increment  file pointer; \n    // value is never used since skipTo is switched off\n      if (!isIndex) {\n        if (termInfo.docFreq > formatM1SkipInterval) {\n          termInfo.skipOffset = input.readVInt(); \n        }\n      }\n    }\n    else{\n      if (termInfo.docFreq >= skipInterval) \n        termInfo.skipOffset = input.readVInt();\n    }\n    \n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentTermEnum#next().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentTermEnum#next().mjava","sourceNew":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  @Override\n  public final boolean next() throws IOException {\n    if (position++ >= size - 1) {\n      prevBuffer.set(termBuffer);\n      termBuffer.reset();\n      return false;\n    }\n\n    prevBuffer.set(termBuffer);\n    termBuffer.read(input, fieldInfos);\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if(format == -1){\n    //  just read skipOffset in order to increment  file pointer; \n    // value is never used since skipTo is switched off\n      if (!isIndex) {\n        if (termInfo.docFreq > formatM1SkipInterval) {\n          termInfo.skipOffset = input.readVInt(); \n        }\n      }\n    }\n    else{\n      if (termInfo.docFreq >= skipInterval) \n        termInfo.skipOffset = input.readVInt();\n    }\n    \n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    return true;\n  }\n\n","sourceOld":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  public final boolean next() throws IOException {\n    if (position++ >= size - 1) {\n      prevBuffer.set(termBuffer);\n      termBuffer.reset();\n      return false;\n    }\n\n    prevBuffer.set(termBuffer);\n    termBuffer.read(input, fieldInfos);\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if(format == -1){\n    //  just read skipOffset in order to increment  file pointer; \n    // value is never used since skipTo is switched off\n      if (!isIndex) {\n        if (termInfo.docFreq > formatM1SkipInterval) {\n          termInfo.skipOffset = input.readVInt(); \n        }\n      }\n    }\n    else{\n      if (termInfo.docFreq >= skipInterval) \n        termInfo.skipOffset = input.readVInt();\n    }\n    \n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentTermEnum#next().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentTermEnum#next().mjava","sourceNew":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  @Override\n  public final boolean next() throws IOException {\n    if (position++ >= size - 1) {\n      prevBuffer.set(termBuffer);\n      termBuffer.reset();\n      return false;\n    }\n\n    prevBuffer.set(termBuffer);\n    termBuffer.read(input, fieldInfos);\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if(format == -1){\n    //  just read skipOffset in order to increment  file pointer; \n    // value is never used since skipTo is switched off\n      if (!isIndex) {\n        if (termInfo.docFreq > formatM1SkipInterval) {\n          termInfo.skipOffset = input.readVInt(); \n        }\n      }\n    }\n    else{\n      if (termInfo.docFreq >= skipInterval) \n        termInfo.skipOffset = input.readVInt();\n    }\n    \n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    return true;\n  }\n\n","sourceOld":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  @Override\n  public final boolean next() throws IOException {\n    if (position++ >= size - 1) {\n      prevBuffer.set(termBuffer);\n      termBuffer.reset();\n      return false;\n    }\n\n    prevBuffer.set(termBuffer);\n    termBuffer.read(input, fieldInfos);\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if(format == -1){\n    //  just read skipOffset in order to increment  file pointer; \n    // value is never used since skipTo is switched off\n      if (!isIndex) {\n        if (termInfo.docFreq > formatM1SkipInterval) {\n          termInfo.skipOffset = input.readVInt(); \n        }\n      }\n    }\n    else{\n      if (termInfo.docFreq >= skipInterval) \n        termInfo.skipOffset = input.readVInt();\n    }\n    \n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["15c469602973ef1a33c9a07367a380d278ffab20"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3778b73bb813f2d72a86f83c78f3fd5a988eb08c":["f5cf8ed8dfc080044944e2cabac618bc36199013"],"8a9e385641d717e641408d8fbbc62be8fc766357":["f938ab9a2d44da709a64fbc5e024b6673c99bda8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f938ab9a2d44da709a64fbc5e024b6673c99bda8":["3778b73bb813f2d72a86f83c78f3fd5a988eb08c"],"f5cf8ed8dfc080044944e2cabac618bc36199013":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"],"15c469602973ef1a33c9a07367a380d278ffab20":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"]},"commit2Childs":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["f5cf8ed8dfc080044944e2cabac618bc36199013"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["15c469602973ef1a33c9a07367a380d278ffab20"],"3778b73bb813f2d72a86f83c78f3fd5a988eb08c":["f938ab9a2d44da709a64fbc5e024b6673c99bda8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"f5cf8ed8dfc080044944e2cabac618bc36199013":["3778b73bb813f2d72a86f83c78f3fd5a988eb08c"],"f938ab9a2d44da709a64fbc5e024b6673c99bda8":["8a9e385641d717e641408d8fbbc62be8fc766357"],"15c469602973ef1a33c9a07367a380d278ffab20":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}