{"path":"sandbox/contributions/db/src/java/org/apache/lucene/store/db/DbOutputStream#flushBuffer(byte[],int).mjava","commits":[{"id":"16869a49920ab77b6df2f6d515ff7499372d7336","date":1074040185,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/db/src/java/org/apache/lucene/store/db/DbOutputStream#flushBuffer(byte[],int).mjava","pathOld":"/dev/null","sourceNew":"    protected void flushBuffer(byte[] b, int len)\n        throws IOException\n    {\n        int blockPos = (int) (position & BLOCK_MASK);\n        int offset = 0;\n\n        while (blockPos + len >= BLOCK_LEN) {\n            int blockLen = BLOCK_LEN - blockPos;\n\n            System.arraycopy(b, offset, block.getData(), blockPos, blockLen);\n            block.put(blocks, txn);\n\n            len -= blockLen;\n            offset += blockLen;\n            position += blockLen;\n\n            block.seek(position);\n            block.get(blocks, txn);\n            blockPos = 0;\n        }\n\n        if (len > 0)\n        {\n            System.arraycopy(b, offset, block.getData(), blockPos, len);\n            position += len;\n        }\n\n        if (position > length)\n            length = position;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7093bce16e678ecaf87612e82980c6a5959d84d","date":1086082023,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/db/src/java/org/apache/lucene/store/db/DbOutputStream#flushBuffer(byte[],int).mjava","pathOld":"sandbox/contributions/db/src/java/org/apache/lucene/store/db/DbOutputStream#flushBuffer(byte[],int).mjava","sourceNew":"    protected void flushBuffer(byte[] b, int len)\n        throws IOException\n    {\n        int blockPos = (int) (position & BLOCK_MASK);\n        int offset = 0;\n\n        while (blockPos + len >= BLOCK_LEN) {\n            int blockLen = BLOCK_LEN - blockPos;\n\n            System.arraycopy(b, offset, block.getData(), blockPos, blockLen);\n            block.put(blocks, txn, flags);\n\n            len -= blockLen;\n            offset += blockLen;\n            position += blockLen;\n\n            block.seek(position);\n            block.get(blocks, txn, flags);\n            blockPos = 0;\n        }\n\n        if (len > 0)\n        {\n            System.arraycopy(b, offset, block.getData(), blockPos, len);\n            position += len;\n        }\n\n        if (position > length)\n            length = position;\n    }\n\n","sourceOld":"    protected void flushBuffer(byte[] b, int len)\n        throws IOException\n    {\n        int blockPos = (int) (position & BLOCK_MASK);\n        int offset = 0;\n\n        while (blockPos + len >= BLOCK_LEN) {\n            int blockLen = BLOCK_LEN - blockPos;\n\n            System.arraycopy(b, offset, block.getData(), blockPos, blockLen);\n            block.put(blocks, txn);\n\n            len -= blockLen;\n            offset += blockLen;\n            position += blockLen;\n\n            block.seek(position);\n            block.get(blocks, txn);\n            blockPos = 0;\n        }\n\n        if (len > 0)\n        {\n            System.arraycopy(b, offset, block.getData(), blockPos, len);\n            position += len;\n        }\n\n        if (position > length)\n            length = position;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/db/src/java/org/apache/lucene/store/db/DbOutputStream#flushBuffer(byte[],int).mjava","pathOld":"sandbox/contributions/db/src/java/org/apache/lucene/store/db/DbOutputStream#flushBuffer(byte[],int).mjava","sourceNew":"    protected void flushBuffer(byte[] b, int len)\n        throws IOException\n    {\n        int blockPos = (int) (position & BLOCK_MASK);\n        int offset = 0;\n\n        while (blockPos + len >= BLOCK_LEN) {\n            int blockLen = BLOCK_LEN - blockPos;\n\n            System.arraycopy(b, offset, block.getData(), blockPos, blockLen);\n            block.put(blocks, txn, flags);\n\n            len -= blockLen;\n            offset += blockLen;\n            position += blockLen;\n\n            block.seek(position);\n            block.get(blocks, txn, flags);\n            blockPos = 0;\n        }\n\n        if (len > 0)\n        {\n            System.arraycopy(b, offset, block.getData(), blockPos, len);\n            position += len;\n        }\n\n        if (position > length)\n            length = position;\n    }\n\n","sourceOld":"    protected void flushBuffer(byte[] b, int len)\n        throws IOException\n    {\n        int blockPos = (int) (position & BLOCK_MASK);\n        int offset = 0;\n\n        while (blockPos + len >= BLOCK_LEN) {\n            int blockLen = BLOCK_LEN - blockPos;\n\n            System.arraycopy(b, offset, block.getData(), blockPos, blockLen);\n            block.put(blocks, txn, flags);\n\n            len -= blockLen;\n            offset += blockLen;\n            position += blockLen;\n\n            block.seek(position);\n            block.get(blocks, txn, flags);\n            blockPos = 0;\n        }\n\n        if (len > 0)\n        {\n            System.arraycopy(b, offset, block.getData(), blockPos, len);\n            position += len;\n        }\n\n        if (position > length)\n            length = position;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["b7093bce16e678ecaf87612e82980c6a5959d84d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"16869a49920ab77b6df2f6d515ff7499372d7336":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b7093bce16e678ecaf87612e82980c6a5959d84d":["16869a49920ab77b6df2f6d515ff7499372d7336"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["043c298cb215f13ba7b9b81d20760704e8f93d66"]},"commit2Childs":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["16869a49920ab77b6df2f6d515ff7499372d7336"],"16869a49920ab77b6df2f6d515ff7499372d7336":["b7093bce16e678ecaf87612e82980c6a5959d84d"],"b7093bce16e678ecaf87612e82980c6a5959d84d":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}