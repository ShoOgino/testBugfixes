{"path":"solr/core/src/test/org/apache/solr/search/TestSolr4Spatial#checkResultFormat().mjava","commits":[{"id":"c11e1d33f2ba742976268153f6edd2d29710cf69","date":1347851822,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolr4Spatial#checkResultFormat().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void checkResultFormat() throws Exception {\n    //Check input and output format is the same\n    String IN = \"89.9,-130\";//lat,lon\n    String OUT = IN;//IDENTICAL!\n\n    assertU(adoc(\"id\", \"11\", fieldName, IN));\n    assertU(commit());\n\n    assertQ(req(\n        \"fl\", \"id,\" + fieldName, \"q\", \"*:*\", \"rows\", \"1000\",\n        \"fq\", \"{!field needScore=false f=\"+fieldName+\"}Intersects(Circle(89.9,-130 d=9))\"),\n        \"//result/doc/*[@name='\" + fieldName + \"']//text()='\" + OUT + \"'\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bcb5c9814e87bce81ca6c0c80685c1754c4a1ac","date":1357162023,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolr4Spatial#checkResultFormat().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolr4Spatial#checkResultFormat().mjava","sourceNew":"  @Test\n  public void checkResultFormat() throws Exception {\n    //Check input and output format is the same\n    String IN = \"89.9,-130\";//lat,lon\n    String OUT = IN;//IDENTICAL!\n\n    assertU(adoc(\"id\", \"11\", fieldName, IN));\n    assertU(commit());\n\n    assertQ(req(\n        \"fl\", \"id,\" + fieldName, \"q\", \"*:*\", \"rows\", \"1000\",\n        \"fq\", \"{!field f=\"+fieldName+\"}Intersects(Circle(89.9,-130 d=9))\"),\n        \"//result/doc/*[@name='\" + fieldName + \"']//text()='\" + OUT + \"'\");\n  }\n\n","sourceOld":"  @Test\n  public void checkResultFormat() throws Exception {\n    //Check input and output format is the same\n    String IN = \"89.9,-130\";//lat,lon\n    String OUT = IN;//IDENTICAL!\n\n    assertU(adoc(\"id\", \"11\", fieldName, IN));\n    assertU(commit());\n\n    assertQ(req(\n        \"fl\", \"id,\" + fieldName, \"q\", \"*:*\", \"rows\", \"1000\",\n        \"fq\", \"{!field needScore=false f=\"+fieldName+\"}Intersects(Circle(89.9,-130 d=9))\"),\n        \"//result/doc/*[@name='\" + fieldName + \"']//text()='\" + OUT + \"'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolr4Spatial#checkResultFormat().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolr4Spatial#checkResultFormat().mjava","sourceNew":"  @Test\n  public void checkResultFormat() throws Exception {\n    //Check input and output format is the same\n    String IN = \"89.9,-130\";//lat,lon\n    String OUT = IN;//IDENTICAL!\n\n    assertU(adoc(\"id\", \"11\", fieldName, IN));\n    assertU(commit());\n\n    assertQ(req(\n        \"fl\", \"id,\" + fieldName, \"q\", \"*:*\", \"rows\", \"1000\",\n        \"fq\", \"{!field f=\"+fieldName+\"}Intersects(Circle(89.9,-130 d=9))\"),\n        \"//result/doc/*[@name='\" + fieldName + \"']//text()='\" + OUT + \"'\");\n  }\n\n","sourceOld":"  @Test\n  public void checkResultFormat() throws Exception {\n    //Check input and output format is the same\n    String IN = \"89.9,-130\";//lat,lon\n    String OUT = IN;//IDENTICAL!\n\n    assertU(adoc(\"id\", \"11\", fieldName, IN));\n    assertU(commit());\n\n    assertQ(req(\n        \"fl\", \"id,\" + fieldName, \"q\", \"*:*\", \"rows\", \"1000\",\n        \"fq\", \"{!field needScore=false f=\"+fieldName+\"}Intersects(Circle(89.9,-130 d=9))\"),\n        \"//result/doc/*[@name='\" + fieldName + \"']//text()='\" + OUT + \"'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bc65e9e84ac8f81b0861d2c7d8f56715adbf003","date":1390592414,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolr4Spatial#checkResultFormat().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolr4Spatial#checkResultFormat().mjava","sourceNew":"  @Test\n  public void checkResultFormat() throws Exception {\n    //Check input and output format is the same\n    String IN = \"89.9,-130\";//lat,lon\n    String OUT = IN;//IDENTICAL!\n\n    assertU(adoc(\"id\", \"11\", fieldName, IN));\n    assertU(commit());\n\n    assertQ(req(\n        \"fl\", \"id,\" + fieldName, \"q\", \"*:*\", \"rows\", \"1000\",\n        \"fq\", \"{!geofilt sfield=\"+fieldName+\" pt=\"+IN+\" d=9}\"),\n        \"//result/doc/*[@name='\" + fieldName + \"']//text()='\" + OUT + \"'\");\n  }\n\n","sourceOld":"  @Test\n  public void checkResultFormat() throws Exception {\n    //Check input and output format is the same\n    String IN = \"89.9,-130\";//lat,lon\n    String OUT = IN;//IDENTICAL!\n\n    assertU(adoc(\"id\", \"11\", fieldName, IN));\n    assertU(commit());\n\n    assertQ(req(\n        \"fl\", \"id,\" + fieldName, \"q\", \"*:*\", \"rows\", \"1000\",\n        \"fq\", \"{!field f=\"+fieldName+\"}Intersects(Circle(89.9,-130 d=9))\"),\n        \"//result/doc/*[@name='\" + fieldName + \"']//text()='\" + OUT + \"'\");\n  }\n\n","bugFix":null,"bugIntro":["17727014530f6432ae28e319a0242b6030d3f18a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"17727014530f6432ae28e319a0242b6030d3f18a","date":1416941348,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolr4Spatial#checkResultFormat().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolr4Spatial#checkResultFormat().mjava","sourceNew":"  @Test\n  public void checkResultFormat() throws Exception {\n    //Check input and output format is the same\n    String IN = \"89.9,-130\";//lat,lon\n    String OUT = IN;//IDENTICAL!\n\n    assertU(adoc(\"id\", \"11\", fieldName, IN));\n    assertU(commit());\n\n    assertQ(req(\n        \"fl\", \"id,\" + fieldName, \"q\", \"*:*\", \"rows\", \"1000\",\n        \"fq\", \"{!bbox sfield=\"+fieldName+\" pt=\"+IN+\" d=9}\"),\n        \"//result/doc/*[@name='\" + fieldName + \"']//text()='\" + OUT + \"'\");\n  }\n\n","sourceOld":"  @Test\n  public void checkResultFormat() throws Exception {\n    //Check input and output format is the same\n    String IN = \"89.9,-130\";//lat,lon\n    String OUT = IN;//IDENTICAL!\n\n    assertU(adoc(\"id\", \"11\", fieldName, IN));\n    assertU(commit());\n\n    assertQ(req(\n        \"fl\", \"id,\" + fieldName, \"q\", \"*:*\", \"rows\", \"1000\",\n        \"fq\", \"{!geofilt sfield=\"+fieldName+\" pt=\"+IN+\" d=9}\"),\n        \"//result/doc/*[@name='\" + fieldName + \"']//text()='\" + OUT + \"'\");\n  }\n\n","bugFix":["6bc65e9e84ac8f81b0861d2c7d8f56715adbf003"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"862fe0ddb727c373fe11596c809321056ffbc018","date":1421158638,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolr4Spatial#checkResultFormat().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolr4Spatial#checkResultFormat().mjava","sourceNew":"  @Test\n  public void checkResultFormat() throws Exception {\n    //Check input and output format is the same\n    String IN = \"89.9,-130\";//lat,lon\n    String OUT = IN;//IDENTICAL!\n\n    assertU(adoc(\"id\", \"11\", fieldName, IN));\n    assertU(commit());\n\n    assertQ(req(\n            \"fl\", \"id,\" + fieldName, \"q\", \"*:*\", \"rows\", \"1000\",\n            \"fq\", \"{!bbox sfield=\" + fieldName + \" pt=\" + IN + \" d=9}\"),\n        \"//result/doc/*[@name='\" + fieldName + \"']//text()='\" + OUT + \"'\");\n  }\n\n","sourceOld":"  @Test\n  public void checkResultFormat() throws Exception {\n    //Check input and output format is the same\n    String IN = \"89.9,-130\";//lat,lon\n    String OUT = IN;//IDENTICAL!\n\n    assertU(adoc(\"id\", \"11\", fieldName, IN));\n    assertU(commit());\n\n    assertQ(req(\n        \"fl\", \"id,\" + fieldName, \"q\", \"*:*\", \"rows\", \"1000\",\n        \"fq\", \"{!bbox sfield=\"+fieldName+\" pt=\"+IN+\" d=9}\"),\n        \"//result/doc/*[@name='\" + fieldName + \"']//text()='\" + OUT + \"'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["c11e1d33f2ba742976268153f6edd2d29710cf69","6bcb5c9814e87bce81ca6c0c80685c1754c4a1ac"],"17727014530f6432ae28e319a0242b6030d3f18a":["6bc65e9e84ac8f81b0861d2c7d8f56715adbf003"],"c11e1d33f2ba742976268153f6edd2d29710cf69":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6bc65e9e84ac8f81b0861d2c7d8f56715adbf003":["6bcb5c9814e87bce81ca6c0c80685c1754c4a1ac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"862fe0ddb727c373fe11596c809321056ffbc018":["17727014530f6432ae28e319a0242b6030d3f18a"],"6bcb5c9814e87bce81ca6c0c80685c1754c4a1ac":["c11e1d33f2ba742976268153f6edd2d29710cf69"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["862fe0ddb727c373fe11596c809321056ffbc018"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"17727014530f6432ae28e319a0242b6030d3f18a":["862fe0ddb727c373fe11596c809321056ffbc018"],"c11e1d33f2ba742976268153f6edd2d29710cf69":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","6bcb5c9814e87bce81ca6c0c80685c1754c4a1ac"],"6bc65e9e84ac8f81b0861d2c7d8f56715adbf003":["17727014530f6432ae28e319a0242b6030d3f18a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c11e1d33f2ba742976268153f6edd2d29710cf69"],"862fe0ddb727c373fe11596c809321056ffbc018":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6bcb5c9814e87bce81ca6c0c80685c1754c4a1ac":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","6bc65e9e84ac8f81b0861d2c7d8f56715adbf003"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}