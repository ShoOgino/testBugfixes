{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/StandardQueryTreeBuilder#StandardQueryTreeBuilder().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/StandardQueryTreeBuilder#StandardQueryTreeBuilder().mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/StandardQueryTreeBuilder#StandardQueryTreeBuilder().mjava","sourceNew":"  public StandardQueryTreeBuilder() {\n    setBuilder(GroupQueryNode.class, new GroupQueryNodeBuilder());\n    setBuilder(FieldQueryNode.class, new FieldQueryNodeBuilder());\n    setBuilder(BooleanQueryNode.class, new BooleanQueryNodeBuilder());\n    setBuilder(FuzzyQueryNode.class, new FuzzyQueryNodeBuilder());\n    setBuilder(NumericQueryNode.class, new DummyQueryNodeBuilder());\n    setBuilder(NumericRangeQueryNode.class, new NumericRangeQueryNodeBuilder());\n    setBuilder(BoostQueryNode.class, new BoostQueryNodeBuilder());\n    setBuilder(ModifierQueryNode.class, new ModifierQueryNodeBuilder());\n    setBuilder(WildcardQueryNode.class, new WildcardQueryNodeBuilder());\n    setBuilder(TokenizedPhraseQueryNode.class, new PhraseQueryNodeBuilder());\n    setBuilder(MatchNoDocsQueryNode.class, new MatchNoDocsQueryNodeBuilder());\n    setBuilder(PrefixWildcardQueryNode.class,\n        new PrefixWildcardQueryNodeBuilder());\n    setBuilder(TermRangeQueryNode.class, new TermRangeQueryNodeBuilder());\n    setBuilder(RegexpQueryNode.class, new RegexpQueryNodeBuilder());\n    setBuilder(SlopQueryNode.class, new SlopQueryNodeBuilder());\n    setBuilder(StandardBooleanQueryNode.class,\n        new StandardBooleanQueryNodeBuilder());\n    setBuilder(MultiPhraseQueryNode.class, new MultiPhraseQueryNodeBuilder());\n    setBuilder(MatchAllDocsQueryNode.class, new MatchAllDocsQueryNodeBuilder());\n    \n  }\n\n","sourceOld":"  public StandardQueryTreeBuilder() {\n    setBuilder(GroupQueryNode.class, new GroupQueryNodeBuilder());\n    setBuilder(FieldQueryNode.class, new FieldQueryNodeBuilder());\n    setBuilder(BooleanQueryNode.class, new BooleanQueryNodeBuilder());\n    setBuilder(FuzzyQueryNode.class, new FuzzyQueryNodeBuilder());\n    setBuilder(NumericQueryNode.class, new DummyQueryNodeBuilder());\n    setBuilder(NumericRangeQueryNode.class, new NumericRangeQueryNodeBuilder());\n    setBuilder(BoostQueryNode.class, new BoostQueryNodeBuilder());\n    setBuilder(ModifierQueryNode.class, new ModifierQueryNodeBuilder());\n    setBuilder(WildcardQueryNode.class, new WildcardQueryNodeBuilder());\n    setBuilder(TokenizedPhraseQueryNode.class, new PhraseQueryNodeBuilder());\n    setBuilder(MatchNoDocsQueryNode.class, new MatchNoDocsQueryNodeBuilder());\n    setBuilder(PrefixWildcardQueryNode.class,\n        new PrefixWildcardQueryNodeBuilder());\n    setBuilder(TermRangeQueryNode.class, new TermRangeQueryNodeBuilder());\n    setBuilder(RegexpQueryNode.class, new RegexpQueryNodeBuilder());\n    setBuilder(SlopQueryNode.class, new SlopQueryNodeBuilder());\n    setBuilder(StandardBooleanQueryNode.class,\n        new StandardBooleanQueryNodeBuilder());\n    setBuilder(MultiPhraseQueryNode.class, new MultiPhraseQueryNodeBuilder());\n    setBuilder(MatchAllDocsQueryNode.class, new MatchAllDocsQueryNodeBuilder());\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"683242c67a3f6086bae8b1354748fcaa38edfbd5","date":1457575601,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/StandardQueryTreeBuilder#StandardQueryTreeBuilder().mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/StandardQueryTreeBuilder#StandardQueryTreeBuilder().mjava","sourceNew":"  public StandardQueryTreeBuilder() {\n    setBuilder(GroupQueryNode.class, new GroupQueryNodeBuilder());\n    setBuilder(FieldQueryNode.class, new FieldQueryNodeBuilder());\n    setBuilder(BooleanQueryNode.class, new BooleanQueryNodeBuilder());\n    setBuilder(FuzzyQueryNode.class, new FuzzyQueryNodeBuilder());\n    setBuilder(LegacyNumericQueryNode.class, new DummyQueryNodeBuilder());\n    setBuilder(LegacyNumericRangeQueryNode.class, new LegacyNumericRangeQueryNodeBuilder());\n    setBuilder(PointQueryNode.class, new DummyQueryNodeBuilder());\n    setBuilder(PointRangeQueryNode.class, new PointRangeQueryNodeBuilder());\n    setBuilder(BoostQueryNode.class, new BoostQueryNodeBuilder());\n    setBuilder(ModifierQueryNode.class, new ModifierQueryNodeBuilder());\n    setBuilder(WildcardQueryNode.class, new WildcardQueryNodeBuilder());\n    setBuilder(TokenizedPhraseQueryNode.class, new PhraseQueryNodeBuilder());\n    setBuilder(MatchNoDocsQueryNode.class, new MatchNoDocsQueryNodeBuilder());\n    setBuilder(PrefixWildcardQueryNode.class,\n        new PrefixWildcardQueryNodeBuilder());\n    setBuilder(TermRangeQueryNode.class, new TermRangeQueryNodeBuilder());\n    setBuilder(RegexpQueryNode.class, new RegexpQueryNodeBuilder());\n    setBuilder(SlopQueryNode.class, new SlopQueryNodeBuilder());\n    setBuilder(StandardBooleanQueryNode.class,\n        new StandardBooleanQueryNodeBuilder());\n    setBuilder(MultiPhraseQueryNode.class, new MultiPhraseQueryNodeBuilder());\n    setBuilder(MatchAllDocsQueryNode.class, new MatchAllDocsQueryNodeBuilder());\n    \n  }\n\n","sourceOld":"  public StandardQueryTreeBuilder() {\n    setBuilder(GroupQueryNode.class, new GroupQueryNodeBuilder());\n    setBuilder(FieldQueryNode.class, new FieldQueryNodeBuilder());\n    setBuilder(BooleanQueryNode.class, new BooleanQueryNodeBuilder());\n    setBuilder(FuzzyQueryNode.class, new FuzzyQueryNodeBuilder());\n    setBuilder(NumericQueryNode.class, new DummyQueryNodeBuilder());\n    setBuilder(NumericRangeQueryNode.class, new NumericRangeQueryNodeBuilder());\n    setBuilder(BoostQueryNode.class, new BoostQueryNodeBuilder());\n    setBuilder(ModifierQueryNode.class, new ModifierQueryNodeBuilder());\n    setBuilder(WildcardQueryNode.class, new WildcardQueryNodeBuilder());\n    setBuilder(TokenizedPhraseQueryNode.class, new PhraseQueryNodeBuilder());\n    setBuilder(MatchNoDocsQueryNode.class, new MatchNoDocsQueryNodeBuilder());\n    setBuilder(PrefixWildcardQueryNode.class,\n        new PrefixWildcardQueryNodeBuilder());\n    setBuilder(TermRangeQueryNode.class, new TermRangeQueryNodeBuilder());\n    setBuilder(RegexpQueryNode.class, new RegexpQueryNodeBuilder());\n    setBuilder(SlopQueryNode.class, new SlopQueryNodeBuilder());\n    setBuilder(StandardBooleanQueryNode.class,\n        new StandardBooleanQueryNodeBuilder());\n    setBuilder(MultiPhraseQueryNode.class, new MultiPhraseQueryNodeBuilder());\n    setBuilder(MatchAllDocsQueryNode.class, new MatchAllDocsQueryNodeBuilder());\n    \n  }\n\n","bugFix":["a7e86426ca0513cfc495c3a2c0bb0c7abe03988d"],"bugIntro":["50b8410419cbbe9d8e1a96c918a951976bffe680"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c8a0e442f7b61f811680273b25da95994a724466","date":1467878549,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/StandardQueryTreeBuilder#StandardQueryTreeBuilder().mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/StandardQueryTreeBuilder#StandardQueryTreeBuilder().mjava","sourceNew":"  public StandardQueryTreeBuilder() {\n    setBuilder(GroupQueryNode.class, new GroupQueryNodeBuilder());\n    setBuilder(FieldQueryNode.class, new FieldQueryNodeBuilder());\n    setBuilder(BooleanQueryNode.class, new BooleanQueryNodeBuilder());\n    setBuilder(FuzzyQueryNode.class, new FuzzyQueryNodeBuilder());\n    setBuilder(LegacyNumericQueryNode.class, new DummyQueryNodeBuilder());\n    setBuilder(LegacyNumericRangeQueryNode.class, new LegacyNumericRangeQueryNodeBuilder());\n    setBuilder(PointQueryNode.class, new DummyQueryNodeBuilder());\n    setBuilder(PointRangeQueryNode.class, new PointRangeQueryNodeBuilder());\n    setBuilder(BoostQueryNode.class, new BoostQueryNodeBuilder());\n    setBuilder(ModifierQueryNode.class, new ModifierQueryNodeBuilder());\n    setBuilder(WildcardQueryNode.class, new WildcardQueryNodeBuilder());\n    setBuilder(TokenizedPhraseQueryNode.class, new PhraseQueryNodeBuilder());\n    setBuilder(MatchNoDocsQueryNode.class, new MatchNoDocsQueryNodeBuilder());\n    setBuilder(PrefixWildcardQueryNode.class,\n        new PrefixWildcardQueryNodeBuilder());\n    setBuilder(TermRangeQueryNode.class, new TermRangeQueryNodeBuilder());\n    setBuilder(RegexpQueryNode.class, new RegexpQueryNodeBuilder());\n    setBuilder(SlopQueryNode.class, new SlopQueryNodeBuilder());\n    setBuilder(SynonymQueryNode.class,\n        new SynonymQueryNodeBuilder());\n    setBuilder(MultiPhraseQueryNode.class, new MultiPhraseQueryNodeBuilder());\n    setBuilder(MatchAllDocsQueryNode.class, new MatchAllDocsQueryNodeBuilder());\n    \n  }\n\n","sourceOld":"  public StandardQueryTreeBuilder() {\n    setBuilder(GroupQueryNode.class, new GroupQueryNodeBuilder());\n    setBuilder(FieldQueryNode.class, new FieldQueryNodeBuilder());\n    setBuilder(BooleanQueryNode.class, new BooleanQueryNodeBuilder());\n    setBuilder(FuzzyQueryNode.class, new FuzzyQueryNodeBuilder());\n    setBuilder(LegacyNumericQueryNode.class, new DummyQueryNodeBuilder());\n    setBuilder(LegacyNumericRangeQueryNode.class, new LegacyNumericRangeQueryNodeBuilder());\n    setBuilder(PointQueryNode.class, new DummyQueryNodeBuilder());\n    setBuilder(PointRangeQueryNode.class, new PointRangeQueryNodeBuilder());\n    setBuilder(BoostQueryNode.class, new BoostQueryNodeBuilder());\n    setBuilder(ModifierQueryNode.class, new ModifierQueryNodeBuilder());\n    setBuilder(WildcardQueryNode.class, new WildcardQueryNodeBuilder());\n    setBuilder(TokenizedPhraseQueryNode.class, new PhraseQueryNodeBuilder());\n    setBuilder(MatchNoDocsQueryNode.class, new MatchNoDocsQueryNodeBuilder());\n    setBuilder(PrefixWildcardQueryNode.class,\n        new PrefixWildcardQueryNodeBuilder());\n    setBuilder(TermRangeQueryNode.class, new TermRangeQueryNodeBuilder());\n    setBuilder(RegexpQueryNode.class, new RegexpQueryNodeBuilder());\n    setBuilder(SlopQueryNode.class, new SlopQueryNodeBuilder());\n    setBuilder(StandardBooleanQueryNode.class,\n        new StandardBooleanQueryNodeBuilder());\n    setBuilder(MultiPhraseQueryNode.class, new MultiPhraseQueryNodeBuilder());\n    setBuilder(MatchAllDocsQueryNode.class, new MatchAllDocsQueryNodeBuilder());\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"50b8410419cbbe9d8e1a96c918a951976bffe680","date":1471869553,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/StandardQueryTreeBuilder#StandardQueryTreeBuilder().mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/StandardQueryTreeBuilder#StandardQueryTreeBuilder().mjava","sourceNew":"  public StandardQueryTreeBuilder() {\n    setBuilder(GroupQueryNode.class, new GroupQueryNodeBuilder());\n    setBuilder(FieldQueryNode.class, new FieldQueryNodeBuilder());\n    setBuilder(BooleanQueryNode.class, new BooleanQueryNodeBuilder());\n    setBuilder(FuzzyQueryNode.class, new FuzzyQueryNodeBuilder());\n    setBuilder(PointQueryNode.class, new DummyQueryNodeBuilder());\n    setBuilder(PointRangeQueryNode.class, new PointRangeQueryNodeBuilder());\n    setBuilder(BoostQueryNode.class, new BoostQueryNodeBuilder());\n    setBuilder(ModifierQueryNode.class, new ModifierQueryNodeBuilder());\n    setBuilder(WildcardQueryNode.class, new WildcardQueryNodeBuilder());\n    setBuilder(TokenizedPhraseQueryNode.class, new PhraseQueryNodeBuilder());\n    setBuilder(MatchNoDocsQueryNode.class, new MatchNoDocsQueryNodeBuilder());\n    setBuilder(PrefixWildcardQueryNode.class,\n        new PrefixWildcardQueryNodeBuilder());\n    setBuilder(TermRangeQueryNode.class, new TermRangeQueryNodeBuilder());\n    setBuilder(RegexpQueryNode.class, new RegexpQueryNodeBuilder());\n    setBuilder(SlopQueryNode.class, new SlopQueryNodeBuilder());\n    setBuilder(SynonymQueryNode.class,\n        new SynonymQueryNodeBuilder());\n    setBuilder(MultiPhraseQueryNode.class, new MultiPhraseQueryNodeBuilder());\n    setBuilder(MatchAllDocsQueryNode.class, new MatchAllDocsQueryNodeBuilder());\n    \n  }\n\n","sourceOld":"  public StandardQueryTreeBuilder() {\n    setBuilder(GroupQueryNode.class, new GroupQueryNodeBuilder());\n    setBuilder(FieldQueryNode.class, new FieldQueryNodeBuilder());\n    setBuilder(BooleanQueryNode.class, new BooleanQueryNodeBuilder());\n    setBuilder(FuzzyQueryNode.class, new FuzzyQueryNodeBuilder());\n    setBuilder(LegacyNumericQueryNode.class, new DummyQueryNodeBuilder());\n    setBuilder(LegacyNumericRangeQueryNode.class, new LegacyNumericRangeQueryNodeBuilder());\n    setBuilder(PointQueryNode.class, new DummyQueryNodeBuilder());\n    setBuilder(PointRangeQueryNode.class, new PointRangeQueryNodeBuilder());\n    setBuilder(BoostQueryNode.class, new BoostQueryNodeBuilder());\n    setBuilder(ModifierQueryNode.class, new ModifierQueryNodeBuilder());\n    setBuilder(WildcardQueryNode.class, new WildcardQueryNodeBuilder());\n    setBuilder(TokenizedPhraseQueryNode.class, new PhraseQueryNodeBuilder());\n    setBuilder(MatchNoDocsQueryNode.class, new MatchNoDocsQueryNodeBuilder());\n    setBuilder(PrefixWildcardQueryNode.class,\n        new PrefixWildcardQueryNodeBuilder());\n    setBuilder(TermRangeQueryNode.class, new TermRangeQueryNodeBuilder());\n    setBuilder(RegexpQueryNode.class, new RegexpQueryNodeBuilder());\n    setBuilder(SlopQueryNode.class, new SlopQueryNodeBuilder());\n    setBuilder(SynonymQueryNode.class,\n        new SynonymQueryNodeBuilder());\n    setBuilder(MultiPhraseQueryNode.class, new MultiPhraseQueryNodeBuilder());\n    setBuilder(MatchAllDocsQueryNode.class, new MatchAllDocsQueryNodeBuilder());\n    \n  }\n\n","bugFix":["683242c67a3f6086bae8b1354748fcaa38edfbd5"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c82557b0a8c9d4012f208e5de912ae7500ea351","date":1471888093,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/StandardQueryTreeBuilder#StandardQueryTreeBuilder().mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/StandardQueryTreeBuilder#StandardQueryTreeBuilder().mjava","sourceNew":"  public StandardQueryTreeBuilder() {\n    setBuilder(GroupQueryNode.class, new GroupQueryNodeBuilder());\n    setBuilder(FieldQueryNode.class, new FieldQueryNodeBuilder());\n    setBuilder(BooleanQueryNode.class, new BooleanQueryNodeBuilder());\n    setBuilder(FuzzyQueryNode.class, new FuzzyQueryNodeBuilder());\n    setBuilder(PointQueryNode.class, new DummyQueryNodeBuilder());\n    setBuilder(PointRangeQueryNode.class, new PointRangeQueryNodeBuilder());\n    setBuilder(BoostQueryNode.class, new BoostQueryNodeBuilder());\n    setBuilder(ModifierQueryNode.class, new ModifierQueryNodeBuilder());\n    setBuilder(WildcardQueryNode.class, new WildcardQueryNodeBuilder());\n    setBuilder(TokenizedPhraseQueryNode.class, new PhraseQueryNodeBuilder());\n    setBuilder(MatchNoDocsQueryNode.class, new MatchNoDocsQueryNodeBuilder());\n    setBuilder(PrefixWildcardQueryNode.class,\n        new PrefixWildcardQueryNodeBuilder());\n    setBuilder(TermRangeQueryNode.class, new TermRangeQueryNodeBuilder());\n    setBuilder(RegexpQueryNode.class, new RegexpQueryNodeBuilder());\n    setBuilder(SlopQueryNode.class, new SlopQueryNodeBuilder());\n    setBuilder(SynonymQueryNode.class,\n        new SynonymQueryNodeBuilder());\n    setBuilder(MultiPhraseQueryNode.class, new MultiPhraseQueryNodeBuilder());\n    setBuilder(MatchAllDocsQueryNode.class, new MatchAllDocsQueryNodeBuilder());\n    \n  }\n\n","sourceOld":"  public StandardQueryTreeBuilder() {\n    setBuilder(GroupQueryNode.class, new GroupQueryNodeBuilder());\n    setBuilder(FieldQueryNode.class, new FieldQueryNodeBuilder());\n    setBuilder(BooleanQueryNode.class, new BooleanQueryNodeBuilder());\n    setBuilder(FuzzyQueryNode.class, new FuzzyQueryNodeBuilder());\n    setBuilder(LegacyNumericQueryNode.class, new DummyQueryNodeBuilder());\n    setBuilder(LegacyNumericRangeQueryNode.class, new LegacyNumericRangeQueryNodeBuilder());\n    setBuilder(PointQueryNode.class, new DummyQueryNodeBuilder());\n    setBuilder(PointRangeQueryNode.class, new PointRangeQueryNodeBuilder());\n    setBuilder(BoostQueryNode.class, new BoostQueryNodeBuilder());\n    setBuilder(ModifierQueryNode.class, new ModifierQueryNodeBuilder());\n    setBuilder(WildcardQueryNode.class, new WildcardQueryNodeBuilder());\n    setBuilder(TokenizedPhraseQueryNode.class, new PhraseQueryNodeBuilder());\n    setBuilder(MatchNoDocsQueryNode.class, new MatchNoDocsQueryNodeBuilder());\n    setBuilder(PrefixWildcardQueryNode.class,\n        new PrefixWildcardQueryNodeBuilder());\n    setBuilder(TermRangeQueryNode.class, new TermRangeQueryNodeBuilder());\n    setBuilder(RegexpQueryNode.class, new RegexpQueryNodeBuilder());\n    setBuilder(SlopQueryNode.class, new SlopQueryNodeBuilder());\n    setBuilder(SynonymQueryNode.class,\n        new SynonymQueryNodeBuilder());\n    setBuilder(MultiPhraseQueryNode.class, new MultiPhraseQueryNodeBuilder());\n    setBuilder(MatchAllDocsQueryNode.class, new MatchAllDocsQueryNodeBuilder());\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a","date":1472163016,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/StandardQueryTreeBuilder#StandardQueryTreeBuilder().mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/StandardQueryTreeBuilder#StandardQueryTreeBuilder().mjava","sourceNew":"  public StandardQueryTreeBuilder() {\n    setBuilder(GroupQueryNode.class, new GroupQueryNodeBuilder());\n    setBuilder(FieldQueryNode.class, new FieldQueryNodeBuilder());\n    setBuilder(BooleanQueryNode.class, new BooleanQueryNodeBuilder());\n    setBuilder(FuzzyQueryNode.class, new FuzzyQueryNodeBuilder());\n    setBuilder(PointQueryNode.class, new DummyQueryNodeBuilder());\n    setBuilder(PointRangeQueryNode.class, new PointRangeQueryNodeBuilder());\n    setBuilder(BoostQueryNode.class, new BoostQueryNodeBuilder());\n    setBuilder(ModifierQueryNode.class, new ModifierQueryNodeBuilder());\n    setBuilder(WildcardQueryNode.class, new WildcardQueryNodeBuilder());\n    setBuilder(TokenizedPhraseQueryNode.class, new PhraseQueryNodeBuilder());\n    setBuilder(MatchNoDocsQueryNode.class, new MatchNoDocsQueryNodeBuilder());\n    setBuilder(PrefixWildcardQueryNode.class,\n        new PrefixWildcardQueryNodeBuilder());\n    setBuilder(TermRangeQueryNode.class, new TermRangeQueryNodeBuilder());\n    setBuilder(RegexpQueryNode.class, new RegexpQueryNodeBuilder());\n    setBuilder(SlopQueryNode.class, new SlopQueryNodeBuilder());\n    setBuilder(SynonymQueryNode.class,\n        new SynonymQueryNodeBuilder());\n    setBuilder(MultiPhraseQueryNode.class, new MultiPhraseQueryNodeBuilder());\n    setBuilder(MatchAllDocsQueryNode.class, new MatchAllDocsQueryNodeBuilder());\n    \n  }\n\n","sourceOld":"  public StandardQueryTreeBuilder() {\n    setBuilder(GroupQueryNode.class, new GroupQueryNodeBuilder());\n    setBuilder(FieldQueryNode.class, new FieldQueryNodeBuilder());\n    setBuilder(BooleanQueryNode.class, new BooleanQueryNodeBuilder());\n    setBuilder(FuzzyQueryNode.class, new FuzzyQueryNodeBuilder());\n    setBuilder(LegacyNumericQueryNode.class, new DummyQueryNodeBuilder());\n    setBuilder(LegacyNumericRangeQueryNode.class, new LegacyNumericRangeQueryNodeBuilder());\n    setBuilder(PointQueryNode.class, new DummyQueryNodeBuilder());\n    setBuilder(PointRangeQueryNode.class, new PointRangeQueryNodeBuilder());\n    setBuilder(BoostQueryNode.class, new BoostQueryNodeBuilder());\n    setBuilder(ModifierQueryNode.class, new ModifierQueryNodeBuilder());\n    setBuilder(WildcardQueryNode.class, new WildcardQueryNodeBuilder());\n    setBuilder(TokenizedPhraseQueryNode.class, new PhraseQueryNodeBuilder());\n    setBuilder(MatchNoDocsQueryNode.class, new MatchNoDocsQueryNodeBuilder());\n    setBuilder(PrefixWildcardQueryNode.class,\n        new PrefixWildcardQueryNodeBuilder());\n    setBuilder(TermRangeQueryNode.class, new TermRangeQueryNodeBuilder());\n    setBuilder(RegexpQueryNode.class, new RegexpQueryNodeBuilder());\n    setBuilder(SlopQueryNode.class, new SlopQueryNodeBuilder());\n    setBuilder(SynonymQueryNode.class,\n        new SynonymQueryNodeBuilder());\n    setBuilder(MultiPhraseQueryNode.class, new MultiPhraseQueryNodeBuilder());\n    setBuilder(MatchAllDocsQueryNode.class, new MatchAllDocsQueryNodeBuilder());\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/StandardQueryTreeBuilder#StandardQueryTreeBuilder().mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/StandardQueryTreeBuilder#StandardQueryTreeBuilder().mjava","sourceNew":"  public StandardQueryTreeBuilder() {\n    setBuilder(GroupQueryNode.class, new GroupQueryNodeBuilder());\n    setBuilder(FieldQueryNode.class, new FieldQueryNodeBuilder());\n    setBuilder(BooleanQueryNode.class, new BooleanQueryNodeBuilder());\n    setBuilder(FuzzyQueryNode.class, new FuzzyQueryNodeBuilder());\n    setBuilder(PointQueryNode.class, new DummyQueryNodeBuilder());\n    setBuilder(PointRangeQueryNode.class, new PointRangeQueryNodeBuilder());\n    setBuilder(BoostQueryNode.class, new BoostQueryNodeBuilder());\n    setBuilder(ModifierQueryNode.class, new ModifierQueryNodeBuilder());\n    setBuilder(WildcardQueryNode.class, new WildcardQueryNodeBuilder());\n    setBuilder(TokenizedPhraseQueryNode.class, new PhraseQueryNodeBuilder());\n    setBuilder(MatchNoDocsQueryNode.class, new MatchNoDocsQueryNodeBuilder());\n    setBuilder(PrefixWildcardQueryNode.class,\n        new PrefixWildcardQueryNodeBuilder());\n    setBuilder(TermRangeQueryNode.class, new TermRangeQueryNodeBuilder());\n    setBuilder(RegexpQueryNode.class, new RegexpQueryNodeBuilder());\n    setBuilder(SlopQueryNode.class, new SlopQueryNodeBuilder());\n    setBuilder(SynonymQueryNode.class,\n        new SynonymQueryNodeBuilder());\n    setBuilder(MultiPhraseQueryNode.class, new MultiPhraseQueryNodeBuilder());\n    setBuilder(MatchAllDocsQueryNode.class, new MatchAllDocsQueryNodeBuilder());\n    \n  }\n\n","sourceOld":"  public StandardQueryTreeBuilder() {\n    setBuilder(GroupQueryNode.class, new GroupQueryNodeBuilder());\n    setBuilder(FieldQueryNode.class, new FieldQueryNodeBuilder());\n    setBuilder(BooleanQueryNode.class, new BooleanQueryNodeBuilder());\n    setBuilder(FuzzyQueryNode.class, new FuzzyQueryNodeBuilder());\n    setBuilder(LegacyNumericQueryNode.class, new DummyQueryNodeBuilder());\n    setBuilder(LegacyNumericRangeQueryNode.class, new LegacyNumericRangeQueryNodeBuilder());\n    setBuilder(PointQueryNode.class, new DummyQueryNodeBuilder());\n    setBuilder(PointRangeQueryNode.class, new PointRangeQueryNodeBuilder());\n    setBuilder(BoostQueryNode.class, new BoostQueryNodeBuilder());\n    setBuilder(ModifierQueryNode.class, new ModifierQueryNodeBuilder());\n    setBuilder(WildcardQueryNode.class, new WildcardQueryNodeBuilder());\n    setBuilder(TokenizedPhraseQueryNode.class, new PhraseQueryNodeBuilder());\n    setBuilder(MatchNoDocsQueryNode.class, new MatchNoDocsQueryNodeBuilder());\n    setBuilder(PrefixWildcardQueryNode.class,\n        new PrefixWildcardQueryNodeBuilder());\n    setBuilder(TermRangeQueryNode.class, new TermRangeQueryNodeBuilder());\n    setBuilder(RegexpQueryNode.class, new RegexpQueryNodeBuilder());\n    setBuilder(SlopQueryNode.class, new SlopQueryNodeBuilder());\n    setBuilder(StandardBooleanQueryNode.class,\n        new StandardBooleanQueryNodeBuilder());\n    setBuilder(MultiPhraseQueryNode.class, new MultiPhraseQueryNodeBuilder());\n    setBuilder(MatchAllDocsQueryNode.class, new MatchAllDocsQueryNodeBuilder());\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"683242c67a3f6086bae8b1354748fcaa38edfbd5":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0c82557b0a8c9d4012f208e5de912ae7500ea351":["c8a0e442f7b61f811680273b25da95994a724466","50b8410419cbbe9d8e1a96c918a951976bffe680"],"50b8410419cbbe9d8e1a96c918a951976bffe680":["c8a0e442f7b61f811680273b25da95994a724466"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c8a0e442f7b61f811680273b25da95994a724466":["683242c67a3f6086bae8b1354748fcaa38edfbd5"],"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a":["c8a0e442f7b61f811680273b25da95994a724466","0c82557b0a8c9d4012f208e5de912ae7500ea351"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["683242c67a3f6086bae8b1354748fcaa38edfbd5","e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"]},"commit2Childs":{"683242c67a3f6086bae8b1354748fcaa38edfbd5":["c8a0e442f7b61f811680273b25da95994a724466","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["683242c67a3f6086bae8b1354748fcaa38edfbd5"],"0c82557b0a8c9d4012f208e5de912ae7500ea351":["e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"50b8410419cbbe9d8e1a96c918a951976bffe680":["0c82557b0a8c9d4012f208e5de912ae7500ea351"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"c8a0e442f7b61f811680273b25da95994a724466":["0c82557b0a8c9d4012f208e5de912ae7500ea351","50b8410419cbbe9d8e1a96c918a951976bffe680","e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}