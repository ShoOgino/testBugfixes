{"path":"src/test/org/apache/solr/common/util/TestHash#tstEquiv(int[],int).mjava","commits":[{"id":"80c633e661becbcb6deb6ea2ef4588d230102f50","date":1234308117,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/common/util/TestHash#tstEquiv(int[],int).mjava","pathOld":"/dev/null","sourceNew":"  // test that the hash of the UTF-16 encoded Java String is equal to the hash of the unicode code points\n  void tstEquiv(int[] utf32, int len) {\n    int seed=100;\n    StringBuilder sb = new StringBuilder();\n    for (int i=0; i<len; i++) sb.appendCodePoint(utf32[i]);\n    int hash = Hash.lookup3(utf32, 0, len, seed -(len<<2));\n    int hash2 = Hash.lookup3ycs(utf32, 0, len, seed);\n    assertEquals(hash, hash2);\n    int hash3 = Hash.lookup3ycs(sb, 0, sb.length(), seed);\n    assertEquals(hash, hash3);\n    long hash4 = Hash.lookup3ycs64(sb, 0, sb.length(), seed);\n    assertEquals((int)hash4, hash);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/common/util/TestHash#tstEquiv(int[],int).mjava","pathOld":"src/test/org/apache/solr/common/util/TestHash#tstEquiv(int[],int).mjava","sourceNew":"  // test that the hash of the UTF-16 encoded Java String is equal to the hash of the unicode code points\n  void tstEquiv(int[] utf32, int len) {\n    int seed=100;\n    StringBuilder sb = new StringBuilder();\n    for (int i=0; i<len; i++) sb.appendCodePoint(utf32[i]);\n    int hash = Hash.lookup3(utf32, 0, len, seed -(len<<2));\n    int hash2 = Hash.lookup3ycs(utf32, 0, len, seed);\n    assertEquals(hash, hash2);\n    int hash3 = Hash.lookup3ycs(sb, 0, sb.length(), seed);\n    assertEquals(hash, hash3);\n    long hash4 = Hash.lookup3ycs64(sb, 0, sb.length(), seed);\n    assertEquals((int)hash4, hash);\n  }\n\n","sourceOld":"  // test that the hash of the UTF-16 encoded Java String is equal to the hash of the unicode code points\n  void tstEquiv(int[] utf32, int len) {\n    int seed=100;\n    StringBuilder sb = new StringBuilder();\n    for (int i=0; i<len; i++) sb.appendCodePoint(utf32[i]);\n    int hash = Hash.lookup3(utf32, 0, len, seed -(len<<2));\n    int hash2 = Hash.lookup3ycs(utf32, 0, len, seed);\n    assertEquals(hash, hash2);\n    int hash3 = Hash.lookup3ycs(sb, 0, sb.length(), seed);\n    assertEquals(hash, hash3);\n    long hash4 = Hash.lookup3ycs64(sb, 0, sb.length(), seed);\n    assertEquals((int)hash4, hash);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["80c633e661becbcb6deb6ea2ef4588d230102f50"],"80c633e661becbcb6deb6ea2ef4588d230102f50":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["80c633e661becbcb6deb6ea2ef4588d230102f50"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"80c633e661becbcb6deb6ea2ef4588d230102f50":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}