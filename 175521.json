{"path":"lucene/src/java/org/apache/lucene/index/codecs/docvalues/DocValuesCodec#docsConsumer(PerDocWriteState).mjava","commits":[{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/docvalues/DocValuesCodec#docsConsumer(PerDocWriteState).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public PerDocConsumer docsConsumer(final PerDocWriteState state)\n      throws IOException {\n    return new PerDocConsumer() {\n\n      @Override\n      public void close() throws IOException {\n      }\n\n      @Override\n      public DocValuesConsumer addValuesField(FieldInfo field)\n          throws IOException {\n        final DocValuesConsumer consumer = Writer.create(field.getDocValues(),\n            docValuesId(state.segmentName, state.codecId, field.number),\n            // TODO can we have a compound file per segment and codec for\n            // docvalues?\n            state.directory, comparator, state.bytesUsed);\n        return consumer;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a063220be79775d7e3bc3b1ebd37c8961eb94f4e","date":1304346193,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/docvalues/DocValuesCodec#docsConsumer(PerDocWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/docvalues/DocValuesCodec#docsConsumer(PerDocWriteState).mjava","sourceNew":"  @Override\n  public PerDocConsumer docsConsumer(final PerDocWriteState state)\n      throws IOException {\n    return new PerDocConsumer() {\n      public void close() throws IOException {\n      }\n\n      @Override\n      public DocValuesConsumer addValuesField(FieldInfo field)\n          throws IOException {\n        final DocValuesConsumer consumer = Writer.create(field.getDocValues(),\n            docValuesId(state.segmentName, state.codecId, field.number),\n            // TODO can we have a compound file per segment and codec for\n            // docvalues?\n            state.directory, comparator, state.bytesUsed);\n        return consumer;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public PerDocConsumer docsConsumer(final PerDocWriteState state)\n      throws IOException {\n    return new PerDocConsumer() {\n\n      @Override\n      public void close() throws IOException {\n      }\n\n      @Override\n      public DocValuesConsumer addValuesField(FieldInfo field)\n          throws IOException {\n        final DocValuesConsumer consumer = Writer.create(field.getDocValues(),\n            docValuesId(state.segmentName, state.codecId, field.number),\n            // TODO can we have a compound file per segment and codec for\n            // docvalues?\n            state.directory, comparator, state.bytesUsed);\n        return consumer;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d47326e0c6ce589b6962777df409aad0550940fa","date":1304584540,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/docvalues/DocValuesCodec#docsConsumer(PerDocWriteState).mjava","sourceNew":null,"sourceOld":"  @Override\n  public PerDocConsumer docsConsumer(final PerDocWriteState state)\n      throws IOException {\n    return new PerDocConsumer() {\n      public void close() throws IOException {\n      }\n\n      @Override\n      public DocValuesConsumer addValuesField(FieldInfo field)\n          throws IOException {\n        final DocValuesConsumer consumer = Writer.create(field.getDocValues(),\n            docValuesId(state.segmentName, state.codecId, field.number),\n            // TODO can we have a compound file per segment and codec for\n            // docvalues?\n            state.directory, comparator, state.bytesUsed);\n        return consumer;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a063220be79775d7e3bc3b1ebd37c8961eb94f4e":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d47326e0c6ce589b6962777df409aad0550940fa":["a063220be79775d7e3bc3b1ebd37c8961eb94f4e"]},"commit2Childs":{"a063220be79775d7e3bc3b1ebd37c8961eb94f4e":["d47326e0c6ce589b6962777df409aad0550940fa"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["a063220be79775d7e3bc3b1ebd37c8961eb94f4e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["135621f3a0670a9394eb563224a3b76cc4dddc0f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"d47326e0c6ce589b6962777df409aad0550940fa":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","d47326e0c6ce589b6962777df409aad0550940fa"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}