{"path":"src/java/org/apache/lucene/index/DocumentsWriter#addDocument(Document,Analyzer).mjava","commits":[{"id":"4350b17bd363cd13a95171b8df1ca62ea4c3e71c","date":1183562198,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentsWriter#addDocument(Document,Analyzer).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns true if the caller (IndexWriter) should now\n   * flush. */\n  boolean addDocument(Document doc, Analyzer analyzer)\n    throws CorruptIndexException, IOException {\n\n    // This call is synchronized but fast\n    final ThreadState state = getThreadState(doc);\n    boolean success = false;\n    try {\n      // This call is not synchronized and does all the work\n      state.processDocument(analyzer);\n      // This call synchronized but fast\n      finishDocument(state);\n      success = true;\n    } finally {\n      if (!success) {\n        state.isIdle = true;\n        abort();\n      }\n    }\n    return state.doFlushAfter;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["fde68de507dbf344495d7b5e8052866fe5f254ab"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fde68de507dbf344495d7b5e8052866fe5f254ab","date":1189434831,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentsWriter#addDocument(Document,Analyzer).mjava","pathOld":"src/java/org/apache/lucene/index/DocumentsWriter#addDocument(Document,Analyzer).mjava","sourceNew":"  /** Returns true if the caller (IndexWriter) should now\n   * flush. */\n  boolean addDocument(Document doc, Analyzer analyzer)\n    throws CorruptIndexException, IOException {\n    return updateDocument(doc, analyzer, null);\n  }\n\n","sourceOld":"  /** Returns true if the caller (IndexWriter) should now\n   * flush. */\n  boolean addDocument(Document doc, Analyzer analyzer)\n    throws CorruptIndexException, IOException {\n\n    // This call is synchronized but fast\n    final ThreadState state = getThreadState(doc);\n    boolean success = false;\n    try {\n      // This call is not synchronized and does all the work\n      state.processDocument(analyzer);\n      // This call synchronized but fast\n      finishDocument(state);\n      success = true;\n    } finally {\n      if (!success) {\n        state.isIdle = true;\n        abort();\n      }\n    }\n    return state.doFlushAfter;\n  }\n\n","bugFix":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"741a5cca05cabe1e7482410a29e563a08379251a","date":1196676550,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentsWriter#addDocument(Document,Analyzer).mjava","pathOld":"src/java/org/apache/lucene/index/DocumentsWriter#addDocument(Document,Analyzer).mjava","sourceNew":"  /** Returns true if the caller (IndexWriter) should now\n   * flush. */\n  int addDocument(Document doc, Analyzer analyzer)\n    throws CorruptIndexException, IOException {\n    return updateDocument(doc, analyzer, null);\n  }\n\n","sourceOld":"  /** Returns true if the caller (IndexWriter) should now\n   * flush. */\n  boolean addDocument(Document doc, Analyzer analyzer)\n    throws CorruptIndexException, IOException {\n    return updateDocument(doc, analyzer, null);\n  }\n\n","bugFix":null,"bugIntro":["5a251aa47d1808cbae42c0e172d698c377430e60"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5a251aa47d1808cbae42c0e172d698c377430e60","date":1199375390,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentsWriter#addDocument(Document,Analyzer).mjava","pathOld":"src/java/org/apache/lucene/index/DocumentsWriter#addDocument(Document,Analyzer).mjava","sourceNew":"  /** Returns true if the caller (IndexWriter) should now\n   * flush. */\n  boolean addDocument(Document doc, Analyzer analyzer)\n    throws CorruptIndexException, IOException {\n    return updateDocument(doc, analyzer, null);\n  }\n\n","sourceOld":"  /** Returns true if the caller (IndexWriter) should now\n   * flush. */\n  int addDocument(Document doc, Analyzer analyzer)\n    throws CorruptIndexException, IOException {\n    return updateDocument(doc, analyzer, null);\n  }\n\n","bugFix":["741a5cca05cabe1e7482410a29e563a08379251a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#addDocument(Document,Analyzer).mjava","pathOld":"src/java/org/apache/lucene/index/DocumentsWriter#addDocument(Document,Analyzer).mjava","sourceNew":"  /** Returns true if the caller (IndexWriter) should now\n   * flush. */\n  boolean addDocument(Document doc, Analyzer analyzer)\n    throws CorruptIndexException, IOException {\n    return updateDocument(doc, analyzer, null);\n  }\n\n","sourceOld":"  /** Returns true if the caller (IndexWriter) should now\n   * flush. */\n  boolean addDocument(Document doc, Analyzer analyzer)\n    throws CorruptIndexException, IOException {\n    return updateDocument(doc, analyzer, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fde68de507dbf344495d7b5e8052866fe5f254ab":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5a251aa47d1808cbae42c0e172d698c377430e60":["741a5cca05cabe1e7482410a29e563a08379251a"],"741a5cca05cabe1e7482410a29e563a08379251a":["fde68de507dbf344495d7b5e8052866fe5f254ab"],"4350b17bd363cd13a95171b8df1ca62ea4c3e71c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["5a251aa47d1808cbae42c0e172d698c377430e60"]},"commit2Childs":{"fde68de507dbf344495d7b5e8052866fe5f254ab":["741a5cca05cabe1e7482410a29e563a08379251a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"5a251aa47d1808cbae42c0e172d698c377430e60":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"4350b17bd363cd13a95171b8df1ca62ea4c3e71c":["fde68de507dbf344495d7b5e8052866fe5f254ab"],"741a5cca05cabe1e7482410a29e563a08379251a":["5a251aa47d1808cbae42c0e172d698c377430e60"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}