{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesConsumer.SortedSetIterator#encodeValues(int).mjava","commits":[{"id":"f366ce28775e2b8ea4e06355009471328711666d","date":1360551293,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesConsumer.SortedSetIterator#encodeValues(int).mjava","pathOld":"/dev/null","sourceNew":"    // encodes count values to buffer\n    private void encodeValues(int count) throws IOException {\n      out.reset(buffer);\n      long lastOrd = 0;\n      for (int i = 0; i < count; i++) {\n        long ord = ords.next().longValue();\n        out.writeVLong(ord - lastOrd);\n        lastOrd = ord;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddbb72a33557d2b5bc22ee95daf3281c43560502","date":1361334582,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesConsumer.SortedSetIterator#encodeValues(int).mjava","pathOld":"/dev/null","sourceNew":"    // encodes count values to buffer\n    private void encodeValues(int count) throws IOException {\n      out.reset(buffer);\n      long lastOrd = 0;\n      for (int i = 0; i < count; i++) {\n        long ord = ords.next().longValue();\n        out.writeVLong(ord - lastOrd);\n        lastOrd = ord;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09a42395865f791464f0bd5f6118a4abbfa3eb8a","date":1376920143,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesConsumer.SortedSetIterator#encodeValues(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesConsumer.SortedSetIterator#encodeValues(int).mjava","sourceNew":"    // encodes count values to buffer\n    private void encodeValues(int count) throws IOException {\n      out.reset(buffer);\n      long lastOrd = 0;\n      for (int i = 0; i < count; i++) {\n        long ord = ords.next().longValue();\n        out.writeVLong(ord - lastOrd);\n        lastOrd = ord;\n      }\n    }\n\n","sourceOld":"    // encodes count values to buffer\n    private void encodeValues(int count) throws IOException {\n      out.reset(buffer);\n      long lastOrd = 0;\n      for (int i = 0; i < count; i++) {\n        long ord = ords.next().longValue();\n        out.writeVLong(ord - lastOrd);\n        lastOrd = ord;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","date":1377034255,"type":6,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesConsumer.SortedSetIterator#encodeValues(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesConsumer.SortedSetIterator#encodeValues(int).mjava","sourceNew":"    // encodes count values to buffer\n    private void encodeValues(int count) throws IOException {\n      out.reset(buffer);\n      long lastOrd = 0;\n      for (int i = 0; i < count; i++) {\n        long ord = ords.next().longValue();\n        out.writeVLong(ord - lastOrd);\n        lastOrd = ord;\n      }\n    }\n\n","sourceOld":"    // encodes count values to buffer\n    private void encodeValues(int count) throws IOException {\n      out.reset(buffer);\n      long lastOrd = 0;\n      for (int i = 0; i < count; i++) {\n        long ord = ords.next().longValue();\n        out.writeVLong(ord - lastOrd);\n        lastOrd = ord;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","date":1377034255,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesConsumer.SortedSetIterator#encodeValues(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesConsumer.SortedSetIterator#encodeValues(int).mjava","sourceNew":"    // encodes count values to buffer\n    private void encodeValues(int count) throws IOException {\n      out.reset(buffer);\n      long lastOrd = 0;\n      for (int i = 0; i < count; i++) {\n        long ord = ords.next().longValue();\n        out.writeVLong(ord - lastOrd);\n        lastOrd = ord;\n      }\n    }\n\n","sourceOld":"    // encodes count values to buffer\n    private void encodeValues(int count) throws IOException {\n      out.reset(buffer);\n      long lastOrd = 0;\n      for (int i = 0; i < count; i++) {\n        long ord = ords.next().longValue();\n        out.writeVLong(ord - lastOrd);\n        lastOrd = ord;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":6,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesConsumer.SortedSetIterator#encodeValues(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesConsumer.SortedSetIterator#encodeValues(int).mjava","sourceNew":"    // encodes count values to buffer\n    private void encodeValues(int count) throws IOException {\n      out.reset(buffer);\n      long lastOrd = 0;\n      for (int i = 0; i < count; i++) {\n        long ord = ords.next().longValue();\n        out.writeVLong(ord - lastOrd);\n        lastOrd = ord;\n      }\n    }\n\n","sourceOld":"    // encodes count values to buffer\n    private void encodeValues(int count) throws IOException {\n      out.reset(buffer);\n      long lastOrd = 0;\n      for (int i = 0; i < count; i++) {\n        long ord = ords.next().longValue();\n        out.writeVLong(ord - lastOrd);\n        lastOrd = ord;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":5,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesConsumer.SortedSetIterator#encodeValues(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesConsumer.SortedSetIterator#encodeValues(int).mjava","sourceNew":"    // encodes count values to buffer\n    private void encodeValues(int count) throws IOException {\n      out.reset(buffer);\n      long lastOrd = 0;\n      for (int i = 0; i < count; i++) {\n        long ord = ords.next().longValue();\n        out.writeVLong(ord - lastOrd);\n        lastOrd = ord;\n      }\n    }\n\n","sourceOld":"    // encodes count values to buffer\n    private void encodeValues(int count) throws IOException {\n      out.reset(buffer);\n      long lastOrd = 0;\n      for (int i = 0; i < count; i++) {\n        long ord = ords.next().longValue();\n        out.writeVLong(ord - lastOrd);\n        lastOrd = ord;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["ddbb72a33557d2b5bc22ee95daf3281c43560502","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f366ce28775e2b8ea4e06355009471328711666d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["ddbb72a33557d2b5bc22ee95daf3281c43560502","09a42395865f791464f0bd5f6118a4abbfa3eb8a"],"ddbb72a33557d2b5bc22ee95daf3281c43560502":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f366ce28775e2b8ea4e06355009471328711666d"],"09a42395865f791464f0bd5f6118a4abbfa3eb8a":["ddbb72a33557d2b5bc22ee95daf3281c43560502"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"]},"commit2Childs":{"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f366ce28775e2b8ea4e06355009471328711666d","ddbb72a33557d2b5bc22ee95daf3281c43560502"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f366ce28775e2b8ea4e06355009471328711666d":["ddbb72a33557d2b5bc22ee95daf3281c43560502"],"ddbb72a33557d2b5bc22ee95daf3281c43560502":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","09a42395865f791464f0bd5f6118a4abbfa3eb8a"],"09a42395865f791464f0bd5f6118a4abbfa3eb8a":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}