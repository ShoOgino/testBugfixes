{"path":"solr/core/src/java/org/apache/solr/handler/component/StatsComponent#finishStage(ResponseBuilder).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/StatsComponent#finishStage(ResponseBuilder).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/StatsComponent#finishStage(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (!rb.doStats || rb.stage != ResponseBuilder.STAGE_GET_FIELDS) return;\n    // wait until STAGE_GET_FIELDS\n    // so that \"result\" is already stored in the response (for aesthetics)\n\n    StatsInfo si = rb._statsInfo;\n\n    NamedList<NamedList<Object>> stats = new SimpleOrderedMap<NamedList<Object>>();\n    NamedList<Object> stats_fields = new SimpleOrderedMap<Object>();\n    stats.add(\"stats_fields\", stats_fields);\n    for (String field : si.statsFields.keySet()) {\n      NamedList stv = si.statsFields.get(field).getStatsValues();\n      if ((Long) stv.get(\"count\") != 0) {\n        stats_fields.add(field, stv);\n      } else {\n        stats_fields.add(field, null);\n      }\n    }\n\n    rb.rsp.add(\"stats\", stats);\n\n    rb._statsInfo = null;\n  }\n\n","sourceOld":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (!rb.doStats || rb.stage != ResponseBuilder.STAGE_GET_FIELDS) return;\n    // wait until STAGE_GET_FIELDS\n    // so that \"result\" is already stored in the response (for aesthetics)\n\n    StatsInfo si = rb._statsInfo;\n\n    NamedList<NamedList<Object>> stats = new SimpleOrderedMap<NamedList<Object>>();\n    NamedList<Object> stats_fields = new SimpleOrderedMap<Object>();\n    stats.add(\"stats_fields\", stats_fields);\n    for (String field : si.statsFields.keySet()) {\n      NamedList stv = si.statsFields.get(field).getStatsValues();\n      if ((Long) stv.get(\"count\") != 0) {\n        stats_fields.add(field, stv);\n      } else {\n        stats_fields.add(field, null);\n      }\n    }\n\n    rb.rsp.add(\"stats\", stats);\n\n    rb._statsInfo = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/StatsComponent#finishStage(ResponseBuilder).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/StatsComponent#finishStage(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (!rb.doStats || rb.stage != ResponseBuilder.STAGE_GET_FIELDS) return;\n    // wait until STAGE_GET_FIELDS\n    // so that \"result\" is already stored in the response (for aesthetics)\n\n    StatsInfo si = rb._statsInfo;\n\n    NamedList<NamedList<Object>> stats = new SimpleOrderedMap<NamedList<Object>>();\n    NamedList<Object> stats_fields = new SimpleOrderedMap<Object>();\n    stats.add(\"stats_fields\", stats_fields);\n    for (String field : si.statsFields.keySet()) {\n      NamedList stv = si.statsFields.get(field).getStatsValues();\n      if ((Long) stv.get(\"count\") != 0) {\n        stats_fields.add(field, stv);\n      } else {\n        stats_fields.add(field, null);\n      }\n    }\n\n    rb.rsp.add(\"stats\", stats);\n\n    rb._statsInfo = null;\n  }\n\n","sourceOld":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (!rb.doStats || rb.stage != ResponseBuilder.STAGE_GET_FIELDS) return;\n    // wait until STAGE_GET_FIELDS\n    // so that \"result\" is already stored in the response (for aesthetics)\n\n    StatsInfo si = rb._statsInfo;\n\n    NamedList<NamedList<Object>> stats = new SimpleOrderedMap<NamedList<Object>>();\n    NamedList<Object> stats_fields = new SimpleOrderedMap<Object>();\n    stats.add(\"stats_fields\", stats_fields);\n    for (String field : si.statsFields.keySet()) {\n      NamedList stv = si.statsFields.get(field).getStatsValues();\n      if ((Long) stv.get(\"count\") != 0) {\n        stats_fields.add(field, stv);\n      } else {\n        stats_fields.add(field, null);\n      }\n    }\n\n    rb.rsp.add(\"stats\", stats);\n\n    rb._statsInfo = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/StatsComponent#finishStage(ResponseBuilder).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/StatsComponent#finishStage(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (!rb.doStats || rb.stage != ResponseBuilder.STAGE_GET_FIELDS) return;\n    // wait until STAGE_GET_FIELDS\n    // so that \"result\" is already stored in the response (for aesthetics)\n\n    StatsInfo si = rb._statsInfo;\n\n    NamedList<NamedList<Object>> stats = new SimpleOrderedMap<NamedList<Object>>();\n    NamedList<Object> stats_fields = new SimpleOrderedMap<Object>();\n    stats.add(\"stats_fields\", stats_fields);\n    for (String field : si.statsFields.keySet()) {\n      NamedList stv = si.statsFields.get(field).getStatsValues();\n      if ((Long) stv.get(\"count\") != 0) {\n        stats_fields.add(field, stv);\n      } else {\n        stats_fields.add(field, null);\n      }\n    }\n\n    rb.rsp.add(\"stats\", stats);\n\n    rb._statsInfo = null;\n  }\n\n","sourceOld":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (!rb.doStats || rb.stage != ResponseBuilder.STAGE_GET_FIELDS) return;\n    // wait until STAGE_GET_FIELDS\n    // so that \"result\" is already stored in the response (for aesthetics)\n\n    StatsInfo si = rb._statsInfo;\n\n    NamedList<NamedList<Object>> stats = new SimpleOrderedMap<NamedList<Object>>();\n    NamedList<Object> stats_fields = new SimpleOrderedMap<Object>();\n    stats.add(\"stats_fields\", stats_fields);\n    for (String field : si.statsFields.keySet()) {\n      NamedList stv = si.statsFields.get(field).getStatsValues();\n      if ((Long) stv.get(\"count\") != 0) {\n        stats_fields.add(field, stv);\n      } else {\n        stats_fields.add(field, null);\n      }\n    }\n\n    rb.rsp.add(\"stats\", stats);\n\n    rb._statsInfo = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/StatsComponent#finishStage(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/StatsComponent#finishStage(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (!rb.doStats || rb.stage != ResponseBuilder.STAGE_GET_FIELDS) return;\n    // wait until STAGE_GET_FIELDS\n    // so that \"result\" is already stored in the response (for aesthetics)\n\n    StatsInfo si = rb._statsInfo;\n\n    NamedList<NamedList<Object>> stats = new SimpleOrderedMap<>();\n    NamedList<Object> stats_fields = new SimpleOrderedMap<>();\n    stats.add(\"stats_fields\", stats_fields);\n    for (String field : si.statsFields.keySet()) {\n      NamedList stv = si.statsFields.get(field).getStatsValues();\n      if ((Long) stv.get(\"count\") != 0) {\n        stats_fields.add(field, stv);\n      } else {\n        stats_fields.add(field, null);\n      }\n    }\n\n    rb.rsp.add(\"stats\", stats);\n\n    rb._statsInfo = null;\n  }\n\n","sourceOld":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (!rb.doStats || rb.stage != ResponseBuilder.STAGE_GET_FIELDS) return;\n    // wait until STAGE_GET_FIELDS\n    // so that \"result\" is already stored in the response (for aesthetics)\n\n    StatsInfo si = rb._statsInfo;\n\n    NamedList<NamedList<Object>> stats = new SimpleOrderedMap<NamedList<Object>>();\n    NamedList<Object> stats_fields = new SimpleOrderedMap<Object>();\n    stats.add(\"stats_fields\", stats_fields);\n    for (String field : si.statsFields.keySet()) {\n      NamedList stv = si.statsFields.get(field).getStatsValues();\n      if ((Long) stv.get(\"count\") != 0) {\n        stats_fields.add(field, stv);\n      } else {\n        stats_fields.add(field, null);\n      }\n    }\n\n    rb.rsp.add(\"stats\", stats);\n\n    rb._statsInfo = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"610c97b96420e614c67797fd43822ebc1d4b7ee2","date":1410814832,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/StatsComponent#finishStage(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/StatsComponent#finishStage(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (!rb.doStats || rb.stage != ResponseBuilder.STAGE_GET_FIELDS) return;\n    // wait until STAGE_GET_FIELDS\n    // so that \"result\" is already stored in the response (for aesthetics)\n\n    Map<String, StatsValues> allStatsValues = rb._statsInfo.getAggregateStatsValues();\n\n    NamedList<NamedList<Object>> stats = new SimpleOrderedMap<>();\n    NamedList<Object> stats_fields = new SimpleOrderedMap<>();\n    stats.add(\"stats_fields\", stats_fields);\n    \n    for (Map.Entry<String,StatsValues> entry : allStatsValues.entrySet()) {\n      String key = entry.getKey();\n      NamedList stv = entry.getValue().getStatsValues();\n      if ((Long) stv.get(\"count\") != 0) {\n        stats_fields.add(key, stv);\n      } else {\n        stats_fields.add(key, null);\n      }\n    }\n\n    rb.rsp.add(\"stats\", stats);\n    rb._statsInfo = null; // free some objects \n  }\n\n","sourceOld":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (!rb.doStats || rb.stage != ResponseBuilder.STAGE_GET_FIELDS) return;\n    // wait until STAGE_GET_FIELDS\n    // so that \"result\" is already stored in the response (for aesthetics)\n\n    StatsInfo si = rb._statsInfo;\n\n    NamedList<NamedList<Object>> stats = new SimpleOrderedMap<>();\n    NamedList<Object> stats_fields = new SimpleOrderedMap<>();\n    stats.add(\"stats_fields\", stats_fields);\n    for (String field : si.statsFields.keySet()) {\n      NamedList stv = si.statsFields.get(field).getStatsValues();\n      if ((Long) stv.get(\"count\") != 0) {\n        stats_fields.add(field, stv);\n      } else {\n        stats_fields.add(field, null);\n      }\n    }\n\n    rb.rsp.add(\"stats\", stats);\n\n    rb._statsInfo = null;\n  }\n\n","bugFix":["758a0ba5e213f4d1fc89087ae6e4678f7879e450","c1c2dfb6aa7b4d342a493c0982be96b76f595add"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c18a95e9168a30be855f5d5e7d61a863186fdc5","date":1415142581,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/StatsComponent#finishStage(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/StatsComponent#finishStage(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (!rb.doStats || rb.stage != ResponseBuilder.STAGE_GET_FIELDS) return;\n    // wait until STAGE_GET_FIELDS\n    // so that \"result\" is already stored in the response (for aesthetics)\n\n    Map<String, StatsValues> allStatsValues = rb._statsInfo.getAggregateStatsValues();\n    rb.rsp.add(\"stats\", convertToResponse(false, allStatsValues));\n\n    rb._statsInfo = null; // free some objects \n  }\n\n","sourceOld":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (!rb.doStats || rb.stage != ResponseBuilder.STAGE_GET_FIELDS) return;\n    // wait until STAGE_GET_FIELDS\n    // so that \"result\" is already stored in the response (for aesthetics)\n\n    Map<String, StatsValues> allStatsValues = rb._statsInfo.getAggregateStatsValues();\n\n    NamedList<NamedList<Object>> stats = new SimpleOrderedMap<>();\n    NamedList<Object> stats_fields = new SimpleOrderedMap<>();\n    stats.add(\"stats_fields\", stats_fields);\n    \n    for (Map.Entry<String,StatsValues> entry : allStatsValues.entrySet()) {\n      String key = entry.getKey();\n      NamedList stv = entry.getValue().getStatsValues();\n      if ((Long) stv.get(\"count\") != 0) {\n        stats_fields.add(key, stv);\n      } else {\n        stats_fields.add(key, null);\n      }\n    }\n\n    rb.rsp.add(\"stats\", stats);\n    rb._statsInfo = null; // free some objects \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d12bbc45d641864ffe03291bc30f178eb34e434c","date":1426001646,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/StatsComponent#finishStage(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/StatsComponent#finishStage(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (!rb.doStats || rb.stage != ResponseBuilder.STAGE_GET_FIELDS) return;\n    // wait until STAGE_GET_FIELDS\n    // so that \"result\" is already stored in the response (for aesthetics)\n\n    Map<String, StatsValues> allStatsValues = rb._statsInfo.getAggregateStatsValues();\n    rb.rsp.add(\"stats\", convertToResponse(allStatsValues));\n\n    rb._statsInfo = null; // free some objects \n  }\n\n","sourceOld":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (!rb.doStats || rb.stage != ResponseBuilder.STAGE_GET_FIELDS) return;\n    // wait until STAGE_GET_FIELDS\n    // so that \"result\" is already stored in the response (for aesthetics)\n\n    Map<String, StatsValues> allStatsValues = rb._statsInfo.getAggregateStatsValues();\n    rb.rsp.add(\"stats\", convertToResponse(false, allStatsValues));\n\n    rb._statsInfo = null; // free some objects \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/StatsComponent#finishStage(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/StatsComponent#finishStage(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (!rb.doStats || rb.stage != ResponseBuilder.STAGE_GET_FIELDS) return;\n    // wait until STAGE_GET_FIELDS\n    // so that \"result\" is already stored in the response (for aesthetics)\n\n    Map<String, StatsValues> allStatsValues = rb._statsInfo.getAggregateStatsValues();\n    rb.rsp.add(\"stats\", convertToResponse(allStatsValues));\n\n    rb._statsInfo = null; // free some objects \n  }\n\n","sourceOld":"  @Override\n  public void finishStage(ResponseBuilder rb) {\n    if (!rb.doStats || rb.stage != ResponseBuilder.STAGE_GET_FIELDS) return;\n    // wait until STAGE_GET_FIELDS\n    // so that \"result\" is already stored in the response (for aesthetics)\n\n    Map<String, StatsValues> allStatsValues = rb._statsInfo.getAggregateStatsValues();\n    rb.rsp.add(\"stats\", convertToResponse(false, allStatsValues));\n\n    rb._statsInfo = null; // free some objects \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["c26f00b574427b55127e869b935845554afde1fa"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["4c18a95e9168a30be855f5d5e7d61a863186fdc5","d12bbc45d641864ffe03291bc30f178eb34e434c"],"610c97b96420e614c67797fd43822ebc1d4b7ee2":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4c18a95e9168a30be855f5d5e7d61a863186fdc5":["610c97b96420e614c67797fd43822ebc1d4b7ee2"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d12bbc45d641864ffe03291bc30f178eb34e434c":["4c18a95e9168a30be855f5d5e7d61a863186fdc5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d12bbc45d641864ffe03291bc30f178eb34e434c"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["610c97b96420e614c67797fd43822ebc1d4b7ee2"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"610c97b96420e614c67797fd43822ebc1d4b7ee2":["4c18a95e9168a30be855f5d5e7d61a863186fdc5"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"4c18a95e9168a30be855f5d5e7d61a863186fdc5":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","d12bbc45d641864ffe03291bc30f178eb34e434c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"d12bbc45d641864ffe03291bc30f178eb34e434c":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}