{"path":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doOnAbort(ThreadState).mjava","commits":[{"id":"d2ed1b9b7b46829fe3199afe9a8bc203f201b175","date":1301491807,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doOnAbort(ThreadState).mjava","pathOld":"/dev/null","sourceNew":"  synchronized void doOnAbort(ThreadState state) {\n    if (state.flushPending) {\n      flushBytes -= state.perThreadBytes;\n    } else {\n      activeBytes -= state.perThreadBytes;\n    }\n    // take it out of the loop this DWPT is stale\n    perThreadPool.replaceForFlush(state, closed);\n    healthiness.updateStalled(this);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["32f306edd62f81390a6e263e8b913f089f3e98a1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f6f4cae61e16730201371ab7e9912721c19324e7","date":1303199575,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doOnAbort(ThreadState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doOnAbort(ThreadState).mjava","sourceNew":"  synchronized void doOnAbort(ThreadState state) {\n    if (state.flushPending) {\n      flushBytes -= state.bytesUsed;\n    } else {\n      activeBytes -= state.bytesUsed;\n    }\n    // Take it out of the loop this DWPT is stale\n    perThreadPool.replaceForFlush(state, closed);\n    healthiness.updateStalled(this);\n  }\n\n","sourceOld":"  synchronized void doOnAbort(ThreadState state) {\n    if (state.flushPending) {\n      flushBytes -= state.perThreadBytes;\n    } else {\n      activeBytes -= state.perThreadBytes;\n    }\n    // take it out of the loop this DWPT is stale\n    perThreadPool.replaceForFlush(state, closed);\n    healthiness.updateStalled(this);\n  }\n\n","bugFix":null,"bugIntro":["32f306edd62f81390a6e263e8b913f089f3e98a1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b3e06be49006ecac364d39d12b9c9f74882f9b9f","date":1304289513,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doOnAbort(ThreadState).mjava","pathOld":"/dev/null","sourceNew":"  synchronized void doOnAbort(ThreadState state) {\n    if (state.flushPending) {\n      flushBytes -= state.bytesUsed;\n    } else {\n      activeBytes -= state.bytesUsed;\n    }\n    // Take it out of the loop this DWPT is stale\n    perThreadPool.replaceForFlush(state, closed);\n    healthiness.updateStalled(this);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doOnAbort(ThreadState).mjava","pathOld":"/dev/null","sourceNew":"  synchronized void doOnAbort(ThreadState state) {\n    if (state.flushPending) {\n      flushBytes -= state.bytesUsed;\n    } else {\n      activeBytes -= state.bytesUsed;\n    }\n    // Take it out of the loop this DWPT is stale\n    perThreadPool.replaceForFlush(state, closed);\n    healthiness.updateStalled(this);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"32f306edd62f81390a6e263e8b913f089f3e98a1","date":1305615519,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doOnAbort(ThreadState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doOnAbort(ThreadState).mjava","sourceNew":"  synchronized void doOnAbort(ThreadState state) {\n    try {\n      if (state.flushPending) {\n        flushBytes -= state.bytesUsed;\n      } else {\n        activeBytes -= state.bytesUsed;\n      }\n      assert assertMemory();\n      // Take it out of the loop this DWPT is stale\n      perThreadPool.replaceForFlush(state, closed);\n    }finally {\n      stallControl.updateStalled(this);\n    }\n  }\n\n","sourceOld":"  synchronized void doOnAbort(ThreadState state) {\n    if (state.flushPending) {\n      flushBytes -= state.bytesUsed;\n    } else {\n      activeBytes -= state.bytesUsed;\n    }\n    // Take it out of the loop this DWPT is stale\n    perThreadPool.replaceForFlush(state, closed);\n    healthiness.updateStalled(this);\n  }\n\n","bugFix":["f6f4cae61e16730201371ab7e9912721c19324e7","d2ed1b9b7b46829fe3199afe9a8bc203f201b175"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doOnAbort(ThreadState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doOnAbort(ThreadState).mjava","sourceNew":"  synchronized void doOnAbort(ThreadState state) {\n    try {\n      if (state.flushPending) {\n        flushBytes -= state.bytesUsed;\n      } else {\n        activeBytes -= state.bytesUsed;\n      }\n      assert assertMemory();\n      // Take it out of the loop this DWPT is stale\n      perThreadPool.replaceForFlush(state, closed);\n    }finally {\n      stallControl.updateStalled(this);\n    }\n  }\n\n","sourceOld":"  synchronized void doOnAbort(ThreadState state) {\n    if (state.flushPending) {\n      flushBytes -= state.bytesUsed;\n    } else {\n      activeBytes -= state.bytesUsed;\n    }\n    // Take it out of the loop this DWPT is stale\n    perThreadPool.replaceForFlush(state, closed);\n    healthiness.updateStalled(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doOnAbort(ThreadState).mjava","pathOld":"/dev/null","sourceNew":"  synchronized void doOnAbort(ThreadState state) {\n    try {\n      if (state.flushPending) {\n        flushBytes -= state.bytesUsed;\n      } else {\n        activeBytes -= state.bytesUsed;\n      }\n      assert assertMemory();\n      // Take it out of the loop this DWPT is stale\n      perThreadPool.replaceForFlush(state, closed);\n    }finally {\n      stallControl.updateStalled(this);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c6dc1a64ac36088ccb8d5e20b74c48c8d3bba27","date":1306166545,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doOnAbort(ThreadState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doOnAbort(ThreadState).mjava","sourceNew":"  synchronized void doOnAbort(ThreadState state) {\n    try {\n      if (state.flushPending) {\n        flushBytes -= state.bytesUsed;\n      } else {\n        activeBytes -= state.bytesUsed;\n      }\n      assert assertMemory();\n      // Take it out of the loop this DWPT is stale\n      perThreadPool.replaceForFlush(state, closed);\n    } finally {\n      stallControl.updateStalled(this);\n    }\n  }\n\n","sourceOld":"  synchronized void doOnAbort(ThreadState state) {\n    try {\n      if (state.flushPending) {\n        flushBytes -= state.bytesUsed;\n      } else {\n        activeBytes -= state.bytesUsed;\n      }\n      assert assertMemory();\n      // Take it out of the loop this DWPT is stale\n      perThreadPool.replaceForFlush(state, closed);\n    }finally {\n      stallControl.updateStalled(this);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doOnAbort(ThreadState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doOnAbort(ThreadState).mjava","sourceNew":"  synchronized void doOnAbort(ThreadState state) {\n    try {\n      if (state.flushPending) {\n        flushBytes -= state.bytesUsed;\n      } else {\n        activeBytes -= state.bytesUsed;\n      }\n      assert assertMemory();\n      // Take it out of the loop this DWPT is stale\n      perThreadPool.replaceForFlush(state, closed);\n    } finally {\n      stallControl.updateStalled(this);\n    }\n  }\n\n","sourceOld":"  synchronized void doOnAbort(ThreadState state) {\n    try {\n      if (state.flushPending) {\n        flushBytes -= state.bytesUsed;\n      } else {\n        activeBytes -= state.bytesUsed;\n      }\n      assert assertMemory();\n      // Take it out of the loop this DWPT is stale\n      perThreadPool.replaceForFlush(state, closed);\n    }finally {\n      stallControl.updateStalled(this);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doOnAbort(ThreadState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doOnAbort(ThreadState).mjava","sourceNew":"  synchronized void doOnAbort(ThreadState state) {\n    try {\n      if (state.flushPending) {\n        flushBytes -= state.bytesUsed;\n      } else {\n        activeBytes -= state.bytesUsed;\n      }\n      assert assertMemory();\n      // Take it out of the loop this DWPT is stale\n      perThreadPool.replaceForFlush(state, closed);\n    } finally {\n      stallControl.updateStalled(this);\n    }\n  }\n\n","sourceOld":"  synchronized void doOnAbort(ThreadState state) {\n    try {\n      if (state.flushPending) {\n        flushBytes -= state.bytesUsed;\n      } else {\n        activeBytes -= state.bytesUsed;\n      }\n      assert assertMemory();\n      // Take it out of the loop this DWPT is stale\n      perThreadPool.replaceForFlush(state, closed);\n    }finally {\n      stallControl.updateStalled(this);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doOnAbort(ThreadState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doOnAbort(ThreadState).mjava","sourceNew":"  synchronized void doOnAbort(ThreadState state) {\n    try {\n      if (state.flushPending) {\n        flushBytes -= state.bytesUsed;\n      } else {\n        activeBytes -= state.bytesUsed;\n      }\n      assert assertMemory();\n      // Take it out of the loop this DWPT is stale\n      perThreadPool.replaceForFlush(state, closed);\n    } finally {\n      stallControl.updateStalled(this);\n    }\n  }\n\n","sourceOld":"  synchronized void doOnAbort(ThreadState state) {\n    try {\n      if (state.flushPending) {\n        flushBytes -= state.bytesUsed;\n      } else {\n        activeBytes -= state.bytesUsed;\n      }\n      assert assertMemory();\n      // Take it out of the loop this DWPT is stale\n      perThreadPool.replaceForFlush(state, closed);\n    } finally {\n      stallControl.updateStalled(this);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["2c6dc1a64ac36088ccb8d5e20b74c48c8d3bba27"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f6f4cae61e16730201371ab7e9912721c19324e7"],"f6f4cae61e16730201371ab7e9912721c19324e7":["d2ed1b9b7b46829fe3199afe9a8bc203f201b175"],"d2ed1b9b7b46829fe3199afe9a8bc203f201b175":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2c6dc1a64ac36088ccb8d5e20b74c48c8d3bba27":["32f306edd62f81390a6e263e8b913f089f3e98a1"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["135621f3a0670a9394eb563224a3b76cc4dddc0f","32f306edd62f81390a6e263e8b913f089f3e98a1"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a3776dccca01c11e7046323cfad46a3b4a471233","2c6dc1a64ac36088ccb8d5e20b74c48c8d3bba27"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","32f306edd62f81390a6e263e8b913f089f3e98a1"],"32f306edd62f81390a6e263e8b913f089f3e98a1":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["c3a8a449466c1ff7ce2274fe73dab487256964b4","2c6dc1a64ac36088ccb8d5e20b74c48c8d3bba27"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["c3a8a449466c1ff7ce2274fe73dab487256964b4"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["135621f3a0670a9394eb563224a3b76cc4dddc0f","32f306edd62f81390a6e263e8b913f089f3e98a1"],"f6f4cae61e16730201371ab7e9912721c19324e7":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"d2ed1b9b7b46829fe3199afe9a8bc203f201b175":["f6f4cae61e16730201371ab7e9912721c19324e7"],"2c6dc1a64ac36088ccb8d5e20b74c48c8d3bba27":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a3776dccca01c11e7046323cfad46a3b4a471233":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["135621f3a0670a9394eb563224a3b76cc4dddc0f","b3e06be49006ecac364d39d12b9c9f74882f9b9f","d2ed1b9b7b46829fe3199afe9a8bc203f201b175","a3776dccca01c11e7046323cfad46a3b4a471233"],"32f306edd62f81390a6e263e8b913f089f3e98a1":["2c6dc1a64ac36088ccb8d5e20b74c48c8d3bba27","c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}