{"path":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardTermsDictWriter#close().mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardTermsDictWriter#close().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void close() throws IOException {\n\n    try {\n      final int fieldCount = fields.size();\n\n      final long dirStart = out.getFilePointer();\n\n      out.writeInt(fieldCount);\n      for(int i=0;i<fieldCount;i++) {\n        TermsWriter field = (TermsWriter) fields.get(i);\n        out.writeInt(field.fieldInfo.number);\n        out.writeLong(field.numTerms);\n        out.writeLong(field.termsStartPointer);\n      }\n      out.seek(CodecUtil.headerLength(CODEC_NAME));\n      out.writeLong(dirStart);\n    } finally {\n      try {\n        out.close();\n      } finally {\n        try {\n          postingsWriter.close();\n        } finally {\n          indexWriter.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f3aaa3a04692b61e4c5b0f329d461e3e7e041188","date":1277217310,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardTermsDictWriter#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardTermsDictWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n\n    try {\n      final int fieldCount = fields.size();\n\n      final long dirStart = out.getFilePointer();\n\n      out.writeInt(fieldCount);\n      for(int i=0;i<fieldCount;i++) {\n        TermsWriter field = (TermsWriter) fields.get(i);\n        out.writeInt(field.fieldInfo.number);\n        out.writeLong(field.numTerms);\n        out.writeLong(field.termsStartPointer);\n      }\n      out.seek(CodecUtil.headerLength(CODEC_NAME));\n      out.writeLong(dirStart);\n    } finally {\n      try {\n        out.close();\n      } finally {\n        try {\n          postingsWriter.close();\n        } finally {\n          termsIndexWriter.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n\n    try {\n      final int fieldCount = fields.size();\n\n      final long dirStart = out.getFilePointer();\n\n      out.writeInt(fieldCount);\n      for(int i=0;i<fieldCount;i++) {\n        TermsWriter field = (TermsWriter) fields.get(i);\n        out.writeInt(field.fieldInfo.number);\n        out.writeLong(field.numTerms);\n        out.writeLong(field.termsStartPointer);\n      }\n      out.seek(CodecUtil.headerLength(CODEC_NAME));\n      out.writeLong(dirStart);\n    } finally {\n      try {\n        out.close();\n      } finally {\n        try {\n          postingsWriter.close();\n        } finally {\n          indexWriter.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6066dbe072ec5334ff5824f474e9d3abd1620fb7","date":1278709584,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardTermsDictWriter#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardTermsDictWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n\n    try {\n      final int fieldCount = fields.size();\n\n      final long dirStart = out.getFilePointer();\n\n      out.writeInt(fieldCount);\n      for(int i=0;i<fieldCount;i++) {\n        TermsWriter field = (TermsWriter) fields.get(i);\n        out.writeInt(field.fieldInfo.number);\n        out.writeLong(field.numTerms);\n        out.writeLong(field.termsStartPointer);\n      }\n      writeTrailer(dirStart);\n    } finally {\n      try {\n        out.close();\n      } finally {\n        try {\n          postingsWriter.close();\n        } finally {\n          termsIndexWriter.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n\n    try {\n      final int fieldCount = fields.size();\n\n      final long dirStart = out.getFilePointer();\n\n      out.writeInt(fieldCount);\n      for(int i=0;i<fieldCount;i++) {\n        TermsWriter field = (TermsWriter) fields.get(i);\n        out.writeInt(field.fieldInfo.number);\n        out.writeLong(field.numTerms);\n        out.writeLong(field.termsStartPointer);\n      }\n      out.seek(CodecUtil.headerLength(CODEC_NAME));\n      out.writeLong(dirStart);\n    } finally {\n      try {\n        out.close();\n      } finally {\n        try {\n          postingsWriter.close();\n        } finally {\n          termsIndexWriter.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardTermsDictWriter#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardTermsDictWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n\n    try {\n      final int fieldCount = fields.size();\n\n      final long dirStart = out.getFilePointer();\n\n      out.writeInt(fieldCount);\n      for(int i=0;i<fieldCount;i++) {\n        TermsWriter field = (TermsWriter) fields.get(i);\n        out.writeInt(field.fieldInfo.number);\n        out.writeLong(field.numTerms);\n        out.writeLong(field.termsStartPointer);\n      }\n      writeTrailer(dirStart);\n    } finally {\n      try {\n        out.close();\n      } finally {\n        try {\n          postingsWriter.close();\n        } finally {\n          termsIndexWriter.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n\n    try {\n      final int fieldCount = fields.size();\n\n      final long dirStart = out.getFilePointer();\n\n      out.writeInt(fieldCount);\n      for(int i=0;i<fieldCount;i++) {\n        TermsWriter field = (TermsWriter) fields.get(i);\n        out.writeInt(field.fieldInfo.number);\n        out.writeLong(field.numTerms);\n        out.writeLong(field.termsStartPointer);\n      }\n      out.seek(CodecUtil.headerLength(CODEC_NAME));\n      out.writeLong(dirStart);\n    } finally {\n      try {\n        out.close();\n      } finally {\n        try {\n          postingsWriter.close();\n        } finally {\n          indexWriter.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99cf56f3a650b908f7017a72f9d23940418f8a52","date":1284891529,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsWriter#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardTermsDictWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n\n    try {\n      final int fieldCount = fields.size();\n\n      final long dirStart = out.getFilePointer();\n\n      out.writeInt(fieldCount);\n      for(int i=0;i<fieldCount;i++) {\n        TermsWriter field = (TermsWriter) fields.get(i);\n        out.writeInt(field.fieldInfo.number);\n        out.writeLong(field.numTerms);\n        out.writeLong(field.termsStartPointer);\n      }\n      writeTrailer(dirStart);\n    } finally {\n      try {\n        out.close();\n      } finally {\n        try {\n          postingsWriter.close();\n        } finally {\n          termsIndexWriter.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n\n    try {\n      final int fieldCount = fields.size();\n\n      final long dirStart = out.getFilePointer();\n\n      out.writeInt(fieldCount);\n      for(int i=0;i<fieldCount;i++) {\n        TermsWriter field = (TermsWriter) fields.get(i);\n        out.writeInt(field.fieldInfo.number);\n        out.writeLong(field.numTerms);\n        out.writeLong(field.termsStartPointer);\n      }\n      writeTrailer(dirStart);\n    } finally {\n      try {\n        out.close();\n      } finally {\n        try {\n          postingsWriter.close();\n        } finally {\n          termsIndexWriter.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsWriter#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardTermsDictWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n\n    try {\n      final int fieldCount = fields.size();\n\n      final long dirStart = out.getFilePointer();\n\n      out.writeInt(fieldCount);\n      for(int i=0;i<fieldCount;i++) {\n        TermsWriter field = (TermsWriter) fields.get(i);\n        out.writeInt(field.fieldInfo.number);\n        out.writeLong(field.numTerms);\n        out.writeLong(field.termsStartPointer);\n      }\n      writeTrailer(dirStart);\n    } finally {\n      try {\n        out.close();\n      } finally {\n        try {\n          postingsWriter.close();\n        } finally {\n          termsIndexWriter.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n\n    try {\n      final int fieldCount = fields.size();\n\n      final long dirStart = out.getFilePointer();\n\n      out.writeInt(fieldCount);\n      for(int i=0;i<fieldCount;i++) {\n        TermsWriter field = (TermsWriter) fields.get(i);\n        out.writeInt(field.fieldInfo.number);\n        out.writeLong(field.numTerms);\n        out.writeLong(field.termsStartPointer);\n      }\n      writeTrailer(dirStart);\n    } finally {\n      try {\n        out.close();\n      } finally {\n        try {\n          postingsWriter.close();\n        } finally {\n          termsIndexWriter.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6066dbe072ec5334ff5824f474e9d3abd1620fb7":["f3aaa3a04692b61e4c5b0f329d461e3e7e041188"],"f3aaa3a04692b61e4c5b0f329d461e3e7e041188":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5f4e87790277826a2aea119328600dfb07761f32":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","6066dbe072ec5334ff5824f474e9d3abd1620fb7"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5f4e87790277826a2aea119328600dfb07761f32","99cf56f3a650b908f7017a72f9d23940418f8a52"],"99cf56f3a650b908f7017a72f9d23940418f8a52":["6066dbe072ec5334ff5824f474e9d3abd1620fb7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["99cf56f3a650b908f7017a72f9d23940418f8a52"]},"commit2Childs":{"6066dbe072ec5334ff5824f474e9d3abd1620fb7":["5f4e87790277826a2aea119328600dfb07761f32","99cf56f3a650b908f7017a72f9d23940418f8a52"],"f3aaa3a04692b61e4c5b0f329d461e3e7e041188":["6066dbe072ec5334ff5824f474e9d3abd1620fb7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["f3aaa3a04692b61e4c5b0f329d461e3e7e041188","5f4e87790277826a2aea119328600dfb07761f32"],"5f4e87790277826a2aea119328600dfb07761f32":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"99cf56f3a650b908f7017a72f9d23940418f8a52":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}