{"path":"solr/core/src/java/org/apache/solr/util/ConcurrentLFUCache#computeIfAbsent(K,Function[#-super-K,#-extends-V]).mjava","commits":[{"id":"bfa27be7bde9d711ce2b418fadc555654849383f","date":1573652589,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/ConcurrentLFUCache#computeIfAbsent(K,Function[#-super-K,#-extends-V]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public V computeIfAbsent(K key, Function<? super K, ? extends V> mappingFunction) {\n    // prescreen access first\n    V val = get(key);\n    if (val != null) {\n      return val;\n    }\n    AtomicBoolean newValue = new AtomicBoolean();\n    if (islive) {\n      stats.accessCounter.increment();\n    }\n    CacheEntry<K, V> entry =  map.computeIfAbsent(key, k -> {\n      V value = mappingFunction.apply(key);\n      // preserve the semantics of computeIfAbsent\n      if (value == null) {\n        return null;\n      }\n      CacheEntry<K, V> e = new CacheEntry<>(key, value, timeSource.getEpochTimeNs());\n      newValue.set(true);\n      oldestEntry.updateAndGet(x -> x > e.lastAccessed  || x == 0 ? e.lastAccessed : x);\n      stats.size.increment();\n      ramBytes.add(e.ramBytesUsed() + HASHTABLE_RAM_BYTES_PER_ENTRY); // added key + value + entry\n      if (islive) {\n        stats.putCounter.increment();\n      } else {\n        stats.nonLivePutCounter.increment();\n      }\n      return e;\n    });\n    if (newValue.get()) {\n      maybeMarkAndSweep();\n    } else {\n      if (islive && entry != null) {\n        entry.lastAccessed = timeSource.getEpochTimeNs();\n        entry.hits.increment();\n      }\n    }\n    return entry != null ? entry.value : null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d7d3943904804560937e6239effeebda0f920e4","date":1573762904,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/util/ConcurrentLFUCache#computeIfAbsent(K,Function[#-super-K,#-extends-V]).mjava","sourceNew":null,"sourceOld":"  @Override\n  public V computeIfAbsent(K key, Function<? super K, ? extends V> mappingFunction) {\n    // prescreen access first\n    V val = get(key);\n    if (val != null) {\n      return val;\n    }\n    AtomicBoolean newValue = new AtomicBoolean();\n    if (islive) {\n      stats.accessCounter.increment();\n    }\n    CacheEntry<K, V> entry =  map.computeIfAbsent(key, k -> {\n      V value = mappingFunction.apply(key);\n      // preserve the semantics of computeIfAbsent\n      if (value == null) {\n        return null;\n      }\n      CacheEntry<K, V> e = new CacheEntry<>(key, value, timeSource.getEpochTimeNs());\n      newValue.set(true);\n      oldestEntry.updateAndGet(x -> x > e.lastAccessed  || x == 0 ? e.lastAccessed : x);\n      stats.size.increment();\n      ramBytes.add(e.ramBytesUsed() + HASHTABLE_RAM_BYTES_PER_ENTRY); // added key + value + entry\n      if (islive) {\n        stats.putCounter.increment();\n      } else {\n        stats.nonLivePutCounter.increment();\n      }\n      return e;\n    });\n    if (newValue.get()) {\n      maybeMarkAndSweep();\n    } else {\n      if (islive && entry != null) {\n        entry.lastAccessed = timeSource.getEpochTimeNs();\n        entry.hits.increment();\n      }\n    }\n    return entry != null ? entry.value : null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bfa27be7bde9d711ce2b418fadc555654849383f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4d7d3943904804560937e6239effeebda0f920e4":["bfa27be7bde9d711ce2b418fadc555654849383f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4d7d3943904804560937e6239effeebda0f920e4"]},"commit2Childs":{"bfa27be7bde9d711ce2b418fadc555654849383f":["4d7d3943904804560937e6239effeebda0f920e4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bfa27be7bde9d711ce2b418fadc555654849383f"],"4d7d3943904804560937e6239effeebda0f920e4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}