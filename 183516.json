{"path":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermOrdValDocValuesComparator#setBottom(int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermOrdValDocValuesComparator#setBottom(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.TermOrdValDocValuesComparator#setBottom(int).mjava","sourceNew":"    @Override\n    public void setBottom(final int bottom) {\n      bottomSlot = bottom;\n\n      bottomValue = values[bottomSlot];\n      if (currentReaderGen == readerGen[bottomSlot]) {\n        bottomOrd = ords[bottomSlot];\n        bottomSameReader = true;\n      } else {\n        if (bottomValue == null) {\n          // 0 ord is null for all segments\n          assert ords[bottomSlot] == 0;\n          bottomOrd = 0;\n          bottomSameReader = true;\n          readerGen[bottomSlot] = currentReaderGen;\n        } else {\n          final int index = termsIndex.getByValue(bottomValue, tempBR);\n          if (index < 0) {\n            bottomOrd = -index - 2;\n            bottomSameReader = false;\n          } else {\n            bottomOrd = index;\n            // exact value match\n            bottomSameReader = true;\n            readerGen[bottomSlot] = currentReaderGen;            \n            ords[bottomSlot] = bottomOrd;\n          }\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void setBottom(final int bottom) {\n      bottomSlot = bottom;\n\n      bottomValue = values[bottomSlot];\n      if (currentReaderGen == readerGen[bottomSlot]) {\n        bottomOrd = ords[bottomSlot];\n        bottomSameReader = true;\n      } else {\n        if (bottomValue == null) {\n          // 0 ord is null for all segments\n          assert ords[bottomSlot] == 0;\n          bottomOrd = 0;\n          bottomSameReader = true;\n          readerGen[bottomSlot] = currentReaderGen;\n        } else {\n          final int index = termsIndex.getByValue(bottomValue, tempBR);\n          if (index < 0) {\n            bottomOrd = -index - 2;\n            bottomSameReader = false;\n          } else {\n            bottomOrd = index;\n            // exact value match\n            bottomSameReader = true;\n            readerGen[bottomSlot] = currentReaderGen;            \n            ords[bottomSlot] = bottomOrd;\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7523dd562634d9145b67eb4c8b3b3db2340532b","date":1330467618,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermOrdValDocValuesComparator#setBottom(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermOrdValDocValuesComparator#setBottom(int).mjava","sourceNew":"    @Override\n    public void setBottom(final int bottom) {\n      bottomSlot = bottom;\n\n      bottomValue = values[bottomSlot];\n      if (currentReaderGen == readerGen[bottomSlot]) {\n        bottomOrd = ords[bottomSlot];\n        bottomSameReader = true;\n      } else {\n        if (bottomValue == null) {\n          // 0 ord is null for all segments\n          assert ords[bottomSlot] == 0;\n          bottomOrd = 0;\n          bottomSameReader = true;\n          readerGen[bottomSlot] = currentReaderGen;\n        } else {\n          final int index = termsIndex.getOrdByValue(bottomValue, tempBR);\n          if (index < 0) {\n            bottomOrd = -index - 2;\n            bottomSameReader = false;\n          } else {\n            bottomOrd = index;\n            // exact value match\n            bottomSameReader = true;\n            readerGen[bottomSlot] = currentReaderGen;            \n            ords[bottomSlot] = bottomOrd;\n          }\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void setBottom(final int bottom) {\n      bottomSlot = bottom;\n\n      bottomValue = values[bottomSlot];\n      if (currentReaderGen == readerGen[bottomSlot]) {\n        bottomOrd = ords[bottomSlot];\n        bottomSameReader = true;\n      } else {\n        if (bottomValue == null) {\n          // 0 ord is null for all segments\n          assert ords[bottomSlot] == 0;\n          bottomOrd = 0;\n          bottomSameReader = true;\n          readerGen[bottomSlot] = currentReaderGen;\n        } else {\n          final int index = termsIndex.getByValue(bottomValue, tempBR);\n          if (index < 0) {\n            bottomOrd = -index - 2;\n            bottomSameReader = false;\n          } else {\n            bottomOrd = index;\n            // exact value match\n            bottomSameReader = true;\n            readerGen[bottomSlot] = currentReaderGen;            \n            ords[bottomSlot] = bottomOrd;\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermOrdValDocValuesComparator#setBottom(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermOrdValDocValuesComparator#setBottom(int).mjava","sourceNew":"    @Override\n    public void setBottom(final int bottom) {\n      bottomSlot = bottom;\n\n      bottomValue = values[bottomSlot];\n      if (currentReaderGen == readerGen[bottomSlot]) {\n        bottomOrd = ords[bottomSlot];\n        bottomSameReader = true;\n      } else {\n        if (bottomValue == null) {\n          // 0 ord is null for all segments\n          assert ords[bottomSlot] == 0;\n          bottomOrd = 0;\n          bottomSameReader = true;\n          readerGen[bottomSlot] = currentReaderGen;\n        } else {\n          final int index = termsIndex.getOrdByValue(bottomValue, tempBR);\n          if (index < 0) {\n            bottomOrd = -index - 2;\n            bottomSameReader = false;\n          } else {\n            bottomOrd = index;\n            // exact value match\n            bottomSameReader = true;\n            readerGen[bottomSlot] = currentReaderGen;            \n            ords[bottomSlot] = bottomOrd;\n          }\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void setBottom(final int bottom) {\n      bottomSlot = bottom;\n\n      bottomValue = values[bottomSlot];\n      if (currentReaderGen == readerGen[bottomSlot]) {\n        bottomOrd = ords[bottomSlot];\n        bottomSameReader = true;\n      } else {\n        if (bottomValue == null) {\n          // 0 ord is null for all segments\n          assert ords[bottomSlot] == 0;\n          bottomOrd = 0;\n          bottomSameReader = true;\n          readerGen[bottomSlot] = currentReaderGen;\n        } else {\n          final int index = termsIndex.getByValue(bottomValue, tempBR);\n          if (index < 0) {\n            bottomOrd = -index - 2;\n            bottomSameReader = false;\n          } else {\n            bottomOrd = index;\n            // exact value match\n            bottomSameReader = true;\n            readerGen[bottomSlot] = currentReaderGen;            \n            ords[bottomSlot] = bottomOrd;\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e29774db46ad98ca4a8d7fcbfab633ebc01f358","date":1355170812,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermOrdValDocValuesComparator#setBottom(int).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void setBottom(final int bottom) {\n      bottomSlot = bottom;\n\n      bottomValue = values[bottomSlot];\n      if (currentReaderGen == readerGen[bottomSlot]) {\n        bottomOrd = ords[bottomSlot];\n        bottomSameReader = true;\n      } else {\n        if (bottomValue == null) {\n          // 0 ord is null for all segments\n          assert ords[bottomSlot] == 0;\n          bottomOrd = 0;\n          bottomSameReader = true;\n          readerGen[bottomSlot] = currentReaderGen;\n        } else {\n          final int index = termsIndex.getOrdByValue(bottomValue, tempBR);\n          if (index < 0) {\n            bottomOrd = -index - 2;\n            bottomSameReader = false;\n          } else {\n            bottomOrd = index;\n            // exact value match\n            bottomSameReader = true;\n            readerGen[bottomSlot] = currentReaderGen;            \n            ords[bottomSlot] = bottomOrd;\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermOrdValDocValuesComparator#setBottom(int).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void setBottom(final int bottom) {\n      bottomSlot = bottom;\n\n      bottomValue = values[bottomSlot];\n      if (currentReaderGen == readerGen[bottomSlot]) {\n        bottomOrd = ords[bottomSlot];\n        bottomSameReader = true;\n      } else {\n        if (bottomValue == null) {\n          // 0 ord is null for all segments\n          assert ords[bottomSlot] == 0;\n          bottomOrd = 0;\n          bottomSameReader = true;\n          readerGen[bottomSlot] = currentReaderGen;\n        } else {\n          final int index = termsIndex.getOrdByValue(bottomValue, tempBR);\n          if (index < 0) {\n            bottomOrd = -index - 2;\n            bottomSameReader = false;\n          } else {\n            bottomOrd = index;\n            // exact value match\n            bottomSameReader = true;\n            readerGen[bottomSlot] = currentReaderGen;            \n            ords[bottomSlot] = bottomOrd;\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["b7523dd562634d9145b67eb4c8b3b3db2340532b","3e29774db46ad98ca4a8d7fcbfab633ebc01f358"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","b7523dd562634d9145b67eb4c8b3b3db2340532b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7523dd562634d9145b67eb4c8b3b3db2340532b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3e29774db46ad98ca4a8d7fcbfab633ebc01f358":["b7523dd562634d9145b67eb4c8b3b3db2340532b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d4d69c535930b5cce125cff868d40f6373dc27d4"]},"commit2Childs":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","b7523dd562634d9145b67eb4c8b3b3db2340532b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"b7523dd562634d9145b67eb4c8b3b3db2340532b":["d4d69c535930b5cce125cff868d40f6373dc27d4","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","3e29774db46ad98ca4a8d7fcbfab633ebc01f358"],"3e29774db46ad98ca4a8d7fcbfab633ebc01f358":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}