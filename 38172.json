{"path":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin.OtherCoreJoinQuery#rewrite(IndexReader).mjava","commits":[{"id":"6eecfe8d494cb2e3ead94e9cdb9381bfe4993dcd","date":1438089844,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin.OtherCoreJoinQuery#rewrite(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Query rewrite(IndexReader reader) throws IOException {\n      SolrRequestInfo info = SolrRequestInfo.getRequestInfo();\n\n      CoreContainer container = info.getReq().getCore().getCoreDescriptor().getCoreContainer();\n\n      final SolrCore fromCore = container.getCore(fromIndex);\n\n      if (fromCore == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Cross-core join: no such core \" + fromIndex);\n      }\n      RefCounted<SolrIndexSearcher> fromHolder = null;\n      fromHolder = fromCore.getRegisteredSearcher();\n      final Query joinQuery;\n      try {\n        joinQuery = JoinUtil.createJoinQuery(fromField, true,\n            toField, fromQuery, fromHolder.get(), scoreMode);\n      } finally {\n        fromCore.close();\n        fromHolder.decref();\n      }\n      joinQuery.setBoost(getBoost());\n      return joinQuery.rewrite(reader);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin.OtherCoreJoinQuery#rewrite(IndexReader).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin.OtherCoreJoinQuery#rewrite(IndexReader).mjava","sourceNew":"    @Override\n    public Query rewrite(IndexReader reader) throws IOException {\n      SolrRequestInfo info = SolrRequestInfo.getRequestInfo();\n\n      CoreContainer container = info.getReq().getCore().getCoreDescriptor().getCoreContainer();\n\n      final SolrCore fromCore = container.getCore(fromIndex);\n\n      if (fromCore == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Cross-core join: no such core \" + fromIndex);\n      }\n      RefCounted<SolrIndexSearcher> fromHolder = null;\n      fromHolder = fromCore.getRegisteredSearcher();\n      final Query joinQuery;\n      try {\n        joinQuery = JoinUtil.createJoinQuery(fromField, true,\n            toField, fromQuery, fromHolder.get(), scoreMode);\n      } finally {\n        fromCore.close();\n        fromHolder.decref();\n      }\n      return joinQuery.rewrite(reader);\n    }\n\n","sourceOld":"    @Override\n    public Query rewrite(IndexReader reader) throws IOException {\n      SolrRequestInfo info = SolrRequestInfo.getRequestInfo();\n\n      CoreContainer container = info.getReq().getCore().getCoreDescriptor().getCoreContainer();\n\n      final SolrCore fromCore = container.getCore(fromIndex);\n\n      if (fromCore == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Cross-core join: no such core \" + fromIndex);\n      }\n      RefCounted<SolrIndexSearcher> fromHolder = null;\n      fromHolder = fromCore.getRegisteredSearcher();\n      final Query joinQuery;\n      try {\n        joinQuery = JoinUtil.createJoinQuery(fromField, true,\n            toField, fromQuery, fromHolder.get(), scoreMode);\n      } finally {\n        fromCore.close();\n        fromHolder.decref();\n      }\n      joinQuery.setBoost(getBoost());\n      return joinQuery.rewrite(reader);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"729cb470f975115d4c60517b2cb7c42e37a7a2e1","date":1492041760,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin.OtherCoreJoinQuery#rewrite(IndexReader).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin.OtherCoreJoinQuery#rewrite(IndexReader).mjava","sourceNew":"    @Override\n    public Query rewrite(IndexReader reader) throws IOException {\n      SolrRequestInfo info = SolrRequestInfo.getRequestInfo();\n\n      CoreContainer container = info.getReq().getCore().getCoreContainer();\n\n      final SolrCore fromCore = container.getCore(fromIndex);\n\n      if (fromCore == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Cross-core join: no such core \" + fromIndex);\n      }\n      RefCounted<SolrIndexSearcher> fromHolder = null;\n      fromHolder = fromCore.getRegisteredSearcher();\n      final Query joinQuery;\n      try {\n        joinQuery = JoinUtil.createJoinQuery(fromField, true,\n            toField, fromQuery, fromHolder.get(), scoreMode);\n      } finally {\n        fromCore.close();\n        fromHolder.decref();\n      }\n      return joinQuery.rewrite(reader);\n    }\n\n","sourceOld":"    @Override\n    public Query rewrite(IndexReader reader) throws IOException {\n      SolrRequestInfo info = SolrRequestInfo.getRequestInfo();\n\n      CoreContainer container = info.getReq().getCore().getCoreDescriptor().getCoreContainer();\n\n      final SolrCore fromCore = container.getCore(fromIndex);\n\n      if (fromCore == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Cross-core join: no such core \" + fromIndex);\n      }\n      RefCounted<SolrIndexSearcher> fromHolder = null;\n      fromHolder = fromCore.getRegisteredSearcher();\n      final Query joinQuery;\n      try {\n        joinQuery = JoinUtil.createJoinQuery(fromField, true,\n            toField, fromQuery, fromHolder.get(), scoreMode);\n      } finally {\n        fromCore.close();\n        fromHolder.decref();\n      }\n      return joinQuery.rewrite(reader);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin.OtherCoreJoinQuery#rewrite(IndexReader).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin.OtherCoreJoinQuery#rewrite(IndexReader).mjava","sourceNew":"    @Override\n    public Query rewrite(IndexReader reader) throws IOException {\n      SolrRequestInfo info = SolrRequestInfo.getRequestInfo();\n\n      CoreContainer container = info.getReq().getCore().getCoreContainer();\n\n      final SolrCore fromCore = container.getCore(fromIndex);\n\n      if (fromCore == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Cross-core join: no such core \" + fromIndex);\n      }\n      RefCounted<SolrIndexSearcher> fromHolder = null;\n      fromHolder = fromCore.getRegisteredSearcher();\n      final Query joinQuery;\n      try {\n        joinQuery = JoinUtil.createJoinQuery(fromField, true,\n            toField, fromQuery, fromHolder.get(), scoreMode);\n      } finally {\n        fromCore.close();\n        fromHolder.decref();\n      }\n      return joinQuery.rewrite(reader);\n    }\n\n","sourceOld":"    @Override\n    public Query rewrite(IndexReader reader) throws IOException {\n      SolrRequestInfo info = SolrRequestInfo.getRequestInfo();\n\n      CoreContainer container = info.getReq().getCore().getCoreDescriptor().getCoreContainer();\n\n      final SolrCore fromCore = container.getCore(fromIndex);\n\n      if (fromCore == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Cross-core join: no such core \" + fromIndex);\n      }\n      RefCounted<SolrIndexSearcher> fromHolder = null;\n      fromHolder = fromCore.getRegisteredSearcher();\n      final Query joinQuery;\n      try {\n        joinQuery = JoinUtil.createJoinQuery(fromField, true,\n            toField, fromQuery, fromHolder.get(), scoreMode);\n      } finally {\n        fromCore.close();\n        fromHolder.decref();\n      }\n      return joinQuery.rewrite(reader);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54dc69c8c21d9664fe311e6f3667a7cda0d8afb0","date":1492900223,"type":5,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin.OtherCoreJoinQuery#createWeight(IndexSearcher,boolean,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin.OtherCoreJoinQuery#rewrite(IndexReader).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      SolrRequestInfo info = SolrRequestInfo.getRequestInfo();\n\n      CoreContainer container = info.getReq().getCore().getCoreContainer();\n\n      final SolrCore fromCore = container.getCore(fromIndex);\n\n      if (fromCore == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Cross-core join: no such core \" + fromIndex);\n      }\n      RefCounted<SolrIndexSearcher> fromHolder = null;\n      fromHolder = fromCore.getRegisteredSearcher();\n      final Query joinQuery;\n      try {\n        joinQuery = JoinUtil.createJoinQuery(fromField, true,\n            toField, fromQuery, fromHolder.get(), scoreMode);\n      } finally {\n        fromCore.close();\n        fromHolder.decref();\n      }\n      return joinQuery.rewrite(searcher.getIndexReader()).createWeight(searcher, needsScores, boost);\n    }\n\n","sourceOld":"    @Override\n    public Query rewrite(IndexReader reader) throws IOException {\n      SolrRequestInfo info = SolrRequestInfo.getRequestInfo();\n\n      CoreContainer container = info.getReq().getCore().getCoreContainer();\n\n      final SolrCore fromCore = container.getCore(fromIndex);\n\n      if (fromCore == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Cross-core join: no such core \" + fromIndex);\n      }\n      RefCounted<SolrIndexSearcher> fromHolder = null;\n      fromHolder = fromCore.getRegisteredSearcher();\n      final Query joinQuery;\n      try {\n        joinQuery = JoinUtil.createJoinQuery(fromField, true,\n            toField, fromQuery, fromHolder.get(), scoreMode);\n      } finally {\n        fromCore.close();\n        fromHolder.decref();\n      }\n      return joinQuery.rewrite(reader);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin.OtherCoreJoinQuery#rewrite(IndexReader).mjava","sourceNew":null,"sourceOld":"    @Override\n    public Query rewrite(IndexReader reader) throws IOException {\n      SolrRequestInfo info = SolrRequestInfo.getRequestInfo();\n\n      CoreContainer container = info.getReq().getCore().getCoreContainer();\n\n      final SolrCore fromCore = container.getCore(fromIndex);\n\n      if (fromCore == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Cross-core join: no such core \" + fromIndex);\n      }\n      RefCounted<SolrIndexSearcher> fromHolder = null;\n      fromHolder = fromCore.getRegisteredSearcher();\n      final Query joinQuery;\n      try {\n        joinQuery = JoinUtil.createJoinQuery(fromField, true,\n            toField, fromQuery, fromHolder.get(), scoreMode);\n      } finally {\n        fromCore.close();\n        fromHolder.decref();\n      }\n      return joinQuery.rewrite(reader);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","54dc69c8c21d9664fe311e6f3667a7cda0d8afb0"],"54dc69c8c21d9664fe311e6f3667a7cda0d8afb0":["729cb470f975115d4c60517b2cb7c42e37a7a2e1"],"6eecfe8d494cb2e3ead94e9cdb9381bfe4993dcd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["6eecfe8d494cb2e3ead94e9cdb9381bfe4993dcd"],"729cb470f975115d4c60517b2cb7c42e37a7a2e1":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["54dc69c8c21d9664fe311e6f3667a7cda0d8afb0"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["e9017cf144952056066919f1ebc7897ff9bd71b1"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"54dc69c8c21d9664fe311e6f3667a7cda0d8afb0":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6eecfe8d494cb2e3ead94e9cdb9381bfe4993dcd":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6eecfe8d494cb2e3ead94e9cdb9381bfe4993dcd"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","729cb470f975115d4c60517b2cb7c42e37a7a2e1"],"729cb470f975115d4c60517b2cb7c42e37a7a2e1":["54dc69c8c21d9664fe311e6f3667a7cda0d8afb0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}