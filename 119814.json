{"path":"src/java/org/apache/lucene/index/IndexWriterConfig#setRAMBufferSizeMB(double).mjava","commits":[{"id":"103e2ec175f1aa5629df5bcd34eb1c53055caeb1","date":1268243753,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriterConfig#setRAMBufferSizeMB(double).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Determines the amount of RAM that may be used for buffering added documents\n   * and deletions before they are flushed to the Directory. Generally for\n   * faster indexing performance it's best to flush by RAM usage instead of\n   * document count and use as large a RAM buffer as you can.\n   * \n   * <p>\n   * When this is set, the writer will flush whenever buffered documents and\n   * deletions use this much RAM. Pass in {@link #DISABLE_AUTO_FLUSH} to prevent\n   * triggering a flush due to RAM usage. Note that if flushing by document\n   * count is also enabled, then the flush will be triggered by whichever comes\n   * first.\n   * \n   * <p>\n   * <b>NOTE</b>: the account of RAM usage for pending deletions is only\n   * approximate. Specifically, if you delete by Query, Lucene currently has no\n   * way to measure the RAM usage of individual Queries so the accounting will\n   * under-estimate and you should compensate by either calling commit()\n   * periodically yourself, or by using {@link #setMaxBufferedDeleteTerms(int)}\n   * to flush by count instead of RAM usage (each buffered delete Query counts \n   * as one).\n   * \n   * <p>\n   * <b>NOTE</b>: because IndexWriter uses <code>int</code>s when managing its\n   * internal storage, the absolute maximum value for this setting is somewhat\n   * less than 2048 MB. The precise limit depends on various factors, such as\n   * how large your documents are, how many fields have norms, etc., so it's\n   * best to set this value comfortably under 2048.\n   * \n   * <p>\n   * The default value is {@link #DEFAULT_RAM_BUFFER_SIZE_MB}.\n   * \n   * @throws IllegalArgumentException\n   *           if ramBufferSize is enabled but non-positive, or it disables\n   *           ramBufferSize when maxBufferedDocs is already disabled\n   */\n  public IndexWriterConfig setRAMBufferSizeMB(double ramBufferSizeMB) {\n    if (ramBufferSizeMB > 2048.0) {\n      throw new IllegalArgumentException(\"ramBufferSize \" + ramBufferSizeMB\n          + \" is too large; should be comfortably less than 2048\");\n    }\n    if (ramBufferSizeMB != DISABLE_AUTO_FLUSH && ramBufferSizeMB <= 0.0)\n      throw new IllegalArgumentException(\n          \"ramBufferSize should be > 0.0 MB when enabled\");\n    if (ramBufferSizeMB == DISABLE_AUTO_FLUSH && maxBufferedDocs == DISABLE_AUTO_FLUSH)\n      throw new IllegalArgumentException(\n          \"at least one of ramBufferSize and maxBufferedDocs must be enabled\");\n    this.ramBufferSizeMB = ramBufferSizeMB;\n    return this;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/index/IndexWriterConfig#setRAMBufferSizeMB(double).mjava","sourceNew":null,"sourceOld":"  /**\n   * Determines the amount of RAM that may be used for buffering added documents\n   * and deletions before they are flushed to the Directory. Generally for\n   * faster indexing performance it's best to flush by RAM usage instead of\n   * document count and use as large a RAM buffer as you can.\n   * \n   * <p>\n   * When this is set, the writer will flush whenever buffered documents and\n   * deletions use this much RAM. Pass in {@link #DISABLE_AUTO_FLUSH} to prevent\n   * triggering a flush due to RAM usage. Note that if flushing by document\n   * count is also enabled, then the flush will be triggered by whichever comes\n   * first.\n   * \n   * <p>\n   * <b>NOTE</b>: the account of RAM usage for pending deletions is only\n   * approximate. Specifically, if you delete by Query, Lucene currently has no\n   * way to measure the RAM usage of individual Queries so the accounting will\n   * under-estimate and you should compensate by either calling commit()\n   * periodically yourself, or by using {@link #setMaxBufferedDeleteTerms(int)}\n   * to flush by count instead of RAM usage (each buffered delete Query counts \n   * as one).\n   * \n   * <p>\n   * <b>NOTE</b>: because IndexWriter uses <code>int</code>s when managing its\n   * internal storage, the absolute maximum value for this setting is somewhat\n   * less than 2048 MB. The precise limit depends on various factors, such as\n   * how large your documents are, how many fields have norms, etc., so it's\n   * best to set this value comfortably under 2048.\n   * \n   * <p>\n   * The default value is {@link #DEFAULT_RAM_BUFFER_SIZE_MB}.\n   * \n   * @throws IllegalArgumentException\n   *           if ramBufferSize is enabled but non-positive, or it disables\n   *           ramBufferSize when maxBufferedDocs is already disabled\n   */\n  public IndexWriterConfig setRAMBufferSizeMB(double ramBufferSizeMB) {\n    if (ramBufferSizeMB > 2048.0) {\n      throw new IllegalArgumentException(\"ramBufferSize \" + ramBufferSizeMB\n          + \" is too large; should be comfortably less than 2048\");\n    }\n    if (ramBufferSizeMB != DISABLE_AUTO_FLUSH && ramBufferSizeMB <= 0.0)\n      throw new IllegalArgumentException(\n          \"ramBufferSize should be > 0.0 MB when enabled\");\n    if (ramBufferSizeMB == DISABLE_AUTO_FLUSH && maxBufferedDocs == DISABLE_AUTO_FLUSH)\n      throw new IllegalArgumentException(\n          \"at least one of ramBufferSize and maxBufferedDocs must be enabled\");\n    this.ramBufferSizeMB = ramBufferSizeMB;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriterConfig#setRAMBufferSizeMB(double).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Determines the amount of RAM that may be used for buffering added documents\n   * and deletions before they are flushed to the Directory. Generally for\n   * faster indexing performance it's best to flush by RAM usage instead of\n   * document count and use as large a RAM buffer as you can.\n   * \n   * <p>\n   * When this is set, the writer will flush whenever buffered documents and\n   * deletions use this much RAM. Pass in {@link #DISABLE_AUTO_FLUSH} to prevent\n   * triggering a flush due to RAM usage. Note that if flushing by document\n   * count is also enabled, then the flush will be triggered by whichever comes\n   * first.\n   * \n   * <p>\n   * <b>NOTE</b>: the account of RAM usage for pending deletions is only\n   * approximate. Specifically, if you delete by Query, Lucene currently has no\n   * way to measure the RAM usage of individual Queries so the accounting will\n   * under-estimate and you should compensate by either calling commit()\n   * periodically yourself, or by using {@link #setMaxBufferedDeleteTerms(int)}\n   * to flush by count instead of RAM usage (each buffered delete Query counts \n   * as one).\n   * \n   * <p>\n   * <b>NOTE</b>: because IndexWriter uses <code>int</code>s when managing its\n   * internal storage, the absolute maximum value for this setting is somewhat\n   * less than 2048 MB. The precise limit depends on various factors, such as\n   * how large your documents are, how many fields have norms, etc., so it's\n   * best to set this value comfortably under 2048.\n   * \n   * <p>\n   * The default value is {@link #DEFAULT_RAM_BUFFER_SIZE_MB}.\n   * \n   * @throws IllegalArgumentException\n   *           if ramBufferSize is enabled but non-positive, or it disables\n   *           ramBufferSize when maxBufferedDocs is already disabled\n   */\n  public IndexWriterConfig setRAMBufferSizeMB(double ramBufferSizeMB) {\n    if (ramBufferSizeMB > 2048.0) {\n      throw new IllegalArgumentException(\"ramBufferSize \" + ramBufferSizeMB\n          + \" is too large; should be comfortably less than 2048\");\n    }\n    if (ramBufferSizeMB != DISABLE_AUTO_FLUSH && ramBufferSizeMB <= 0.0)\n      throw new IllegalArgumentException(\n          \"ramBufferSize should be > 0.0 MB when enabled\");\n    if (ramBufferSizeMB == DISABLE_AUTO_FLUSH && maxBufferedDocs == DISABLE_AUTO_FLUSH)\n      throw new IllegalArgumentException(\n          \"at least one of ramBufferSize and maxBufferedDocs must be enabled\");\n    this.ramBufferSizeMB = ramBufferSizeMB;\n    return this;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#setRAMBufferSizeMB(double).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriterConfig#setRAMBufferSizeMB(double).mjava","sourceNew":"  /**\n   * Determines the amount of RAM that may be used for buffering added documents\n   * and deletions before they are flushed to the Directory. Generally for\n   * faster indexing performance it's best to flush by RAM usage instead of\n   * document count and use as large a RAM buffer as you can.\n   * \n   * <p>\n   * When this is set, the writer will flush whenever buffered documents and\n   * deletions use this much RAM. Pass in {@link #DISABLE_AUTO_FLUSH} to prevent\n   * triggering a flush due to RAM usage. Note that if flushing by document\n   * count is also enabled, then the flush will be triggered by whichever comes\n   * first.\n   * \n   * <p>\n   * <b>NOTE</b>: the account of RAM usage for pending deletions is only\n   * approximate. Specifically, if you delete by Query, Lucene currently has no\n   * way to measure the RAM usage of individual Queries so the accounting will\n   * under-estimate and you should compensate by either calling commit()\n   * periodically yourself, or by using {@link #setMaxBufferedDeleteTerms(int)}\n   * to flush by count instead of RAM usage (each buffered delete Query counts \n   * as one).\n   * \n   * <p>\n   * <b>NOTE</b>: because IndexWriter uses <code>int</code>s when managing its\n   * internal storage, the absolute maximum value for this setting is somewhat\n   * less than 2048 MB. The precise limit depends on various factors, such as\n   * how large your documents are, how many fields have norms, etc., so it's\n   * best to set this value comfortably under 2048.\n   * \n   * <p>\n   * The default value is {@link #DEFAULT_RAM_BUFFER_SIZE_MB}.\n   * \n   * @throws IllegalArgumentException\n   *           if ramBufferSize is enabled but non-positive, or it disables\n   *           ramBufferSize when maxBufferedDocs is already disabled\n   */\n  public IndexWriterConfig setRAMBufferSizeMB(double ramBufferSizeMB) {\n    if (ramBufferSizeMB > 2048.0) {\n      throw new IllegalArgumentException(\"ramBufferSize \" + ramBufferSizeMB\n          + \" is too large; should be comfortably less than 2048\");\n    }\n    if (ramBufferSizeMB != DISABLE_AUTO_FLUSH && ramBufferSizeMB <= 0.0)\n      throw new IllegalArgumentException(\n          \"ramBufferSize should be > 0.0 MB when enabled\");\n    if (ramBufferSizeMB == DISABLE_AUTO_FLUSH && maxBufferedDocs == DISABLE_AUTO_FLUSH)\n      throw new IllegalArgumentException(\n          \"at least one of ramBufferSize and maxBufferedDocs must be enabled\");\n    this.ramBufferSizeMB = ramBufferSizeMB;\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Determines the amount of RAM that may be used for buffering added documents\n   * and deletions before they are flushed to the Directory. Generally for\n   * faster indexing performance it's best to flush by RAM usage instead of\n   * document count and use as large a RAM buffer as you can.\n   * \n   * <p>\n   * When this is set, the writer will flush whenever buffered documents and\n   * deletions use this much RAM. Pass in {@link #DISABLE_AUTO_FLUSH} to prevent\n   * triggering a flush due to RAM usage. Note that if flushing by document\n   * count is also enabled, then the flush will be triggered by whichever comes\n   * first.\n   * \n   * <p>\n   * <b>NOTE</b>: the account of RAM usage for pending deletions is only\n   * approximate. Specifically, if you delete by Query, Lucene currently has no\n   * way to measure the RAM usage of individual Queries so the accounting will\n   * under-estimate and you should compensate by either calling commit()\n   * periodically yourself, or by using {@link #setMaxBufferedDeleteTerms(int)}\n   * to flush by count instead of RAM usage (each buffered delete Query counts \n   * as one).\n   * \n   * <p>\n   * <b>NOTE</b>: because IndexWriter uses <code>int</code>s when managing its\n   * internal storage, the absolute maximum value for this setting is somewhat\n   * less than 2048 MB. The precise limit depends on various factors, such as\n   * how large your documents are, how many fields have norms, etc., so it's\n   * best to set this value comfortably under 2048.\n   * \n   * <p>\n   * The default value is {@link #DEFAULT_RAM_BUFFER_SIZE_MB}.\n   * \n   * @throws IllegalArgumentException\n   *           if ramBufferSize is enabled but non-positive, or it disables\n   *           ramBufferSize when maxBufferedDocs is already disabled\n   */\n  public IndexWriterConfig setRAMBufferSizeMB(double ramBufferSizeMB) {\n    if (ramBufferSizeMB > 2048.0) {\n      throw new IllegalArgumentException(\"ramBufferSize \" + ramBufferSizeMB\n          + \" is too large; should be comfortably less than 2048\");\n    }\n    if (ramBufferSizeMB != DISABLE_AUTO_FLUSH && ramBufferSizeMB <= 0.0)\n      throw new IllegalArgumentException(\n          \"ramBufferSize should be > 0.0 MB when enabled\");\n    if (ramBufferSizeMB == DISABLE_AUTO_FLUSH && maxBufferedDocs == DISABLE_AUTO_FLUSH)\n      throw new IllegalArgumentException(\n          \"at least one of ramBufferSize and maxBufferedDocs must be enabled\");\n    this.ramBufferSizeMB = ramBufferSizeMB;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"103e2ec175f1aa5629df5bcd34eb1c53055caeb1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e52fea2c4081a1e552b98506691990be59503168":["103e2ec175f1aa5629df5bcd34eb1c53055caeb1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"103e2ec175f1aa5629df5bcd34eb1c53055caeb1":["e52fea2c4081a1e552b98506691990be59503168"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["103e2ec175f1aa5629df5bcd34eb1c53055caeb1"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}