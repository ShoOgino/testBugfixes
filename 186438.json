{"path":"solr/core/src/java/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","sourceNew":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase(Locale.ENGLISH);\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase(Locale.ENGLISH) ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","sourceOld":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase(Locale.ENGLISH);\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase(Locale.ENGLISH) ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","sourceNew":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase(Locale.ENGLISH);\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase(Locale.ENGLISH) ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","sourceOld":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase(Locale.ENGLISH);\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase(Locale.ENGLISH) ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","sourceNew":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase(Locale.ENGLISH);\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase(Locale.ENGLISH) ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","sourceOld":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase(Locale.ENGLISH);\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase(Locale.ENGLISH) ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9279c7cd47f17e1e8b674a3741ff5f040bc680be","date":1341675760,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","sourceNew":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase(Locale.ROOT);\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase(Locale.ROOT) ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","sourceOld":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase(Locale.ENGLISH);\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase(Locale.ENGLISH) ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2acf500f78aa12b92e371fd89c719291986b6b90","date":1341846236,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","sourceNew":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase(Locale.ROOT);\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase(Locale.ROOT) ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","sourceOld":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase(Locale.ENGLISH);\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase(Locale.ENGLISH) ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","sourceNew":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase(Locale.ROOT);\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase(Locale.ROOT) ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","sourceOld":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase(Locale.ENGLISH);\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase(Locale.ENGLISH) ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","sourceNew":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase(Locale.ROOT);\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase(Locale.ROOT) ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","sourceOld":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase(Locale.ENGLISH);\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase(Locale.ENGLISH) ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","sourceNew":"  @Override\n  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase(Locale.ROOT);\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase(Locale.ROOT) ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","sourceOld":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase(Locale.ROOT);\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase(Locale.ROOT) ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7d0565444d6381434fbff66cecf07da249f2bb4","date":1357484111,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","sourceNew":"  @Override\n  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase(Locale.ROOT);\n    if (\"GET\".equals(method) || \"HEAD\".equals(method)) {\n      return SolrRequestParsers.parseQueryString(req.getQueryString());\n    }\n    if (\"POST\".equals( method ) ) {\n      if (formdata.isFormData(req)) {\n        return formdata.parseParamsAndFillStreams(req, streams);\n      }\n      if (ServletFileUpload.isMultipartContent(req)) {\n        return multipart.parseParamsAndFillStreams(req, streams);\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","sourceOld":"  @Override\n  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase(Locale.ROOT);\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase(Locale.ROOT) ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","sourceNew":"  @Override\n  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase(Locale.ROOT);\n    if (\"GET\".equals(method) || \"HEAD\".equals(method)) {\n      return SolrRequestParsers.parseQueryString(req.getQueryString());\n    }\n    if (\"POST\".equals( method ) ) {\n      if (formdata.isFormData(req)) {\n        return formdata.parseParamsAndFillStreams(req, streams);\n      }\n      if (ServletFileUpload.isMultipartContent(req)) {\n        return multipart.parseParamsAndFillStreams(req, streams);\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","sourceOld":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase(Locale.ROOT);\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase(Locale.ROOT) ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08970e5b8411182a29412c177eff67ec1110095b","date":1366640815,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","sourceNew":"  @Override\n  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase(Locale.ROOT);\n    if (\"GET\".equals(method) || \"HEAD\".equals(method) \n        || (\"PUT\".equals(method) && req.getRequestURI().contains(\"/schema\"))) {\n      return SolrRequestParsers.parseQueryString(req.getQueryString());\n    }\n    if (\"POST\".equals( method ) ) {\n      if (formdata.isFormData(req)) {\n        return formdata.parseParamsAndFillStreams(req, streams);\n      }\n      if (ServletFileUpload.isMultipartContent(req)) {\n        return multipart.parseParamsAndFillStreams(req, streams);\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException(ErrorCode.BAD_REQUEST, \"Unsupported method: \" + method + \" for request \" + req);\n  }\n\n","sourceOld":"  @Override\n  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase(Locale.ROOT);\n    if (\"GET\".equals(method) || \"HEAD\".equals(method)) {\n      return SolrRequestParsers.parseQueryString(req.getQueryString());\n    }\n    if (\"POST\".equals( method ) ) {\n      if (formdata.isFormData(req)) {\n        return formdata.parseParamsAndFillStreams(req, streams);\n      }\n      if (ServletFileUpload.isMultipartContent(req)) {\n        return multipart.parseParamsAndFillStreams(req, streams);\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d9ecbe4fecfad4689ea50a5ece2b815854aacdf","date":1374966910,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","sourceNew":null,"sourceOld":"  @Override\n  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase(Locale.ROOT);\n    if (\"GET\".equals(method) || \"HEAD\".equals(method) \n        || (\"PUT\".equals(method) && req.getRequestURI().contains(\"/schema\"))) {\n      return SolrRequestParsers.parseQueryString(req.getQueryString());\n    }\n    if (\"POST\".equals( method ) ) {\n      if (formdata.isFormData(req)) {\n        return formdata.parseParamsAndFillStreams(req, streams);\n      }\n      if (ServletFileUpload.isMultipartContent(req)) {\n        return multipart.parseParamsAndFillStreams(req, streams);\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException(ErrorCode.BAD_REQUEST, \"Unsupported method: \" + method + \" for request \" + req);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":4,"author":"Han Jiang","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","sourceNew":null,"sourceOld":"  @Override\n  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase(Locale.ROOT);\n    if (\"GET\".equals(method) || \"HEAD\".equals(method) \n        || (\"PUT\".equals(method) && req.getRequestURI().contains(\"/schema\"))) {\n      return SolrRequestParsers.parseQueryString(req.getQueryString());\n    }\n    if (\"POST\".equals( method ) ) {\n      if (formdata.isFormData(req)) {\n        return formdata.parseParamsAndFillStreams(req, streams);\n      }\n      if (ServletFileUpload.isMultipartContent(req)) {\n        return multipart.parseParamsAndFillStreams(req, streams);\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException(ErrorCode.BAD_REQUEST, \"Unsupported method: \" + method + \" for request \" + req);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["2acf500f78aa12b92e371fd89c719291986b6b90","c7d0565444d6381434fbff66cecf07da249f2bb4"],"c7d0565444d6381434fbff66cecf07da249f2bb4":["7530de27b87b961b51f01bd1299b7004d46e8823"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["08970e5b8411182a29412c177eff67ec1110095b","8d9ecbe4fecfad4689ea50a5ece2b815854aacdf"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["c26f00b574427b55127e869b935845554afde1fa"],"2acf500f78aa12b92e371fd89c719291986b6b90":["c26f00b574427b55127e869b935845554afde1fa","9279c7cd47f17e1e8b674a3741ff5f040bc680be"],"08970e5b8411182a29412c177eff67ec1110095b":["c7d0565444d6381434fbff66cecf07da249f2bb4"],"46d8ada1fff8d18cb197c38c7983225162599948":["c26f00b574427b55127e869b935845554afde1fa","2acf500f78aa12b92e371fd89c719291986b6b90"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["c26f00b574427b55127e869b935845554afde1fa","2acf500f78aa12b92e371fd89c719291986b6b90"],"8d9ecbe4fecfad4689ea50a5ece2b815854aacdf":["08970e5b8411182a29412c177eff67ec1110095b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7530de27b87b961b51f01bd1299b7004d46e8823":["2acf500f78aa12b92e371fd89c719291986b6b90"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8d9ecbe4fecfad4689ea50a5ece2b815854aacdf"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"c7d0565444d6381434fbff66cecf07da249f2bb4":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","08970e5b8411182a29412c177eff67ec1110095b"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"c26f00b574427b55127e869b935845554afde1fa":["9279c7cd47f17e1e8b674a3741ff5f040bc680be","2acf500f78aa12b92e371fd89c719291986b6b90","46d8ada1fff8d18cb197c38c7983225162599948","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["2acf500f78aa12b92e371fd89c719291986b6b90"],"2acf500f78aa12b92e371fd89c719291986b6b90":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","46d8ada1fff8d18cb197c38c7983225162599948","fe33227f6805edab2036cbb80645cc4e2d1fa424","7530de27b87b961b51f01bd1299b7004d46e8823"],"08970e5b8411182a29412c177eff67ec1110095b":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","8d9ecbe4fecfad4689ea50a5ece2b815854aacdf"],"46d8ada1fff8d18cb197c38c7983225162599948":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"8d9ecbe4fecfad4689ea50a5ece2b815854aacdf":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["c7d0565444d6381434fbff66cecf07da249f2bb4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","46d8ada1fff8d18cb197c38c7983225162599948","fe33227f6805edab2036cbb80645cc4e2d1fa424","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}