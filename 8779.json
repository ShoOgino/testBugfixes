{"path":"lucene/core/src/java/org/apache/lucene/search/DoubleValuesSource#explain(LeafReaderContext,int,Explanation).mjava","commits":[{"id":"501fdb8d708778ae5368dd5c44879e1d46487e43","date":1494401395,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DoubleValuesSource#explain(LeafReaderContext,int,Explanation).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * An explanation of the value for the named document.\n   *\n   * @param ctx the readers context to create the {@link Explanation} for.\n   * @param docId the document's id relative to the given context's reader\n   * @return an Explanation for the value\n   * @throws IOException if an {@link IOException} occurs\n   */\n  public abstract Explanation explain(LeafReaderContext ctx, int docId, Explanation scoreExplanation) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DoubleValuesSource#explain(LeafReaderContext,int,Explanation).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * An explanation of the value for the named document.\n   *\n   * @param ctx the readers context to create the {@link Explanation} for.\n   * @param docId the document's id relative to the given context's reader\n   * @return an Explanation for the value\n   * @throws IOException if an {@link IOException} occurs\n   */\n  public abstract Explanation explain(LeafReaderContext ctx, int docId, Explanation scoreExplanation) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"32b9119890a8e82252b6cc341ac491d18fa1e49b","date":1498575219,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DoubleValuesSource#explain(LeafReaderContext,int,Explanation).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/DoubleValuesSource#explain(LeafReaderContext,int,Explanation).mjava","sourceNew":"  /**\n   * An explanation of the value for the named document.\n   *\n   * @param ctx the readers context to create the {@link Explanation} for.\n   * @param docId the document's id relative to the given context's reader\n   * @return an Explanation for the value\n   * @throws IOException if an {@link IOException} occurs\n   */\n  public Explanation explain(LeafReaderContext ctx, int docId, Explanation scoreExplanation) throws IOException {\n    DoubleValues dv = getValues(ctx, DoubleValuesSource.constant(scoreExplanation.getValue()).getValues(ctx, null));\n    if (dv.advanceExact(docId))\n      return Explanation.match((float) dv.doubleValue(), this.toString());\n    return Explanation.noMatch(this.toString());\n  }\n\n","sourceOld":"  /**\n   * An explanation of the value for the named document.\n   *\n   * @param ctx the readers context to create the {@link Explanation} for.\n   * @param docId the document's id relative to the given context's reader\n   * @return an Explanation for the value\n   * @throws IOException if an {@link IOException} occurs\n   */\n  public abstract Explanation explain(LeafReaderContext ctx, int docId, Explanation scoreExplanation) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98f11c416d30e556e0004a9a84960702d12d35b1","date":1498628359,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DoubleValuesSource#explain(LeafReaderContext,int,Explanation).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/DoubleValuesSource#explain(LeafReaderContext,int,Explanation).mjava","sourceNew":"  /**\n   * An explanation of the value for the named document.\n   *\n   * @param ctx the readers context to create the {@link Explanation} for.\n   * @param docId the document's id relative to the given context's reader\n   * @return an Explanation for the value\n   * @throws IOException if an {@link IOException} occurs\n   */\n  public Explanation explain(LeafReaderContext ctx, int docId, Explanation scoreExplanation) throws IOException {\n    DoubleValues dv = getValues(ctx, DoubleValuesSource.constant(scoreExplanation.getValue()).getValues(ctx, null));\n    if (dv.advanceExact(docId))\n      return Explanation.match((float) dv.doubleValue(), this.toString());\n    return Explanation.noMatch(this.toString());\n  }\n\n","sourceOld":"  /**\n   * An explanation of the value for the named document.\n   *\n   * @param ctx the readers context to create the {@link Explanation} for.\n   * @param docId the document's id relative to the given context's reader\n   * @return an Explanation for the value\n   * @throws IOException if an {@link IOException} occurs\n   */\n  public abstract Explanation explain(LeafReaderContext ctx, int docId, Explanation scoreExplanation) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DoubleValuesSource#explain(LeafReaderContext,int,Explanation).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/DoubleValuesSource#explain(LeafReaderContext,int,Explanation).mjava","sourceNew":"  /**\n   * An explanation of the value for the named document.\n   *\n   * @param ctx the readers context to create the {@link Explanation} for.\n   * @param docId the document's id relative to the given context's reader\n   * @return an Explanation for the value\n   * @throws IOException if an {@link IOException} occurs\n   */\n  public Explanation explain(LeafReaderContext ctx, int docId, Explanation scoreExplanation) throws IOException {\n    DoubleValues dv = getValues(ctx, DoubleValuesSource.constant(scoreExplanation.getValue()).getValues(ctx, null));\n    if (dv.advanceExact(docId))\n      return Explanation.match((float) dv.doubleValue(), this.toString());\n    return Explanation.noMatch(this.toString());\n  }\n\n","sourceOld":"  /**\n   * An explanation of the value for the named document.\n   *\n   * @param ctx the readers context to create the {@link Explanation} for.\n   * @param docId the document's id relative to the given context's reader\n   * @return an Explanation for the value\n   * @throws IOException if an {@link IOException} occurs\n   */\n  public abstract Explanation explain(LeafReaderContext ctx, int docId, Explanation scoreExplanation) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf","date":1514891219,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DoubleValuesSource#explain(LeafReaderContext,int,Explanation).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/DoubleValuesSource#explain(LeafReaderContext,int,Explanation).mjava","sourceNew":"  /**\n   * An explanation of the value for the named document.\n   *\n   * @param ctx the readers context to create the {@link Explanation} for.\n   * @param docId the document's id relative to the given context's reader\n   * @return an Explanation for the value\n   * @throws IOException if an {@link IOException} occurs\n   */\n  public Explanation explain(LeafReaderContext ctx, int docId, Explanation scoreExplanation) throws IOException {\n    DoubleValues dv = getValues(ctx, DoubleValuesSource.constant(scoreExplanation.getValue().doubleValue()).getValues(ctx, null));\n    if (dv.advanceExact(docId))\n      return Explanation.match(dv.doubleValue(), this.toString());\n    return Explanation.noMatch(this.toString());\n  }\n\n","sourceOld":"  /**\n   * An explanation of the value for the named document.\n   *\n   * @param ctx the readers context to create the {@link Explanation} for.\n   * @param docId the document's id relative to the given context's reader\n   * @return an Explanation for the value\n   * @throws IOException if an {@link IOException} occurs\n   */\n  public Explanation explain(LeafReaderContext ctx, int docId, Explanation scoreExplanation) throws IOException {\n    DoubleValues dv = getValues(ctx, DoubleValuesSource.constant(scoreExplanation.getValue()).getValues(ctx, null));\n    if (dv.advanceExact(docId))\n      return Explanation.match((float) dv.doubleValue(), this.toString());\n    return Explanation.noMatch(this.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"32b9119890a8e82252b6cc341ac491d18fa1e49b":["501fdb8d708778ae5368dd5c44879e1d46487e43"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","501fdb8d708778ae5368dd5c44879e1d46487e43"],"501fdb8d708778ae5368dd5c44879e1d46487e43":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf":["28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"28288370235ed02234a64753cdbf0c6ec096304a":["501fdb8d708778ae5368dd5c44879e1d46487e43","32b9119890a8e82252b6cc341ac491d18fa1e49b"],"98f11c416d30e556e0004a9a84960702d12d35b1":["e9017cf144952056066919f1ebc7897ff9bd71b1","32b9119890a8e82252b6cc341ac491d18fa1e49b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf"]},"commit2Childs":{"32b9119890a8e82252b6cc341ac491d18fa1e49b":["28288370235ed02234a64753cdbf0c6ec096304a","98f11c416d30e556e0004a9a84960702d12d35b1"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["98f11c416d30e556e0004a9a84960702d12d35b1"],"501fdb8d708778ae5368dd5c44879e1d46487e43":["32b9119890a8e82252b6cc341ac491d18fa1e49b","e9017cf144952056066919f1ebc7897ff9bd71b1","28288370235ed02234a64753cdbf0c6ec096304a"],"b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","501fdb8d708778ae5368dd5c44879e1d46487e43"],"28288370235ed02234a64753cdbf0c6ec096304a":["b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf"],"98f11c416d30e556e0004a9a84960702d12d35b1":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["98f11c416d30e556e0004a9a84960702d12d35b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}