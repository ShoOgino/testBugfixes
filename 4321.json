{"path":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getFirstMatch(Term).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getFirstMatch(Term).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the first document number containing the term <code>t</code>\n   * Returns -1 if no document was found.\n   * This method is primarily intended for clients that want to fetch\n   * documents using a unique identifier.\"\n   * @param t\n   * @return the first document number containing the term\n   */\n  public int getFirstMatch(Term t) throws IOException {\n    TermDocs tdocs = null;\n    try {\n      tdocs = reader.termDocs(t);\n      if (!tdocs.next()) return -1;\n      return tdocs.doc();\n    } finally {\n      if (tdocs!=null) tdocs.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getFirstMatch(Term).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns the first document number containing the term <code>t</code>\n   * Returns -1 if no document was found.\n   * This method is primarily intended for clients that want to fetch\n   * documents using a unique identifier.\"\n   * @param t\n   * @return the first document number containing the term\n   */\n  public int getFirstMatch(Term t) throws IOException {\n    TermDocs tdocs = null;\n    try {\n      tdocs = reader.termDocs(t);\n      if (!tdocs.next()) return -1;\n      return tdocs.doc();\n    } finally {\n      if (tdocs!=null) tdocs.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getFirstMatch(Term).mjava","pathOld":"src/java/org/apache/solr/search/SolrIndexSearcher#getFirstMatch(Term).mjava","sourceNew":"  /**\n   * Returns the first document number containing the term <code>t</code>\n   * Returns -1 if no document was found.\n   * This method is primarily intended for clients that want to fetch\n   * documents using a unique identifier.\"\n   * @param t\n   * @return the first document number containing the term\n   */\n  public int getFirstMatch(Term t) throws IOException {\n    TermDocs tdocs = null;\n    try {\n      tdocs = reader.termDocs(t);\n      if (!tdocs.next()) return -1;\n      return tdocs.doc();\n    } finally {\n      if (tdocs!=null) tdocs.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns the first document number containing the term <code>t</code>\n   * Returns -1 if no document was found.\n   * This method is primarily intended for clients that want to fetch\n   * documents using a unique identifier.\"\n   * @param t\n   * @return the first document number containing the term\n   */\n  public int getFirstMatch(Term t) throws IOException {\n    TermDocs tdocs = null;\n    try {\n      tdocs = reader.termDocs(t);\n      if (!tdocs.next()) return -1;\n      return tdocs.doc();\n    } finally {\n      if (tdocs!=null) tdocs.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getFirstMatch(Term).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the first document number containing the term <code>t</code>\n   * Returns -1 if no document was found.\n   * This method is primarily intended for clients that want to fetch\n   * documents using a unique identifier.\"\n   * @param t\n   * @return the first document number containing the term\n   */\n  public int getFirstMatch(Term t) throws IOException {\n    TermDocs tdocs = null;\n    try {\n      tdocs = reader.termDocs(t);\n      if (!tdocs.next()) return -1;\n      return tdocs.doc();\n    } finally {\n      if (tdocs!=null) tdocs.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac103e727df44f5f5040f5a67860472e884aa0e3","date":1275608434,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getFirstMatch(Term).mjava","pathOld":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getFirstMatch(Term).mjava","sourceNew":"  /**\n   * Returns the first document number containing the term <code>t</code>\n   * Returns -1 if no document was found.\n   * This method is primarily intended for clients that want to fetch\n   * documents using a unique identifier.\"\n   * @param t\n   * @return the first document number containing the term\n   */\n  public int getFirstMatch(Term t) throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = new BytesRef();\n    UnicodeUtil.UTF16toUTF8(t.text(), 0, t.text().length(), termBytes);\n    DocsEnum docs = terms.docs(reader.getDeletedDocs(), termBytes, null);\n    if (docs == null) return -1;\n    int id = docs.docID();\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","sourceOld":"  /**\n   * Returns the first document number containing the term <code>t</code>\n   * Returns -1 if no document was found.\n   * This method is primarily intended for clients that want to fetch\n   * documents using a unique identifier.\"\n   * @param t\n   * @return the first document number containing the term\n   */\n  public int getFirstMatch(Term t) throws IOException {\n    TermDocs tdocs = null;\n    try {\n      tdocs = reader.termDocs(t);\n      if (!tdocs.next()) return -1;\n      return tdocs.doc();\n    } finally {\n      if (tdocs!=null) tdocs.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":["8028ab7a24273833d53d35eb160dba5b57283cf5","8028ab7a24273833d53d35eb160dba5b57283cf5","8028ab7a24273833d53d35eb160dba5b57283cf5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2da23fa5b7090ec7a4c4b09f63da2fa810cf7ee4","date":1275675989,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getFirstMatch(Term).mjava","pathOld":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getFirstMatch(Term).mjava","sourceNew":"  /**\n   * Returns the first document number containing the term <code>t</code>\n   * Returns -1 if no document was found.\n   * This method is primarily intended for clients that want to fetch\n   * documents using a unique identifier.\"\n   * @param t\n   * @return the first document number containing the term\n   */\n  public int getFirstMatch(Term t) throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = new BytesRef(t.text());\n    DocsEnum docs = terms.docs(MultiFields.getDeletedDocs(reader), termBytes, null);\n    if (docs == null) return -1;\n    int id = docs.nextDoc();\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","sourceOld":"  /**\n   * Returns the first document number containing the term <code>t</code>\n   * Returns -1 if no document was found.\n   * This method is primarily intended for clients that want to fetch\n   * documents using a unique identifier.\"\n   * @param t\n   * @return the first document number containing the term\n   */\n  public int getFirstMatch(Term t) throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = new BytesRef();\n    UnicodeUtil.UTF16toUTF8(t.text(), 0, t.text().length(), termBytes);\n    DocsEnum docs = terms.docs(reader.getDeletedDocs(), termBytes, null);\n    if (docs == null) return -1;\n    int id = docs.docID();\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","bugFix":null,"bugIntro":["8028ab7a24273833d53d35eb160dba5b57283cf5","8028ab7a24273833d53d35eb160dba5b57283cf5","8028ab7a24273833d53d35eb160dba5b57283cf5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4f29ba80b723649f5feb7e37afe1a558dd2c1304","date":1278318805,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getFirstMatch(Term).mjava","pathOld":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getFirstMatch(Term).mjava","sourceNew":"  /**\n   * Returns the first document number containing the term <code>t</code>\n   * Returns -1 if no document was found.\n   * This method is primarily intended for clients that want to fetch\n   * documents using a unique identifier.\"\n   * @param t\n   * @return the first document number containing the term\n   */\n  public int getFirstMatch(Term t) throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    DocsEnum docs = terms.docs(MultiFields.getDeletedDocs(reader), termBytes, null);\n    if (docs == null) return -1;\n    int id = docs.nextDoc();\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","sourceOld":"  /**\n   * Returns the first document number containing the term <code>t</code>\n   * Returns -1 if no document was found.\n   * This method is primarily intended for clients that want to fetch\n   * documents using a unique identifier.\"\n   * @param t\n   * @return the first document number containing the term\n   */\n  public int getFirstMatch(Term t) throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = new BytesRef(t.text());\n    DocsEnum docs = terms.docs(MultiFields.getDeletedDocs(reader), termBytes, null);\n    if (docs == null) return -1;\n    int id = docs.nextDoc();\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getFirstMatch(Term).mjava","pathOld":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getFirstMatch(Term).mjava","sourceNew":"  /**\n   * Returns the first document number containing the term <code>t</code>\n   * Returns -1 if no document was found.\n   * This method is primarily intended for clients that want to fetch\n   * documents using a unique identifier.\"\n   * @param t\n   * @return the first document number containing the term\n   */\n  public int getFirstMatch(Term t) throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    DocsEnum docs = terms.docs(MultiFields.getDeletedDocs(reader), termBytes, null);\n    if (docs == null) return -1;\n    int id = docs.nextDoc();\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","sourceOld":"  /**\n   * Returns the first document number containing the term <code>t</code>\n   * Returns -1 if no document was found.\n   * This method is primarily intended for clients that want to fetch\n   * documents using a unique identifier.\"\n   * @param t\n   * @return the first document number containing the term\n   */\n  public int getFirstMatch(Term t) throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = new BytesRef(t.text());\n    DocsEnum docs = terms.docs(MultiFields.getDeletedDocs(reader), termBytes, null);\n    if (docs == null) return -1;\n    int id = docs.nextDoc();\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","date":1309960478,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getFirstMatch(Term).mjava","pathOld":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getFirstMatch(Term).mjava","sourceNew":"  /**\n   * Returns the first document number containing the term <code>t</code>\n   * Returns -1 if no document was found.\n   * This method is primarily intended for clients that want to fetch\n   * documents using a unique identifier.\"\n   * @param t\n   * @return the first document number containing the term\n   */\n  public int getFirstMatch(Term t) throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    DocsEnum docs = terms.docs(MultiFields.getLiveDocs(reader), termBytes, null);\n    if (docs == null) return -1;\n    int id = docs.nextDoc();\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","sourceOld":"  /**\n   * Returns the first document number containing the term <code>t</code>\n   * Returns -1 if no document was found.\n   * This method is primarily intended for clients that want to fetch\n   * documents using a unique identifier.\"\n   * @param t\n   * @return the first document number containing the term\n   */\n  public int getFirstMatch(Term t) throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    DocsEnum docs = terms.docs(MultiFields.getDeletedDocs(reader), termBytes, null);\n    if (docs == null) return -1;\n    int id = docs.nextDoc();\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getFirstMatch(Term).mjava","pathOld":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getFirstMatch(Term).mjava","sourceNew":"  /**\n   * Returns the first document number containing the term <code>t</code>\n   * Returns -1 if no document was found.\n   * This method is primarily intended for clients that want to fetch\n   * documents using a unique identifier.\"\n   * @param t\n   * @return the first document number containing the term\n   */\n  public int getFirstMatch(Term t) throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    DocsEnum docs = terms.docs(MultiFields.getLiveDocs(reader), termBytes, null);\n    if (docs == null) return -1;\n    int id = docs.nextDoc();\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","sourceOld":"  /**\n   * Returns the first document number containing the term <code>t</code>\n   * Returns -1 if no document was found.\n   * This method is primarily intended for clients that want to fetch\n   * documents using a unique identifier.\"\n   * @param t\n   * @return the first document number containing the term\n   */\n  public int getFirstMatch(Term t) throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    DocsEnum docs = terms.docs(MultiFields.getDeletedDocs(reader), termBytes, null);\n    if (docs == null) return -1;\n    int id = docs.nextDoc();\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getFirstMatch(Term).mjava","pathOld":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getFirstMatch(Term).mjava","sourceNew":"  /**\n   * Returns the first document number containing the term <code>t</code>\n   * Returns -1 if no document was found.\n   * This method is primarily intended for clients that want to fetch\n   * documents using a unique identifier.\"\n   * @param t\n   * @return the first document number containing the term\n   */\n  public int getFirstMatch(Term t) throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    DocsEnum docs = terms.docs(MultiFields.getLiveDocs(reader), termBytes, null);\n    if (docs == null) return -1;\n    int id = docs.nextDoc();\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","sourceOld":"  /**\n   * Returns the first document number containing the term <code>t</code>\n   * Returns -1 if no document was found.\n   * This method is primarily intended for clients that want to fetch\n   * documents using a unique identifier.\"\n   * @param t\n   * @return the first document number containing the term\n   */\n  public int getFirstMatch(Term t) throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    DocsEnum docs = terms.docs(MultiFields.getDeletedDocs(reader), termBytes, null);\n    if (docs == null) return -1;\n    int id = docs.nextDoc();\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#getFirstMatch(Term).mjava","pathOld":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getFirstMatch(Term).mjava","sourceNew":"  /**\n   * Returns the first document number containing the term <code>t</code>\n   * Returns -1 if no document was found.\n   * This method is primarily intended for clients that want to fetch\n   * documents using a unique identifier.\"\n   * @param t\n   * @return the first document number containing the term\n   */\n  public int getFirstMatch(Term t) throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    DocsEnum docs = terms.docs(MultiFields.getLiveDocs(reader), termBytes, null);\n    if (docs == null) return -1;\n    int id = docs.nextDoc();\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","sourceOld":"  /**\n   * Returns the first document number containing the term <code>t</code>\n   * Returns -1 if no document was found.\n   * This method is primarily intended for clients that want to fetch\n   * documents using a unique identifier.\"\n   * @param t\n   * @return the first document number containing the term\n   */\n  public int getFirstMatch(Term t) throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    DocsEnum docs = terms.docs(MultiFields.getLiveDocs(reader), termBytes, null);\n    if (docs == null) return -1;\n    int id = docs.nextDoc();\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#getFirstMatch(Term).mjava","pathOld":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getFirstMatch(Term).mjava","sourceNew":"  /**\n   * Returns the first document number containing the term <code>t</code>\n   * Returns -1 if no document was found.\n   * This method is primarily intended for clients that want to fetch\n   * documents using a unique identifier.\"\n   * @param t\n   * @return the first document number containing the term\n   */\n  public int getFirstMatch(Term t) throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    DocsEnum docs = terms.docs(MultiFields.getLiveDocs(reader), termBytes, null);\n    if (docs == null) return -1;\n    int id = docs.nextDoc();\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","sourceOld":"  /**\n   * Returns the first document number containing the term <code>t</code>\n   * Returns -1 if no document was found.\n   * This method is primarily intended for clients that want to fetch\n   * documents using a unique identifier.\"\n   * @param t\n   * @return the first document number containing the term\n   */\n  public int getFirstMatch(Term t) throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    DocsEnum docs = terms.docs(MultiFields.getLiveDocs(reader), termBytes, null);\n    if (docs == null) return -1;\n    int id = docs.nextDoc();\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#getFirstMatch(Term).mjava","pathOld":"solr/src/java/org/apache/solr/search/SolrIndexSearcher#getFirstMatch(Term).mjava","sourceNew":"  /**\n   * Returns the first document number containing the term <code>t</code>\n   * Returns -1 if no document was found.\n   * This method is primarily intended for clients that want to fetch\n   * documents using a unique identifier.\"\n   * @param t\n   * @return the first document number containing the term\n   */\n  public int getFirstMatch(Term t) throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    DocsEnum docs = terms.docs(MultiFields.getLiveDocs(reader), termBytes, null);\n    if (docs == null) return -1;\n    int id = docs.nextDoc();\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","sourceOld":"  /**\n   * Returns the first document number containing the term <code>t</code>\n   * Returns -1 if no document was found.\n   * This method is primarily intended for clients that want to fetch\n   * documents using a unique identifier.\"\n   * @param t\n   * @return the first document number containing the term\n   */\n  public int getFirstMatch(Term t) throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    DocsEnum docs = terms.docs(MultiFields.getLiveDocs(reader), termBytes, null);\n    if (docs == null) return -1;\n    int id = docs.nextDoc();\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"4f29ba80b723649f5feb7e37afe1a558dd2c1304":["2da23fa5b7090ec7a4c4b09f63da2fa810cf7ee4"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["4f29ba80b723649f5feb7e37afe1a558dd2c1304"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"5f4e87790277826a2aea119328600dfb07761f32":["2da23fa5b7090ec7a4c4b09f63da2fa810cf7ee4","4f29ba80b723649f5feb7e37afe1a558dd2c1304"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["4f29ba80b723649f5feb7e37afe1a558dd2c1304","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["4f29ba80b723649f5feb7e37afe1a558dd2c1304","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"2da23fa5b7090ec7a4c4b09f63da2fa810cf7ee4":["ac103e727df44f5f5040f5a67860472e884aa0e3"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["817d8435e9135b756f08ce6710ab0baac51bdf88"],"ac103e727df44f5f5040f5a67860472e884aa0e3":["1da8d55113b689b06716246649de6f62430f15c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"4f29ba80b723649f5feb7e37afe1a558dd2c1304":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","5f4e87790277826a2aea119328600dfb07761f32","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["c26f00b574427b55127e869b935845554afde1fa","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","a258fbb26824fd104ed795e5d9033d2d040049ee"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"5f4e87790277826a2aea119328600dfb07761f32":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":["c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"1da8d55113b689b06716246649de6f62430f15c0":["ac103e727df44f5f5040f5a67860472e884aa0e3"],"2da23fa5b7090ec7a4c4b09f63da2fa810cf7ee4":["4f29ba80b723649f5feb7e37afe1a558dd2c1304","5f4e87790277826a2aea119328600dfb07761f32"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"ac103e727df44f5f5040f5a67860472e884aa0e3":["2da23fa5b7090ec7a4c4b09f63da2fa810cf7ee4"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5f4e87790277826a2aea119328600dfb07761f32","d083e83f225b11e5fdd900e83d26ddb385b6955c","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}