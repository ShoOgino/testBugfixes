{"path":"solr/src/test/org/apache/solr/JSONTestUtil#match(String,String).mjava","commits":[{"id":"7d5f59e6aef470c175c845a8c96ea65f20ae4c1f","date":1282318824,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/JSONTestUtil#match(String,String).mjava","pathOld":"/dev/null","sourceNew":"  public static String match(String input, String pathAndExpected) throws Exception {\r\n    int pos = pathAndExpected.indexOf(':');\r\n    String path = pos>=0 ? pathAndExpected.substring(0,pos) : null;\r\n    String expected = pos>=0 ? pathAndExpected.substring(pos+1) : pathAndExpected;\r\n    return match(path, input, expected);\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4723db11f8550520912d26e73d0d91869f9eedd2","date":1284919173,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/JSONTestUtil#match(String,String).mjava","pathOld":"solr/src/test/org/apache/solr/JSONTestUtil#match(String,String).mjava","sourceNew":"  public static String match(String input, String pathAndExpected) throws Exception {\r\n    int pos = pathAndExpected.indexOf(\"==\");\r\n    String path = pos>=0 ? pathAndExpected.substring(0,pos) : null;\r\n    String expected = pos>=0 ? pathAndExpected.substring(pos+2) : pathAndExpected;\r\n    return match(path, input, expected);\r\n  }\r\n\n","sourceOld":"  public static String match(String input, String pathAndExpected) throws Exception {\r\n    int pos = pathAndExpected.indexOf(':');\r\n    String path = pos>=0 ? pathAndExpected.substring(0,pos) : null;\r\n    String expected = pos>=0 ? pathAndExpected.substring(pos+1) : pathAndExpected;\r\n    return match(path, input, expected);\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e904610f0db3fdf2ea10c5701f5f4f86c1e9ade","date":1286051536,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/JSONTestUtil#match(String,String).mjava","pathOld":"solr/src/test/org/apache/solr/JSONTestUtil#match(String,String).mjava","sourceNew":"  public static String match(String input, String pathAndExpected) throws Exception {\n    int pos = pathAndExpected.indexOf(\"==\");\n    String path = pos>=0 ? pathAndExpected.substring(0,pos) : null;\n    String expected = pos>=0 ? pathAndExpected.substring(pos+2) : pathAndExpected;\n    return match(path, input, expected);\n  }\n\n","sourceOld":"  public static String match(String input, String pathAndExpected) throws Exception {\r\n    int pos = pathAndExpected.indexOf(\"==\");\r\n    String path = pos>=0 ? pathAndExpected.substring(0,pos) : null;\r\n    String expected = pos>=0 ? pathAndExpected.substring(pos+2) : pathAndExpected;\r\n    return match(path, input, expected);\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/JSONTestUtil#match(String,String).mjava","pathOld":"/dev/null","sourceNew":"  public static String match(String input, String pathAndExpected) throws Exception {\n    int pos = pathAndExpected.indexOf(\"==\");\n    String path = pos>=0 ? pathAndExpected.substring(0,pos) : null;\n    String expected = pos>=0 ? pathAndExpected.substring(pos+2) : pathAndExpected;\n    return match(path, input, expected);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d20d5e40789b1c42f4f926e3174b271256c43657","date":1301641092,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test-framework/org/apache/solr/JSONTestUtil#match(String,String).mjava","pathOld":"solr/src/test/org/apache/solr/JSONTestUtil#match(String,String).mjava","sourceNew":"  public static String match(String input, String pathAndExpected) throws Exception {\n    int pos = pathAndExpected.indexOf(\"==\");\n    String path = pos>=0 ? pathAndExpected.substring(0,pos) : null;\n    String expected = pos>=0 ? pathAndExpected.substring(pos+2) : pathAndExpected;\n    return match(path, input, expected);\n  }\n\n","sourceOld":"  public static String match(String input, String pathAndExpected) throws Exception {\n    int pos = pathAndExpected.indexOf(\"==\");\n    String path = pos>=0 ? pathAndExpected.substring(0,pos) : null;\n    String expected = pos>=0 ? pathAndExpected.substring(pos+2) : pathAndExpected;\n    return match(path, input, expected);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b09c7419b92e982a901698cb401ce22ac35e4b04","date":1301668869,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/src/test-framework/org/apache/solr/JSONTestUtil#match(String,String).mjava","pathOld":"solr/src/test/org/apache/solr/JSONTestUtil#match(String,String).mjava","sourceNew":"  public static String match(String input, String pathAndExpected) throws Exception {\n    int pos = pathAndExpected.indexOf(\"==\");\n    String path = pos>=0 ? pathAndExpected.substring(0,pos) : null;\n    String expected = pos>=0 ? pathAndExpected.substring(pos+2) : pathAndExpected;\n    return match(path, input, expected);\n  }\n\n","sourceOld":"  public static String match(String input, String pathAndExpected) throws Exception {\n    int pos = pathAndExpected.indexOf(\"==\");\n    String path = pos>=0 ? pathAndExpected.substring(0,pos) : null;\n    String expected = pos>=0 ? pathAndExpected.substring(pos+2) : pathAndExpected;\n    return match(path, input, expected);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test-framework/org/apache/solr/JSONTestUtil#match(String,String).mjava","pathOld":"solr/src/test/org/apache/solr/JSONTestUtil#match(String,String).mjava","sourceNew":"  public static String match(String input, String pathAndExpected) throws Exception {\n    int pos = pathAndExpected.indexOf(\"==\");\n    String path = pos>=0 ? pathAndExpected.substring(0,pos) : null;\n    String expected = pos>=0 ? pathAndExpected.substring(pos+2) : pathAndExpected;\n    return match(path, input, expected);\n  }\n\n","sourceOld":"  public static String match(String input, String pathAndExpected) throws Exception {\n    int pos = pathAndExpected.indexOf(\"==\");\n    String path = pos>=0 ? pathAndExpected.substring(0,pos) : null;\n    String expected = pos>=0 ? pathAndExpected.substring(pos+2) : pathAndExpected;\n    return match(path, input, expected);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test-framework/org/apache/solr/JSONTestUtil#match(String,String).mjava","pathOld":"solr/src/test/org/apache/solr/JSONTestUtil#match(String,String).mjava","sourceNew":"  public static String match(String input, String pathAndExpected) throws Exception {\n    int pos = pathAndExpected.indexOf(\"==\");\n    String path = pos>=0 ? pathAndExpected.substring(0,pos) : null;\n    String expected = pos>=0 ? pathAndExpected.substring(pos+2) : pathAndExpected;\n    return match(path, input, expected);\n  }\n\n","sourceOld":"  public static String match(String input, String pathAndExpected) throws Exception {\n    int pos = pathAndExpected.indexOf(\"==\");\n    String path = pos>=0 ? pathAndExpected.substring(0,pos) : null;\n    String expected = pos>=0 ? pathAndExpected.substring(pos+2) : pathAndExpected;\n    return match(path, input, expected);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3e904610f0db3fdf2ea10c5701f5f4f86c1e9ade":["4723db11f8550520912d26e73d0d91869f9eedd2"],"7d5f59e6aef470c175c845a8c96ea65f20ae4c1f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4723db11f8550520912d26e73d0d91869f9eedd2":["7d5f59e6aef470c175c845a8c96ea65f20ae4c1f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["3e904610f0db3fdf2ea10c5701f5f4f86c1e9ade","b09c7419b92e982a901698cb401ce22ac35e4b04"],"b09c7419b92e982a901698cb401ce22ac35e4b04":["3e904610f0db3fdf2ea10c5701f5f4f86c1e9ade"],"d20d5e40789b1c42f4f926e3174b271256c43657":["3e904610f0db3fdf2ea10c5701f5f4f86c1e9ade"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3e904610f0db3fdf2ea10c5701f5f4f86c1e9ade"],"45669a651c970812a680841b97a77cce06af559f":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b09c7419b92e982a901698cb401ce22ac35e4b04"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b09c7419b92e982a901698cb401ce22ac35e4b04"]},"commit2Childs":{"3e904610f0db3fdf2ea10c5701f5f4f86c1e9ade":["135621f3a0670a9394eb563224a3b76cc4dddc0f","b09c7419b92e982a901698cb401ce22ac35e4b04","d20d5e40789b1c42f4f926e3174b271256c43657","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7d5f59e6aef470c175c845a8c96ea65f20ae4c1f":["4723db11f8550520912d26e73d0d91869f9eedd2"],"4723db11f8550520912d26e73d0d91869f9eedd2":["3e904610f0db3fdf2ea10c5701f5f4f86c1e9ade"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7d5f59e6aef470c175c845a8c96ea65f20ae4c1f","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"b09c7419b92e982a901698cb401ce22ac35e4b04":["135621f3a0670a9394eb563224a3b76cc4dddc0f","45669a651c970812a680841b97a77cce06af559f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d20d5e40789b1c42f4f926e3174b271256c43657":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["45669a651c970812a680841b97a77cce06af559f"],"45669a651c970812a680841b97a77cce06af559f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","d20d5e40789b1c42f4f926e3174b271256c43657","45669a651c970812a680841b97a77cce06af559f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}