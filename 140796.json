{"path":"solr/core/src/test/org/apache/solr/core/TestXIncludeConfig#testXInclude().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestXIncludeConfig#testXInclude().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestXIncludeConfig#testXInclude().mjava","sourceNew":"  public void testXInclude() throws Exception {\n    //Figure out whether this JVM supports XInclude anyway, if it doesn't then don't run this test????\n    // TODO: figure out a better way to handle this.\n    if (supports == true){\n      SolrCore core = h.getCore();\n      SolrRequestHandler solrRequestHandler = core.getRequestHandler(\"includedHandler\");\n      assertNotNull(\"Solr Req Handler is null\", solrRequestHandler);\n    } else {\n      log.info(\"Didn't run testXInclude, because this XML DocumentBuilderFactory doesn't support it\");\n    }\n\n  }\n\n","sourceOld":"  public void testXInclude() throws Exception {\n    //Figure out whether this JVM supports XInclude anyway, if it doesn't then don't run this test????\n    // TODO: figure out a better way to handle this.\n    if (supports == true){\n      SolrCore core = h.getCore();\n      SolrRequestHandler solrRequestHandler = core.getRequestHandler(\"includedHandler\");\n      assertNotNull(\"Solr Req Handler is null\", solrRequestHandler);\n    } else {\n      log.info(\"Didn't run testXInclude, because this XML DocumentBuilderFactory doesn't support it\");\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestXIncludeConfig#testXInclude().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestXIncludeConfig#testXInclude().mjava","sourceNew":"  public void testXInclude() throws Exception {\n    //Figure out whether this JVM supports XInclude anyway, if it doesn't then don't run this test????\n    // TODO: figure out a better way to handle this.\n    if (supports == true){\n      SolrCore core = h.getCore();\n      SolrRequestHandler solrRequestHandler = core.getRequestHandler(\"includedHandler\");\n      assertNotNull(\"Solr Req Handler is null\", solrRequestHandler);\n    } else {\n      log.info(\"Didn't run testXInclude, because this XML DocumentBuilderFactory doesn't support it\");\n    }\n\n  }\n\n","sourceOld":"  public void testXInclude() throws Exception {\n    //Figure out whether this JVM supports XInclude anyway, if it doesn't then don't run this test????\n    // TODO: figure out a better way to handle this.\n    if (supports == true){\n      SolrCore core = h.getCore();\n      SolrRequestHandler solrRequestHandler = core.getRequestHandler(\"includedHandler\");\n      assertNotNull(\"Solr Req Handler is null\", solrRequestHandler);\n    } else {\n      log.info(\"Didn't run testXInclude, because this XML DocumentBuilderFactory doesn't support it\");\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestXIncludeConfig#testXInclude().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestXIncludeConfig#testXInclude().mjava","sourceNew":"  public void testXInclude() throws Exception {\n    //Figure out whether this JVM supports XInclude anyway, if it doesn't then don't run this test????\n    // TODO: figure out a better way to handle this.\n    if (supports == true){\n      SolrCore core = h.getCore();\n      SolrRequestHandler solrRequestHandler = core.getRequestHandler(\"includedHandler\");\n      assertNotNull(\"Solr Req Handler is null\", solrRequestHandler);\n    } else {\n      log.info(\"Didn't run testXInclude, because this XML DocumentBuilderFactory doesn't support it\");\n    }\n\n  }\n\n","sourceOld":"  public void testXInclude() throws Exception {\n    //Figure out whether this JVM supports XInclude anyway, if it doesn't then don't run this test????\n    // TODO: figure out a better way to handle this.\n    if (supports == true){\n      SolrCore core = h.getCore();\n      SolrRequestHandler solrRequestHandler = core.getRequestHandler(\"includedHandler\");\n      assertNotNull(\"Solr Req Handler is null\", solrRequestHandler);\n    } else {\n      log.info(\"Didn't run testXInclude, because this XML DocumentBuilderFactory doesn't support it\");\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"01d76482f7852933b2bd5e38ada012a2f2578b1c","date":1348090450,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestXIncludeConfig#testXInclude().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestXIncludeConfig#testXInclude().mjava","sourceNew":"  public void testXInclude() throws Exception {\n    SolrCore core = h.getCore();\n\n    assertNotNull(\"includedHandler is null\", \n                  core.getRequestHandler(\"includedHandler\"));\n\n    UpdateRequestProcessorChain chain \n      = core.getUpdateProcessingChain(\"special-include\");\n    assertNotNull(\"chain is missing included processor\", chain);\n    assertEquals(\"chain with inclued processor is wrong size\", \n                 1, chain.getFactories().length);\n    assertEquals(\"chain has wrong included processor\",\n                 RegexReplaceProcessorFactory.class,\n                 chain.getFactories()[0].getClass());\n\n    assertNotNull(\"ft-included is null\",\n                  core.getSchema().getFieldTypeByName(\"ft-included\"));\n    assertNotNull(\"field-included is null\",\n                  core.getSchema().getFieldOrNull(\"field-included\"));\n  }\n\n","sourceOld":"  public void testXInclude() throws Exception {\n    //Figure out whether this JVM supports XInclude anyway, if it doesn't then don't run this test????\n    // TODO: figure out a better way to handle this.\n    if (supports == true){\n      SolrCore core = h.getCore();\n      SolrRequestHandler solrRequestHandler = core.getRequestHandler(\"includedHandler\");\n      assertNotNull(\"Solr Req Handler is null\", solrRequestHandler);\n    } else {\n      log.info(\"Didn't run testXInclude, because this XML DocumentBuilderFactory doesn't support it\");\n    }\n\n  }\n\n","bugFix":["cb56b00bd6a03813174010af6d11825f8577e8a9","9ce83f0d72db4660fd277a9d357698004d8f4336","75c43d9940a1cc4d7a68efdc5e8238ac282adcc1"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08970e5b8411182a29412c177eff67ec1110095b","date":1366640815,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestXIncludeConfig#testXInclude().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestXIncludeConfig#testXInclude().mjava","sourceNew":"  public void testXInclude() throws Exception {\n    SolrCore core = h.getCore();\n\n    assertNotNull(\"includedHandler is null\", \n                  core.getRequestHandler(\"includedHandler\"));\n\n    UpdateRequestProcessorChain chain \n      = core.getUpdateProcessingChain(\"special-include\");\n    assertNotNull(\"chain is missing included processor\", chain);\n    assertEquals(\"chain with inclued processor is wrong size\", \n                 1, chain.getFactories().length);\n    assertEquals(\"chain has wrong included processor\",\n                 RegexReplaceProcessorFactory.class,\n                 chain.getFactories()[0].getClass());\n\n    IndexSchema schema = core.getLatestSchema();\n    assertNotNull(\"ft-included is null\", schema.getFieldTypeByName(\"ft-included\"));\n    assertNotNull(\"field-included is null\", schema.getFieldOrNull(\"field-included\"));\n  }\n\n","sourceOld":"  public void testXInclude() throws Exception {\n    SolrCore core = h.getCore();\n\n    assertNotNull(\"includedHandler is null\", \n                  core.getRequestHandler(\"includedHandler\"));\n\n    UpdateRequestProcessorChain chain \n      = core.getUpdateProcessingChain(\"special-include\");\n    assertNotNull(\"chain is missing included processor\", chain);\n    assertEquals(\"chain with inclued processor is wrong size\", \n                 1, chain.getFactories().length);\n    assertEquals(\"chain has wrong included processor\",\n                 RegexReplaceProcessorFactory.class,\n                 chain.getFactories()[0].getClass());\n\n    assertNotNull(\"ft-included is null\",\n                  core.getSchema().getFieldTypeByName(\"ft-included\"));\n    assertNotNull(\"field-included is null\",\n                  core.getSchema().getFieldOrNull(\"field-included\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6ead980c1720ddbd01d93b24ff364f7a43c7e904","date":1374515708,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestXIncludeConfig#testXInclude().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestXIncludeConfig#testXInclude().mjava","sourceNew":"  public void testXInclude() throws Exception {\n    SolrCore core = h.getCore();\n\n    assertNotNull(\"includedHandler is null\", \n                  core.getRequestHandler(\"includedHandler\"));\n\n    UpdateRequestProcessorChain chain \n      = core.getUpdateProcessingChain(\"special-include\");\n    assertNotNull(\"chain is missing included processor\", chain);\n    assertEquals(\"chain with inclued processor is wrong size\", \n                 1, chain.getFactories().length);\n    assertEquals(\"chain has wrong included processor\",\n                 RegexReplaceProcessorFactory.class,\n                 chain.getFactories()[0].getClass());\n\n    IndexSchema schema = core.getLatestSchema();\n    \n    // xinclude\n    assertNotNull(\"ft-included is null\", schema.getFieldTypeByName(\"ft-included\"));\n    assertNotNull(\"field-included is null\", schema.getFieldOrNull(\"field-included\"));\n\n    // entity include\n    assertNotNull(\"ft-entity-include1 is null\", \n                  schema.getFieldTypeByName(\"ft-entity-include1\"));\n    assertNotNull(\"ft-entity-include2 is null\", \n                  schema.getFieldTypeByName(\"ft-entity-include2\"));\n\n    // sanity check\n    assertNull(\"ft-entity-include3 is not null\",  // Does Not Exist Anywhere\n               schema.getFieldTypeByName(\"ft-entity-include3\"));\n\n  }\n\n","sourceOld":"  public void testXInclude() throws Exception {\n    SolrCore core = h.getCore();\n\n    assertNotNull(\"includedHandler is null\", \n                  core.getRequestHandler(\"includedHandler\"));\n\n    UpdateRequestProcessorChain chain \n      = core.getUpdateProcessingChain(\"special-include\");\n    assertNotNull(\"chain is missing included processor\", chain);\n    assertEquals(\"chain with inclued processor is wrong size\", \n                 1, chain.getFactories().length);\n    assertEquals(\"chain has wrong included processor\",\n                 RegexReplaceProcessorFactory.class,\n                 chain.getFactories()[0].getClass());\n\n    IndexSchema schema = core.getLatestSchema();\n    assertNotNull(\"ft-included is null\", schema.getFieldTypeByName(\"ft-included\"));\n    assertNotNull(\"field-included is null\", schema.getFieldOrNull(\"field-included\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestXIncludeConfig#testXInclude().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestXIncludeConfig#testXInclude().mjava","sourceNew":"  public void testXInclude() throws Exception {\n    SolrCore core = h.getCore();\n\n    assertNotNull(\"includedHandler is null\", \n                  core.getRequestHandler(\"includedHandler\"));\n\n    UpdateRequestProcessorChain chain \n      = core.getUpdateProcessingChain(\"special-include\");\n    assertNotNull(\"chain is missing included processor\", chain);\n    assertEquals(\"chain with inclued processor is wrong size\", \n                 1, chain.getFactories().length);\n    assertEquals(\"chain has wrong included processor\",\n                 RegexReplaceProcessorFactory.class,\n                 chain.getFactories()[0].getClass());\n\n    IndexSchema schema = core.getLatestSchema();\n    \n    // xinclude\n    assertNotNull(\"ft-included is null\", schema.getFieldTypeByName(\"ft-included\"));\n    assertNotNull(\"field-included is null\", schema.getFieldOrNull(\"field-included\"));\n\n    // entity include\n    assertNotNull(\"ft-entity-include1 is null\", \n                  schema.getFieldTypeByName(\"ft-entity-include1\"));\n    assertNotNull(\"ft-entity-include2 is null\", \n                  schema.getFieldTypeByName(\"ft-entity-include2\"));\n\n    // sanity check\n    assertNull(\"ft-entity-include3 is not null\",  // Does Not Exist Anywhere\n               schema.getFieldTypeByName(\"ft-entity-include3\"));\n\n  }\n\n","sourceOld":"  public void testXInclude() throws Exception {\n    SolrCore core = h.getCore();\n\n    assertNotNull(\"includedHandler is null\", \n                  core.getRequestHandler(\"includedHandler\"));\n\n    UpdateRequestProcessorChain chain \n      = core.getUpdateProcessingChain(\"special-include\");\n    assertNotNull(\"chain is missing included processor\", chain);\n    assertEquals(\"chain with inclued processor is wrong size\", \n                 1, chain.getFactories().length);\n    assertEquals(\"chain has wrong included processor\",\n                 RegexReplaceProcessorFactory.class,\n                 chain.getFactories()[0].getClass());\n\n    IndexSchema schema = core.getLatestSchema();\n    assertNotNull(\"ft-included is null\", schema.getFieldTypeByName(\"ft-included\"));\n    assertNotNull(\"field-included is null\", schema.getFieldOrNull(\"field-included\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"733eaf468f18297b1bcc51031353bdfdd1913bdf","date":1456928540,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestXIncludeConfig#testXInclude().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestXIncludeConfig#testXInclude().mjava","sourceNew":"  public void testXInclude() throws Exception {\n    SolrCore core = h.getCore();\n\n    assertNotNull(\"includedHandler is null\", \n                  core.getRequestHandler(\"includedHandler\"));\n\n    UpdateRequestProcessorChain chain \n      = core.getUpdateProcessingChain(\"special-include\");\n    assertNotNull(\"chain is missing included processor\", chain);\n    assertEquals(\"chain with inclued processor is wrong size\", \n                 1, chain.getProcessors().size());\n    assertEquals(\"chain has wrong included processor\",\n                 RegexReplaceProcessorFactory.class,\n                 chain.getProcessors().get(0).getClass());\n\n    IndexSchema schema = core.getLatestSchema();\n    \n    // xinclude\n    assertNotNull(\"ft-included is null\", schema.getFieldTypeByName(\"ft-included\"));\n    assertNotNull(\"field-included is null\", schema.getFieldOrNull(\"field-included\"));\n\n    // entity include\n    assertNotNull(\"ft-entity-include1 is null\", \n                  schema.getFieldTypeByName(\"ft-entity-include1\"));\n    assertNotNull(\"ft-entity-include2 is null\", \n                  schema.getFieldTypeByName(\"ft-entity-include2\"));\n\n    // sanity check\n    assertNull(\"ft-entity-include3 is not null\",  // Does Not Exist Anywhere\n               schema.getFieldTypeByName(\"ft-entity-include3\"));\n\n  }\n\n","sourceOld":"  public void testXInclude() throws Exception {\n    SolrCore core = h.getCore();\n\n    assertNotNull(\"includedHandler is null\", \n                  core.getRequestHandler(\"includedHandler\"));\n\n    UpdateRequestProcessorChain chain \n      = core.getUpdateProcessingChain(\"special-include\");\n    assertNotNull(\"chain is missing included processor\", chain);\n    assertEquals(\"chain with inclued processor is wrong size\", \n                 1, chain.getFactories().length);\n    assertEquals(\"chain has wrong included processor\",\n                 RegexReplaceProcessorFactory.class,\n                 chain.getFactories()[0].getClass());\n\n    IndexSchema schema = core.getLatestSchema();\n    \n    // xinclude\n    assertNotNull(\"ft-included is null\", schema.getFieldTypeByName(\"ft-included\"));\n    assertNotNull(\"field-included is null\", schema.getFieldOrNull(\"field-included\"));\n\n    // entity include\n    assertNotNull(\"ft-entity-include1 is null\", \n                  schema.getFieldTypeByName(\"ft-entity-include1\"));\n    assertNotNull(\"ft-entity-include2 is null\", \n                  schema.getFieldTypeByName(\"ft-entity-include2\"));\n\n    // sanity check\n    assertNull(\"ft-entity-include3 is not null\",  // Does Not Exist Anywhere\n               schema.getFieldTypeByName(\"ft-entity-include3\"));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestXIncludeConfig#testXInclude().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestXIncludeConfig#testXInclude().mjava","sourceNew":"  public void testXInclude() throws Exception {\n    SolrCore core = h.getCore();\n\n    assertNotNull(\"includedHandler is null\", \n                  core.getRequestHandler(\"includedHandler\"));\n\n    UpdateRequestProcessorChain chain \n      = core.getUpdateProcessingChain(\"special-include\");\n    assertNotNull(\"chain is missing included processor\", chain);\n    assertEquals(\"chain with inclued processor is wrong size\", \n                 1, chain.getProcessors().size());\n    assertEquals(\"chain has wrong included processor\",\n                 RegexReplaceProcessorFactory.class,\n                 chain.getProcessors().get(0).getClass());\n\n    IndexSchema schema = core.getLatestSchema();\n    \n    // xinclude\n    assertNotNull(\"ft-included is null\", schema.getFieldTypeByName(\"ft-included\"));\n    assertNotNull(\"field-included is null\", schema.getFieldOrNull(\"field-included\"));\n\n    // entity include\n    assertNotNull(\"ft-entity-include1 is null\", \n                  schema.getFieldTypeByName(\"ft-entity-include1\"));\n    assertNotNull(\"ft-entity-include2 is null\", \n                  schema.getFieldTypeByName(\"ft-entity-include2\"));\n\n    // sanity check\n    assertNull(\"ft-entity-include3 is not null\",  // Does Not Exist Anywhere\n               schema.getFieldTypeByName(\"ft-entity-include3\"));\n\n  }\n\n","sourceOld":"  public void testXInclude() throws Exception {\n    SolrCore core = h.getCore();\n\n    assertNotNull(\"includedHandler is null\", \n                  core.getRequestHandler(\"includedHandler\"));\n\n    UpdateRequestProcessorChain chain \n      = core.getUpdateProcessingChain(\"special-include\");\n    assertNotNull(\"chain is missing included processor\", chain);\n    assertEquals(\"chain with inclued processor is wrong size\", \n                 1, chain.getFactories().length);\n    assertEquals(\"chain has wrong included processor\",\n                 RegexReplaceProcessorFactory.class,\n                 chain.getFactories()[0].getClass());\n\n    IndexSchema schema = core.getLatestSchema();\n    \n    // xinclude\n    assertNotNull(\"ft-included is null\", schema.getFieldTypeByName(\"ft-included\"));\n    assertNotNull(\"field-included is null\", schema.getFieldOrNull(\"field-included\"));\n\n    // entity include\n    assertNotNull(\"ft-entity-include1 is null\", \n                  schema.getFieldTypeByName(\"ft-entity-include1\"));\n    assertNotNull(\"ft-entity-include2 is null\", \n                  schema.getFieldTypeByName(\"ft-entity-include2\"));\n\n    // sanity check\n    assertNull(\"ft-entity-include3 is not null\",  // Does Not Exist Anywhere\n               schema.getFieldTypeByName(\"ft-entity-include3\"));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ff704ef91e9ae30ca59babb23ece85720701b60","date":1498684964,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestXIncludeConfig#testXInclude().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestXIncludeConfig#testXInclude().mjava","sourceNew":"  public void testXInclude() throws Exception {\n    SolrCore core = h.getCore();\n\n    assertNotNull(\"includedHandler is null\", \n                  core.getRequestHandler(\"/includedHandler\"));\n\n    UpdateRequestProcessorChain chain \n      = core.getUpdateProcessingChain(\"special-include\");\n    assertNotNull(\"chain is missing included processor\", chain);\n    assertEquals(\"chain with inclued processor is wrong size\", \n                 1, chain.getProcessors().size());\n    assertEquals(\"chain has wrong included processor\",\n                 RegexReplaceProcessorFactory.class,\n                 chain.getProcessors().get(0).getClass());\n\n    IndexSchema schema = core.getLatestSchema();\n    \n    // xinclude\n    assertNotNull(\"ft-included is null\", schema.getFieldTypeByName(\"ft-included\"));\n    assertNotNull(\"field-included is null\", schema.getFieldOrNull(\"field-included\"));\n\n    // entity include\n    assertNotNull(\"ft-entity-include1 is null\", \n                  schema.getFieldTypeByName(\"ft-entity-include1\"));\n    assertNotNull(\"ft-entity-include2 is null\", \n                  schema.getFieldTypeByName(\"ft-entity-include2\"));\n\n    // sanity check\n    assertNull(\"ft-entity-include3 is not null\",  // Does Not Exist Anywhere\n               schema.getFieldTypeByName(\"ft-entity-include3\"));\n\n  }\n\n","sourceOld":"  public void testXInclude() throws Exception {\n    SolrCore core = h.getCore();\n\n    assertNotNull(\"includedHandler is null\", \n                  core.getRequestHandler(\"includedHandler\"));\n\n    UpdateRequestProcessorChain chain \n      = core.getUpdateProcessingChain(\"special-include\");\n    assertNotNull(\"chain is missing included processor\", chain);\n    assertEquals(\"chain with inclued processor is wrong size\", \n                 1, chain.getProcessors().size());\n    assertEquals(\"chain has wrong included processor\",\n                 RegexReplaceProcessorFactory.class,\n                 chain.getProcessors().get(0).getClass());\n\n    IndexSchema schema = core.getLatestSchema();\n    \n    // xinclude\n    assertNotNull(\"ft-included is null\", schema.getFieldTypeByName(\"ft-included\"));\n    assertNotNull(\"field-included is null\", schema.getFieldOrNull(\"field-included\"));\n\n    // entity include\n    assertNotNull(\"ft-entity-include1 is null\", \n                  schema.getFieldTypeByName(\"ft-entity-include1\"));\n    assertNotNull(\"ft-entity-include2 is null\", \n                  schema.getFieldTypeByName(\"ft-entity-include2\"));\n\n    // sanity check\n    assertNull(\"ft-entity-include3 is not null\",  // Does Not Exist Anywhere\n               schema.getFieldTypeByName(\"ft-entity-include3\"));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestXIncludeConfig#testXInclude().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestXIncludeConfig#testXInclude().mjava","sourceNew":"  public void testXInclude() throws Exception {\n    SolrCore core = h.getCore();\n\n    assertNotNull(\"includedHandler is null\", \n                  core.getRequestHandler(\"/includedHandler\"));\n\n    UpdateRequestProcessorChain chain \n      = core.getUpdateProcessingChain(\"special-include\");\n    assertNotNull(\"chain is missing included processor\", chain);\n    assertEquals(\"chain with inclued processor is wrong size\", \n                 1, chain.getProcessors().size());\n    assertEquals(\"chain has wrong included processor\",\n                 RegexReplaceProcessorFactory.class,\n                 chain.getProcessors().get(0).getClass());\n\n    IndexSchema schema = core.getLatestSchema();\n    \n    // xinclude\n    assertNotNull(\"ft-included is null\", schema.getFieldTypeByName(\"ft-included\"));\n    assertNotNull(\"field-included is null\", schema.getFieldOrNull(\"field-included\"));\n\n    // entity include\n    assertNotNull(\"ft-entity-include1 is null\", \n                  schema.getFieldTypeByName(\"ft-entity-include1\"));\n    assertNotNull(\"ft-entity-include2 is null\", \n                  schema.getFieldTypeByName(\"ft-entity-include2\"));\n\n    // sanity check\n    assertNull(\"ft-entity-include3 is not null\",  // Does Not Exist Anywhere\n               schema.getFieldTypeByName(\"ft-entity-include3\"));\n\n  }\n\n","sourceOld":"  public void testXInclude() throws Exception {\n    SolrCore core = h.getCore();\n\n    assertNotNull(\"includedHandler is null\", \n                  core.getRequestHandler(\"includedHandler\"));\n\n    UpdateRequestProcessorChain chain \n      = core.getUpdateProcessingChain(\"special-include\");\n    assertNotNull(\"chain is missing included processor\", chain);\n    assertEquals(\"chain with inclued processor is wrong size\", \n                 1, chain.getProcessors().size());\n    assertEquals(\"chain has wrong included processor\",\n                 RegexReplaceProcessorFactory.class,\n                 chain.getProcessors().get(0).getClass());\n\n    IndexSchema schema = core.getLatestSchema();\n    \n    // xinclude\n    assertNotNull(\"ft-included is null\", schema.getFieldTypeByName(\"ft-included\"));\n    assertNotNull(\"field-included is null\", schema.getFieldOrNull(\"field-included\"));\n\n    // entity include\n    assertNotNull(\"ft-entity-include1 is null\", \n                  schema.getFieldTypeByName(\"ft-entity-include1\"));\n    assertNotNull(\"ft-entity-include2 is null\", \n                  schema.getFieldTypeByName(\"ft-entity-include2\"));\n\n    // sanity check\n    assertNull(\"ft-entity-include3 is not null\",  // Does Not Exist Anywhere\n               schema.getFieldTypeByName(\"ft-entity-include3\"));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestXIncludeConfig#testXInclude().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestXIncludeConfig#testXInclude().mjava","sourceNew":"  public void testXInclude() throws Exception {\n    SolrCore core = h.getCore();\n\n    assertNotNull(\"includedHandler is null\", \n                  core.getRequestHandler(\"/includedHandler\"));\n\n    UpdateRequestProcessorChain chain \n      = core.getUpdateProcessingChain(\"special-include\");\n    assertNotNull(\"chain is missing included processor\", chain);\n    assertEquals(\"chain with inclued processor is wrong size\", \n                 1, chain.getProcessors().size());\n    assertEquals(\"chain has wrong included processor\",\n                 RegexReplaceProcessorFactory.class,\n                 chain.getProcessors().get(0).getClass());\n\n    IndexSchema schema = core.getLatestSchema();\n    \n    // xinclude\n    assertNotNull(\"ft-included is null\", schema.getFieldTypeByName(\"ft-included\"));\n    assertNotNull(\"field-included is null\", schema.getFieldOrNull(\"field-included\"));\n\n    // entity include\n    assertNotNull(\"ft-entity-include1 is null\", \n                  schema.getFieldTypeByName(\"ft-entity-include1\"));\n    assertNotNull(\"ft-entity-include2 is null\", \n                  schema.getFieldTypeByName(\"ft-entity-include2\"));\n\n    // sanity check\n    assertNull(\"ft-entity-include3 is not null\",  // Does Not Exist Anywhere\n               schema.getFieldTypeByName(\"ft-entity-include3\"));\n\n  }\n\n","sourceOld":"  public void testXInclude() throws Exception {\n    SolrCore core = h.getCore();\n\n    assertNotNull(\"includedHandler is null\", \n                  core.getRequestHandler(\"includedHandler\"));\n\n    UpdateRequestProcessorChain chain \n      = core.getUpdateProcessingChain(\"special-include\");\n    assertNotNull(\"chain is missing included processor\", chain);\n    assertEquals(\"chain with inclued processor is wrong size\", \n                 1, chain.getProcessors().size());\n    assertEquals(\"chain has wrong included processor\",\n                 RegexReplaceProcessorFactory.class,\n                 chain.getProcessors().get(0).getClass());\n\n    IndexSchema schema = core.getLatestSchema();\n    \n    // xinclude\n    assertNotNull(\"ft-included is null\", schema.getFieldTypeByName(\"ft-included\"));\n    assertNotNull(\"field-included is null\", schema.getFieldOrNull(\"field-included\"));\n\n    // entity include\n    assertNotNull(\"ft-entity-include1 is null\", \n                  schema.getFieldTypeByName(\"ft-entity-include1\"));\n    assertNotNull(\"ft-entity-include2 is null\", \n                  schema.getFieldTypeByName(\"ft-entity-include2\"));\n\n    // sanity check\n    assertNull(\"ft-entity-include3 is not null\",  // Does Not Exist Anywhere\n               schema.getFieldTypeByName(\"ft-entity-include3\"));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["08970e5b8411182a29412c177eff67ec1110095b","6ead980c1720ddbd01d93b24ff364f7a43c7e904"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"30c8e5574b55d57947e989443dfde611646530ee":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273","28288370235ed02234a64753cdbf0c6ec096304a"],"6ead980c1720ddbd01d93b24ff364f7a43c7e904":["08970e5b8411182a29412c177eff67ec1110095b"],"28288370235ed02234a64753cdbf0c6ec096304a":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273","5ff704ef91e9ae30ca59babb23ece85720701b60"],"08970e5b8411182a29412c177eff67ec1110095b":["01d76482f7852933b2bd5e38ada012a2f2578b1c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["6ead980c1720ddbd01d93b24ff364f7a43c7e904","733eaf468f18297b1bcc51031353bdfdd1913bdf"],"733eaf468f18297b1bcc51031353bdfdd1913bdf":["6ead980c1720ddbd01d93b24ff364f7a43c7e904"],"01d76482f7852933b2bd5e38ada012a2f2578b1c":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"],"5ff704ef91e9ae30ca59babb23ece85720701b60":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"]},"commit2Childs":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"c26f00b574427b55127e869b935845554afde1fa":["01d76482f7852933b2bd5e38ada012a2f2578b1c"],"30c8e5574b55d57947e989443dfde611646530ee":[],"6ead980c1720ddbd01d93b24ff364f7a43c7e904":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cf1a614098b46c9c22afebd7b898ae4d1d2fc273","733eaf468f18297b1bcc51031353bdfdd1913bdf"],"28288370235ed02234a64753cdbf0c6ec096304a":["30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"08970e5b8411182a29412c177eff67ec1110095b":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","6ead980c1720ddbd01d93b24ff364f7a43c7e904"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["30c8e5574b55d57947e989443dfde611646530ee","28288370235ed02234a64753cdbf0c6ec096304a","5ff704ef91e9ae30ca59babb23ece85720701b60"],"733eaf468f18297b1bcc51031353bdfdd1913bdf":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"01d76482f7852933b2bd5e38ada012a2f2578b1c":["08970e5b8411182a29412c177eff67ec1110095b"],"5ff704ef91e9ae30ca59babb23ece85720701b60":["28288370235ed02234a64753cdbf0c6ec096304a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","30c8e5574b55d57947e989443dfde611646530ee","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}