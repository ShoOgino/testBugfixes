{"path":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanFilterBuilder#getFilter(Element).mjava","commits":[{"id":"175da89dff77515cdda7604b3c6cf6de96d4ac23","date":1143444217,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanFilterBuilder#getFilter(Element).mjava","pathOld":"/dev/null","sourceNew":"\tpublic Filter getFilter(Element e) throws ParserException {\r\n\t\tBooleanFilter bf=new BooleanFilter();\r\n\t\tNodeList nl = e.getElementsByTagName(\"Clause\");\r\n\t\tfor(int i=0;i<nl.getLength();i++)\r\n\t\t{\r\n\t\t\tElement clauseElem=(Element) nl.item(i);\r\n\t\t\tBooleanClause.Occur occurs=BooleanQueryBuilder.getOccursValue(clauseElem);\r\n\t\t\t\r\n \t\t\tElement clauseFilter=DOMUtils.getFirstChildOrFail(clauseElem);\r\n \t\t\tFilter f=factory.getFilter(clauseFilter);\r\n \t\t\tbf.add(new FilterClause(f,occurs));\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn bf;\r\n\t}\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d287046fcd5f9f990e1611857ceb6c06fcfd7de","date":1157751914,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanFilterBuilder#getFilter(Element).mjava","pathOld":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanFilterBuilder#getFilter(Element).mjava","sourceNew":"\tpublic Filter getFilter(Element e) throws ParserException {\r\n\t\tBooleanFilter bf=new BooleanFilter();\r\n\t\tNodeList nl = e.getChildNodes();\r\n\t\t\r\n\t\tfor(int i=0;i<nl.getLength();i++)\r\n\t\t{\r\n\t\t\tNode node = nl.item(i);\r\n\t\t\tif(node.getNodeName().equals(\"Clause\"))\r\n\t\t\t{\r\n\t\t\t\tElement clauseElem=(Element) node;\r\n\t\t\t\tBooleanClause.Occur occurs=BooleanQueryBuilder.getOccursValue(clauseElem);\r\n\t\t\t\r\n\t \t\t\tElement clauseFilter=DOMUtils.getFirstChildOrFail(clauseElem);\r\n\t \t\t\tFilter f=factory.getFilter(clauseFilter);\r\n\t \t\t\tbf.add(new FilterClause(f,occurs));\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn bf;\r\n\t}\r\n\n","sourceOld":"\tpublic Filter getFilter(Element e) throws ParserException {\r\n\t\tBooleanFilter bf=new BooleanFilter();\r\n\t\tNodeList nl = e.getElementsByTagName(\"Clause\");\r\n\t\tfor(int i=0;i<nl.getLength();i++)\r\n\t\t{\r\n\t\t\tElement clauseElem=(Element) nl.item(i);\r\n\t\t\tBooleanClause.Occur occurs=BooleanQueryBuilder.getOccursValue(clauseElem);\r\n\t\t\t\r\n \t\t\tElement clauseFilter=DOMUtils.getFirstChildOrFail(clauseElem);\r\n \t\t\tFilter f=factory.getFilter(clauseFilter);\r\n \t\t\tbf.add(new FilterClause(f,occurs));\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn bf;\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a361a621b184d9b73c9c9a37323a9845b8f8260","date":1226370946,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanFilterBuilder#getFilter(Element).mjava","pathOld":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanFilterBuilder#getFilter(Element).mjava","sourceNew":"\tpublic Filter getFilter(Element e) throws ParserException {\n\t\tBooleanFilter bf=new BooleanFilter();\n\t\tNodeList nl = e.getChildNodes();\n\t\t\n\t\tfor(int i=0;i<nl.getLength();i++)\n\t\t{\n\t\t\tNode node = nl.item(i);\n\t\t\tif(node.getNodeName().equals(\"Clause\"))\n\t\t\t{\n\t\t\t\tElement clauseElem=(Element) node;\n\t\t\t\tBooleanClause.Occur occurs=BooleanQueryBuilder.getOccursValue(clauseElem);\n\t\t\t\n\t \t\t\tElement clauseFilter=DOMUtils.getFirstChildOrFail(clauseElem);\n\t \t\t\tFilter f=factory.getFilter(clauseFilter);\n\t \t\t\tbf.add(new FilterClause(f,occurs));\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn bf;\n\t}\n\n","sourceOld":"\tpublic Filter getFilter(Element e) throws ParserException {\r\n\t\tBooleanFilter bf=new BooleanFilter();\r\n\t\tNodeList nl = e.getChildNodes();\r\n\t\t\r\n\t\tfor(int i=0;i<nl.getLength();i++)\r\n\t\t{\r\n\t\t\tNode node = nl.item(i);\r\n\t\t\tif(node.getNodeName().equals(\"Clause\"))\r\n\t\t\t{\r\n\t\t\t\tElement clauseElem=(Element) node;\r\n\t\t\t\tBooleanClause.Occur occurs=BooleanQueryBuilder.getOccursValue(clauseElem);\r\n\t\t\t\r\n\t \t\t\tElement clauseFilter=DOMUtils.getFirstChildOrFail(clauseElem);\r\n\t \t\t\tFilter f=factory.getFilter(clauseFilter);\r\n\t \t\t\tbf.add(new FilterClause(f,occurs));\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn bf;\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanFilterBuilder#getFilter(Element).mjava","pathOld":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanFilterBuilder#getFilter(Element).mjava","sourceNew":"\tpublic Filter getFilter(Element e) throws ParserException {\n\t\tBooleanFilter bf=new BooleanFilter();\n\t\tNodeList nl = e.getChildNodes();\n\t\t\n\t\tfor(int i=0;i<nl.getLength();i++)\n\t\t{\n\t\t\tNode node = nl.item(i);\n\t\t\tif(node.getNodeName().equals(\"Clause\"))\n\t\t\t{\n\t\t\t\tElement clauseElem=(Element) node;\n\t\t\t\tBooleanClause.Occur occurs=BooleanQueryBuilder.getOccursValue(clauseElem);\n\t\t\t\n\t \t\t\tElement clauseFilter=DOMUtils.getFirstChildOrFail(clauseElem);\n\t \t\t\tFilter f=factory.getFilter(clauseFilter);\n\t \t\t\tbf.add(new FilterClause(f,occurs));\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn bf;\n\t}\n\n","sourceOld":"\tpublic Filter getFilter(Element e) throws ParserException {\n\t\tBooleanFilter bf=new BooleanFilter();\n\t\tNodeList nl = e.getChildNodes();\n\t\t\n\t\tfor(int i=0;i<nl.getLength();i++)\n\t\t{\n\t\t\tNode node = nl.item(i);\n\t\t\tif(node.getNodeName().equals(\"Clause\"))\n\t\t\t{\n\t\t\t\tElement clauseElem=(Element) node;\n\t\t\t\tBooleanClause.Occur occurs=BooleanQueryBuilder.getOccursValue(clauseElem);\n\t\t\t\n\t \t\t\tElement clauseFilter=DOMUtils.getFirstChildOrFail(clauseElem);\n\t \t\t\tFilter f=factory.getFilter(clauseFilter);\n\t \t\t\tbf.add(new FilterClause(f,occurs));\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn bf;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"175da89dff77515cdda7604b3c6cf6de96d4ac23":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["3d287046fcd5f9f990e1611857ceb6c06fcfd7de"],"3d287046fcd5f9f990e1611857ceb6c06fcfd7de":["175da89dff77515cdda7604b3c6cf6de96d4ac23"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["6a361a621b184d9b73c9c9a37323a9845b8f8260"]},"commit2Childs":{"175da89dff77515cdda7604b3c6cf6de96d4ac23":["3d287046fcd5f9f990e1611857ceb6c06fcfd7de"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["175da89dff77515cdda7604b3c6cf6de96d4ac23"],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3d287046fcd5f9f990e1611857ceb6c06fcfd7de":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}