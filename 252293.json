{"path":"lucene/core/src/java/org/apache/lucene/util/IOUtils#deleteFilesIgnoringExceptions(Directory,Collection[String]).mjava","commits":[{"id":"867e3d9153fb761456b54a9dcce566e1545c5ef6","date":1444903098,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#deleteFilesIgnoringExceptions(Directory,Collection[String]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Deletes all given files, suppressing all thrown IOExceptions.\n   * <p>\n   * Note that the files should not be null.\n   */\n  public static void deleteFilesIgnoringExceptions(Directory dir, Collection<String> files) {\n    for (String name : files) {\n      try {\n        dir.deleteFile(name);\n      } catch (Throwable ignored) {\n        // ignore\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bfe104fc023fadc9e709f8d17403d2cc61133fe","date":1454446396,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#deleteFilesIgnoringExceptions(Directory,Collection[String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#deleteFilesIgnoringExceptions(Directory,Collection[String]).mjava","sourceNew":"  /**\n   * Deletes all given files, suppressing all thrown IOExceptions.\n   * <p>\n   * Note that the files should not be null.\n   */\n  public static void deleteFilesIgnoringExceptions(Directory dir, Collection<String> files) {\n    try {\n      dir.deleteFiles(files);\n    } catch (Throwable ignored) {\n      // ignore\n    }\n  }\n\n","sourceOld":"  /**\n   * Deletes all given files, suppressing all thrown IOExceptions.\n   * <p>\n   * Note that the files should not be null.\n   */\n  public static void deleteFilesIgnoringExceptions(Directory dir, Collection<String> files) {\n    for (String name : files) {\n      try {\n        dir.deleteFile(name);\n      } catch (Throwable ignored) {\n        // ignore\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f4e2dcb5e470991d83a63c264bfe20880d3b3c1","date":1454513757,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#deleteFilesIgnoringExceptions(Directory,Collection[String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#deleteFilesIgnoringExceptions(Directory,Collection[String]).mjava","sourceNew":"  /**\n   * Deletes all given files, suppressing all thrown IOExceptions.\n   * <p>\n   * Note that the files should not be null.\n   */\n  public static void deleteFilesIgnoringExceptions(Directory dir, Collection<String> files) {\n    for(String name : files) {\n      try {\n        dir.deleteFile(name);\n      } catch (Throwable ignored) {\n        // ignore\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Deletes all given files, suppressing all thrown IOExceptions.\n   * <p>\n   * Note that the files should not be null.\n   */\n  public static void deleteFilesIgnoringExceptions(Directory dir, Collection<String> files) {\n    try {\n      dir.deleteFiles(files);\n    } catch (Throwable ignored) {\n      // ignore\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b470f36a9372c97283360b1304eacbde22df6c0d","date":1454765175,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#deleteFilesIgnoringExceptions(Directory,Collection[String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#deleteFilesIgnoringExceptions(Directory,Collection[String]).mjava","sourceNew":"  /**\n   * Deletes all given files, suppressing all thrown IOExceptions.\n   * <p>\n   * Note that the files should not be null.\n   */\n  public static void deleteFilesIgnoringExceptions(Directory dir, Collection<String> files) {\n    for(String name : files) {\n      try {\n        dir.deleteFile(name);\n      } catch (Throwable ignored) {\n        // ignore\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Deletes all given files, suppressing all thrown IOExceptions.\n   * <p>\n   * Note that the files should not be null.\n   */\n  public static void deleteFilesIgnoringExceptions(Directory dir, Collection<String> files) {\n    for (String name : files) {\n      try {\n        dir.deleteFile(name);\n      } catch (Throwable ignored) {\n        // ignore\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#deleteFilesIgnoringExceptions(Directory,Collection[String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#deleteFilesIgnoringExceptions(Directory,Collection[String]).mjava","sourceNew":"  /**\n   * Deletes all given files, suppressing all thrown IOExceptions.\n   * <p>\n   * Note that the files should not be null.\n   */\n  public static void deleteFilesIgnoringExceptions(Directory dir, Collection<String> files) {\n    for(String name : files) {\n      try {\n        dir.deleteFile(name);\n      } catch (Throwable ignored) {\n        // ignore\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Deletes all given files, suppressing all thrown IOExceptions.\n   * <p>\n   * Note that the files should not be null.\n   */\n  public static void deleteFilesIgnoringExceptions(Directory dir, Collection<String> files) {\n    for (String name : files) {\n      try {\n        dir.deleteFile(name);\n      } catch (Throwable ignored) {\n        // ignore\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a207d19eac354d649c3f0e2cce070017c78125e","date":1454776470,"type":3,"author":"Erick Erickson","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#deleteFilesIgnoringExceptions(Directory,Collection[String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#deleteFilesIgnoringExceptions(Directory,Collection[String]).mjava","sourceNew":"  /**\n   * Deletes all given files, suppressing all thrown IOExceptions.\n   * <p>\n   * Note that the files should not be null.\n   */\n  public static void deleteFilesIgnoringExceptions(Directory dir, Collection<String> files) {\n    for(String name : files) {\n      try {\n        dir.deleteFile(name);\n      } catch (Throwable ignored) {\n        // ignore\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Deletes all given files, suppressing all thrown IOExceptions.\n   * <p>\n   * Note that the files should not be null.\n   */\n  public static void deleteFilesIgnoringExceptions(Directory dir, Collection<String> files) {\n    for (String name : files) {\n      try {\n        dir.deleteFile(name);\n      } catch (Throwable ignored) {\n        // ignore\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8f4e2dcb5e470991d83a63c264bfe20880d3b3c1":["6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"5a207d19eac354d649c3f0e2cce070017c78125e":["867e3d9153fb761456b54a9dcce566e1545c5ef6","b470f36a9372c97283360b1304eacbde22df6c0d"],"b470f36a9372c97283360b1304eacbde22df6c0d":["867e3d9153fb761456b54a9dcce566e1545c5ef6","8f4e2dcb5e470991d83a63c264bfe20880d3b3c1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["867e3d9153fb761456b54a9dcce566e1545c5ef6","b470f36a9372c97283360b1304eacbde22df6c0d"],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5a207d19eac354d649c3f0e2cce070017c78125e"]},"commit2Childs":{"8f4e2dcb5e470991d83a63c264bfe20880d3b3c1":["b470f36a9372c97283360b1304eacbde22df6c0d"],"5a207d19eac354d649c3f0e2cce070017c78125e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b470f36a9372c97283360b1304eacbde22df6c0d":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["8f4e2dcb5e470991d83a63c264bfe20880d3b3c1"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["5a207d19eac354d649c3f0e2cce070017c78125e","b470f36a9372c97283360b1304eacbde22df6c0d","1e6acbaae7af722f17204ceccf0f7db5753eccf3","6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}