{"path":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/CopyJob#cancel(String,Throwable).mjava","commits":[{"id":"0d49a158012a8ff48f328a4558e4bfcffbaed16f","date":1453677440,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/CopyJob#cancel(String,Throwable).mjava","pathOld":"/dev/null","sourceNew":"  public void cancel(String reason, Throwable exc) {\n    if (this.exc != null) {\n      // Already cancelled\n      return;\n    }\n\n    dest.message(String.format(Locale.ROOT, \"top: cancel after copying %s; exc=%s:\\n  files=%s\\n  copiedFiles=%s\",\n                               Node.bytesToString(totBytesCopied),\n                               exc,\n                               files == null ? \"null\" : files.keySet(), copiedFiles.keySet()));\n\n    if (exc == null) {\n      exc = new Throwable();\n    }\n\n    this.exc = exc;\n    this.cancelReason = reason;\n\n    // Delete all temp files we wrote:\n    IOUtils.deleteFilesIgnoringExceptions(dest.dir, copiedFiles.values());\n\n    if (current != null) { \n      IOUtils.closeWhileHandlingException(current);\n      if (Node.VERBOSE_FILES) {\n        dest.message(\"remove partial file \" + current.tmpName);\n      }\n      dest.deleter.deleteNewFile(current.tmpName);\n      current = null;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b72a3c8c250ce67d9dd59e06316f982cd77bdb3c","date":1454874368,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/CopyJob#cancel(String,Throwable).mjava","pathOld":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/CopyJob#cancel(String,Throwable).mjava","sourceNew":"  public void cancel(String reason, Throwable exc) throws IOException {\n    if (this.exc != null) {\n      // Already cancelled\n      return;\n    }\n\n    dest.message(String.format(Locale.ROOT, \"top: cancel after copying %s; exc=%s:\\n  files=%s\\n  copiedFiles=%s\",\n                               Node.bytesToString(totBytesCopied),\n                               exc,\n                               files == null ? \"null\" : files.keySet(), copiedFiles.keySet()));\n\n    if (exc == null) {\n      exc = new Throwable();\n    }\n\n    this.exc = exc;\n    this.cancelReason = reason;\n\n    // Delete all temp files we wrote:\n    IOUtils.deleteFilesIgnoringExceptions(dest.dir, copiedFiles.values());\n\n    if (current != null) { \n      IOUtils.closeWhileHandlingException(current);\n      if (Node.VERBOSE_FILES) {\n        dest.message(\"remove partial file \" + current.tmpName);\n      }\n      dest.deleter.deleteNewFile(current.tmpName);\n      current = null;\n    }\n  }\n\n","sourceOld":"  public void cancel(String reason, Throwable exc) {\n    if (this.exc != null) {\n      // Already cancelled\n      return;\n    }\n\n    dest.message(String.format(Locale.ROOT, \"top: cancel after copying %s; exc=%s:\\n  files=%s\\n  copiedFiles=%s\",\n                               Node.bytesToString(totBytesCopied),\n                               exc,\n                               files == null ? \"null\" : files.keySet(), copiedFiles.keySet()));\n\n    if (exc == null) {\n      exc = new Throwable();\n    }\n\n    this.exc = exc;\n    this.cancelReason = reason;\n\n    // Delete all temp files we wrote:\n    IOUtils.deleteFilesIgnoringExceptions(dest.dir, copiedFiles.values());\n\n    if (current != null) { \n      IOUtils.closeWhileHandlingException(current);\n      if (Node.VERBOSE_FILES) {\n        dest.message(\"remove partial file \" + current.tmpName);\n      }\n      dest.deleter.deleteNewFile(current.tmpName);\n      current = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68496c2200e559fb7802f7575427b7a482659afb","date":1455207618,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/CopyJob#cancel(String,Throwable).mjava","pathOld":"/dev/null","sourceNew":"  public void cancel(String reason, Throwable exc) throws IOException {\n    if (this.exc != null) {\n      // Already cancelled\n      return;\n    }\n\n    dest.message(String.format(Locale.ROOT, \"top: cancel after copying %s; exc=%s:\\n  files=%s\\n  copiedFiles=%s\",\n                               Node.bytesToString(totBytesCopied),\n                               exc,\n                               files == null ? \"null\" : files.keySet(), copiedFiles.keySet()));\n\n    if (exc == null) {\n      exc = new Throwable();\n    }\n\n    this.exc = exc;\n    this.cancelReason = reason;\n\n    // Delete all temp files we wrote:\n    IOUtils.deleteFilesIgnoringExceptions(dest.dir, copiedFiles.values());\n\n    if (current != null) { \n      IOUtils.closeWhileHandlingException(current);\n      if (Node.VERBOSE_FILES) {\n        dest.message(\"remove partial file \" + current.tmpName);\n      }\n      dest.deleter.deleteNewFile(current.tmpName);\n      current = null;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b72a3c8c250ce67d9dd59e06316f982cd77bdb3c":["0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"68496c2200e559fb7802f7575427b7a482659afb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b72a3c8c250ce67d9dd59e06316f982cd77bdb3c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["68496c2200e559fb7802f7575427b7a482659afb"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b72a3c8c250ce67d9dd59e06316f982cd77bdb3c":["68496c2200e559fb7802f7575427b7a482659afb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["68496c2200e559fb7802f7575427b7a482659afb","0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"68496c2200e559fb7802f7575427b7a482659afb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["b72a3c8c250ce67d9dd59e06316f982cd77bdb3c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}