{"path":"solr/core/src/test/org/apache/solr/security/BaseTestRuleBasedAuthorizationPlugin#testBasicPermissions().mjava","commits":[{"id":"8076096f334b0665d0a69a63ee98ac09baad402b","date":1589405373,"type":1,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/BaseTestRuleBasedAuthorizationPlugin#testBasicPermissions().mjava","pathOld":"solr/core/src/test/org/apache/solr/security/TestRuleBasedAuthorizationPlugin#testBasicPermissions().mjava","sourceNew":"  @Test\n  public void testBasicPermissions() {\n    checkRules(makeMap(\"resource\", \"/update/json/docs\",\n        \"httpMethod\", \"POST\",\n        \"userPrincipal\", \"unknownuser\",\n        \"collectionRequests\", \"freeforall\",\n        \"handler\", new UpdateRequestHandler())\n        , STATUS_OK);\n\n    checkRules(makeMap(\"resource\", \"/update/json/docs\",\n        \"httpMethod\", \"POST\",\n        \"userPrincipal\", \"tim\",\n        \"collectionRequests\", \"mycoll\",\n        \"handler\", new UpdateRequestHandler())\n        , STATUS_OK);\n\n    checkRules(makeMap(\"resource\", \"/update/json/docs\",\n        \"httpMethod\", \"POST\",\n        \"collectionRequests\", \"mycoll\",\n        \"handler\", new UpdateRequestHandler())\n        , PROMPT_FOR_CREDENTIALS);\n\n    checkRules(makeMap(\"resource\", \"/schema\",\n        \"userPrincipal\", \"somebody\",\n        \"collectionRequests\", \"mycoll\",\n        \"httpMethod\", \"POST\",\n        \"handler\", new SchemaHandler())\n        , FORBIDDEN);\n\n    checkRules(makeMap(\"resource\", \"/schema\",\n        \"userPrincipal\", \"somebody\",\n        \"collectionRequests\", \"mycoll\",\n        \"httpMethod\", \"GET\",\n        \"handler\", new SchemaHandler())\n        , STATUS_OK);\n\n    checkRules(makeMap(\"resource\", \"/schema/fields\",\n        \"userPrincipal\", \"somebody\",\n        \"collectionRequests\", \"mycoll\",\n        \"httpMethod\", \"GET\",\n        \"handler\", new SchemaHandler())\n        , STATUS_OK);\n\n    checkRules(makeMap(\"resource\", \"/schema\",\n        \"userPrincipal\", \"somebody\",\n        \"collectionRequests\", \"mycoll\",\n        \"httpMethod\", \"POST\",\n        \"handler\", new SchemaHandler())\n        , FORBIDDEN);\n\n    checkRules(makeMap(\"resource\", \"/admin/collections\",\n        \"userPrincipal\", \"tim\",\n        \"requestType\", RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"httpMethod\", \"GET\",\n        \"handler\", new CollectionsHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"LIST\")))\n        , STATUS_OK);\n\n    checkRules(makeMap(\"resource\", \"/admin/collections\",\n        \"userPrincipal\", null,\n        \"requestType\", RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"httpMethod\", \"GET\",\n        \"handler\", new CollectionsHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"LIST\")))\n        , STATUS_OK);\n\n    checkRules(makeMap(\"resource\", \"/admin/collections\",\n        \"userPrincipal\", null,\n        \"requestType\", RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"handler\", new CollectionsHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"CREATE\")))\n        , PROMPT_FOR_CREDENTIALS);\n\n    checkRules(makeMap(\"resource\", \"/admin/collections\",\n        \"userPrincipal\", null,\n        \"requestType\", RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"handler\", new CollectionsHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"RELOAD\")))\n        , PROMPT_FOR_CREDENTIALS);\n\n    checkRules(makeMap(\"resource\", \"/admin/collections\",\n        \"userPrincipal\", \"somebody\",\n        \"requestType\", RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"handler\", new CollectionsHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"CREATE\")))\n        , FORBIDDEN);\n\n    checkRules(makeMap(\"resource\", \"/admin/collections\",\n        \"userPrincipal\", \"tim\",\n        \"requestType\", RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"handler\", new CollectionsHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"CREATE\")))\n        , STATUS_OK);\n\n    checkRules(makeMap(\"resource\", \"/select\",\n        \"httpMethod\", \"GET\",\n        \"handler\", new SearchHandler(),\n        \"collectionRequests\", singletonList(new CollectionRequest(\"mycoll\")),\n        \"userPrincipal\", \"joe\")\n        , FORBIDDEN);\n\n    setUserRole(\"cio\", \"su\");\n    addPermission(\"all\", \"su\");\n\n    checkRules(makeMap(\"resource\", ReplicationHandler.PATH,\n        \"httpMethod\", \"POST\",\n        \"userPrincipal\", \"tim\",\n        \"handler\", new ReplicationHandler(),\n        \"collectionRequests\", singletonList(new CollectionRequest(\"mycoll\")) )\n        , FORBIDDEN);\n\n    checkRules(makeMap(\"resource\", ReplicationHandler.PATH,\n        \"httpMethod\", \"POST\",\n        \"userPrincipal\", \"cio\",\n        \"handler\", new ReplicationHandler(),\n        \"collectionRequests\", singletonList(new CollectionRequest(\"mycoll\")) )\n        , STATUS_OK);\n\n    checkRules(makeMap(\"resource\", \"/admin/collections\",\n        \"userPrincipal\", \"tim\",\n        \"requestType\", AuthorizationContext.RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"handler\", new CollectionsHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"CREATE\")))\n        , STATUS_OK);\n\n    resetPermissionsAndRoles();\n    addPermission(\"core-admin-edit\", \"su\");\n    addPermission(\"core-admin-read\", \"user\");\n    setUserRole(\"cio\", \"su\");\n    addPermission(\"all\", \"su\");\n\n    checkRules(makeMap(\"resource\", \"/admin/cores\",\n        \"userPrincipal\", null,\n        \"requestType\", RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"handler\", new CoreAdminHandler(null),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"CREATE\")))\n        , PROMPT_FOR_CREDENTIALS);\n\n    checkRules(makeMap(\"resource\", \"/admin/cores\",\n        \"userPrincipal\", \"joe\",\n        \"requestType\", RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"handler\", new CoreAdminHandler(null),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"CREATE\")))\n        , FORBIDDEN);\n\n    checkRules(makeMap(\"resource\", \"/admin/cores\",\n        \"userPrincipal\", \"joe\",\n        \"requestType\", RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"handler\", new CoreAdminHandler(null),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"STATUS\")))\n        , STATUS_OK);\n\n    checkRules(makeMap(\"resource\", \"/admin/cores\",\n        \"userPrincipal\", \"cio\",\n        \"requestType\", RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"handler\", new CoreAdminHandler(null),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"CREATE\")))\n        ,STATUS_OK);\n\n    resetPermissionsAndRoles();\n    addPermission(\"test-params\", \"admin\", \"/x\", makeMap(\"key\", Arrays.asList(\"REGEX:(?i)val1\", \"VAL2\")));\n\n    checkRules(makeMap(\"resource\", \"/x\",\n        \"userPrincipal\", null,\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", new DumpRequestHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"key\", \"VAL1\")))\n        , PROMPT_FOR_CREDENTIALS);\n\n    checkRules(makeMap(\"resource\", \"/x\",\n        \"userPrincipal\", null,\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", new DumpRequestHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"key\", \"Val1\")))\n        , PROMPT_FOR_CREDENTIALS);\n\n    checkRules(makeMap(\"resource\", \"/x\",\n        \"userPrincipal\", null,\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", new DumpRequestHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"key\", \"Val1\")))\n        , PROMPT_FOR_CREDENTIALS);\n\n    checkRules(makeMap(\"resource\", \"/x\",\n        \"userPrincipal\", \"joe\",\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", new DumpRequestHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"key\", \"Val1\")))\n        , FORBIDDEN);\n\n    checkRules(makeMap(\"resource\", \"/x\",\n        \"userPrincipal\", \"joe\",\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", new DumpRequestHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"key\", \"Val2\")))\n        , STATUS_OK);\n\n    checkRules(makeMap(\"resource\", \"/x\",\n        \"userPrincipal\", \"joe\",\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", new DumpRequestHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"key\", \"VAL2\")))\n        , FORBIDDEN);\n\n    Map<String, Object> customRules = (Map<String, Object>) Utils.fromJSONString(\n        \"{permissions:[\" +\n        \"      {name:update, role:[admin_role,update_role]},\" +\n        \"      {name:read, role:[admin_role,update_role,read_role]}\" +\n        \"]}\");\n\n    clearUserRoles();\n    setUserRole(\"admin\", \"admin_role\");\n    setUserRole(\"update\", \"update_role\");\n    setUserRole(\"solr\", \"read_role\");\n\n    checkRules(makeMap(\"resource\", \"/update\",\n        \"userPrincipal\", \"solr\",\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", new UpdateRequestHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"key\", \"VAL2\")))\n        , FORBIDDEN, customRules);\n  }\n\n","sourceOld":"  public void testBasicPermissions() {\n    checkRules(makeMap(\"resource\", \"/update/json/docs\",\n        \"httpMethod\", \"POST\",\n        \"userPrincipal\", \"unknownuser\",\n        \"collectionRequests\", \"freeforall\",\n        \"handler\", new UpdateRequestHandler())\n        , STATUS_OK);\n\n    checkRules(makeMap(\"resource\", \"/update/json/docs\",\n        \"httpMethod\", \"POST\",\n        \"userPrincipal\", \"tim\",\n        \"collectionRequests\", \"mycoll\",\n        \"handler\", new UpdateRequestHandler())\n        , STATUS_OK);\n\n\n    checkRules(makeMap(\"resource\", \"/update/json/docs\",\n        \"httpMethod\", \"POST\",\n        \"collectionRequests\", \"mycoll\",\n        \"handler\", new UpdateRequestHandler())\n        , PROMPT_FOR_CREDENTIALS);\n\n    checkRules(makeMap(\"resource\", \"/schema\",\n        \"userPrincipal\", \"somebody\",\n        \"collectionRequests\", \"mycoll\",\n        \"httpMethod\", \"POST\",\n        \"handler\", new SchemaHandler())\n        , FORBIDDEN);\n\n    checkRules(makeMap(\"resource\", \"/schema\",\n        \"userPrincipal\", \"somebody\",\n        \"collectionRequests\", \"mycoll\",\n        \"httpMethod\", \"GET\",\n        \"handler\", new SchemaHandler()\n    )\n        , STATUS_OK);\n\n    checkRules(makeMap(\"resource\", \"/schema/fields\",\n        \"userPrincipal\", \"somebody\",\n        \"collectionRequests\", \"mycoll\",\n        \"httpMethod\", \"GET\",\n        \"handler\", new SchemaHandler())\n        , STATUS_OK);\n\n    checkRules(makeMap(\"resource\", \"/schema\",\n        \"userPrincipal\", \"somebody\",\n        \"collectionRequests\", \"mycoll\",\n        \"httpMethod\", \"POST\",\n        \"handler\", new SchemaHandler())\n        , FORBIDDEN);\n\n    checkRules(makeMap(\"resource\", \"/admin/collections\",\n        \"userPrincipal\", \"tim\",\n        \"requestType\", RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"httpMethod\", \"GET\",\n        \"handler\", new CollectionsHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"LIST\")))\n        , STATUS_OK);\n\n    checkRules(makeMap(\"resource\", \"/admin/collections\",\n        \"userPrincipal\", null,\n        \"requestType\", RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"httpMethod\", \"GET\",\n        \"handler\", new CollectionsHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"LIST\")))\n        , STATUS_OK);\n\n    checkRules(makeMap(\"resource\", \"/admin/collections\",\n        \"userPrincipal\", null,\n        \"requestType\", RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"handler\", new CollectionsHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"CREATE\")))\n        , PROMPT_FOR_CREDENTIALS);\n\n    checkRules(makeMap(\"resource\", \"/admin/collections\",\n        \"userPrincipal\", null,\n        \"requestType\", RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"handler\", new CollectionsHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"RELOAD\")))\n        , PROMPT_FOR_CREDENTIALS);\n\n\n    checkRules(makeMap(\"resource\", \"/admin/collections\",\n        \"userPrincipal\", \"somebody\",\n        \"requestType\", RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"handler\", new CollectionsHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"CREATE\")))\n        , FORBIDDEN);\n\n    checkRules(makeMap(\"resource\", \"/admin/collections\",\n        \"userPrincipal\", \"tim\",\n        \"requestType\", RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"handler\", new CollectionsHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"CREATE\")))\n        , STATUS_OK);\n\n    checkRules(makeMap(\"resource\", \"/select\",\n        \"httpMethod\", \"GET\",\n        \"handler\", new SearchHandler(),\n        \"collectionRequests\", singletonList(new CollectionRequest(\"mycoll\")),\n        \"userPrincipal\", \"joe\")\n        , FORBIDDEN);\n\n\n    Map rules = (Map) Utils.fromJSONString(permissions);\n    ((Map)rules.get(\"user-role\")).put(\"cio\",\"su\");\n    ((List)rules.get(\"permissions\")).add( makeMap(\"name\", \"all\", \"role\", \"su\"));\n\n    checkRules(makeMap(\"resource\", ReplicationHandler.PATH,\n        \"httpMethod\", \"POST\",\n        \"userPrincipal\", \"tim\",\n        \"handler\", new ReplicationHandler(),\n        \"collectionRequests\", singletonList(new CollectionRequest(\"mycoll\")) )\n        , FORBIDDEN, rules);\n\n    checkRules(makeMap(\"resource\", ReplicationHandler.PATH,\n        \"httpMethod\", \"POST\",\n        \"userPrincipal\", \"cio\",\n        \"handler\", new ReplicationHandler(),\n        \"collectionRequests\", singletonList(new CollectionRequest(\"mycoll\")) )\n        , STATUS_OK, rules);\n\n    checkRules(makeMap(\"resource\", \"/admin/collections\",\n        \"userPrincipal\", \"tim\",\n        \"requestType\", AuthorizationContext.RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"handler\", new CollectionsHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"CREATE\")))\n        , STATUS_OK, rules);\n\n    rules = (Map) Utils.fromJSONString(permissions);\n    ((List)rules.get(\"permissions\")).add( makeMap(\"name\", \"core-admin-edit\", \"role\", \"su\"));\n    ((List)rules.get(\"permissions\")).add( makeMap(\"name\", \"core-admin-read\", \"role\", \"user\"));\n    ((Map)rules.get(\"user-role\")).put(\"cio\",\"su\");\n    ((List)rules.get(\"permissions\")).add( makeMap(\"name\", \"all\", \"role\", \"su\"));\n    permissions = Utils.toJSONString(rules);\n\n    checkRules(makeMap(\"resource\", \"/admin/cores\",\n        \"userPrincipal\", null,\n        \"requestType\", RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"handler\", new CoreAdminHandler(null),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"CREATE\")))\n        , PROMPT_FOR_CREDENTIALS);\n\n    checkRules(makeMap(\"resource\", \"/admin/cores\",\n        \"userPrincipal\", \"joe\",\n        \"requestType\", RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"handler\", new CoreAdminHandler(null),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"CREATE\")))\n        , FORBIDDEN);\n\n  checkRules(makeMap(\"resource\", \"/admin/cores\",\n        \"userPrincipal\", \"joe\",\n        \"requestType\", RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"handler\", new CoreAdminHandler(null),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"STATUS\")))\n        , STATUS_OK);\n\n    checkRules(makeMap(\"resource\", \"/admin/cores\",\n        \"userPrincipal\", \"cio\",\n        \"requestType\", RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"handler\", new CoreAdminHandler(null),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"CREATE\")))\n        ,STATUS_OK );\n\n    rules = (Map) Utils.fromJSONString(permissions);\n    List permissions = (List) rules.get(\"permissions\");\n    permissions.remove(permissions.size() -1);//remove the 'all' permission\n    permissions.add(makeMap(\"name\", \"test-params\", \"role\", \"admin\", \"path\", \"/x\", \"params\",\n        makeMap(\"key\", Arrays.asList(\"REGEX:(?i)val1\", \"VAL2\"))));\n    this.permissions = Utils.toJSONString(rules);\n\n    checkRules(makeMap(\"resource\", \"/x\",\n        \"userPrincipal\", null,\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", new DumpRequestHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"key\", \"VAL1\")))\n        , PROMPT_FOR_CREDENTIALS);\n\n    checkRules(makeMap(\"resource\", \"/x\",\n        \"userPrincipal\", null,\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", new DumpRequestHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"key\", \"Val1\")))\n        , PROMPT_FOR_CREDENTIALS);\n\n    checkRules(makeMap(\"resource\", \"/x\",\n        \"userPrincipal\", null,\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", new DumpRequestHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"key\", \"Val1\")))\n        , PROMPT_FOR_CREDENTIALS);\n    checkRules(makeMap(\"resource\", \"/x\",\n        \"userPrincipal\", \"joe\",\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", new DumpRequestHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"key\", \"Val1\")))\n        , FORBIDDEN);\n\n    checkRules(makeMap(\"resource\", \"/x\",\n        \"userPrincipal\", \"joe\",\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", new DumpRequestHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"key\", \"Val2\")))\n        , STATUS_OK);\n    checkRules(makeMap(\"resource\", \"/x\",\n        \"userPrincipal\", \"joe\",\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", new DumpRequestHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"key\", \"VAL2\")))\n        , FORBIDDEN);\n\n    checkRules(makeMap(\"resource\", \"/update\",\n        \"userPrincipal\", \"solr\",\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", new UpdateRequestHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"key\", \"VAL2\")))\n        , FORBIDDEN, (Map<String, Object>) Utils.fromJSONString( \"{user-role:{\" +\n        \"      admin:[admin_role],\" +\n        \"      update:[update_role],\" +\n        \"      solr:[read_role]},\" +\n        \"    permissions:[\" +\n        \"      {name:update, role:[admin_role,update_role]},\" +\n        \"      {name:read, role:[admin_role,update_role,read_role]}\" +\n        \"]}\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5e0ac06a3dde3a146042d8eb8820dc45326e9263","date":1594139870,"type":3,"author":"Mike Drob","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/BaseTestRuleBasedAuthorizationPlugin#testBasicPermissions().mjava","pathOld":"solr/core/src/test/org/apache/solr/security/BaseTestRuleBasedAuthorizationPlugin#testBasicPermissions().mjava","sourceNew":"  @Test\n  public void testBasicPermissions() {\n    checkRules(Map.of(\"resource\", \"/update/json/docs\",\n        \"httpMethod\", \"POST\",\n        \"userPrincipal\", \"unknownuser\",\n        \"collectionRequests\", \"freeforall\",\n        \"handler\", new UpdateRequestHandler())\n        , STATUS_OK);\n\n    checkRules(Map.of(\"resource\", \"/update/json/docs\",\n        \"httpMethod\", \"POST\",\n        \"userPrincipal\", \"tim\",\n        \"collectionRequests\", \"mycoll\",\n        \"handler\", new UpdateRequestHandler())\n        , STATUS_OK);\n\n    checkRules(Map.of(\"resource\", \"/update/json/docs\",\n        \"httpMethod\", \"POST\",\n        \"collectionRequests\", \"mycoll\",\n        \"handler\", new UpdateRequestHandler())\n        , PROMPT_FOR_CREDENTIALS);\n\n    checkRules(Map.of(\"resource\", \"/schema\",\n        \"userPrincipal\", \"somebody\",\n        \"collectionRequests\", \"mycoll\",\n        \"httpMethod\", \"POST\",\n        \"handler\", new SchemaHandler())\n        , FORBIDDEN);\n\n    checkRules(Map.of(\"resource\", \"/schema\",\n        \"userPrincipal\", \"somebody\",\n        \"collectionRequests\", \"mycoll\",\n        \"httpMethod\", \"GET\",\n        \"handler\", new SchemaHandler())\n        , STATUS_OK);\n\n    checkRules(Map.of(\"resource\", \"/schema/fields\",\n        \"userPrincipal\", \"somebody\",\n        \"collectionRequests\", \"mycoll\",\n        \"httpMethod\", \"GET\",\n        \"handler\", new SchemaHandler())\n        , STATUS_OK);\n\n    checkRules(Map.of(\"resource\", \"/schema\",\n        \"userPrincipal\", \"somebody\",\n        \"collectionRequests\", \"mycoll\",\n        \"httpMethod\", \"POST\",\n        \"handler\", new SchemaHandler())\n        , FORBIDDEN);\n\n    checkRules(Map.of(\"resource\", \"/admin/collections\",\n        \"userPrincipal\", \"tim\",\n        \"requestType\", RequestType.ADMIN,\n        \"httpMethod\", \"GET\",\n        \"handler\", new CollectionsHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"LIST\")))\n        , STATUS_OK);\n\n    checkRules(Map.of(\"resource\", \"/admin/collections\",\n        \"requestType\", RequestType.ADMIN,\n        \"httpMethod\", \"GET\",\n        \"handler\", new CollectionsHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"LIST\")))\n        , STATUS_OK);\n\n    checkRules(Map.of(\"resource\", \"/admin/collections\",\n        \"requestType\", RequestType.ADMIN,\n        \"handler\", new CollectionsHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"CREATE\")))\n        , PROMPT_FOR_CREDENTIALS);\n\n    checkRules(Map.of(\"resource\", \"/admin/collections\",\n        \"requestType\", RequestType.ADMIN,\n        \"handler\", new CollectionsHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"RELOAD\")))\n        , PROMPT_FOR_CREDENTIALS);\n\n    checkRules(Map.of(\"resource\", \"/admin/collections\",\n        \"userPrincipal\", \"somebody\",\n        \"requestType\", RequestType.ADMIN,\n        \"handler\", new CollectionsHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"CREATE\")))\n        , FORBIDDEN);\n\n    checkRules(Map.of(\"resource\", \"/admin/collections\",\n        \"userPrincipal\", \"tim\",\n        \"requestType\", RequestType.ADMIN,\n        \"handler\", new CollectionsHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"CREATE\")))\n        , STATUS_OK);\n\n    checkRules(Map.of(\"resource\", \"/select\",\n        \"httpMethod\", \"GET\",\n        \"handler\", new SearchHandler(),\n        \"collectionRequests\", singletonList(new CollectionRequest(\"mycoll\")),\n        \"userPrincipal\", \"joe\")\n        , FORBIDDEN);\n\n    setUserRole(\"cio\", \"su\");\n    addPermission(\"all\", \"su\");\n\n    checkRules(Map.of(\"resource\", ReplicationHandler.PATH,\n        \"httpMethod\", \"POST\",\n        \"userPrincipal\", \"tim\",\n        \"handler\", new ReplicationHandler(),\n        \"collectionRequests\", singletonList(new CollectionRequest(\"mycoll\")) )\n        , FORBIDDEN);\n\n    checkRules(Map.of(\"resource\", ReplicationHandler.PATH,\n        \"httpMethod\", \"POST\",\n        \"userPrincipal\", \"cio\",\n        \"handler\", new ReplicationHandler(),\n        \"collectionRequests\", singletonList(new CollectionRequest(\"mycoll\")) )\n        , STATUS_OK);\n\n    checkRules(Map.of(\"resource\", \"/admin/collections\",\n        \"userPrincipal\", \"tim\",\n        \"requestType\", AuthorizationContext.RequestType.ADMIN,\n        \"handler\", new CollectionsHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"CREATE\")))\n        , STATUS_OK);\n  }\n\n","sourceOld":"  @Test\n  public void testBasicPermissions() {\n    checkRules(makeMap(\"resource\", \"/update/json/docs\",\n        \"httpMethod\", \"POST\",\n        \"userPrincipal\", \"unknownuser\",\n        \"collectionRequests\", \"freeforall\",\n        \"handler\", new UpdateRequestHandler())\n        , STATUS_OK);\n\n    checkRules(makeMap(\"resource\", \"/update/json/docs\",\n        \"httpMethod\", \"POST\",\n        \"userPrincipal\", \"tim\",\n        \"collectionRequests\", \"mycoll\",\n        \"handler\", new UpdateRequestHandler())\n        , STATUS_OK);\n\n    checkRules(makeMap(\"resource\", \"/update/json/docs\",\n        \"httpMethod\", \"POST\",\n        \"collectionRequests\", \"mycoll\",\n        \"handler\", new UpdateRequestHandler())\n        , PROMPT_FOR_CREDENTIALS);\n\n    checkRules(makeMap(\"resource\", \"/schema\",\n        \"userPrincipal\", \"somebody\",\n        \"collectionRequests\", \"mycoll\",\n        \"httpMethod\", \"POST\",\n        \"handler\", new SchemaHandler())\n        , FORBIDDEN);\n\n    checkRules(makeMap(\"resource\", \"/schema\",\n        \"userPrincipal\", \"somebody\",\n        \"collectionRequests\", \"mycoll\",\n        \"httpMethod\", \"GET\",\n        \"handler\", new SchemaHandler())\n        , STATUS_OK);\n\n    checkRules(makeMap(\"resource\", \"/schema/fields\",\n        \"userPrincipal\", \"somebody\",\n        \"collectionRequests\", \"mycoll\",\n        \"httpMethod\", \"GET\",\n        \"handler\", new SchemaHandler())\n        , STATUS_OK);\n\n    checkRules(makeMap(\"resource\", \"/schema\",\n        \"userPrincipal\", \"somebody\",\n        \"collectionRequests\", \"mycoll\",\n        \"httpMethod\", \"POST\",\n        \"handler\", new SchemaHandler())\n        , FORBIDDEN);\n\n    checkRules(makeMap(\"resource\", \"/admin/collections\",\n        \"userPrincipal\", \"tim\",\n        \"requestType\", RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"httpMethod\", \"GET\",\n        \"handler\", new CollectionsHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"LIST\")))\n        , STATUS_OK);\n\n    checkRules(makeMap(\"resource\", \"/admin/collections\",\n        \"userPrincipal\", null,\n        \"requestType\", RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"httpMethod\", \"GET\",\n        \"handler\", new CollectionsHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"LIST\")))\n        , STATUS_OK);\n\n    checkRules(makeMap(\"resource\", \"/admin/collections\",\n        \"userPrincipal\", null,\n        \"requestType\", RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"handler\", new CollectionsHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"CREATE\")))\n        , PROMPT_FOR_CREDENTIALS);\n\n    checkRules(makeMap(\"resource\", \"/admin/collections\",\n        \"userPrincipal\", null,\n        \"requestType\", RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"handler\", new CollectionsHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"RELOAD\")))\n        , PROMPT_FOR_CREDENTIALS);\n\n    checkRules(makeMap(\"resource\", \"/admin/collections\",\n        \"userPrincipal\", \"somebody\",\n        \"requestType\", RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"handler\", new CollectionsHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"CREATE\")))\n        , FORBIDDEN);\n\n    checkRules(makeMap(\"resource\", \"/admin/collections\",\n        \"userPrincipal\", \"tim\",\n        \"requestType\", RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"handler\", new CollectionsHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"CREATE\")))\n        , STATUS_OK);\n\n    checkRules(makeMap(\"resource\", \"/select\",\n        \"httpMethod\", \"GET\",\n        \"handler\", new SearchHandler(),\n        \"collectionRequests\", singletonList(new CollectionRequest(\"mycoll\")),\n        \"userPrincipal\", \"joe\")\n        , FORBIDDEN);\n\n    setUserRole(\"cio\", \"su\");\n    addPermission(\"all\", \"su\");\n\n    checkRules(makeMap(\"resource\", ReplicationHandler.PATH,\n        \"httpMethod\", \"POST\",\n        \"userPrincipal\", \"tim\",\n        \"handler\", new ReplicationHandler(),\n        \"collectionRequests\", singletonList(new CollectionRequest(\"mycoll\")) )\n        , FORBIDDEN);\n\n    checkRules(makeMap(\"resource\", ReplicationHandler.PATH,\n        \"httpMethod\", \"POST\",\n        \"userPrincipal\", \"cio\",\n        \"handler\", new ReplicationHandler(),\n        \"collectionRequests\", singletonList(new CollectionRequest(\"mycoll\")) )\n        , STATUS_OK);\n\n    checkRules(makeMap(\"resource\", \"/admin/collections\",\n        \"userPrincipal\", \"tim\",\n        \"requestType\", AuthorizationContext.RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"handler\", new CollectionsHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"CREATE\")))\n        , STATUS_OK);\n\n    resetPermissionsAndRoles();\n    addPermission(\"core-admin-edit\", \"su\");\n    addPermission(\"core-admin-read\", \"user\");\n    setUserRole(\"cio\", \"su\");\n    addPermission(\"all\", \"su\");\n\n    checkRules(makeMap(\"resource\", \"/admin/cores\",\n        \"userPrincipal\", null,\n        \"requestType\", RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"handler\", new CoreAdminHandler(null),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"CREATE\")))\n        , PROMPT_FOR_CREDENTIALS);\n\n    checkRules(makeMap(\"resource\", \"/admin/cores\",\n        \"userPrincipal\", \"joe\",\n        \"requestType\", RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"handler\", new CoreAdminHandler(null),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"CREATE\")))\n        , FORBIDDEN);\n\n    checkRules(makeMap(\"resource\", \"/admin/cores\",\n        \"userPrincipal\", \"joe\",\n        \"requestType\", RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"handler\", new CoreAdminHandler(null),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"STATUS\")))\n        , STATUS_OK);\n\n    checkRules(makeMap(\"resource\", \"/admin/cores\",\n        \"userPrincipal\", \"cio\",\n        \"requestType\", RequestType.ADMIN,\n        \"collectionRequests\", null,\n        \"handler\", new CoreAdminHandler(null),\n        \"params\", new MapSolrParams(singletonMap(\"action\", \"CREATE\")))\n        ,STATUS_OK);\n\n    resetPermissionsAndRoles();\n    addPermission(\"test-params\", \"admin\", \"/x\", makeMap(\"key\", Arrays.asList(\"REGEX:(?i)val1\", \"VAL2\")));\n\n    checkRules(makeMap(\"resource\", \"/x\",\n        \"userPrincipal\", null,\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", new DumpRequestHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"key\", \"VAL1\")))\n        , PROMPT_FOR_CREDENTIALS);\n\n    checkRules(makeMap(\"resource\", \"/x\",\n        \"userPrincipal\", null,\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", new DumpRequestHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"key\", \"Val1\")))\n        , PROMPT_FOR_CREDENTIALS);\n\n    checkRules(makeMap(\"resource\", \"/x\",\n        \"userPrincipal\", null,\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", new DumpRequestHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"key\", \"Val1\")))\n        , PROMPT_FOR_CREDENTIALS);\n\n    checkRules(makeMap(\"resource\", \"/x\",\n        \"userPrincipal\", \"joe\",\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", new DumpRequestHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"key\", \"Val1\")))\n        , FORBIDDEN);\n\n    checkRules(makeMap(\"resource\", \"/x\",\n        \"userPrincipal\", \"joe\",\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", new DumpRequestHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"key\", \"Val2\")))\n        , STATUS_OK);\n\n    checkRules(makeMap(\"resource\", \"/x\",\n        \"userPrincipal\", \"joe\",\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", new DumpRequestHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"key\", \"VAL2\")))\n        , FORBIDDEN);\n\n    Map<String, Object> customRules = (Map<String, Object>) Utils.fromJSONString(\n        \"{permissions:[\" +\n        \"      {name:update, role:[admin_role,update_role]},\" +\n        \"      {name:read, role:[admin_role,update_role,read_role]}\" +\n        \"]}\");\n\n    clearUserRoles();\n    setUserRole(\"admin\", \"admin_role\");\n    setUserRole(\"update\", \"update_role\");\n    setUserRole(\"solr\", \"read_role\");\n\n    checkRules(makeMap(\"resource\", \"/update\",\n        \"userPrincipal\", \"solr\",\n        \"requestType\", RequestType.UNKNOWN,\n        \"collectionRequests\", \"go\",\n        \"handler\", new UpdateRequestHandler(),\n        \"params\", new MapSolrParams(singletonMap(\"key\", \"VAL2\")))\n        , FORBIDDEN, customRules);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8076096f334b0665d0a69a63ee98ac09baad402b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5e0ac06a3dde3a146042d8eb8820dc45326e9263":["8076096f334b0665d0a69a63ee98ac09baad402b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5e0ac06a3dde3a146042d8eb8820dc45326e9263"]},"commit2Childs":{"8076096f334b0665d0a69a63ee98ac09baad402b":["5e0ac06a3dde3a146042d8eb8820dc45326e9263"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8076096f334b0665d0a69a63ee98ac09baad402b"],"5e0ac06a3dde3a146042d8eb8820dc45326e9263":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}