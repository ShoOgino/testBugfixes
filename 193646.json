{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsFormat#vectorsReader(Directory,SegmentInfo,FieldInfos,IOContext).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsFormat#vectorsReader(Directory,SegmentInfo,FieldInfos,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsFormat#vectorsReader(Directory,SegmentInfo,FieldInfos,IOContext).mjava","sourceNew":"  @Override\n  public TermVectorsReader vectorsReader(Directory directory,SegmentInfo segmentInfo, FieldInfos fieldInfos, IOContext context) throws IOException {\n    return new Lucene3xTermVectorsReader(directory, segmentInfo, fieldInfos, context);\n  }\n\n","sourceOld":"  @Override\n  public TermVectorsReader vectorsReader(Directory directory,SegmentInfo segmentInfo, FieldInfos fieldInfos, IOContext context) throws IOException {\n    return new Lucene3xTermVectorsReader(directory, segmentInfo, fieldInfos, context);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a8b14bc4241c302311422d5c6f7627f8febb86e","date":1337291675,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsFormat#vectorsReader(Directory,SegmentInfo,FieldInfos,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsFormat#vectorsReader(Directory,SegmentInfo,FieldInfos,IOContext).mjava","sourceNew":"  @Override\n  public TermVectorsReader vectorsReader(Directory directory, SegmentInfo segmentInfo, FieldInfos fieldInfos, IOContext context) throws IOException {\n    final String fileName = IndexFileNames.segmentFileName(segmentInfo.getDocStoreSegment(), \"\", Lucene3xTermVectorsReader.VECTORS_FIELDS_EXTENSION);\n\n    // Unfortunately, for 3.x indices, each segment's\n    // FieldInfos can lie about hasVectors (claim it's true\n    // when really it's false).... so we have to carefully\n    // check if the files really exist before trying to open\n    // them (4.x has fixed this):\n    final boolean exists;\n    if (segmentInfo.getDocStoreOffset() != -1 && segmentInfo.getDocStoreIsCompoundFile()) {\n      String cfxFileName = IndexFileNames.segmentFileName(segmentInfo.getDocStoreSegment(), \"\", Lucene3xCodec.COMPOUND_FILE_STORE_EXTENSION);\n      if (segmentInfo.dir.fileExists(cfxFileName)) {\n        Directory cfsDir = new CompoundFileDirectory(segmentInfo.dir, cfxFileName, context, false);\n        try {\n          exists = cfsDir.fileExists(fileName);\n        } finally {\n          cfsDir.close();\n        }\n      } else {\n        exists = false;\n      }\n    } else {\n      exists = directory.fileExists(fileName);\n    }\n\n    if (!exists) {\n      // 3x's FieldInfos sometimes lies and claims a segment\n      // has vectors when it doesn't:\n      return null;\n    } else {\n      return new Lucene3xTermVectorsReader(directory, segmentInfo, fieldInfos, context);\n    }\n  }\n\n","sourceOld":"  @Override\n  public TermVectorsReader vectorsReader(Directory directory,SegmentInfo segmentInfo, FieldInfos fieldInfos, IOContext context) throws IOException {\n    return new Lucene3xTermVectorsReader(directory, segmentInfo, fieldInfos, context);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a917aca07a305ab70118a83e84d931503441271","date":1337826487,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsFormat#vectorsReader(Directory,SegmentInfo,FieldInfos,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsFormat#vectorsReader(Directory,SegmentInfo,FieldInfos,IOContext).mjava","sourceNew":"  @Override\n  public TermVectorsReader vectorsReader(Directory directory, SegmentInfo segmentInfo, FieldInfos fieldInfos, IOContext context) throws IOException {\n    final String fileName = IndexFileNames.segmentFileName(Lucene3xSegmentInfoFormat.getDocStoreSegment(segmentInfo), \"\", Lucene3xTermVectorsReader.VECTORS_FIELDS_EXTENSION);\n\n    // Unfortunately, for 3.x indices, each segment's\n    // FieldInfos can lie about hasVectors (claim it's true\n    // when really it's false).... so we have to carefully\n    // check if the files really exist before trying to open\n    // them (4.x has fixed this):\n    final boolean exists;\n    if (Lucene3xSegmentInfoFormat.getDocStoreOffset(segmentInfo) != -1 && Lucene3xSegmentInfoFormat.getDocStoreIsCompoundFile(segmentInfo)) {\n      String cfxFileName = IndexFileNames.segmentFileName(Lucene3xSegmentInfoFormat.getDocStoreSegment(segmentInfo), \"\", Lucene3xCodec.COMPOUND_FILE_STORE_EXTENSION);\n      if (segmentInfo.dir.fileExists(cfxFileName)) {\n        Directory cfsDir = new CompoundFileDirectory(segmentInfo.dir, cfxFileName, context, false);\n        try {\n          exists = cfsDir.fileExists(fileName);\n        } finally {\n          cfsDir.close();\n        }\n      } else {\n        exists = false;\n      }\n    } else {\n      exists = directory.fileExists(fileName);\n    }\n\n    if (!exists) {\n      // 3x's FieldInfos sometimes lies and claims a segment\n      // has vectors when it doesn't:\n      return null;\n    } else {\n      return new Lucene3xTermVectorsReader(directory, segmentInfo, fieldInfos, context);\n    }\n  }\n\n","sourceOld":"  @Override\n  public TermVectorsReader vectorsReader(Directory directory, SegmentInfo segmentInfo, FieldInfos fieldInfos, IOContext context) throws IOException {\n    final String fileName = IndexFileNames.segmentFileName(segmentInfo.getDocStoreSegment(), \"\", Lucene3xTermVectorsReader.VECTORS_FIELDS_EXTENSION);\n\n    // Unfortunately, for 3.x indices, each segment's\n    // FieldInfos can lie about hasVectors (claim it's true\n    // when really it's false).... so we have to carefully\n    // check if the files really exist before trying to open\n    // them (4.x has fixed this):\n    final boolean exists;\n    if (segmentInfo.getDocStoreOffset() != -1 && segmentInfo.getDocStoreIsCompoundFile()) {\n      String cfxFileName = IndexFileNames.segmentFileName(segmentInfo.getDocStoreSegment(), \"\", Lucene3xCodec.COMPOUND_FILE_STORE_EXTENSION);\n      if (segmentInfo.dir.fileExists(cfxFileName)) {\n        Directory cfsDir = new CompoundFileDirectory(segmentInfo.dir, cfxFileName, context, false);\n        try {\n          exists = cfsDir.fileExists(fileName);\n        } finally {\n          cfsDir.close();\n        }\n      } else {\n        exists = false;\n      }\n    } else {\n      exists = directory.fileExists(fileName);\n    }\n\n    if (!exists) {\n      // 3x's FieldInfos sometimes lies and claims a segment\n      // has vectors when it doesn't:\n      return null;\n    } else {\n      return new Lucene3xTermVectorsReader(directory, segmentInfo, fieldInfos, context);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsFormat#vectorsReader(Directory,SegmentInfo,FieldInfos,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsFormat#vectorsReader(Directory,SegmentInfo,FieldInfos,IOContext).mjava","sourceNew":"  @Override\n  public TermVectorsReader vectorsReader(Directory directory, SegmentInfo segmentInfo, FieldInfos fieldInfos, IOContext context) throws IOException {\n    final String fileName = IndexFileNames.segmentFileName(Lucene3xSegmentInfoFormat.getDocStoreSegment(segmentInfo), \"\", Lucene3xTermVectorsReader.VECTORS_FIELDS_EXTENSION);\n\n    // Unfortunately, for 3.x indices, each segment's\n    // FieldInfos can lie about hasVectors (claim it's true\n    // when really it's false).... so we have to carefully\n    // check if the files really exist before trying to open\n    // them (4.x has fixed this):\n    final boolean exists;\n    if (Lucene3xSegmentInfoFormat.getDocStoreOffset(segmentInfo) != -1 && Lucene3xSegmentInfoFormat.getDocStoreIsCompoundFile(segmentInfo)) {\n      String cfxFileName = IndexFileNames.segmentFileName(Lucene3xSegmentInfoFormat.getDocStoreSegment(segmentInfo), \"\", Lucene3xCodec.COMPOUND_FILE_STORE_EXTENSION);\n      if (segmentInfo.dir.fileExists(cfxFileName)) {\n        Directory cfsDir = new CompoundFileDirectory(segmentInfo.dir, cfxFileName, context, false);\n        try {\n          exists = cfsDir.fileExists(fileName);\n        } finally {\n          cfsDir.close();\n        }\n      } else {\n        exists = false;\n      }\n    } else {\n      exists = directory.fileExists(fileName);\n    }\n\n    if (!exists) {\n      // 3x's FieldInfos sometimes lies and claims a segment\n      // has vectors when it doesn't:\n      return null;\n    } else {\n      return new Lucene3xTermVectorsReader(directory, segmentInfo, fieldInfos, context);\n    }\n  }\n\n","sourceOld":"  @Override\n  public TermVectorsReader vectorsReader(Directory directory,SegmentInfo segmentInfo, FieldInfos fieldInfos, IOContext context) throws IOException {\n    return new Lucene3xTermVectorsReader(directory, segmentInfo, fieldInfos, context);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57ae3024996ccdb3c36c42cb890e1efb37df4ce8","date":1338343651,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsFormat#vectorsReader(Directory,SegmentInfo,FieldInfos,IOContext).mjava","sourceNew":null,"sourceOld":"  @Override\n  public TermVectorsReader vectorsReader(Directory directory, SegmentInfo segmentInfo, FieldInfos fieldInfos, IOContext context) throws IOException {\n    final String fileName = IndexFileNames.segmentFileName(Lucene3xSegmentInfoFormat.getDocStoreSegment(segmentInfo), \"\", Lucene3xTermVectorsReader.VECTORS_FIELDS_EXTENSION);\n\n    // Unfortunately, for 3.x indices, each segment's\n    // FieldInfos can lie about hasVectors (claim it's true\n    // when really it's false).... so we have to carefully\n    // check if the files really exist before trying to open\n    // them (4.x has fixed this):\n    final boolean exists;\n    if (Lucene3xSegmentInfoFormat.getDocStoreOffset(segmentInfo) != -1 && Lucene3xSegmentInfoFormat.getDocStoreIsCompoundFile(segmentInfo)) {\n      String cfxFileName = IndexFileNames.segmentFileName(Lucene3xSegmentInfoFormat.getDocStoreSegment(segmentInfo), \"\", Lucene3xCodec.COMPOUND_FILE_STORE_EXTENSION);\n      if (segmentInfo.dir.fileExists(cfxFileName)) {\n        Directory cfsDir = new CompoundFileDirectory(segmentInfo.dir, cfxFileName, context, false);\n        try {\n          exists = cfsDir.fileExists(fileName);\n        } finally {\n          cfsDir.close();\n        }\n      } else {\n        exists = false;\n      }\n    } else {\n      exists = directory.fileExists(fileName);\n    }\n\n    if (!exists) {\n      // 3x's FieldInfos sometimes lies and claims a segment\n      // has vectors when it doesn't:\n      return null;\n    } else {\n      return new Lucene3xTermVectorsReader(directory, segmentInfo, fieldInfos, context);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4a8b14bc4241c302311422d5c6f7627f8febb86e":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","6a917aca07a305ab70118a83e84d931503441271"],"6a917aca07a305ab70118a83e84d931503441271":["4a8b14bc4241c302311422d5c6f7627f8febb86e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"]},"commit2Childs":{"4a8b14bc4241c302311422d5c6f7627f8febb86e":["6a917aca07a305ab70118a83e84d931503441271"],"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"],"6a917aca07a305ab70118a83e84d931503441271":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["4a8b14bc4241c302311422d5c6f7627f8febb86e","615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}