{"path":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#newBoxInternal(String,byte[][],byte[][]).mjava","commits":[{"id":"609ba4ce51a7095e9815d4fb2666ec85714f8f54","date":1456320705,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#newBoxInternal(String,byte[][],byte[][]).mjava","pathOld":"/dev/null","sourceNew":"  private static Query newBoxInternal(String field, byte[][] min, byte[][] max) {\n    return new PointRangeQuery(field, min, new boolean[] { true, true }, max, new boolean[] { false, false }) {\n      @Override\n      protected String toString(int dimension, byte[] value) {\n        if (dimension == 0) {\n          return Double.toString(decodeLat(value, 0));\n        } else if (dimension == 1) {\n          return Double.toString(decodeLon(value, 0));\n        } else {\n          throw new AssertionError();\n        }\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1800b996d8677670482a071dcb7a48b08c423ace"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1af4bde3de13aa03ab458c2b7adb1c088fcf7ad6","date":1456321728,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#newBoxInternal(String,byte[][],byte[][]).mjava","pathOld":"/dev/null","sourceNew":"  private static Query newBoxInternal(String field, byte[][] min, byte[][] max) {\n    return new PointRangeQuery(field, min, new boolean[] { true, true }, max, new boolean[] { false, false }) {\n      @Override\n      protected String toString(int dimension, byte[] value) {\n        if (dimension == 0) {\n          return Double.toString(decodeLat(value, 0));\n        } else if (dimension == 1) {\n          return Double.toString(decodeLon(value, 0));\n        } else {\n          throw new AssertionError();\n        }\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"94ee361295fb38310ac4d53cb4773d1622423d68","date":1456833885,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#newBoxInternal(String,byte[][],byte[][]).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#newBoxInternal(String,byte[][],byte[][]).mjava","sourceNew":"  private static Query newBoxInternal(String field, byte[][] min, byte[][] max) {\n    return new PointRangeQuery(field, min, new boolean[] { true, true }, max, new boolean[] { false, false }) {\n      @Override\n      protected String toString(int dimension, byte[] value) {\n        if (dimension == 0) {\n          return Double.toString(decodeLatitude(value, 0));\n        } else if (dimension == 1) {\n          return Double.toString(decodeLongitude(value, 0));\n        } else {\n          throw new AssertionError();\n        }\n      }\n    };\n  }\n\n","sourceOld":"  private static Query newBoxInternal(String field, byte[][] min, byte[][] max) {\n    return new PointRangeQuery(field, min, new boolean[] { true, true }, max, new boolean[] { false, false }) {\n      @Override\n      protected String toString(int dimension, byte[] value) {\n        if (dimension == 0) {\n          return Double.toString(decodeLat(value, 0));\n        } else if (dimension == 1) {\n          return Double.toString(decodeLon(value, 0));\n        } else {\n          throw new AssertionError();\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1800b996d8677670482a071dcb7a48b08c423ace","date":1456955558,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#newBoxInternal(String,byte[][],byte[][]).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#newBoxInternal(String,byte[][],byte[][]).mjava","sourceNew":"  private static Query newBoxInternal(String field, byte[][] min, byte[][] max) {\n    return new PointRangeQuery(field, min, max) {\n      @Override\n      protected String toString(int dimension, byte[] value) {\n        if (dimension == 0) {\n          return Double.toString(decodeLatitude(value, 0));\n        } else if (dimension == 1) {\n          return Double.toString(decodeLongitude(value, 0));\n        } else {\n          throw new AssertionError();\n        }\n      }\n    };\n  }\n\n","sourceOld":"  private static Query newBoxInternal(String field, byte[][] min, byte[][] max) {\n    return new PointRangeQuery(field, min, new boolean[] { true, true }, max, new boolean[] { false, false }) {\n      @Override\n      protected String toString(int dimension, byte[] value) {\n        if (dimension == 0) {\n          return Double.toString(decodeLatitude(value, 0));\n        } else if (dimension == 1) {\n          return Double.toString(decodeLongitude(value, 0));\n        } else {\n          throw new AssertionError();\n        }\n      }\n    };\n  }\n\n","bugFix":["609ba4ce51a7095e9815d4fb2666ec85714f8f54"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c422e924212367b334b4938f1fd3e44438e88c40","date":1456962933,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#newBoxInternal(String,byte[][],byte[][]).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#newBoxInternal(String,byte[][],byte[][]).mjava","sourceNew":"  private static Query newBoxInternal(String field, byte[][] min, byte[][] max) {\n    return new PointRangeQuery(field, min, max) {\n      @Override\n      protected String toString(int dimension, byte[] value) {\n        if (dimension == 0) {\n          return Double.toString(decodeLatitude(value, 0));\n        } else if (dimension == 1) {\n          return Double.toString(decodeLongitude(value, 0));\n        } else {\n          throw new AssertionError();\n        }\n      }\n    };\n  }\n\n","sourceOld":"  private static Query newBoxInternal(String field, byte[][] min, byte[][] max) {\n    return new PointRangeQuery(field, min, new boolean[] { true, true }, max, new boolean[] { false, false }) {\n      @Override\n      protected String toString(int dimension, byte[] value) {\n        if (dimension == 0) {\n          return Double.toString(decodeLatitude(value, 0));\n        } else if (dimension == 1) {\n          return Double.toString(decodeLongitude(value, 0));\n        } else {\n          throw new AssertionError();\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#newBoxInternal(String,byte[][],byte[][]).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#newBoxInternal(String,byte[][],byte[][]).mjava","sourceNew":"  private static Query newBoxInternal(String field, byte[][] min, byte[][] max) {\n    return new PointRangeQuery(field, min, max) {\n      @Override\n      protected String toString(int dimension, byte[] value) {\n        if (dimension == 0) {\n          return Double.toString(decodeLatitude(value, 0));\n        } else if (dimension == 1) {\n          return Double.toString(decodeLongitude(value, 0));\n        } else {\n          throw new AssertionError();\n        }\n      }\n    };\n  }\n\n","sourceOld":"  private static Query newBoxInternal(String field, byte[][] min, byte[][] max) {\n    return new PointRangeQuery(field, min, new boolean[] { true, true }, max, new boolean[] { false, false }) {\n      @Override\n      protected String toString(int dimension, byte[] value) {\n        if (dimension == 0) {\n          return Double.toString(decodeLat(value, 0));\n        } else if (dimension == 1) {\n          return Double.toString(decodeLon(value, 0));\n        } else {\n          throw new AssertionError();\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"606ea169579957651185909e7264798e99e714f9","date":1458504317,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#newBoxInternal(String,byte[],byte[]).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#newBoxInternal(String,byte[][],byte[][]).mjava","sourceNew":"  private static Query newBoxInternal(String field, byte[] min, byte[] max) {\n    return new PointRangeQuery(field, min, max, 2) {\n      @Override\n      protected String toString(int dimension, byte[] value) {\n        if (dimension == 0) {\n          return Double.toString(decodeLatitude(value, 0));\n        } else if (dimension == 1) {\n          return Double.toString(decodeLongitude(value, 0));\n        } else {\n          throw new AssertionError();\n        }\n      }\n    };\n  }\n\n","sourceOld":"  private static Query newBoxInternal(String field, byte[][] min, byte[][] max) {\n    return new PointRangeQuery(field, min, max) {\n      @Override\n      protected String toString(int dimension, byte[] value) {\n        if (dimension == 0) {\n          return Double.toString(decodeLatitude(value, 0));\n        } else if (dimension == 1) {\n          return Double.toString(decodeLongitude(value, 0));\n        } else {\n          throw new AssertionError();\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"609ba4ce51a7095e9815d4fb2666ec85714f8f54":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"94ee361295fb38310ac4d53cb4773d1622423d68":["609ba4ce51a7095e9815d4fb2666ec85714f8f54"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["609ba4ce51a7095e9815d4fb2666ec85714f8f54","c422e924212367b334b4938f1fd3e44438e88c40"],"606ea169579957651185909e7264798e99e714f9":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"c422e924212367b334b4938f1fd3e44438e88c40":["94ee361295fb38310ac4d53cb4773d1622423d68","1800b996d8677670482a071dcb7a48b08c423ace"],"1800b996d8677670482a071dcb7a48b08c423ace":["94ee361295fb38310ac4d53cb4773d1622423d68"],"1af4bde3de13aa03ab458c2b7adb1c088fcf7ad6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","609ba4ce51a7095e9815d4fb2666ec85714f8f54"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["606ea169579957651185909e7264798e99e714f9"]},"commit2Childs":{"609ba4ce51a7095e9815d4fb2666ec85714f8f54":["94ee361295fb38310ac4d53cb4773d1622423d68","cf1a614098b46c9c22afebd7b898ae4d1d2fc273","1af4bde3de13aa03ab458c2b7adb1c088fcf7ad6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["609ba4ce51a7095e9815d4fb2666ec85714f8f54","1af4bde3de13aa03ab458c2b7adb1c088fcf7ad6"],"94ee361295fb38310ac4d53cb4773d1622423d68":["c422e924212367b334b4938f1fd3e44438e88c40","1800b996d8677670482a071dcb7a48b08c423ace"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["606ea169579957651185909e7264798e99e714f9"],"606ea169579957651185909e7264798e99e714f9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c422e924212367b334b4938f1fd3e44438e88c40":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"1800b996d8677670482a071dcb7a48b08c423ace":["c422e924212367b334b4938f1fd3e44438e88c40"],"1af4bde3de13aa03ab458c2b7adb1c088fcf7ad6":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1af4bde3de13aa03ab458c2b7adb1c088fcf7ad6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}