{"path":"src/java/org/apache/lucene/store/MMapDirectory.MultiMMapIndexInput#readBytes(byte[],int,int).mjava","commits":[{"id":"ef084738192643e6e6fe09c159b37ff741390bb3","date":1096919051,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/MMapDirectory.MultiMMapIndexInput#readBytes(byte[],int,int).mjava","pathOld":"/dev/null","sourceNew":"    public void readBytes(byte[] b, int offset, int len) throws IOException {\n      while (len > curAvail) {\n        curBuf.get(b, offset, curAvail);\n        len -= curAvail;\n        offset += curAvail;\n        curBufIndex++;\n        curBuf = buffers[curBufIndex];\n        curBuf.position(0);      // index out of bounds when too many requested\n        curAvail = bufSizes[curBufIndex];\n      }\n      curBuf.get(b, offset, len);\n      curAvail -= len;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4318702054dec26b8daeb569f8be172e22070971","date":1098013625,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/MMapDirectory.MultiMMapIndexInput#readBytes(byte[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/MMapDirectory.MultiMMapIndexInput#readBytes(byte[],int,int).mjava","sourceNew":"    public void readBytes(byte[] b, int offset, int len) throws IOException {\n      while (len > curAvail) {\n        curBuf.get(b, offset, curAvail);\n        len -= curAvail;\n        offset += curAvail;\n        curBufIndex++;\n        curBuf = buffers[curBufIndex]; // index out of bounds when too many bytes requested\n        curBuf.position(0);\n        curAvail = bufSizes[curBufIndex];\n      }\n      curBuf.get(b, offset, len);\n      curAvail -= len;\n    }\n\n","sourceOld":"    public void readBytes(byte[] b, int offset, int len) throws IOException {\n      while (len > curAvail) {\n        curBuf.get(b, offset, curAvail);\n        len -= curAvail;\n        offset += curAvail;\n        curBufIndex++;\n        curBuf = buffers[curBufIndex];\n        curBuf.position(0);      // index out of bounds when too many requested\n        curAvail = bufSizes[curBufIndex];\n      }\n      curBuf.get(b, offset, len);\n      curAvail -= len;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"416d032f85b7ea8efc272f86ba46bc460589aff7","date":1243881250,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/MMapDirectory.MultiMMapIndexInput#readBytes(byte[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/MMapDirectory.MultiMMapIndexInput#readBytes(byte[],int,int).mjava","sourceNew":"    public void readBytes(byte[] b, int offset, int len) throws IOException {\n      while (len > curAvail) {\n        curBuf.get(b, offset, curAvail);\n        len -= curAvail;\n        offset += curAvail;\n        curBufIndex++;\n        if (curBufIndex >= buffers.length)\n          throw new IOException(\"read past EOF\");\n        curBuf = buffers[curBufIndex];\n        curBuf.position(0);\n        curAvail = bufSizes[curBufIndex];\n      }\n      curBuf.get(b, offset, len);\n      curAvail -= len;\n    }\n\n","sourceOld":"    public void readBytes(byte[] b, int offset, int len) throws IOException {\n      while (len > curAvail) {\n        curBuf.get(b, offset, curAvail);\n        len -= curAvail;\n        offset += curAvail;\n        curBufIndex++;\n        curBuf = buffers[curBufIndex]; // index out of bounds when too many bytes requested\n        curBuf.position(0);\n        curAvail = bufSizes[curBufIndex];\n      }\n      curBuf.get(b, offset, len);\n      curAvail -= len;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/MMapDirectory.MultiMMapIndexInput#readBytes(byte[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/MMapDirectory.MultiMMapIndexInput#readBytes(byte[],int,int).mjava","sourceNew":"    @Override\n    public void readBytes(byte[] b, int offset, int len) throws IOException {\n      while (len > curAvail) {\n        curBuf.get(b, offset, curAvail);\n        len -= curAvail;\n        offset += curAvail;\n        curBufIndex++;\n        if (curBufIndex >= buffers.length)\n          throw new IOException(\"read past EOF\");\n        curBuf = buffers[curBufIndex];\n        curBuf.position(0);\n        curAvail = bufSizes[curBufIndex];\n      }\n      curBuf.get(b, offset, len);\n      curAvail -= len;\n    }\n\n","sourceOld":"    public void readBytes(byte[] b, int offset, int len) throws IOException {\n      while (len > curAvail) {\n        curBuf.get(b, offset, curAvail);\n        len -= curAvail;\n        offset += curAvail;\n        curBufIndex++;\n        if (curBufIndex >= buffers.length)\n          throw new IOException(\"read past EOF\");\n        curBuf = buffers[curBufIndex];\n        curBuf.position(0);\n        curAvail = bufSizes[curBufIndex];\n      }\n      curBuf.get(b, offset, len);\n      curAvail -= len;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/MMapDirectory.MultiMMapIndexInput#readBytes(byte[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/MMapDirectory.MultiMMapIndexInput#readBytes(byte[],int,int).mjava","sourceNew":"    @Override\n    public void readBytes(byte[] b, int offset, int len) throws IOException {\n      while (len > curAvail) {\n        curBuf.get(b, offset, curAvail);\n        len -= curAvail;\n        offset += curAvail;\n        curBufIndex++;\n        if (curBufIndex >= buffers.length)\n          throw new IOException(\"read past EOF\");\n        curBuf = buffers[curBufIndex];\n        curBuf.position(0);\n        curAvail = bufSizes[curBufIndex];\n      }\n      curBuf.get(b, offset, len);\n      curAvail -= len;\n    }\n\n","sourceOld":"    @Override\n    public void readBytes(byte[] b, int offset, int len) throws IOException {\n      while (len > curAvail) {\n        curBuf.get(b, offset, curAvail);\n        len -= curAvail;\n        offset += curAvail;\n        curBufIndex++;\n        if (curBufIndex >= buffers.length)\n          throw new IOException(\"read past EOF\");\n        curBuf = buffers[curBufIndex];\n        curBuf.position(0);\n        curAvail = bufSizes[curBufIndex];\n      }\n      curBuf.get(b, offset, len);\n      curAvail -= len;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ef084738192643e6e6fe09c159b37ff741390bb3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4318702054dec26b8daeb569f8be172e22070971":["ef084738192643e6e6fe09c159b37ff741390bb3"],"8a9e385641d717e641408d8fbbc62be8fc766357":["416d032f85b7ea8efc272f86ba46bc460589aff7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"416d032f85b7ea8efc272f86ba46bc460589aff7":["4318702054dec26b8daeb569f8be172e22070971"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"]},"commit2Childs":{"ef084738192643e6e6fe09c159b37ff741390bb3":["4318702054dec26b8daeb569f8be172e22070971"],"4318702054dec26b8daeb569f8be172e22070971":["416d032f85b7ea8efc272f86ba46bc460589aff7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ef084738192643e6e6fe09c159b37ff741390bb3"],"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"416d032f85b7ea8efc272f86ba46bc460589aff7":["8a9e385641d717e641408d8fbbc62be8fc766357"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}