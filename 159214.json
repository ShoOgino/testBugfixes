{"path":"src/test/org/apache/lucene/analysis/TeeSinkTokenTest#setUp().mjava","commits":[{"id":"4c0e82525d61a2be6ba5d29eb5048c7d39ee1ad5","date":1196349488,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TeeSinkTokenTest#setUp().mjava","pathOld":"/dev/null","sourceNew":"  protected void setUp() {\n    tokens1 = new String[]{\"The\", \"quick\", \"Burgundy\", \"Fox\", \"jumped\", \"over\", \"the\", \"lazy\", \"Red\", \"Dogs\"};\n    tokens2 = new String[]{\"The\", \"Lazy\", \"Dogs\", \"should\", \"stay\", \"on\", \"the\", \"porch\"};\n    buffer1 = new StringBuffer();\n\n    for (int i = 0; i < tokens1.length; i++) {\n      buffer1.append(tokens1[i]).append(' ');\n    }\n    buffer2 = new StringBuffer();\n    for (int i = 0; i < tokens2.length; i++) {\n      buffer2.append(tokens2[i]).append(' ');\n\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223","date":1227051709,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TeeSinkTokenTest#setUp().mjava","pathOld":"src/test/org/apache/lucene/analysis/TeeSinkTokenTest#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n    tokens1 = new String[]{\"The\", \"quick\", \"Burgundy\", \"Fox\", \"jumped\", \"over\", \"the\", \"lazy\", \"Red\", \"Dogs\"};\n    tokens2 = new String[]{\"The\", \"Lazy\", \"Dogs\", \"should\", \"stay\", \"on\", \"the\", \"porch\"};\n    buffer1 = new StringBuffer();\n\n    for (int i = 0; i < tokens1.length; i++) {\n      buffer1.append(tokens1[i]).append(' ');\n    }\n    buffer2 = new StringBuffer();\n    for (int i = 0; i < tokens2.length; i++) {\n      buffer2.append(tokens2[i]).append(' ');\n\n    }\n  }\n\n","sourceOld":"  protected void setUp() {\n    tokens1 = new String[]{\"The\", \"quick\", \"Burgundy\", \"Fox\", \"jumped\", \"over\", \"the\", \"lazy\", \"Red\", \"Dogs\"};\n    tokens2 = new String[]{\"The\", \"Lazy\", \"Dogs\", \"should\", \"stay\", \"on\", \"the\", \"porch\"};\n    buffer1 = new StringBuffer();\n\n    for (int i = 0; i < tokens1.length; i++) {\n      buffer1.append(tokens1[i]).append(' ');\n    }\n    buffer2 = new StringBuffer();\n    for (int i = 0; i < tokens2.length; i++) {\n      buffer2.append(tokens2[i]).append(' ');\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f7d76c5e8bcee481159c0dbc4aa05f88642c0cc","date":1243692318,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestTeeTokenFilter#setUp().mjava","pathOld":"src/test/org/apache/lucene/analysis/TeeSinkTokenTest#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n    tokens1 = new String[]{\"The\", \"quick\", \"Burgundy\", \"Fox\", \"jumped\", \"over\", \"the\", \"lazy\", \"Red\", \"Dogs\"};\n    tokens2 = new String[]{\"The\", \"Lazy\", \"Dogs\", \"should\", \"stay\", \"on\", \"the\", \"porch\"};\n    buffer1 = new StringBuffer();\n\n    for (int i = 0; i < tokens1.length; i++) {\n      buffer1.append(tokens1[i]).append(' ');\n    }\n    buffer2 = new StringBuffer();\n    for (int i = 0; i < tokens2.length; i++) {\n      buffer2.append(tokens2[i]).append(' ');\n\n    }\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n    tokens1 = new String[]{\"The\", \"quick\", \"Burgundy\", \"Fox\", \"jumped\", \"over\", \"the\", \"lazy\", \"Red\", \"Dogs\"};\n    tokens2 = new String[]{\"The\", \"Lazy\", \"Dogs\", \"should\", \"stay\", \"on\", \"the\", \"porch\"};\n    buffer1 = new StringBuffer();\n\n    for (int i = 0; i < tokens1.length; i++) {\n      buffer1.append(tokens1[i]).append(' ');\n    }\n    buffer2 = new StringBuffer();\n    for (int i = 0; i < tokens2.length; i++) {\n      buffer2.append(tokens2[i]).append(' ');\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223":["4c0e82525d61a2be6ba5d29eb5048c7d39ee1ad5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4c0e82525d61a2be6ba5d29eb5048c7d39ee1ad5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1f7d76c5e8bcee481159c0dbc4aa05f88642c0cc":["74a5e7f20b4a444da9df3b2c0f331fa7a1f64223"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1f7d76c5e8bcee481159c0dbc4aa05f88642c0cc"]},"commit2Childs":{"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223":["1f7d76c5e8bcee481159c0dbc4aa05f88642c0cc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4c0e82525d61a2be6ba5d29eb5048c7d39ee1ad5"],"4c0e82525d61a2be6ba5d29eb5048c7d39ee1ad5":["74a5e7f20b4a444da9df3b2c0f331fa7a1f64223"],"1f7d76c5e8bcee481159c0dbc4aa05f88642c0cc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}