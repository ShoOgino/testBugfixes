{"path":"contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParser#setUp().mjava","commits":[{"id":"b955a87bc7c5daeda1ed56821ec0bec2e8789e44","date":1249270724,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParser#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n\n    this.spanProcessorPipeline = new QueryNodeProcessorPipeline();\n    this.spanQueryConfigHandler = new SpansQueryConfigHandler();\n    this.spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // set up the processor pipeline\n    this.spanProcessorPipeline\n        .setQueryConfigHandler(this.spanQueryConfigHandler);\n\n    this.spanProcessorPipeline\n        .addProcessor(new SpansValidatorQueryNodeProcessor());\n    this.spanProcessorPipeline\n        .addProcessor(new UniqueFieldQueryNodeProcessor());\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f75cd88b219e040b204bff4c189784659752f786","date":1250640581,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParser#setUp().mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParser#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n\n    this.spanProcessorPipeline = new QueryNodeProcessorPipeline();\n    this.spanQueryConfigHandler = new SpansQueryConfigHandler();\n    this.spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // set up the processor pipeline\n    this.spanProcessorPipeline.setQueryConfigHandler(this.spanQueryConfigHandler);\n\n    this.spanProcessorPipeline.addProcessor(new WildcardQueryNodeProcessor());\n    this.spanProcessorPipeline.addProcessor(new SpansValidatorQueryNodeProcessor());\n    this.spanProcessorPipeline.addProcessor(new UniqueFieldQueryNodeProcessor());\n\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n\n    this.spanProcessorPipeline = new QueryNodeProcessorPipeline();\n    this.spanQueryConfigHandler = new SpansQueryConfigHandler();\n    this.spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // set up the processor pipeline\n    this.spanProcessorPipeline\n        .setQueryConfigHandler(this.spanQueryConfigHandler);\n\n    this.spanProcessorPipeline\n        .addProcessor(new SpansValidatorQueryNodeProcessor());\n    this.spanProcessorPipeline\n        .addProcessor(new UniqueFieldQueryNodeProcessor());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d78f014fded44fbde905f4f84cdc21907b371e8","date":1254383623,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParser#setUp().mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParser#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n\n    this.spanProcessorPipeline = new QueryNodeProcessorPipeline();\n    this.spanQueryConfigHandler = new SpansQueryConfigHandler();\n    this.spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // set up the processor pipeline\n    this.spanProcessorPipeline\n        .setQueryConfigHandler(this.spanQueryConfigHandler);\n\n    this.spanProcessorPipeline.addProcessor(new WildcardQueryNodeProcessor());\n    this.spanProcessorPipeline\n        .addProcessor(new SpansValidatorQueryNodeProcessor());\n    this.spanProcessorPipeline\n        .addProcessor(new UniqueFieldQueryNodeProcessor());\n\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n\n    this.spanProcessorPipeline = new QueryNodeProcessorPipeline();\n    this.spanQueryConfigHandler = new SpansQueryConfigHandler();\n    this.spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // set up the processor pipeline\n    this.spanProcessorPipeline.setQueryConfigHandler(this.spanQueryConfigHandler);\n\n    this.spanProcessorPipeline.addProcessor(new WildcardQueryNodeProcessor());\n    this.spanProcessorPipeline.addProcessor(new SpansValidatorQueryNodeProcessor());\n    this.spanProcessorPipeline.addProcessor(new UniqueFieldQueryNodeProcessor());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParser#setUp().mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParser#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n\n    this.spanProcessorPipeline = new QueryNodeProcessorPipeline();\n    this.spanQueryConfigHandler = new SpansQueryConfigHandler();\n    this.spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // set up the processor pipeline\n    this.spanProcessorPipeline\n        .setQueryConfigHandler(this.spanQueryConfigHandler);\n\n    this.spanProcessorPipeline.addProcessor(new WildcardQueryNodeProcessor());\n    this.spanProcessorPipeline\n        .addProcessor(new SpansValidatorQueryNodeProcessor());\n    this.spanProcessorPipeline\n        .addProcessor(new UniqueFieldQueryNodeProcessor());\n\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n\n    this.spanProcessorPipeline = new QueryNodeProcessorPipeline();\n    this.spanQueryConfigHandler = new SpansQueryConfigHandler();\n    this.spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // set up the processor pipeline\n    this.spanProcessorPipeline\n        .setQueryConfigHandler(this.spanQueryConfigHandler);\n\n    this.spanProcessorPipeline.addProcessor(new WildcardQueryNodeProcessor());\n    this.spanProcessorPipeline\n        .addProcessor(new SpansValidatorQueryNodeProcessor());\n    this.spanProcessorPipeline\n        .addProcessor(new UniqueFieldQueryNodeProcessor());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f75cd88b219e040b204bff4c189784659752f786":["b955a87bc7c5daeda1ed56821ec0bec2e8789e44"],"8d78f014fded44fbde905f4f84cdc21907b371e8":["f75cd88b219e040b204bff4c189784659752f786"],"b955a87bc7c5daeda1ed56821ec0bec2e8789e44":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8d78f014fded44fbde905f4f84cdc21907b371e8"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b955a87bc7c5daeda1ed56821ec0bec2e8789e44"],"f75cd88b219e040b204bff4c189784659752f786":["8d78f014fded44fbde905f4f84cdc21907b371e8"],"8d78f014fded44fbde905f4f84cdc21907b371e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"b955a87bc7c5daeda1ed56821ec0bec2e8789e44":["f75cd88b219e040b204bff4c189784659752f786"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}