{"path":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#setUp().mjava","commits":[{"id":"bd448ea9ebea1941dbb38fc43330fbeaa2d3cfaf","date":1283548184,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f52e7c0cb4097e605c70fddeb4ab67467dbfd3de","date":1287102627,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#setUp().mjava","sourceNew":null,"sourceOld":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#setUp().mjava","sourceNew":null,"sourceOld":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc842042ecba9ac9db9618ddb398679a30fbd653","date":1287644833,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Before\n  @Override\n  public void setUp() throws Exception{\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    assertU(optimize());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e93a2e66dc7cee8490337183fee399e7ba4ab9b5","date":1287644979,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Before\n  @Override\n  public void setUp() throws Exception{\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    assertU(optimize());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Before\n  @Override\n  public void setUp() throws Exception{\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    assertU(optimize());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2cf65de5ffe215f49df0b92ef7ff4eadc7a6878c","date":1294924594,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#setUp().mjava","sourceNew":"  @Before\n  @Override\n  public void setUp() throws Exception{\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    assertU(optimize());\n    // make sure this component is initialized correctly for each test\n    QueryElevationComponent comp = (QueryElevationComponent)h.getCore().getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, \"elevate.xml\" );\n    args.add( QueryElevationComponent.FIELD_TYPE, \"string\" );\n    comp.init( args );\n    comp.inform( h.getCore() );\n    comp.forceElevation = false; \n  }\n\n","sourceOld":"  @Before\n  @Override\n  public void setUp() throws Exception{\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    assertU(optimize());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#setUp().mjava","sourceNew":"  @Before\n  @Override\n  public void setUp() throws Exception{\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    assertU(optimize());\n    // make sure this component is initialized correctly for each test\n    QueryElevationComponent comp = (QueryElevationComponent)h.getCore().getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, \"elevate.xml\" );\n    args.add( QueryElevationComponent.FIELD_TYPE, \"string\" );\n    comp.init( args );\n    comp.inform( h.getCore() );\n    comp.forceElevation = false; \n  }\n\n","sourceOld":"  @Before\n  @Override\n  public void setUp() throws Exception{\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    assertU(optimize());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#setUp().mjava","sourceNew":"  @Before\n  @Override\n  public void setUp() throws Exception{\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    assertU(optimize());\n    // make sure this component is initialized correctly for each test\n    QueryElevationComponent comp = (QueryElevationComponent)h.getCore().getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, \"elevate.xml\" );\n    args.add( QueryElevationComponent.FIELD_TYPE, \"string\" );\n    comp.init( args );\n    comp.inform( h.getCore() );\n    comp.forceElevation = false; \n  }\n\n","sourceOld":"  @Before\n  @Override\n  public void setUp() throws Exception{\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    assertU(optimize());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#setUp().mjava","sourceNew":"  @Before\n  @Override\n  public void setUp() throws Exception{\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    assertU(optimize());\n    // make sure this component is initialized correctly for each test\n    QueryElevationComponent comp = (QueryElevationComponent)h.getCore().getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, \"elevate.xml\" );\n    args.add( QueryElevationComponent.FIELD_TYPE, \"string\" );\n    comp.init( args );\n    comp.inform( h.getCore() );\n    comp.forceElevation = false; \n  }\n\n","sourceOld":"  @Before\n  @Override\n  public void setUp() throws Exception{\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    assertU(optimize());\n    // make sure this component is initialized correctly for each test\n    QueryElevationComponent comp = (QueryElevationComponent)h.getCore().getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, \"elevate.xml\" );\n    args.add( QueryElevationComponent.FIELD_TYPE, \"string\" );\n    comp.init( args );\n    comp.inform( h.getCore() );\n    comp.forceElevation = false; \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#setUp().mjava","sourceNew":"  @Before\n  @Override\n  public void setUp() throws Exception{\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    assertU(optimize());\n    // make sure this component is initialized correctly for each test\n    QueryElevationComponent comp = (QueryElevationComponent)h.getCore().getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, \"elevate.xml\" );\n    args.add( QueryElevationComponent.FIELD_TYPE, \"string\" );\n    comp.init( args );\n    comp.inform( h.getCore() );\n    comp.forceElevation = false; \n  }\n\n","sourceOld":"  @Before\n  @Override\n  public void setUp() throws Exception{\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    assertU(optimize());\n    // make sure this component is initialized correctly for each test\n    QueryElevationComponent comp = (QueryElevationComponent)h.getCore().getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, \"elevate.xml\" );\n    args.add( QueryElevationComponent.FIELD_TYPE, \"string\" );\n    comp.init( args );\n    comp.inform( h.getCore() );\n    comp.forceElevation = false; \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#setUp().mjava","sourceNew":"  @Before\n  @Override\n  public void setUp() throws Exception{\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    assertU(optimize());\n    // make sure this component is initialized correctly for each test\n    QueryElevationComponent comp = (QueryElevationComponent)h.getCore().getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, \"elevate.xml\" );\n    args.add( QueryElevationComponent.FIELD_TYPE, \"string\" );\n    comp.init( args );\n    comp.inform( h.getCore() );\n    comp.forceElevation = false; \n  }\n\n","sourceOld":"  @Before\n  @Override\n  public void setUp() throws Exception{\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    assertU(optimize());\n    // make sure this component is initialized correctly for each test\n    QueryElevationComponent comp = (QueryElevationComponent)h.getCore().getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, \"elevate.xml\" );\n    args.add( QueryElevationComponent.FIELD_TYPE, \"string\" );\n    comp.init( args );\n    comp.inform( h.getCore() );\n    comp.forceElevation = false; \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c26f00b574427b55127e869b935845554afde1fa":["2cf65de5ffe215f49df0b92ef7ff4eadc7a6878c","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"2cf65de5ffe215f49df0b92ef7ff4eadc7a6878c":["fc842042ecba9ac9db9618ddb398679a30fbd653"],"e93a2e66dc7cee8490337183fee399e7ba4ab9b5":["4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fc842042ecba9ac9db9618ddb398679a30fbd653"],"fc842042ecba9ac9db9618ddb398679a30fbd653":["f52e7c0cb4097e605c70fddeb4ab67467dbfd3de"],"bd448ea9ebea1941dbb38fc43330fbeaa2d3cfaf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f52e7c0cb4097e605c70fddeb4ab67467dbfd3de":["bd448ea9ebea1941dbb38fc43330fbeaa2d3cfaf"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["2cf65de5ffe215f49df0b92ef7ff4eadc7a6878c"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["e93a2e66dc7cee8490337183fee399e7ba4ab9b5","2cf65de5ffe215f49df0b92ef7ff4eadc7a6878c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["2cf65de5ffe215f49df0b92ef7ff4eadc7a6878c"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["bd448ea9ebea1941dbb38fc43330fbeaa2d3cfaf","f52e7c0cb4097e605c70fddeb4ab67467dbfd3de"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","2cf65de5ffe215f49df0b92ef7ff4eadc7a6878c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2cf65de5ffe215f49df0b92ef7ff4eadc7a6878c":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","868da859b43505d9d2a023bfeae6dd0c795f5295"],"e93a2e66dc7cee8490337183fee399e7ba4ab9b5":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"fc842042ecba9ac9db9618ddb398679a30fbd653":["2cf65de5ffe215f49df0b92ef7ff4eadc7a6878c","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"bd448ea9ebea1941dbb38fc43330fbeaa2d3cfaf":["f52e7c0cb4097e605c70fddeb4ab67467dbfd3de","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"f52e7c0cb4097e605c70fddeb4ab67467dbfd3de":["fc842042ecba9ac9db9618ddb398679a30fbd653","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","bd448ea9ebea1941dbb38fc43330fbeaa2d3cfaf"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["e93a2e66dc7cee8490337183fee399e7ba4ab9b5"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}