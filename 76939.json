{"path":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#doSetNextReader(LeafReaderContext).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#doSetNextReader(LeafReaderContext).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    protected void doSetNextReader(LeafReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = DocValues.getSorted(context.reader(), groupField);\n      facetFieldDocTermOrds = DocValues.getSortedSet(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = facetFieldDocTermOrds.termsEnum();\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRefBuilder facetEndPrefix = new BytesRefBuilder();\n        facetEndPrefix.append(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix.get());\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ae958a739da1866696f442384393ba2f13e33e5","date":1491819018,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/TermGroupFacetCollector.MV#doSetNextReader(LeafReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#doSetNextReader(LeafReaderContext).mjava","sourceNew":"    @Override\n    protected void doSetNextReader(LeafReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = DocValues.getSorted(context.reader(), groupField);\n      facetFieldDocTermOrds = DocValues.getSortedSet(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = facetFieldDocTermOrds.termsEnum();\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRefBuilder facetEndPrefix = new BytesRefBuilder();\n        facetEndPrefix.append(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix.get());\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","sourceOld":"    @Override\n    protected void doSetNextReader(LeafReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = DocValues.getSorted(context.reader(), groupField);\n      facetFieldDocTermOrds = DocValues.getSortedSet(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = facetFieldDocTermOrds.termsEnum();\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRefBuilder facetEndPrefix = new BytesRefBuilder();\n        facetEndPrefix.append(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix.get());\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/TermGroupFacetCollector.MV#doSetNextReader(LeafReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#doSetNextReader(LeafReaderContext).mjava","sourceNew":"    @Override\n    protected void doSetNextReader(LeafReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = DocValues.getSorted(context.reader(), groupField);\n      facetFieldDocTermOrds = DocValues.getSortedSet(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = facetFieldDocTermOrds.termsEnum();\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRefBuilder facetEndPrefix = new BytesRefBuilder();\n        facetEndPrefix.append(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix.get());\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","sourceOld":"    @Override\n    protected void doSetNextReader(LeafReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = DocValues.getSorted(context.reader(), groupField);\n      facetFieldDocTermOrds = DocValues.getSortedSet(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = facetFieldDocTermOrds.termsEnum();\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRefBuilder facetEndPrefix = new BytesRefBuilder();\n        facetEndPrefix.append(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix.get());\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7ae958a739da1866696f442384393ba2f13e33e5"],"7ae958a739da1866696f442384393ba2f13e33e5":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","7ae958a739da1866696f442384393ba2f13e33e5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7ae958a739da1866696f442384393ba2f13e33e5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}