{"path":"lucene/core/src/java/org/apache/lucene/codecs/MultiLevelSkipListReader#seekChild(int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/MultiLevelSkipListReader#seekChild(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/MultiLevelSkipListReader#seekChild(int).mjava","sourceNew":"  /** Seeks the skip entry on the given level */\n  protected void seekChild(int level) throws IOException {\n    skipStream[level].seek(lastChildPointer);\n    numSkipped[level] = numSkipped[level + 1] - skipInterval[level + 1];\n    skipDoc[level] = lastDoc;\n    if (level > 0) {\n        childPointer[level] = skipStream[level].readVLong() + skipPointer[level - 1];\n    }\n  }\n\n","sourceOld":"  /** Seeks the skip entry on the given level */\n  protected void seekChild(int level) throws IOException {\n    skipStream[level].seek(lastChildPointer);\n    numSkipped[level] = numSkipped[level + 1] - skipInterval[level + 1];\n    skipDoc[level] = lastDoc;\n    if (level > 0) {\n        childPointer[level] = skipStream[level].readVLong() + skipPointer[level - 1];\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e06babaa3e8b78433266149d50d1500ba941652c","date":1344293820,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/MultiLevelSkipListReader#seekChild(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/MultiLevelSkipListReader#seekChild(int).mjava","sourceNew":"  /** Seeks the skip entry on the given level */\n  protected void seekChild(int level) throws IOException {\n    skipStream[level].seek(lastChildPointer);\n    numSkipped[level] = numSkipped[level + 1] - skipInterval[level + 1];\n    skipDoc[level] = lastDoc;\n    if (level > 0) {\n      childPointer[level] = skipStream[level].readVLong() + skipPointer[level - 1];\n    }\n  }\n\n","sourceOld":"  /** Seeks the skip entry on the given level */\n  protected void seekChild(int level) throws IOException {\n    skipStream[level].seek(lastChildPointer);\n    numSkipped[level] = numSkipped[level + 1] - skipInterval[level + 1];\n    skipDoc[level] = lastDoc;\n    if (level > 0) {\n        childPointer[level] = skipStream[level].readVLong() + skipPointer[level - 1];\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8615860cb50aefb8eebca1d1b3893dbe21cf126","date":1345550448,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/MultiLevelSkipListReader#seekChild(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/MultiLevelSkipListReader#seekChild(int).mjava","sourceNew":"  /** Seeks the skip entry on the given level */\n  protected void seekChild(int level) throws IOException {\n    skipStream[level].seek(lastChildPointer);\n    numSkipped[level] = numSkipped[level + 1] - skipInterval[level + 1];\n    skipDoc[level] = lastDoc;\n    if (level > 0) {\n      childPointer[level] = skipStream[level].readVLong() + skipPointer[level - 1];\n    }\n  }\n\n","sourceOld":"  /** Seeks the skip entry on the given level */\n  protected void seekChild(int level) throws IOException {\n    skipStream[level].seek(lastChildPointer);\n    numSkipped[level] = numSkipped[level + 1] - skipInterval[level + 1];\n    skipDoc[level] = lastDoc;\n    if (level > 0) {\n        childPointer[level] = skipStream[level].readVLong() + skipPointer[level - 1];\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/MultiLevelSkipListReader#seekChild(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/MultiLevelSkipListReader#seekChild(int).mjava","sourceNew":"  /** Seeks the skip entry on the given level */\n  protected void seekChild(int level) throws IOException {\n    skipStream[level].seek(lastChildPointer);\n    numSkipped[level] = numSkipped[level + 1] - skipInterval[level + 1];\n    skipDoc[level] = lastDoc;\n    if (level > 0) {\n      childPointer[level] = skipStream[level].readVLong() + skipPointer[level - 1];\n    }\n  }\n\n","sourceOld":"  /** Seeks the skip entry on the given level */\n  protected void seekChild(int level) throws IOException {\n    skipStream[level].seek(lastChildPointer);\n    numSkipped[level] = numSkipped[level + 1] - skipInterval[level + 1];\n    skipDoc[level] = lastDoc;\n    if (level > 0) {\n        childPointer[level] = skipStream[level].readVLong() + skipPointer[level - 1];\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"001b25b42373b22a52f399dbf072f1224632e8e6":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f8615860cb50aefb8eebca1d1b3893dbe21cf126":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","e06babaa3e8b78433266149d50d1500ba941652c"],"e06babaa3e8b78433266149d50d1500ba941652c":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f8615860cb50aefb8eebca1d1b3893dbe21cf126"]},"commit2Childs":{"001b25b42373b22a52f399dbf072f1224632e8e6":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["001b25b42373b22a52f399dbf072f1224632e8e6","f8615860cb50aefb8eebca1d1b3893dbe21cf126","e06babaa3e8b78433266149d50d1500ba941652c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"f8615860cb50aefb8eebca1d1b3893dbe21cf126":["001b25b42373b22a52f399dbf072f1224632e8e6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e06babaa3e8b78433266149d50d1500ba941652c":["f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["001b25b42373b22a52f399dbf072f1224632e8e6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}