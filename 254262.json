{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/PatternAnalyzerTest#check(PatternAnalyzer,String,String[]).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/PatternAnalyzerTest#check(PatternAnalyzer,String,String[]).mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/PatternAnalyzerTest#check(PatternAnalyzer,String,String[]).mjava","sourceNew":"  /**\n   * Verify the analyzer analyzes to the expected contents. For PatternAnalyzer,\n   * several methods are verified:\n   * <ul>\n   * <li>Analysis with a normal Reader\n   * <li>Analysis with a FastStringReader\n   * <li>Analysis with a String\n   * </ul>\n   */\n  private void check(PatternAnalyzer analyzer, String document,\n      String expected[]) throws IOException {\n    // ordinary analysis of a Reader\n    assertAnalyzesTo(analyzer, document, expected);\n\n    // analysis with a \"FastStringReader\"\n    TokenStream ts = analyzer.tokenStream(\"dummy\",\n        new PatternAnalyzer.FastStringReader(document));\n    assertTokenStreamContents(ts, expected);\n\n    // analysis of a String, uses PatternAnalyzer.tokenStream(String, String)\n    TokenStream ts2 = analyzer.tokenStream(\"dummy\", new StringReader(document));\n    assertTokenStreamContents(ts2, expected);\n  }\n\n","sourceOld":"  /**\n   * Verify the analyzer analyzes to the expected contents. For PatternAnalyzer,\n   * several methods are verified:\n   * <ul>\n   * <li>Analysis with a normal Reader\n   * <li>Analysis with a FastStringReader\n   * <li>Analysis with a String\n   * </ul>\n   */\n  private void check(PatternAnalyzer analyzer, String document,\n      String expected[]) throws IOException {\n    // ordinary analysis of a Reader\n    assertAnalyzesTo(analyzer, document, expected);\n\n    // analysis with a \"FastStringReader\"\n    TokenStream ts = analyzer.tokenStream(\"dummy\",\n        new PatternAnalyzer.FastStringReader(document));\n    assertTokenStreamContents(ts, expected);\n\n    // analysis of a String, uses PatternAnalyzer.tokenStream(String, String)\n    TokenStream ts2 = analyzer.tokenStream(\"dummy\", new StringReader(document));\n    assertTokenStreamContents(ts2, expected);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/PatternAnalyzerTest#check(PatternAnalyzer,String,String[]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Verify the analyzer analyzes to the expected contents. For PatternAnalyzer,\n   * several methods are verified:\n   * <ul>\n   * <li>Analysis with a normal Reader\n   * <li>Analysis with a FastStringReader\n   * <li>Analysis with a String\n   * </ul>\n   */\n  private void check(PatternAnalyzer analyzer, String document,\n      String expected[]) throws IOException {\n    // ordinary analysis of a Reader\n    assertAnalyzesTo(analyzer, document, expected);\n\n    // analysis with a \"FastStringReader\"\n    TokenStream ts = analyzer.tokenStream(\"dummy\",\n        new PatternAnalyzer.FastStringReader(document));\n    assertTokenStreamContents(ts, expected);\n\n    // analysis of a String, uses PatternAnalyzer.tokenStream(String, String)\n    TokenStream ts2 = analyzer.tokenStream(\"dummy\", new StringReader(document));\n    assertTokenStreamContents(ts2, expected);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}