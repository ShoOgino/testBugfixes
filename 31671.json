{"path":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#stopJettySolrRunner(JettySolrRunner).mjava","commits":[{"id":"2c30e4c1cee08b3b229a77991882594fe7250b66","date":1344448871,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#stopJettySolrRunner(JettySolrRunner).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#stopJettySolrRunner(JettySolrRunner).mjava","sourceNew":"  private static void stopJettySolrRunner(JettySolrRunner jetty) throws Exception {\n    \n    monkeyLog(\"stop shard! \" + jetty.getLocalPort());\n    // get a clean shutdown so that no dirs are left open...\n    FilterHolder fh = jetty.getDispatchFilter();\n    if (fh != null) {\n      SolrDispatchFilter sdf = (SolrDispatchFilter) fh.getFilter();\n      if (sdf != null) {\n        sdf.destroy();\n      }\n    }\n    jetty.stop();\n    \n    if (!jetty.isStopped()) {\n      throw new RuntimeException(\"could not stop jetty\");\n    }\n  }\n\n","sourceOld":"  private static void stopJettySolrRunner(JettySolrRunner jetty) throws Exception {\n    \n    monkeyLog(\"stop shard! \" + jetty.getLocalPort());\n    // get a clean shutdown so that no dirs are left open...\n    FilterHolder fh = jetty.getDispatchFilter();\n    if (fh != null) {\n      SolrDispatchFilter sdf = (SolrDispatchFilter) fh.getFilter();\n      if (sdf != null) {\n        sdf.destroy();\n      }\n    }\n    jetty.stop();\n    \n    if (!jetty.isStopped()) {\n      throw new RuntimeException(\"could not stop jetty\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#stopJettySolrRunner(JettySolrRunner).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#stopJettySolrRunner(JettySolrRunner).mjava","sourceNew":"  private static void stopJettySolrRunner(JettySolrRunner jetty) throws Exception {\n    \n    monkeyLog(\"stop shard! \" + jetty.getLocalPort());\n    // get a clean shutdown so that no dirs are left open...\n    FilterHolder fh = jetty.getDispatchFilter();\n    if (fh != null) {\n      SolrDispatchFilter sdf = (SolrDispatchFilter) fh.getFilter();\n      if (sdf != null) {\n        sdf.destroy();\n      }\n    }\n    jetty.stop();\n    \n    if (!jetty.isStopped()) {\n      throw new RuntimeException(\"could not stop jetty\");\n    }\n  }\n\n","sourceOld":"  private static void stopJettySolrRunner(JettySolrRunner jetty) throws Exception {\n    \n    monkeyLog(\"stop shard! \" + jetty.getLocalPort());\n    // get a clean shutdown so that no dirs are left open...\n    FilterHolder fh = jetty.getDispatchFilter();\n    if (fh != null) {\n      SolrDispatchFilter sdf = (SolrDispatchFilter) fh.getFilter();\n      if (sdf != null) {\n        sdf.destroy();\n      }\n    }\n    jetty.stop();\n    \n    if (!jetty.isStopped()) {\n      throw new RuntimeException(\"could not stop jetty\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#stopJettySolrRunner(JettySolrRunner).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#stopJettySolrRunner(JettySolrRunner).mjava","sourceNew":"  private static void stopJettySolrRunner(JettySolrRunner jetty) throws Exception {\n    \n    monkeyLog(\"stop shard! \" + jetty.getLocalPort());\n    // get a clean shutdown so that no dirs are left open...\n    FilterHolder fh = jetty.getDispatchFilter();\n    if (fh != null) {\n      SolrDispatchFilter sdf = (SolrDispatchFilter) fh.getFilter();\n      if (sdf != null) {\n        sdf.destroy();\n      }\n    }\n    jetty.stop();\n    \n    if (!jetty.isStopped()) {\n      throw new RuntimeException(\"could not stop jetty\");\n    }\n  }\n\n","sourceOld":"  private static void stopJettySolrRunner(JettySolrRunner jetty) throws Exception {\n    \n    monkeyLog(\"stop shard! \" + jetty.getLocalPort());\n    // get a clean shutdown so that no dirs are left open...\n    FilterHolder fh = jetty.getDispatchFilter();\n    if (fh != null) {\n      SolrDispatchFilter sdf = (SolrDispatchFilter) fh.getFilter();\n      if (sdf != null) {\n        sdf.destroy();\n      }\n    }\n    jetty.stop();\n    \n    if (!jetty.isStopped()) {\n      throw new RuntimeException(\"could not stop jetty\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9405f486872f1e416304dfe389741f4ee2f8a4d","date":1351276739,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#stopJettySolrRunner(JettySolrRunner).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#stopJettySolrRunner(JettySolrRunner).mjava","sourceNew":"  private static void stopJettySolrRunner(JettySolrRunner jetty) throws Exception {\n    assert(jetty != null);\n    monkeyLog(\"stop shard! \" + jetty.getLocalPort());\n    // get a clean shutdown so that no dirs are left open...\n    FilterHolder fh = jetty.getDispatchFilter();\n    if (fh != null) {\n      SolrDispatchFilter sdf = (SolrDispatchFilter) fh.getFilter();\n      if (sdf != null) {\n        sdf.destroy();\n      }\n    }\n    jetty.stop();\n    \n    if (!jetty.isStopped()) {\n      throw new RuntimeException(\"could not stop jetty\");\n    }\n  }\n\n","sourceOld":"  private static void stopJettySolrRunner(JettySolrRunner jetty) throws Exception {\n    \n    monkeyLog(\"stop shard! \" + jetty.getLocalPort());\n    // get a clean shutdown so that no dirs are left open...\n    FilterHolder fh = jetty.getDispatchFilter();\n    if (fh != null) {\n      SolrDispatchFilter sdf = (SolrDispatchFilter) fh.getFilter();\n      if (sdf != null) {\n        sdf.destroy();\n      }\n    }\n    jetty.stop();\n    \n    if (!jetty.isStopped()) {\n      throw new RuntimeException(\"could not stop jetty\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2126b84bd093fa3d921582a109a0ee578c28126","date":1351522501,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#stopJettySolrRunner(JettySolrRunner).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#stopJettySolrRunner(JettySolrRunner).mjava","sourceNew":"  private static void stopJettySolrRunner(JettySolrRunner jetty) throws Exception {\n    assert(jetty != null);\n    monkeyLog(\"stop shard! \" + jetty.getLocalPort());\n    // get a clean shutdown so that no dirs are left open...\n    FilterHolder fh = jetty.getDispatchFilter();\n    if (fh != null) {\n      SolrDispatchFilter sdf = (SolrDispatchFilter) fh.getFilter();\n      if (sdf != null) {\n        sdf.destroy();\n      }\n    }\n    jetty.stop();\n    \n    if (!jetty.isStopped()) {\n      throw new RuntimeException(\"could not stop jetty\");\n    }\n  }\n\n","sourceOld":"  private static void stopJettySolrRunner(JettySolrRunner jetty) throws Exception {\n    \n    monkeyLog(\"stop shard! \" + jetty.getLocalPort());\n    // get a clean shutdown so that no dirs are left open...\n    FilterHolder fh = jetty.getDispatchFilter();\n    if (fh != null) {\n      SolrDispatchFilter sdf = (SolrDispatchFilter) fh.getFilter();\n      if (sdf != null) {\n        sdf.destroy();\n      }\n    }\n    jetty.stop();\n    \n    if (!jetty.isStopped()) {\n      throw new RuntimeException(\"could not stop jetty\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#stopJettySolrRunner(JettySolrRunner).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#stopJettySolrRunner(JettySolrRunner).mjava","sourceNew":"  private static void stopJettySolrRunner(JettySolrRunner jetty) throws Exception {\n    assert(jetty != null);\n    monkeyLog(\"stop shard! \" + jetty.getLocalPort());\n    // get a clean close so that no dirs are left open...\n    FilterHolder fh = jetty.getDispatchFilter();\n    if (fh != null) {\n      SolrDispatchFilter sdf = (SolrDispatchFilter) fh.getFilter();\n      if (sdf != null) {\n        sdf.destroy();\n      }\n    }\n    jetty.stop();\n    \n    if (!jetty.isStopped()) {\n      throw new RuntimeException(\"could not stop jetty\");\n    }\n  }\n\n","sourceOld":"  private static void stopJettySolrRunner(JettySolrRunner jetty) throws Exception {\n    assert(jetty != null);\n    monkeyLog(\"stop shard! \" + jetty.getLocalPort());\n    // get a clean shutdown so that no dirs are left open...\n    FilterHolder fh = jetty.getDispatchFilter();\n    if (fh != null) {\n      SolrDispatchFilter sdf = (SolrDispatchFilter) fh.getFilter();\n      if (sdf != null) {\n        sdf.destroy();\n      }\n    }\n    jetty.stop();\n    \n    if (!jetty.isStopped()) {\n      throw new RuntimeException(\"could not stop jetty\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1088b72b3b4cc45316b7595bd09023c859cd2327","date":1447150009,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#stopJettySolrRunner(JettySolrRunner).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#stopJettySolrRunner(JettySolrRunner).mjava","sourceNew":"  private static void stopJettySolrRunner(JettySolrRunner jetty) throws Exception {\n    assert(jetty != null);\n    monkeyLog(\"stop shard! \" + jetty.getLocalPort());\n    SolrDispatchFilter sdf = jetty.getSolrDispatchFilter();\n    if (sdf != null)\n      sdf.destroy();\n    jetty.stop();\n\n    if (!jetty.isStopped()) {\n      throw new RuntimeException(\"could not stop jetty\");\n    }\n  }\n\n","sourceOld":"  private static void stopJettySolrRunner(JettySolrRunner jetty) throws Exception {\n    assert(jetty != null);\n    monkeyLog(\"stop shard! \" + jetty.getLocalPort());\n    // get a clean close so that no dirs are left open...\n    FilterHolder fh = jetty.getDispatchFilter();\n    if (fh != null) {\n      SolrDispatchFilter sdf = (SolrDispatchFilter) fh.getFilter();\n      if (sdf != null) {\n        sdf.destroy();\n      }\n    }\n    jetty.stop();\n    \n    if (!jetty.isStopped()) {\n      throw new RuntimeException(\"could not stop jetty\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"536b47681314488eb94706248be6047a3f142841","date":1450372090,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#stopJettySolrRunner(JettySolrRunner).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#stopJettySolrRunner(JettySolrRunner).mjava","sourceNew":"  private static void stopJettySolrRunner(JettySolrRunner jetty) throws Exception {\n    assert(jetty != null);\n    monkeyLog(\"stop shard! \" + jetty.getLocalPort());\n    SolrDispatchFilter sdf = jetty.getSolrDispatchFilter();\n    if (sdf != null) {\n      try {\n        sdf.destroy();\n      } catch (Throwable t) {\n        log.error(\"\", t);\n      }\n    }\n    try {\n      jetty.stop();\n    } catch (InterruptedException e) {\n      log.info(\"Jetty stop interrupted - should be a test caused interruption, we will try again to be sure we shutdown\");\n    } \n    \n    if (!jetty.isStopped()) {\n      jetty.stop();\n    }\n\n    if (!jetty.isStopped()) {\n      throw new RuntimeException(\"could not stop jetty\");\n    }\n  }\n\n","sourceOld":"  private static void stopJettySolrRunner(JettySolrRunner jetty) throws Exception {\n    assert(jetty != null);\n    monkeyLog(\"stop shard! \" + jetty.getLocalPort());\n    SolrDispatchFilter sdf = jetty.getSolrDispatchFilter();\n    if (sdf != null)\n      sdf.destroy();\n    jetty.stop();\n\n    if (!jetty.isStopped()) {\n      throw new RuntimeException(\"could not stop jetty\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61c45e99cf6676da48f19d7511c73712ad39402b","date":1495508331,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#stopJettySolrRunner(JettySolrRunner).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#stopJettySolrRunner(JettySolrRunner).mjava","sourceNew":"  private static void stopJettySolrRunner(JettySolrRunner jetty) throws Exception {\n    assert(jetty != null);\n    monkeyLog(\"stop jetty! \" + jetty.getLocalPort());\n    SolrDispatchFilter sdf = jetty.getSolrDispatchFilter();\n    if (sdf != null) {\n      try {\n        sdf.destroy();\n      } catch (Throwable t) {\n        log.error(\"\", t);\n      }\n    }\n    try {\n      jetty.stop();\n    } catch (InterruptedException e) {\n      log.info(\"Jetty stop interrupted - should be a test caused interruption, we will try again to be sure we shutdown\");\n    } \n    \n    if (!jetty.isStopped()) {\n      jetty.stop();\n    }\n\n    if (!jetty.isStopped()) {\n      throw new RuntimeException(\"could not stop jetty\");\n    }\n  }\n\n","sourceOld":"  private static void stopJettySolrRunner(JettySolrRunner jetty) throws Exception {\n    assert(jetty != null);\n    monkeyLog(\"stop shard! \" + jetty.getLocalPort());\n    SolrDispatchFilter sdf = jetty.getSolrDispatchFilter();\n    if (sdf != null) {\n      try {\n        sdf.destroy();\n      } catch (Throwable t) {\n        log.error(\"\", t);\n      }\n    }\n    try {\n      jetty.stop();\n    } catch (InterruptedException e) {\n      log.info(\"Jetty stop interrupted - should be a test caused interruption, we will try again to be sure we shutdown\");\n    } \n    \n    if (!jetty.isStopped()) {\n      jetty.stop();\n    }\n\n    if (!jetty.isStopped()) {\n      throw new RuntimeException(\"could not stop jetty\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#stopJettySolrRunner(JettySolrRunner).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#stopJettySolrRunner(JettySolrRunner).mjava","sourceNew":"  private static void stopJettySolrRunner(JettySolrRunner jetty) throws Exception {\n    assert(jetty != null);\n    monkeyLog(\"stop jetty! \" + jetty.getLocalPort());\n    SolrDispatchFilter sdf = jetty.getSolrDispatchFilter();\n    if (sdf != null) {\n      try {\n        sdf.destroy();\n      } catch (Throwable t) {\n        log.error(\"\", t);\n      }\n    }\n    try {\n      jetty.stop();\n    } catch (InterruptedException e) {\n      log.info(\"Jetty stop interrupted - should be a test caused interruption, we will try again to be sure we shutdown\");\n    } \n    \n    if (!jetty.isStopped()) {\n      jetty.stop();\n    }\n\n    if (!jetty.isStopped()) {\n      throw new RuntimeException(\"could not stop jetty\");\n    }\n  }\n\n","sourceOld":"  private static void stopJettySolrRunner(JettySolrRunner jetty) throws Exception {\n    assert(jetty != null);\n    monkeyLog(\"stop shard! \" + jetty.getLocalPort());\n    SolrDispatchFilter sdf = jetty.getSolrDispatchFilter();\n    if (sdf != null) {\n      try {\n        sdf.destroy();\n      } catch (Throwable t) {\n        log.error(\"\", t);\n      }\n    }\n    try {\n      jetty.stop();\n    } catch (InterruptedException e) {\n      log.info(\"Jetty stop interrupted - should be a test caused interruption, we will try again to be sure we shutdown\");\n    } \n    \n    if (!jetty.isStopped()) {\n      jetty.stop();\n    }\n\n    if (!jetty.isStopped()) {\n      throw new RuntimeException(\"could not stop jetty\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":4,"author":"markrmiller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#stopJettySolrRunner(JettySolrRunner).mjava","sourceNew":null,"sourceOld":"  private static void stopJettySolrRunner(JettySolrRunner jetty) throws Exception {\n    assert(jetty != null);\n    monkeyLog(\"stop jetty! \" + jetty.getLocalPort());\n    SolrDispatchFilter sdf = jetty.getSolrDispatchFilter();\n    if (sdf != null) {\n      try {\n        sdf.destroy();\n      } catch (Throwable t) {\n        log.error(\"\", t);\n      }\n    }\n    try {\n      jetty.stop();\n    } catch (InterruptedException e) {\n      log.info(\"Jetty stop interrupted - should be a test caused interruption, we will try again to be sure we shutdown\");\n    } \n    \n    if (!jetty.isStopped()) {\n      jetty.stop();\n    }\n\n    if (!jetty.isStopped()) {\n      throw new RuntimeException(\"could not stop jetty\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"61c45e99cf6676da48f19d7511c73712ad39402b":["536b47681314488eb94706248be6047a3f142841"],"536b47681314488eb94706248be6047a3f142841":["1088b72b3b4cc45316b7595bd09023c859cd2327"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["61c45e99cf6676da48f19d7511c73712ad39402b"],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["2c30e4c1cee08b3b229a77991882594fe7250b66"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["536b47681314488eb94706248be6047a3f142841","61c45e99cf6676da48f19d7511c73712ad39402b"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c30e4c1cee08b3b229a77991882594fe7250b66"],"1088b72b3b4cc45316b7595bd09023c859cd2327":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["d9405f486872f1e416304dfe389741f4ee2f8a4d"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c30e4c1cee08b3b229a77991882594fe7250b66"],"f2126b84bd093fa3d921582a109a0ee578c28126":["2c30e4c1cee08b3b229a77991882594fe7250b66","d9405f486872f1e416304dfe389741f4ee2f8a4d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"2c30e4c1cee08b3b229a77991882594fe7250b66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"61c45e99cf6676da48f19d7511c73712ad39402b":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","e9017cf144952056066919f1ebc7897ff9bd71b1"],"536b47681314488eb94706248be6047a3f142841":["61c45e99cf6676da48f19d7511c73712ad39402b","e9017cf144952056066919f1ebc7897ff9bd71b1"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["d0ef034a4f10871667ae75181537775ddcf8ade4","f2126b84bd093fa3d921582a109a0ee578c28126"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"1088b72b3b4cc45316b7595bd09023c859cd2327":["536b47681314488eb94706248be6047a3f142841"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","2c30e4c1cee08b3b229a77991882594fe7250b66"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["1088b72b3b4cc45316b7595bd09023c859cd2327"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"f2126b84bd093fa3d921582a109a0ee578c28126":[],"2c30e4c1cee08b3b229a77991882594fe7250b66":["d9405f486872f1e416304dfe389741f4ee2f8a4d","c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","f2126b84bd093fa3d921582a109a0ee578c28126"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","f2126b84bd093fa3d921582a109a0ee578c28126","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}