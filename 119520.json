{"path":"src/demo/org/apache/lucene/demo/html/HTMLParserTokenManager#jjMoveNfa_6(int,int).mjava","commits":[{"id":"9dc3f3d3156ee3e335155b8a8f44f7e926db09ef","date":1063245093,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/demo/org/apache/lucene/demo/html/HTMLParserTokenManager#jjMoveNfa_6(int,int).mjava","pathOld":"/dev/null","sourceNew":"private final int jjMoveNfa_6(int startState, int curPos)\n{\n   int[] nextStates;\n   int startsAt = 0;\n   jjnewStateCnt = 1;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int j, kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         MatchLoop: do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0xbfffffffffffffffL & l) == 0L)\n                     break;\n                  kind = 25;\n                  jjstateSet[jjnewStateCnt++] = 0;\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         MatchLoop: do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  kind = 25;\n                  jjstateSet[jjnewStateCnt++] = 0;\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         MatchLoop: do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((jjbitVec0[i2] & l2) == 0L)\n                     break;\n                  if (kind > 25)\n                     kind = 25;\n                  jjstateSet[jjnewStateCnt++] = 0;\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 1 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","sourceOld":null,"bugFix":null,"bugIntro":["fb38e04906cc704c95b1bb9cdc7a960017b0cc25"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"330879298be052a382e9e092febebdf55728f46b","date":1069612652,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/demo/org/apache/lucene/demo/html/HTMLParserTokenManager#jjMoveNfa_6(int,int).mjava","pathOld":"src/demo/org/apache/lucene/demo/html/HTMLParserTokenManager#jjMoveNfa_6(int,int).mjava","sourceNew":"private final int jjMoveNfa_6(int startState, int curPos)\n{\n   int[] nextStates;\n   int startsAt = 0;\n   jjnewStateCnt = 2;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int j, kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         MatchLoop: do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 1:\n                  if ((0xffffdfffffffffffL & l) != 0L)\n                  {\n                     if (kind > 26)\n                        kind = 26;\n                     jjCheckNAdd(0);\n                  }\n                  else if (curChar == 45)\n                  {\n                     if (kind > 26)\n                        kind = 26;\n                  }\n                  break;\n               case 0:\n                  if ((0xffffdfffffffffffL & l) == 0L)\n                     break;\n                  kind = 26;\n                  jjCheckNAdd(0);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         MatchLoop: do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 1:\n               case 0:\n                  kind = 26;\n                  jjCheckNAdd(0);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         MatchLoop: do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 1:\n               case 0:\n                  if ((jjbitVec0[i2] & l2) == 0L)\n                     break;\n                  if (kind > 26)\n                     kind = 26;\n                  jjCheckNAdd(0);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 2 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","sourceOld":"private final int jjMoveNfa_6(int startState, int curPos)\n{\n   int[] nextStates;\n   int startsAt = 0;\n   jjnewStateCnt = 1;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int j, kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         MatchLoop: do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0xbfffffffffffffffL & l) == 0L)\n                     break;\n                  kind = 25;\n                  jjstateSet[jjnewStateCnt++] = 0;\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         MatchLoop: do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  kind = 25;\n                  jjstateSet[jjnewStateCnt++] = 0;\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         MatchLoop: do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((jjbitVec0[i2] & l2) == 0L)\n                     break;\n                  if (kind > 25)\n                     kind = 25;\n                  jjstateSet[jjnewStateCnt++] = 0;\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 1 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"36d2b98ccd43c4a026157ae308f404c264bc85cf","date":1094506417,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/demo/org/apache/lucene/demo/html/HTMLParserTokenManager#jjMoveNfa_6(int,int).mjava","pathOld":"src/demo/org/apache/lucene/demo/html/HTMLParserTokenManager#jjMoveNfa_6(int,int).mjava","sourceNew":"private final int jjMoveNfa_6(int startState, int curPos)\n{\n   int[] nextStates;\n   int startsAt = 0;\n   jjnewStateCnt = 2;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int j, kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         MatchLoop: do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 1:\n                  if ((0xffffdfffffffffffL & l) != 0L)\n                  {\n                     if (kind > 27)\n                        kind = 27;\n                     jjCheckNAdd(0);\n                  }\n                  else if (curChar == 45)\n                  {\n                     if (kind > 27)\n                        kind = 27;\n                  }\n                  break;\n               case 0:\n                  if ((0xffffdfffffffffffL & l) == 0L)\n                     break;\n                  kind = 27;\n                  jjCheckNAdd(0);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         MatchLoop: do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 1:\n               case 0:\n                  kind = 27;\n                  jjCheckNAdd(0);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         MatchLoop: do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 1:\n               case 0:\n                  if ((jjbitVec0[i2] & l2) == 0L)\n                     break;\n                  if (kind > 27)\n                     kind = 27;\n                  jjCheckNAdd(0);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 2 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","sourceOld":"private final int jjMoveNfa_6(int startState, int curPos)\n{\n   int[] nextStates;\n   int startsAt = 0;\n   jjnewStateCnt = 2;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int j, kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         MatchLoop: do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 1:\n                  if ((0xffffdfffffffffffL & l) != 0L)\n                  {\n                     if (kind > 26)\n                        kind = 26;\n                     jjCheckNAdd(0);\n                  }\n                  else if (curChar == 45)\n                  {\n                     if (kind > 26)\n                        kind = 26;\n                  }\n                  break;\n               case 0:\n                  if ((0xffffdfffffffffffL & l) == 0L)\n                     break;\n                  kind = 26;\n                  jjCheckNAdd(0);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         MatchLoop: do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 1:\n               case 0:\n                  kind = 26;\n                  jjCheckNAdd(0);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         MatchLoop: do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 1:\n               case 0:\n                  if ((jjbitVec0[i2] & l2) == 0L)\n                     break;\n                  if (kind > 26)\n                     kind = 26;\n                  jjCheckNAdd(0);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 2 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c80895407a253178cac9acedf29e0d70c1365b50","date":1255908073,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/demo/org/apache/lucene/demo/html/HTMLParserTokenManager#jjMoveNfa_6(int,int).mjava","pathOld":"src/demo/org/apache/lucene/demo/html/HTMLParserTokenManager#jjMoveNfa_6(int,int).mjava","sourceNew":"private int jjMoveNfa_6(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 2;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 1:\n                  if ((0xffffdfffffffffffL & l) != 0L)\n                  {\n                     if (kind > 27)\n                        kind = 27;\n                     jjCheckNAdd(0);\n                  }\n                  else if (curChar == 45)\n                  {\n                     if (kind > 27)\n                        kind = 27;\n                  }\n                  break;\n               case 0:\n                  if ((0xffffdfffffffffffL & l) == 0L)\n                     break;\n                  kind = 27;\n                  jjCheckNAdd(0);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 1:\n               case 0:\n                  kind = 27;\n                  jjCheckNAdd(0);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 1:\n               case 0:\n                  if ((jjbitVec0[i2] & l2) == 0L)\n                     break;\n                  if (kind > 27)\n                     kind = 27;\n                  jjCheckNAdd(0);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 2 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","sourceOld":"private final int jjMoveNfa_6(int startState, int curPos)\n{\n   int[] nextStates;\n   int startsAt = 0;\n   jjnewStateCnt = 2;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int j, kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         MatchLoop: do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 1:\n                  if ((0xffffdfffffffffffL & l) != 0L)\n                  {\n                     if (kind > 27)\n                        kind = 27;\n                     jjCheckNAdd(0);\n                  }\n                  else if (curChar == 45)\n                  {\n                     if (kind > 27)\n                        kind = 27;\n                  }\n                  break;\n               case 0:\n                  if ((0xffffdfffffffffffL & l) == 0L)\n                     break;\n                  kind = 27;\n                  jjCheckNAdd(0);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         MatchLoop: do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 1:\n               case 0:\n                  kind = 27;\n                  jjCheckNAdd(0);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         MatchLoop: do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 1:\n               case 0:\n                  if ((jjbitVec0[i2] & l2) == 0L)\n                     break;\n                  if (kind > 27)\n                     kind = 27;\n                  jjCheckNAdd(0);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 2 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/demo/org/apache/lucene/demo/html/HTMLParserTokenManager#jjMoveNfa_6(int,int).mjava","pathOld":"src/demo/org/apache/lucene/demo/html/HTMLParserTokenManager#jjMoveNfa_6(int,int).mjava","sourceNew":"private int jjMoveNfa_6(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 2;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 1:\n                  if ((0xffffdfffffffffffL & l) != 0L)\n                  {\n                     if (kind > 27)\n                        kind = 27;\n                     jjCheckNAdd(0);\n                  }\n                  else if (curChar == 45)\n                  {\n                     if (kind > 27)\n                        kind = 27;\n                  }\n                  break;\n               case 0:\n                  if ((0xffffdfffffffffffL & l) == 0L)\n                     break;\n                  kind = 27;\n                  jjCheckNAdd(0);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 1:\n               case 0:\n                  kind = 27;\n                  jjCheckNAdd(0);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 1:\n               case 0:\n                  if ((jjbitVec0[i2] & l2) == 0L)\n                     break;\n                  if (kind > 27)\n                     kind = 27;\n                  jjCheckNAdd(0);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 2 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","sourceOld":"private int jjMoveNfa_6(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 2;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 1:\n                  if ((0xffffdfffffffffffL & l) != 0L)\n                  {\n                     if (kind > 27)\n                        kind = 27;\n                     jjCheckNAdd(0);\n                  }\n                  else if (curChar == 45)\n                  {\n                     if (kind > 27)\n                        kind = 27;\n                  }\n                  break;\n               case 0:\n                  if ((0xffffdfffffffffffL & l) == 0L)\n                     break;\n                  kind = 27;\n                  jjCheckNAdd(0);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 1:\n               case 0:\n                  kind = 27;\n                  jjCheckNAdd(0);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 1:\n               case 0:\n                  if ((jjbitVec0[i2] & l2) == 0L)\n                     break;\n                  if (kind > 27)\n                     kind = 27;\n                  jjCheckNAdd(0);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 2 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"330879298be052a382e9e092febebdf55728f46b":["9dc3f3d3156ee3e335155b8a8f44f7e926db09ef"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c80895407a253178cac9acedf29e0d70c1365b50":["36d2b98ccd43c4a026157ae308f404c264bc85cf"],"36d2b98ccd43c4a026157ae308f404c264bc85cf":["330879298be052a382e9e092febebdf55728f46b"],"9dc3f3d3156ee3e335155b8a8f44f7e926db09ef":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["c80895407a253178cac9acedf29e0d70c1365b50"]},"commit2Childs":{"330879298be052a382e9e092febebdf55728f46b":["36d2b98ccd43c4a026157ae308f404c264bc85cf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9dc3f3d3156ee3e335155b8a8f44f7e926db09ef"],"c80895407a253178cac9acedf29e0d70c1365b50":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"36d2b98ccd43c4a026157ae308f404c264bc85cf":["c80895407a253178cac9acedf29e0d70c1365b50"],"9dc3f3d3156ee3e335155b8a8f44f7e926db09ef":["330879298be052a382e9e092febebdf55728f46b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}