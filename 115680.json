{"path":"solr/core/src/test/org/apache/solr/cloud/hdfs/HDFSCollectionsAPITest#testDataDirIsNotReused().mjava","commits":[{"id":"06263309947a9804c326e35ce627be8768e123a4","date":1517286624,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/hdfs/HDFSCollectionsAPITest#testDataDirIsNotReused().mjava","pathOld":"/dev/null","sourceNew":"  public void testDataDirIsNotReused() throws Exception {\n    JettySolrRunner jettySolrRunner = cluster.getJettySolrRunner(0);\n    String collection = \"test\";\n    cluster.getSolrClient().setDefaultCollection(collection);\n    CollectionAdminRequest.createCollection(collection, \"conf1\", 1, 1)\n        .setCreateNodeSet(jettySolrRunner.getNodeName()).process(cluster.getSolrClient());\n    waitForState(\"\", collection, clusterShape(1, 1));\n    cluster.getSolrClient().setDefaultCollection(collection);\n    cluster.getSolrClient().add(new SolrInputDocument(\"id\", \"1\"));\n    cluster.getSolrClient().add(new SolrInputDocument(\"id\", \"2\"));\n    cluster.getSolrClient().commit();\n    cluster.getSolrClient().add(new SolrInputDocument(\"id\", \"3\"));\n\n    jettySolrRunner.stop();\n    waitForState(\"\", collection, (liveNodes, collectionState) -> {\n      Replica replica = collectionState.getSlice(\"shard1\").getReplicas().iterator().next();\n      return replica.getState() == Replica.State.DOWN;\n    });\n    CollectionAdminRequest.deleteCollection(collection).process(cluster.getSolrClient());\n\n    jettySolrRunner.start();\n\n    CollectionAdminRequest.createCollection(collection, \"conf1\", 1, 1)\n        .setCreateNodeSet(cluster.getJettySolrRunner(1).getNodeName()).process(cluster.getSolrClient());\n    waitForState(\"\", collection, clusterShape(1, 1));\n    QueryResponse response = cluster.getSolrClient().query(collection, new SolrQuery(\"*:*\"));\n    assertEquals(0L, response.getResults().getNumFound());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"06263309947a9804c326e35ce627be8768e123a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["06263309947a9804c326e35ce627be8768e123a4"]},"commit2Childs":{"06263309947a9804c326e35ce627be8768e123a4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["06263309947a9804c326e35ce627be8768e123a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}