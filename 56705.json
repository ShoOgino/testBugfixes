{"path":"src/java/org/apache/solr/handler/SnapPuller.FileFetcher#FileFetcher(File,Map[String,Object],String,boolean,long).mjava","commits":[{"id":"c6e1afc23adf8af4aa2dfc781b02b63710546b33","date":1227622754,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SnapPuller.FileFetcher#FileFetcher(File,Map[String,Object],String,boolean,long).mjava","pathOld":"src/java/org/apache/solr/handler/SnapPuller.FileFetcher#FileFetcher(File,Map[String,Object],String,HttpClient,boolean,long).mjava","sourceNew":"    FileFetcher(File dir, Map<String, Object> fileDetails, String saveAs,\n                boolean isConf, long latestVersion) throws FileNotFoundException {\n      this.snapDir = dir;\n      this.fileName = (String) fileDetails.get(NAME);\n      this.size = (Long) fileDetails.get(SIZE);\n      this.isConf = isConf;\n      this.saveAs = saveAs;\n      indexVersion = latestVersion;\n\n      this.file = new File(snapDir, saveAs);\n      this.fileChannel = new FileOutputStream(file).getChannel();\n      if (includeChecksum)\n        checksum = new Adler32();\n    }\n\n","sourceOld":"    FileFetcher(File dir, Map<String, Object> fileDetails, String saveAs,\n                HttpClient client, boolean isConf, long latestVersion) throws FileNotFoundException {\n      this.snapDir = dir;\n      this.fileName = (String) fileDetails.get(NAME);\n      this.size = (Long) fileDetails.get(SIZE);\n      this.client = client;\n      this.isConf = isConf;\n      this.saveAs = saveAs;\n      indexVersion = latestVersion;\n\n      this.file = new File(snapDir, saveAs);\n      this.fileChannel = new FileOutputStream(file).getChannel();\n      if (includeChecksum)\n        checksum = new Adler32();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12c3a8aa53fabcd216e6ca9a2529a2bed74c8e21","date":1240555350,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SnapPuller.FileFetcher#FileFetcher(File,Map[String,Object],String,boolean,long).mjava","pathOld":"src/java/org/apache/solr/handler/SnapPuller.FileFetcher#FileFetcher(File,Map[String,Object],String,boolean,long).mjava","sourceNew":"    FileFetcher(File dir, Map<String, Object> fileDetails, String saveAs,\n                boolean isConf, long latestVersion) throws FileNotFoundException {\n      this.snapDir = dir;\n      this.fileName = (String) fileDetails.get(NAME);\n      this.size = (Long) fileDetails.get(SIZE);\n      this.isConf = isConf;\n      this.saveAs = saveAs;\n      if(fileDetails.get(LAST_MODIFIED) != null){\n        lastmodified = (Long)fileDetails.get(LAST_MODIFIED);\n      }\n      indexVersion = latestVersion;\n\n      this.file = new File(snapDir, saveAs);\n      this.fileChannel = new FileOutputStream(file).getChannel();\n      if (includeChecksum)\n        checksum = new Adler32();\n    }\n\n","sourceOld":"    FileFetcher(File dir, Map<String, Object> fileDetails, String saveAs,\n                boolean isConf, long latestVersion) throws FileNotFoundException {\n      this.snapDir = dir;\n      this.fileName = (String) fileDetails.get(NAME);\n      this.size = (Long) fileDetails.get(SIZE);\n      this.isConf = isConf;\n      this.saveAs = saveAs;\n      indexVersion = latestVersion;\n\n      this.file = new File(snapDir, saveAs);\n      this.fileChannel = new FileOutputStream(file).getChannel();\n      if (includeChecksum)\n        checksum = new Adler32();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c7e0049b151d932b18c3acc1ef8366262ae9809d","date":1247648156,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SnapPuller.FileFetcher#FileFetcher(File,Map[String,Object],String,boolean,long).mjava","pathOld":"src/java/org/apache/solr/handler/SnapPuller.FileFetcher#FileFetcher(File,Map[String,Object],String,boolean,long).mjava","sourceNew":"    FileFetcher(File dir, Map<String, Object> fileDetails, String saveAs,\n                boolean isConf, long latestVersion) throws FileNotFoundException {\n      this.copy2Dir = dir;\n      this.fileName = (String) fileDetails.get(NAME);\n      this.size = (Long) fileDetails.get(SIZE);\n      this.isConf = isConf;\n      this.saveAs = saveAs;\n      if(fileDetails.get(LAST_MODIFIED) != null){\n        lastmodified = (Long)fileDetails.get(LAST_MODIFIED);\n      }\n      indexVersion = latestVersion;\n\n      this.file = new File(copy2Dir, saveAs);\n      this.fileChannel = new FileOutputStream(file).getChannel();\n      if (includeChecksum)\n        checksum = new Adler32();\n    }\n\n","sourceOld":"    FileFetcher(File dir, Map<String, Object> fileDetails, String saveAs,\n                boolean isConf, long latestVersion) throws FileNotFoundException {\n      this.snapDir = dir;\n      this.fileName = (String) fileDetails.get(NAME);\n      this.size = (Long) fileDetails.get(SIZE);\n      this.isConf = isConf;\n      this.saveAs = saveAs;\n      if(fileDetails.get(LAST_MODIFIED) != null){\n        lastmodified = (Long)fileDetails.get(LAST_MODIFIED);\n      }\n      indexVersion = latestVersion;\n\n      this.file = new File(snapDir, saveAs);\n      this.fileChannel = new FileOutputStream(file).getChannel();\n      if (includeChecksum)\n        checksum = new Adler32();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0bf7f3e57143e25ea24eee3a8faafeb247b8e2e","date":1254059677,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SnapPuller.FileFetcher#FileFetcher(File,Map[String,Object],String,boolean,long).mjava","pathOld":"src/java/org/apache/solr/handler/SnapPuller.FileFetcher#FileFetcher(File,Map[String,Object],String,boolean,long).mjava","sourceNew":"    FileFetcher(File dir, Map<String, Object> fileDetails, String saveAs,\n                boolean isConf, long latestVersion) throws IOException {\n      this.copy2Dir = dir;\n      this.fileName = (String) fileDetails.get(NAME);\n      this.size = (Long) fileDetails.get(SIZE);\n      this.isConf = isConf;\n      this.saveAs = saveAs;\n      if(fileDetails.get(LAST_MODIFIED) != null){\n        lastmodified = (Long)fileDetails.get(LAST_MODIFIED);\n      }\n      indexVersion = latestVersion;\n\n      this.file = new File(copy2Dir, saveAs);\n      \n      this.fileOutputStream = new FileOutputStream(file);\n      this.fileChannel = this.fileOutputStream.getChannel();\n\n      if (includeChecksum)\n        checksum = new Adler32();\n    }\n\n","sourceOld":"    FileFetcher(File dir, Map<String, Object> fileDetails, String saveAs,\n                boolean isConf, long latestVersion) throws FileNotFoundException {\n      this.copy2Dir = dir;\n      this.fileName = (String) fileDetails.get(NAME);\n      this.size = (Long) fileDetails.get(SIZE);\n      this.isConf = isConf;\n      this.saveAs = saveAs;\n      if(fileDetails.get(LAST_MODIFIED) != null){\n        lastmodified = (Long)fileDetails.get(LAST_MODIFIED);\n      }\n      indexVersion = latestVersion;\n\n      this.file = new File(copy2Dir, saveAs);\n      this.fileChannel = new FileOutputStream(file).getChannel();\n      if (includeChecksum)\n        checksum = new Adler32();\n    }\n\n","bugFix":["f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349","c6e1afc23adf8af4aa2dfc781b02b63710546b33"],"bugIntro":["c01638f4dd94981c1d3d52c4f7991246a5a24aba","c01638f4dd94981c1d3d52c4f7991246a5a24aba","c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/SnapPuller.FileFetcher#FileFetcher(File,Map[String,Object],String,boolean,long).mjava","pathOld":"src/java/org/apache/solr/handler/SnapPuller.FileFetcher#FileFetcher(File,Map[String,Object],String,boolean,long).mjava","sourceNew":"    FileFetcher(File dir, Map<String, Object> fileDetails, String saveAs,\n                boolean isConf, long latestVersion) throws IOException {\n      this.copy2Dir = dir;\n      this.fileName = (String) fileDetails.get(NAME);\n      this.size = (Long) fileDetails.get(SIZE);\n      this.isConf = isConf;\n      this.saveAs = saveAs;\n      if(fileDetails.get(LAST_MODIFIED) != null){\n        lastmodified = (Long)fileDetails.get(LAST_MODIFIED);\n      }\n      indexVersion = latestVersion;\n\n      this.file = new File(copy2Dir, saveAs);\n      \n      this.fileOutputStream = new FileOutputStream(file);\n      this.fileChannel = this.fileOutputStream.getChannel();\n\n      if (includeChecksum)\n        checksum = new Adler32();\n    }\n\n","sourceOld":"    FileFetcher(File dir, Map<String, Object> fileDetails, String saveAs,\n                boolean isConf, long latestVersion) throws IOException {\n      this.copy2Dir = dir;\n      this.fileName = (String) fileDetails.get(NAME);\n      this.size = (Long) fileDetails.get(SIZE);\n      this.isConf = isConf;\n      this.saveAs = saveAs;\n      if(fileDetails.get(LAST_MODIFIED) != null){\n        lastmodified = (Long)fileDetails.get(LAST_MODIFIED);\n      }\n      indexVersion = latestVersion;\n\n      this.file = new File(copy2Dir, saveAs);\n      \n      this.fileOutputStream = new FileOutputStream(file);\n      this.fileChannel = this.fileOutputStream.getChannel();\n\n      if (includeChecksum)\n        checksum = new Adler32();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"12c3a8aa53fabcd216e6ca9a2529a2bed74c8e21":["c6e1afc23adf8af4aa2dfc781b02b63710546b33"],"c7e0049b151d932b18c3acc1ef8366262ae9809d":["12c3a8aa53fabcd216e6ca9a2529a2bed74c8e21"],"ad94625fb8d088209f46650c8097196fec67f00c":["d0bf7f3e57143e25ea24eee3a8faafeb247b8e2e"],"c6e1afc23adf8af4aa2dfc781b02b63710546b33":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d0bf7f3e57143e25ea24eee3a8faafeb247b8e2e":["c7e0049b151d932b18c3acc1ef8366262ae9809d"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["c6e1afc23adf8af4aa2dfc781b02b63710546b33"],"12c3a8aa53fabcd216e6ca9a2529a2bed74c8e21":["c7e0049b151d932b18c3acc1ef8366262ae9809d"],"c7e0049b151d932b18c3acc1ef8366262ae9809d":["d0bf7f3e57143e25ea24eee3a8faafeb247b8e2e"],"c6e1afc23adf8af4aa2dfc781b02b63710546b33":["12c3a8aa53fabcd216e6ca9a2529a2bed74c8e21"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"d0bf7f3e57143e25ea24eee3a8faafeb247b8e2e":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}