{"path":"lucene/core/src/java/org/apache/lucene/index/MergeState.DocMap#get(int).mjava","commits":[{"id":"e25729298aefe258b77e1b2676ae1088c1a2c49d","date":1338320376,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergeState.DocMap#get(int).mjava","pathOld":"/dev/null","sourceNew":"    public int get(int docId) {\n      if (liveDocs == null || liveDocs.get(docId)) {\n        return remap(docId);\n      } else {\n        return -1;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c14aed69f37b57db63b1fccc0740b17060a08f2b","date":1348227091,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergeState.DocMap#get(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergeState.DocMap#get(int).mjava","sourceNew":"    /** Returns the mapped docID corresponding to the provided one. */\n    public int get(int docId) {\n      if (liveDocs == null || liveDocs.get(docId)) {\n        return remap(docId);\n      } else {\n        return -1;\n      }\n    }\n\n","sourceOld":"    public int get(int docId) {\n      if (liveDocs == null || liveDocs.get(docId)) {\n        return remap(docId);\n      } else {\n        return -1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dff0843e8b2ca3aecd360f2e6db0f777d42935ee","date":1361489674,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergeState.DocMap#get(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergeState.DocMap#get(int).mjava","sourceNew":"    /** Returns the mapped docID corresponding to the provided one. */\n    public abstract int get(int docID);\n\n","sourceOld":"    /** Returns the mapped docID corresponding to the provided one. */\n    public int get(int docId) {\n      if (liveDocs == null || liveDocs.get(docId)) {\n        return remap(docId);\n      } else {\n        return -1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ceaef6cfc68c8ab22a684192e469a8280f9e6e70","date":1462354657,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergeState.DocMap#get(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergeState.DocMap#get(int).mjava","sourceNew":"    /** Return the mapped docID or -1 if the given doc is not mapped. */\n    public abstract int get(int docID);\n\n","sourceOld":"    /** Returns the mapped docID corresponding to the provided one. */\n    public abstract int get(int docID);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d33e731a93d4b57e662ff094f64f94a745422d4","date":1463128289,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergeState.DocMap#get(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergeState.DocMap#get(int).mjava","sourceNew":"    /** Return the mapped docID or -1 if the given doc is not mapped. */\n    public abstract int get(int docID);\n\n","sourceOld":"    /** Returns the mapped docID corresponding to the provided one. */\n    public abstract int get(int docID);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergeState.DocMap#get(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergeState.DocMap#get(int).mjava","sourceNew":"    /** Return the mapped docID or -1 if the given doc is not mapped. */\n    public abstract int get(int docID);\n\n","sourceOld":"    /** Returns the mapped docID corresponding to the provided one. */\n    public abstract int get(int docID);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergeState.DocMap#get(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergeState.DocMap#get(int).mjava","sourceNew":"    /** Return the mapped docID or -1 if the given doc is not mapped. */\n    public abstract int get(int docID);\n\n","sourceOld":"    /** Returns the mapped docID corresponding to the provided one. */\n    public abstract int get(int docID);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergeState.DocMap#get(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergeState.DocMap#get(int).mjava","sourceNew":"    /** Return the mapped docID or -1 if the given doc is not mapped. */\n    public abstract int get(int docID);\n\n","sourceOld":"    /** Returns the mapped docID corresponding to the provided one. */\n    public abstract int get(int docID);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dff0843e8b2ca3aecd360f2e6db0f777d42935ee":["c14aed69f37b57db63b1fccc0740b17060a08f2b"],"e25729298aefe258b77e1b2676ae1088c1a2c49d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ceaef6cfc68c8ab22a684192e469a8280f9e6e70":["dff0843e8b2ca3aecd360f2e6db0f777d42935ee"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0ad30c6a479e764150a3316e57263319775f1df2":["dff0843e8b2ca3aecd360f2e6db0f777d42935ee","3d33e731a93d4b57e662ff094f64f94a745422d4"],"3d33e731a93d4b57e662ff094f64f94a745422d4":["dff0843e8b2ca3aecd360f2e6db0f777d42935ee","ceaef6cfc68c8ab22a684192e469a8280f9e6e70"],"c14aed69f37b57db63b1fccc0740b17060a08f2b":["e25729298aefe258b77e1b2676ae1088c1a2c49d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["dff0843e8b2ca3aecd360f2e6db0f777d42935ee","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["dff0843e8b2ca3aecd360f2e6db0f777d42935ee","0ad30c6a479e764150a3316e57263319775f1df2"]},"commit2Childs":{"dff0843e8b2ca3aecd360f2e6db0f777d42935ee":["ceaef6cfc68c8ab22a684192e469a8280f9e6e70","0ad30c6a479e764150a3316e57263319775f1df2","3d33e731a93d4b57e662ff094f64f94a745422d4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"e25729298aefe258b77e1b2676ae1088c1a2c49d":["c14aed69f37b57db63b1fccc0740b17060a08f2b"],"ceaef6cfc68c8ab22a684192e469a8280f9e6e70":["3d33e731a93d4b57e662ff094f64f94a745422d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e25729298aefe258b77e1b2676ae1088c1a2c49d"],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"3d33e731a93d4b57e662ff094f64f94a745422d4":["0ad30c6a479e764150a3316e57263319775f1df2"],"c14aed69f37b57db63b1fccc0740b17060a08f2b":["dff0843e8b2ca3aecd360f2e6db0f777d42935ee"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}