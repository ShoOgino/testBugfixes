{"path":"src/java/org/apache/lucene/index/IndexFileNameFilter#isCFSFile(String).mjava","commits":[{"id":"284c1d3c8b19931bf6f312fae7470487f5d9e580","date":1163805527,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexFileNameFilter#isCFSFile(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns true if this is a file that would be contained\n   * in a CFS file.  This function should only be called on\n   * files that pass the above \"accept\" (ie, are already\n   * known to be a Lucene index file).\n   */\n  public boolean isCFSFile(String name) {\n    int i = name.lastIndexOf('.');\n    if (i != -1) {\n      String extension = name.substring(1+i);\n      if (extensions.contains(extension) &&\n           !extension.equals(\"del\") &&\n           !extension.equals(\"gen\") &&\n          !extension.equals(\"cfs\")) {\n        return true;\n      }\n      if (extension.startsWith(\"f\") &&\n          extension.matches(\"f\\\\d+\")) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b6187898fc4413ccd18229711786550a280383c","date":1173776782,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexFileNameFilter#isCFSFile(String).mjava","pathOld":"src/java/org/apache/lucene/index/IndexFileNameFilter#isCFSFile(String).mjava","sourceNew":"  /**\n   * Returns true if this is a file that would be contained\n   * in a CFS file.  This function should only be called on\n   * files that pass the above \"accept\" (ie, are already\n   * known to be a Lucene index file).\n   */\n  public boolean isCFSFile(String name) {\n    int i = name.lastIndexOf('.');\n    if (i != -1) {\n      String extension = name.substring(1+i);\n      if (extensionsInCFS.contains(extension)) {\n        return true;\n      }\n      if (extension.startsWith(\"f\") &&\n          extension.matches(\"f\\\\d+\")) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n","sourceOld":"  /**\n   * Returns true if this is a file that would be contained\n   * in a CFS file.  This function should only be called on\n   * files that pass the above \"accept\" (ie, are already\n   * known to be a Lucene index file).\n   */\n  public boolean isCFSFile(String name) {\n    int i = name.lastIndexOf('.');\n    if (i != -1) {\n      String extension = name.substring(1+i);\n      if (extensions.contains(extension) &&\n           !extension.equals(\"del\") &&\n           !extension.equals(\"gen\") &&\n          !extension.equals(\"cfs\")) {\n        return true;\n      }\n      if (extension.startsWith(\"f\") &&\n          extension.matches(\"f\\\\d+\")) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexFileNameFilter#isCFSFile(String).mjava","pathOld":"src/java/org/apache/lucene/index/IndexFileNameFilter#isCFSFile(String).mjava","sourceNew":"  /**\n   * Returns true if this is a file that would be contained\n   * in a CFS file.  This function should only be called on\n   * files that pass the above \"accept\" (ie, are already\n   * known to be a Lucene index file).\n   */\n  public boolean isCFSFile(String name) {\n    int i = name.lastIndexOf('.');\n    if (i != -1) {\n      String extension = name.substring(1+i);\n      if (extensionsInCFS.contains(extension)) {\n        return true;\n      }\n      if (extension.startsWith(\"f\") &&\n          extension.matches(\"f\\\\d+\")) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n","sourceOld":"  /**\n   * Returns true if this is a file that would be contained\n   * in a CFS file.  This function should only be called on\n   * files that pass the above \"accept\" (ie, are already\n   * known to be a Lucene index file).\n   */\n  public boolean isCFSFile(String name) {\n    int i = name.lastIndexOf('.');\n    if (i != -1) {\n      String extension = name.substring(1+i);\n      if (extensionsInCFS.contains(extension)) {\n        return true;\n      }\n      if (extension.startsWith(\"f\") &&\n          extension.matches(\"f\\\\d+\")) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"284c1d3c8b19931bf6f312fae7470487f5d9e580":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8b6187898fc4413ccd18229711786550a280383c":["284c1d3c8b19931bf6f312fae7470487f5d9e580"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8b6187898fc4413ccd18229711786550a280383c"]},"commit2Childs":{"284c1d3c8b19931bf6f312fae7470487f5d9e580":["8b6187898fc4413ccd18229711786550a280383c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["284c1d3c8b19931bf6f312fae7470487f5d9e580"],"8b6187898fc4413ccd18229711786550a280383c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}