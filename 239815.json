{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#finish(Map[String,Object]).mjava","commits":[{"id":"b4804614e0358954d5d9f51128fcf3cd79e6e25b","date":1352831451,"type":1,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#finish(Map[String,Object]).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#finish(Properties).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void finish(Map<String,Object> lastIndexTimeProps) {\n    LOG.info(\"Import completed successfully\");\n    statusMessages.put(\"\", \"Indexing completed. Added/Updated: \"\n            + importStatistics.docCount + \" documents. Deleted \"\n            + importStatistics.deletedDocCount + \" documents.\");\n    if(reqParams.isCommit()) {\n      writer.commit(reqParams.isOptimize());\n      addStatusMessage(\"Committed\");\n      if (reqParams.isOptimize())\n        addStatusMessage(\"Optimized\");\n    }\n    try {\n      propWriter.persist(lastIndexTimeProps);\n    } catch (Exception e) {\n      LOG.error(\"Could not write property file\", e);\n      statusMessages.put(\"error\", \"Could not write property file. Delta imports will not work. \" +\n          \"Make sure your conf directory is writable\");\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void finish(Properties lastIndexTimeProps) {\n    LOG.info(\"Import completed successfully\");\n    statusMessages.put(\"\", \"Indexing completed. Added/Updated: \"\n            + importStatistics.docCount + \" documents. Deleted \"\n            + importStatistics.deletedDocCount + \" documents.\");\n    if(reqParams.isCommit()) {\n      writer.commit(reqParams.isOptimize());\n      addStatusMessage(\"Committed\");\n      if (reqParams.isOptimize())\n        addStatusMessage(\"Optimized\");\n    }\n    try {\n      propWriter.persist(lastIndexTimeProps);\n    } catch (Exception e) {\n      LOG.error(\"Could not write property file\", e);\n      statusMessages.put(\"error\", \"Could not write property file. Delta imports will not work. \" +\n          \"Make sure your conf directory is writable\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#finish(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void finish(Map<String,Object> lastIndexTimeProps) {\n    LOG.info(\"Import completed successfully\");\n    statusMessages.put(\"\", \"Indexing completed. Added/Updated: \"\n            + importStatistics.docCount + \" documents. Deleted \"\n            + importStatistics.deletedDocCount + \" documents.\");\n    if(reqParams.isCommit()) {\n      writer.commit(reqParams.isOptimize());\n      addStatusMessage(\"Committed\");\n      if (reqParams.isOptimize())\n        addStatusMessage(\"Optimized\");\n    }\n    try {\n      propWriter.persist(lastIndexTimeProps);\n    } catch (Exception e) {\n      LOG.error(\"Could not write property file\", e);\n      statusMessages.put(\"error\", \"Could not write property file. Delta imports will not work. \" +\n          \"Make sure your conf directory is writable\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd","date":1534976797,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#finish(Map[String,Object]).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#finish(Map[String,Object]).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void finish(Map<String,Object> lastIndexTimeProps) {\n    log.info(\"Import completed successfully\");\n    statusMessages.put(\"\", \"Indexing completed. Added/Updated: \"\n            + importStatistics.docCount + \" documents. Deleted \"\n            + importStatistics.deletedDocCount + \" documents.\");\n    if(reqParams.isCommit()) {\n      writer.commit(reqParams.isOptimize());\n      addStatusMessage(\"Committed\");\n      if (reqParams.isOptimize())\n        addStatusMessage(\"Optimized\");\n    }\n    try {\n      propWriter.persist(lastIndexTimeProps);\n    } catch (Exception e) {\n      log.error(\"Could not write property file\", e);\n      statusMessages.put(\"error\", \"Could not write property file. Delta imports will not work. \" +\n          \"Make sure your conf directory is writable\");\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void finish(Map<String,Object> lastIndexTimeProps) {\n    LOG.info(\"Import completed successfully\");\n    statusMessages.put(\"\", \"Indexing completed. Added/Updated: \"\n            + importStatistics.docCount + \" documents. Deleted \"\n            + importStatistics.deletedDocCount + \" documents.\");\n    if(reqParams.isCommit()) {\n      writer.commit(reqParams.isOptimize());\n      addStatusMessage(\"Committed\");\n      if (reqParams.isOptimize())\n        addStatusMessage(\"Optimized\");\n    }\n    try {\n      propWriter.persist(lastIndexTimeProps);\n    } catch (Exception e) {\n      LOG.error(\"Could not write property file\", e);\n      statusMessages.put(\"error\", \"Could not write property file. Delta imports will not work. \" +\n          \"Make sure your conf directory is writable\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#finish(Map[String,Object]).mjava","sourceNew":null,"sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void finish(Map<String,Object> lastIndexTimeProps) {\n    log.info(\"Import completed successfully\");\n    statusMessages.put(\"\", \"Indexing completed. Added/Updated: \"\n            + importStatistics.docCount + \" documents. Deleted \"\n            + importStatistics.deletedDocCount + \" documents.\");\n    if(reqParams.isCommit()) {\n      writer.commit(reqParams.isOptimize());\n      addStatusMessage(\"Committed\");\n      if (reqParams.isOptimize())\n        addStatusMessage(\"Optimized\");\n    }\n    try {\n      propWriter.persist(lastIndexTimeProps);\n    } catch (Exception e) {\n      log.error(\"Could not write property file\", e);\n      statusMessages.put(\"error\", \"Could not write property file. Delta imports will not work. \" +\n          \"Make sure your conf directory is writable\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b4804614e0358954d5d9f51128fcf3cd79e6e25b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b4804614e0358954d5d9f51128fcf3cd79e6e25b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["b4804614e0358954d5d9f51128fcf3cd79e6e25b"]},"commit2Childs":{"b4804614e0358954d5d9f51128fcf3cd79e6e25b":["407687e67faf6e1f02a211ca078d8e3eed631027","e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b4804614e0358954d5d9f51128fcf3cd79e6e25b","407687e67faf6e1f02a211ca078d8e3eed631027"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}