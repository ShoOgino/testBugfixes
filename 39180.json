{"path":"src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(IndexWriter,String,MergePolicy.OneMerge).mjava","commits":[{"id":"346d5897e4c4e77ed5dbd31f7730ff30973d5971","date":1198317988,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(IndexWriter,String,MergePolicy.OneMerge).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(IndexWriter,String).mjava","sourceNew":"  SegmentMerger(IndexWriter writer, String name, MergePolicy.OneMerge merge) {\n    directory = writer.getDirectory();\n    segment = name;\n    if (merge != null)\n      checkAbort = new CheckAbort(merge, directory);\n    termIndexInterval = writer.getTermIndexInterval();\n  }\n\n","sourceOld":"  SegmentMerger(IndexWriter writer, String name) {\n    directory = writer.getDirectory();\n    segment = name;\n    termIndexInterval = writer.getTermIndexInterval();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d736930237c54e1516a9e3bae803c92ff19ec4e5","date":1245789156,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(IndexWriter,String,MergePolicy.OneMerge).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(IndexWriter,String,MergePolicy.OneMerge).mjava","sourceNew":"  SegmentMerger(IndexWriter writer, String name, MergePolicy.OneMerge merge) {\n    directory = writer.getDirectory();\n    segment = name;\n    if (merge != null) {\n      checkAbort = new CheckAbort(merge, directory);\n    } else {\n      checkAbort = new CheckAbort(null, null) {\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    termIndexInterval = writer.getTermIndexInterval();\n  }\n\n","sourceOld":"  SegmentMerger(IndexWriter writer, String name, MergePolicy.OneMerge merge) {\n    directory = writer.getDirectory();\n    segment = name;\n    if (merge != null)\n      checkAbort = new CheckAbort(merge, directory);\n    termIndexInterval = writer.getTermIndexInterval();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(IndexWriter,String,MergePolicy.OneMerge).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(IndexWriter,String,MergePolicy.OneMerge).mjava","sourceNew":"  SegmentMerger(IndexWriter writer, String name, MergePolicy.OneMerge merge) {\n    directory = writer.getDirectory();\n    segment = name;\n    if (merge != null) {\n      checkAbort = new CheckAbort(merge, directory);\n    } else {\n      checkAbort = new CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    termIndexInterval = writer.getTermIndexInterval();\n  }\n\n","sourceOld":"  SegmentMerger(IndexWriter writer, String name, MergePolicy.OneMerge merge) {\n    directory = writer.getDirectory();\n    segment = name;\n    if (merge != null) {\n      checkAbort = new CheckAbort(merge, directory);\n    } else {\n      checkAbort = new CheckAbort(null, null) {\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    termIndexInterval = writer.getTermIndexInterval();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(IndexWriter,String,MergePolicy.OneMerge).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(IndexWriter,String,MergePolicy.OneMerge).mjava","sourceNew":"  SegmentMerger(IndexWriter writer, String name, MergePolicy.OneMerge merge) {\n    directory = writer.getDirectory();\n    segment = name;\n    if (merge != null) {\n      checkAbort = new CheckAbort(merge, directory);\n    } else {\n      checkAbort = new CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    termIndexInterval = writer.getConfig().getTermIndexInterval();\n  }\n\n","sourceOld":"  SegmentMerger(IndexWriter writer, String name, MergePolicy.OneMerge merge) {\n    directory = writer.getDirectory();\n    segment = name;\n    if (merge != null) {\n      checkAbort = new CheckAbort(merge, directory);\n    } else {\n      checkAbort = new CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    termIndexInterval = writer.getTermIndexInterval();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(IndexWriter,String,MergePolicy.OneMerge).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(IndexWriter,String,MergePolicy.OneMerge).mjava","sourceNew":"  SegmentMerger(IndexWriter writer, String name, MergePolicy.OneMerge merge) {\n    directory = writer.getDirectory();\n    segment = name;\n    if (merge != null) {\n      checkAbort = new CheckAbort(merge, directory);\n    } else {\n      checkAbort = new CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    termIndexInterval = writer.getTermIndexInterval();\n  }\n\n","sourceOld":"  SegmentMerger(IndexWriter writer, String name, MergePolicy.OneMerge merge) {\n    directory = writer.getDirectory();\n    segment = name;\n    if (merge != null) {\n      checkAbort = new CheckAbort(merge, directory);\n    } else {\n      checkAbort = new CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    termIndexInterval = writer.getConfig().getTermIndexInterval();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(IndexWriter,String,MergePolicy.OneMerge).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(IndexWriter,String,MergePolicy.OneMerge).mjava","sourceNew":"  SegmentMerger(IndexWriter writer, String name, MergePolicy.OneMerge merge) {\n    directory = writer.getDirectory();\n    segment = name;\n    if (merge != null) {\n      checkAbort = new CheckAbort(merge, directory);\n    } else {\n      checkAbort = new CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    termIndexInterval = writer.getConfig().getTermIndexInterval();\n  }\n\n","sourceOld":"  SegmentMerger(IndexWriter writer, String name, MergePolicy.OneMerge merge) {\n    directory = writer.getDirectory();\n    segment = name;\n    if (merge != null) {\n      checkAbort = new CheckAbort(merge, directory);\n    } else {\n      checkAbort = new CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    termIndexInterval = writer.getTermIndexInterval();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(IndexWriter,String,MergePolicy.OneMerge).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(IndexWriter,String,MergePolicy.OneMerge).mjava","sourceNew":"  SegmentMerger(IndexWriter writer, String name, MergePolicy.OneMerge merge) {\n    directory = writer.getDirectory();\n    segment = name;\n    if (merge != null) {\n      checkAbort = new CheckAbort(merge, directory);\n    } else {\n      checkAbort = new CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    termIndexInterval = writer.getConfig().getTermIndexInterval();\n  }\n\n","sourceOld":"  SegmentMerger(IndexWriter writer, String name, MergePolicy.OneMerge merge) {\n    directory = writer.getDirectory();\n    segment = name;\n    if (merge != null) {\n      checkAbort = new CheckAbort(merge, directory);\n    } else {\n      checkAbort = new CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    termIndexInterval = writer.getConfig().getTermIndexInterval();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"346d5897e4c4e77ed5dbd31f7730ff30973d5971":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"8a9e385641d717e641408d8fbbc62be8fc766357":["d736930237c54e1516a9e3bae803c92ff19ec4e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["8a9e385641d717e641408d8fbbc62be8fc766357"],"d736930237c54e1516a9e3bae803c92ff19ec4e5":["346d5897e4c4e77ed5dbd31f7730ff30973d5971"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"346d5897e4c4e77ed5dbd31f7730ff30973d5971":["d736930237c54e1516a9e3bae803c92ff19ec4e5"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["346d5897e4c4e77ed5dbd31f7730ff30973d5971"],"8a9e385641d717e641408d8fbbc62be8fc766357":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"d736930237c54e1516a9e3bae803c92ff19ec4e5":["8a9e385641d717e641408d8fbbc62be8fc766357"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}