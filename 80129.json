{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor[FacetRequest]#fillBucketSubs(SimpleOrderedMap[Object],FacetContext).mjava","commits":[{"id":"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d","date":1426480823,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor[FacetRequest]#fillBucketSubs(SimpleOrderedMap[Object],FacetContext).mjava","pathOld":"/dev/null","sourceNew":"  protected void fillBucketSubs(SimpleOrderedMap<Object> response, FacetContext subContext) throws IOException {\n    for (Map.Entry<String,FacetRequest> sub : freq.getSubFacets().entrySet()) {\n      FacetProcessor subProcessor = sub.getValue().createFacetProcessor(subContext);\n      subProcessor.process();\n      response.add( sub.getKey(), subProcessor.getResponse() );\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor[FacetRequest]#fillBucketSubs(SimpleOrderedMap[Object],FacetContext).mjava","pathOld":"/dev/null","sourceNew":"  protected void fillBucketSubs(SimpleOrderedMap<Object> response, FacetContext subContext) throws IOException {\n    for (Map.Entry<String,FacetRequest> sub : freq.getSubFacets().entrySet()) {\n      FacetProcessor subProcessor = sub.getValue().createFacetProcessor(subContext);\n      subProcessor.process();\n      response.add( sub.getKey(), subProcessor.getResponse() );\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"faf1236ae092482293a7e0659e347d172185ef6f","date":1430314113,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor[FacetRequest]#processSubs(SimpleOrderedMap[Object],Query,DocSet).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor[FacetRequest]#fillBucketSubs(SimpleOrderedMap[Object],FacetContext).mjava","sourceNew":"  protected void processSubs(SimpleOrderedMap<Object> response, Query filter, DocSet domain) throws IOException {\n\n    // TODO: what if a zero bucket has a sub-facet with an exclusion that would yield results?\n    // should we check for domain-altering exclusions, or even ask the sub-facet for\n    // it's domain and then only skip it if it's 0?\n\n    if (domain == null || domain.size() == 0 && !freq.processEmpty) {\n      return;\n    }\n\n    for (Map.Entry<String,FacetRequest> sub : freq.getSubFacets().entrySet()) {\n      // make a new context for each sub-facet since they can change the domain\n      FacetContext subContext = fcontext.sub(filter, domain);\n      FacetProcessor subProcessor = sub.getValue().createFacetProcessor(subContext);\n      subProcessor.process();\n      response.add( sub.getKey(), subProcessor.getResponse() );\n    }\n  }\n\n","sourceOld":"  protected void fillBucketSubs(SimpleOrderedMap<Object> response, FacetContext subContext) throws IOException {\n    for (Map.Entry<String,FacetRequest> sub : freq.getSubFacets().entrySet()) {\n      FacetProcessor subProcessor = sub.getValue().createFacetProcessor(subContext);\n      subProcessor.process();\n      response.add( sub.getKey(), subProcessor.getResponse() );\n    }\n  }\n\n","bugFix":null,"bugIntro":["7bc83dec7a87b9a843f16fd1b9ae2597fef3fc70","248f6ecc900c3a5633fd5ca6f564ea8b717720da","248f6ecc900c3a5633fd5ca6f564ea8b717720da","248f6ecc900c3a5633fd5ca6f564ea8b717720da"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"faf1236ae092482293a7e0659e347d172185ef6f":["ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["faf1236ae092482293a7e0659e347d172185ef6f"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","faf1236ae092482293a7e0659e347d172185ef6f"],"faf1236ae092482293a7e0659e347d172185ef6f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}