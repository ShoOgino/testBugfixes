{"path":"solr/src/java/org/apache/solr/handler/JsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","commits":[{"id":"bc00220e3dec859110781d5d19a6116501fb4a38","date":1273880298,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/JsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"JSONLoader: \" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (XmlUpdateRequestHandler.log.isTraceEnabled()) {\n        String body = IOUtils.toString(reader);\n        XmlUpdateRequestHandler.log.trace(\"body\", body);\n        reader = new StringReader(body);\n      }\n\n      JSONParser parser = new JSONParser(reader);\n      this.processUpdate(processor, parser);\n    }\n    finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa","date":1293733647,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/JsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","pathOld":"solr/src/java/org/apache/solr/handler/JsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","sourceNew":"  @Override\n  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"JSONLoader: \" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (XmlUpdateRequestHandler.log.isTraceEnabled()) {\n        String body = IOUtils.toString(reader);\n        XmlUpdateRequestHandler.log.trace(\"body\", body);\n        reader = new StringReader(body);\n      }\n\n      JSONParser parser = new JSONParser(reader);\n      this.processUpdate(req, processor, parser);\n    }\n    finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"JSONLoader: \" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (XmlUpdateRequestHandler.log.isTraceEnabled()) {\n        String body = IOUtils.toString(reader);\n        XmlUpdateRequestHandler.log.trace(\"body\", body);\n        reader = new StringReader(body);\n      }\n\n      JSONParser parser = new JSONParser(reader);\n      this.processUpdate(processor, parser);\n    }\n    finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","date":1294014627,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/handler/JsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","pathOld":"solr/src/java/org/apache/solr/handler/JsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","sourceNew":"  @Override\n  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"JSONLoader: \" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (XmlUpdateRequestHandler.log.isTraceEnabled()) {\n        String body = IOUtils.toString(reader);\n        XmlUpdateRequestHandler.log.trace(\"body\", body);\n        reader = new StringReader(body);\n      }\n\n      JSONParser parser = new JSONParser(reader);\n      this.processUpdate(req, processor, parser);\n    }\n    finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"JSONLoader: \" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (XmlUpdateRequestHandler.log.isTraceEnabled()) {\n        String body = IOUtils.toString(reader);\n        XmlUpdateRequestHandler.log.trace(\"body\", body);\n        reader = new StringReader(body);\n      }\n\n      JSONParser parser = new JSONParser(reader);\n      this.processUpdate(processor, parser);\n    }\n    finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/handler/JsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","pathOld":"solr/src/java/org/apache/solr/handler/JsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","sourceNew":"  @Override\n  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"JSONLoader: \" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (XmlUpdateRequestHandler.log.isTraceEnabled()) {\n        String body = IOUtils.toString(reader);\n        XmlUpdateRequestHandler.log.trace(\"body\", body);\n        reader = new StringReader(body);\n      }\n\n      JSONParser parser = new JSONParser(reader);\n      this.processUpdate(req, processor, parser);\n    }\n    finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"JSONLoader: \" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (XmlUpdateRequestHandler.log.isTraceEnabled()) {\n        String body = IOUtils.toString(reader);\n        XmlUpdateRequestHandler.log.trace(\"body\", body);\n        reader = new StringReader(body);\n      }\n\n      JSONParser parser = new JSONParser(reader);\n      this.processUpdate(processor, parser);\n    }\n    finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19b15db2edd4d6bec35a41e44d8f1afe6384a905","date":1305144174,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/JsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","pathOld":"solr/src/java/org/apache/solr/handler/JsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","sourceNew":"  @Override\n  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"JSONLoader: \" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (log.isTraceEnabled()) {\n        String body = IOUtils.toString(reader);\n        log.trace(\"body\", body);\n        reader = new StringReader(body);\n      }\n\n      parser = new JSONParser(reader);\n      this.processUpdate();\n    }\n    finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"JSONLoader: \" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (XmlUpdateRequestHandler.log.isTraceEnabled()) {\n        String body = IOUtils.toString(reader);\n        XmlUpdateRequestHandler.log.trace(\"body\", body);\n        reader = new StringReader(body);\n      }\n\n      JSONParser parser = new JSONParser(reader);\n      this.processUpdate(req, processor, parser);\n    }\n    finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c700f8d0842d3e52bb2bdfbfdc046a137e836edb","date":1305285499,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/handler/JsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","pathOld":"solr/src/java/org/apache/solr/handler/JsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","sourceNew":"  @Override\n  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"JSONLoader: \" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (log.isTraceEnabled()) {\n        String body = IOUtils.toString(reader);\n        log.trace(\"body\", body);\n        reader = new StringReader(body);\n      }\n\n      parser = new JSONParser(reader);\n      this.processUpdate();\n    }\n    finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"JSONLoader: \" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (XmlUpdateRequestHandler.log.isTraceEnabled()) {\n        String body = IOUtils.toString(reader);\n        XmlUpdateRequestHandler.log.trace(\"body\", body);\n        reader = new StringReader(body);\n      }\n\n      JSONParser parser = new JSONParser(reader);\n      this.processUpdate(req, processor, parser);\n    }\n    finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/handler/JsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","pathOld":"solr/src/java/org/apache/solr/handler/JsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","sourceNew":"  @Override\n  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"JSONLoader: \" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (log.isTraceEnabled()) {\n        String body = IOUtils.toString(reader);\n        log.trace(\"body\", body);\n        reader = new StringReader(body);\n      }\n\n      parser = new JSONParser(reader);\n      this.processUpdate();\n    }\n    finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"JSONLoader: \" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (XmlUpdateRequestHandler.log.isTraceEnabled()) {\n        String body = IOUtils.toString(reader);\n        XmlUpdateRequestHandler.log.trace(\"body\", body);\n        reader = new StringReader(body);\n      }\n\n      JSONParser parser = new JSONParser(reader);\n      this.processUpdate(req, processor, parser);\n    }\n    finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/JsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","pathOld":"solr/src/java/org/apache/solr/handler/JsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","sourceNew":"  @Override\n  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"JSONLoader: \" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (log.isTraceEnabled()) {\n        String body = IOUtils.toString(reader);\n        log.trace(\"body\", body);\n        reader = new StringReader(body);\n      }\n\n      parser = new JSONParser(reader);\n      this.processUpdate();\n    }\n    finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"JSONLoader: \" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (log.isTraceEnabled()) {\n        String body = IOUtils.toString(reader);\n        log.trace(\"body\", body);\n        reader = new StringReader(body);\n      }\n\n      parser = new JSONParser(reader);\n      this.processUpdate();\n    }\n    finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/JsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","pathOld":"solr/src/java/org/apache/solr/handler/JsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","sourceNew":"  @Override\n  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"JSONLoader: \" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (log.isTraceEnabled()) {\n        String body = IOUtils.toString(reader);\n        log.trace(\"body\", body);\n        reader = new StringReader(body);\n      }\n\n      parser = new JSONParser(reader);\n      this.processUpdate();\n    }\n    finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"JSONLoader: \" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (log.isTraceEnabled()) {\n        String body = IOUtils.toString(reader);\n        log.trace(\"body\", body);\n        reader = new StringReader(body);\n      }\n\n      parser = new JSONParser(reader);\n      this.processUpdate();\n    }\n    finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/JsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","pathOld":"solr/src/java/org/apache/solr/handler/JsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","sourceNew":"  @Override\n  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"JSONLoader: \" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (log.isTraceEnabled()) {\n        String body = IOUtils.toString(reader);\n        log.trace(\"body\", body);\n        reader = new StringReader(body);\n      }\n\n      parser = new JSONParser(reader);\n      this.processUpdate();\n    }\n    finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"JSONLoader: \" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (log.isTraceEnabled()) {\n        String body = IOUtils.toString(reader);\n        log.trace(\"body\", body);\n        reader = new StringReader(body);\n      }\n\n      parser = new JSONParser(reader);\n      this.processUpdate();\n    }\n    finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["bc00220e3dec859110781d5d19a6116501fb4a38","5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":["bc00220e3dec859110781d5d19a6116501fb4a38","5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa"],"19b15db2edd4d6bec35a41e44d8f1afe6384a905":["5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a3776dccca01c11e7046323cfad46a3b4a471233"],"c26f00b574427b55127e869b935845554afde1fa":["19b15db2edd4d6bec35a41e44d8f1afe6384a905","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a3776dccca01c11e7046323cfad46a3b4a471233":["5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa","19b15db2edd4d6bec35a41e44d8f1afe6384a905"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":["70ad682703b8585f5d0a637efec044d57ec05efb","19b15db2edd4d6bec35a41e44d8f1afe6384a905"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["19b15db2edd4d6bec35a41e44d8f1afe6384a905"],"5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa":["bc00220e3dec859110781d5d19a6116501fb4a38"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"],"bc00220e3dec859110781d5d19a6116501fb4a38":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":["c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":[],"19b15db2edd4d6bec35a41e44d8f1afe6384a905":["c26f00b574427b55127e869b935845554afde1fa","a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a3776dccca01c11e7046323cfad46a3b4a471233":["c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bc00220e3dec859110781d5d19a6116501fb4a38"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","19b15db2edd4d6bec35a41e44d8f1afe6384a905","a3776dccca01c11e7046323cfad46a3b4a471233"],"bc00220e3dec859110781d5d19a6116501fb4a38":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","c700f8d0842d3e52bb2bdfbfdc046a137e836edb","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}