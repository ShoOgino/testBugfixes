{"path":"lucene/src/java/org/apache/lucene/search/spans/SpanScorer#score().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/spans/SpanScorer#score().mjava","pathOld":"src/java/org/apache/lucene/search/spans/SpanScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    float raw = getSimilarity().tf(freq) * value; // raw score\n    return norms == null? raw : raw * getSimilarity().decodeNormValue(norms[doc]); // normalize\n  }\n\n","sourceOld":"  @Override\n  public float score() throws IOException {\n    float raw = getSimilarity().tf(freq) * value; // raw score\n    return norms == null? raw : raw * getSimilarity().decodeNormValue(norms[doc]); // normalize\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e5e679b9c5f68f1f331de920ae8366af75b44060","date":1295555804,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/spans/SpanScorer#score().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/spans/SpanScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    float raw = similarity.tf(freq) * value; // raw score\n    return norms == null? raw : raw * similarity.decodeNormValue(norms[doc]); // normalize\n  }\n\n","sourceOld":"  @Override\n  public float score() throws IOException {\n    float raw = getSimilarity().tf(freq) * value; // raw score\n    return norms == null? raw : raw * getSimilarity().decodeNormValue(norms[doc]); // normalize\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/spans/SpanScorer#score().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/spans/SpanScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    float raw = similarity.tf(freq) * value; // raw score\n    return norms == null? raw : raw * similarity.decodeNormValue(norms[doc]); // normalize\n  }\n\n","sourceOld":"  @Override\n  public float score() throws IOException {\n    float raw = getSimilarity().tf(freq) * value; // raw score\n    return norms == null? raw : raw * getSimilarity().decodeNormValue(norms[doc]); // normalize\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/spans/SpanScorer#score().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/spans/SpanScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    float raw = similarity.tf(freq) * value; // raw score\n    return norms == null? raw : raw * similarity.decodeNormValue(norms[doc]); // normalize\n  }\n\n","sourceOld":"  @Override\n  public float score() throws IOException {\n    float raw = getSimilarity().tf(freq) * value; // raw score\n    return norms == null? raw : raw * getSimilarity().decodeNormValue(norms[doc]); // normalize\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f3cee3d20b0c786e6fca20539454262e29edcab","date":1310101685,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/spans/SpanScorer#score().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/spans/SpanScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    return docScorer.score(doc, freq);\n  }\n\n","sourceOld":"  @Override\n  public float score() throws IOException {\n    float raw = similarity.tf(freq) * value; // raw score\n    return norms == null? raw : raw * similarity.decodeNormValue(norms[doc]); // normalize\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9507caf22f292ac0e5e59f62db4275adf4511","date":1310107283,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/spans/SpanScorer#score().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/spans/SpanScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    return docScorer.score(doc, freq);\n  }\n\n","sourceOld":"  @Override\n  public float score() throws IOException {\n    float raw = similarity.tf(freq) * value; // raw score\n    return norms == null? raw : raw * similarity.decodeNormValue(norms[doc]); // normalize\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1291e4568eb7d9463d751627596ef14baf4c1603","date":1310112572,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/spans/SpanScorer#score().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/spans/SpanScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    return docScorer.score(doc, freq);\n  }\n\n","sourceOld":"  @Override\n  public float score() throws IOException {\n    float raw = similarity.tf(freq) * value; // raw score\n    return norms == null? raw : raw * similarity.decodeNormValue(norms[doc]); // normalize\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanScorer#score().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/spans/SpanScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    return docScorer.score(doc, freq);\n  }\n\n","sourceOld":"  @Override\n  public float score() throws IOException {\n    return docScorer.score(doc, freq);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1291e4568eb7d9463d751627596ef14baf4c1603":["e5e679b9c5f68f1f331de920ae8366af75b44060","0f3cee3d20b0c786e6fca20539454262e29edcab"],"0f3cee3d20b0c786e6fca20539454262e29edcab":["e5e679b9c5f68f1f331de920ae8366af75b44060"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":["e5e679b9c5f68f1f331de920ae8366af75b44060","0f3cee3d20b0c786e6fca20539454262e29edcab"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["0f3cee3d20b0c786e6fca20539454262e29edcab"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["9454a6510e2db155fb01faa5c049b06ece95fab9","e5e679b9c5f68f1f331de920ae8366af75b44060"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e5e679b9c5f68f1f331de920ae8366af75b44060":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["9454a6510e2db155fb01faa5c049b06ece95fab9","e5e679b9c5f68f1f331de920ae8366af75b44060"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1291e4568eb7d9463d751627596ef14baf4c1603":[],"0f3cee3d20b0c786e6fca20539454262e29edcab":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e5e679b9c5f68f1f331de920ae8366af75b44060":["1291e4568eb7d9463d751627596ef14baf4c1603","0f3cee3d20b0c786e6fca20539454262e29edcab","f0b9507caf22f292ac0e5e59f62db4275adf4511","29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["29ef99d61cda9641b6250bf9567329a6e65f901d","e5e679b9c5f68f1f331de920ae8366af75b44060","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}