{"path":"solr/core/src/java/org/apache/solr/search/similarities/SchemaSimilarityFactory#init(SolrParams).mjava","commits":[{"id":"08970e5b8411182a29412c177eff67ec1110095b","date":1366640815,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/similarities/SchemaSimilarityFactory#init(SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/similarities/SchemaSimilarityFactory#inform(IndexSchema).mjava","sourceNew":"  @Override\n  public void init(SolrParams args) {\n    super.init(args);\n    similarity = new PerFieldSimilarityWrapper() {\n      @Override\n      public Similarity get(String name) {\n        FieldType fieldType = core.getLatestSchema().getFieldTypeNoEx(name);\n        if (fieldType == null) {\n          return defaultSimilarity;\n        } else {\n          Similarity similarity = fieldType.getSimilarity();\n          return similarity == null ? defaultSimilarity : similarity;\n        }\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public void inform(final IndexSchema schema) {\n    similarity = new PerFieldSimilarityWrapper() {\n      @Override\n      public Similarity get(String name) {\n        FieldType fieldType = schema.getFieldTypeNoEx(name);\n        if (fieldType == null) {\n          return defaultSimilarity;\n        } else {\n          Similarity similarity = fieldType.getSimilarity();\n          return similarity == null ? defaultSimilarity : similarity;\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f5b77484712d628ace0836cb9c88f9039f04b748","date":1448297449,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/similarities/SchemaSimilarityFactory#init(SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/similarities/SchemaSimilarityFactory#init(SolrParams).mjava","sourceNew":"  @Override\n  public void init(SolrParams args) {\n    defaultSimFromFieldType = args.get(INIT_OPT, null);\n    super.init(args);\n  }\n\n","sourceOld":"  @Override\n  public void init(SolrParams args) {\n    super.init(args);\n    similarity = new PerFieldSimilarityWrapper() {\n      @Override\n      public Similarity get(String name) {\n        FieldType fieldType = core.getLatestSchema().getFieldTypeNoEx(name);\n        if (fieldType == null) {\n          return defaultSimilarity;\n        } else {\n          Similarity similarity = fieldType.getSimilarity();\n          return similarity == null ? defaultSimilarity : similarity;\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f5b77484712d628ace0836cb9c88f9039f04b748":["08970e5b8411182a29412c177eff67ec1110095b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f5b77484712d628ace0836cb9c88f9039f04b748"],"08970e5b8411182a29412c177eff67ec1110095b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"f5b77484712d628ace0836cb9c88f9039f04b748":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["08970e5b8411182a29412c177eff67ec1110095b"],"08970e5b8411182a29412c177eff67ec1110095b":["f5b77484712d628ace0836cb9c88f9039f04b748"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}