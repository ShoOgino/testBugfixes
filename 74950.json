{"path":"src/java/org/apache/lucene/search/payloads/PayloadNearQuery.PayloadNearSpanScorer#setFreqCurrentDoc().mjava","commits":[{"id":"fa4f1b5e611afe6cb170951e0a9202ff95dc9156","date":1250976267,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/payloads/PayloadNearQuery.PayloadNearSpanScorer#setFreqCurrentDoc().mjava","pathOld":"src/java/org/apache/lucene/search/payloads/BoostingNearQuery.BoostingSpanScorer#setFreqCurrentDoc().mjava","sourceNew":"    //\n    protected boolean setFreqCurrentDoc() throws IOException {\n      Spans[] spansArr = new Spans[1];\n      spansArr[0] = spans;\n      payloadScore = 0;\n      payloadsSeen = 0;\n      getPayloads(spansArr);\n      return super.setFreqCurrentDoc();\n    }\n\n","sourceOld":"    //\n    protected boolean setFreqCurrentDoc() throws IOException {\n      Spans[] spansArr = new Spans[1];\n      spansArr[0] = spans;\n      payloadScore = 0;\n      payloadsSeen = 0;\n      getPayloads(spansArr);\n      return super.setFreqCurrentDoc();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9a421afb32184cc61e8326108325225d58dfde0","date":1255858611,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/payloads/PayloadNearQuery.PayloadNearSpanScorer#setFreqCurrentDoc().mjava","pathOld":"src/java/org/apache/lucene/search/payloads/PayloadNearQuery.PayloadNearSpanScorer#setFreqCurrentDoc().mjava","sourceNew":"    //\n    protected boolean setFreqCurrentDoc() throws IOException {\n      if (!more) {\n        return false;\n      }\n      Spans[] spansArr = new Spans[1];\n      spansArr[0] = spans;\n      payloadScore = 0;\n      payloadsSeen = 0;\n      getPayloads(spansArr);\n      return super.setFreqCurrentDoc();\n    }\n\n","sourceOld":"    //\n    protected boolean setFreqCurrentDoc() throws IOException {\n      Spans[] spansArr = new Spans[1];\n      spansArr[0] = spans;\n      payloadScore = 0;\n      payloadsSeen = 0;\n      getPayloads(spansArr);\n      return super.setFreqCurrentDoc();\n    }\n\n","bugFix":null,"bugIntro":["63962b8b453f75ca481172689753cdb3ca868d4c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/payloads/PayloadNearQuery.PayloadNearSpanScorer#setFreqCurrentDoc().mjava","pathOld":"src/java/org/apache/lucene/search/payloads/PayloadNearQuery.PayloadNearSpanScorer#setFreqCurrentDoc().mjava","sourceNew":"    //\n    @Override\n    protected boolean setFreqCurrentDoc() throws IOException {\n      if (!more) {\n        return false;\n      }\n      Spans[] spansArr = new Spans[1];\n      spansArr[0] = spans;\n      payloadScore = 0;\n      payloadsSeen = 0;\n      getPayloads(spansArr);\n      return super.setFreqCurrentDoc();\n    }\n\n","sourceOld":"    //\n    protected boolean setFreqCurrentDoc() throws IOException {\n      if (!more) {\n        return false;\n      }\n      Spans[] spansArr = new Spans[1];\n      spansArr[0] = spans;\n      payloadScore = 0;\n      payloadsSeen = 0;\n      getPayloads(spansArr);\n      return super.setFreqCurrentDoc();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/payloads/PayloadNearQuery.PayloadNearSpanScorer#setFreqCurrentDoc().mjava","pathOld":"src/java/org/apache/lucene/search/payloads/PayloadNearQuery.PayloadNearSpanScorer#setFreqCurrentDoc().mjava","sourceNew":"    //\n    @Override\n    protected boolean setFreqCurrentDoc() throws IOException {\n      if (!more) {\n        return false;\n      }\n      Spans[] spansArr = new Spans[1];\n      spansArr[0] = spans;\n      payloadScore = 0;\n      payloadsSeen = 0;\n      getPayloads(spansArr);\n      return super.setFreqCurrentDoc();\n    }\n\n","sourceOld":"    //\n    @Override\n    protected boolean setFreqCurrentDoc() throws IOException {\n      if (!more) {\n        return false;\n      }\n      Spans[] spansArr = new Spans[1];\n      spansArr[0] = spans;\n      payloadScore = 0;\n      payloadsSeen = 0;\n      getPayloads(spansArr);\n      return super.setFreqCurrentDoc();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"8a9e385641d717e641408d8fbbc62be8fc766357":["e9a421afb32184cc61e8326108325225d58dfde0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fa4f1b5e611afe6cb170951e0a9202ff95dc9156":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"],"e9a421afb32184cc61e8326108325225d58dfde0":["fa4f1b5e611afe6cb170951e0a9202ff95dc9156"]},"commit2Childs":{"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fa4f1b5e611afe6cb170951e0a9202ff95dc9156"],"fa4f1b5e611afe6cb170951e0a9202ff95dc9156":["e9a421afb32184cc61e8326108325225d58dfde0"],"e9a421afb32184cc61e8326108325225d58dfde0":["8a9e385641d717e641408d8fbbc62be8fc766357"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}