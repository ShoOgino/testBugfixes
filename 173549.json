{"path":"lucene/queries/src/java/org/apache/lucene/queries/TermFilter#getDocIdSet(LeafReaderContext,Bits).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/TermFilter#getDocIdSet(LeafReaderContext,Bits).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(LeafReaderContext context, final Bits acceptDocs) throws IOException {\n    Terms terms = context.reader().terms(term.field());\n    if (terms == null) {\n      return null;\n    }\n\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(term.bytes())) {\n      return null;\n    }\n    return new DocIdSet() {\n      @Override\n      public DocIdSetIterator iterator() throws IOException {\n        return termsEnum.docs(acceptDocs, null, DocsEnum.FLAG_NONE);\n      }\n\n      @Override\n      public long ramBytesUsed() {\n        return 0L;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/TermFilter#getDocIdSet(LeafReaderContext,Bits).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/TermFilter#getDocIdSet(LeafReaderContext,Bits).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(LeafReaderContext context, final Bits acceptDocs) throws IOException {\n    Terms terms = context.reader().terms(term.field());\n    if (terms == null) {\n      return null;\n    }\n\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(term.bytes())) {\n      return null;\n    }\n    return new DocIdSet() {\n      @Override\n      public DocIdSetIterator iterator() throws IOException {\n        return termsEnum.postings(acceptDocs, null, PostingsEnum.FLAG_NONE);\n      }\n\n      @Override\n      public long ramBytesUsed() {\n        return 0L;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(LeafReaderContext context, final Bits acceptDocs) throws IOException {\n    Terms terms = context.reader().terms(term.field());\n    if (terms == null) {\n      return null;\n    }\n\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(term.bytes())) {\n      return null;\n    }\n    return new DocIdSet() {\n      @Override\n      public DocIdSetIterator iterator() throws IOException {\n        return termsEnum.docs(acceptDocs, null, DocsEnum.FLAG_NONE);\n      }\n\n      @Override\n      public long ramBytesUsed() {\n        return 0L;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"589f939c50213ffd758060ded12e334c85ef6a87","date":1423239999,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/TermFilter#getDocIdSet(LeafReaderContext,Bits).mjava","sourceNew":null,"sourceOld":"  @Override\n  public DocIdSet getDocIdSet(LeafReaderContext context, final Bits acceptDocs) throws IOException {\n    Terms terms = context.reader().terms(term.field());\n    if (terms == null) {\n      return null;\n    }\n\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(term.bytes())) {\n      return null;\n    }\n    return new DocIdSet() {\n      @Override\n      public DocIdSetIterator iterator() throws IOException {\n        return termsEnum.postings(acceptDocs, null, PostingsEnum.FLAG_NONE);\n      }\n\n      @Override\n      public long ramBytesUsed() {\n        return 0L;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"589f939c50213ffd758060ded12e334c85ef6a87":["51f5280f31484820499077f41fcdfe92d527d9dc"],"51f5280f31484820499077f41fcdfe92d527d9dc":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["589f939c50213ffd758060ded12e334c85ef6a87"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"589f939c50213ffd758060ded12e334c85ef6a87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"51f5280f31484820499077f41fcdfe92d527d9dc":["589f939c50213ffd758060ded12e334c85ef6a87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["51f5280f31484820499077f41fcdfe92d527d9dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}