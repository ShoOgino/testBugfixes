{"path":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,IndexOptions,ValueType).mjava","commits":[{"id":"2afd23a6f1242190c3409d8d81d5c5912d607fc9","date":1310477482,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,IndexOptions,ValueType).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean,ValueType).mjava","sourceNew":"  /*\n   * NOTE: if you call this method from a public method make sure you check if we are modifiable and throw an exception otherwise\n   */\n  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, IndexOptions indexOptions, ValueType docValuesType) {\n    // don't check modifiable here since we use that to initially build up FIs\n    if (globalFieldNumbers != null) {\n      globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    } \n    final FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                       storeOffsetWithTermVector, omitNorms, storePayloads, indexOptions, docValuesType);\n    putInternal(fi);\n    return fi;\n  }\n\n","sourceOld":"  /*\n   * NOTE: if you call this method from a public method make sure you check if we are modifiable and throw an exception otherwise\n   */\n  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions, ValueType docValuesType) {\n    // don't check modifiable here since we use that to initially build up FIs\n    if (globalFieldNumbers != null) {\n      globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    } \n    final FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                       storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions, docValuesType);\n    putInternal(fi);\n    return fi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","date":1323449025,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,IndexOptions,DocValues.Type).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,IndexOptions,ValueType).mjava","sourceNew":"  /*\n   * NOTE: if you call this method from a public method make sure you check if we are modifiable and throw an exception otherwise\n   */\n  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, IndexOptions indexOptions, DocValues.Type docValuesType) {\n    // don't check modifiable here since we use that to initially build up FIs\n    if (globalFieldNumbers != null) {\n      globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    } \n    final FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                       storeOffsetWithTermVector, omitNorms, storePayloads, indexOptions, docValuesType);\n    putInternal(fi);\n    return fi;\n  }\n\n","sourceOld":"  /*\n   * NOTE: if you call this method from a public method make sure you check if we are modifiable and throw an exception otherwise\n   */\n  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, IndexOptions indexOptions, ValueType docValuesType) {\n    // don't check modifiable here since we use that to initially build up FIs\n    if (globalFieldNumbers != null) {\n      globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    } \n    final FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                       storeOffsetWithTermVector, omitNorms, storePayloads, indexOptions, docValuesType);\n    putInternal(fi);\n    return fi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,IndexOptions,DocValues.Type).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,IndexOptions,ValueType).mjava","sourceNew":"  /*\n   * NOTE: if you call this method from a public method make sure you check if we are modifiable and throw an exception otherwise\n   */\n  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, IndexOptions indexOptions, DocValues.Type docValuesType) {\n    // don't check modifiable here since we use that to initially build up FIs\n    if (globalFieldNumbers != null) {\n      globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    } \n    final FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                       storeOffsetWithTermVector, omitNorms, storePayloads, indexOptions, docValuesType);\n    putInternal(fi);\n    return fi;\n  }\n\n","sourceOld":"  /*\n   * NOTE: if you call this method from a public method make sure you check if we are modifiable and throw an exception otherwise\n   */\n  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, IndexOptions indexOptions, ValueType docValuesType) {\n    // don't check modifiable here since we use that to initially build up FIs\n    if (globalFieldNumbers != null) {\n      globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    } \n    final FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                       storeOffsetWithTermVector, omitNorms, storePayloads, indexOptions, docValuesType);\n    putInternal(fi);\n    return fi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["2afd23a6f1242190c3409d8d81d5c5912d607fc9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["2afd23a6f1242190c3409d8d81d5c5912d607fc9","1e59c344a45b9502f40ec44f5fe4e20ed2291dbe"]},"commit2Childs":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","d638301ad1cfcae567b681b893bc8781f0ee48a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2afd23a6f1242190c3409d8d81d5c5912d607fc9"],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}