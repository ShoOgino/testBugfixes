{"path":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionValueSource#rewrite(IndexSearcher).mjava","commits":[{"id":"a38488a55cc52553c9792da5044dd31b15128cd8","date":1510755769,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionValueSource#rewrite(IndexSearcher).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DoubleValuesSource rewrite(IndexSearcher searcher) throws IOException {\n    boolean changed = false;\n    DoubleValuesSource[] rewritten = new DoubleValuesSource[variables.length];\n    for (int i = 0; i < variables.length; i++) {\n      rewritten[i] = variables[i].rewrite(searcher);\n      changed |= (rewritten[i] == variables[i]);\n    }\n    if (changed) {\n      return new ExpressionValueSource(variables, expression, needsScores);\n    }\n    return this;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["a3f7942df1679ad0e04203ab9b3c21e590299a84"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"62f3efc82b1ead830448bb27e2af9f89417401ea","date":1513619223,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionValueSource#rewrite(IndexSearcher).mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionValueSource#rewrite(IndexSearcher).mjava","sourceNew":"  @Override\n  public DoubleValuesSource rewrite(IndexSearcher searcher) throws IOException {\n    boolean changed = false;\n    DoubleValuesSource[] rewritten = new DoubleValuesSource[variables.length];\n    for (int i = 0; i < variables.length; i++) {\n      rewritten[i] = variables[i].rewrite(searcher);\n      changed |= (rewritten[i] == variables[i]);\n    }\n    if (changed) {\n      return new ExpressionValueSource(rewritten, expression, needsScores);\n    }\n    return this;\n  }\n\n","sourceOld":"  @Override\n  public DoubleValuesSource rewrite(IndexSearcher searcher) throws IOException {\n    boolean changed = false;\n    DoubleValuesSource[] rewritten = new DoubleValuesSource[variables.length];\n    for (int i = 0; i < variables.length; i++) {\n      rewritten[i] = variables[i].rewrite(searcher);\n      changed |= (rewritten[i] == variables[i]);\n    }\n    if (changed) {\n      return new ExpressionValueSource(variables, expression, needsScores);\n    }\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a3f7942df1679ad0e04203ab9b3c21e590299a84","date":1588864690,"type":3,"author":"Dmitry Emets","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionValueSource#rewrite(IndexSearcher).mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionValueSource#rewrite(IndexSearcher).mjava","sourceNew":"  @Override\n  public DoubleValuesSource rewrite(IndexSearcher searcher) throws IOException {\n    boolean changed = false;\n    DoubleValuesSource[] rewritten = new DoubleValuesSource[variables.length];\n    for (int i = 0; i < variables.length; i++) {\n      rewritten[i] = variables[i].rewrite(searcher);\n      changed |= (rewritten[i] != variables[i]);\n    }\n    if (changed) {\n      return new ExpressionValueSource(rewritten, expression, needsScores);\n    }\n    return this;\n  }\n\n","sourceOld":"  @Override\n  public DoubleValuesSource rewrite(IndexSearcher searcher) throws IOException {\n    boolean changed = false;\n    DoubleValuesSource[] rewritten = new DoubleValuesSource[variables.length];\n    for (int i = 0; i < variables.length; i++) {\n      rewritten[i] = variables[i].rewrite(searcher);\n      changed |= (rewritten[i] == variables[i]);\n    }\n    if (changed) {\n      return new ExpressionValueSource(rewritten, expression, needsScores);\n    }\n    return this;\n  }\n\n","bugFix":["a38488a55cc52553c9792da5044dd31b15128cd8"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a3f7942df1679ad0e04203ab9b3c21e590299a84":["62f3efc82b1ead830448bb27e2af9f89417401ea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"62f3efc82b1ead830448bb27e2af9f89417401ea":["a38488a55cc52553c9792da5044dd31b15128cd8"],"a38488a55cc52553c9792da5044dd31b15128cd8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a3f7942df1679ad0e04203ab9b3c21e590299a84"]},"commit2Childs":{"a3f7942df1679ad0e04203ab9b3c21e590299a84":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a38488a55cc52553c9792da5044dd31b15128cd8"],"62f3efc82b1ead830448bb27e2af9f89417401ea":["a3f7942df1679ad0e04203ab9b3c21e590299a84"],"a38488a55cc52553c9792da5044dd31b15128cd8":["62f3efc82b1ead830448bb27e2af9f89417401ea"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}