{"path":"solr/core/src/java/org/apache/solr/core/AbstractSolrEventListener#addEventParms(SolrIndexSearcher,NamedList).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/AbstractSolrEventListener#addEventParms(SolrIndexSearcher,NamedList).mjava","pathOld":"solr/src/java/org/apache/solr/core/AbstractSolrEventListener#addEventParms(SolrIndexSearcher,NamedList).mjava","sourceNew":"  /**\n   * Add the {@link org.apache.solr.common.params.EventParams#EVENT} with either the {@link org.apache.solr.common.params.EventParams#NEW_SEARCHER}\n   * or {@link org.apache.solr.common.params.EventParams#FIRST_SEARCHER} values depending on the value of currentSearcher.\n   * <p/>\n   * Makes a copy of NamedList and then adds the parameters.\n   *\n   *\n   * @param currentSearcher If null, add FIRST_SEARCHER, otherwise NEW_SEARCHER\n   * @param nlst The named list to add the EVENT value to\n   */\n  protected NamedList addEventParms(SolrIndexSearcher currentSearcher, NamedList nlst) {\n    NamedList result = new NamedList();\n    result.addAll(nlst);\n    if (currentSearcher != null) {\n      result.add(EventParams.EVENT, EventParams.NEW_SEARCHER);\n    } else {\n      result.add(EventParams.EVENT, EventParams.FIRST_SEARCHER);\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Add the {@link org.apache.solr.common.params.EventParams#EVENT} with either the {@link org.apache.solr.common.params.EventParams#NEW_SEARCHER}\n   * or {@link org.apache.solr.common.params.EventParams#FIRST_SEARCHER} values depending on the value of currentSearcher.\n   * <p/>\n   * Makes a copy of NamedList and then adds the parameters.\n   *\n   *\n   * @param currentSearcher If null, add FIRST_SEARCHER, otherwise NEW_SEARCHER\n   * @param nlst The named list to add the EVENT value to\n   */\n  protected NamedList addEventParms(SolrIndexSearcher currentSearcher, NamedList nlst) {\n    NamedList result = new NamedList();\n    result.addAll(nlst);\n    if (currentSearcher != null) {\n      result.add(EventParams.EVENT, EventParams.NEW_SEARCHER);\n    } else {\n      result.add(EventParams.EVENT, EventParams.FIRST_SEARCHER);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/AbstractSolrEventListener#addEventParms(SolrIndexSearcher,NamedList).mjava","pathOld":"solr/src/java/org/apache/solr/core/AbstractSolrEventListener#addEventParms(SolrIndexSearcher,NamedList).mjava","sourceNew":"  /**\n   * Add the {@link org.apache.solr.common.params.EventParams#EVENT} with either the {@link org.apache.solr.common.params.EventParams#NEW_SEARCHER}\n   * or {@link org.apache.solr.common.params.EventParams#FIRST_SEARCHER} values depending on the value of currentSearcher.\n   * <p/>\n   * Makes a copy of NamedList and then adds the parameters.\n   *\n   *\n   * @param currentSearcher If null, add FIRST_SEARCHER, otherwise NEW_SEARCHER\n   * @param nlst The named list to add the EVENT value to\n   */\n  protected NamedList addEventParms(SolrIndexSearcher currentSearcher, NamedList nlst) {\n    NamedList result = new NamedList();\n    result.addAll(nlst);\n    if (currentSearcher != null) {\n      result.add(EventParams.EVENT, EventParams.NEW_SEARCHER);\n    } else {\n      result.add(EventParams.EVENT, EventParams.FIRST_SEARCHER);\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Add the {@link org.apache.solr.common.params.EventParams#EVENT} with either the {@link org.apache.solr.common.params.EventParams#NEW_SEARCHER}\n   * or {@link org.apache.solr.common.params.EventParams#FIRST_SEARCHER} values depending on the value of currentSearcher.\n   * <p/>\n   * Makes a copy of NamedList and then adds the parameters.\n   *\n   *\n   * @param currentSearcher If null, add FIRST_SEARCHER, otherwise NEW_SEARCHER\n   * @param nlst The named list to add the EVENT value to\n   */\n  protected NamedList addEventParms(SolrIndexSearcher currentSearcher, NamedList nlst) {\n    NamedList result = new NamedList();\n    result.addAll(nlst);\n    if (currentSearcher != null) {\n      result.add(EventParams.EVENT, EventParams.NEW_SEARCHER);\n    } else {\n      result.add(EventParams.EVENT, EventParams.FIRST_SEARCHER);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/AbstractSolrEventListener#addEventParms(SolrIndexSearcher,NamedList).mjava","pathOld":"solr/src/java/org/apache/solr/core/AbstractSolrEventListener#addEventParms(SolrIndexSearcher,NamedList).mjava","sourceNew":"  /**\n   * Add the {@link org.apache.solr.common.params.EventParams#EVENT} with either the {@link org.apache.solr.common.params.EventParams#NEW_SEARCHER}\n   * or {@link org.apache.solr.common.params.EventParams#FIRST_SEARCHER} values depending on the value of currentSearcher.\n   * <p/>\n   * Makes a copy of NamedList and then adds the parameters.\n   *\n   *\n   * @param currentSearcher If null, add FIRST_SEARCHER, otherwise NEW_SEARCHER\n   * @param nlst The named list to add the EVENT value to\n   */\n  protected NamedList addEventParms(SolrIndexSearcher currentSearcher, NamedList nlst) {\n    NamedList result = new NamedList();\n    result.addAll(nlst);\n    if (currentSearcher != null) {\n      result.add(EventParams.EVENT, EventParams.NEW_SEARCHER);\n    } else {\n      result.add(EventParams.EVENT, EventParams.FIRST_SEARCHER);\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Add the {@link org.apache.solr.common.params.EventParams#EVENT} with either the {@link org.apache.solr.common.params.EventParams#NEW_SEARCHER}\n   * or {@link org.apache.solr.common.params.EventParams#FIRST_SEARCHER} values depending on the value of currentSearcher.\n   * <p/>\n   * Makes a copy of NamedList and then adds the parameters.\n   *\n   *\n   * @param currentSearcher If null, add FIRST_SEARCHER, otherwise NEW_SEARCHER\n   * @param nlst The named list to add the EVENT value to\n   */\n  protected NamedList addEventParms(SolrIndexSearcher currentSearcher, NamedList nlst) {\n    NamedList result = new NamedList();\n    result.addAll(nlst);\n    if (currentSearcher != null) {\n      result.add(EventParams.EVENT, EventParams.NEW_SEARCHER);\n    } else {\n      result.add(EventParams.EVENT, EventParams.FIRST_SEARCHER);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e210ae1e604402eb4eeff2a52e56d189cd4f2f1","date":1423508552,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/AbstractSolrEventListener#addEventParms(SolrIndexSearcher,NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/AbstractSolrEventListener#addEventParms(SolrIndexSearcher,NamedList).mjava","sourceNew":"  /**\n   * Add the {@link org.apache.solr.common.params.EventParams#EVENT} with either the {@link org.apache.solr.common.params.EventParams#NEW_SEARCHER}\n   * or {@link org.apache.solr.common.params.EventParams#FIRST_SEARCHER} values depending on the value of currentSearcher.\n   * <p>\n   * Makes a copy of NamedList and then adds the parameters.\n   *\n   *\n   * @param currentSearcher If null, add FIRST_SEARCHER, otherwise NEW_SEARCHER\n   * @param nlst The named list to add the EVENT value to\n   */\n  protected NamedList addEventParms(SolrIndexSearcher currentSearcher, NamedList nlst) {\n    NamedList result = new NamedList();\n    result.addAll(nlst);\n    if (currentSearcher != null) {\n      result.add(EventParams.EVENT, EventParams.NEW_SEARCHER);\n    } else {\n      result.add(EventParams.EVENT, EventParams.FIRST_SEARCHER);\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Add the {@link org.apache.solr.common.params.EventParams#EVENT} with either the {@link org.apache.solr.common.params.EventParams#NEW_SEARCHER}\n   * or {@link org.apache.solr.common.params.EventParams#FIRST_SEARCHER} values depending on the value of currentSearcher.\n   * <p/>\n   * Makes a copy of NamedList and then adds the parameters.\n   *\n   *\n   * @param currentSearcher If null, add FIRST_SEARCHER, otherwise NEW_SEARCHER\n   * @param nlst The named list to add the EVENT value to\n   */\n  protected NamedList addEventParms(SolrIndexSearcher currentSearcher, NamedList nlst) {\n    NamedList result = new NamedList();\n    result.addAll(nlst);\n    if (currentSearcher != null) {\n      result.add(EventParams.EVENT, EventParams.NEW_SEARCHER);\n    } else {\n      result.add(EventParams.EVENT, EventParams.FIRST_SEARCHER);\n    }\n    return result;\n  }\n\n","bugFix":["c8c77019d92a937be281e1f8b72bf54b3ac89420"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"75237075d8425856bf4bbf52a6be4f9162b8187d","date":1591103291,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/AbstractSolrEventListener#addEventParms(SolrIndexSearcher,NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/AbstractSolrEventListener#addEventParms(SolrIndexSearcher,NamedList).mjava","sourceNew":"  /**\n   * Add the {@link org.apache.solr.common.params.EventParams#EVENT} with either the {@link org.apache.solr.common.params.EventParams#NEW_SEARCHER}\n   * or {@link org.apache.solr.common.params.EventParams#FIRST_SEARCHER} values depending on the value of currentSearcher.\n   * <p>\n   * Makes a copy of NamedList and then adds the parameters.\n   *\n   *\n   * @param currentSearcher If null, add FIRST_SEARCHER, otherwise NEW_SEARCHER\n   * @param nlst The named list to add the EVENT value to\n   */\n  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  protected NamedList addEventParms(SolrIndexSearcher currentSearcher, NamedList nlst) {\n    NamedList result = new NamedList();\n    result.addAll(nlst);\n    if (currentSearcher != null) {\n      result.add(EventParams.EVENT, EventParams.NEW_SEARCHER);\n    } else {\n      result.add(EventParams.EVENT, EventParams.FIRST_SEARCHER);\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Add the {@link org.apache.solr.common.params.EventParams#EVENT} with either the {@link org.apache.solr.common.params.EventParams#NEW_SEARCHER}\n   * or {@link org.apache.solr.common.params.EventParams#FIRST_SEARCHER} values depending on the value of currentSearcher.\n   * <p>\n   * Makes a copy of NamedList and then adds the parameters.\n   *\n   *\n   * @param currentSearcher If null, add FIRST_SEARCHER, otherwise NEW_SEARCHER\n   * @param nlst The named list to add the EVENT value to\n   */\n  protected NamedList addEventParms(SolrIndexSearcher currentSearcher, NamedList nlst) {\n    NamedList result = new NamedList();\n    result.addAll(nlst);\n    if (currentSearcher != null) {\n      result.add(EventParams.EVENT, EventParams.NEW_SEARCHER);\n    } else {\n      result.add(EventParams.EVENT, EventParams.FIRST_SEARCHER);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"75237075d8425856bf4bbf52a6be4f9162b8187d":["1e210ae1e604402eb4eeff2a52e56d189cd4f2f1"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1e210ae1e604402eb4eeff2a52e56d189cd4f2f1":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["75237075d8425856bf4bbf52a6be4f9162b8187d"]},"commit2Childs":{"75237075d8425856bf4bbf52a6be4f9162b8187d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["1e210ae1e604402eb4eeff2a52e56d189cd4f2f1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"1e210ae1e604402eb4eeff2a52e56d189cd4f2f1":["75237075d8425856bf4bbf52a6be4f9162b8187d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}