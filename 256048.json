{"path":"src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#spanNearQuery(String,String).mjava","commits":[{"id":"e9a421afb32184cc61e8326108325225d58dfde0","date":1255858611,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#spanNearQuery(String,String).mjava","pathOld":"/dev/null","sourceNew":"  private SpanNearQuery spanNearQuery(String fieldName, String words) {\n    String[] wordList = words.split(\"[\\\\s]+\");\n    SpanQuery clauses[] = new SpanQuery[wordList.length];\n    for (int i=0;i<clauses.length;i++) {\n      clauses[i] = new PayloadTermQuery(new Term(fieldName, wordList[i]), new AveragePayloadFunction());  \n    } \n    return new SpanNearQuery(clauses, 10000, false);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#spanNearQuery(String,String).mjava","pathOld":"src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#spanNearQuery(String,String).mjava","sourceNew":"  private SpanNearQuery spanNearQuery(String fieldName, String words) {\n    String[] wordList = words.split(\"[\\\\s]+\");\n    SpanQuery clauses[] = new SpanQuery[wordList.length];\n    for (int i=0;i<clauses.length;i++) {\n      clauses[i] = new PayloadTermQuery(new Term(fieldName, wordList[i]), new AveragePayloadFunction());  \n    } \n    return new SpanNearQuery(clauses, 10000, false);\n  }\n\n","sourceOld":"  private SpanNearQuery spanNearQuery(String fieldName, String words) {\n    String[] wordList = words.split(\"[\\\\s]+\");\n    SpanQuery clauses[] = new SpanQuery[wordList.length];\n    for (int i=0;i<clauses.length;i++) {\n      clauses[i] = new PayloadTermQuery(new Term(fieldName, wordList[i]), new AveragePayloadFunction());  \n    } \n    return new SpanNearQuery(clauses, 10000, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["e9a421afb32184cc61e8326108325225d58dfde0"],"e9a421afb32184cc61e8326108325225d58dfde0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9a421afb32184cc61e8326108325225d58dfde0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e9a421afb32184cc61e8326108325225d58dfde0":["9454a6510e2db155fb01faa5c049b06ece95fab9"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}