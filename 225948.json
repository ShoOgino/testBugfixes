{"path":"solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler#getIndexHeapUsed(DirectoryReader).mjava","commits":[{"id":"7446b7cf64a128aae9def0a9beb00ed98b1c0569","date":1379259128,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler#getIndexHeapUsed(DirectoryReader).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the sum of RAM bytes used by each segment */\n  private static long getIndexHeapUsed(DirectoryReader reader) {\n    long indexHeapRamBytesUsed = 0;\n    for(AtomicReaderContext atomicReaderContext : reader.leaves()) {\n      AtomicReader atomicReader = atomicReaderContext.reader();\n      if (atomicReader instanceof SegmentReader) {\n        indexHeapRamBytesUsed += ((SegmentReader) atomicReader).ramBytesUsed();\n      } else {\n        // Not supported for any reader that is not a SegmentReader\n        return -1;\n      }\n    }\n    return indexHeapRamBytesUsed;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51a9d4b7a551de3290b4c5dd2c60db4993160e57","date":1379263137,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler#getIndexHeapUsed(DirectoryReader).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the sum of RAM bytes used by each segment */\n  private static long getIndexHeapUsed(DirectoryReader reader) {\n    long indexHeapRamBytesUsed = 0;\n    for(AtomicReaderContext atomicReaderContext : reader.leaves()) {\n      AtomicReader atomicReader = atomicReaderContext.reader();\n      if (atomicReader instanceof SegmentReader) {\n        indexHeapRamBytesUsed += ((SegmentReader) atomicReader).ramBytesUsed();\n      } else {\n        // Not supported for any reader that is not a SegmentReader\n        return -1;\n      }\n    }\n    return indexHeapRamBytesUsed;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler#getIndexHeapUsed(DirectoryReader).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler#getIndexHeapUsed(DirectoryReader).mjava","sourceNew":"  /** Returns the sum of RAM bytes used by each segment */\n  private static long getIndexHeapUsed(DirectoryReader reader) {\n    long indexHeapRamBytesUsed = 0;\n    for(LeafReaderContext leafReaderContext : reader.leaves()) {\n      LeafReader leafReader = leafReaderContext.reader();\n      if (leafReader instanceof SegmentReader) {\n        indexHeapRamBytesUsed += ((SegmentReader) leafReader).ramBytesUsed();\n      } else {\n        // Not supported for any reader that is not a SegmentReader\n        return -1;\n      }\n    }\n    return indexHeapRamBytesUsed;\n  }\n\n","sourceOld":"  /** Returns the sum of RAM bytes used by each segment */\n  private static long getIndexHeapUsed(DirectoryReader reader) {\n    long indexHeapRamBytesUsed = 0;\n    for(AtomicReaderContext atomicReaderContext : reader.leaves()) {\n      AtomicReader atomicReader = atomicReaderContext.reader();\n      if (atomicReader instanceof SegmentReader) {\n        indexHeapRamBytesUsed += ((SegmentReader) atomicReader).ramBytesUsed();\n      } else {\n        // Not supported for any reader that is not a SegmentReader\n        return -1;\n      }\n    }\n    return indexHeapRamBytesUsed;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee4883d944766f23a7d88ddbeca1c09acdc7a9a8","date":1589565769,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler#getIndexHeapUsed(DirectoryReader).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler#getIndexHeapUsed(DirectoryReader).mjava","sourceNew":"  /** Returns the sum of RAM bytes used by each segment */\n  private static long getIndexHeapUsed(DirectoryReader reader) {\n    return reader.leaves().stream()\n        .map(LeafReaderContext::reader)\n        .map(FilterLeafReader::unwrap)\n        .map(leafReader -> {\n          if (leafReader instanceof Accountable) {\n            return ((Accountable) leafReader).ramBytesUsed();\n          } else {\n            return -1L; // unsupported\n          }\n        })\n        .mapToLong(Long::longValue)\n        .reduce(0, (left, right) -> left == -1 || right == -1 ? -1 : left + right);\n    // if any leaves are unsupported (-1), we ultimately return -1.\n  }\n\n","sourceOld":"  /** Returns the sum of RAM bytes used by each segment */\n  private static long getIndexHeapUsed(DirectoryReader reader) {\n    long indexHeapRamBytesUsed = 0;\n    for(LeafReaderContext leafReaderContext : reader.leaves()) {\n      LeafReader leafReader = leafReaderContext.reader();\n      if (leafReader instanceof SegmentReader) {\n        indexHeapRamBytesUsed += ((SegmentReader) leafReader).ramBytesUsed();\n      } else {\n        // Not supported for any reader that is not a SegmentReader\n        return -1;\n      }\n    }\n    return indexHeapRamBytesUsed;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"51a9d4b7a551de3290b4c5dd2c60db4993160e57":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7446b7cf64a128aae9def0a9beb00ed98b1c0569"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ee4883d944766f23a7d88ddbeca1c09acdc7a9a8":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"7446b7cf64a128aae9def0a9beb00ed98b1c0569":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["7446b7cf64a128aae9def0a9beb00ed98b1c0569"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ee4883d944766f23a7d88ddbeca1c09acdc7a9a8"]},"commit2Childs":{"51a9d4b7a551de3290b4c5dd2c60db4993160e57":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["51a9d4b7a551de3290b4c5dd2c60db4993160e57","7446b7cf64a128aae9def0a9beb00ed98b1c0569"],"ee4883d944766f23a7d88ddbeca1c09acdc7a9a8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7446b7cf64a128aae9def0a9beb00ed98b1c0569":["51a9d4b7a551de3290b4c5dd2c60db4993160e57","c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["ee4883d944766f23a7d88ddbeca1c09acdc7a9a8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["51a9d4b7a551de3290b4c5dd2c60db4993160e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}