{"path":"lucene/facet/src/test/org/apache/lucene/facet/search/TestStandardFacetsAccumulator#indexTwoDocs(IndexWriter,FacetFields,boolean).mjava","commits":[{"id":"42f51b3ab4258ff4623227b0db011b8bb83db5c7","date":1358164991,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/TestStandardFacetsAccumulator#indexTwoDocs(IndexWriter,FacetFields,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private void indexTwoDocs(IndexWriter indexWriter, FacetFields facetFields, boolean withContent) throws Exception {\n    for (int i = 0; i < 2; i++) {\n      Document doc = new Document();\n      if (withContent) {\n        doc.add(new StringField(\"f\", \"a\", Store.NO));\n      }\n      if (facetFields != null) {\n        facetFields.addFields(doc, Collections.singletonList(new CategoryPath(\"A\", Integer.toString(i))));\n      }\n      indexWriter.addDocument(doc);\n    }\n    \n    indexWriter.commit();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8917bfede3b4ca30f4305c1e391e9218959cd723","date":1358189662,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/TestStandardFacetsAccumulator#indexTwoDocs(IndexWriter,FacetFields,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private void indexTwoDocs(IndexWriter indexWriter, FacetFields facetFields, boolean withContent) throws Exception {\n    for (int i = 0; i < 2; i++) {\n      Document doc = new Document();\n      if (withContent) {\n        doc.add(new StringField(\"f\", \"a\", Store.NO));\n      }\n      if (facetFields != null) {\n        facetFields.addFields(doc, Collections.singletonList(new CategoryPath(\"A\", Integer.toString(i))));\n      }\n      indexWriter.addDocument(doc);\n    }\n    \n    indexWriter.commit();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/TestStandardFacetsAccumulator#indexTwoDocs(IndexWriter,FacetFields,boolean).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/TestStandardFacetsAccumulator#indexTwoDocs(IndexWriter,FacetFields,boolean).mjava","sourceNew":"  private void indexTwoDocs(IndexWriter indexWriter, FacetFields facetFields, boolean withContent) throws Exception {\n    for (int i = 0; i < 2; i++) {\n      Document doc = new Document();\n      if (withContent) {\n        doc.add(new StringField(\"f\", \"a\", Store.NO));\n      }\n      if (facetFields != null) {\n        facetFields.addFields(doc, Collections.singletonList(new FacetLabel(\"A\", Integer.toString(i))));\n      }\n      indexWriter.addDocument(doc);\n    }\n    \n    indexWriter.commit();\n  }\n\n","sourceOld":"  private void indexTwoDocs(IndexWriter indexWriter, FacetFields facetFields, boolean withContent) throws Exception {\n    for (int i = 0; i < 2; i++) {\n      Document doc = new Document();\n      if (withContent) {\n        doc.add(new StringField(\"f\", \"a\", Store.NO));\n      }\n      if (facetFields != null) {\n        facetFields.addFields(doc, Collections.singletonList(new CategoryPath(\"A\", Integer.toString(i))));\n      }\n      indexWriter.addDocument(doc);\n    }\n    \n    indexWriter.commit();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f01616d06510fc630b6ef0ec324bdebc2fc49b3c","date":1385331328,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/TestStandardFacetsAccumulator#indexTwoDocs(IndexWriter,FacetFields,boolean).mjava","sourceNew":null,"sourceOld":"  private void indexTwoDocs(IndexWriter indexWriter, FacetFields facetFields, boolean withContent) throws Exception {\n    for (int i = 0; i < 2; i++) {\n      Document doc = new Document();\n      if (withContent) {\n        doc.add(new StringField(\"f\", \"a\", Store.NO));\n      }\n      if (facetFields != null) {\n        facetFields.addFields(doc, Collections.singletonList(new FacetLabel(\"A\", Integer.toString(i))));\n      }\n      indexWriter.addDocument(doc);\n    }\n    \n    indexWriter.commit();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/TestStandardFacetsAccumulator#indexTwoDocs(IndexWriter,FacetFields,boolean).mjava","sourceNew":null,"sourceOld":"  private void indexTwoDocs(IndexWriter indexWriter, FacetFields facetFields, boolean withContent) throws Exception {\n    for (int i = 0; i < 2; i++) {\n      Document doc = new Document();\n      if (withContent) {\n        doc.add(new StringField(\"f\", \"a\", Store.NO));\n      }\n      if (facetFields != null) {\n        facetFields.addFields(doc, Collections.singletonList(new CategoryPath(\"A\", Integer.toString(i))));\n      }\n      indexWriter.addDocument(doc);\n    }\n    \n    indexWriter.commit();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"42f51b3ab4258ff4623227b0db011b8bb83db5c7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8917bfede3b4ca30f4305c1e391e9218959cd723":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","42f51b3ab4258ff4623227b0db011b8bb83db5c7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["42f51b3ab4258ff4623227b0db011b8bb83db5c7","f01616d06510fc630b6ef0ec324bdebc2fc49b3c"],"f01616d06510fc630b6ef0ec324bdebc2fc49b3c":["c190847801a50f4dd20fd639bdc29b54ea3b288b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["42f51b3ab4258ff4623227b0db011b8bb83db5c7"]},"commit2Childs":{"42f51b3ab4258ff4623227b0db011b8bb83db5c7":["8917bfede3b4ca30f4305c1e391e9218959cd723","3cc728b07df73b197e6d940d27f9b08b63918f13","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"8917bfede3b4ca30f4305c1e391e9218959cd723":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["42f51b3ab4258ff4623227b0db011b8bb83db5c7","8917bfede3b4ca30f4305c1e391e9218959cd723"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f01616d06510fc630b6ef0ec324bdebc2fc49b3c":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["f01616d06510fc630b6ef0ec324bdebc2fc49b3c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8917bfede3b4ca30f4305c1e391e9218959cd723","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}