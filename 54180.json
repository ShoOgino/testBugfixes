{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause.Condition#writeMap(EntryWriter).mjava","commits":[{"id":"9837f40c922407d857991971de6def18eda0857b","date":1529994497,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause.Condition#writeMap(EntryWriter).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void writeMap(EntryWriter ew) throws IOException {\n      String value = op.wrap(val);\n      if (computationType != null) value = computationType.wrap(value);\n      ew.put(name, value);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":0,"author":"Michael Braun","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause.Condition#writeMap(EntryWriter).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void writeMap(EntryWriter ew) throws IOException {\n      String value = op.wrap(val);\n      if (computationType != null) value = computationType.wrap(value);\n      ew.put(name, value);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"78231225260fb5b3bf9920f203d71477d5501c65","date":1531726165,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause.Condition#writeMap(EntryWriter).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause.Condition#writeMap(EntryWriter).mjava","sourceNew":"    @Override\n    public void writeMap(EntryWriter ew) throws IOException {\n      String value = op.wrap(val);\n      if (computedType != null) value = computedType.wrap(value);\n      ew.put(name, value);\n    }\n\n","sourceOld":"    @Override\n    public void writeMap(EntryWriter ew) throws IOException {\n      String value = op.wrap(val);\n      if (computationType != null) value = computationType.wrap(value);\n      ew.put(name, value);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a10a24d2afdf00bbe1013706b80c989315772dc9","date":1531726431,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause.Condition#writeMap(EntryWriter).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause.Condition#writeMap(EntryWriter).mjava","sourceNew":"    @Override\n    public void writeMap(EntryWriter ew) throws IOException {\n      String value = op.wrap(val);\n      if (computationType != null) value = computationType.wrap(value);\n      ew.put(name, value);\n    }\n\n","sourceOld":"    @Override\n    public void writeMap(EntryWriter ew) throws IOException {\n      String value = op.wrap(val);\n      if (computedType != null) value = computedType.wrap(value);\n      ew.put(name, value);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f91616b62c917fffa5286c4ef2d21b10cc56f8e","date":1531726562,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause.Condition#writeMap(EntryWriter).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause.Condition#writeMap(EntryWriter).mjava","sourceNew":"    @Override\n    public void writeMap(EntryWriter ew) throws IOException {\n      String value = op.wrap(val);\n      if (computedType != null) value = computedType.wrap(value);\n      ew.put(name, value);\n    }\n\n","sourceOld":"    @Override\n    public void writeMap(EntryWriter ew) throws IOException {\n      String value = op.wrap(val);\n      if (computationType != null) value = computationType.wrap(value);\n      ew.put(name, value);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":0,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause.Condition#writeMap(EntryWriter).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void writeMap(EntryWriter ew) throws IOException {\n      String value = op.wrap(val);\n      if (computedType != null) value = computedType.wrap(value);\n      ew.put(name, value);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb4df98176b6dd0ae6ceba71eaa59c9bcb8fe2eb","date":1533364463,"type":4,"author":"noble","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause.Condition#writeMap(EntryWriter).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void writeMap(EntryWriter ew) throws IOException {\n      String value = op.wrap(val);\n      if (computedType != null) value = computedType.wrap(value);\n      ew.put(name, value);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a10a24d2afdf00bbe1013706b80c989315772dc9":["78231225260fb5b3bf9920f203d71477d5501c65"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8f91616b62c917fffa5286c4ef2d21b10cc56f8e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cb4df98176b6dd0ae6ceba71eaa59c9bcb8fe2eb":["8f91616b62c917fffa5286c4ef2d21b10cc56f8e"],"78231225260fb5b3bf9920f203d71477d5501c65":["9837f40c922407d857991971de6def18eda0857b"],"9837f40c922407d857991971de6def18eda0857b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8f91616b62c917fffa5286c4ef2d21b10cc56f8e":["a10a24d2afdf00bbe1013706b80c989315772dc9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cb4df98176b6dd0ae6ceba71eaa59c9bcb8fe2eb"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9837f40c922407d857991971de6def18eda0857b"]},"commit2Childs":{"a10a24d2afdf00bbe1013706b80c989315772dc9":["8f91616b62c917fffa5286c4ef2d21b10cc56f8e"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","9837f40c922407d857991971de6def18eda0857b","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"78231225260fb5b3bf9920f203d71477d5501c65":["a10a24d2afdf00bbe1013706b80c989315772dc9"],"cb4df98176b6dd0ae6ceba71eaa59c9bcb8fe2eb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9837f40c922407d857991971de6def18eda0857b":["78231225260fb5b3bf9920f203d71477d5501c65","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"8f91616b62c917fffa5286c4ef2d21b10cc56f8e":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cb4df98176b6dd0ae6ceba71eaa59c9bcb8fe2eb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}