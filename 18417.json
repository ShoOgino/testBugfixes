{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfosReader#read(Directory,String,IOContext).mjava","commits":[{"id":"9b2af6b2c05418fb9df466c739ed5b3a153eadde","date":1337520269,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfosReader#read(Directory,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfosReader#read(Directory,String).mjava","sourceNew":"  @Override\n  public SegmentInfo read(Directory dir, String segment, IOContext context) throws IOException {\n    final String fileName = IndexFileNames.segmentFileName(segment, \"\", Lucene40SegmentInfosFormat.SI_EXTENSION);\n    final IndexInput input = dir.openInput(fileName, context);\n    boolean success = false;\n    try {\n      final String version = input.readString();\n      final int docCount = input.readInt();\n      final int docStoreOffset = -1;\n      final String docStoreSegment = segment;\n      final boolean docStoreIsCompoundFile = false;\n      final Map<Integer,Long> normGen = null;\n      final boolean isCompoundFile = input.readByte() == SegmentInfo.YES;\n      final Map<String,String> diagnostics = input.readStringStringMap();\n\n      final SegmentInfo si = new SegmentInfo(dir, version, segment, docCount, docStoreOffset,\n                                             docStoreSegment, docStoreIsCompoundFile, normGen, isCompoundFile,\n                                             0, null, diagnostics);\n      success = true;\n\n      return si;\n\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(input);\n      } else {\n        input.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public SegmentInfo read(Directory dir, String segment) throws IOException {\n    final String fileName = IndexFileNames.segmentFileName(segment, \"\", Lucene40SegmentInfosFormat.SI_EXTENSION);\n    final IndexInput input = dir.openInput(fileName, IOContext.READONCE);\n    boolean success = false;\n    try {\n      final String version = input.readString();\n      final int docCount = input.readInt();\n      final int docStoreOffset = -1;\n      final String docStoreSegment = segment;\n      final boolean docStoreIsCompoundFile = false;\n      final Map<Integer,Long> normGen = null;\n      final boolean isCompoundFile = input.readByte() == SegmentInfo.YES;\n      final Map<String,String> diagnostics = input.readStringStringMap();\n\n      final SegmentInfo si = new SegmentInfo(dir, version, segment, docCount, docStoreOffset,\n                                             docStoreSegment, docStoreIsCompoundFile, normGen, isCompoundFile,\n                                             0, null, diagnostics);\n      success = true;\n\n      return si;\n\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(input);\n      } else {\n        input.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1494abe5dc85557ec2e2772f87660d48f831c3a5","date":1337614370,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfosReader#read(Directory,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfosReader#read(Directory,String,IOContext).mjava","sourceNew":"  @Override\n  public SegmentInfo read(Directory dir, String segment, IOContext context) throws IOException {\n    final String fileName = IndexFileNames.segmentFileName(segment, \"\", Lucene40SegmentInfosFormat.SI_EXTENSION);\n    final IndexInput input = dir.openInput(fileName, context);\n    boolean success = false;\n    try {\n      final String version = input.readString();\n      final int docCount = input.readInt();\n      final int docStoreOffset = -1;\n      final String docStoreSegment = segment;\n      final boolean docStoreIsCompoundFile = false;\n      final Map<Integer,Long> normGen = null;\n      final boolean isCompoundFile = input.readByte() == SegmentInfo.YES;\n      final Map<String,String> diagnostics = input.readStringStringMap();\n      final Set<String> files = input.readStringSet();\n\n      final SegmentInfo si = new SegmentInfo(dir, version, segment, docCount, docStoreOffset,\n                                             docStoreSegment, docStoreIsCompoundFile, normGen, isCompoundFile,\n                                             0, null, diagnostics);\n      si.setFiles(files);\n\n      success = true;\n\n      return si;\n\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(input);\n      } else {\n        input.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public SegmentInfo read(Directory dir, String segment, IOContext context) throws IOException {\n    final String fileName = IndexFileNames.segmentFileName(segment, \"\", Lucene40SegmentInfosFormat.SI_EXTENSION);\n    final IndexInput input = dir.openInput(fileName, context);\n    boolean success = false;\n    try {\n      final String version = input.readString();\n      final int docCount = input.readInt();\n      final int docStoreOffset = -1;\n      final String docStoreSegment = segment;\n      final boolean docStoreIsCompoundFile = false;\n      final Map<Integer,Long> normGen = null;\n      final boolean isCompoundFile = input.readByte() == SegmentInfo.YES;\n      final Map<String,String> diagnostics = input.readStringStringMap();\n\n      final SegmentInfo si = new SegmentInfo(dir, version, segment, docCount, docStoreOffset,\n                                             docStoreSegment, docStoreIsCompoundFile, normGen, isCompoundFile,\n                                             0, null, diagnostics);\n      success = true;\n\n      return si;\n\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(input);\n      } else {\n        input.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ace9b78896617dcee984890f3300d45c539c1b15","date":1337655022,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfoReader#read(Directory,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfosReader#read(Directory,String,IOContext).mjava","sourceNew":"  @Override\n  public SegmentInfo read(Directory dir, String segment, IOContext context) throws IOException {\n    final String fileName = IndexFileNames.segmentFileName(segment, \"\", Lucene40SegmentInfoFormat.SI_EXTENSION);\n    final IndexInput input = dir.openInput(fileName, context);\n    boolean success = false;\n    try {\n      final String version = input.readString();\n      final int docCount = input.readInt();\n      final int docStoreOffset = -1;\n      final String docStoreSegment = segment;\n      final boolean docStoreIsCompoundFile = false;\n      final Map<Integer,Long> normGen = null;\n      final boolean isCompoundFile = input.readByte() == SegmentInfo.YES;\n      final Map<String,String> diagnostics = input.readStringStringMap();\n      final Set<String> files = input.readStringSet();\n\n      final SegmentInfo si = new SegmentInfo(dir, version, segment, docCount, docStoreOffset,\n                                             docStoreSegment, docStoreIsCompoundFile, normGen, isCompoundFile,\n                                             0, null, diagnostics);\n      si.setFiles(files);\n\n      success = true;\n\n      return si;\n\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(input);\n      } else {\n        input.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public SegmentInfo read(Directory dir, String segment, IOContext context) throws IOException {\n    final String fileName = IndexFileNames.segmentFileName(segment, \"\", Lucene40SegmentInfosFormat.SI_EXTENSION);\n    final IndexInput input = dir.openInput(fileName, context);\n    boolean success = false;\n    try {\n      final String version = input.readString();\n      final int docCount = input.readInt();\n      final int docStoreOffset = -1;\n      final String docStoreSegment = segment;\n      final boolean docStoreIsCompoundFile = false;\n      final Map<Integer,Long> normGen = null;\n      final boolean isCompoundFile = input.readByte() == SegmentInfo.YES;\n      final Map<String,String> diagnostics = input.readStringStringMap();\n      final Set<String> files = input.readStringSet();\n\n      final SegmentInfo si = new SegmentInfo(dir, version, segment, docCount, docStoreOffset,\n                                             docStoreSegment, docStoreIsCompoundFile, normGen, isCompoundFile,\n                                             0, null, diagnostics);\n      si.setFiles(files);\n\n      success = true;\n\n      return si;\n\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(input);\n      } else {\n        input.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9b2af6b2c05418fb9df466c739ed5b3a153eadde":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ace9b78896617dcee984890f3300d45c539c1b15":["1494abe5dc85557ec2e2772f87660d48f831c3a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1494abe5dc85557ec2e2772f87660d48f831c3a5":["9b2af6b2c05418fb9df466c739ed5b3a153eadde"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9b2af6b2c05418fb9df466c739ed5b3a153eadde","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9b2af6b2c05418fb9df466c739ed5b3a153eadde":["1494abe5dc85557ec2e2772f87660d48f831c3a5"],"ace9b78896617dcee984890f3300d45c539c1b15":[],"1494abe5dc85557ec2e2772f87660d48f831c3a5":["ace9b78896617dcee984890f3300d45c539c1b15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ace9b78896617dcee984890f3300d45c539c1b15","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}