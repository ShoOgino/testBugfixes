{"path":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_exception1().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_exception1().mjava","pathOld":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_exception1().mjava","sourceNew":"        private boolean r_exception1() {\n            int among_var;\n            // (, line 168\n            // [, line 170\n            bra = cursor;\n            // substring, line 170\n            among_var = find_among(a_10, 18);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 170\n            ket = cursor;\n            // atlimit, line 170\n            if (cursor < limit)\n            {\n                return false;\n            }\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 174\n                    // <-, line 174\n                    slice_from(\"ski\");\n                    break;\n                case 2:\n                    // (, line 175\n                    // <-, line 175\n                    slice_from(\"sky\");\n                    break;\n                case 3:\n                    // (, line 176\n                    // <-, line 176\n                    slice_from(\"die\");\n                    break;\n                case 4:\n                    // (, line 177\n                    // <-, line 177\n                    slice_from(\"lie\");\n                    break;\n                case 5:\n                    // (, line 178\n                    // <-, line 178\n                    slice_from(\"tie\");\n                    break;\n                case 6:\n                    // (, line 182\n                    // <-, line 182\n                    slice_from(\"idl\");\n                    break;\n                case 7:\n                    // (, line 183\n                    // <-, line 183\n                    slice_from(\"gentl\");\n                    break;\n                case 8:\n                    // (, line 184\n                    // <-, line 184\n                    slice_from(\"ugli\");\n                    break;\n                case 9:\n                    // (, line 185\n                    // <-, line 185\n                    slice_from(\"earli\");\n                    break;\n                case 10:\n                    // (, line 186\n                    // <-, line 186\n                    slice_from(\"onli\");\n                    break;\n                case 11:\n                    // (, line 187\n                    // <-, line 187\n                    slice_from(\"singl\");\n                    break;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_exception1() {\n            int among_var;\n            // (, line 168\n            // [, line 170\n            bra = cursor;\n            // substring, line 170\n            among_var = find_among(a_10, 18);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 170\n            ket = cursor;\n            // atlimit, line 170\n            if (cursor < limit)\n            {\n                return false;\n            }\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 174\n                    // <-, line 174\n                    slice_from(\"ski\");\n                    break;\n                case 2:\n                    // (, line 175\n                    // <-, line 175\n                    slice_from(\"sky\");\n                    break;\n                case 3:\n                    // (, line 176\n                    // <-, line 176\n                    slice_from(\"die\");\n                    break;\n                case 4:\n                    // (, line 177\n                    // <-, line 177\n                    slice_from(\"lie\");\n                    break;\n                case 5:\n                    // (, line 178\n                    // <-, line 178\n                    slice_from(\"tie\");\n                    break;\n                case 6:\n                    // (, line 182\n                    // <-, line 182\n                    slice_from(\"idl\");\n                    break;\n                case 7:\n                    // (, line 183\n                    // <-, line 183\n                    slice_from(\"gentl\");\n                    break;\n                case 8:\n                    // (, line 184\n                    // <-, line 184\n                    slice_from(\"ugli\");\n                    break;\n                case 9:\n                    // (, line 185\n                    // <-, line 185\n                    slice_from(\"earli\");\n                    break;\n                case 10:\n                    // (, line 186\n                    // <-, line 186\n                    slice_from(\"onli\");\n                    break;\n                case 11:\n                    // (, line 187\n                    // <-, line 187\n                    slice_from(\"singl\");\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_exception1().mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_exception1().mjava","sourceNew":"        private boolean r_exception1() {\n            int among_var;\n            // (, line 168\n            // [, line 170\n            bra = cursor;\n            // substring, line 170\n            among_var = find_among(a_10, 18);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 170\n            ket = cursor;\n            // atlimit, line 170\n            if (cursor < limit)\n            {\n                return false;\n            }\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 174\n                    // <-, line 174\n                    slice_from(\"ski\");\n                    break;\n                case 2:\n                    // (, line 175\n                    // <-, line 175\n                    slice_from(\"sky\");\n                    break;\n                case 3:\n                    // (, line 176\n                    // <-, line 176\n                    slice_from(\"die\");\n                    break;\n                case 4:\n                    // (, line 177\n                    // <-, line 177\n                    slice_from(\"lie\");\n                    break;\n                case 5:\n                    // (, line 178\n                    // <-, line 178\n                    slice_from(\"tie\");\n                    break;\n                case 6:\n                    // (, line 182\n                    // <-, line 182\n                    slice_from(\"idl\");\n                    break;\n                case 7:\n                    // (, line 183\n                    // <-, line 183\n                    slice_from(\"gentl\");\n                    break;\n                case 8:\n                    // (, line 184\n                    // <-, line 184\n                    slice_from(\"ugli\");\n                    break;\n                case 9:\n                    // (, line 185\n                    // <-, line 185\n                    slice_from(\"earli\");\n                    break;\n                case 10:\n                    // (, line 186\n                    // <-, line 186\n                    slice_from(\"onli\");\n                    break;\n                case 11:\n                    // (, line 187\n                    // <-, line 187\n                    slice_from(\"singl\");\n                    break;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_exception1() {\n            int among_var;\n            // (, line 168\n            // [, line 170\n            bra = cursor;\n            // substring, line 170\n            among_var = find_among(a_10, 18);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 170\n            ket = cursor;\n            // atlimit, line 170\n            if (cursor < limit)\n            {\n                return false;\n            }\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 174\n                    // <-, line 174\n                    slice_from(\"ski\");\n                    break;\n                case 2:\n                    // (, line 175\n                    // <-, line 175\n                    slice_from(\"sky\");\n                    break;\n                case 3:\n                    // (, line 176\n                    // <-, line 176\n                    slice_from(\"die\");\n                    break;\n                case 4:\n                    // (, line 177\n                    // <-, line 177\n                    slice_from(\"lie\");\n                    break;\n                case 5:\n                    // (, line 178\n                    // <-, line 178\n                    slice_from(\"tie\");\n                    break;\n                case 6:\n                    // (, line 182\n                    // <-, line 182\n                    slice_from(\"idl\");\n                    break;\n                case 7:\n                    // (, line 183\n                    // <-, line 183\n                    slice_from(\"gentl\");\n                    break;\n                case 8:\n                    // (, line 184\n                    // <-, line 184\n                    slice_from(\"ugli\");\n                    break;\n                case 9:\n                    // (, line 185\n                    // <-, line 185\n                    slice_from(\"earli\");\n                    break;\n                case 10:\n                    // (, line 186\n                    // <-, line 186\n                    slice_from(\"onli\");\n                    break;\n                case 11:\n                    // (, line 187\n                    // <-, line 187\n                    slice_from(\"singl\");\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}