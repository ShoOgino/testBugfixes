{"path":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetTest#beforeClass().mjava","commits":[{"id":"3bd4c6955956e76c96eb12dfe64108ed03522983","date":1508262722,"type":0,"author":"Houston Putman","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetTest#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-analytics.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    defaults.put(\"int_id\", new Integer(0));\n    defaults.put(\"long_ld\", new Long(0));\n    defaults.put(\"float_fd\", new Float(0));\n    defaults.put(\"double_dd\", new Double(0));\n    defaults.put(\"date_dtd\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string_sd\", \"str0\");\n    \n    intTestStart = new ArrayList<>();\n    longTestStart = new ArrayList<>();\n    floatTestStart = new ArrayList<>();\n    doubleTestStart = new ArrayList<>();\n    dateTestStart = new ArrayList<>();\n    stringTestStart = new ArrayList<>();\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      \n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n      \n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n      \n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n      \n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n      \n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n      \n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n      \n      assertU(adoc(fields.toArray(new String[0])));\n      \n      \n      if (usually()) {\n        assertU(commit());  // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    \n    //Sort ascending tests\n    setResponse(h.query(request(fileToStringArr(LegacyNoFacetTest.class, fileName))));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a","date":1528054850,"type":3,"author":"Michael Braun","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetTest#beforeClass().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-analytics.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    defaults.put(\"int_id\", 0);\n    defaults.put(\"long_ld\", 0L);\n    defaults.put(\"float_fd\", (float) 0);\n    defaults.put(\"double_dd\", (double) 0);\n    defaults.put(\"date_dtd\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string_sd\", \"str0\");\n    \n    intTestStart = new ArrayList<>();\n    longTestStart = new ArrayList<>();\n    floatTestStart = new ArrayList<>();\n    doubleTestStart = new ArrayList<>();\n    dateTestStart = new ArrayList<>();\n    stringTestStart = new ArrayList<>();\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      \n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n      \n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n      \n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n      \n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n      \n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n      \n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n      \n      assertU(adoc(fields.toArray(new String[0])));\n      \n      \n      if (usually()) {\n        assertU(commit());  // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    \n    //Sort ascending tests\n    setResponse(h.query(request(fileToStringArr(LegacyNoFacetTest.class, fileName))));\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-analytics.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    defaults.put(\"int_id\", new Integer(0));\n    defaults.put(\"long_ld\", new Long(0));\n    defaults.put(\"float_fd\", new Float(0));\n    defaults.put(\"double_dd\", new Double(0));\n    defaults.put(\"date_dtd\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string_sd\", \"str0\");\n    \n    intTestStart = new ArrayList<>();\n    longTestStart = new ArrayList<>();\n    floatTestStart = new ArrayList<>();\n    doubleTestStart = new ArrayList<>();\n    dateTestStart = new ArrayList<>();\n    stringTestStart = new ArrayList<>();\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      \n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n      \n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n      \n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n      \n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n      \n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n      \n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n      \n      assertU(adoc(fields.toArray(new String[0])));\n      \n      \n      if (usually()) {\n        assertU(commit());  // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    \n    //Sort ascending tests\n    setResponse(h.query(request(fileToStringArr(LegacyNoFacetTest.class, fileName))));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"628903f37b6c442da0d390db1c6af9a0e74d41a7","date":1531736685,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetTest#beforeClass().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-analytics.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    defaults.put(\"int_id\", 0);\n    defaults.put(\"long_ld\", 0L);\n    defaults.put(\"float_fd\", (float) 0);\n    defaults.put(\"double_dd\", (double) 0);\n    defaults.put(\"date_dtd\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string_sd\", \"str0\");\n    \n    intTestStart = new ArrayList<>();\n    longTestStart = new ArrayList<>();\n    floatTestStart = new ArrayList<>();\n    doubleTestStart = new ArrayList<>();\n    dateTestStart = new ArrayList<>();\n    stringTestStart = new ArrayList<>();\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      \n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n      \n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n      \n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n      \n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n      \n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n      \n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n      \n      assertU(adoc(fields.toArray(new String[0])));\n      \n      \n      if (usually()) {\n        assertU(commit());  // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    \n    //Sort ascending tests\n    setResponse(h.query(request(fileToStringArr(LegacyNoFacetTest.class, fileName))));\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-analytics.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    defaults.put(\"int_id\", new Integer(0));\n    defaults.put(\"long_ld\", new Long(0));\n    defaults.put(\"float_fd\", new Float(0));\n    defaults.put(\"double_dd\", new Double(0));\n    defaults.put(\"date_dtd\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string_sd\", \"str0\");\n    \n    intTestStart = new ArrayList<>();\n    longTestStart = new ArrayList<>();\n    floatTestStart = new ArrayList<>();\n    doubleTestStart = new ArrayList<>();\n    dateTestStart = new ArrayList<>();\n    stringTestStart = new ArrayList<>();\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      \n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n      \n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n      \n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n      \n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n      \n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n      \n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n      \n      assertU(adoc(fields.toArray(new String[0])));\n      \n      \n      if (usually()) {\n        assertU(commit());  // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    \n    //Sort ascending tests\n    setResponse(h.query(request(fileToStringArr(LegacyNoFacetTest.class, fileName))));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetTest#beforeClass().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-analytics.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    defaults.put(\"int_id\", 0);\n    defaults.put(\"long_ld\", 0L);\n    defaults.put(\"float_fd\", (float) 0);\n    defaults.put(\"double_dd\", (double) 0);\n    defaults.put(\"date_dtd\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string_sd\", \"str0\");\n    \n    intTestStart = new ArrayList<>();\n    longTestStart = new ArrayList<>();\n    floatTestStart = new ArrayList<>();\n    doubleTestStart = new ArrayList<>();\n    dateTestStart = new ArrayList<>();\n    stringTestStart = new ArrayList<>();\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      \n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n      \n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n      \n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n      \n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n      \n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n      \n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n      \n      assertU(adoc(fields.toArray(new String[0])));\n      \n      \n      if (usually()) {\n        assertU(commit());  // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    \n    //Sort ascending tests\n    setResponse(h.query(request(fileToStringArr(LegacyNoFacetTest.class, fileName))));\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-analytics.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    defaults.put(\"int_id\", new Integer(0));\n    defaults.put(\"long_ld\", new Long(0));\n    defaults.put(\"float_fd\", new Float(0));\n    defaults.put(\"double_dd\", new Double(0));\n    defaults.put(\"date_dtd\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string_sd\", \"str0\");\n    \n    intTestStart = new ArrayList<>();\n    longTestStart = new ArrayList<>();\n    floatTestStart = new ArrayList<>();\n    doubleTestStart = new ArrayList<>();\n    dateTestStart = new ArrayList<>();\n    stringTestStart = new ArrayList<>();\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      \n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n      \n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n      \n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n      \n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n      \n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n      \n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n      \n      assertU(adoc(fields.toArray(new String[0])));\n      \n      \n      if (usually()) {\n        assertU(commit());  // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    \n    //Sort ascending tests\n    setResponse(h.query(request(fileToStringArr(LegacyNoFacetTest.class, fileName))));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad2010e2591e2d11678b59291d2ab31bd30e3ac7","date":1559150835,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetTest#beforeClass().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-analytics.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    defaults.put(\"int_id\", 0);\n    defaults.put(\"long_ld\", 0L);\n    defaults.put(\"float_fd\", (float) 0);\n    defaults.put(\"double_dd\", (double) 0);\n    defaults.put(\"date_dtd\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string_sd\", \"str0\");\n    \n    intTestStart = new ArrayList<>();\n    intMissing = 0;\n    longTestStart = new ArrayList<>();\n    longMissing = 0;\n    floatTestStart = new ArrayList<>();\n    floatMissing = 0;\n    doubleTestStart = new ArrayList<>();\n    doubleMissing = 0;\n    dateTestStart = new ArrayList<>();\n    dateMissing = 0;\n    stringTestStart = new ArrayList<>();\n    stringMissing = 0;\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      \n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n      \n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n      \n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n      \n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n      \n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n      \n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n      \n      assertU(adoc(fields.toArray(new String[0])));\n      \n      \n      if (usually()) {\n        assertU(commit());  // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    \n    //Sort ascending tests\n    setResponse(h.query(request(fileToStringArr(LegacyNoFacetTest.class, fileName))));\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-analytics.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    defaults.put(\"int_id\", 0);\n    defaults.put(\"long_ld\", 0L);\n    defaults.put(\"float_fd\", (float) 0);\n    defaults.put(\"double_dd\", (double) 0);\n    defaults.put(\"date_dtd\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string_sd\", \"str0\");\n    \n    intTestStart = new ArrayList<>();\n    longTestStart = new ArrayList<>();\n    floatTestStart = new ArrayList<>();\n    doubleTestStart = new ArrayList<>();\n    dateTestStart = new ArrayList<>();\n    stringTestStart = new ArrayList<>();\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      \n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n      \n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n      \n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n      \n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n      \n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n      \n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n      \n      assertU(adoc(fields.toArray(new String[0])));\n      \n      \n      if (usually()) {\n        assertU(commit());  // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    \n    //Sort ascending tests\n    setResponse(h.query(request(fileToStringArr(LegacyNoFacetTest.class, fileName))));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58af973abe9f7c0faa777c1a6285fc7f72c171c5","date":1559329541,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetTest#beforeClass().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-analytics.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    defaults.put(\"int_id\", 0);\n    defaults.put(\"long_ld\", 0L);\n    defaults.put(\"float_fd\", (float) 0);\n    defaults.put(\"double_dd\", (double) 0);\n    defaults.put(\"date_dtd\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string_sd\", \"str0\");\n    \n    intTestStart = new ArrayList<>();\n    intMissing = 0;\n    longTestStart = new ArrayList<>();\n    longMissing = 0;\n    floatTestStart = new ArrayList<>();\n    floatMissing = 0;\n    doubleTestStart = new ArrayList<>();\n    doubleMissing = 0;\n    dateTestStart = new ArrayList<>();\n    dateMissing = 0;\n    stringTestStart = new ArrayList<>();\n    stringMissing = 0;\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      \n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n      \n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n      \n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n      \n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n      \n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n      \n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n      \n      assertU(adoc(fields.toArray(new String[0])));\n      \n      \n      if (usually()) {\n        assertU(commit());  // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    \n    //Sort ascending tests\n    setResponse(h.query(request(fileToStringArr(LegacyNoFacetTest.class, fileName))));\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-analytics.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    defaults.put(\"int_id\", 0);\n    defaults.put(\"long_ld\", 0L);\n    defaults.put(\"float_fd\", (float) 0);\n    defaults.put(\"double_dd\", (double) 0);\n    defaults.put(\"date_dtd\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string_sd\", \"str0\");\n    \n    intTestStart = new ArrayList<>();\n    longTestStart = new ArrayList<>();\n    floatTestStart = new ArrayList<>();\n    doubleTestStart = new ArrayList<>();\n    dateTestStart = new ArrayList<>();\n    stringTestStart = new ArrayList<>();\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      \n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n      \n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n      \n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n      \n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n      \n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n      \n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n      \n      assertU(adoc(fields.toArray(new String[0])));\n      \n      \n      if (usually()) {\n        assertU(commit());  // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    \n    //Sort ascending tests\n    setResponse(h.query(request(fileToStringArr(LegacyNoFacetTest.class, fileName))));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e4e64b7199d2f2a17be7f3926c7532553910dce","date":1564342581,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetTest#beforeClass().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-analytics.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    defaults.put(\"int_id\", 0);\n    defaults.put(\"long_ld\", 0L);\n    defaults.put(\"float_fd\", (float) 0);\n    defaults.put(\"double_dd\", (double) 0);\n    defaults.put(\"date_dtd\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string_sd\", \"str0\");\n\n    intTestStart = new ArrayList<>();\n    intMissing = 0;\n    longTestStart = new ArrayList<>();\n    longMissing = 0;\n    floatTestStart = new ArrayList<>();\n    floatMissing = 0;\n    doubleTestStart = new ArrayList<>();\n    doubleMissing = 0;\n    dateTestStart = new ArrayList<>();\n    dateMissing = 0;\n    stringTestStart = new ArrayList<>();\n    stringMissing = 0;\n\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n\n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n\n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n\n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n\n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n\n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n\n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n\n      assertU(adoc(fields.toArray(new String[0])));\n\n\n      if (usually()) {\n        assertU(commit());  // to have several segments\n      }\n    }\n\n    assertU(commit());\n\n    //Sort ascending tests\n    setResponse(h.query(request(fileToStringArr(LegacyNoFacetTest.class, fileName))));\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-analytics.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    defaults.put(\"int_id\", 0);\n    defaults.put(\"long_ld\", 0L);\n    defaults.put(\"float_fd\", (float) 0);\n    defaults.put(\"double_dd\", (double) 0);\n    defaults.put(\"date_dtd\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string_sd\", \"str0\");\n    \n    intTestStart = new ArrayList<>();\n    intMissing = 0;\n    longTestStart = new ArrayList<>();\n    longMissing = 0;\n    floatTestStart = new ArrayList<>();\n    floatMissing = 0;\n    doubleTestStart = new ArrayList<>();\n    doubleMissing = 0;\n    dateTestStart = new ArrayList<>();\n    dateMissing = 0;\n    stringTestStart = new ArrayList<>();\n    stringMissing = 0;\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      \n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n      \n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n      \n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n      \n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n      \n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n      \n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n      \n      assertU(adoc(fields.toArray(new String[0])));\n      \n      \n      if (usually()) {\n        assertU(commit());  // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    \n    //Sort ascending tests\n    setResponse(h.query(request(fileToStringArr(LegacyNoFacetTest.class, fileName))));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetTest#beforeClass().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-analytics.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    defaults.put(\"int_id\", 0);\n    defaults.put(\"long_ld\", 0L);\n    defaults.put(\"float_fd\", (float) 0);\n    defaults.put(\"double_dd\", (double) 0);\n    defaults.put(\"date_dtd\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string_sd\", \"str0\");\n\n    intTestStart = new ArrayList<>();\n    intMissing = 0;\n    longTestStart = new ArrayList<>();\n    longMissing = 0;\n    floatTestStart = new ArrayList<>();\n    floatMissing = 0;\n    doubleTestStart = new ArrayList<>();\n    doubleMissing = 0;\n    dateTestStart = new ArrayList<>();\n    dateMissing = 0;\n    stringTestStart = new ArrayList<>();\n    stringMissing = 0;\n\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n\n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n\n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n\n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n\n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n\n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n\n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n\n      assertU(adoc(fields.toArray(new String[0])));\n\n\n      if (usually()) {\n        assertU(commit());  // to have several segments\n      }\n    }\n\n    assertU(commit());\n\n    //Sort ascending tests\n    setResponse(h.query(request(fileToStringArr(LegacyNoFacetTest.class, fileName))));\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-analytics.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    defaults.put(\"int_id\", 0);\n    defaults.put(\"long_ld\", 0L);\n    defaults.put(\"float_fd\", (float) 0);\n    defaults.put(\"double_dd\", (double) 0);\n    defaults.put(\"date_dtd\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string_sd\", \"str0\");\n    \n    intTestStart = new ArrayList<>();\n    intMissing = 0;\n    longTestStart = new ArrayList<>();\n    longMissing = 0;\n    floatTestStart = new ArrayList<>();\n    floatMissing = 0;\n    doubleTestStart = new ArrayList<>();\n    doubleMissing = 0;\n    dateTestStart = new ArrayList<>();\n    dateMissing = 0;\n    stringTestStart = new ArrayList<>();\n    stringMissing = 0;\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      List<String> fields = new ArrayList<>();\n      fields.add(\"id\"); fields.add(\"1000\"+j);\n      \n      if( i != 0 ){\n        fields.add(\"int_id\"); fields.add(\"\" + i);\n        intTestStart.add(i);\n      } else intMissing++;\n      \n      if( l != 0l ){\n        fields.add(\"long_ld\"); fields.add(\"\" + l);\n        longTestStart.add(l);\n      } else longMissing++;\n      \n      if( f != 0.0f ){\n        fields.add(\"float_fd\"); fields.add(\"\" + f);\n        floatTestStart.add(f);\n      } else floatMissing++;\n      \n      if( d != 0.0d ){\n        fields.add(\"double_dd\"); fields.add(\"\" + d);\n        doubleTestStart.add(d);\n      } else doubleMissing++;\n      \n      if( (j%DATE) != 0 ){\n        fields.add(\"date_dtd\"); fields.add(dt);\n        dateTestStart.add(dt);\n      } else dateMissing++;\n      \n      if( (j%STRING) != 0 ){\n        fields.add(\"string_sd\"); fields.add(s);\n        stringTestStart.add(s);\n      } else stringMissing++;\n      \n      assertU(adoc(fields.toArray(new String[0])));\n      \n      \n      if (usually()) {\n        assertU(commit());  // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    \n    //Sort ascending tests\n    setResponse(h.query(request(fileToStringArr(LegacyNoFacetTest.class, fileName))));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1e4e64b7199d2f2a17be7f3926c7532553910dce":["ad2010e2591e2d11678b59291d2ab31bd30e3ac7"],"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a":["3bd4c6955956e76c96eb12dfe64108ed03522983"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["3bd4c6955956e76c96eb12dfe64108ed03522983","628903f37b6c442da0d390db1c6af9a0e74d41a7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"58af973abe9f7c0faa777c1a6285fc7f72c171c5":["628903f37b6c442da0d390db1c6af9a0e74d41a7","ad2010e2591e2d11678b59291d2ab31bd30e3ac7"],"ad2010e2591e2d11678b59291d2ab31bd30e3ac7":["628903f37b6c442da0d390db1c6af9a0e74d41a7"],"628903f37b6c442da0d390db1c6af9a0e74d41a7":["3bd4c6955956e76c96eb12dfe64108ed03522983","b6a269c1ddba3f8c9fa9a40572ecc538eddda41a"],"f8061ddd97f3352007d927dae445884a6f3d857b":["ad2010e2591e2d11678b59291d2ab31bd30e3ac7","1e4e64b7199d2f2a17be7f3926c7532553910dce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1e4e64b7199d2f2a17be7f3926c7532553910dce"],"3bd4c6955956e76c96eb12dfe64108ed03522983":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1e4e64b7199d2f2a17be7f3926c7532553910dce":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a":["628903f37b6c442da0d390db1c6af9a0e74d41a7"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3bd4c6955956e76c96eb12dfe64108ed03522983"],"58af973abe9f7c0faa777c1a6285fc7f72c171c5":[],"ad2010e2591e2d11678b59291d2ab31bd30e3ac7":["1e4e64b7199d2f2a17be7f3926c7532553910dce","58af973abe9f7c0faa777c1a6285fc7f72c171c5","f8061ddd97f3352007d927dae445884a6f3d857b"],"628903f37b6c442da0d390db1c6af9a0e74d41a7":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","58af973abe9f7c0faa777c1a6285fc7f72c171c5","ad2010e2591e2d11678b59291d2ab31bd30e3ac7"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"3bd4c6955956e76c96eb12dfe64108ed03522983":["b6a269c1ddba3f8c9fa9a40572ecc538eddda41a","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","628903f37b6c442da0d390db1c6af9a0e74d41a7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","58af973abe9f7c0faa777c1a6285fc7f72c171c5","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}