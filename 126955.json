{"path":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","commits":[{"id":"c0426db639e5d76d8bfcea5969a4442c88debdae","date":1420472697,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","pathOld":"/dev/null","sourceNew":"  public void testReqParams() throws Exception{\n    RestTestHarness harness = restTestHarness;\n    String payload = \" {\\n\" +\n        \"  'set' : {'x': {\" +\n        \"                    'a':'A val',\\n\" +\n        \"                    'b': 'B val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness,\"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"a\"),\n        \"A val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"b\"),\n        \"B val\",\n        10);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump', 'class': 'org.apache.solr.handler.DumpRequestHandler' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump\", \"name\"),\n        \"/dump\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump?wt=json&useParams=x\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump?wt=json&useParams=x&a=fomrequest\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"fomrequest\",\n        5);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump1', 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness,\"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump1\", \"name\"),\n        \"/dump1\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y':{\\n\" +\n        \"                'c':'CY val',\\n\" +\n        \"                'b': 'BY val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness,\"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"c\"),\n        \"CY val\",\n        5);\n\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"b\"),\n        \"BY val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        null,\n        5);\n\n    payload = \" {\\n\" +\n        \"  'update' : {'y': {\\n\" +\n        \"                'c':'CY val modified',\\n\" +\n        \"                'e':'EY val',\\n\" +\n        \"                'b': 'BY val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness,\"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val modified\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"e\"),\n        \"EY val\",\n        10);\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y': {\\n\" +\n        \"                'p':'P val',\\n\" +\n        \"                'q': 'Q val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness,\"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        \"P val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        null,\n        10);\n    payload = \" {'delete' : 'y'}\";\n    TestSolrConfigHandler.runConfigCommand(harness,\"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        null,\n        10);\n\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","01ff1eeea394f76a66d8998b861d33d8546b8ca4","93f558d9f0b5a234a28dcc95036e388fcbbadaf7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"01ff1eeea394f76a66d8998b861d33d8546b8ca4","date":1422517232,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","sourceNew":"  public void testReqParams() throws Exception{\n    RestTestHarness harness = restTestHarness;\n    String payload = \" {\\n\" +\n        \"  'set' : {'x': {\" +\n        \"                    'a':'A val',\\n\" +\n        \"                    'b': 'B val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness,\"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"a\"),\n        \"A val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"b\"),\n        \"B val\",\n        10);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump', 'class': 'org.apache.solr.handler.DumpRequestHandler' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump\", \"name\"),\n        \"/dump\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump?wt=json&useParams=x\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump?wt=json&useParams=x&a=fomrequest\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"fomrequest\",\n        5);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump1', 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness,\"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump1\", \"name\"),\n        \"/dump1\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y':{\\n\" +\n        \"                'c':'CY val',\\n\" +\n        \"                'b': 'BY val', \" +\n        \"                'd': ['val 1', 'val 2']}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness,\"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"c\"),\n        \"CY val\",\n        5);\n\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"b\"),\n        \"BY val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        null,\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"d\"),\n        Arrays.asList(\"val 1\", \"val 2\") ,\n        5);\n\n    payload = \" {\\n\" +\n        \"  'update' : {'y': {\\n\" +\n        \"                'c':'CY val modified',\\n\" +\n        \"                'e':'EY val',\\n\" +\n        \"                'b': 'BY val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness,\"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val modified\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"e\"),\n        \"EY val\",\n        10);\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y': {\\n\" +\n        \"                'p':'P val',\\n\" +\n        \"                'q': 'Q val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness,\"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        \"P val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        null,\n        10);\n    payload = \" {'delete' : 'y'}\";\n    TestSolrConfigHandler.runConfigCommand(harness,\"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        null,\n        10);\n\n\n  }\n\n","sourceOld":"  public void testReqParams() throws Exception{\n    RestTestHarness harness = restTestHarness;\n    String payload = \" {\\n\" +\n        \"  'set' : {'x': {\" +\n        \"                    'a':'A val',\\n\" +\n        \"                    'b': 'B val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness,\"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"a\"),\n        \"A val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"b\"),\n        \"B val\",\n        10);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump', 'class': 'org.apache.solr.handler.DumpRequestHandler' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump\", \"name\"),\n        \"/dump\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump?wt=json&useParams=x\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump?wt=json&useParams=x&a=fomrequest\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"fomrequest\",\n        5);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump1', 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness,\"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump1\", \"name\"),\n        \"/dump1\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y':{\\n\" +\n        \"                'c':'CY val',\\n\" +\n        \"                'b': 'BY val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness,\"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"c\"),\n        \"CY val\",\n        5);\n\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"b\"),\n        \"BY val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        null,\n        5);\n\n    payload = \" {\\n\" +\n        \"  'update' : {'y': {\\n\" +\n        \"                'c':'CY val modified',\\n\" +\n        \"                'e':'EY val',\\n\" +\n        \"                'b': 'BY val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness,\"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val modified\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"e\"),\n        \"EY val\",\n        10);\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y': {\\n\" +\n        \"                'p':'P val',\\n\" +\n        \"                'q': 'Q val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness,\"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        \"P val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        null,\n        10);\n    payload = \" {'delete' : 'y'}\";\n    TestSolrConfigHandler.runConfigCommand(harness,\"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        null,\n        10);\n\n\n  }\n\n","bugFix":["c0426db639e5d76d8bfcea5969a4442c88debdae"],"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae2f5be890d26585d438eba0b9cc7d3c0a9775be","date":1427387954,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","sourceNew":"  public void testReqParams() throws Exception {\n    RestTestHarness harness = restTestHarness;\n    String payload = \" {\\n\" +\n        \"  'set' : {'x': {\" +\n        \"                    'a':'A val',\\n\" +\n        \"                    'b': 'B val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"a\"),\n        \"A val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"b\"),\n        \"B val\",\n        10);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump', 'class': 'org.apache.solr.handler.DumpRequestHandler' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump\", \"name\"),\n        \"/dump\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump?wt=json&useParams=x\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump?wt=json&useParams=x&a=fomrequest\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"fomrequest\",\n        5);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump1', 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump1\", \"name\"),\n        \"/dump1\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y':{\\n\" +\n        \"                'c':'CY val',\\n\" +\n        \"                'b': 'BY val', \" +\n        \"                'd': ['val 1', 'val 2']}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"c\"),\n        \"CY val\",\n        5);\n\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"b\"),\n        \"BY val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        null,\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"d\"),\n        Arrays.asList(\"val 1\", \"val 2\"),\n        5);\n\n    payload = \" {\\n\" +\n        \"  'update' : {'y': {\\n\" +\n        \"                'c':'CY val modified',\\n\" +\n        \"                'e':'EY val',\\n\" +\n        \"                'b': 'BY val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val modified\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"e\"),\n        \"EY val\",\n        10);\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y': {\\n\" +\n        \"                'p':'P val',\\n\" +\n        \"                'q': 'Q val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        \"P val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        null,\n        10);\n    payload = \" {'delete' : 'y'}\";\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        null,\n        10);\n\n\n  }\n\n","sourceOld":"  public void testReqParams() throws Exception{\n    RestTestHarness harness = restTestHarness;\n    String payload = \" {\\n\" +\n        \"  'set' : {'x': {\" +\n        \"                    'a':'A val',\\n\" +\n        \"                    'b': 'B val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness,\"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"a\"),\n        \"A val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"b\"),\n        \"B val\",\n        10);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump', 'class': 'org.apache.solr.handler.DumpRequestHandler' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump\", \"name\"),\n        \"/dump\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump?wt=json&useParams=x\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump?wt=json&useParams=x&a=fomrequest\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"fomrequest\",\n        5);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump1', 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness,\"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump1\", \"name\"),\n        \"/dump1\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y':{\\n\" +\n        \"                'c':'CY val',\\n\" +\n        \"                'b': 'BY val', \" +\n        \"                'd': ['val 1', 'val 2']}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness,\"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"c\"),\n        \"CY val\",\n        5);\n\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"b\"),\n        \"BY val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        null,\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"d\"),\n        Arrays.asList(\"val 1\", \"val 2\") ,\n        5);\n\n    payload = \" {\\n\" +\n        \"  'update' : {'y': {\\n\" +\n        \"                'c':'CY val modified',\\n\" +\n        \"                'e':'EY val',\\n\" +\n        \"                'b': 'BY val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness,\"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val modified\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"e\"),\n        \"EY val\",\n        10);\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y': {\\n\" +\n        \"                'p':'P val',\\n\" +\n        \"                'q': 'Q val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness,\"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        \"P val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        null,\n        10);\n    payload = \" {'delete' : 'y'}\";\n    TestSolrConfigHandler.runConfigCommand(harness,\"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        null,\n        10);\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","sourceNew":"  public void testReqParams() throws Exception {\n    RestTestHarness harness = restTestHarness;\n    String payload = \" {\\n\" +\n        \"  'set' : {'x': {\" +\n        \"                    'a':'A val',\\n\" +\n        \"                    'b': 'B val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"a\"),\n        \"A val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"b\"),\n        \"B val\",\n        10);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump', 'class': 'org.apache.solr.handler.DumpRequestHandler' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump\", \"name\"),\n        \"/dump\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump?wt=json&useParams=x\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump?wt=json&useParams=x&a=fomrequest\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"fomrequest\",\n        5);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump1', 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump1\", \"name\"),\n        \"/dump1\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y':{\\n\" +\n        \"                'c':'CY val',\\n\" +\n        \"                'b': 'BY val', \" +\n        \"                'd': ['val 1', 'val 2']}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"c\"),\n        \"CY val\",\n        5);\n\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"b\"),\n        \"BY val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        null,\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"d\"),\n        Arrays.asList(\"val 1\", \"val 2\"),\n        5);\n\n    payload = \" {\\n\" +\n        \"  'update' : {'y': {\\n\" +\n        \"                'c':'CY val modified',\\n\" +\n        \"                'e':'EY val',\\n\" +\n        \"                'b': 'BY val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val modified\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"e\"),\n        \"EY val\",\n        10);\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y': {\\n\" +\n        \"                'p':'P val',\\n\" +\n        \"                'q': 'Q val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        \"P val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        null,\n        10);\n    payload = \" {'delete' : 'y'}\";\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        null,\n        10);\n\n\n  }\n\n","sourceOld":"  public void testReqParams() throws Exception{\n    RestTestHarness harness = restTestHarness;\n    String payload = \" {\\n\" +\n        \"  'set' : {'x': {\" +\n        \"                    'a':'A val',\\n\" +\n        \"                    'b': 'B val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness,\"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"a\"),\n        \"A val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"b\"),\n        \"B val\",\n        10);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump', 'class': 'org.apache.solr.handler.DumpRequestHandler' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump\", \"name\"),\n        \"/dump\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump?wt=json&useParams=x\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump?wt=json&useParams=x&a=fomrequest\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"fomrequest\",\n        5);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump1', 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness,\"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump1\", \"name\"),\n        \"/dump1\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y':{\\n\" +\n        \"                'c':'CY val',\\n\" +\n        \"                'b': 'BY val', \" +\n        \"                'd': ['val 1', 'val 2']}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness,\"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"c\"),\n        \"CY val\",\n        5);\n\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"b\"),\n        \"BY val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        null,\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"d\"),\n        Arrays.asList(\"val 1\", \"val 2\") ,\n        5);\n\n    payload = \" {\\n\" +\n        \"  'update' : {'y': {\\n\" +\n        \"                'c':'CY val modified',\\n\" +\n        \"                'e':'EY val',\\n\" +\n        \"                'b': 'BY val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness,\"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val modified\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"e\"),\n        \"EY val\",\n        10);\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y': {\\n\" +\n        \"                'p':'P val',\\n\" +\n        \"                'q': 'Q val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness,\"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        \"P val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        null,\n        10);\n    payload = \" {'delete' : 'y'}\";\n    TestSolrConfigHandler.runConfigCommand(harness,\"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        null,\n        10);\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93f558d9f0b5a234a28dcc95036e388fcbbadaf7","date":1446466934,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","sourceNew":"  public void testReqParams() throws Exception {\n    RestTestHarness harness = restTestHarness;\n    String payload = \" {\\n\" +\n        \"  'set' : {'x': {\" +\n        \"                    'a':'A val',\\n\" +\n        \"                    'b': 'B val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"a\"),\n        \"A val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"b\"),\n        \"B val\",\n        10);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/d', 'class': 'org.apache.solr.handler.DumpRequestHandler' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/d\", \"name\"),\n        \"/d\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?wt=json&useParams=x\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?wt=json&useParams=x&a=fomrequest\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"fomrequest\",\n        5);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump1', 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump1\", \"name\"),\n        \"/dump1\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y':{\\n\" +\n        \"                'c':'CY val',\\n\" +\n        \"                'b': 'BY val', \" +\n        \"                'd': ['val 1', 'val 2']}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"c\"),\n        \"CY val\",\n        5);\n\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"b\"),\n        \"BY val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        null,\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"d\"),\n        Arrays.asList(\"val 1\", \"val 2\"),\n        5);\n\n    payload = \" {\\n\" +\n        \"  'update' : {'y': {\\n\" +\n        \"                'c':'CY val modified',\\n\" +\n        \"                'e':'EY val',\\n\" +\n        \"                'b': 'BY val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val modified\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"e\"),\n        \"EY val\",\n        10);\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y': {\\n\" +\n        \"                'p':'P val',\\n\" +\n        \"                'q': 'Q val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        \"P val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        null,\n        10);\n    payload = \" {'delete' : 'y'}\";\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        null,\n        10);\n\n\n  }\n\n","sourceOld":"  public void testReqParams() throws Exception {\n    RestTestHarness harness = restTestHarness;\n    String payload = \" {\\n\" +\n        \"  'set' : {'x': {\" +\n        \"                    'a':'A val',\\n\" +\n        \"                    'b': 'B val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"a\"),\n        \"A val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"b\"),\n        \"B val\",\n        10);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump', 'class': 'org.apache.solr.handler.DumpRequestHandler' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump\", \"name\"),\n        \"/dump\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump?wt=json&useParams=x\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump?wt=json&useParams=x&a=fomrequest\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"fomrequest\",\n        5);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump1', 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump1\", \"name\"),\n        \"/dump1\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y':{\\n\" +\n        \"                'c':'CY val',\\n\" +\n        \"                'b': 'BY val', \" +\n        \"                'd': ['val 1', 'val 2']}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"c\"),\n        \"CY val\",\n        5);\n\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"b\"),\n        \"BY val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        null,\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"d\"),\n        Arrays.asList(\"val 1\", \"val 2\"),\n        5);\n\n    payload = \" {\\n\" +\n        \"  'update' : {'y': {\\n\" +\n        \"                'c':'CY val modified',\\n\" +\n        \"                'e':'EY val',\\n\" +\n        \"                'b': 'BY val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val modified\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"e\"),\n        \"EY val\",\n        10);\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y': {\\n\" +\n        \"                'p':'P val',\\n\" +\n        \"                'q': 'Q val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        \"P val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        null,\n        10);\n    payload = \" {'delete' : 'y'}\";\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        null,\n        10);\n\n\n  }\n\n","bugFix":["c0426db639e5d76d8bfcea5969a4442c88debdae"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b5991832ae4bac45cecfff0fc33125aeac823d3d","date":1456229449,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","sourceNew":"  public void testReqParams() throws Exception {\n    RestTestHarness harness = restTestHarness;\n    String payload = \" {\\n\" +\n        \"  'set' : {'x': {\" +\n        \"                    'a':'A val',\\n\" +\n        \"                    'b': 'B val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"a\"),\n        \"A val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"b\"),\n        \"B val\",\n        10);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/d', 'class': 'org.apache.solr.handler.DumpRequestHandler' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/d\", \"name\"),\n        \"/d\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?wt=json&useParams=x\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?wt=json&useParams=x&a=fomrequest\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"fomrequest\",\n        5);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump1', 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump1\", \"name\"),\n        \"/dump1\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y':{\\n\" +\n        \"                'c':'CY val',\\n\" +\n        \"                'b': 'BY val', \" +\n        \"                'd': ['val 1', 'val 2']}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"c\"),\n        \"CY val\",\n        5);\n\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"b\"),\n        \"BY val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"d\"),\n        Arrays.asList(\"val 1\", \"val 2\"),\n        5);\n\n    payload = \" {\\n\" +\n        \"  'update' : {'y': {\\n\" +\n        \"                'c':'CY val modified',\\n\" +\n        \"                'e':'EY val',\\n\" +\n        \"                'b': 'BY val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val modified\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"e\"),\n        \"EY val\",\n        10);\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y': {\\n\" +\n        \"                'p':'P val',\\n\" +\n        \"                'q': 'Q val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        \"P val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        null,\n        10);\n    payload = \" {'delete' : 'y'}\";\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        null,\n        10);\n\n\n  }\n\n","sourceOld":"  public void testReqParams() throws Exception {\n    RestTestHarness harness = restTestHarness;\n    String payload = \" {\\n\" +\n        \"  'set' : {'x': {\" +\n        \"                    'a':'A val',\\n\" +\n        \"                    'b': 'B val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"a\"),\n        \"A val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"b\"),\n        \"B val\",\n        10);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/d', 'class': 'org.apache.solr.handler.DumpRequestHandler' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/d\", \"name\"),\n        \"/d\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?wt=json&useParams=x\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?wt=json&useParams=x&a=fomrequest\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"fomrequest\",\n        5);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump1', 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump1\", \"name\"),\n        \"/dump1\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y':{\\n\" +\n        \"                'c':'CY val',\\n\" +\n        \"                'b': 'BY val', \" +\n        \"                'd': ['val 1', 'val 2']}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"c\"),\n        \"CY val\",\n        5);\n\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"b\"),\n        \"BY val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        null,\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"d\"),\n        Arrays.asList(\"val 1\", \"val 2\"),\n        5);\n\n    payload = \" {\\n\" +\n        \"  'update' : {'y': {\\n\" +\n        \"                'c':'CY val modified',\\n\" +\n        \"                'e':'EY val',\\n\" +\n        \"                'b': 'BY val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val modified\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"e\"),\n        \"EY val\",\n        10);\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y': {\\n\" +\n        \"                'p':'P val',\\n\" +\n        \"                'q': 'Q val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        \"P val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        null,\n        10);\n    payload = \" {'delete' : 'y'}\";\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        null,\n        10);\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a5296efc4b319f5647b606629c093a94b23692c6","date":1456267155,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","sourceNew":"  public void testReqParams() throws Exception {\n    RestTestHarness harness = restTestHarness;\n    String payload = \" {\\n\" +\n        \"  'set' : {'x': {\" +\n        \"                    'a':'A val',\\n\" +\n        \"                    'b': 'B val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"a\"),\n        \"A val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"b\"),\n        \"B val\",\n        10);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/d', 'class': 'org.apache.solr.handler.DumpRequestHandler' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/d\", \"name\"),\n        \"/d\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?wt=json&useParams=x\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?wt=json&useParams=x&a=fomrequest\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"fomrequest\",\n        5);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump1', 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump1\", \"name\"),\n        \"/dump1\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y':{\\n\" +\n        \"                'c':'CY val',\\n\" +\n        \"                'b': 'BY val', \" +\n        \"                'd': ['val 1', 'val 2']}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"c\"),\n        \"CY val\",\n        5);\n\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"b\"),\n        \"BY val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"d\"),\n        Arrays.asList(\"val 1\", \"val 2\"),\n        5);\n\n    payload = \" {\\n\" +\n        \"  'update' : {'y': {\\n\" +\n        \"                'c':'CY val modified',\\n\" +\n        \"                'e':'EY val',\\n\" +\n        \"                'b': 'BY val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val modified\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"e\"),\n        \"EY val\",\n        10);\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y': {\\n\" +\n        \"                'p':'P val',\\n\" +\n        \"                'q': 'Q val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        \"P val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        null,\n        10);\n    payload = \" {'delete' : 'y'}\";\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        null,\n        10);\n\n\n  }\n\n","sourceOld":"  public void testReqParams() throws Exception {\n    RestTestHarness harness = restTestHarness;\n    String payload = \" {\\n\" +\n        \"  'set' : {'x': {\" +\n        \"                    'a':'A val',\\n\" +\n        \"                    'b': 'B val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"a\"),\n        \"A val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"b\"),\n        \"B val\",\n        10);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/d', 'class': 'org.apache.solr.handler.DumpRequestHandler' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/d\", \"name\"),\n        \"/d\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?wt=json&useParams=x\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?wt=json&useParams=x&a=fomrequest\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"fomrequest\",\n        5);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump1', 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump1\", \"name\"),\n        \"/dump1\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y':{\\n\" +\n        \"                'c':'CY val',\\n\" +\n        \"                'b': 'BY val', \" +\n        \"                'd': ['val 1', 'val 2']}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"c\"),\n        \"CY val\",\n        5);\n\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"b\"),\n        \"BY val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        null,\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"d\"),\n        Arrays.asList(\"val 1\", \"val 2\"),\n        5);\n\n    payload = \" {\\n\" +\n        \"  'update' : {'y': {\\n\" +\n        \"                'c':'CY val modified',\\n\" +\n        \"                'e':'EY val',\\n\" +\n        \"                'b': 'BY val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val modified\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"e\"),\n        \"EY val\",\n        10);\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y': {\\n\" +\n        \"                'p':'P val',\\n\" +\n        \"                'q': 'Q val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        \"P val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        null,\n        10);\n    payload = \" {'delete' : 'y'}\";\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        null,\n        10);\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fcf710a8fcd590cf55c855d422c7a10fce3e6117","date":1485842253,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","sourceNew":"  public void testReqParams() throws Exception {\n    RestTestHarness harness = restTestHarness;\n    String payload = \" {\\n\" +\n        \"  'set' : {'x': {\" +\n        \"                    'a':'A val',\\n\" +\n        \"                    'b': 'B val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"a\"),\n        \"A val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"b\"),\n        \"B val\",\n        10);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/d', registerPath :'/,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/d\", \"name\"),\n        \"/d\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?wt=json&useParams=x\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?wt=json&useParams=x&a=fomrequest\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"fomrequest\",\n        5);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump1', registerPath :'/,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump1\", \"name\"),\n        \"/dump1\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y':{\\n\" +\n        \"                'c':'CY val',\\n\" +\n        \"                'b': 'BY val', \" +\n        \"                'd': ['val 1', 'val 2']}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"c\"),\n        \"CY val\",\n        5);\n\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"b\"),\n        \"BY val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"d\"),\n        Arrays.asList(\"val 1\", \"val 2\"),\n        5);\n\n    payload = \" {\\n\" +\n        \"  'update' : {'y': {\\n\" +\n        \"                'c':'CY val modified',\\n\" +\n        \"                'e':'EY val',\\n\" +\n        \"                'b': 'BY val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val modified\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"e\"),\n        \"EY val\",\n        10);\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y': {\\n\" +\n        \"                'p':'P val',\\n\" +\n        \"                'q': 'Q val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        \"P val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        null,\n        10);\n    payload = \" {'delete' : 'y'}\";\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        null,\n        10);\n\n    payload = \"{\\n\" +\n        \"  'create-requesthandler': {\\n\" +\n        \"    'name': 'aRequestHandler',\\n\" +\n        \"    'registerPath': '/v2',\\n\" +\n        \"    'class': 'org.apache.solr.handler.DumpRequestHandler',\\n\" +\n        \"    'spec': {\\n\" +\n        \"      'methods': [\\n\" +\n        \"        'GET',\\n\" +\n        \"        'POST'\\n\" +\n        \"      ],\\n\" +\n        \"      'url': {\\n\" +\n        \"        'paths': [\\n\" +\n        \"          '/something/{part1}/fixed/{part2}'\\n\" +\n        \"        ]\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"aRequestHandler\", \"class\"),\n        \"org.apache.solr.handler.DumpRequestHandler\",\n        10);\n    RESTfulServerProvider oldProvider = restTestHarness.getServerProvider();\n    restTestHarness.setServerProvider(() -> jetty.getBaseUrl().toString() + \"/v2/cores/\" + DEFAULT_TEST_CORENAME);\n\n    Map rsp = TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/something/part1_Value/fixed/part2_Value?urlTemplateValues=part1&urlTemplateValues=part2\",\n        null,\n        Arrays.asList(\"urlTemplateValues\"),\n        new ValidatingJsonMap.PredicateWithErrMsg() {\n          @Override\n          public String test(Object o) {\n            if (o instanceof Map) {\n              Map m = (Map) o;\n              if (\"part1_Value\".equals(m.get(\"part1\"))  && \"part2_Value\".equals(m.get(\"part2\"))) return null;\n\n            }\n            return \"no match\";\n          }\n\n          @Override\n          public String toString() {\n            return \"{part1:part1_Value, part2 : part2_Value]\";\n          }\n        },\n        10);\n    restTestHarness.setServerProvider(oldProvider);\n\n  }\n\n","sourceOld":"  public void testReqParams() throws Exception {\n    RestTestHarness harness = restTestHarness;\n    String payload = \" {\\n\" +\n        \"  'set' : {'x': {\" +\n        \"                    'a':'A val',\\n\" +\n        \"                    'b': 'B val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"a\"),\n        \"A val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"b\"),\n        \"B val\",\n        10);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/d', 'class': 'org.apache.solr.handler.DumpRequestHandler' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/d\", \"name\"),\n        \"/d\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?wt=json&useParams=x\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?wt=json&useParams=x&a=fomrequest\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"fomrequest\",\n        5);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump1', 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump1\", \"name\"),\n        \"/dump1\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y':{\\n\" +\n        \"                'c':'CY val',\\n\" +\n        \"                'b': 'BY val', \" +\n        \"                'd': ['val 1', 'val 2']}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"c\"),\n        \"CY val\",\n        5);\n\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"b\"),\n        \"BY val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"d\"),\n        Arrays.asList(\"val 1\", \"val 2\"),\n        5);\n\n    payload = \" {\\n\" +\n        \"  'update' : {'y': {\\n\" +\n        \"                'c':'CY val modified',\\n\" +\n        \"                'e':'EY val',\\n\" +\n        \"                'b': 'BY val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val modified\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"e\"),\n        \"EY val\",\n        10);\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y': {\\n\" +\n        \"                'p':'P val',\\n\" +\n        \"                'q': 'Q val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        \"P val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        null,\n        10);\n    payload = \" {'delete' : 'y'}\";\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        null,\n        10);\n\n\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c3523a0ab04c3002eee3896c75ea5f10f388bcc","date":1485968422,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","sourceNew":"  public void testReqParams() throws Exception {\n    RestTestHarness harness = restTestHarness;\n    String payload = \" {\\n\" +\n        \"  'set' : {'x': {\" +\n        \"                    'a':'A val',\\n\" +\n        \"                    'b': 'B val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"a\"),\n        \"A val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"b\"),\n        \"B val\",\n        10);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/d', registerPath :'/,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/d\", \"name\"),\n        \"/d\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?wt=json&useParams=x\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?wt=json&useParams=x&a=fomrequest\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"fomrequest\",\n        5);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump1', registerPath :'/,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump1\", \"name\"),\n        \"/dump1\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y':{\\n\" +\n        \"                'c':'CY val',\\n\" +\n        \"                'b': 'BY val', \" +\n        \"                'd': ['val 1', 'val 2']}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"c\"),\n        \"CY val\",\n        5);\n\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"b\"),\n        \"BY val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"d\"),\n        Arrays.asList(\"val 1\", \"val 2\"),\n        5);\n\n    payload = \" {\\n\" +\n        \"  'update' : {'y': {\\n\" +\n        \"                'c':'CY val modified',\\n\" +\n        \"                'e':'EY val',\\n\" +\n        \"                'b': 'BY val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val modified\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"e\"),\n        \"EY val\",\n        10);\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y': {\\n\" +\n        \"                'p':'P val',\\n\" +\n        \"                'q': 'Q val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        \"P val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        null,\n        10);\n    payload = \" {'delete' : 'y'}\";\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        null,\n        10);\n\n    payload = \"{\\n\" +\n        \"  'create-requesthandler': {\\n\" +\n        \"    'name': 'aRequestHandler',\\n\" +\n        \"    'registerPath': '/v2',\\n\" +\n        \"    'class': 'org.apache.solr.handler.DumpRequestHandler',\\n\" +\n        \"    'spec': {\\n\" +\n        \"      'methods': [\\n\" +\n        \"        'GET',\\n\" +\n        \"        'POST'\\n\" +\n        \"      ],\\n\" +\n        \"      'url': {\\n\" +\n        \"        'paths': [\\n\" +\n        \"          '/something/{part1}/fixed/{part2}'\\n\" +\n        \"        ]\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"aRequestHandler\", \"class\"),\n        \"org.apache.solr.handler.DumpRequestHandler\",\n        10);\n    RESTfulServerProvider oldProvider = restTestHarness.getServerProvider();\n    restTestHarness.setServerProvider(() -> jetty.getBaseUrl().toString() + \"/v2/cores/\" + DEFAULT_TEST_CORENAME);\n\n    Map rsp = TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/something/part1_Value/fixed/part2_Value?urlTemplateValues=part1&urlTemplateValues=part2\",\n        null,\n        Arrays.asList(\"urlTemplateValues\"),\n        new ValidatingJsonMap.PredicateWithErrMsg() {\n          @Override\n          public String test(Object o) {\n            if (o instanceof Map) {\n              Map m = (Map) o;\n              if (\"part1_Value\".equals(m.get(\"part1\"))  && \"part2_Value\".equals(m.get(\"part2\"))) return null;\n\n            }\n            return \"no match\";\n          }\n\n          @Override\n          public String toString() {\n            return \"{part1:part1_Value, part2 : part2_Value]\";\n          }\n        },\n        10);\n    restTestHarness.setServerProvider(oldProvider);\n\n  }\n\n","sourceOld":"  public void testReqParams() throws Exception {\n    RestTestHarness harness = restTestHarness;\n    String payload = \" {\\n\" +\n        \"  'set' : {'x': {\" +\n        \"                    'a':'A val',\\n\" +\n        \"                    'b': 'B val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"a\"),\n        \"A val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"b\"),\n        \"B val\",\n        10);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/d', 'class': 'org.apache.solr.handler.DumpRequestHandler' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/d\", \"name\"),\n        \"/d\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?wt=json&useParams=x\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?wt=json&useParams=x&a=fomrequest\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"fomrequest\",\n        5);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump1', 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump1\", \"name\"),\n        \"/dump1\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y':{\\n\" +\n        \"                'c':'CY val',\\n\" +\n        \"                'b': 'BY val', \" +\n        \"                'd': ['val 1', 'val 2']}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"c\"),\n        \"CY val\",\n        5);\n\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"b\"),\n        \"BY val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"d\"),\n        Arrays.asList(\"val 1\", \"val 2\"),\n        5);\n\n    payload = \" {\\n\" +\n        \"  'update' : {'y': {\\n\" +\n        \"                'c':'CY val modified',\\n\" +\n        \"                'e':'EY val',\\n\" +\n        \"                'b': 'BY val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val modified\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"e\"),\n        \"EY val\",\n        10);\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y': {\\n\" +\n        \"                'p':'P val',\\n\" +\n        \"                'q': 'Q val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        \"P val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        null,\n        10);\n    payload = \" {'delete' : 'y'}\";\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        null,\n        10);\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a8ab788212d72a7c436e5ef349ca99fe3c8fc78b","date":1489203052,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","sourceNew":"  public void testReqParams() throws Exception {\n    RestTestHarness harness = restTestHarness;\n    String payload = \" {\\n\" +\n        \"  'set' : {'x': {\" +\n        \"                    'a':'A val',\\n\" +\n        \"                    'b': 'B val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"a\"),\n        \"A val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"b\"),\n        \"B val\",\n        10);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/d', registerPath :'/solr,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/d\", \"name\"),\n        \"/d\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?wt=json&useParams=x\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?wt=json&useParams=x&a=fomrequest\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"fomrequest\",\n        5);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump1', registerPath :'/solr,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump1\", \"name\"),\n        \"/dump1\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y':{\\n\" +\n        \"                'c':'CY val',\\n\" +\n        \"                'b': 'BY val', \" +\n        \"                'd': ['val 1', 'val 2']}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"c\"),\n        \"CY val\",\n        5);\n\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"b\"),\n        \"BY val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"d\"),\n        Arrays.asList(\"val 1\", \"val 2\"),\n        5);\n\n    payload = \" {\\n\" +\n        \"  'update' : {'y': {\\n\" +\n        \"                'c':'CY val modified',\\n\" +\n        \"                'e':'EY val',\\n\" +\n        \"                'b': 'BY val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val modified\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"e\"),\n        \"EY val\",\n        10);\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y': {\\n\" +\n        \"                'p':'P val',\\n\" +\n        \"                'q': 'Q val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        \"P val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        null,\n        10);\n    payload = \" {'delete' : 'y'}\";\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        null,\n        10);\n\n    payload = \"{\\n\" +\n        \"  'create-requesthandler': {\\n\" +\n        \"    'name': 'aRequestHandler',\\n\" +\n        \"    'registerPath': '/v2',\\n\" +\n        \"    'class': 'org.apache.solr.handler.DumpRequestHandler',\\n\" +\n        \"    'spec': {\\n\" +\n        \"      'methods': [\\n\" +\n        \"        'GET',\\n\" +\n        \"        'POST'\\n\" +\n        \"      ],\\n\" +\n        \"      'url': {\\n\" +\n        \"        'paths': [\\n\" +\n        \"          '/something/{part1}/fixed/{part2}'\\n\" +\n        \"        ]\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"aRequestHandler\", \"class\"),\n        \"org.apache.solr.handler.DumpRequestHandler\",\n        10);\n    RESTfulServerProvider oldProvider = restTestHarness.getServerProvider();\n    restTestHarness.setServerProvider(() -> jetty.getBaseUrl().toString() + \"/____v2/cores/\" + DEFAULT_TEST_CORENAME);\n\n    Map rsp = TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/something/part1_Value/fixed/part2_Value?urlTemplateValues=part1&urlTemplateValues=part2\",\n        null,\n        Arrays.asList(\"urlTemplateValues\"),\n        new ValidatingJsonMap.PredicateWithErrMsg() {\n          @Override\n          public String test(Object o) {\n            if (o instanceof Map) {\n              Map m = (Map) o;\n              if (\"part1_Value\".equals(m.get(\"part1\"))  && \"part2_Value\".equals(m.get(\"part2\"))) return null;\n\n            }\n            return \"no match\";\n          }\n\n          @Override\n          public String toString() {\n            return \"{part1:part1_Value, part2 : part2_Value]\";\n          }\n        },\n        10);\n    restTestHarness.setServerProvider(oldProvider);\n\n  }\n\n","sourceOld":"  public void testReqParams() throws Exception {\n    RestTestHarness harness = restTestHarness;\n    String payload = \" {\\n\" +\n        \"  'set' : {'x': {\" +\n        \"                    'a':'A val',\\n\" +\n        \"                    'b': 'B val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"a\"),\n        \"A val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"b\"),\n        \"B val\",\n        10);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/d', registerPath :'/,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/d\", \"name\"),\n        \"/d\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?wt=json&useParams=x\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?wt=json&useParams=x&a=fomrequest\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"fomrequest\",\n        5);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump1', registerPath :'/,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump1\", \"name\"),\n        \"/dump1\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y':{\\n\" +\n        \"                'c':'CY val',\\n\" +\n        \"                'b': 'BY val', \" +\n        \"                'd': ['val 1', 'val 2']}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"c\"),\n        \"CY val\",\n        5);\n\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"b\"),\n        \"BY val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"d\"),\n        Arrays.asList(\"val 1\", \"val 2\"),\n        5);\n\n    payload = \" {\\n\" +\n        \"  'update' : {'y': {\\n\" +\n        \"                'c':'CY val modified',\\n\" +\n        \"                'e':'EY val',\\n\" +\n        \"                'b': 'BY val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val modified\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"e\"),\n        \"EY val\",\n        10);\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y': {\\n\" +\n        \"                'p':'P val',\\n\" +\n        \"                'q': 'Q val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        \"P val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        null,\n        10);\n    payload = \" {'delete' : 'y'}\";\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        null,\n        10);\n\n    payload = \"{\\n\" +\n        \"  'create-requesthandler': {\\n\" +\n        \"    'name': 'aRequestHandler',\\n\" +\n        \"    'registerPath': '/v2',\\n\" +\n        \"    'class': 'org.apache.solr.handler.DumpRequestHandler',\\n\" +\n        \"    'spec': {\\n\" +\n        \"      'methods': [\\n\" +\n        \"        'GET',\\n\" +\n        \"        'POST'\\n\" +\n        \"      ],\\n\" +\n        \"      'url': {\\n\" +\n        \"        'paths': [\\n\" +\n        \"          '/something/{part1}/fixed/{part2}'\\n\" +\n        \"        ]\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"aRequestHandler\", \"class\"),\n        \"org.apache.solr.handler.DumpRequestHandler\",\n        10);\n    RESTfulServerProvider oldProvider = restTestHarness.getServerProvider();\n    restTestHarness.setServerProvider(() -> jetty.getBaseUrl().toString() + \"/v2/cores/\" + DEFAULT_TEST_CORENAME);\n\n    Map rsp = TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/something/part1_Value/fixed/part2_Value?urlTemplateValues=part1&urlTemplateValues=part2\",\n        null,\n        Arrays.asList(\"urlTemplateValues\"),\n        new ValidatingJsonMap.PredicateWithErrMsg() {\n          @Override\n          public String test(Object o) {\n            if (o instanceof Map) {\n              Map m = (Map) o;\n              if (\"part1_Value\".equals(m.get(\"part1\"))  && \"part2_Value\".equals(m.get(\"part2\"))) return null;\n\n            }\n            return \"no match\";\n          }\n\n          @Override\n          public String toString() {\n            return \"{part1:part1_Value, part2 : part2_Value]\";\n          }\n        },\n        10);\n    restTestHarness.setServerProvider(oldProvider);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ac1e7fa558287a811ea07634d815ee7b1c541284","date":1500910922,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","sourceNew":"  public void testReqParams() throws Exception {\n    RestTestHarness harness = restTestHarness;\n    String payload = \" {\\n\" +\n        \"  'set' : {'x': {\" +\n        \"                    'a':'A val',\\n\" +\n        \"                    'b': 'B val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"a\"),\n        \"A val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"b\"),\n        \"B val\",\n        10);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/d', registerPath :'/solr,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/overlay\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/d\", \"name\"),\n        \"/d\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?useParams=x\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?useParams=x&a=fomrequest\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"fomrequest\",\n        5);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump1', registerPath :'/solr,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump1\", \"name\"),\n        \"/dump1\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y':{\\n\" +\n        \"                'c':'CY val',\\n\" +\n        \"                'b': 'BY val', \" +\n        \"                'd': ['val 1', 'val 2']}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"c\"),\n        \"CY val\",\n        5);\n\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"b\"),\n        \"BY val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"d\"),\n        Arrays.asList(\"val 1\", \"val 2\"),\n        5);\n\n    payload = \" {\\n\" +\n        \"  'update' : {'y': {\\n\" +\n        \"                'c':'CY val modified',\\n\" +\n        \"                'e':'EY val',\\n\" +\n        \"                'b': 'BY val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val modified\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"e\"),\n        \"EY val\",\n        10);\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y': {\\n\" +\n        \"                'p':'P val',\\n\" +\n        \"                'q': 'Q val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        \"P val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        null,\n        10);\n    payload = \" {'delete' : 'y'}\";\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        null,\n        10);\n\n    payload = \"{\\n\" +\n        \"  'create-requesthandler': {\\n\" +\n        \"    'name': 'aRequestHandler',\\n\" +\n        \"    'registerPath': '/v2',\\n\" +\n        \"    'class': 'org.apache.solr.handler.DumpRequestHandler',\\n\" +\n        \"    'spec': {\\n\" +\n        \"      'methods': [\\n\" +\n        \"        'GET',\\n\" +\n        \"        'POST'\\n\" +\n        \"      ],\\n\" +\n        \"      'url': {\\n\" +\n        \"        'paths': [\\n\" +\n        \"          '/something/{part1}/fixed/{part2}'\\n\" +\n        \"        ]\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config\", payload);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"aRequestHandler\", \"class\"),\n        \"org.apache.solr.handler.DumpRequestHandler\",\n        10);\n    RESTfulServerProvider oldProvider = restTestHarness.getServerProvider();\n    restTestHarness.setServerProvider(() -> jetty.getBaseUrl().toString() + \"/____v2/cores/\" + DEFAULT_TEST_CORENAME);\n\n    Map rsp = TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/something/part1_Value/fixed/part2_Value?urlTemplateValues=part1&urlTemplateValues=part2\",\n        null,\n        Arrays.asList(\"urlTemplateValues\"),\n        new ValidatingJsonMap.PredicateWithErrMsg() {\n          @Override\n          public String test(Object o) {\n            if (o instanceof Map) {\n              Map m = (Map) o;\n              if (\"part1_Value\".equals(m.get(\"part1\"))  && \"part2_Value\".equals(m.get(\"part2\"))) return null;\n\n            }\n            return \"no match\";\n          }\n\n          @Override\n          public String toString() {\n            return \"{part1:part1_Value, part2 : part2_Value]\";\n          }\n        },\n        10);\n    restTestHarness.setServerProvider(oldProvider);\n\n  }\n\n","sourceOld":"  public void testReqParams() throws Exception {\n    RestTestHarness harness = restTestHarness;\n    String payload = \" {\\n\" +\n        \"  'set' : {'x': {\" +\n        \"                    'a':'A val',\\n\" +\n        \"                    'b': 'B val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"a\"),\n        \"A val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"b\"),\n        \"B val\",\n        10);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/d', registerPath :'/solr,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/d\", \"name\"),\n        \"/d\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?wt=json&useParams=x\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?wt=json&useParams=x&a=fomrequest\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"fomrequest\",\n        5);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump1', registerPath :'/solr,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump1\", \"name\"),\n        \"/dump1\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y':{\\n\" +\n        \"                'c':'CY val',\\n\" +\n        \"                'b': 'BY val', \" +\n        \"                'd': ['val 1', 'val 2']}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"c\"),\n        \"CY val\",\n        5);\n\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"b\"),\n        \"BY val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"d\"),\n        Arrays.asList(\"val 1\", \"val 2\"),\n        5);\n\n    payload = \" {\\n\" +\n        \"  'update' : {'y': {\\n\" +\n        \"                'c':'CY val modified',\\n\" +\n        \"                'e':'EY val',\\n\" +\n        \"                'b': 'BY val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val modified\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"e\"),\n        \"EY val\",\n        10);\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y': {\\n\" +\n        \"                'p':'P val',\\n\" +\n        \"                'q': 'Q val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        \"P val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        null,\n        10);\n    payload = \" {'delete' : 'y'}\";\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        null,\n        10);\n\n    payload = \"{\\n\" +\n        \"  'create-requesthandler': {\\n\" +\n        \"    'name': 'aRequestHandler',\\n\" +\n        \"    'registerPath': '/v2',\\n\" +\n        \"    'class': 'org.apache.solr.handler.DumpRequestHandler',\\n\" +\n        \"    'spec': {\\n\" +\n        \"      'methods': [\\n\" +\n        \"        'GET',\\n\" +\n        \"        'POST'\\n\" +\n        \"      ],\\n\" +\n        \"      'url': {\\n\" +\n        \"        'paths': [\\n\" +\n        \"          '/something/{part1}/fixed/{part2}'\\n\" +\n        \"        ]\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"aRequestHandler\", \"class\"),\n        \"org.apache.solr.handler.DumpRequestHandler\",\n        10);\n    RESTfulServerProvider oldProvider = restTestHarness.getServerProvider();\n    restTestHarness.setServerProvider(() -> jetty.getBaseUrl().toString() + \"/____v2/cores/\" + DEFAULT_TEST_CORENAME);\n\n    Map rsp = TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/something/part1_Value/fixed/part2_Value?urlTemplateValues=part1&urlTemplateValues=part2\",\n        null,\n        Arrays.asList(\"urlTemplateValues\"),\n        new ValidatingJsonMap.PredicateWithErrMsg() {\n          @Override\n          public String test(Object o) {\n            if (o instanceof Map) {\n              Map m = (Map) o;\n              if (\"part1_Value\".equals(m.get(\"part1\"))  && \"part2_Value\".equals(m.get(\"part2\"))) return null;\n\n            }\n            return \"no match\";\n          }\n\n          @Override\n          public String toString() {\n            return \"{part1:part1_Value, part2 : part2_Value]\";\n          }\n        },\n        10);\n    restTestHarness.setServerProvider(oldProvider);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"936cdd5882761db3b844afd6f84ab81cbb011a75","date":1500973524,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","sourceNew":"  public void testReqParams() throws Exception {\n    RestTestHarness harness = restTestHarness;\n    String payload = \" {\\n\" +\n        \"  'set' : {'x': {\" +\n        \"                    'a':'A val',\\n\" +\n        \"                    'b': 'B val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"a\"),\n        \"A val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"b\"),\n        \"B val\",\n        10);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/d', registerPath :'/solr,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/overlay\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/d\", \"name\"),\n        \"/d\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?useParams=x\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?useParams=x&a=fomrequest\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"fomrequest\",\n        5);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump1', registerPath :'/solr,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump1\", \"name\"),\n        \"/dump1\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y':{\\n\" +\n        \"                'c':'CY val',\\n\" +\n        \"                'b': 'BY val', \" +\n        \"                'd': ['val 1', 'val 2']}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"c\"),\n        \"CY val\",\n        5);\n\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"b\"),\n        \"BY val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"d\"),\n        Arrays.asList(\"val 1\", \"val 2\"),\n        5);\n\n    payload = \" {\\n\" +\n        \"  'update' : {'y': {\\n\" +\n        \"                'c':'CY val modified',\\n\" +\n        \"                'e':'EY val',\\n\" +\n        \"                'b': 'BY val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val modified\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"e\"),\n        \"EY val\",\n        10);\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y': {\\n\" +\n        \"                'p':'P val',\\n\" +\n        \"                'q': 'Q val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        \"P val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        null,\n        10);\n    payload = \" {'delete' : 'y'}\";\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        null,\n        10);\n\n    payload = \"{\\n\" +\n        \"  'create-requesthandler': {\\n\" +\n        \"    'name': 'aRequestHandler',\\n\" +\n        \"    'registerPath': '/v2',\\n\" +\n        \"    'class': 'org.apache.solr.handler.DumpRequestHandler',\\n\" +\n        \"    'spec': {\\n\" +\n        \"      'methods': [\\n\" +\n        \"        'GET',\\n\" +\n        \"        'POST'\\n\" +\n        \"      ],\\n\" +\n        \"      'url': {\\n\" +\n        \"        'paths': [\\n\" +\n        \"          '/something/{part1}/fixed/{part2}'\\n\" +\n        \"        ]\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config\", payload);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"aRequestHandler\", \"class\"),\n        \"org.apache.solr.handler.DumpRequestHandler\",\n        10);\n    RESTfulServerProvider oldProvider = restTestHarness.getServerProvider();\n    restTestHarness.setServerProvider(() -> jetty.getBaseUrl().toString() + \"/____v2/cores/\" + DEFAULT_TEST_CORENAME);\n\n    Map rsp = TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/something/part1_Value/fixed/part2_Value?urlTemplateValues=part1&urlTemplateValues=part2\",\n        null,\n        Arrays.asList(\"urlTemplateValues\"),\n        new ValidatingJsonMap.PredicateWithErrMsg() {\n          @Override\n          public String test(Object o) {\n            if (o instanceof Map) {\n              Map m = (Map) o;\n              if (\"part1_Value\".equals(m.get(\"part1\"))  && \"part2_Value\".equals(m.get(\"part2\"))) return null;\n\n            }\n            return \"no match\";\n          }\n\n          @Override\n          public String toString() {\n            return \"{part1:part1_Value, part2 : part2_Value]\";\n          }\n        },\n        10);\n    restTestHarness.setServerProvider(oldProvider);\n\n  }\n\n","sourceOld":"  public void testReqParams() throws Exception {\n    RestTestHarness harness = restTestHarness;\n    String payload = \" {\\n\" +\n        \"  'set' : {'x': {\" +\n        \"                    'a':'A val',\\n\" +\n        \"                    'b': 'B val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"a\"),\n        \"A val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"b\"),\n        \"B val\",\n        10);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/d', registerPath :'/solr,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/d\", \"name\"),\n        \"/d\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?wt=json&useParams=x\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?wt=json&useParams=x&a=fomrequest\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"fomrequest\",\n        5);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump1', registerPath :'/solr,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump1\", \"name\"),\n        \"/dump1\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y':{\\n\" +\n        \"                'c':'CY val',\\n\" +\n        \"                'b': 'BY val', \" +\n        \"                'd': ['val 1', 'val 2']}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"c\"),\n        \"CY val\",\n        5);\n\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"b\"),\n        \"BY val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"d\"),\n        Arrays.asList(\"val 1\", \"val 2\"),\n        5);\n\n    payload = \" {\\n\" +\n        \"  'update' : {'y': {\\n\" +\n        \"                'c':'CY val modified',\\n\" +\n        \"                'e':'EY val',\\n\" +\n        \"                'b': 'BY val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val modified\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"e\"),\n        \"EY val\",\n        10);\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y': {\\n\" +\n        \"                'p':'P val',\\n\" +\n        \"                'q': 'Q val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        \"P val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        null,\n        10);\n    payload = \" {'delete' : 'y'}\";\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        null,\n        10);\n\n    payload = \"{\\n\" +\n        \"  'create-requesthandler': {\\n\" +\n        \"    'name': 'aRequestHandler',\\n\" +\n        \"    'registerPath': '/v2',\\n\" +\n        \"    'class': 'org.apache.solr.handler.DumpRequestHandler',\\n\" +\n        \"    'spec': {\\n\" +\n        \"      'methods': [\\n\" +\n        \"        'GET',\\n\" +\n        \"        'POST'\\n\" +\n        \"      ],\\n\" +\n        \"      'url': {\\n\" +\n        \"        'paths': [\\n\" +\n        \"          '/something/{part1}/fixed/{part2}'\\n\" +\n        \"        ]\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"aRequestHandler\", \"class\"),\n        \"org.apache.solr.handler.DumpRequestHandler\",\n        10);\n    RESTfulServerProvider oldProvider = restTestHarness.getServerProvider();\n    restTestHarness.setServerProvider(() -> jetty.getBaseUrl().toString() + \"/____v2/cores/\" + DEFAULT_TEST_CORENAME);\n\n    Map rsp = TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/something/part1_Value/fixed/part2_Value?urlTemplateValues=part1&urlTemplateValues=part2\",\n        null,\n        Arrays.asList(\"urlTemplateValues\"),\n        new ValidatingJsonMap.PredicateWithErrMsg() {\n          @Override\n          public String test(Object o) {\n            if (o instanceof Map) {\n              Map m = (Map) o;\n              if (\"part1_Value\".equals(m.get(\"part1\"))  && \"part2_Value\".equals(m.get(\"part2\"))) return null;\n\n            }\n            return \"no match\";\n          }\n\n          @Override\n          public String toString() {\n            return \"{part1:part1_Value, part2 : part2_Value]\";\n          }\n        },\n        10);\n    restTestHarness.setServerProvider(oldProvider);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a52341299179de5479672f7cf518bf4b173f34b3","date":1501079746,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","sourceNew":"  public void testReqParams() throws Exception {\n    RestTestHarness harness = restTestHarness;\n    String payload = \" {\\n\" +\n        \"  'set' : {'x': {\" +\n        \"                    'a':'A val',\\n\" +\n        \"                    'b': 'B val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"a\"),\n        \"A val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"b\"),\n        \"B val\",\n        10);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/d', registerPath :'/solr,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/overlay\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/d\", \"name\"),\n        \"/d\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?useParams=x\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?useParams=x&a=fomrequest\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"fomrequest\",\n        5);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump1', registerPath :'/solr,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump1\", \"name\"),\n        \"/dump1\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y':{\\n\" +\n        \"                'c':'CY val',\\n\" +\n        \"                'b': 'BY val', \" +\n        \"                'd': ['val 1', 'val 2']}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"c\"),\n        \"CY val\",\n        5);\n\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"b\"),\n        \"BY val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"d\"),\n        Arrays.asList(\"val 1\", \"val 2\"),\n        5);\n\n    payload = \" {\\n\" +\n        \"  'update' : {'y': {\\n\" +\n        \"                'c':'CY val modified',\\n\" +\n        \"                'e':'EY val',\\n\" +\n        \"                'b': 'BY val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val modified\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"e\"),\n        \"EY val\",\n        10);\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y': {\\n\" +\n        \"                'p':'P val',\\n\" +\n        \"                'q': 'Q val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        \"P val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        null,\n        10);\n    payload = \" {'delete' : 'y'}\";\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        null,\n        10);\n\n    payload = \"{\\n\" +\n        \"  'create-requesthandler': {\\n\" +\n        \"    'name': 'aRequestHandler',\\n\" +\n        \"    'registerPath': '/v2',\\n\" +\n        \"    'class': 'org.apache.solr.handler.DumpRequestHandler',\\n\" +\n        \"    'spec': {\\n\" +\n        \"      'methods': [\\n\" +\n        \"        'GET',\\n\" +\n        \"        'POST'\\n\" +\n        \"      ],\\n\" +\n        \"      'url': {\\n\" +\n        \"        'paths': [\\n\" +\n        \"          '/something/{part1}/fixed/{part2}'\\n\" +\n        \"        ]\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config\", payload);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"aRequestHandler\", \"class\"),\n        \"org.apache.solr.handler.DumpRequestHandler\",\n        10);\n    RESTfulServerProvider oldProvider = restTestHarness.getServerProvider();\n    restTestHarness.setServerProvider(() -> jetty.getBaseUrl().toString() + \"/____v2/cores/\" + DEFAULT_TEST_CORENAME);\n\n    Map rsp = TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/something/part1_Value/fixed/part2_Value?urlTemplateValues=part1&urlTemplateValues=part2\",\n        null,\n        Arrays.asList(\"urlTemplateValues\"),\n        new ValidatingJsonMap.PredicateWithErrMsg() {\n          @Override\n          public String test(Object o) {\n            if (o instanceof Map) {\n              Map m = (Map) o;\n              if (\"part1_Value\".equals(m.get(\"part1\"))  && \"part2_Value\".equals(m.get(\"part2\"))) return null;\n\n            }\n            return \"no match\";\n          }\n\n          @Override\n          public String toString() {\n            return \"{part1:part1_Value, part2 : part2_Value]\";\n          }\n        },\n        10);\n    restTestHarness.setServerProvider(oldProvider);\n\n  }\n\n","sourceOld":"  public void testReqParams() throws Exception {\n    RestTestHarness harness = restTestHarness;\n    String payload = \" {\\n\" +\n        \"  'set' : {'x': {\" +\n        \"                    'a':'A val',\\n\" +\n        \"                    'b': 'B val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"a\"),\n        \"A val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"b\"),\n        \"B val\",\n        10);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/d', registerPath :'/solr,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/d\", \"name\"),\n        \"/d\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?wt=json&useParams=x\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?wt=json&useParams=x&a=fomrequest\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"fomrequest\",\n        5);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump1', registerPath :'/solr,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump1\", \"name\"),\n        \"/dump1\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y':{\\n\" +\n        \"                'c':'CY val',\\n\" +\n        \"                'b': 'BY val', \" +\n        \"                'd': ['val 1', 'val 2']}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"c\"),\n        \"CY val\",\n        5);\n\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"b\"),\n        \"BY val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?wt=json&useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"d\"),\n        Arrays.asList(\"val 1\", \"val 2\"),\n        5);\n\n    payload = \" {\\n\" +\n        \"  'update' : {'y': {\\n\" +\n        \"                'c':'CY val modified',\\n\" +\n        \"                'e':'EY val',\\n\" +\n        \"                'b': 'BY val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val modified\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"e\"),\n        \"EY val\",\n        10);\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y': {\\n\" +\n        \"                'p':'P val',\\n\" +\n        \"                'q': 'Q val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        \"P val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        null,\n        10);\n    payload = \" {'delete' : 'y'}\";\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params?wt=json\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        null,\n        10);\n\n    payload = \"{\\n\" +\n        \"  'create-requesthandler': {\\n\" +\n        \"    'name': 'aRequestHandler',\\n\" +\n        \"    'registerPath': '/v2',\\n\" +\n        \"    'class': 'org.apache.solr.handler.DumpRequestHandler',\\n\" +\n        \"    'spec': {\\n\" +\n        \"      'methods': [\\n\" +\n        \"        'GET',\\n\" +\n        \"        'POST'\\n\" +\n        \"      ],\\n\" +\n        \"      'url': {\\n\" +\n        \"        'paths': [\\n\" +\n        \"          '/something/{part1}/fixed/{part2}'\\n\" +\n        \"        ]\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config?wt=json\", payload);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay?wt=json\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"aRequestHandler\", \"class\"),\n        \"org.apache.solr.handler.DumpRequestHandler\",\n        10);\n    RESTfulServerProvider oldProvider = restTestHarness.getServerProvider();\n    restTestHarness.setServerProvider(() -> jetty.getBaseUrl().toString() + \"/____v2/cores/\" + DEFAULT_TEST_CORENAME);\n\n    Map rsp = TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/something/part1_Value/fixed/part2_Value?urlTemplateValues=part1&urlTemplateValues=part2\",\n        null,\n        Arrays.asList(\"urlTemplateValues\"),\n        new ValidatingJsonMap.PredicateWithErrMsg() {\n          @Override\n          public String test(Object o) {\n            if (o instanceof Map) {\n              Map m = (Map) o;\n              if (\"part1_Value\".equals(m.get(\"part1\"))  && \"part2_Value\".equals(m.get(\"part2\"))) return null;\n\n            }\n            return \"no match\";\n          }\n\n          @Override\n          public String toString() {\n            return \"{part1:part1_Value, part2 : part2_Value]\";\n          }\n        },\n        10);\n    restTestHarness.setServerProvider(oldProvider);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9c9780b447ddf847479e7fa9978cb7809a15a0bf","date":1538692320,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","sourceNew":"  public void testReqParams() throws Exception {\n    RestTestHarness harness = restTestHarness;\n    String payload = \" {\\n\" +\n        \"  'set' : {'x': {\" +\n        \"                    'a':'A val',\\n\" +\n        \"                    'b': 'B val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"x\", \"a\"),\n        \"A val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"x\", \"b\"),\n        \"B val\",\n        10);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/d', registerPath :'/solr,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/overlay\",\n        null,\n        asList(\"overlay\", \"requestHandler\", \"/d\", \"name\"),\n        \"/d\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?useParams=x\",\n        null,\n        asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?useParams=x&a=fomrequest\",\n        null,\n        asList(\"params\", \"a\"),\n        \"fomrequest\",\n        5);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump1', registerPath :'/solr,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay\",\n        null,\n        asList(\"overlay\", \"requestHandler\", \"/dump1\", \"name\"),\n        \"/dump1\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1\",\n        null,\n        asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y':{\\n\" +\n        \"                'c':'CY val',\\n\" +\n        \"                'b': 'BY val', \" +\n        \"                'd': ['val 1', 'val 2']}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        asList(\"params\", \"c\"),\n        \"CY val\",\n        5);\n\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        asList(\"params\", \"b\"),\n        \"BY val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        asList(\"params\", \"d\"),\n        asList(\"val 1\", \"val 2\"),\n        5);\n\n    payload = \" {\\n\" +\n        \"  'update' : {'y': {\\n\" +\n        \"                'c':'CY val modified',\\n\" +\n        \"                'e':'EY val',\\n\" +\n        \"                'b': 'BY val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val modified\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"y\", \"e\"),\n        \"EY val\",\n        10);\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y': {\\n\" +\n        \"                'p':'P val',\\n\" +\n        \"                'q': 'Q val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"y\", \"p\"),\n        \"P val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"y\", \"c\"),\n        null,\n        10);\n    payload = \" {'delete' : 'y'}\";\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"y\", \"p\"),\n        null,\n        10);\n\n    payload = \"{\\n\" +\n        \"  'create-requesthandler': {\\n\" +\n        \"    'name': 'aRequestHandler',\\n\" +\n        \"    'registerPath': '/v2',\\n\" +\n        \"    'class': 'org.apache.solr.handler.DumpRequestHandler',\\n\" +\n        \"    'spec': {\\n\" +\n        \"      'methods': [\\n\" +\n        \"        'GET',\\n\" +\n        \"        'POST'\\n\" +\n        \"      ],\\n\" +\n        \"      'url': {\\n\" +\n        \"        'paths': [\\n\" +\n        \"          '/something/{part1}/fixed/{part2}'\\n\" +\n        \"        ]\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config\", payload);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay\",\n        null,\n        asList(\"overlay\", \"requestHandler\", \"aRequestHandler\", \"class\"),\n        \"org.apache.solr.handler.DumpRequestHandler\",\n        10);\n    RESTfulServerProvider oldProvider = restTestHarness.getServerProvider();\n    restTestHarness.setServerProvider(() -> jetty.getBaseUrl().toString() + \"/____v2/cores/\" + DEFAULT_TEST_CORENAME);\n\n    Map rsp = TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/something/part1_Value/fixed/part2_Value?urlTemplateValues=part1&urlTemplateValues=part2\",\n        null,\n        asList(\"urlTemplateValues\"),\n        new ValidatingJsonMap.PredicateWithErrMsg() {\n          @Override\n          public String test(Object o) {\n            if (o instanceof Map) {\n              Map m = (Map) o;\n              if (\"part1_Value\".equals(m.get(\"part1\"))  && \"part2_Value\".equals(m.get(\"part2\"))) return null;\n\n            }\n            return \"no match\";\n          }\n\n          @Override\n          public String toString() {\n            return \"{part1:part1_Value, part2 : part2_Value]\";\n          }\n        },\n        10);\n    restTestHarness.setServerProvider(oldProvider);\n\n  }\n\n","sourceOld":"  public void testReqParams() throws Exception {\n    RestTestHarness harness = restTestHarness;\n    String payload = \" {\\n\" +\n        \"  'set' : {'x': {\" +\n        \"                    'a':'A val',\\n\" +\n        \"                    'b': 'B val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"a\"),\n        \"A val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"x\", \"b\"),\n        \"B val\",\n        10);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/d', registerPath :'/solr,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/overlay\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/d\", \"name\"),\n        \"/d\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?useParams=x\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?useParams=x&a=fomrequest\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"fomrequest\",\n        5);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump1', registerPath :'/solr,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/dump1\", \"name\"),\n        \"/dump1\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y':{\\n\" +\n        \"                'c':'CY val',\\n\" +\n        \"                'b': 'BY val', \" +\n        \"                'd': ['val 1', 'val 2']}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"c\"),\n        \"CY val\",\n        5);\n\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"b\"),\n        \"BY val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        Arrays.asList(\"params\", \"d\"),\n        Arrays.asList(\"val 1\", \"val 2\"),\n        5);\n\n    payload = \" {\\n\" +\n        \"  'update' : {'y': {\\n\" +\n        \"                'c':'CY val modified',\\n\" +\n        \"                'e':'EY val',\\n\" +\n        \"                'b': 'BY val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val modified\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"e\"),\n        \"EY val\",\n        10);\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y': {\\n\" +\n        \"                'p':'P val',\\n\" +\n        \"                'q': 'Q val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        \"P val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"c\"),\n        null,\n        10);\n    payload = \" {'delete' : 'y'}\";\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        Arrays.asList(\"response\", \"params\", \"y\", \"p\"),\n        null,\n        10);\n\n    payload = \"{\\n\" +\n        \"  'create-requesthandler': {\\n\" +\n        \"    'name': 'aRequestHandler',\\n\" +\n        \"    'registerPath': '/v2',\\n\" +\n        \"    'class': 'org.apache.solr.handler.DumpRequestHandler',\\n\" +\n        \"    'spec': {\\n\" +\n        \"      'methods': [\\n\" +\n        \"        'GET',\\n\" +\n        \"        'POST'\\n\" +\n        \"      ],\\n\" +\n        \"      'url': {\\n\" +\n        \"        'paths': [\\n\" +\n        \"          '/something/{part1}/fixed/{part2}'\\n\" +\n        \"        ]\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config\", payload);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"aRequestHandler\", \"class\"),\n        \"org.apache.solr.handler.DumpRequestHandler\",\n        10);\n    RESTfulServerProvider oldProvider = restTestHarness.getServerProvider();\n    restTestHarness.setServerProvider(() -> jetty.getBaseUrl().toString() + \"/____v2/cores/\" + DEFAULT_TEST_CORENAME);\n\n    Map rsp = TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/something/part1_Value/fixed/part2_Value?urlTemplateValues=part1&urlTemplateValues=part2\",\n        null,\n        Arrays.asList(\"urlTemplateValues\"),\n        new ValidatingJsonMap.PredicateWithErrMsg() {\n          @Override\n          public String test(Object o) {\n            if (o instanceof Map) {\n              Map m = (Map) o;\n              if (\"part1_Value\".equals(m.get(\"part1\"))  && \"part2_Value\".equals(m.get(\"part2\"))) return null;\n\n            }\n            return \"no match\";\n          }\n\n          @Override\n          public String toString() {\n            return \"{part1:part1_Value, part2 : part2_Value]\";\n          }\n        },\n        10);\n    restTestHarness.setServerProvider(oldProvider);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","sourceNew":"  public void testReqParams() throws Exception {\n    RestTestHarness harness = restTestHarness;\n    String payload = \" {\\n\" +\n        \"  'set' : {'x': {\" +\n        \"                    'a':'A val',\\n\" +\n        \"                    'b': 'B val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"x\", \"a\"),\n        \"A val\",\n        TIMEOUT_S);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"x\", \"b\"),\n        \"B val\",\n        TIMEOUT_S);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/d', registerPath :'/solr,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/overlay\",\n        null,\n        asList(\"overlay\", \"requestHandler\", \"/d\", \"name\"),\n        \"/d\",\n        TIMEOUT_S);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?useParams=x\",\n        null,\n        asList(\"params\", \"a\"),\n        \"A val\",\n        TIMEOUT_S);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?useParams=x&a=fomrequest\",\n        null,\n        asList(\"params\", \"a\"),\n        \"fomrequest\",\n        TIMEOUT_S);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump1', registerPath :'/solr,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay\",\n        null,\n        asList(\"overlay\", \"requestHandler\", \"/dump1\", \"name\"),\n        \"/dump1\",\n        TIMEOUT_S);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1\",\n        null,\n        asList(\"params\", \"a\"),\n        \"A val\",\n        TIMEOUT_S);\n\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y':{\\n\" +\n        \"                'c':'CY val',\\n\" +\n        \"                'b': 'BY val', \" +\n        \"                'd': ['val 1', 'val 2']}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val\",\n        TIMEOUT_S);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        asList(\"params\", \"c\"),\n        \"CY val\",\n        TIMEOUT_S);\n\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        asList(\"params\", \"b\"),\n        \"BY val\",\n        TIMEOUT_S);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        asList(\"params\", \"a\"),\n        \"A val\",\n        TIMEOUT_S);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        asList(\"params\", \"d\"),\n        asList(\"val 1\", \"val 2\"),\n        TIMEOUT_S);\n\n    payload = \" {\\n\" +\n        \"  'update' : {'y': {\\n\" +\n        \"                'c':'CY val modified',\\n\" +\n        \"                'e':'EY val',\\n\" +\n        \"                'b': 'BY val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val modified\",\n        TIMEOUT_S);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"y\", \"e\"),\n        \"EY val\",\n        TIMEOUT_S);\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y': {\\n\" +\n        \"                'p':'P val',\\n\" +\n        \"                'q': 'Q val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"y\", \"p\"),\n        \"P val\",\n        TIMEOUT_S);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"y\", \"c\"),\n        null,\n        TIMEOUT_S);\n    payload = \" {'delete' : 'y'}\";\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"y\", \"p\"),\n        null,\n        TIMEOUT_S);\n\n    payload = \"{\\n\" +\n        \"  'create-requesthandler': {\\n\" +\n        \"    'name': 'aRequestHandler',\\n\" +\n        \"    'registerPath': '/v2',\\n\" +\n        \"    'class': 'org.apache.solr.handler.DumpRequestHandler',\\n\" +\n        \"    'spec': {\\n\" +\n        \"      'methods': [\\n\" +\n        \"        'GET',\\n\" +\n        \"        'POST'\\n\" +\n        \"      ],\\n\" +\n        \"      'url': {\\n\" +\n        \"        'paths': [\\n\" +\n        \"          '/something/{part1}/fixed/{part2}'\\n\" +\n        \"        ]\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config\", payload);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay\",\n        null,\n        asList(\"overlay\", \"requestHandler\", \"aRequestHandler\", \"class\"),\n        \"org.apache.solr.handler.DumpRequestHandler\",\n        TIMEOUT_S);\n    RESTfulServerProvider oldProvider = restTestHarness.getServerProvider();\n    restTestHarness.setServerProvider(() -> jetty.getBaseUrl().toString() + \"/____v2/cores/\" + DEFAULT_TEST_CORENAME);\n\n    Map rsp = TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/something/part1_Value/fixed/part2_Value?urlTemplateValues=part1&urlTemplateValues=part2\",\n        null,\n        asList(\"urlTemplateValues\"),\n        new ValidatingJsonMap.PredicateWithErrMsg() {\n          @Override\n          public String test(Object o) {\n            if (o instanceof Map) {\n              Map m = (Map) o;\n              if (\"part1_Value\".equals(m.get(\"part1\"))  && \"part2_Value\".equals(m.get(\"part2\"))) return null;\n\n            }\n            return \"no match\";\n          }\n\n          @Override\n          public String toString() {\n            return \"{part1:part1_Value, part2 : part2_Value]\";\n          }\n        },\n        TIMEOUT_S);\n    restTestHarness.setServerProvider(oldProvider);\n\n  }\n\n","sourceOld":"  public void testReqParams() throws Exception {\n    RestTestHarness harness = restTestHarness;\n    String payload = \" {\\n\" +\n        \"  'set' : {'x': {\" +\n        \"                    'a':'A val',\\n\" +\n        \"                    'b': 'B val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"x\", \"a\"),\n        \"A val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"x\", \"b\"),\n        \"B val\",\n        10);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/d', registerPath :'/solr,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/overlay\",\n        null,\n        asList(\"overlay\", \"requestHandler\", \"/d\", \"name\"),\n        \"/d\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?useParams=x\",\n        null,\n        asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?useParams=x&a=fomrequest\",\n        null,\n        asList(\"params\", \"a\"),\n        \"fomrequest\",\n        5);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump1', registerPath :'/solr,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay\",\n        null,\n        asList(\"overlay\", \"requestHandler\", \"/dump1\", \"name\"),\n        \"/dump1\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1\",\n        null,\n        asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y':{\\n\" +\n        \"                'c':'CY val',\\n\" +\n        \"                'b': 'BY val', \" +\n        \"                'd': ['val 1', 'val 2']}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        asList(\"params\", \"c\"),\n        \"CY val\",\n        5);\n\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        asList(\"params\", \"b\"),\n        \"BY val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        asList(\"params\", \"a\"),\n        \"A val\",\n        5);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        asList(\"params\", \"d\"),\n        asList(\"val 1\", \"val 2\"),\n        5);\n\n    payload = \" {\\n\" +\n        \"  'update' : {'y': {\\n\" +\n        \"                'c':'CY val modified',\\n\" +\n        \"                'e':'EY val',\\n\" +\n        \"                'b': 'BY val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val modified\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"y\", \"e\"),\n        \"EY val\",\n        10);\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y': {\\n\" +\n        \"                'p':'P val',\\n\" +\n        \"                'q': 'Q val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"y\", \"p\"),\n        \"P val\",\n        10);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"y\", \"c\"),\n        null,\n        10);\n    payload = \" {'delete' : 'y'}\";\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"y\", \"p\"),\n        null,\n        10);\n\n    payload = \"{\\n\" +\n        \"  'create-requesthandler': {\\n\" +\n        \"    'name': 'aRequestHandler',\\n\" +\n        \"    'registerPath': '/v2',\\n\" +\n        \"    'class': 'org.apache.solr.handler.DumpRequestHandler',\\n\" +\n        \"    'spec': {\\n\" +\n        \"      'methods': [\\n\" +\n        \"        'GET',\\n\" +\n        \"        'POST'\\n\" +\n        \"      ],\\n\" +\n        \"      'url': {\\n\" +\n        \"        'paths': [\\n\" +\n        \"          '/something/{part1}/fixed/{part2}'\\n\" +\n        \"        ]\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config\", payload);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay\",\n        null,\n        asList(\"overlay\", \"requestHandler\", \"aRequestHandler\", \"class\"),\n        \"org.apache.solr.handler.DumpRequestHandler\",\n        10);\n    RESTfulServerProvider oldProvider = restTestHarness.getServerProvider();\n    restTestHarness.setServerProvider(() -> jetty.getBaseUrl().toString() + \"/____v2/cores/\" + DEFAULT_TEST_CORENAME);\n\n    Map rsp = TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/something/part1_Value/fixed/part2_Value?urlTemplateValues=part1&urlTemplateValues=part2\",\n        null,\n        asList(\"urlTemplateValues\"),\n        new ValidatingJsonMap.PredicateWithErrMsg() {\n          @Override\n          public String test(Object o) {\n            if (o instanceof Map) {\n              Map m = (Map) o;\n              if (\"part1_Value\".equals(m.get(\"part1\"))  && \"part2_Value\".equals(m.get(\"part2\"))) return null;\n\n            }\n            return \"no match\";\n          }\n\n          @Override\n          public String toString() {\n            return \"{part1:part1_Value, part2 : part2_Value]\";\n          }\n        },\n        10);\n    restTestHarness.setServerProvider(oldProvider);\n\n  }\n\n","bugFix":["c0426db639e5d76d8bfcea5969a4442c88debdae","fcf710a8fcd590cf55c855d422c7a10fce3e6117","01ff1eeea394f76a66d8998b861d33d8546b8ca4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler#testReqParams().mjava","sourceNew":"  public void testReqParams() throws Exception {\n    RestTestHarness harness = restTestHarness;\n    String payload = \" {\\n\" +\n        \"  'set' : {'x': {\" +\n        \"                    'a':'A val',\\n\" +\n        \"                    'b': 'B val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"x\", \"a\"),\n        \"A val\",\n        TIMEOUT_S);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"x\", \"b\"),\n        \"B val\",\n        TIMEOUT_S);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/d', registerPath :'/solr,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/overlay\",\n        null,\n        asList(\"overlay\", \"requestHandler\", \"/d\", \"name\"),\n        \"/d\",\n        TIMEOUT_S);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?useParams=x\",\n        null,\n        asList(\"params\", \"a\"),\n        \"A val\",\n        TIMEOUT_S);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?useParams=x&a=fomrequest\",\n        null,\n        asList(\"params\", \"a\"),\n        \"fomrequest\",\n        TIMEOUT_S);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump1', registerPath :'/solr,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay\",\n        null,\n        asList(\"overlay\", \"requestHandler\", \"/dump1\", \"name\"),\n        \"/dump1\",\n        TIMEOUT_S);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1\",\n        null,\n        asList(\"params\", \"a\"),\n        \"A val\",\n        TIMEOUT_S);\n\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y':{\\n\" +\n        \"                'c':'CY val',\\n\" +\n        \"                'b': 'BY val', \" +\n        \"                'd': ['val 1', 'val 2']}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val\",\n        TIMEOUT_S);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        asList(\"params\", \"c\"),\n        \"CY val\",\n        TIMEOUT_S);\n\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        asList(\"params\", \"b\"),\n        \"BY val\",\n        TIMEOUT_S);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        asList(\"params\", \"a\"),\n        \"A val\",\n        TIMEOUT_S);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        asList(\"params\", \"d\"),\n        asList(\"val 1\", \"val 2\"),\n        TIMEOUT_S);\n\n    payload = \" {\\n\" +\n        \"  'update' : {'y': {\\n\" +\n        \"                'c':'CY val modified',\\n\" +\n        \"                'e':'EY val',\\n\" +\n        \"                'b': 'BY val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val modified\",\n        TIMEOUT_S);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"y\", \"e\"),\n        \"EY val\",\n        TIMEOUT_S);\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y': {\\n\" +\n        \"                'p':'P val',\\n\" +\n        \"                'q': 'Q val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"y\", \"p\"),\n        \"P val\",\n        TIMEOUT_S);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"y\", \"c\"),\n        null,\n        TIMEOUT_S);\n    payload = \" {'delete' : 'y'}\";\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"y\", \"p\"),\n        null,\n        TIMEOUT_S);\n\n    payload = \"{\\n\" +\n        \"  'create-requesthandler': {\\n\" +\n        \"    'name': 'aRequestHandler',\\n\" +\n        \"    'registerPath': '/v2',\\n\" +\n        \"    'class': 'org.apache.solr.handler.DumpRequestHandler',\\n\" +\n        \"    'spec': {\\n\" +\n        \"      'methods': [\\n\" +\n        \"        'GET',\\n\" +\n        \"        'POST'\\n\" +\n        \"      ],\\n\" +\n        \"      'url': {\\n\" +\n        \"        'paths': [\\n\" +\n        \"          '/something/{part1}/fixed/{part2}'\\n\" +\n        \"        ]\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config\", payload);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay\",\n        null,\n        asList(\"overlay\", \"requestHandler\", \"aRequestHandler\", \"class\"),\n        \"org.apache.solr.handler.DumpRequestHandler\",\n        TIMEOUT_S);\n    RESTfulServerProvider oldProvider = restTestHarness.getServerProvider();\n    restTestHarness.setServerProvider(() -> jetty.getBaseUrl().toString() + \"/____v2/cores/\" + DEFAULT_TEST_CORENAME);\n\n    @SuppressWarnings({\"rawtypes\"})\n    Map rsp = TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/something/part1_Value/fixed/part2_Value?urlTemplateValues=part1&urlTemplateValues=part2\",\n        null,\n        asList(\"urlTemplateValues\"),\n        new ValidatingJsonMap.PredicateWithErrMsg() {\n          @Override\n          public String test(Object o) {\n            if (o instanceof Map) {\n              Map m = (Map) o;\n              if (\"part1_Value\".equals(m.get(\"part1\"))  && \"part2_Value\".equals(m.get(\"part2\"))) return null;\n\n            }\n            return \"no match\";\n          }\n\n          @Override\n          public String toString() {\n            return \"{part1:part1_Value, part2 : part2_Value]\";\n          }\n        },\n        TIMEOUT_S);\n    restTestHarness.setServerProvider(oldProvider);\n\n  }\n\n","sourceOld":"  public void testReqParams() throws Exception {\n    RestTestHarness harness = restTestHarness;\n    String payload = \" {\\n\" +\n        \"  'set' : {'x': {\" +\n        \"                    'a':'A val',\\n\" +\n        \"                    'b': 'B val'}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"x\", \"a\"),\n        \"A val\",\n        TIMEOUT_S);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"x\", \"b\"),\n        \"B val\",\n        TIMEOUT_S);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/d', registerPath :'/solr,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/overlay\",\n        null,\n        asList(\"overlay\", \"requestHandler\", \"/d\", \"name\"),\n        \"/d\",\n        TIMEOUT_S);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?useParams=x\",\n        null,\n        asList(\"params\", \"a\"),\n        \"A val\",\n        TIMEOUT_S);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/d?useParams=x&a=fomrequest\",\n        null,\n        asList(\"params\", \"a\"),\n        \"fomrequest\",\n        TIMEOUT_S);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/dump1', registerPath :'/solr,/v2' , 'class': 'org.apache.solr.handler.DumpRequestHandler', 'useParams':'x' }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay\",\n        null,\n        asList(\"overlay\", \"requestHandler\", \"/dump1\", \"name\"),\n        \"/dump1\",\n        TIMEOUT_S);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1\",\n        null,\n        asList(\"params\", \"a\"),\n        \"A val\",\n        TIMEOUT_S);\n\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y':{\\n\" +\n        \"                'c':'CY val',\\n\" +\n        \"                'b': 'BY val', \" +\n        \"                'd': ['val 1', 'val 2']}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val\",\n        TIMEOUT_S);\n\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        asList(\"params\", \"c\"),\n        \"CY val\",\n        TIMEOUT_S);\n\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        asList(\"params\", \"b\"),\n        \"BY val\",\n        TIMEOUT_S);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        asList(\"params\", \"a\"),\n        \"A val\",\n        TIMEOUT_S);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/dump1?useParams=y\",\n        null,\n        asList(\"params\", \"d\"),\n        asList(\"val 1\", \"val 2\"),\n        TIMEOUT_S);\n\n    payload = \" {\\n\" +\n        \"  'update' : {'y': {\\n\" +\n        \"                'c':'CY val modified',\\n\" +\n        \"                'e':'EY val',\\n\" +\n        \"                'b': 'BY val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"y\", \"c\"),\n        \"CY val modified\",\n        TIMEOUT_S);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"y\", \"e\"),\n        \"EY val\",\n        TIMEOUT_S);\n\n    payload = \" {\\n\" +\n        \"  'set' : {'y': {\\n\" +\n        \"                'p':'P val',\\n\" +\n        \"                'q': 'Q val'\" +\n        \"}\\n\" +\n        \"             }\\n\" +\n        \"  }\";\n\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"y\", \"p\"),\n        \"P val\",\n        TIMEOUT_S);\n\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"y\", \"c\"),\n        null,\n        TIMEOUT_S);\n    payload = \" {'delete' : 'y'}\";\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config/params\", payload);\n    TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/config/params\",\n        null,\n        asList(\"response\", \"params\", \"y\", \"p\"),\n        null,\n        TIMEOUT_S);\n\n    payload = \"{\\n\" +\n        \"  'create-requesthandler': {\\n\" +\n        \"    'name': 'aRequestHandler',\\n\" +\n        \"    'registerPath': '/v2',\\n\" +\n        \"    'class': 'org.apache.solr.handler.DumpRequestHandler',\\n\" +\n        \"    'spec': {\\n\" +\n        \"      'methods': [\\n\" +\n        \"        'GET',\\n\" +\n        \"        'POST'\\n\" +\n        \"      ],\\n\" +\n        \"      'url': {\\n\" +\n        \"        'paths': [\\n\" +\n        \"          '/something/{part1}/fixed/{part2}'\\n\" +\n        \"        ]\\n\" +\n        \"      }\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"}\";\n\n    TestSolrConfigHandler.runConfigCommand(harness, \"/config\", payload);\n    TestSolrConfigHandler.testForResponseElement(harness,\n        null,\n        \"/config/overlay\",\n        null,\n        asList(\"overlay\", \"requestHandler\", \"aRequestHandler\", \"class\"),\n        \"org.apache.solr.handler.DumpRequestHandler\",\n        TIMEOUT_S);\n    RESTfulServerProvider oldProvider = restTestHarness.getServerProvider();\n    restTestHarness.setServerProvider(() -> jetty.getBaseUrl().toString() + \"/____v2/cores/\" + DEFAULT_TEST_CORENAME);\n\n    Map rsp = TestSolrConfigHandler.testForResponseElement(\n        harness,\n        null,\n        \"/something/part1_Value/fixed/part2_Value?urlTemplateValues=part1&urlTemplateValues=part2\",\n        null,\n        asList(\"urlTemplateValues\"),\n        new ValidatingJsonMap.PredicateWithErrMsg() {\n          @Override\n          public String test(Object o) {\n            if (o instanceof Map) {\n              Map m = (Map) o;\n              if (\"part1_Value\".equals(m.get(\"part1\"))  && \"part2_Value\".equals(m.get(\"part2\"))) return null;\n\n            }\n            return \"no match\";\n          }\n\n          @Override\n          public String toString() {\n            return \"{part1:part1_Value, part2 : part2_Value]\";\n          }\n        },\n        TIMEOUT_S);\n    restTestHarness.setServerProvider(oldProvider);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["9c9780b447ddf847479e7fa9978cb7809a15a0bf"],"fcf710a8fcd590cf55c855d422c7a10fce3e6117":["b5991832ae4bac45cecfff0fc33125aeac823d3d"],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":["b5991832ae4bac45cecfff0fc33125aeac823d3d","fcf710a8fcd590cf55c855d422c7a10fce3e6117"],"01ff1eeea394f76a66d8998b861d33d8546b8ca4":["c0426db639e5d76d8bfcea5969a4442c88debdae"],"c0426db639e5d76d8bfcea5969a4442c88debdae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"936cdd5882761db3b844afd6f84ab81cbb011a75":["a8ab788212d72a7c436e5ef349ca99fe3c8fc78b","ac1e7fa558287a811ea07634d815ee7b1c541284"],"9c9780b447ddf847479e7fa9978cb7809a15a0bf":["a52341299179de5479672f7cf518bf4b173f34b3"],"ae2f5be890d26585d438eba0b9cc7d3c0a9775be":["01ff1eeea394f76a66d8998b861d33d8546b8ca4"],"e98520789adb1d5ad05afb4956eca0944a929688":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["01ff1eeea394f76a66d8998b861d33d8546b8ca4","ae2f5be890d26585d438eba0b9cc7d3c0a9775be"],"a52341299179de5479672f7cf518bf4b173f34b3":["a8ab788212d72a7c436e5ef349ca99fe3c8fc78b","ac1e7fa558287a811ea07634d815ee7b1c541284"],"a8ab788212d72a7c436e5ef349ca99fe3c8fc78b":["fcf710a8fcd590cf55c855d422c7a10fce3e6117"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a5296efc4b319f5647b606629c093a94b23692c6":["93f558d9f0b5a234a28dcc95036e388fcbbadaf7","b5991832ae4bac45cecfff0fc33125aeac823d3d"],"b5991832ae4bac45cecfff0fc33125aeac823d3d":["93f558d9f0b5a234a28dcc95036e388fcbbadaf7"],"93f558d9f0b5a234a28dcc95036e388fcbbadaf7":["ae2f5be890d26585d438eba0b9cc7d3c0a9775be"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"ac1e7fa558287a811ea07634d815ee7b1c541284":["a8ab788212d72a7c436e5ef349ca99fe3c8fc78b"]},"commit2Childs":{"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["e98520789adb1d5ad05afb4956eca0944a929688"],"fcf710a8fcd590cf55c855d422c7a10fce3e6117":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","a8ab788212d72a7c436e5ef349ca99fe3c8fc78b"],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":[],"01ff1eeea394f76a66d8998b861d33d8546b8ca4":["ae2f5be890d26585d438eba0b9cc7d3c0a9775be","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"c0426db639e5d76d8bfcea5969a4442c88debdae":["01ff1eeea394f76a66d8998b861d33d8546b8ca4"],"936cdd5882761db3b844afd6f84ab81cbb011a75":[],"9c9780b447ddf847479e7fa9978cb7809a15a0bf":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"ae2f5be890d26585d438eba0b9cc7d3c0a9775be":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","93f558d9f0b5a234a28dcc95036e388fcbbadaf7"],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a52341299179de5479672f7cf518bf4b173f34b3":["9c9780b447ddf847479e7fa9978cb7809a15a0bf"],"a8ab788212d72a7c436e5ef349ca99fe3c8fc78b":["936cdd5882761db3b844afd6f84ab81cbb011a75","a52341299179de5479672f7cf518bf4b173f34b3","ac1e7fa558287a811ea07634d815ee7b1c541284"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c0426db639e5d76d8bfcea5969a4442c88debdae"],"a5296efc4b319f5647b606629c093a94b23692c6":[],"b5991832ae4bac45cecfff0fc33125aeac823d3d":["fcf710a8fcd590cf55c855d422c7a10fce3e6117","7c3523a0ab04c3002eee3896c75ea5f10f388bcc","a5296efc4b319f5647b606629c093a94b23692c6"],"93f558d9f0b5a234a28dcc95036e388fcbbadaf7":["a5296efc4b319f5647b606629c093a94b23692c6","b5991832ae4bac45cecfff0fc33125aeac823d3d"],"ac1e7fa558287a811ea07634d815ee7b1c541284":["936cdd5882761db3b844afd6f84ab81cbb011a75","a52341299179de5479672f7cf518bf4b173f34b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","936cdd5882761db3b844afd6f84ab81cbb011a75","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a5296efc4b319f5647b606629c093a94b23692c6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}