{"path":"src/webapp/src/org/apache/solr/servlet/SolrServlet#init().mjava","commits":[{"id":"0c3e228bf650e96f3002a8fb73dd0c13d55af077","date":1138253849,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/SolrServlet#init().mjava","pathOld":"/dev/null","sourceNew":"  public void init() throws ServletException\n  {\n    /***\n    luceneDir=getServletContext().getInitParameter(\"solr.indexdir\");\n    schemaFile=getServletContext().getInitParameter(\"solr.schema\");\n    if (schemaFile == null) schemaFile=\"schema.xml\";\n    ***/\n\n    log.info(\"user.dir=\" + System.getProperty(\"user.dir\"));\n\n    IndexSchema schema = new IndexSchema(\"schema.xml\");\n    core = SolrCore.getSolrCore();\n\n    xmlResponseWriter=new XMLResponseWriter();\n\n    getServletContext().setAttribute(\"SolrServlet\",this);\n\n    log.info(\"SolrServlet.init() done\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["864e484eede906448b166b945a619a5929422541"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"268776364d28ac43d2fac972c45f929978145470","date":1139281135,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/SolrServlet#init().mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/SolrServlet#init().mjava","sourceNew":"  public void init() throws ServletException\n  {\n    String configDir=getServletContext().getInitParameter(\"solr.configDir\");\n    String dataDir=getServletContext().getInitParameter(\"solr.dataDir\");\n\n    log.info(\"user.dir=\" + System.getProperty(\"user.dir\"));\n\n    // TODO: find a way to allow configuration of the config and data\n    // directories other than using CWD.  If it is done via servlet\n    // params, then we must insure that this init() run before any\n    // of the JSPs.\n    core = SolrCore.getSolrCore();\n\n    xmlResponseWriter=new XMLResponseWriter();\n\n    getServletContext().setAttribute(\"SolrServlet\",this);\n\n    log.info(\"SolrServlet.init() done\");\n  }\n\n","sourceOld":"  public void init() throws ServletException\n  {\n    /***\n    luceneDir=getServletContext().getInitParameter(\"solr.indexdir\");\n    schemaFile=getServletContext().getInitParameter(\"solr.schema\");\n    if (schemaFile == null) schemaFile=\"schema.xml\";\n    ***/\n\n    log.info(\"user.dir=\" + System.getProperty(\"user.dir\"));\n\n    IndexSchema schema = new IndexSchema(\"schema.xml\");\n    core = SolrCore.getSolrCore();\n\n    xmlResponseWriter=new XMLResponseWriter();\n\n    getServletContext().setAttribute(\"SolrServlet\",this);\n\n    log.info(\"SolrServlet.init() done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cbe98c74fdb9ed434e14c3d856735ab5c437c936","date":1144423212,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/SolrServlet#init().mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/SolrServlet#init().mjava","sourceNew":"  public void init() throws ServletException\n  {\n    log.info(\"user.dir=\" + System.getProperty(\"user.dir\"));\n    core = SolrCore.getSolrCore();\n    xmlResponseWriter=new XMLResponseWriter();\n    log.info(\"SolrServlet.init() done\");\n  }\n\n","sourceOld":"  public void init() throws ServletException\n  {\n    String configDir=getServletContext().getInitParameter(\"solr.configDir\");\n    String dataDir=getServletContext().getInitParameter(\"solr.dataDir\");\n\n    log.info(\"user.dir=\" + System.getProperty(\"user.dir\"));\n\n    // TODO: find a way to allow configuration of the config and data\n    // directories other than using CWD.  If it is done via servlet\n    // params, then we must insure that this init() run before any\n    // of the JSPs.\n    core = SolrCore.getSolrCore();\n\n    xmlResponseWriter=new XMLResponseWriter();\n\n    getServletContext().setAttribute(\"SolrServlet\",this);\n\n    log.info(\"SolrServlet.init() done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c628bdfec681530ae1c3bbb9e40b5df8c54e8b0b","date":1145394578,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/SolrServlet#init().mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/SolrServlet#init().mjava","sourceNew":"  public void init() throws ServletException\n  {\n    ServletContext ctx = getServletContext();\n    try {\n      System.out.println(\"RESOURCE URL FOR .=\"+ctx.getResource(\"/select\"));\n    } catch (MalformedURLException e) {\n      e.printStackTrace();\n    }\n\n\n    log.info(\"user.dir=\" + System.getProperty(\"user.dir\"));\n    core = SolrCore.getSolrCore();\n    xmlResponseWriter=new XMLResponseWriter();\n    log.info(\"SolrServlet.init() done\");\n  }\n\n","sourceOld":"  public void init() throws ServletException\n  {\n    log.info(\"user.dir=\" + System.getProperty(\"user.dir\"));\n    core = SolrCore.getSolrCore();\n    xmlResponseWriter=new XMLResponseWriter();\n    log.info(\"SolrServlet.init() done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"818fa97f8efad761eafba0dad8c0f41685b8f852","date":1148248512,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/SolrServlet#init().mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/SolrServlet#init().mjava","sourceNew":"  public void init() throws ServletException\n  {\n    log.info(\"SolrServlet.init()\");\n    try {\n      Context c = new InitialContext();\n\n      /***\n      System.out.println(\"Enumerating JNDI Context=\" + c);\n      NamingEnumeration<NameClassPair> en = c.list(\"java:comp/env\");\n      while (en.hasMore()) {\n        NameClassPair ncp = en.next();\n        System.out.println(\"  ENTRY:\" + ncp);\n      }\n      System.out.println(\"JNDI lookup=\" + c.lookup(\"java:comp/env/solr/home\"));\n      ***/\n\n      String home = (String)c.lookup(\"java:comp/env/solr/home\");\n      if (home!=null) Config.setInstanceDir(home);\n    } catch (NoInitialContextException e) {\n      log.info(\"JNDI not configured for Solr (NoInitialContextEx)\");\n    } catch (NamingException e) {\n      log.info(\"No /solr/home in JNDI\");\n    }\n\n    log.info(\"user.dir=\" + System.getProperty(\"user.dir\"));\n    core = SolrCore.getSolrCore();\n    xmlResponseWriter=new XMLResponseWriter();\n    log.info(\"SolrServlet.init() done\");\n  }\n\n","sourceOld":"  public void init() throws ServletException\n  {\n    ServletContext ctx = getServletContext();\n    try {\n      System.out.println(\"RESOURCE URL FOR .=\"+ctx.getResource(\"/select\"));\n    } catch (MalformedURLException e) {\n      e.printStackTrace();\n    }\n\n\n    log.info(\"user.dir=\" + System.getProperty(\"user.dir\"));\n    core = SolrCore.getSolrCore();\n    xmlResponseWriter=new XMLResponseWriter();\n    log.info(\"SolrServlet.init() done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5db1d0b312c5915094ef798a33d392623fd40bb3","date":1148622242,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/SolrServlet#init().mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/SolrServlet#init().mjava","sourceNew":"  public void init() throws ServletException {\n    log.info(\"SolrServlet.init()\");\n    try {\n      Context c = new InitialContext();\n\n      /***\n      System.out.println(\"Enumerating JNDI Context=\" + c);\n      NamingEnumeration<NameClassPair> en = c.list(\"java:comp/env\");\n      while (en.hasMore()) {\n        NameClassPair ncp = en.next();\n        System.out.println(\"  ENTRY:\" + ncp);\n      }\n      System.out.println(\"JNDI lookup=\" + c.lookup(\"java:comp/env/solr/home\"));\n      ***/\n\n      String home = (String)c.lookup(\"java:comp/env/solr/home\");\n      if (home!=null) Config.setInstanceDir(home);\n    } catch (NoInitialContextException e) {\n      log.info(\"JNDI not configured for Solr (NoInitialContextEx)\");\n    } catch (NamingException e) {\n      log.info(\"No /solr/home in JNDI\");\n    }\n\n    log.info(\"user.dir=\" + System.getProperty(\"user.dir\"));\n    core = SolrCore.getSolrCore();\n                \n    log.info(\"SolrServlet.init() done\");\n  }\n\n","sourceOld":"  public void init() throws ServletException\n  {\n    log.info(\"SolrServlet.init()\");\n    try {\n      Context c = new InitialContext();\n\n      /***\n      System.out.println(\"Enumerating JNDI Context=\" + c);\n      NamingEnumeration<NameClassPair> en = c.list(\"java:comp/env\");\n      while (en.hasMore()) {\n        NameClassPair ncp = en.next();\n        System.out.println(\"  ENTRY:\" + ncp);\n      }\n      System.out.println(\"JNDI lookup=\" + c.lookup(\"java:comp/env/solr/home\"));\n      ***/\n\n      String home = (String)c.lookup(\"java:comp/env/solr/home\");\n      if (home!=null) Config.setInstanceDir(home);\n    } catch (NoInitialContextException e) {\n      log.info(\"JNDI not configured for Solr (NoInitialContextEx)\");\n    } catch (NamingException e) {\n      log.info(\"No /solr/home in JNDI\");\n    }\n\n    log.info(\"user.dir=\" + System.getProperty(\"user.dir\"));\n    core = SolrCore.getSolrCore();\n    xmlResponseWriter=new XMLResponseWriter();\n    log.info(\"SolrServlet.init() done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d80013b5e260def972025c93a0b08524f9c38f49","date":1170102801,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/SolrServlet#init().mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/SolrServlet#init().mjava","sourceNew":"  public void init() throws ServletException {\n    log.info(\"SolrServlet.init()\");\n    core = SolrCore.getSolrCore();\n    log.info(\"SolrServlet.init() done\");\n  }\n\n","sourceOld":"  public void init() throws ServletException {\n    log.info(\"SolrServlet.init()\");\n    try {\n      Context c = new InitialContext();\n\n      /***\n      System.out.println(\"Enumerating JNDI Context=\" + c);\n      NamingEnumeration<NameClassPair> en = c.list(\"java:comp/env\");\n      while (en.hasMore()) {\n        NameClassPair ncp = en.next();\n        System.out.println(\"  ENTRY:\" + ncp);\n      }\n      System.out.println(\"JNDI lookup=\" + c.lookup(\"java:comp/env/solr/home\"));\n      ***/\n\n      String home = (String)c.lookup(\"java:comp/env/solr/home\");\n      if (home!=null) Config.setInstanceDir(home);\n    } catch (NoInitialContextException e) {\n      log.info(\"JNDI not configured for Solr (NoInitialContextEx)\");\n    } catch (NamingException e) {\n      log.info(\"No /solr/home in JNDI\");\n    }\n\n    log.info(\"user.dir=\" + System.getProperty(\"user.dir\"));\n    core = SolrCore.getSolrCore();\n                \n    log.info(\"SolrServlet.init() done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"864e484eede906448b166b945a619a5929422541","date":1213295270,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/SolrServlet#init().mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/SolrServlet#init().mjava","sourceNew":"  public void init() throws ServletException {\n    log.info(\"SolrServlet.init()\");\n    // we deliberately do not initialize a SolrCore because of SOLR-597\n    // https://issues.apache.org/jira/browse/SOLR-597\n    log.info(\"SolrServlet.init() done\");\n  }\n\n","sourceOld":"  public void init() throws ServletException {\n    log.info(\"SolrServlet.init()\");\n    core = SolrCore.getSolrCore();\n    log.info(\"SolrServlet.init() done\");\n  }\n\n","bugFix":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71fd2f49de58ccb4422e7181620d8f795693b7eb","date":1218407598,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/SolrServlet#init().mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/SolrServlet#init().mjava","sourceNew":"  public void init() throws ServletException {\n    log.info(\"SolrServlet.init()\");\n    \n    // Check if the \"multicore.xml\" file exists -- if so, this is an invalid servlet\n    // (even if there is only one core...)\n    String instanceDir = SolrResourceLoader.locateInstanceDir();\n    File fconf = new File(instanceDir, \"multicore.xml\");\n    hasMulticore = fconf.exists();\n    \n    // we deliberately do not initialize a SolrCore because of SOLR-597\n    // https://issues.apache.org/jira/browse/SOLR-597\n    log.info(\"SolrServlet.init() done\");\n  }\n\n","sourceOld":"  public void init() throws ServletException {\n    log.info(\"SolrServlet.init()\");\n    // we deliberately do not initialize a SolrCore because of SOLR-597\n    // https://issues.apache.org/jira/browse/SOLR-597\n    log.info(\"SolrServlet.init() done\");\n  }\n\n","bugFix":null,"bugIntro":["aa235702a0d1a8a6bd98bb76af41228151323d54"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d262ab35a1389f4ad912bfa8b61a202c61cc475a","date":1218563685,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/SolrServlet#init().mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/SolrServlet#init().mjava","sourceNew":"  public void init() throws ServletException {\n    log.info(\"SolrServlet.init()\");\n    \n    // Check if the \"multicore.xml\" file exists -- if so, this is an invalid servlet\n    // (even if there is only one core...)\n    String instanceDir = SolrResourceLoader.locateInstanceDir();\n    File fconf = new File(instanceDir, \"solr.xml\");\n    hasMulticore = fconf.exists();\n    \n    // we deliberately do not initialize a SolrCore because of SOLR-597\n    // https://issues.apache.org/jira/browse/SOLR-597\n    log.info(\"SolrServlet.init() done\");\n  }\n\n","sourceOld":"  public void init() throws ServletException {\n    log.info(\"SolrServlet.init()\");\n    \n    // Check if the \"multicore.xml\" file exists -- if so, this is an invalid servlet\n    // (even if there is only one core...)\n    String instanceDir = SolrResourceLoader.locateInstanceDir();\n    File fconf = new File(instanceDir, \"multicore.xml\");\n    hasMulticore = fconf.exists();\n    \n    // we deliberately do not initialize a SolrCore because of SOLR-597\n    // https://issues.apache.org/jira/browse/SOLR-597\n    log.info(\"SolrServlet.init() done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"aa235702a0d1a8a6bd98bb76af41228151323d54","date":1218656137,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/SolrServlet#init().mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/SolrServlet#init().mjava","sourceNew":"  public void init() throws ServletException {\n    log.info(\"SolrServlet.init()\");\n    \n    // Check if the \"solr.xml\" file exists -- if so, this is an invalid servlet\n    // (even if there is only one core...)\n    String instanceDir = SolrResourceLoader.locateInstanceDir();\n    File fconf = new File(instanceDir, \"solr.xml\");\n    hasMulticore = fconf.exists();\n    \n    // we deliberately do not initialize a SolrCore because of SOLR-597\n    // https://issues.apache.org/jira/browse/SOLR-597\n    log.info(\"SolrServlet.init() done\");\n  }\n\n","sourceOld":"  public void init() throws ServletException {\n    log.info(\"SolrServlet.init()\");\n    \n    // Check if the \"multicore.xml\" file exists -- if so, this is an invalid servlet\n    // (even if there is only one core...)\n    String instanceDir = SolrResourceLoader.locateInstanceDir();\n    File fconf = new File(instanceDir, \"solr.xml\");\n    hasMulticore = fconf.exists();\n    \n    // we deliberately do not initialize a SolrCore because of SOLR-597\n    // https://issues.apache.org/jira/browse/SOLR-597\n    log.info(\"SolrServlet.init() done\");\n  }\n\n","bugFix":["71fd2f49de58ccb4422e7181620d8f795693b7eb"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/webapp/src/org/apache/solr/servlet/SolrServlet#init().mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/SolrServlet#init().mjava","sourceNew":"  public void init() throws ServletException {\n    log.info(\"SolrServlet.init()\");\n    \n    // Check if the \"solr.xml\" file exists -- if so, this is an invalid servlet\n    // (even if there is only one core...)\n    String instanceDir = SolrResourceLoader.locateInstanceDir();\n    File fconf = new File(instanceDir, \"solr.xml\");\n    hasMulticore = fconf.exists();\n    \n    // we deliberately do not initialize a SolrCore because of SOLR-597\n    // https://issues.apache.org/jira/browse/SOLR-597\n    log.info(\"SolrServlet.init() done\");\n  }\n\n","sourceOld":"  public void init() throws ServletException {\n    log.info(\"SolrServlet.init()\");\n    \n    // Check if the \"solr.xml\" file exists -- if so, this is an invalid servlet\n    // (even if there is only one core...)\n    String instanceDir = SolrResourceLoader.locateInstanceDir();\n    File fconf = new File(instanceDir, \"solr.xml\");\n    hasMulticore = fconf.exists();\n    \n    // we deliberately do not initialize a SolrCore because of SOLR-597\n    // https://issues.apache.org/jira/browse/SOLR-597\n    log.info(\"SolrServlet.init() done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"818fa97f8efad761eafba0dad8c0f41685b8f852":["c628bdfec681530ae1c3bbb9e40b5df8c54e8b0b"],"71fd2f49de58ccb4422e7181620d8f795693b7eb":["864e484eede906448b166b945a619a5929422541"],"d262ab35a1389f4ad912bfa8b61a202c61cc475a":["71fd2f49de58ccb4422e7181620d8f795693b7eb"],"c628bdfec681530ae1c3bbb9e40b5df8c54e8b0b":["cbe98c74fdb9ed434e14c3d856735ab5c437c936"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"864e484eede906448b166b945a619a5929422541":["d80013b5e260def972025c93a0b08524f9c38f49"],"d80013b5e260def972025c93a0b08524f9c38f49":["5db1d0b312c5915094ef798a33d392623fd40bb3"],"aa235702a0d1a8a6bd98bb76af41228151323d54":["d262ab35a1389f4ad912bfa8b61a202c61cc475a"],"268776364d28ac43d2fac972c45f929978145470":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cbe98c74fdb9ed434e14c3d856735ab5c437c936":["268776364d28ac43d2fac972c45f929978145470"],"ad94625fb8d088209f46650c8097196fec67f00c":["aa235702a0d1a8a6bd98bb76af41228151323d54"],"5db1d0b312c5915094ef798a33d392623fd40bb3":["818fa97f8efad761eafba0dad8c0f41685b8f852"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"818fa97f8efad761eafba0dad8c0f41685b8f852":["5db1d0b312c5915094ef798a33d392623fd40bb3"],"71fd2f49de58ccb4422e7181620d8f795693b7eb":["d262ab35a1389f4ad912bfa8b61a202c61cc475a"],"d262ab35a1389f4ad912bfa8b61a202c61cc475a":["aa235702a0d1a8a6bd98bb76af41228151323d54"],"c628bdfec681530ae1c3bbb9e40b5df8c54e8b0b":["818fa97f8efad761eafba0dad8c0f41685b8f852"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"864e484eede906448b166b945a619a5929422541":["71fd2f49de58ccb4422e7181620d8f795693b7eb"],"d80013b5e260def972025c93a0b08524f9c38f49":["864e484eede906448b166b945a619a5929422541"],"aa235702a0d1a8a6bd98bb76af41228151323d54":["ad94625fb8d088209f46650c8097196fec67f00c"],"268776364d28ac43d2fac972c45f929978145470":["cbe98c74fdb9ed434e14c3d856735ab5c437c936"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["268776364d28ac43d2fac972c45f929978145470"],"cbe98c74fdb9ed434e14c3d856735ab5c437c936":["c628bdfec681530ae1c3bbb9e40b5df8c54e8b0b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"5db1d0b312c5915094ef798a33d392623fd40bb3":["d80013b5e260def972025c93a0b08524f9c38f49"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}