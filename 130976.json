{"path":"src/test/org/apache/lucene/IndexTest#main(String[]).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/test/org/apache/lucene/IndexTest#main(String[]).mjava","pathOld":"/dev/null","sourceNew":"  public static void main(String[] args) {\n    try {\n      Date start = new Date();\n\n      IndexWriter writer = new IndexWriter(\"F:\\\\test\", new SimpleAnalyzer(),\n\t\t\t\t\t   true);\n\n      writer.mergeFactor = 20;\n\n      indexDocs(writer, new File(\"F:\\\\recipes\"));\n\n      writer.optimize();\n      writer.close();\n\n      Date end = new Date();\n\n      System.out.print(end.getTime() - start.getTime());\n      System.out.println(\" total milliseconds\");\n\n      Runtime runtime = Runtime.getRuntime();\n\n      System.out.print(runtime.freeMemory());\n      System.out.println(\" free memory before gc\");\n      System.out.print(runtime.totalMemory());\n      System.out.println(\" total memory before gc\");\n\n      runtime.gc();\n\n      System.out.print(runtime.freeMemory());\n      System.out.println(\" free memory after gc\");\n      System.out.print(runtime.totalMemory());\n      System.out.println(\" total memory after gc\");\n\n    } catch (Exception e) {\n      System.out.println(\" caught a \" + e.getClass() +\n\t\t\t \"\\n with message: \" + e.getMessage());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5a49825bb29a22d2429de7a48020fd3e3d220e0","date":1043862193,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/test/org/apache/lucene/IndexTest#main(String[]).mjava","pathOld":"src/test/org/apache/lucene/IndexTest#main(String[]).mjava","sourceNew":"  public static void main(String[] args) {\n    try {\n      Date start = new Date();\n      // FIXME: OG: what's with this hard-coded dirs??\n      IndexWriter writer = new IndexWriter(\"F:\\\\test\", new SimpleAnalyzer(),\n\t\t\t\t\t   true);\n\n      writer.mergeFactor = 20;\n\n      // FIXME: OG: what's with this hard-coded dirs??\n      indexDocs(writer, new File(\"F:\\\\recipes\"));\n\n      writer.optimize();\n      writer.close();\n\n      Date end = new Date();\n\n      System.out.print(end.getTime() - start.getTime());\n      System.out.println(\" total milliseconds\");\n\n      Runtime runtime = Runtime.getRuntime();\n\n      System.out.print(runtime.freeMemory());\n      System.out.println(\" free memory before gc\");\n      System.out.print(runtime.totalMemory());\n      System.out.println(\" total memory before gc\");\n\n      runtime.gc();\n\n      System.out.print(runtime.freeMemory());\n      System.out.println(\" free memory after gc\");\n      System.out.print(runtime.totalMemory());\n      System.out.println(\" total memory after gc\");\n\n    } catch (Exception e) {\n      System.out.println(\" caught a \" + e.getClass() +\n\t\t\t \"\\n with message: \" + e.getMessage());\n    }\n  }\n\n","sourceOld":"  public static void main(String[] args) {\n    try {\n      Date start = new Date();\n\n      IndexWriter writer = new IndexWriter(\"F:\\\\test\", new SimpleAnalyzer(),\n\t\t\t\t\t   true);\n\n      writer.mergeFactor = 20;\n\n      indexDocs(writer, new File(\"F:\\\\recipes\"));\n\n      writer.optimize();\n      writer.close();\n\n      Date end = new Date();\n\n      System.out.print(end.getTime() - start.getTime());\n      System.out.println(\" total milliseconds\");\n\n      Runtime runtime = Runtime.getRuntime();\n\n      System.out.print(runtime.freeMemory());\n      System.out.println(\" free memory before gc\");\n      System.out.print(runtime.totalMemory());\n      System.out.println(\" total memory before gc\");\n\n      runtime.gc();\n\n      System.out.print(runtime.freeMemory());\n      System.out.println(\" free memory after gc\");\n      System.out.print(runtime.totalMemory());\n      System.out.println(\" total memory after gc\");\n\n    } catch (Exception e) {\n      System.out.println(\" caught a \" + e.getClass() +\n\t\t\t \"\\n with message: \" + e.getMessage());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f28ae4023424dbe351320fa0c27a211a2928a3e","date":1107572602,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/test/org/apache/lucene/IndexTest#main(String[]).mjava","pathOld":"src/test/org/apache/lucene/IndexTest#main(String[]).mjava","sourceNew":"  public static void main(String[] args) {\n    try {\n      Date start = new Date();\n      // FIXME: OG: what's with this hard-coded dirs??\n      IndexWriter writer = new IndexWriter(\"F:\\\\test\", new SimpleAnalyzer(),\n\t\t\t\t\t   true);\n\n      writer.setMergeFactor(20);\n\n      // FIXME: OG: what's with this hard-coded dirs??\n      indexDocs(writer, new File(\"F:\\\\recipes\"));\n\n      writer.optimize();\n      writer.close();\n\n      Date end = new Date();\n\n      System.out.print(end.getTime() - start.getTime());\n      System.out.println(\" total milliseconds\");\n\n      Runtime runtime = Runtime.getRuntime();\n\n      System.out.print(runtime.freeMemory());\n      System.out.println(\" free memory before gc\");\n      System.out.print(runtime.totalMemory());\n      System.out.println(\" total memory before gc\");\n\n      runtime.gc();\n\n      System.out.print(runtime.freeMemory());\n      System.out.println(\" free memory after gc\");\n      System.out.print(runtime.totalMemory());\n      System.out.println(\" total memory after gc\");\n\n    } catch (Exception e) {\n      System.out.println(\" caught a \" + e.getClass() +\n\t\t\t \"\\n with message: \" + e.getMessage());\n    }\n  }\n\n","sourceOld":"  public static void main(String[] args) {\n    try {\n      Date start = new Date();\n      // FIXME: OG: what's with this hard-coded dirs??\n      IndexWriter writer = new IndexWriter(\"F:\\\\test\", new SimpleAnalyzer(),\n\t\t\t\t\t   true);\n\n      writer.mergeFactor = 20;\n\n      // FIXME: OG: what's with this hard-coded dirs??\n      indexDocs(writer, new File(\"F:\\\\recipes\"));\n\n      writer.optimize();\n      writer.close();\n\n      Date end = new Date();\n\n      System.out.print(end.getTime() - start.getTime());\n      System.out.println(\" total milliseconds\");\n\n      Runtime runtime = Runtime.getRuntime();\n\n      System.out.print(runtime.freeMemory());\n      System.out.println(\" free memory before gc\");\n      System.out.print(runtime.totalMemory());\n      System.out.println(\" total memory before gc\");\n\n      runtime.gc();\n\n      System.out.print(runtime.freeMemory());\n      System.out.println(\" free memory after gc\");\n      System.out.print(runtime.totalMemory());\n      System.out.println(\" total memory after gc\");\n\n    } catch (Exception e) {\n      System.out.println(\" caught a \" + e.getClass() +\n\t\t\t \"\\n with message: \" + e.getMessage());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a498061e11ab0313bf98bfc4771dc3ce08e9bba","date":1110598265,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/test/org/apache/lucene/IndexTest#main(String[]).mjava","pathOld":"src/test/org/apache/lucene/IndexTest#main(String[]).mjava","sourceNew":"  public static void main(String[] args) {\n    try {\n      Date start = new Date();\n      IndexWriter writer = new IndexWriter(File.createTempFile(\"luceneTest\", \"idx\"),\n        new SimpleAnalyzer(), true);\n\n      writer.setMergeFactor(20);\n\n      indexDocs(writer, new File(\"/tmp\"));\n\n      writer.optimize();\n      writer.close();\n\n      Date end = new Date();\n\n      System.out.print(end.getTime() - start.getTime());\n      System.out.println(\" total milliseconds\");\n\n      Runtime runtime = Runtime.getRuntime();\n\n      System.out.print(runtime.freeMemory());\n      System.out.println(\" free memory before gc\");\n      System.out.print(runtime.totalMemory());\n      System.out.println(\" total memory before gc\");\n\n      runtime.gc();\n\n      System.out.print(runtime.freeMemory());\n      System.out.println(\" free memory after gc\");\n      System.out.print(runtime.totalMemory());\n      System.out.println(\" total memory after gc\");\n\n    } catch (Exception e) {\n      System.out.println(\" caught a \" + e.getClass() +\n          \"\\n with message: \" + e.getMessage());\n    }\n  }\n\n","sourceOld":"  public static void main(String[] args) {\n    try {\n      Date start = new Date();\n      // FIXME: OG: what's with this hard-coded dirs??\n      IndexWriter writer = new IndexWriter(\"F:\\\\test\", new SimpleAnalyzer(),\n\t\t\t\t\t   true);\n\n      writer.setMergeFactor(20);\n\n      // FIXME: OG: what's with this hard-coded dirs??\n      indexDocs(writer, new File(\"F:\\\\recipes\"));\n\n      writer.optimize();\n      writer.close();\n\n      Date end = new Date();\n\n      System.out.print(end.getTime() - start.getTime());\n      System.out.println(\" total milliseconds\");\n\n      Runtime runtime = Runtime.getRuntime();\n\n      System.out.print(runtime.freeMemory());\n      System.out.println(\" free memory before gc\");\n      System.out.print(runtime.totalMemory());\n      System.out.println(\" total memory before gc\");\n\n      runtime.gc();\n\n      System.out.print(runtime.freeMemory());\n      System.out.println(\" free memory after gc\");\n      System.out.print(runtime.totalMemory());\n      System.out.println(\" total memory after gc\");\n\n    } catch (Exception e) {\n      System.out.println(\" caught a \" + e.getClass() +\n\t\t\t \"\\n with message: \" + e.getMessage());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"235efcba838a273934c5dd0ef66bb07c7fb0d718","date":1201256475,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/IndexTest#main(String[]).mjava","pathOld":"src/test/org/apache/lucene/IndexTest#main(String[]).mjava","sourceNew":"  public static void main(String[] args) {\n    try {\n      Date start = new Date();\n      IndexWriter writer = new IndexWriter(File.createTempFile(\"luceneTest\", \"idx\"),\n        new SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n\n      writer.setMergeFactor(20);\n\n      indexDocs(writer, new File(\"/tmp\"));\n\n      writer.optimize();\n      writer.close();\n\n      Date end = new Date();\n\n      System.out.print(end.getTime() - start.getTime());\n      System.out.println(\" total milliseconds\");\n\n      Runtime runtime = Runtime.getRuntime();\n\n      System.out.print(runtime.freeMemory());\n      System.out.println(\" free memory before gc\");\n      System.out.print(runtime.totalMemory());\n      System.out.println(\" total memory before gc\");\n\n      runtime.gc();\n\n      System.out.print(runtime.freeMemory());\n      System.out.println(\" free memory after gc\");\n      System.out.print(runtime.totalMemory());\n      System.out.println(\" total memory after gc\");\n\n    } catch (Exception e) {\n      System.out.println(\" caught a \" + e.getClass() +\n          \"\\n with message: \" + e.getMessage());\n    }\n  }\n\n","sourceOld":"  public static void main(String[] args) {\n    try {\n      Date start = new Date();\n      IndexWriter writer = new IndexWriter(File.createTempFile(\"luceneTest\", \"idx\"),\n        new SimpleAnalyzer(), true);\n\n      writer.setMergeFactor(20);\n\n      indexDocs(writer, new File(\"/tmp\"));\n\n      writer.optimize();\n      writer.close();\n\n      Date end = new Date();\n\n      System.out.print(end.getTime() - start.getTime());\n      System.out.println(\" total milliseconds\");\n\n      Runtime runtime = Runtime.getRuntime();\n\n      System.out.print(runtime.freeMemory());\n      System.out.println(\" free memory before gc\");\n      System.out.print(runtime.totalMemory());\n      System.out.println(\" total memory before gc\");\n\n      runtime.gc();\n\n      System.out.print(runtime.freeMemory());\n      System.out.println(\" free memory after gc\");\n      System.out.print(runtime.totalMemory());\n      System.out.println(\" total memory after gc\");\n\n    } catch (Exception e) {\n      System.out.println(\" caught a \" + e.getClass() +\n          \"\\n with message: \" + e.getMessage());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"520d06488b13c8ef837dd0815b77a80fff8779e1","date":1240950232,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test/org/apache/lucene/IndexTest#main(String[]).mjava","sourceNew":null,"sourceOld":"  public static void main(String[] args) {\n    try {\n      Date start = new Date();\n      IndexWriter writer = new IndexWriter(File.createTempFile(\"luceneTest\", \"idx\"),\n        new SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n\n      writer.setMergeFactor(20);\n\n      indexDocs(writer, new File(\"/tmp\"));\n\n      writer.optimize();\n      writer.close();\n\n      Date end = new Date();\n\n      System.out.print(end.getTime() - start.getTime());\n      System.out.println(\" total milliseconds\");\n\n      Runtime runtime = Runtime.getRuntime();\n\n      System.out.print(runtime.freeMemory());\n      System.out.println(\" free memory before gc\");\n      System.out.print(runtime.totalMemory());\n      System.out.println(\" total memory before gc\");\n\n      runtime.gc();\n\n      System.out.print(runtime.freeMemory());\n      System.out.println(\" free memory after gc\");\n      System.out.print(runtime.totalMemory());\n      System.out.println(\" total memory after gc\");\n\n    } catch (Exception e) {\n      System.out.println(\" caught a \" + e.getClass() +\n          \"\\n with message: \" + e.getMessage());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"235efcba838a273934c5dd0ef66bb07c7fb0d718":["0a498061e11ab0313bf98bfc4771dc3ce08e9bba"],"520d06488b13c8ef837dd0815b77a80fff8779e1":["235efcba838a273934c5dd0ef66bb07c7fb0d718"],"0a498061e11ab0313bf98bfc4771dc3ce08e9bba":["5f28ae4023424dbe351320fa0c27a211a2928a3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a5a49825bb29a22d2429de7a48020fd3e3d220e0":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"5f28ae4023424dbe351320fa0c27a211a2928a3e":["a5a49825bb29a22d2429de7a48020fd3e3d220e0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["520d06488b13c8ef837dd0815b77a80fff8779e1"]},"commit2Childs":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a5a49825bb29a22d2429de7a48020fd3e3d220e0"],"235efcba838a273934c5dd0ef66bb07c7fb0d718":["520d06488b13c8ef837dd0815b77a80fff8779e1"],"520d06488b13c8ef837dd0815b77a80fff8779e1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"0a498061e11ab0313bf98bfc4771dc3ce08e9bba":["235efcba838a273934c5dd0ef66bb07c7fb0d718"],"a5a49825bb29a22d2429de7a48020fd3e3d220e0":["5f28ae4023424dbe351320fa0c27a211a2928a3e"],"5f28ae4023424dbe351320fa0c27a211a2928a3e":["0a498061e11ab0313bf98bfc4771dc3ce08e9bba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}