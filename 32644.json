{"path":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","commits":[{"id":"0c3e228bf650e96f3002a8fb73dd0c13d55af077","date":1138253849,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"/dev/null","sourceNew":"  void initIndex() {\n    try {\n      File dirFile = new File(getDir());\n      boolean indexExists = dirFile.canRead();\n\n\n      boolean removeLocks = SolrConfig.config.getBool(\"mainIndex/unlockOnStartup\", false);\n      if (removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = FSDirectory.getDirectory(dirFile, !indexExists);\n        if (IndexReader.isLocked(dir)) {\n          log.warning(\"WARNING: Solr index directory '\" + getDir() + \"' is locked.  Unlocking...\");\n          IndexReader.unlock(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist. Note that indexExists was tested *before*\n      // lock removal, since that will result in the creation of the directory.\n      if(!indexExists) {\n        log.warning(\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\",getDir(), true, schema, mainIndexConfig);\n        writer.close();\n\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1f93cd2f2eedfa90201b45c4822af1b5f35680f4","e0bbfc7e96e0cf26b51dcefe3b2e4c93fe34e8c0","e0bbfc7e96e0cf26b51dcefe3b2e4c93fe34e8c0","e0bbfc7e96e0cf26b51dcefe3b2e4c93fe34e8c0","ab20a04a303d3d2a5078076f4633e0482d643cc0","ab20a04a303d3d2a5078076f4633e0482d643cc0","ab20a04a303d3d2a5078076f4633e0482d643cc0","877f1e09b9299ce0757f4d83768da944803baf04","877f1e09b9299ce0757f4d83768da944803baf04","877f1e09b9299ce0757f4d83768da944803baf04","bb222a3f9d9421d5c95afce73013fbd8de07ea1f","bb222a3f9d9421d5c95afce73013fbd8de07ea1f","bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"268776364d28ac43d2fac972c45f929978145470","date":1139281135,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex() {\n    try {\n      File dirFile = new File(getIndexDir());\n      boolean indexExists = dirFile.canRead();\n\n      boolean removeLocks = SolrConfig.config.getBool(\"mainIndex/unlockOnStartup\", false);\n      if (removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = FSDirectory.getDirectory(dirFile, !indexExists);\n        if (IndexReader.isLocked(dir)) {\n          log.warning(\"WARNING: Solr index directory '\" + getDataDir() + \"' is locked.  Unlocking...\");\n          IndexReader.unlock(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist. Note that indexExists was tested *before*\n      // lock removal, since that will result in the creation of the directory.\n      if(!indexExists) {\n        log.warning(\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\",getDataDir(), true, schema, mainIndexConfig);\n        writer.close();\n\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n      File dirFile = new File(getDir());\n      boolean indexExists = dirFile.canRead();\n\n\n      boolean removeLocks = SolrConfig.config.getBool(\"mainIndex/unlockOnStartup\", false);\n      if (removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = FSDirectory.getDirectory(dirFile, !indexExists);\n        if (IndexReader.isLocked(dir)) {\n          log.warning(\"WARNING: Solr index directory '\" + getDir() + \"' is locked.  Unlocking...\");\n          IndexReader.unlock(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist. Note that indexExists was tested *before*\n      // lock removal, since that will result in the creation of the directory.\n      if(!indexExists) {\n        log.warning(\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\",getDir(), true, schema, mainIndexConfig);\n        writer.close();\n\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a2283b269255d4b0c797b353f09c66e76c19a33e","date":1170624800,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex() {\n    try {\n      File dirFile = new File(getIndexDir());\n      boolean indexExists = dirFile.canRead();\n\n      boolean removeLocks = SolrConfig.config.getBool(\"mainIndex/unlockOnStartup\", false);\n      if (removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = FSDirectory.getDirectory(dirFile, !indexExists);\n        if (IndexReader.isLocked(dir)) {\n          log.warning(\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n          IndexReader.unlock(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist. Note that indexExists was tested *before*\n      // lock removal, since that will result in the creation of the directory.\n      if(!indexExists) {\n        log.warning(\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\",getIndexDir(), true, schema, mainIndexConfig);\n        writer.close();\n\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n      File dirFile = new File(getIndexDir());\n      boolean indexExists = dirFile.canRead();\n\n      boolean removeLocks = SolrConfig.config.getBool(\"mainIndex/unlockOnStartup\", false);\n      if (removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = FSDirectory.getDirectory(dirFile, !indexExists);\n        if (IndexReader.isLocked(dir)) {\n          log.warning(\"WARNING: Solr index directory '\" + getDataDir() + \"' is locked.  Unlocking...\");\n          IndexReader.unlock(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist. Note that indexExists was tested *before*\n      // lock removal, since that will result in the creation of the directory.\n      if(!indexExists) {\n        log.warning(\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\",getDataDir(), true, schema, mainIndexConfig);\n        writer.close();\n\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6d6338c87060be5f66757a94945975f3bbd377a9","date":1189278234,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex() {\n    try {\n      File dirFile = new File(getIndexDir());\n      boolean indexExists = dirFile.canRead();\n\n      boolean removeLocks = solrConfig.getBool(\"mainIndex/unlockOnStartup\", false);\n      if (removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = FSDirectory.getDirectory(dirFile, !indexExists);\n        if (IndexReader.isLocked(dir)) {\n          log.warning(\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n          IndexReader.unlock(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist. Note that indexExists was tested *before*\n      // lock removal, since that will result in the creation of the directory.\n      if(!indexExists) {\n        log.warning(\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\",getIndexDir(), true, schema, solrConfig.mainIndexConfig);\n        writer.close();\n\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n      File dirFile = new File(getIndexDir());\n      boolean indexExists = dirFile.canRead();\n\n      boolean removeLocks = SolrConfig.config.getBool(\"mainIndex/unlockOnStartup\", false);\n      if (removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = FSDirectory.getDirectory(dirFile, !indexExists);\n        if (IndexReader.isLocked(dir)) {\n          log.warning(\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n          IndexReader.unlock(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist. Note that indexExists was tested *before*\n      // lock removal, since that will result in the creation of the directory.\n      if(!indexExists) {\n        log.warning(\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\",getIndexDir(), true, schema, mainIndexConfig);\n        writer.close();\n\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"048361614025800e582bfc7a7b0329dc6fd6a95e","date":1196999392,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex() {\n    try {\n      File dirFile = new File(getIndexDir());\n      boolean indexExists = dirFile.canRead();\n\n      boolean removeLocks = solrConfig.getBool(\"mainIndex/unlockOnStartup\", false);\n      if (removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = FSDirectory.getDirectory(dirFile, !indexExists);\n        if (IndexReader.isLocked(dir)) {\n          log.warning(\"[\"+name+\"] WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n          IndexReader.unlock(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist. Note that indexExists was tested *before*\n      // lock removal, since that will result in the creation of the directory.\n      if(!indexExists) {\n        log.warning(\"[\"+name+\"] Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\",getIndexDir(), true, schema, solrConfig.mainIndexConfig);\n        writer.close();\n\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n      File dirFile = new File(getIndexDir());\n      boolean indexExists = dirFile.canRead();\n\n      boolean removeLocks = solrConfig.getBool(\"mainIndex/unlockOnStartup\", false);\n      if (removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = FSDirectory.getDirectory(dirFile, !indexExists);\n        if (IndexReader.isLocked(dir)) {\n          log.warning(\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n          IndexReader.unlock(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist. Note that indexExists was tested *before*\n      // lock removal, since that will result in the creation of the directory.\n      if(!indexExists) {\n        log.warning(\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\",getIndexDir(), true, schema, solrConfig.mainIndexConfig);\n        writer.close();\n\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b46f0ccfb6b63c307ea901d48482630e3689042c","date":1198805331,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex() {\n    try {\n      File dirFile = new File(getIndexDir());\n      boolean indexExists = dirFile.canRead();\n\n      boolean removeLocks = solrConfig.getBool(\"mainIndex/unlockOnStartup\", false);\n      if (removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = FSDirectory.getDirectory(dirFile, !indexExists);\n        if (IndexReader.isLocked(dir)) {\n          log.warning(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n          IndexReader.unlock(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist. Note that indexExists was tested *before*\n      // lock removal, since that will result in the creation of the directory.\n      if(!indexExists) {\n        log.warning(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\",getIndexDir(), true, schema, solrConfig.mainIndexConfig);\n        writer.close();\n\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n      File dirFile = new File(getIndexDir());\n      boolean indexExists = dirFile.canRead();\n\n      boolean removeLocks = solrConfig.getBool(\"mainIndex/unlockOnStartup\", false);\n      if (removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = FSDirectory.getDirectory(dirFile, !indexExists);\n        if (IndexReader.isLocked(dir)) {\n          log.warning(\"[\"+name+\"] WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n          IndexReader.unlock(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist. Note that indexExists was tested *before*\n      // lock removal, since that will result in the creation of the directory.\n      if(!indexExists) {\n        log.warning(\"[\"+name+\"] Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\",getIndexDir(), true, schema, solrConfig.mainIndexConfig);\n        writer.close();\n\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0e74c023a740578ac4e079f01ded819fd6307c78","date":1215880020,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex() {\n    try {\n      File dirFile = new File(getIndexDir());\n      boolean indexExists = dirFile.canRead();\n\n      boolean removeLocks = solrConfig.getBool(\"mainIndex/unlockOnStartup\", false);\n      if (indexExists && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), solrConfig.mainIndexConfig);\n        if (dir != null && IndexWriter.isLocked(dir)) {\n          log.warning(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n          IndexWriter.unlock(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warning(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\",getIndexDir(), true, schema, solrConfig.mainIndexConfig);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n      File dirFile = new File(getIndexDir());\n      boolean indexExists = dirFile.canRead();\n\n      boolean removeLocks = solrConfig.getBool(\"mainIndex/unlockOnStartup\", false);\n      if (removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = FSDirectory.getDirectory(dirFile, !indexExists);\n        if (IndexReader.isLocked(dir)) {\n          log.warning(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n          IndexReader.unlock(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist. Note that indexExists was tested *before*\n      // lock removal, since that will result in the creation of the directory.\n      if(!indexExists) {\n        log.warning(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\",getIndexDir(), true, schema, solrConfig.mainIndexConfig);\n        writer.close();\n\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":["1f93cd2f2eedfa90201b45c4822af1b5f35680f4","e0bbfc7e96e0cf26b51dcefe3b2e4c93fe34e8c0","e0bbfc7e96e0cf26b51dcefe3b2e4c93fe34e8c0","e0bbfc7e96e0cf26b51dcefe3b2e4c93fe34e8c0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1f93cd2f2eedfa90201b45c4822af1b5f35680f4","date":1218313644,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  // currently only called with SolrCore.class lock held\n  void initIndex() {\n    try {\n      File dirFile = new File(getIndexDir());\n      boolean indexExists = dirFile.canRead();\n      boolean firstTime = dirs.add(dirFile.getCanonicalPath());\n      boolean removeLocks = solrConfig.getBool(\"mainIndex/unlockOnStartup\", false);\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), solrConfig.mainIndexConfig);\n        if (dir != null && IndexWriter.isLocked(dir)) {\n          log.warning(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n          IndexWriter.unlock(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warning(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\",getIndexDir(), true, schema, solrConfig.mainIndexConfig);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n      File dirFile = new File(getIndexDir());\n      boolean indexExists = dirFile.canRead();\n\n      boolean removeLocks = solrConfig.getBool(\"mainIndex/unlockOnStartup\", false);\n      if (indexExists && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), solrConfig.mainIndexConfig);\n        if (dir != null && IndexWriter.isLocked(dir)) {\n          log.warning(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n          IndexWriter.unlock(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warning(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\",getIndexDir(), true, schema, solrConfig.mainIndexConfig);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":["0e74c023a740578ac4e079f01ded819fd6307c78","0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"00da8b51bdeae168a5b26ec506db372b219ca7a2","date":1221704186,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  // currently only called with SolrCore.class lock held\n  void initIndex() {\n    try {\n      File dirFile = new File(getIndexDir());\n      boolean indexExists = dirFile.canRead();\n      boolean firstTime = dirs.add(dirFile.getCanonicalPath());\n      boolean removeLocks = solrConfig.getBool(\"mainIndex/unlockOnStartup\", false);\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), solrConfig.mainIndexConfig);\n        if (dir != null && IndexWriter.isLocked(dir)) {\n          log.warn(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n          IndexWriter.unlock(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\",getIndexDir(), true, schema, solrConfig.mainIndexConfig);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  // currently only called with SolrCore.class lock held\n  void initIndex() {\n    try {\n      File dirFile = new File(getIndexDir());\n      boolean indexExists = dirFile.canRead();\n      boolean firstTime = dirs.add(dirFile.getCanonicalPath());\n      boolean removeLocks = solrConfig.getBool(\"mainIndex/unlockOnStartup\", false);\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), solrConfig.mainIndexConfig);\n        if (dir != null && IndexWriter.isLocked(dir)) {\n          log.warning(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n          IndexWriter.unlock(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warning(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\",getIndexDir(), true, schema, solrConfig.mainIndexConfig);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"29765e35c99654ed87e394d8bc13d8ab07b51092","date":1223889162,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  // currently only called with SolrCore.class lock held\n  void initIndex() {\n    try {\n      File dirFile = new File(getNewIndexDir());\n      boolean indexExists = dirFile.canRead();\n      boolean firstTime = dirs.add(dirFile.getCanonicalPath());\n      boolean removeLocks = solrConfig.getBool(\"mainIndex/unlockOnStartup\", false);\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), solrConfig.mainIndexConfig);\n        if (dir != null && IndexWriter.isLocked(dir)) {\n          log.warn(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n          IndexWriter.unlock(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\",getIndexDir(), true, schema, solrConfig.mainIndexConfig);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  // currently only called with SolrCore.class lock held\n  void initIndex() {\n    try {\n      File dirFile = new File(getIndexDir());\n      boolean indexExists = dirFile.canRead();\n      boolean firstTime = dirs.add(dirFile.getCanonicalPath());\n      boolean removeLocks = solrConfig.getBool(\"mainIndex/unlockOnStartup\", false);\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), solrConfig.mainIndexConfig);\n        if (dir != null && IndexWriter.isLocked(dir)) {\n          log.warn(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n          IndexWriter.unlock(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\",getIndexDir(), true, schema, solrConfig.mainIndexConfig);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"31f1e0aff124b03ebeca0a1de45361b8efd0d2d9","date":1226014899,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  // currently only called with SolrCore.class lock held\n  void initIndex() {\n    try {\n      File dirFile = new File(getNewIndexDir());\n      boolean indexExists = dirFile.canRead();\n      boolean firstTime = dirs.add(dirFile.getCanonicalPath());\n      boolean removeLocks = solrConfig.getBool(\"mainIndex/unlockOnStartup\", false);\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), solrConfig.mainIndexConfig);\n        if (dir != null && IndexWriter.isLocked(dir)) {\n          log.warn(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n          IndexWriter.unlock(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\",getIndexDir(), true, schema, solrConfig.mainIndexConfig);\n        writer.close();\n      }\n      \n      initDirectoryFactory();\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  // currently only called with SolrCore.class lock held\n  void initIndex() {\n    try {\n      File dirFile = new File(getNewIndexDir());\n      boolean indexExists = dirFile.canRead();\n      boolean firstTime = dirs.add(dirFile.getCanonicalPath());\n      boolean removeLocks = solrConfig.getBool(\"mainIndex/unlockOnStartup\", false);\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), solrConfig.mainIndexConfig);\n        if (dir != null && IndexWriter.isLocked(dir)) {\n          log.warn(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n          IndexWriter.unlock(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\",getIndexDir(), true, schema, solrConfig.mainIndexConfig);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":["d3b0ef1de6025bc18611a7bde19af940e27450d7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"db71c9bced2a5e90a7d21fa3ce2d105f60867412","date":1229606321,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  // currently only called with SolrCore.class lock held\n  void initIndex() {\n    try {\n      File dirFile = new File(getNewIndexDir());\n      boolean indexExists = dirFile.canRead();\n      boolean firstTime = dirs.add(dirFile.getCanonicalPath());\n      boolean removeLocks = solrConfig.getBool(\"mainIndex/unlockOnStartup\", false);\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\",getIndexDir(), true, schema, solrConfig.mainIndexConfig);\n        writer.close();\n      }\n      \n      initDirectoryFactory();\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  // currently only called with SolrCore.class lock held\n  void initIndex() {\n    try {\n      File dirFile = new File(getNewIndexDir());\n      boolean indexExists = dirFile.canRead();\n      boolean firstTime = dirs.add(dirFile.getCanonicalPath());\n      boolean removeLocks = solrConfig.getBool(\"mainIndex/unlockOnStartup\", false);\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), solrConfig.mainIndexConfig);\n        if (dir != null && IndexWriter.isLocked(dir)) {\n          log.warn(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n          IndexWriter.unlock(dir);\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\",getIndexDir(), true, schema, solrConfig.mainIndexConfig);\n        writer.close();\n      }\n      \n      initDirectoryFactory();\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":["f885550d27f2e8768dae49c3e1adf890f86f7988","e0bbfc7e96e0cf26b51dcefe3b2e4c93fe34e8c0","e0bbfc7e96e0cf26b51dcefe3b2e4c93fe34e8c0","e0bbfc7e96e0cf26b51dcefe3b2e4c93fe34e8c0","e22ffe8cc51a892ae103df018822d7873e901c2a","e22ffe8cc51a892ae103df018822d7873e901c2a","e22ffe8cc51a892ae103df018822d7873e901c2a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3b0ef1de6025bc18611a7bde19af940e27450d7","date":1229623206,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  // currently only called with SolrCore.class lock held\n  void initIndex() {\n    try {\n      File dirFile = new File(getNewIndexDir());\n      boolean indexExists = dirFile.canRead();\n      boolean firstTime = dirs.add(dirFile.getCanonicalPath());\n      boolean removeLocks = solrConfig.getBool(\"mainIndex/unlockOnStartup\", false);\n\n      initDirectoryFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\",getIndexDir(), true, schema, solrConfig.mainIndexConfig);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  // currently only called with SolrCore.class lock held\n  void initIndex() {\n    try {\n      File dirFile = new File(getNewIndexDir());\n      boolean indexExists = dirFile.canRead();\n      boolean firstTime = dirs.add(dirFile.getCanonicalPath());\n      boolean removeLocks = solrConfig.getBool(\"mainIndex/unlockOnStartup\", false);\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\",getIndexDir(), true, schema, solrConfig.mainIndexConfig);\n        writer.close();\n      }\n      \n      initDirectoryFactory();\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":["31f1e0aff124b03ebeca0a1de45361b8efd0d2d9"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0df4c5cd5eaf4742b3a39587e6de21a372bcb6fc","date":1240392310,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex() {\n    try {\n      File dirFile = new File(getNewIndexDir());\n      boolean indexExists = dirFile.canRead();\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(dirFile.getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.getBool(\"mainIndex/unlockOnStartup\", false);\n\n      initDirectoryFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\",getIndexDir(), true, schema, solrConfig.mainIndexConfig);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  // currently only called with SolrCore.class lock held\n  void initIndex() {\n    try {\n      File dirFile = new File(getNewIndexDir());\n      boolean indexExists = dirFile.canRead();\n      boolean firstTime = dirs.add(dirFile.getCanonicalPath());\n      boolean removeLocks = solrConfig.getBool(\"mainIndex/unlockOnStartup\", false);\n\n      initDirectoryFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\",getIndexDir(), true, schema, solrConfig.mainIndexConfig);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":["e0bbfc7e96e0cf26b51dcefe3b2e4c93fe34e8c0","e0bbfc7e96e0cf26b51dcefe3b2e4c93fe34e8c0","e0bbfc7e96e0cf26b51dcefe3b2e4c93fe34e8c0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3ce242b547bca7056212426a479818096cc367bf","date":1241022145,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex() {\n    try {\n      File dirFile = new File(getNewIndexDir());\n      boolean indexExists = dirFile.canRead();\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(dirFile.getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.getBool(\"mainIndex/unlockOnStartup\", false);\n\n      initDirectoryFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", getIndexDir(), getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n      File dirFile = new File(getNewIndexDir());\n      boolean indexExists = dirFile.canRead();\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(dirFile.getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.getBool(\"mainIndex/unlockOnStartup\", false);\n\n      initDirectoryFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\",getIndexDir(), true, schema, solrConfig.mainIndexConfig);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":["3fb91a37fdd32424e0dae9bdb8e055dc4331acc0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"656ba78dd2c0e88d11623fc5bceca3ea217ce0b3","date":1244100008,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex() {\n    try {\n      File dirFile = new File(getNewIndexDir());\n      boolean indexExists = dirFile.canRead();\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(dirFile.getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initDirectoryFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", getIndexDir(), getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n      File dirFile = new File(getNewIndexDir());\n      boolean indexExists = dirFile.canRead();\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(dirFile.getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.getBool(\"mainIndex/unlockOnStartup\", false);\n\n      initDirectoryFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", getIndexDir(), getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":["e0bbfc7e96e0cf26b51dcefe3b2e4c93fe34e8c0","e0bbfc7e96e0cf26b51dcefe3b2e4c93fe34e8c0","e0bbfc7e96e0cf26b51dcefe3b2e4c93fe34e8c0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"87d6953dbc5baae40e6e21efa735a75f85ac13f2","date":1244472991,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex() {\n    try {\n      File dirFile = new File(getNewIndexDir());\n      boolean indexExists = dirFile.canRead();\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(dirFile.getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initDirectoryFactory();\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", getIndexDir(), getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n      File dirFile = new File(getNewIndexDir());\n      boolean indexExists = dirFile.canRead();\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(dirFile.getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initDirectoryFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", getIndexDir(), getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":["e0bbfc7e96e0cf26b51dcefe3b2e4c93fe34e8c0","e0bbfc7e96e0cf26b51dcefe3b2e4c93fe34e8c0","e0bbfc7e96e0cf26b51dcefe3b2e4c93fe34e8c0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3fb91a37fdd32424e0dae9bdb8e055dc4331acc0","date":1251960407,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex() {\n    try {\n      File dirFile = new File(getNewIndexDir());\n      boolean indexExists = dirFile.canRead();\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(dirFile.getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initDirectoryFactory();\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", getIndexDir(), getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n      File dirFile = new File(getNewIndexDir());\n      boolean indexExists = dirFile.canRead();\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(dirFile.getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initDirectoryFactory();\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", getIndexDir(), getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":["3ce242b547bca7056212426a479818096cc367bf"],"bugIntro":["f885550d27f2e8768dae49c3e1adf890f86f7988"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex() {\n    try {\n      File dirFile = new File(getNewIndexDir());\n      boolean indexExists = dirFile.canRead();\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(dirFile.getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initDirectoryFactory();\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", getIndexDir(), getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n      File dirFile = new File(getNewIndexDir());\n      boolean indexExists = dirFile.canRead();\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(dirFile.getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initDirectoryFactory();\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", getIndexDir(), getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"656ba78dd2c0e88d11623fc5bceca3ea217ce0b3":["3ce242b547bca7056212426a479818096cc367bf"],"6d6338c87060be5f66757a94945975f3bbd377a9":["a2283b269255d4b0c797b353f09c66e76c19a33e"],"3fb91a37fdd32424e0dae9bdb8e055dc4331acc0":["87d6953dbc5baae40e6e21efa735a75f85ac13f2"],"1f93cd2f2eedfa90201b45c4822af1b5f35680f4":["0e74c023a740578ac4e079f01ded819fd6307c78"],"3ce242b547bca7056212426a479818096cc367bf":["0df4c5cd5eaf4742b3a39587e6de21a372bcb6fc"],"a2283b269255d4b0c797b353f09c66e76c19a33e":["268776364d28ac43d2fac972c45f929978145470"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"b46f0ccfb6b63c307ea901d48482630e3689042c":["048361614025800e582bfc7a7b0329dc6fd6a95e"],"00da8b51bdeae168a5b26ec506db372b219ca7a2":["1f93cd2f2eedfa90201b45c4822af1b5f35680f4"],"87d6953dbc5baae40e6e21efa735a75f85ac13f2":["656ba78dd2c0e88d11623fc5bceca3ea217ce0b3"],"31f1e0aff124b03ebeca0a1de45361b8efd0d2d9":["29765e35c99654ed87e394d8bc13d8ab07b51092"],"0df4c5cd5eaf4742b3a39587e6de21a372bcb6fc":["d3b0ef1de6025bc18611a7bde19af940e27450d7"],"268776364d28ac43d2fac972c45f929978145470":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"048361614025800e582bfc7a7b0329dc6fd6a95e":["6d6338c87060be5f66757a94945975f3bbd377a9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"db71c9bced2a5e90a7d21fa3ce2d105f60867412":["31f1e0aff124b03ebeca0a1de45361b8efd0d2d9"],"ad94625fb8d088209f46650c8097196fec67f00c":["3fb91a37fdd32424e0dae9bdb8e055dc4331acc0"],"d3b0ef1de6025bc18611a7bde19af940e27450d7":["db71c9bced2a5e90a7d21fa3ce2d105f60867412"],"29765e35c99654ed87e394d8bc13d8ab07b51092":["00da8b51bdeae168a5b26ec506db372b219ca7a2"],"0e74c023a740578ac4e079f01ded819fd6307c78":["b46f0ccfb6b63c307ea901d48482630e3689042c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"656ba78dd2c0e88d11623fc5bceca3ea217ce0b3":["87d6953dbc5baae40e6e21efa735a75f85ac13f2"],"6d6338c87060be5f66757a94945975f3bbd377a9":["048361614025800e582bfc7a7b0329dc6fd6a95e"],"3fb91a37fdd32424e0dae9bdb8e055dc4331acc0":["ad94625fb8d088209f46650c8097196fec67f00c"],"1f93cd2f2eedfa90201b45c4822af1b5f35680f4":["00da8b51bdeae168a5b26ec506db372b219ca7a2"],"3ce242b547bca7056212426a479818096cc367bf":["656ba78dd2c0e88d11623fc5bceca3ea217ce0b3"],"a2283b269255d4b0c797b353f09c66e76c19a33e":["6d6338c87060be5f66757a94945975f3bbd377a9"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"b46f0ccfb6b63c307ea901d48482630e3689042c":["0e74c023a740578ac4e079f01ded819fd6307c78"],"00da8b51bdeae168a5b26ec506db372b219ca7a2":["29765e35c99654ed87e394d8bc13d8ab07b51092"],"87d6953dbc5baae40e6e21efa735a75f85ac13f2":["3fb91a37fdd32424e0dae9bdb8e055dc4331acc0"],"31f1e0aff124b03ebeca0a1de45361b8efd0d2d9":["db71c9bced2a5e90a7d21fa3ce2d105f60867412"],"0df4c5cd5eaf4742b3a39587e6de21a372bcb6fc":["3ce242b547bca7056212426a479818096cc367bf"],"268776364d28ac43d2fac972c45f929978145470":["a2283b269255d4b0c797b353f09c66e76c19a33e"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["268776364d28ac43d2fac972c45f929978145470"],"048361614025800e582bfc7a7b0329dc6fd6a95e":["b46f0ccfb6b63c307ea901d48482630e3689042c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"db71c9bced2a5e90a7d21fa3ce2d105f60867412":["d3b0ef1de6025bc18611a7bde19af940e27450d7"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"0e74c023a740578ac4e079f01ded819fd6307c78":["1f93cd2f2eedfa90201b45c4822af1b5f35680f4"],"29765e35c99654ed87e394d8bc13d8ab07b51092":["31f1e0aff124b03ebeca0a1de45361b8efd0d2d9"],"d3b0ef1de6025bc18611a7bde19af940e27450d7":["0df4c5cd5eaf4742b3a39587e6de21a372bcb6fc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}