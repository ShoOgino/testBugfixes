{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiDocMaker.Parser#run().mjava","commits":[{"id":"dbeed263e6233e327186a2d90fd6848347f2883a","date":1186649846,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiDocMaker.Parser#run().mjava","pathOld":"/dev/null","sourceNew":"    public void run() {\n\n      try {\n        XMLReader reader =\n          XMLReaderFactory.createXMLReader(\"org.apache.xerces.parsers.SAXParser\");\n        reader.setContentHandler(this);\n        reader.setErrorHandler(this);\n        while(true){\n          InputSource is = new InputSource(fileIS);\n          reader.parse(is);\n          if (!forever) {\n            synchronized(this) {\n              nmde = new NoMoreDataException();\n              notify();\n            }\n            return;\n          } else {\n            synchronized(this){\n              openFile();\n            }\n          }\n        }\n      } catch (SAXException sae) {\n        throw new RuntimeException(sae);\n      } catch (IOException ioe) {\n        throw new RuntimeException(ioe);\n      }\n\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["fda21570063402edad2501896b67026c202b0b32"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ee93bdd695e4b87f4f05de6a7fa42ec9a5923a63","date":1199497913,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiDocMaker.Parser#run().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiDocMaker.Parser#run().mjava","sourceNew":"    public void run() {\n\n      try {\n        XMLReader reader =\n          XMLReaderFactory.createXMLReader(\"org.apache.xerces.parsers.SAXParser\");\n        reader.setContentHandler(this);\n        reader.setErrorHandler(this);\n        while(true){\n          final FileInputStream localFileIS = fileIS;\n          try {\n            InputSource is = new InputSource(localFileIS);\n            reader.parse(is);\n          } catch (IOException ioe) {\n            synchronized(EnwikiDocMaker.this) {\n              if (localFileIS != fileIS) {\n                // fileIS was closed on us, so, just fall\n                // through\n              } else\n                // Exception is real\n                throw ioe;\n            }\n          }\n          synchronized(this) {\n            if (!forever) {\n              nmde = new NoMoreDataException();\n              notify();\n              return;\n            } else if (localFileIS == fileIS) {\n              // If file is not already re-opened then\n              // re-open it now\n              openFile();\n            }\n          }\n        }\n      } catch (SAXException sae) {\n        throw new RuntimeException(sae);\n      } catch (IOException ioe) {\n        throw new RuntimeException(ioe);\n      }\n\n    }\n\n","sourceOld":"    public void run() {\n\n      try {\n        XMLReader reader =\n          XMLReaderFactory.createXMLReader(\"org.apache.xerces.parsers.SAXParser\");\n        reader.setContentHandler(this);\n        reader.setErrorHandler(this);\n        while(true){\n          InputSource is = new InputSource(fileIS);\n          reader.parse(is);\n          if (!forever) {\n            synchronized(this) {\n              nmde = new NoMoreDataException();\n              notify();\n            }\n            return;\n          } else {\n            synchronized(this){\n              openFile();\n            }\n          }\n        }\n      } catch (SAXException sae) {\n        throw new RuntimeException(sae);\n      } catch (IOException ioe) {\n        throw new RuntimeException(ioe);\n      }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fda21570063402edad2501896b67026c202b0b32","date":1199959938,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiDocMaker.Parser#run().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiDocMaker.Parser#run().mjava","sourceNew":"    public void run() {\n\n      try {\n        XMLReader reader =\n          XMLReaderFactory.createXMLReader(\"org.apache.xerces.parsers.SAXParser\");\n        reader.setContentHandler(this);\n        reader.setErrorHandler(this);\n        while(true){\n          final FileInputStream localFileIS = fileIS;\n          try {\n            InputSource is = new InputSource(localFileIS);\n            reader.parse(is);\n          } catch (IOException ioe) {\n            synchronized(EnwikiDocMaker.this) {\n              if (localFileIS != fileIS) {\n                // fileIS was closed on us, so, just fall\n                // through\n              } else\n                // Exception is real\n                throw ioe;\n            }\n          }\n          synchronized(this) {\n            if (!forever) {\n              nmde = new NoMoreDataException();\n              notify();\n              return;\n            } else if (localFileIS == fileIS) {\n              // If file is not already re-opened then\n              // re-open it now\n              openFile();\n            }\n          }\n        }\n      } catch (SAXException sae) {\n        throw new RuntimeException(sae);\n      } catch (IOException ioe) {\n        throw new RuntimeException(ioe);\n      } finally {\n        synchronized(this) {\n          threadDone = true;\n          notify();\n        }\n      }\n    }\n\n","sourceOld":"    public void run() {\n\n      try {\n        XMLReader reader =\n          XMLReaderFactory.createXMLReader(\"org.apache.xerces.parsers.SAXParser\");\n        reader.setContentHandler(this);\n        reader.setErrorHandler(this);\n        while(true){\n          final FileInputStream localFileIS = fileIS;\n          try {\n            InputSource is = new InputSource(localFileIS);\n            reader.parse(is);\n          } catch (IOException ioe) {\n            synchronized(EnwikiDocMaker.this) {\n              if (localFileIS != fileIS) {\n                // fileIS was closed on us, so, just fall\n                // through\n              } else\n                // Exception is real\n                throw ioe;\n            }\n          }\n          synchronized(this) {\n            if (!forever) {\n              nmde = new NoMoreDataException();\n              notify();\n              return;\n            } else if (localFileIS == fileIS) {\n              // If file is not already re-opened then\n              // re-open it now\n              openFile();\n            }\n          }\n        }\n      } catch (SAXException sae) {\n        throw new RuntimeException(sae);\n      } catch (IOException ioe) {\n        throw new RuntimeException(ioe);\n      }\n\n    }\n\n","bugFix":["dbeed263e6233e327186a2d90fd6848347f2883a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4bea909b475e3f9d726f4fee3c27d3c870b9027","date":1239875190,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiDocMaker.Parser#run().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiDocMaker.Parser#run().mjava","sourceNew":"    public void run() {\n\n      try {\n        XMLReader reader =\n          XMLReaderFactory.createXMLReader(\"org.apache.xerces.parsers.SAXParser\");\n        reader.setContentHandler(this);\n        reader.setErrorHandler(this);\n        while(true){\n          final InputStream localFileIS = fileIS;\n          try {\n            InputSource is = new InputSource(localFileIS);\n            reader.parse(is);\n          } catch (IOException ioe) {\n            synchronized(EnwikiDocMaker.this) {\n              if (localFileIS != fileIS) {\n                // fileIS was closed on us, so, just fall\n                // through\n              } else\n                // Exception is real\n                throw ioe;\n            }\n          }\n          synchronized(this) {\n            if (!forever) {\n              nmde = new NoMoreDataException();\n              notify();\n              return;\n            } else if (localFileIS == fileIS) {\n              // If file is not already re-opened then\n              // re-open it now\n              openFile();\n            }\n          }\n        }\n      } catch (SAXException sae) {\n        throw new RuntimeException(sae);\n      } catch (IOException ioe) {\n        throw new RuntimeException(ioe);\n      } finally {\n        synchronized(this) {\n          threadDone = true;\n          notify();\n        }\n      }\n    }\n\n","sourceOld":"    public void run() {\n\n      try {\n        XMLReader reader =\n          XMLReaderFactory.createXMLReader(\"org.apache.xerces.parsers.SAXParser\");\n        reader.setContentHandler(this);\n        reader.setErrorHandler(this);\n        while(true){\n          final FileInputStream localFileIS = fileIS;\n          try {\n            InputSource is = new InputSource(localFileIS);\n            reader.parse(is);\n          } catch (IOException ioe) {\n            synchronized(EnwikiDocMaker.this) {\n              if (localFileIS != fileIS) {\n                // fileIS was closed on us, so, just fall\n                // through\n              } else\n                // Exception is real\n                throw ioe;\n            }\n          }\n          synchronized(this) {\n            if (!forever) {\n              nmde = new NoMoreDataException();\n              notify();\n              return;\n            } else if (localFileIS == fileIS) {\n              // If file is not already re-opened then\n              // re-open it now\n              openFile();\n            }\n          }\n        }\n      } catch (SAXException sae) {\n        throw new RuntimeException(sae);\n      } catch (IOException ioe) {\n        throw new RuntimeException(ioe);\n      } finally {\n        synchronized(this) {\n          threadDone = true;\n          notify();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b","date":1245355139,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#run().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiDocMaker.Parser#run().mjava","sourceNew":"    public void run() {\n\n      try {\n        XMLReader reader = XMLReaderFactory.createXMLReader();\n        reader.setContentHandler(this);\n        reader.setErrorHandler(this);\n        while(true){\n          final InputStream localFileIS = is;\n          try {\n            reader.parse(new InputSource(localFileIS));\n          } catch (IOException ioe) {\n            synchronized(EnwikiContentSource.this) {\n              if (localFileIS != is) {\n                // fileIS was closed on us, so, just fall\n                // through\n              } else\n                // Exception is real\n                throw ioe;\n            }\n          }\n          synchronized(this) {\n            if (!forever) {\n              nmde = new NoMoreDataException();\n              notify();\n              return;\n            } else if (localFileIS == is) {\n              // If file is not already re-opened then re-open it now\n              is = getInputStream(file);\n            }\n          }\n        }\n      } catch (SAXException sae) {\n        throw new RuntimeException(sae);\n      } catch (IOException ioe) {\n        throw new RuntimeException(ioe);\n      } finally {\n        synchronized(this) {\n          threadDone = true;\n          notify();\n        }\n      }\n    }\n\n","sourceOld":"    public void run() {\n\n      try {\n        XMLReader reader =\n          XMLReaderFactory.createXMLReader(\"org.apache.xerces.parsers.SAXParser\");\n        reader.setContentHandler(this);\n        reader.setErrorHandler(this);\n        while(true){\n          final InputStream localFileIS = fileIS;\n          try {\n            InputSource is = new InputSource(localFileIS);\n            reader.parse(is);\n          } catch (IOException ioe) {\n            synchronized(EnwikiDocMaker.this) {\n              if (localFileIS != fileIS) {\n                // fileIS was closed on us, so, just fall\n                // through\n              } else\n                // Exception is real\n                throw ioe;\n            }\n          }\n          synchronized(this) {\n            if (!forever) {\n              nmde = new NoMoreDataException();\n              notify();\n              return;\n            } else if (localFileIS == fileIS) {\n              // If file is not already re-opened then\n              // re-open it now\n              openFile();\n            }\n          }\n        }\n      } catch (SAXException sae) {\n        throw new RuntimeException(sae);\n      } catch (IOException ioe) {\n        throw new RuntimeException(ioe);\n      } finally {\n        synchronized(this) {\n          threadDone = true;\n          notify();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b":["c4bea909b475e3f9d726f4fee3c27d3c870b9027"],"fda21570063402edad2501896b67026c202b0b32":["ee93bdd695e4b87f4f05de6a7fa42ec9a5923a63"],"ee93bdd695e4b87f4f05de6a7fa42ec9a5923a63":["dbeed263e6233e327186a2d90fd6848347f2883a"],"dbeed263e6233e327186a2d90fd6848347f2883a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c4bea909b475e3f9d726f4fee3c27d3c870b9027":["fda21570063402edad2501896b67026c202b0b32"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6944b9fa6d8ef96b83ae2d3a4332d03b3857355b"]},"commit2Childs":{"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fda21570063402edad2501896b67026c202b0b32":["c4bea909b475e3f9d726f4fee3c27d3c870b9027"],"ee93bdd695e4b87f4f05de6a7fa42ec9a5923a63":["fda21570063402edad2501896b67026c202b0b32"],"dbeed263e6233e327186a2d90fd6848347f2883a":["ee93bdd695e4b87f4f05de6a7fa42ec9a5923a63"],"c4bea909b475e3f9d726f4fee3c27d3c870b9027":["6944b9fa6d8ef96b83ae2d3a4332d03b3857355b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dbeed263e6233e327186a2d90fd6848347f2883a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}