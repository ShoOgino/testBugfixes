{"path":"backwards/src/java/org/apache/lucene/index/CompoundFileReader.CSIndexInput#readInternal(byte[],int,int).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/index/CompoundFileReader.CSIndexInput#readInternal(byte[],int,int).mjava","pathOld":"/dev/null","sourceNew":"        /** Expert: implements buffer refill.  Reads bytes from the current\n         *  position in the input.\n         * @param b the array to read bytes into\n         * @param offset the offset in the array to start storing bytes\n         * @param len the number of bytes to read\n         */\n        @Override\n        protected void readInternal(byte[] b, int offset, int len)\n        throws IOException\n        {\n          long start = getFilePointer();\n          if(start + len > length)\n            throw new IOException(\"read past EOF\");\n          base.seek(fileOffset + start);\n          base.readBytes(b, offset, len, false);\n        }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/index/CompoundFileReader.CSIndexInput#readInternal(byte[],int,int).mjava","pathOld":"backwards/src/java/org/apache/lucene/index/CompoundFileReader.CSIndexInput#readInternal(byte[],int,int).mjava","sourceNew":"        /** Expert: implements buffer refill.  Reads bytes from the current\n         *  position in the input.\n         * @param b the array to read bytes into\n         * @param offset the offset in the array to start storing bytes\n         * @param len the number of bytes to read\n         */\n        @Override\n        protected void readInternal(byte[] b, int offset, int len)\n        throws IOException\n        {\n          long start = getFilePointer();\n          if(start + len > length)\n            throw new IOException(\"read past EOF\");\n          base.seek(fileOffset + start);\n          base.readBytes(b, offset, len, false);\n        }\n\n","sourceOld":"        /** Expert: implements buffer refill.  Reads bytes from the current\n         *  position in the input.\n         * @param b the array to read bytes into\n         * @param offset the offset in the array to start storing bytes\n         * @param len the number of bytes to read\n         */\n        @Override\n        protected void readInternal(byte[] b, int offset, int len)\n        throws IOException\n        {\n          long start = getFilePointer();\n          if(start + len > length)\n            throw new IOException(\"read past EOF\");\n          base.seek(fileOffset + start);\n          base.readBytes(b, offset, len, false);\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}