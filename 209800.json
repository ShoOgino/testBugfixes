{"path":"lucene/src/java/org/apache/lucene/search/spans/SpanWeight#scorer(AtomicReaderContext,ScorerContext).mjava","commits":[{"id":"dc63f17f42c64d6ccc8c361cfcdf074f115f770c","date":1294930751,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/spans/SpanWeight#scorer(AtomicReaderContext,ScorerContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/spans/SpanWeight#scorer(AtomicReaderContext,boolean,boolean).mjava","sourceNew":"  @Override\n  public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n    return new SpanScorer(query.getSpans(context.reader), this, similarity, context.reader\n        .norms(query.getField()));\n  }\n\n","sourceOld":"  @Override\n  public Scorer scorer(AtomicReaderContext context, boolean scoreDocsInOrder, boolean topScorer) throws IOException {\n    return new SpanScorer(query.getSpans(context.reader), this, similarity, context.reader\n        .norms(query.getField()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/spans/SpanWeight#scorer(AtomicReaderContext,ScorerContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n    return new SpanScorer(query.getSpans(context.reader), this, similarity, context.reader\n        .norms(query.getField()));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8323d210478d76a02372693d254b69aac614689","date":1295877066,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/spans/SpanWeight#scorer(AtomicReaderContext,ScorerContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/spans/SpanWeight#scorer(AtomicReaderContext,ScorerContext).mjava","sourceNew":"  @Override\n  public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n    return new SpanScorer(query.getSpans(context), this, similarity, context.reader\n        .norms(query.getField()));\n  }\n\n","sourceOld":"  @Override\n  public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n    return new SpanScorer(query.getSpans(context.reader), this, similarity, context.reader\n        .norms(query.getField()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9b72f7c3d7827c64dd4ec580ded81778da361d","date":1295897920,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/spans/SpanWeight#scorer(AtomicReaderContext,ScorerContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/spans/SpanWeight#scorer(AtomicReaderContext,ScorerContext).mjava","sourceNew":"  @Override\n  public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n    return new SpanScorer(query.getSpans(context), this, similarity, context.reader\n        .norms(query.getField()));\n  }\n\n","sourceOld":"  @Override\n  public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n    return new SpanScorer(query.getSpans(context.reader), this, similarity, context.reader\n        .norms(query.getField()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/spans/SpanWeight#scorer(AtomicReaderContext,ScorerContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n    return new SpanScorer(query.getSpans(context), this, similarity, context.reader\n        .norms(query.getField()));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f3cee3d20b0c786e6fca20539454262e29edcab","date":1310101685,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/spans/SpanWeight#scorer(AtomicReaderContext,ScorerContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/spans/SpanWeight#scorer(AtomicReaderContext,ScorerContext).mjava","sourceNew":"  @Override\n  public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n    return new SpanScorer(query.getSpans(context), this, similarity, similarity.sloppyDocScorer(stats, query.getField(), context));\n  }\n\n","sourceOld":"  @Override\n  public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n    return new SpanScorer(query.getSpans(context), this, similarity, context.reader\n        .norms(query.getField()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9507caf22f292ac0e5e59f62db4275adf4511","date":1310107283,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/spans/SpanWeight#scorer(AtomicReaderContext,ScorerContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/spans/SpanWeight#scorer(AtomicReaderContext,ScorerContext).mjava","sourceNew":"  @Override\n  public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n    return new SpanScorer(query.getSpans(context), this, similarity, similarity.sloppyDocScorer(stats, query.getField(), context));\n  }\n\n","sourceOld":"  @Override\n  public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n    return new SpanScorer(query.getSpans(context), this, similarity, context.reader\n        .norms(query.getField()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1291e4568eb7d9463d751627596ef14baf4c1603","date":1310112572,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/spans/SpanWeight#scorer(AtomicReaderContext,ScorerContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/spans/SpanWeight#scorer(AtomicReaderContext,ScorerContext).mjava","sourceNew":"  @Override\n  public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n    return new SpanScorer(query.getSpans(context), this, similarity, similarity.sloppyDocScorer(stats, query.getField(), context));\n  }\n\n","sourceOld":"  @Override\n  public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n    return new SpanScorer(query.getSpans(context), this, similarity, context.reader\n        .norms(query.getField()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0952c55e47c70ea2d8c8e2b634da066f9bde4e38","date":1310506639,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/spans/SpanWeight#scorer(AtomicReaderContext,ScorerContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/spans/SpanWeight#scorer(AtomicReaderContext,ScorerContext).mjava","sourceNew":"  @Override\n  public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n    return new SpanScorer(query.getSpans(context), this, similarity.sloppyDocScorer(stats, query.getField(), context));\n  }\n\n","sourceOld":"  @Override\n  public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n    return new SpanScorer(query.getSpans(context), this, similarity, similarity.sloppyDocScorer(stats, query.getField(), context));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3fc1f3f78b299e125f7e60f43b5d457392bea23f","date":1317431015,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/spans/SpanWeight#scorer(AtomicReaderContext,ScorerContext).mjava","sourceNew":null,"sourceOld":"  @Override\n  public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n    return new SpanScorer(query.getSpans(context), this, similarity.sloppyDocScorer(stats, query.getField(), context));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1291e4568eb7d9463d751627596ef14baf4c1603":["c8323d210478d76a02372693d254b69aac614689","0f3cee3d20b0c786e6fca20539454262e29edcab"],"0f3cee3d20b0c786e6fca20539454262e29edcab":["c8323d210478d76a02372693d254b69aac614689"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":["c8323d210478d76a02372693d254b69aac614689","0f3cee3d20b0c786e6fca20539454262e29edcab"],"c8323d210478d76a02372693d254b69aac614689":["dc63f17f42c64d6ccc8c361cfcdf074f115f770c"],"3fc1f3f78b299e125f7e60f43b5d457392bea23f":["0952c55e47c70ea2d8c8e2b634da066f9bde4e38"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c8323d210478d76a02372693d254b69aac614689"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0952c55e47c70ea2d8c8e2b634da066f9bde4e38":["0f3cee3d20b0c786e6fca20539454262e29edcab"],"dc63f17f42c64d6ccc8c361cfcdf074f115f770c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","dc63f17f42c64d6ccc8c361cfcdf074f115f770c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3fc1f3f78b299e125f7e60f43b5d457392bea23f"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["868da859b43505d9d2a023bfeae6dd0c795f5295","c8323d210478d76a02372693d254b69aac614689"]},"commit2Childs":{"1291e4568eb7d9463d751627596ef14baf4c1603":[],"0f3cee3d20b0c786e6fca20539454262e29edcab":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","0952c55e47c70ea2d8c8e2b634da066f9bde4e38"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":[],"c8323d210478d76a02372693d254b69aac614689":["1291e4568eb7d9463d751627596ef14baf4c1603","0f3cee3d20b0c786e6fca20539454262e29edcab","f0b9507caf22f292ac0e5e59f62db4275adf4511","29ef99d61cda9641b6250bf9567329a6e65f901d","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"3fc1f3f78b299e125f7e60f43b5d457392bea23f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","dc63f17f42c64d6ccc8c361cfcdf074f115f770c","868da859b43505d9d2a023bfeae6dd0c795f5295"],"0952c55e47c70ea2d8c8e2b634da066f9bde4e38":["3fc1f3f78b299e125f7e60f43b5d457392bea23f"],"dc63f17f42c64d6ccc8c361cfcdf074f115f770c":["c8323d210478d76a02372693d254b69aac614689","868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":[]},"heads":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","29ef99d61cda9641b6250bf9567329a6e65f901d","cd5edd1f2b162a5cfa08efd17851a07373a96817","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}