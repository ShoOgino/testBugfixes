{"path":"lucene/backwards/src/test/org/apache/lucene/TestSnapshotDeletionPolicy#copyFiles(Directory,IndexCommit).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/TestSnapshotDeletionPolicy#copyFiles(Directory,IndexCommit).mjava","pathOld":"backwards/src/test/org/apache/lucene/TestSnapshotDeletionPolicy#copyFiles(Directory,IndexCommit).mjava","sourceNew":"  private void copyFiles(Directory dir, IndexCommit cp) throws Exception {\n\n    // While we hold the snapshot, and nomatter how long\n    // we take to do the backup, the IndexWriter will\n    // never delete the files in the snapshot:\n    Collection files = cp.getFileNames();\n    Iterator it = files.iterator();\n    while(it.hasNext()) {\n      final String fileName = (String) it.next();\n      // NOTE: in a real backup you would not use\n      // readFile; you would need to use something else\n      // that copies the file to a backup location.  This\n      // could even be a spawned shell process (eg \"tar\",\n      // \"zip\") that takes the list of files and builds a\n      // backup.\n      readFile(dir, fileName);\n    }\n  }\n\n","sourceOld":"  private void copyFiles(Directory dir, IndexCommit cp) throws Exception {\n\n    // While we hold the snapshot, and nomatter how long\n    // we take to do the backup, the IndexWriter will\n    // never delete the files in the snapshot:\n    Collection files = cp.getFileNames();\n    Iterator it = files.iterator();\n    while(it.hasNext()) {\n      final String fileName = (String) it.next();\n      // NOTE: in a real backup you would not use\n      // readFile; you would need to use something else\n      // that copies the file to a backup location.  This\n      // could even be a spawned shell process (eg \"tar\",\n      // \"zip\") that takes the list of files and builds a\n      // backup.\n      readFile(dir, fileName);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/TestSnapshotDeletionPolicy#copyFiles(Directory,IndexCommit).mjava","sourceNew":null,"sourceOld":"  private void copyFiles(Directory dir, IndexCommit cp) throws Exception {\n\n    // While we hold the snapshot, and nomatter how long\n    // we take to do the backup, the IndexWriter will\n    // never delete the files in the snapshot:\n    Collection files = cp.getFileNames();\n    Iterator it = files.iterator();\n    while(it.hasNext()) {\n      final String fileName = (String) it.next();\n      // NOTE: in a real backup you would not use\n      // readFile; you would need to use something else\n      // that copies the file to a backup location.  This\n      // could even be a spawned shell process (eg \"tar\",\n      // \"zip\") that takes the list of files and builds a\n      // backup.\n      readFile(dir, fileName);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}