{"path":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/ComposedQuery#prefixToString(StringBuilder).mjava","commits":[{"id":"cb28c22683d066d99c05cc045599bcb61532b122","date":1254611427,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/ComposedQuery#prefixToString(StringBuilder).mjava","pathOld":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/ComposedQuery#prefixToString(StringBuffer).mjava","sourceNew":"  protected void prefixToString(StringBuilder r) {\n    Iterator sqi = getSubQueriesIterator();\n    r.append(getOperatorName()); /* prefix operator */\n    r.append(getBracketOpen());\n    if (sqi.hasNext()) {\n      r.append(sqi.next().toString());\n      while (sqi.hasNext()) {\n        r.append(getPrefixSeparator());\n        r.append(sqi.next().toString());\n      }\n    }\n    r.append(getBracketClose());\n  }\n\n","sourceOld":"  protected void prefixToString(StringBuffer r) {\n    Iterator sqi = getSubQueriesIterator();\n    r.append(getOperatorName()); /* prefix operator */\n    r.append(getBracketOpen());\n    if (sqi.hasNext()) {\n      r.append(sqi.next().toString());\n      while (sqi.hasNext()) {\n        r.append(getPrefixSeparator());\n        r.append(sqi.next().toString());\n      }\n    }\n    r.append(getBracketClose());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/ComposedQuery#prefixToString(StringBuilder).mjava","pathOld":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/ComposedQuery#prefixToString(StringBuilder).mjava","sourceNew":"  protected void prefixToString(StringBuilder r) {\n    Iterator sqi = getSubQueriesIterator();\n    r.append(getOperatorName()); /* prefix operator */\n    r.append(getBracketOpen());\n    if (sqi.hasNext()) {\n      r.append(sqi.next().toString());\n      while (sqi.hasNext()) {\n        r.append(getPrefixSeparator());\n        r.append(sqi.next().toString());\n      }\n    }\n    r.append(getBracketClose());\n  }\n\n","sourceOld":"  protected void prefixToString(StringBuilder r) {\n    Iterator sqi = getSubQueriesIterator();\n    r.append(getOperatorName()); /* prefix operator */\n    r.append(getBracketOpen());\n    if (sqi.hasNext()) {\n      r.append(sqi.next().toString());\n      while (sqi.hasNext()) {\n        r.append(getPrefixSeparator());\n        r.append(sqi.next().toString());\n      }\n    }\n    r.append(getBracketClose());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"cb28c22683d066d99c05cc045599bcb61532b122":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cb28c22683d066d99c05cc045599bcb61532b122"]},"commit2Childs":{"cb28c22683d066d99c05cc045599bcb61532b122":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cb28c22683d066d99c05cc045599bcb61532b122"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}