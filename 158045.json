{"path":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#testSpellchecker().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#testSpellchecker().mjava","pathOld":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#testSpellchecker().mjava","sourceNew":"  public void testSpellchecker() throws IOException {\n    SpellChecker sc = new SpellChecker(new RAMDirectory());\n    indexReader = IndexReader.open(store, true);\n    sc.indexDictionary(new LuceneDictionary(indexReader, \"contents\"));\n    String[] suggestions = sc.suggestSimilar(\"Tam\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Tom\", suggestions[0]);\n    suggestions = sc.suggestSimilar(\"Jarry\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Jerry\", suggestions[0]);\n    indexReader.close();\n  }\n\n","sourceOld":"  public void testSpellchecker() throws IOException {\n    SpellChecker sc = new SpellChecker(new RAMDirectory());\n    indexReader = IndexReader.open(store, true);\n    sc.indexDictionary(new LuceneDictionary(indexReader, \"contents\"));\n    String[] suggestions = sc.suggestSimilar(\"Tam\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Tom\", suggestions[0]);\n    suggestions = sc.suggestSimilar(\"Jarry\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Jerry\", suggestions[0]);\n    indexReader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","date":1281477834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#testSpellchecker().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#testSpellchecker().mjava","sourceNew":"  public void testSpellchecker() throws IOException {\n    SpellChecker sc = new SpellChecker(new MockRAMDirectory());\n    indexReader = IndexReader.open(store, true);\n    sc.indexDictionary(new LuceneDictionary(indexReader, \"contents\"));\n    String[] suggestions = sc.suggestSimilar(\"Tam\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Tom\", suggestions[0]);\n    suggestions = sc.suggestSimilar(\"Jarry\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Jerry\", suggestions[0]);\n    indexReader.close();\n  }\n\n","sourceOld":"  public void testSpellchecker() throws IOException {\n    SpellChecker sc = new SpellChecker(new RAMDirectory());\n    indexReader = IndexReader.open(store, true);\n    sc.indexDictionary(new LuceneDictionary(indexReader, \"contents\"));\n    String[] suggestions = sc.suggestSimilar(\"Tam\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Tom\", suggestions[0]);\n    suggestions = sc.suggestSimilar(\"Jarry\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Jerry\", suggestions[0]);\n    indexReader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#testSpellchecker().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#testSpellchecker().mjava","sourceNew":"  public void testSpellchecker() throws IOException {\n    Directory dir = newDirectory(random);\n    SpellChecker sc = new SpellChecker(dir);\n    indexReader = IndexReader.open(store, true);\n    sc.indexDictionary(new LuceneDictionary(indexReader, \"contents\"));\n    String[] suggestions = sc.suggestSimilar(\"Tam\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Tom\", suggestions[0]);\n    suggestions = sc.suggestSimilar(\"Jarry\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Jerry\", suggestions[0]);\n    indexReader.close();\n    sc.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSpellchecker() throws IOException {\n    SpellChecker sc = new SpellChecker(new MockRAMDirectory());\n    indexReader = IndexReader.open(store, true);\n    sc.indexDictionary(new LuceneDictionary(indexReader, \"contents\"));\n    String[] suggestions = sc.suggestSimilar(\"Tam\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Tom\", suggestions[0]);\n    suggestions = sc.suggestSimilar(\"Jarry\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Jerry\", suggestions[0]);\n    indexReader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#testSpellchecker().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#testSpellchecker().mjava","sourceNew":"  public void testSpellchecker() throws IOException {\n    Directory dir = newDirectory();\n    SpellChecker sc = new SpellChecker(dir);\n    indexReader = IndexReader.open(store, true);\n    sc.indexDictionary(new LuceneDictionary(indexReader, \"contents\"));\n    String[] suggestions = sc.suggestSimilar(\"Tam\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Tom\", suggestions[0]);\n    suggestions = sc.suggestSimilar(\"Jarry\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Jerry\", suggestions[0]);\n    indexReader.close();\n    sc.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSpellchecker() throws IOException {\n    Directory dir = newDirectory(random);\n    SpellChecker sc = new SpellChecker(dir);\n    indexReader = IndexReader.open(store, true);\n    sc.indexDictionary(new LuceneDictionary(indexReader, \"contents\"));\n    String[] suggestions = sc.suggestSimilar(\"Tam\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Tom\", suggestions[0]);\n    suggestions = sc.suggestSimilar(\"Jarry\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Jerry\", suggestions[0]);\n    indexReader.close();\n    sc.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#testSpellchecker().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#testSpellchecker().mjava","sourceNew":"  public void testSpellchecker() throws IOException {\n    Directory dir = newDirectory();\n    SpellChecker sc = new SpellChecker(dir);\n    indexReader = IndexReader.open(store, true);\n    sc.indexDictionary(new LuceneDictionary(indexReader, \"contents\"));\n    String[] suggestions = sc.suggestSimilar(\"Tam\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Tom\", suggestions[0]);\n    suggestions = sc.suggestSimilar(\"Jarry\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Jerry\", suggestions[0]);\n    indexReader.close();\n    sc.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSpellchecker() throws IOException {\n    SpellChecker sc = new SpellChecker(new RAMDirectory());\n    indexReader = IndexReader.open(store, true);\n    sc.indexDictionary(new LuceneDictionary(indexReader, \"contents\"));\n    String[] suggestions = sc.suggestSimilar(\"Tam\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Tom\", suggestions[0]);\n    suggestions = sc.suggestSimilar(\"Jarry\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Jerry\", suggestions[0]);\n    indexReader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e230a61047bc041516c811baa08a7174d6f8322a","date":1306175633,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#testSpellchecker().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#testSpellchecker().mjava","sourceNew":"  public void testSpellchecker() throws IOException {\n    Directory dir = newDirectory();\n    SpellChecker sc = new SpellChecker(dir);\n    indexReader = IndexReader.open(store, true);\n    sc.indexDictionary(new LuceneDictionary(indexReader, \"contents\"));\n    String[] suggestions = sc.suggestSimilar(\"Tam\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Tom\", suggestions[0]);\n    suggestions = sc.suggestSimilar(\"Jarry\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Jerry\", suggestions[0]);\n    indexReader.close();\n    sc.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSpellchecker() throws IOException {\n    Directory dir = newDirectory();\n    SpellChecker sc = new SpellChecker(dir);\n    indexReader = IndexReader.open(store, true);\n    sc.indexDictionary(new LuceneDictionary(indexReader, \"contents\"));\n    String[] suggestions = sc.suggestSimilar(\"Tam\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Tom\", suggestions[0]);\n    suggestions = sc.suggestSimilar(\"Jarry\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Jerry\", suggestions[0]);\n    indexReader.close();\n    sc.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#testSpellchecker().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#testSpellchecker().mjava","sourceNew":"  public void testSpellchecker() throws IOException {\n    Directory dir = newDirectory();\n    SpellChecker sc = new SpellChecker(dir);\n    indexReader = IndexReader.open(store, true);\n    sc.indexDictionary(new LuceneDictionary(indexReader, \"contents\"));\n    String[] suggestions = sc.suggestSimilar(\"Tam\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Tom\", suggestions[0]);\n    suggestions = sc.suggestSimilar(\"Jarry\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Jerry\", suggestions[0]);\n    indexReader.close();\n    sc.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSpellchecker() throws IOException {\n    Directory dir = newDirectory();\n    SpellChecker sc = new SpellChecker(dir);\n    indexReader = IndexReader.open(store, true);\n    sc.indexDictionary(new LuceneDictionary(indexReader, \"contents\"));\n    String[] suggestions = sc.suggestSimilar(\"Tam\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Tom\", suggestions[0]);\n    suggestions = sc.suggestSimilar(\"Jarry\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Jerry\", suggestions[0]);\n    indexReader.close();\n    sc.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#testSpellchecker().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#testSpellchecker().mjava","sourceNew":"  public void testSpellchecker() throws IOException {\n    Directory dir = newDirectory();\n    SpellChecker sc = new SpellChecker(dir);\n    indexReader = IndexReader.open(store, true);\n    sc.indexDictionary(new LuceneDictionary(indexReader, \"contents\"));\n    String[] suggestions = sc.suggestSimilar(\"Tam\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Tom\", suggestions[0]);\n    suggestions = sc.suggestSimilar(\"Jarry\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Jerry\", suggestions[0]);\n    indexReader.close();\n    sc.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSpellchecker() throws IOException {\n    Directory dir = newDirectory();\n    SpellChecker sc = new SpellChecker(dir);\n    indexReader = IndexReader.open(store, true);\n    sc.indexDictionary(new LuceneDictionary(indexReader, \"contents\"));\n    String[] suggestions = sc.suggestSimilar(\"Tam\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Tom\", suggestions[0]);\n    suggestions = sc.suggestSimilar(\"Jarry\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Jerry\", suggestions[0]);\n    indexReader.close();\n    sc.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e230a61047bc041516c811baa08a7174d6f8322a":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["1f653cfcf159baeaafe5d01682a911e95bba4012","e230a61047bc041516c811baa08a7174d6f8322a"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","1f653cfcf159baeaafe5d01682a911e95bba4012"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e230a61047bc041516c811baa08a7174d6f8322a"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["1f653cfcf159baeaafe5d01682a911e95bba4012","e230a61047bc041516c811baa08a7174d6f8322a"]},"commit2Childs":{"e230a61047bc041516c811baa08a7174d6f8322a":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"1f653cfcf159baeaafe5d01682a911e95bba4012":["e230a61047bc041516c811baa08a7174d6f8322a","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}