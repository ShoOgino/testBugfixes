{"path":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/WordDelimiterFilter#shouldConcatenate(int).mjava","commits":[{"id":"8598a11db0eb9efa116ba7656c437f5bed7de0f7","date":1272964265,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/WordDelimiterFilter#shouldConcatenate(int).mjava","pathOld":"solr/src/java/org/apache/solr/analysis/WordDelimiterFilter#shouldConcatenate(int).mjava","sourceNew":"  /**\n   * Determines whether to concatenate a word or number if the current word is the given type\n   *\n   * @param wordType Type of the current word used to determine if it should be concatenated\n   * @return {@code true} if concatenation should occur, {@code false} otherwise\n   */\n  private boolean shouldConcatenate(int wordType) {\n    return (catenateWords && isAlpha(wordType)) || (catenateNumbers && isDigit(wordType));\n  }\n\n","sourceOld":"  /**\n   * Determines whether to concatenate a word or number if the current word is the given type\n   *\n   * @param wordType Type of the current word used to determine if it should be concatenated\n   * @return {@code true} if concatenation should occur, {@code false} otherwise\n   */\n  private boolean shouldConcatenate(int wordType) {\n    return (catenateWords && isAlpha(wordType)) || (catenateNumbers && isDigit(wordType));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/WordDelimiterFilter#shouldConcatenate(int).mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/WordDelimiterFilter#shouldConcatenate(int).mjava","sourceNew":"  /**\n   * Determines whether to concatenate a word or number if the current word is the given type\n   *\n   * @param wordType Type of the current word used to determine if it should be concatenated\n   * @return {@code true} if concatenation should occur, {@code false} otherwise\n   */\n  private boolean shouldConcatenate(int wordType) {\n    return (catenateWords && isAlpha(wordType)) || (catenateNumbers && isDigit(wordType));\n  }\n\n","sourceOld":"  /**\n   * Determines whether to concatenate a word or number if the current word is the given type\n   *\n   * @param wordType Type of the current word used to determine if it should be concatenated\n   * @return {@code true} if concatenation should occur, {@code false} otherwise\n   */\n  private boolean shouldConcatenate(int wordType) {\n    return (catenateWords && isAlpha(wordType)) || (catenateNumbers && isDigit(wordType));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8598a11db0eb9efa116ba7656c437f5bed7de0f7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["8598a11db0eb9efa116ba7656c437f5bed7de0f7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"]},"commit2Childs":{"8598a11db0eb9efa116ba7656c437f5bed7de0f7":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8598a11db0eb9efa116ba7656c437f5bed7de0f7"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}