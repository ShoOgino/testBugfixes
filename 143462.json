{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/temp/TempFSTTermsReader.TermsReader.SegmentTermsEnum#updateEnum(InputOutput[TempTermOutputs.TempMetaData]).mjava","commits":[{"id":"e6904bcc97d8afa27bd72ee29ac01e525e327ad4","date":1377958787,"type":1,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/temp/TempFSTTermsReader.TermsReader.SegmentTermsEnum#updateEnum(InputOutput[TempTermOutputs.TempMetaData]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTTermsReader.TermsReader.SegmentTermsEnum#updateEnum(InputOutput[TempTermOutputs.TempMetaData]).mjava","sourceNew":"      // Update current enum according to FSTEnum\n      void updateEnum(final InputOutput<TempTermOutputs.TempMetaData> pair) {\n        if (pair == null) {\n          term = null;\n        } else {\n          term = pair.input;\n          meta = pair.output;\n          state.docFreq = meta.docFreq;\n          state.totalTermFreq = meta.totalTermFreq;\n        }\n        decoded = false;\n        seekPending = false;\n      }\n\n","sourceOld":"      // Update current enum according to FSTEnum\n      void updateEnum(final InputOutput<TempTermOutputs.TempMetaData> pair) {\n        if (pair == null) {\n          term = null;\n        } else {\n          term = pair.input;\n          meta = pair.output;\n          state.docFreq = meta.docFreq;\n          state.totalTermFreq = meta.totalTermFreq;\n        }\n        decoded = false;\n        seekPending = false;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f71b8f76a3876ede75eba21fb109342525c3d9c4","date":1378263923,"type":5,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/temp/TempFSTTermsReader.TermsReader.SegmentTermsEnum#updateEnum(InputOutput[TempTermOutputs.TempTermData]).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/temp/TempFSTTermsReader.TermsReader.SegmentTermsEnum#updateEnum(InputOutput[TempTermOutputs.TempMetaData]).mjava","sourceNew":"      // Update current enum according to FSTEnum\n      void updateEnum(final InputOutput<TempTermOutputs.TempTermData> pair) {\n        if (pair == null) {\n          term = null;\n        } else {\n          term = pair.input;\n          meta = pair.output;\n          state.docFreq = meta.docFreq;\n          state.totalTermFreq = meta.totalTermFreq;\n        }\n        decoded = false;\n        seekPending = false;\n      }\n\n","sourceOld":"      // Update current enum according to FSTEnum\n      void updateEnum(final InputOutput<TempTermOutputs.TempMetaData> pair) {\n        if (pair == null) {\n          term = null;\n        } else {\n          term = pair.input;\n          meta = pair.output;\n          state.docFreq = meta.docFreq;\n          state.totalTermFreq = meta.totalTermFreq;\n        }\n        decoded = false;\n        seekPending = false;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f71b8f76a3876ede75eba21fb109342525c3d9c4":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":["f71b8f76a3876ede75eba21fb109342525c3d9c4"],"f71b8f76a3876ede75eba21fb109342525c3d9c4":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f71b8f76a3876ede75eba21fb109342525c3d9c4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}