{"path":"solr/core/src/test/org/apache/solr/core/TestCorePropertiesReload#testPropertiesReload().mjava","commits":[{"id":"5e1eef8cf1f03e5bc96c7f88f08b97528ab526e7","date":1477527580,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCorePropertiesReload#testPropertiesReload().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testPropertiesReload() throws Exception {\n    setMeUp();\n    SolrCore core = h.getCore();\n    CoreDescriptor coreDescriptor = core.getCoreDescriptor();\n    String testProp = coreDescriptor.getCoreProperty(\"test\", null);\n    assertTrue(testProp.equals(\"Before reload\"));\n\n    //Re-write the properties file\n    Properties props = new Properties();\n    props.setProperty(\"test\", \"After reload\");\n    writeProperties(props);\n\n    h.reload();\n    core = h.getCore();\n    coreDescriptor = core.getCoreDescriptor();\n\n    testProp = coreDescriptor.getCoreProperty(\"test\", null);\n    assertTrue(testProp.equals(\"After reload\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCorePropertiesReload#testPropertiesReload().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testPropertiesReload() throws Exception {\n    setMeUp();\n    SolrCore core = h.getCore();\n    CoreDescriptor coreDescriptor = core.getCoreDescriptor();\n    String testProp = coreDescriptor.getCoreProperty(\"test\", null);\n    assertTrue(testProp.equals(\"Before reload\"));\n\n    //Re-write the properties file\n    Properties props = new Properties();\n    props.setProperty(\"test\", \"After reload\");\n    writeProperties(props);\n\n    h.reload();\n    core = h.getCore();\n    coreDescriptor = core.getCoreDescriptor();\n\n    testProp = coreDescriptor.getCoreProperty(\"test\", null);\n    assertTrue(testProp.equals(\"After reload\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5e1eef8cf1f03e5bc96c7f88f08b97528ab526e7"],"5e1eef8cf1f03e5bc96c7f88f08b97528ab526e7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5e1eef8cf1f03e5bc96c7f88f08b97528ab526e7"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","5e1eef8cf1f03e5bc96c7f88f08b97528ab526e7"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"5e1eef8cf1f03e5bc96c7f88f08b97528ab526e7":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}