{"path":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertPositionsSkippingEquals(String,IndexReader,int,PostingsEnum,PostingsEnum).mjava","commits":[{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertPositionsSkippingEquals(String,IndexReader,int,PostingsEnum,PostingsEnum).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertPositionsSkippingEquals(String,IndexReader,int,DocsAndPositionsEnum,DocsAndPositionsEnum).mjava","sourceNew":"  /**\n   * checks advancing docs + positions\n   */\n  public void assertPositionsSkippingEquals(String info, IndexReader leftReader, int docFreq, PostingsEnum leftDocs, PostingsEnum rightDocs) throws IOException {\n    if (leftDocs == null || rightDocs == null) {\n      assertNull(leftDocs);\n      assertNull(rightDocs);\n      return;\n    }\n    \n    int docid = -1;\n    int averageGap = leftReader.maxDoc() / (1+docFreq);\n    int skipInterval = 16;\n\n    while (true) {\n      if (random().nextBoolean()) {\n        // nextDoc()\n        docid = leftDocs.nextDoc();\n        assertEquals(info, docid, rightDocs.nextDoc());\n      } else {\n        // advance()\n        int skip = docid + (int) Math.ceil(Math.abs(skipInterval + random().nextGaussian() * averageGap));\n        docid = leftDocs.advance(skip);\n        assertEquals(info, docid, rightDocs.advance(skip));\n      }\n      \n      if (docid == DocIdSetIterator.NO_MORE_DOCS) {\n        return;\n      }\n      int freq = leftDocs.freq();\n      assertEquals(info, freq, rightDocs.freq());\n      for (int i = 0; i < freq; i++) {\n        assertEquals(info, leftDocs.nextPosition(), rightDocs.nextPosition());\n        assertEquals(info, leftDocs.getPayload(), rightDocs.getPayload());\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * checks advancing docs + positions\n   */\n  public void assertPositionsSkippingEquals(String info, IndexReader leftReader, int docFreq, DocsAndPositionsEnum leftDocs, DocsAndPositionsEnum rightDocs) throws IOException {\n    if (leftDocs == null || rightDocs == null) {\n      assertNull(leftDocs);\n      assertNull(rightDocs);\n      return;\n    }\n    \n    int docid = -1;\n    int averageGap = leftReader.maxDoc() / (1+docFreq);\n    int skipInterval = 16;\n\n    while (true) {\n      if (random().nextBoolean()) {\n        // nextDoc()\n        docid = leftDocs.nextDoc();\n        assertEquals(info, docid, rightDocs.nextDoc());\n      } else {\n        // advance()\n        int skip = docid + (int) Math.ceil(Math.abs(skipInterval + random().nextGaussian() * averageGap));\n        docid = leftDocs.advance(skip);\n        assertEquals(info, docid, rightDocs.advance(skip));\n      }\n      \n      if (docid == DocIdSetIterator.NO_MORE_DOCS) {\n        return;\n      }\n      int freq = leftDocs.freq();\n      assertEquals(info, freq, rightDocs.freq());\n      for (int i = 0; i < freq; i++) {\n        assertEquals(info, leftDocs.nextPosition(), rightDocs.nextPosition());\n        assertEquals(info, leftDocs.getPayload(), rightDocs.getPayload());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"51f5280f31484820499077f41fcdfe92d527d9dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["51f5280f31484820499077f41fcdfe92d527d9dc"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["51f5280f31484820499077f41fcdfe92d527d9dc"],"51f5280f31484820499077f41fcdfe92d527d9dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}