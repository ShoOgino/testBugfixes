{"path":"lucene/core/src/java/org/apache/lucene/index/TermsEnum#seekExact(BytesRef).mjava","commits":[{"id":"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8","date":1373996650,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsEnum#seekExact(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermsEnum#seekExact(BytesRef,boolean).mjava","sourceNew":"  /** Attempts to seek to the exact term, returning\n   *  true if the term is found.  If this returns false, the\n   *  enum is unpositioned.  For some codecs, seekExact may\n   *  be substantially faster than {@link #seekCeil}. */\n  public boolean seekExact(BytesRef text) throws IOException {\n    return seekCeil(text) == SeekStatus.FOUND;\n  }\n\n","sourceOld":"  /** Attempts to seek to the exact term, returning\n   *  true if the term is found.  If this returns false, the\n   *  enum is unpositioned.  For some codecs, seekExact may\n   *  be substantially faster than {@link #seekCeil}. */\n  public boolean seekExact(BytesRef text, boolean useCache) throws IOException {\n    return seekCeil(text, useCache) == SeekStatus.FOUND;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":1,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsEnum#seekExact(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermsEnum#seekExact(BytesRef,boolean).mjava","sourceNew":"  /** Attempts to seek to the exact term, returning\n   *  true if the term is found.  If this returns false, the\n   *  enum is unpositioned.  For some codecs, seekExact may\n   *  be substantially faster than {@link #seekCeil}. */\n  public boolean seekExact(BytesRef text) throws IOException {\n    return seekCeil(text) == SeekStatus.FOUND;\n  }\n\n","sourceOld":"  /** Attempts to seek to the exact term, returning\n   *  true if the term is found.  If this returns false, the\n   *  enum is unpositioned.  For some codecs, seekExact may\n   *  be substantially faster than {@link #seekCeil}. */\n  public boolean seekExact(BytesRef text, boolean useCache) throws IOException {\n    return seekCeil(text, useCache) == SeekStatus.FOUND;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dcf7a9f555505f2cc25f17f69f7b893c51d13274","date":1549667438,"type":3,"author":"yyuan2","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsEnum#seekExact(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermsEnum#seekExact(BytesRef).mjava","sourceNew":"  /**\n   * Attempts to seek to the exact term, returning true if the term is found. If this returns false, the enum is\n   * unpositioned. For some codecs, seekExact may be substantially faster than {@link #seekCeil}.\n   * <p>\n   * \n   * The default implementation can be <code>seekCeil(text) == SeekStatus.FOUND; </code><br>\n   * But this method is performance critical. In some cases, the default implementation may be slow and consume huge memory,\n   * so subclass SHOULD have its own implementation if possible.\n   * \n   * @return true if the term is found; return false if the enum is unpositioned.\n   */\n  public abstract boolean seekExact(BytesRef text) throws IOException;\n\n","sourceOld":"  /** Attempts to seek to the exact term, returning\n   *  true if the term is found.  If this returns false, the\n   *  enum is unpositioned.  For some codecs, seekExact may\n   *  be substantially faster than {@link #seekCeil}. */\n  public boolean seekExact(BytesRef text) throws IOException {\n    return seekCeil(text) == SeekStatus.FOUND;\n  }\n\n","bugFix":null,"bugIntro":["a6a1a39b2854abb66cc1fe2e6bab94a18ada0108"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a6a1a39b2854abb66cc1fe2e6bab94a18ada0108","date":1550248375,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsEnum#seekExact(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermsEnum#seekExact(BytesRef).mjava","sourceNew":"  /**\n   * Attempts to seek to the exact term, returning true if the term is found. If this returns false, the enum is\n   * unpositioned. For some codecs, seekExact may be substantially faster than {@link #seekCeil}.\n   * <p>\n   * \n   *\n   * @return true if the term is found; return false if the enum is unpositioned.\n   */\n  public abstract boolean seekExact(BytesRef text) throws IOException;\n\n","sourceOld":"  /**\n   * Attempts to seek to the exact term, returning true if the term is found. If this returns false, the enum is\n   * unpositioned. For some codecs, seekExact may be substantially faster than {@link #seekCeil}.\n   * <p>\n   * \n   * The default implementation can be <code>seekCeil(text) == SeekStatus.FOUND; </code><br>\n   * But this method is performance critical. In some cases, the default implementation may be slow and consume huge memory,\n   * so subclass SHOULD have its own implementation if possible.\n   * \n   * @return true if the term is found; return false if the enum is unpositioned.\n   */\n  public abstract boolean seekExact(BytesRef text) throws IOException;\n\n","bugFix":["dcf7a9f555505f2cc25f17f69f7b893c51d13274"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dcf7a9f555505f2cc25f17f69f7b893c51d13274":["eee5f2a24465d2c9a5f86ab84b7c35041a30fda8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a6a1a39b2854abb66cc1fe2e6bab94a18ada0108"],"a6a1a39b2854abb66cc1fe2e6bab94a18ada0108":["dcf7a9f555505f2cc25f17f69f7b893c51d13274"]},"commit2Childs":{"dcf7a9f555505f2cc25f17f69f7b893c51d13274":["a6a1a39b2854abb66cc1fe2e6bab94a18ada0108"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","eee5f2a24465d2c9a5f86ab84b7c35041a30fda8"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8":["dcf7a9f555505f2cc25f17f69f7b893c51d13274"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"a6a1a39b2854abb66cc1fe2e6bab94a18ada0108":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}