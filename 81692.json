{"path":"solr/solrj/src/test/org/apache/solr/common/cloud/TestCollectionStateWatchers#testDeletionsTriggerWatches().mjava","commits":[{"id":"5b4df85b7268ca40452d6c01343d8eb00ed1f70a","date":1463171656,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/cloud/TestCollectionStateWatchers#testDeletionsTriggerWatches().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testDeletionsTriggerWatches() throws Exception {\n    cluster.createCollection(\"tobedeleted\", 1, 1, \"config\", new HashMap<>());\n    Future<Boolean> future = waitInBackground(\"tobedeleted\", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS, (l, c) -> c == null);\n\n    CollectionAdminRequest.deleteCollection(\"tobedeleted\").process(cluster.getSolrClient());\n\n    assertTrue(\"CollectionStateWatcher not notified of delete call after 30 seconds\", future.get());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/common/cloud/TestCollectionStateWatchers#testDeletionsTriggerWatches().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testDeletionsTriggerWatches() throws Exception {\n    cluster.createCollection(\"tobedeleted\", 1, 1, \"config\", new HashMap<>());\n    Future<Boolean> future = waitInBackground(\"tobedeleted\", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS, (l, c) -> c == null);\n\n    CollectionAdminRequest.deleteCollection(\"tobedeleted\").process(cluster.getSolrClient());\n\n    assertTrue(\"CollectionStateWatcher not notified of delete call after 30 seconds\", future.get());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/common/cloud/TestCollectionStateWatchers#testDeletionsTriggerWatches().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testDeletionsTriggerWatches() throws Exception {\n    cluster.createCollection(\"tobedeleted\", 1, 1, \"config\", new HashMap<>());\n    Future<Boolean> future = waitInBackground(\"tobedeleted\", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS, (l, c) -> c == null);\n\n    CollectionAdminRequest.deleteCollection(\"tobedeleted\").process(cluster.getSolrClient());\n\n    assertTrue(\"CollectionStateWatcher not notified of delete call after 30 seconds\", future.get());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e89a32cc825033ebae8bb9e1c6877c2d9d76749e","date":1476790453,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/cloud/TestCollectionStateWatchers#testDeletionsTriggerWatches().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/cloud/TestCollectionStateWatchers#testDeletionsTriggerWatches().mjava","sourceNew":"  @Test\n  public void testDeletionsTriggerWatches() throws Exception {\n    CollectionAdminRequest.createCollection(\"tobedeleted\", \"config\", 1, 1)\n        .process(cluster.getSolrClient());\n    Future<Boolean> future = waitInBackground(\"tobedeleted\", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS, (l, c) -> c == null);\n\n    CollectionAdminRequest.deleteCollection(\"tobedeleted\").process(cluster.getSolrClient());\n\n    assertTrue(\"CollectionStateWatcher not notified of delete call after 30 seconds\", future.get());\n  }\n\n","sourceOld":"  @Test\n  public void testDeletionsTriggerWatches() throws Exception {\n    cluster.createCollection(\"tobedeleted\", 1, 1, \"config\", new HashMap<>());\n    Future<Boolean> future = waitInBackground(\"tobedeleted\", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS, (l, c) -> c == null);\n\n    CollectionAdminRequest.deleteCollection(\"tobedeleted\").process(cluster.getSolrClient());\n\n    assertTrue(\"CollectionStateWatcher not notified of delete call after 30 seconds\", future.get());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/common/cloud/TestCollectionStateWatchers#testDeletionsTriggerWatches().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testDeletionsTriggerWatches() throws Exception {\n    CollectionAdminRequest.createCollection(\"tobedeleted\", \"config\", 1, 1)\n        .process(cluster.getSolrClient());\n    Future<Boolean> future = waitInBackground(\"tobedeleted\", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS, (l, c) -> c == null);\n\n    CollectionAdminRequest.deleteCollection(\"tobedeleted\").process(cluster.getSolrClient());\n\n    assertTrue(\"CollectionStateWatcher not notified of delete call after 30 seconds\", future.get());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c9595c75582a7ea7efb585014102ed83f2d9c8b","date":1523581112,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/cloud/TestCollectionStateWatchers#testDeletionsTriggerWatches().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/cloud/TestCollectionStateWatchers#testDeletionsTriggerWatches().mjava","sourceNew":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 09-Apr-2018\n  public void testDeletionsTriggerWatches() throws Exception {\n    CollectionAdminRequest.createCollection(\"tobedeleted\", \"config\", 1, 1)\n        .process(cluster.getSolrClient());\n    Future<Boolean> future = waitInBackground(\"tobedeleted\", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS, (l, c) -> c == null);\n\n    CollectionAdminRequest.deleteCollection(\"tobedeleted\").process(cluster.getSolrClient());\n\n    assertTrue(\"CollectionStateWatcher not notified of delete call after 30 seconds\", future.get());\n  }\n\n","sourceOld":"  @Test\n  public void testDeletionsTriggerWatches() throws Exception {\n    CollectionAdminRequest.createCollection(\"tobedeleted\", \"config\", 1, 1)\n        .process(cluster.getSolrClient());\n    Future<Boolean> future = waitInBackground(\"tobedeleted\", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS, (l, c) -> c == null);\n\n    CollectionAdminRequest.deleteCollection(\"tobedeleted\").process(cluster.getSolrClient());\n\n    assertTrue(\"CollectionStateWatcher not notified of delete call after 30 seconds\", future.get());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b87d1f8719d7f05be003f3477450b74af13706a","date":1523590376,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/common/cloud/TestCollectionStateWatchers#testDeletionsTriggerWatches().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/cloud/TestCollectionStateWatchers#testDeletionsTriggerWatches().mjava","sourceNew":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 09-Apr-2018\n  public void testDeletionsTriggerWatches() throws Exception {\n    CollectionAdminRequest.createCollection(\"tobedeleted\", \"config\", 1, 1)\n        .process(cluster.getSolrClient());\n    Future<Boolean> future = waitInBackground(\"tobedeleted\", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS, (l, c) -> c == null);\n\n    CollectionAdminRequest.deleteCollection(\"tobedeleted\").process(cluster.getSolrClient());\n\n    assertTrue(\"CollectionStateWatcher not notified of delete call after 30 seconds\", future.get());\n  }\n\n","sourceOld":"  @Test\n  public void testDeletionsTriggerWatches() throws Exception {\n    CollectionAdminRequest.createCollection(\"tobedeleted\", \"config\", 1, 1)\n        .process(cluster.getSolrClient());\n    Future<Boolean> future = waitInBackground(\"tobedeleted\", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS, (l, c) -> c == null);\n\n    CollectionAdminRequest.deleteCollection(\"tobedeleted\").process(cluster.getSolrClient());\n\n    assertTrue(\"CollectionStateWatcher not notified of delete call after 30 seconds\", future.get());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15600ceffc7023bfa1f532afbf1854e7f8c4e6d3","date":1532119025,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/cloud/TestCollectionStateWatchers#testDeletionsTriggerWatches().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/cloud/TestCollectionStateWatchers#testDeletionsTriggerWatches().mjava","sourceNew":"  @Test\n  // commented 20-July-2018 @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 09-Apr-2018\n  public void testDeletionsTriggerWatches() throws Exception {\n    CollectionAdminRequest.createCollection(\"tobedeleted\", \"config\", 1, 1)\n        .process(cluster.getSolrClient());\n    Future<Boolean> future = waitInBackground(\"tobedeleted\", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS, (l, c) -> c == null);\n\n    CollectionAdminRequest.deleteCollection(\"tobedeleted\").process(cluster.getSolrClient());\n\n    assertTrue(\"CollectionStateWatcher not notified of delete call after 30 seconds\", future.get());\n  }\n\n","sourceOld":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 09-Apr-2018\n  public void testDeletionsTriggerWatches() throws Exception {\n    CollectionAdminRequest.createCollection(\"tobedeleted\", \"config\", 1, 1)\n        .process(cluster.getSolrClient());\n    Future<Boolean> future = waitInBackground(\"tobedeleted\", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS, (l, c) -> c == null);\n\n    CollectionAdminRequest.deleteCollection(\"tobedeleted\").process(cluster.getSolrClient());\n\n    assertTrue(\"CollectionStateWatcher not notified of delete call after 30 seconds\", future.get());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b366e7dd3172289251a86be96031af4002cd19c","date":1560790783,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/cloud/TestCollectionStateWatchers#testDeletionsTriggerWatches().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/cloud/TestCollectionStateWatchers#testDeletionsTriggerWatches().mjava","sourceNew":"  @Test\n  public void testDeletionsTriggerWatches() throws Exception {\n    CollectionAdminRequest.createCollection(\"tobedeleted\", \"config\", 1, 1)\n      .process(cluster.getSolrClient());\n    \n    Future<Boolean> future = waitInBackground(\"tobedeleted\", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS,\n                                              (l, c) -> c == null);\n\n    CollectionAdminRequest.deleteCollection(\"tobedeleted\").process(cluster.getSolrClient());\n\n    assertTrue(\"CollectionStateWatcher not notified of delete call\", future.get());\n  }\n\n","sourceOld":"  @Test\n  // commented 20-July-2018 @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 09-Apr-2018\n  public void testDeletionsTriggerWatches() throws Exception {\n    CollectionAdminRequest.createCollection(\"tobedeleted\", \"config\", 1, 1)\n        .process(cluster.getSolrClient());\n    Future<Boolean> future = waitInBackground(\"tobedeleted\", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS, (l, c) -> c == null);\n\n    CollectionAdminRequest.deleteCollection(\"tobedeleted\").process(cluster.getSolrClient());\n\n    assertTrue(\"CollectionStateWatcher not notified of delete call after 30 seconds\", future.get());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e89a32cc825033ebae8bb9e1c6877c2d9d76749e":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"3c9595c75582a7ea7efb585014102ed83f2d9c8b":["e89a32cc825033ebae8bb9e1c6877c2d9d76749e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6b87d1f8719d7f05be003f3477450b74af13706a":["e89a32cc825033ebae8bb9e1c6877c2d9d76749e","3c9595c75582a7ea7efb585014102ed83f2d9c8b"],"7b366e7dd3172289251a86be96031af4002cd19c":["15600ceffc7023bfa1f532afbf1854e7f8c4e6d3"],"15600ceffc7023bfa1f532afbf1854e7f8c4e6d3":["6b87d1f8719d7f05be003f3477450b74af13706a"],"0ad30c6a479e764150a3316e57263319775f1df2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5b4df85b7268ca40452d6c01343d8eb00ed1f70a"],"5b4df85b7268ca40452d6c01343d8eb00ed1f70a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e89a32cc825033ebae8bb9e1c6877c2d9d76749e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b366e7dd3172289251a86be96031af4002cd19c"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0ad30c6a479e764150a3316e57263319775f1df2"]},"commit2Childs":{"e89a32cc825033ebae8bb9e1c6877c2d9d76749e":["3c9595c75582a7ea7efb585014102ed83f2d9c8b","6b87d1f8719d7f05be003f3477450b74af13706a","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"3c9595c75582a7ea7efb585014102ed83f2d9c8b":["6b87d1f8719d7f05be003f3477450b74af13706a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0ad30c6a479e764150a3316e57263319775f1df2","5b4df85b7268ca40452d6c01343d8eb00ed1f70a","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"6b87d1f8719d7f05be003f3477450b74af13706a":["15600ceffc7023bfa1f532afbf1854e7f8c4e6d3"],"7b366e7dd3172289251a86be96031af4002cd19c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"15600ceffc7023bfa1f532afbf1854e7f8c4e6d3":["7b366e7dd3172289251a86be96031af4002cd19c"],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"5b4df85b7268ca40452d6c01343d8eb00ed1f70a":["0ad30c6a479e764150a3316e57263319775f1df2"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["e89a32cc825033ebae8bb9e1c6877c2d9d76749e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}