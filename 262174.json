{"path":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#next().mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":1,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#next().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingTermsEnum#next().mjava","sourceNew":"    // TODO: we should separately track if we are 'at the end' ?\n    // someone should not call next() after it returns null!!!!\n    @Override\n    public BytesRef next() throws IOException {\n      assert state == State.INITIAL || state == State.POSITIONED: \"next() called on unpositioned TermsEnum\";\n      BytesRef result = super.next();\n      if (result == null) {\n        state = State.UNPOSITIONED;\n      } else {\n        assert result.isValid();\n        state = State.POSITIONED;\n      }\n      return result;\n    }\n\n","sourceOld":"    // TODO: we should separately track if we are 'at the end' ?\n    // someone should not call next() after it returns null!!!!\n    @Override\n    public BytesRef next() throws IOException {\n      assert state == State.INITIAL || state == State.POSITIONED: \"next() called on unpositioned TermsEnum\";\n      BytesRef result = super.next();\n      if (result == null) {\n        state = State.UNPOSITIONED;\n      } else {\n        assert result.isValid();\n        state = State.POSITIONED;\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86762b84c3fc613e3c2250dc9452529a68181a3f","date":1419412618,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#next().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#next().mjava","sourceNew":"    // TODO: we should separately track if we are 'at the end' ?\n    // someone should not call next() after it returns null!!!!\n    @Override\n    public BytesRef next() throws IOException {\n      assertThread(\"Terms enums\", creationThread);\n      assert state == State.INITIAL || state == State.POSITIONED: \"next() called on unpositioned TermsEnum\";\n      BytesRef result = super.next();\n      if (result == null) {\n        state = State.UNPOSITIONED;\n      } else {\n        assert result.isValid();\n        state = State.POSITIONED;\n      }\n      return result;\n    }\n\n","sourceOld":"    // TODO: we should separately track if we are 'at the end' ?\n    // someone should not call next() after it returns null!!!!\n    @Override\n    public BytesRef next() throws IOException {\n      assert state == State.INITIAL || state == State.POSITIONED: \"next() called on unpositioned TermsEnum\";\n      BytesRef result = super.next();\n      if (result == null) {\n        state = State.UNPOSITIONED;\n      } else {\n        assert result.isValid();\n        state = State.POSITIONED;\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"86762b84c3fc613e3c2250dc9452529a68181a3f":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["86762b84c3fc613e3c2250dc9452529a68181a3f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"86762b84c3fc613e3c2250dc9452529a68181a3f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["86762b84c3fc613e3c2250dc9452529a68181a3f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}