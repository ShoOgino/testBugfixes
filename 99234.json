{"path":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/parser/Tokenizer#parseCDATA().mjava","commits":[{"id":"05d36e0b328ec96237035fbcca240e73631396e5","date":1020520725,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/parser/Tokenizer#parseCDATA().mjava","pathOld":"/dev/null","sourceNew":"    // CDATA section\n    // XXX: should contents be amalgamated with surrounding PCDATA?\n    /**\n     * Description of the Method\n     *\n     * @exception Exception  Description of the Exception\n     */\n    protected void parseCDATA()\n        throws Exception\n    {\n        // we've seen \"<![\" by now\n        try\n        {\n            if (read_ex() == 'C' && read_ex() == 'D' && read_ex() == 'A' &&\n                    read_ex() == 'T' && read_ex() == 'A' && read_ex() == '[')\n            {\n                int i1 = buf.size();\n                while (read_ex() != ']' ||\n                        read_ex() != ']' ||\n                        read_ex() != '>')\n                {\n                    ;\n                }\n                // docHandler.characters(buf.getCharArray(), i1, buf.size()-3-i1);\n            }\n            else\n            {\n                warning(\"Bad CDATA markup\");\n                state = ST_PCDATA;\n                pcData.reset();\n            }\n        }\n        catch (EmptyInputStream ex)\n        {\n            warning(\"EOF while parsing CDATA section\");\n            //gotPCDATA(false);\n        }\n        toStart();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afc16d717d9ed1a8e45371668ca6de674164d624","date":1103345442,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/parser/Tokenizer#parseCDATA().mjava","sourceNew":null,"sourceOld":"    // CDATA section\n    // XXX: should contents be amalgamated with surrounding PCDATA?\n    /**\n     * Description of the Method\n     *\n     * @exception Exception  Description of the Exception\n     */\n    protected void parseCDATA()\n        throws Exception\n    {\n        // we've seen \"<![\" by now\n        try\n        {\n            if (read_ex() == 'C' && read_ex() == 'D' && read_ex() == 'A' &&\n                    read_ex() == 'T' && read_ex() == 'A' && read_ex() == '[')\n            {\n                int i1 = buf.size();\n                while (read_ex() != ']' ||\n                        read_ex() != ']' ||\n                        read_ex() != '>')\n                {\n                    ;\n                }\n                // docHandler.characters(buf.getCharArray(), i1, buf.size()-3-i1);\n            }\n            else\n            {\n                warning(\"Bad CDATA markup\");\n                state = ST_PCDATA;\n                pcData.reset();\n            }\n        }\n        catch (EmptyInputStream ex)\n        {\n            warning(\"EOF while parsing CDATA section\");\n            //gotPCDATA(false);\n        }\n        toStart();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afc16d717d9ed1a8e45371668ca6de674164d624":["05d36e0b328ec96237035fbcca240e73631396e5"],"05d36e0b328ec96237035fbcca240e73631396e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afc16d717d9ed1a8e45371668ca6de674164d624"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05d36e0b328ec96237035fbcca240e73631396e5"],"afc16d717d9ed1a8e45371668ca6de674164d624":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"05d36e0b328ec96237035fbcca240e73631396e5":["afc16d717d9ed1a8e45371668ca6de674164d624"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}