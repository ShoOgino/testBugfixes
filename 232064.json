{"path":"src/java/org/apache/lucene/search/FieldCacheRangeFilter#FieldCacheRangeFilter(String,FieldCache.Parser,Object,Object,boolean,boolean).mjava","commits":[{"id":"4f7c8ed26cfbf4007c46fd27a417560e932ab4d8","date":1246360634,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FieldCacheRangeFilter#FieldCacheRangeFilter(String,FieldCache.Parser,Object,Object,boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/search/FieldCacheRangeFilter#FieldCacheRangeFilter(String,String,String,boolean,boolean).mjava","sourceNew":"  private FieldCacheRangeFilter(String field, FieldCache.Parser parser, Object lowerVal, Object upperVal, boolean includeLower, boolean includeUpper) {\n    if (lowerVal == null && upperVal == null)\n      throw new IllegalArgumentException(\"At least one value must be non-null\");\n    this.field = field;\n    this.parser = parser;\n    this.lowerVal = lowerVal;\n    this.upperVal = upperVal;\n    this.includeLower = includeLower;\n    this.includeUpper = includeUpper;\n  }\n\n","sourceOld":"  public FieldCacheRangeFilter(\n        String field, \n        String lowerVal,\n        String upperVal,\n        boolean includeLower,\n        boolean includeUpper) {\n    this.field = field;\n    this.lowerVal = lowerVal;\n    this.upperVal = upperVal;\n    this.includeLower = includeLower;\n    this.includeUpper = includeUpper;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9b2ba469e48c35b93f118b45188ffaf6e9c31c9c","date":1246364870,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FieldCacheRangeFilter#FieldCacheRangeFilter(String,FieldCache.Parser,Object,Object,boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/search/FieldCacheRangeFilter#FieldCacheRangeFilter(String,FieldCache.Parser,Object,Object,boolean,boolean).mjava","sourceNew":"  private FieldCacheRangeFilter(String field, FieldCache.Parser parser, Object lowerVal, Object upperVal, boolean includeLower, boolean includeUpper) {\n    this.field = field;\n    this.parser = parser;\n    this.lowerVal = lowerVal;\n    this.upperVal = upperVal;\n    this.includeLower = includeLower;\n    this.includeUpper = includeUpper;\n  }\n\n","sourceOld":"  private FieldCacheRangeFilter(String field, FieldCache.Parser parser, Object lowerVal, Object upperVal, boolean includeLower, boolean includeUpper) {\n    if (lowerVal == null && upperVal == null)\n      throw new IllegalArgumentException(\"At least one value must be non-null\");\n    this.field = field;\n    this.parser = parser;\n    this.lowerVal = lowerVal;\n    this.upperVal = upperVal;\n    this.includeLower = includeLower;\n    this.includeUpper = includeUpper;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee95de5f4b7a55d6d295e9f302b1554a95d88901","date":1255995676,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FieldCacheRangeFilter#FieldCacheRangeFilter(String,FieldCache.Parser,T,T,boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/search/FieldCacheRangeFilter#FieldCacheRangeFilter(String,FieldCache.Parser,Object,Object,boolean,boolean).mjava","sourceNew":"  private FieldCacheRangeFilter(String field, FieldCache.Parser parser, T lowerVal, T upperVal, boolean includeLower, boolean includeUpper) {\n    this.field = field;\n    this.parser = parser;\n    this.lowerVal = lowerVal;\n    this.upperVal = upperVal;\n    this.includeLower = includeLower;\n    this.includeUpper = includeUpper;\n  }\n\n","sourceOld":"  private FieldCacheRangeFilter(String field, FieldCache.Parser parser, Object lowerVal, Object upperVal, boolean includeLower, boolean includeUpper) {\n    this.field = field;\n    this.parser = parser;\n    this.lowerVal = lowerVal;\n    this.upperVal = upperVal;\n    this.includeLower = includeLower;\n    this.includeUpper = includeUpper;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4f7c8ed26cfbf4007c46fd27a417560e932ab4d8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ee95de5f4b7a55d6d295e9f302b1554a95d88901":["9b2ba469e48c35b93f118b45188ffaf6e9c31c9c"],"9b2ba469e48c35b93f118b45188ffaf6e9c31c9c":["4f7c8ed26cfbf4007c46fd27a417560e932ab4d8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ee95de5f4b7a55d6d295e9f302b1554a95d88901"]},"commit2Childs":{"4f7c8ed26cfbf4007c46fd27a417560e932ab4d8":["9b2ba469e48c35b93f118b45188ffaf6e9c31c9c"],"ee95de5f4b7a55d6d295e9f302b1554a95d88901":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9b2ba469e48c35b93f118b45188ffaf6e9c31c9c":["ee95de5f4b7a55d6d295e9f302b1554a95d88901"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4f7c8ed26cfbf4007c46fd27a417560e932ab4d8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}