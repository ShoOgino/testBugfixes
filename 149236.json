{"path":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/SlowCollatedTermRangeQuery#equals(Object).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/SlowCollatedTermRangeQuery#equals(Object).mjava","pathOld":"lucene/contrib/sandbox/src/java/org/apache/lucene/sandbox/queries/SlowCollatedTermRangeQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (!super.equals(obj))\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    SlowCollatedTermRangeQuery other = (SlowCollatedTermRangeQuery) obj;\n    if (collator == null) {\n      if (other.collator != null)\n        return false;\n    } else if (!collator.equals(other.collator))\n      return false;\n    if (includeLower != other.includeLower)\n      return false;\n    if (includeUpper != other.includeUpper)\n      return false;\n    if (lowerTerm == null) {\n      if (other.lowerTerm != null)\n        return false;\n    } else if (!lowerTerm.equals(other.lowerTerm))\n      return false;\n    if (upperTerm == null) {\n      if (other.upperTerm != null)\n        return false;\n    } else if (!upperTerm.equals(other.upperTerm))\n      return false;\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (!super.equals(obj))\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    SlowCollatedTermRangeQuery other = (SlowCollatedTermRangeQuery) obj;\n    if (collator == null) {\n      if (other.collator != null)\n        return false;\n    } else if (!collator.equals(other.collator))\n      return false;\n    if (includeLower != other.includeLower)\n      return false;\n    if (includeUpper != other.includeUpper)\n      return false;\n    if (lowerTerm == null) {\n      if (other.lowerTerm != null)\n        return false;\n    } else if (!lowerTerm.equals(other.lowerTerm))\n      return false;\n    if (upperTerm == null) {\n      if (other.upperTerm != null)\n        return false;\n    } else if (!upperTerm.equals(other.upperTerm))\n      return false;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59cae262d4251e10e2a034b17c45776f6b4c7e68","date":1424712773,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/SlowCollatedTermRangeQuery#equals(Object).mjava","sourceNew":null,"sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (!super.equals(obj))\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    SlowCollatedTermRangeQuery other = (SlowCollatedTermRangeQuery) obj;\n    if (collator == null) {\n      if (other.collator != null)\n        return false;\n    } else if (!collator.equals(other.collator))\n      return false;\n    if (includeLower != other.includeLower)\n      return false;\n    if (includeUpper != other.includeUpper)\n      return false;\n    if (lowerTerm == null) {\n      if (other.lowerTerm != null)\n        return false;\n    } else if (!lowerTerm.equals(other.lowerTerm))\n      return false;\n    if (upperTerm == null) {\n      if (other.upperTerm != null)\n        return false;\n    } else if (!upperTerm.equals(other.upperTerm))\n      return false;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"59cae262d4251e10e2a034b17c45776f6b4c7e68":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["59cae262d4251e10e2a034b17c45776f6b4c7e68"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["59cae262d4251e10e2a034b17c45776f6b4c7e68"],"59cae262d4251e10e2a034b17c45776f6b4c7e68":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}