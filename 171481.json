{"path":"solr/core/src/test/org/apache/solr/core/TestMergePolicyConfig#assertCommitSomeNewDocs().mjava","commits":[{"id":"0e10d5539266ae943f9fa6befa6ac3481a2419c8","date":1371692194,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestMergePolicyConfig#assertCommitSomeNewDocs().mjava","pathOld":"/dev/null","sourceNew":"  public static void assertCommitSomeNewDocs() {\n    for (int i = 0; i < 5; i++) {\n      int val = docIdCounter.getAndIncrement();\n      assertU(adoc(\"id\", \"\" + val,\n                   \"a_s\", val + \"_\" + val + \"_\" + val + \"_\" + val,\n                   \"b_s\", val + \"_\" + val + \"_\" + val + \"_\" + val,\n                   \"c_s\", val + \"_\" + val + \"_\" + val + \"_\" + val,\n                   \"d_s\", val + \"_\" + val + \"_\" + val + \"_\" + val,\n                   \"e_s\", val + \"_\" + val + \"_\" + val + \"_\" + val,\n                   \"f_s\", val + \"_\" + val + \"_\" + val + \"_\" + val));\n    }\n    assertU(commit());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestMergePolicyConfig#assertCommitSomeNewDocs().mjava","pathOld":"/dev/null","sourceNew":"  public static void assertCommitSomeNewDocs() {\n    for (int i = 0; i < 5; i++) {\n      int val = docIdCounter.getAndIncrement();\n      assertU(adoc(\"id\", \"\" + val,\n                   \"a_s\", val + \"_\" + val + \"_\" + val + \"_\" + val,\n                   \"b_s\", val + \"_\" + val + \"_\" + val + \"_\" + val,\n                   \"c_s\", val + \"_\" + val + \"_\" + val + \"_\" + val,\n                   \"d_s\", val + \"_\" + val + \"_\" + val + \"_\" + val,\n                   \"e_s\", val + \"_\" + val + \"_\" + val + \"_\" + val,\n                   \"f_s\", val + \"_\" + val + \"_\" + val + \"_\" + val));\n    }\n    assertU(commit());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0e10d5539266ae943f9fa6befa6ac3481a2419c8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e10d5539266ae943f9fa6befa6ac3481a2419c8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0e10d5539266ae943f9fa6befa6ac3481a2419c8"]},"commit2Childs":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","0e10d5539266ae943f9fa6befa6ac3481a2419c8"],"0e10d5539266ae943f9fa6befa6ac3481a2419c8":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}