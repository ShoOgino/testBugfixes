{"path":"solr/core/src/java/org/apache/solr/core/SolrCore#initInfoRegistry(String,SolrConfig).mjava","commits":[{"id":"54bb8da55080e4569804e0661b83a3c72cbd8d4d","date":1429691126,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#initInfoRegistry(String,SolrConfig).mjava","pathOld":"/dev/null","sourceNew":"  private Map<String,SolrInfoMBean> initInfoRegistry(String name, SolrConfig config) {\n    if (config.jmxConfig.enabled) {\n      return new JmxMonitoredMap<String, SolrInfoMBean>(name, String.valueOf(this.hashCode()), config.jmxConfig);\n    } else  {\n      log.info(\"JMX monitoring not detected for core: \" + name);\n      return new ConcurrentHashMap<>();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f0c8426396c925de8db3ed3f8ff40fd73670a5c","date":1474556641,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#initInfoRegistry(String,SolrConfig).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#initInfoRegistry(String,SolrConfig).mjava","sourceNew":"  private Map<String,SolrInfoMBean> initInfoRegistry(String name, SolrConfig config) {\n    if (config.jmxConfig.enabled) {\n      return new JmxMonitoredMap<String, SolrInfoMBean>(name, String.valueOf(this.hashCode()), config.jmxConfig);\n    } else  {\n      log.debug(\"JMX monitoring not detected for core: \" + name);\n      return new ConcurrentHashMap<>();\n    }\n  }\n\n","sourceOld":"  private Map<String,SolrInfoMBean> initInfoRegistry(String name, SolrConfig config) {\n    if (config.jmxConfig.enabled) {\n      return new JmxMonitoredMap<String, SolrInfoMBean>(name, String.valueOf(this.hashCode()), config.jmxConfig);\n    } else  {\n      log.info(\"JMX monitoring not detected for core: \" + name);\n      return new ConcurrentHashMap<>();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"126d6ad24eed13163ba0959435d5a80e5672837c","date":1474567302,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#initInfoRegistry(String,SolrConfig).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#initInfoRegistry(String,SolrConfig).mjava","sourceNew":"  private Map<String,SolrInfoMBean> initInfoRegistry(String name, SolrConfig config) {\n    if (config.jmxConfig.enabled) {\n      return new JmxMonitoredMap<String, SolrInfoMBean>(name, String.valueOf(this.hashCode()), config.jmxConfig);\n    } else  {\n      log.debug(\"JMX monitoring not detected for core: \" + name);\n      return new ConcurrentHashMap<>();\n    }\n  }\n\n","sourceOld":"  private Map<String,SolrInfoMBean> initInfoRegistry(String name, SolrConfig config) {\n    if (config.jmxConfig.enabled) {\n      return new JmxMonitoredMap<String, SolrInfoMBean>(name, String.valueOf(this.hashCode()), config.jmxConfig);\n    } else  {\n      log.info(\"JMX monitoring not detected for core: \" + name);\n      return new ConcurrentHashMap<>();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#initInfoRegistry(String,SolrConfig).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#initInfoRegistry(String,SolrConfig).mjava","sourceNew":"  private Map<String,SolrInfoMBean> initInfoRegistry(String name, SolrConfig config) {\n    if (config.jmxConfig.enabled) {\n      return new JmxMonitoredMap<String, SolrInfoMBean>(name, String.valueOf(this.hashCode()), config.jmxConfig);\n    } else  {\n      log.debug(\"JMX monitoring not detected for core: \" + name);\n      return new ConcurrentHashMap<>();\n    }\n  }\n\n","sourceOld":"  private Map<String,SolrInfoMBean> initInfoRegistry(String name, SolrConfig config) {\n    if (config.jmxConfig.enabled) {\n      return new JmxMonitoredMap<String, SolrInfoMBean>(name, String.valueOf(this.hashCode()), config.jmxConfig);\n    } else  {\n      log.info(\"JMX monitoring not detected for core: \" + name);\n      return new ConcurrentHashMap<>();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#initInfoRegistry(String,SolrConfig).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#initInfoRegistry(String,SolrConfig).mjava","sourceNew":"  private Map<String,SolrInfoMBean> initInfoRegistry(String name, SolrConfig config) {\n    if (config.jmxConfig.enabled) {\n      return new JmxMonitoredMap<String, SolrInfoMBean>(name, String.valueOf(this.hashCode()), config.jmxConfig);\n    } else  {\n      log.debug(\"JMX monitoring not detected for core: \" + name);\n      return new ConcurrentHashMap<>();\n    }\n  }\n\n","sourceOld":"  private Map<String,SolrInfoMBean> initInfoRegistry(String name, SolrConfig config) {\n    if (config.jmxConfig.enabled) {\n      return new JmxMonitoredMap<String, SolrInfoMBean>(name, String.valueOf(this.hashCode()), config.jmxConfig);\n    } else  {\n      log.info(\"JMX monitoring not detected for core: \" + name);\n      return new ConcurrentHashMap<>();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"073f1aa70444ec64f3e216816af2a3b43fa38fe7","date":1488920481,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#initInfoRegistry(String,SolrConfig).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#initInfoRegistry(String,SolrConfig).mjava","sourceNew":"  private Map<String,SolrInfoMBean> initInfoRegistry(String name, SolrConfig config) {\n    if (config.jmxConfig.enabled) {\n      return new JmxMonitoredMap<String, SolrInfoMBean>(name, coreMetricManager.getRegistryName(), String.valueOf(this.hashCode()), config.jmxConfig);\n    } else  {\n      log.debug(\"JMX monitoring not detected for core: \" + name);\n      return new ConcurrentHashMap<>();\n    }\n  }\n\n","sourceOld":"  private Map<String,SolrInfoMBean> initInfoRegistry(String name, SolrConfig config) {\n    if (config.jmxConfig.enabled) {\n      return new JmxMonitoredMap<String, SolrInfoMBean>(name, String.valueOf(this.hashCode()), config.jmxConfig);\n    } else  {\n      log.debug(\"JMX monitoring not detected for core: \" + name);\n      return new ConcurrentHashMap<>();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#initInfoRegistry(String,SolrConfig).mjava","sourceNew":null,"sourceOld":"  private Map<String,SolrInfoMBean> initInfoRegistry(String name, SolrConfig config) {\n    if (config.jmxConfig.enabled) {\n      return new JmxMonitoredMap<String, SolrInfoMBean>(name, coreMetricManager.getRegistryName(), String.valueOf(this.hashCode()), config.jmxConfig);\n    } else  {\n      log.debug(\"JMX monitoring not detected for core: \" + name);\n      return new ConcurrentHashMap<>();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#initInfoRegistry(String,SolrConfig).mjava","sourceNew":null,"sourceOld":"  private Map<String,SolrInfoMBean> initInfoRegistry(String name, SolrConfig config) {\n    if (config.jmxConfig.enabled) {\n      return new JmxMonitoredMap<String, SolrInfoMBean>(name, coreMetricManager.getRegistryName(), String.valueOf(this.hashCode()), config.jmxConfig);\n    } else  {\n      log.debug(\"JMX monitoring not detected for core: \" + name);\n      return new ConcurrentHashMap<>();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["073f1aa70444ec64f3e216816af2a3b43fa38fe7"],"126d6ad24eed13163ba0959435d5a80e5672837c":["54bb8da55080e4569804e0661b83a3c72cbd8d4d","7f0c8426396c925de8db3ed3f8ff40fd73670a5c"],"54bb8da55080e4569804e0661b83a3c72cbd8d4d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["54bb8da55080e4569804e0661b83a3c72cbd8d4d","126d6ad24eed13163ba0959435d5a80e5672837c"],"073f1aa70444ec64f3e216816af2a3b43fa38fe7":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"816521ebaad5add9cb96bb88c577394e2938c40b":["073f1aa70444ec64f3e216816af2a3b43fa38fe7"],"7f0c8426396c925de8db3ed3f8ff40fd73670a5c":["54bb8da55080e4569804e0661b83a3c72cbd8d4d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["54bb8da55080e4569804e0661b83a3c72cbd8d4d","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["816521ebaad5add9cb96bb88c577394e2938c40b"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"126d6ad24eed13163ba0959435d5a80e5672837c":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"54bb8da55080e4569804e0661b83a3c72cbd8d4d":["126d6ad24eed13163ba0959435d5a80e5672837c","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","7f0c8426396c925de8db3ed3f8ff40fd73670a5c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54bb8da55080e4569804e0661b83a3c72cbd8d4d"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["073f1aa70444ec64f3e216816af2a3b43fa38fe7","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"073f1aa70444ec64f3e216816af2a3b43fa38fe7":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","816521ebaad5add9cb96bb88c577394e2938c40b"],"7f0c8426396c925de8db3ed3f8ff40fd73670a5c":["126d6ad24eed13163ba0959435d5a80e5672837c"],"816521ebaad5add9cb96bb88c577394e2938c40b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}