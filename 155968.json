{"path":"solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessor#detectLanguage(SolrInputDocument).mjava","commits":[{"id":"3ff1a276d1c94e9393032df34ad607eda09ee3a6","date":1417803750,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessor#detectLanguage(SolrInputDocument).mjava","pathOld":"solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessor#detectLanguage(String).mjava","sourceNew":"  @Override\n  protected List<DetectedLanguage> detectLanguage(SolrInputDocument doc) {\n    List<DetectedLanguage> languages = new ArrayList<>();\n    String content = concatFields(doc);\n    if (content.length() != 0) {\n      LanguageIdentifier identifier = new LanguageIdentifier(content);\n      // FIXME: Hack - we get the distance from toString and calculate our own certainty score\n      Double distance = Double.parseDouble(tikaSimilarityPattern.matcher(identifier.toString()).replaceFirst(\"$1\"));\n      // This formula gives: 0.02 => 0.8, 0.1 => 0.5 which is a better sweetspot than isReasonablyCertain()\n      Double certainty = 1 - (5 * distance); \n      certainty = (certainty < 0) ? 0 : certainty;\n      DetectedLanguage language = new DetectedLanguage(identifier.getLanguage(), certainty);\n      languages.add(language);\n      log.debug(\"Language detected as \"+language+\" with a certainty of \"+language.getCertainty()+\" (Tika distance=\"+identifier.toString()+\")\");\n    } else {\n      log.debug(\"No input text to detect language from, returning empty list\");\n    }\n    return languages;\n  }\n\n","sourceOld":"  @Override\n  protected List<DetectedLanguage> detectLanguage(String content) {\n    List<DetectedLanguage> languages = new ArrayList<>();\n    if(content.trim().length() != 0) { \n      LanguageIdentifier identifier = new LanguageIdentifier(content);\n      // FIXME: Hack - we get the distance from toString and calculate our own certainty score\n      Double distance = Double.parseDouble(tikaSimilarityPattern.matcher(identifier.toString()).replaceFirst(\"$1\"));\n      // This formula gives: 0.02 => 0.8, 0.1 => 0.5 which is a better sweetspot than isReasonablyCertain()\n      Double certainty = 1 - (5 * distance); \n      certainty = (certainty < 0) ? 0 : certainty;\n      DetectedLanguage language = new DetectedLanguage(identifier.getLanguage(), certainty);\n      languages.add(language);\n      log.debug(\"Language detected as \"+language+\" with a certainty of \"+language.getCertainty()+\" (Tika distance=\"+identifier.toString()+\")\");\n    } else {\n      log.debug(\"No input text to detect language from, returning empty list\");\n    }\n    return languages;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4958642f967bfbd6f083ddf50f141bcde89b9ec1","date":1489572234,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessor#detectLanguage(SolrInputDocument).mjava","pathOld":"solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessor#detectLanguage(SolrInputDocument).mjava","sourceNew":"  @Override\n  protected List<DetectedLanguage> detectLanguage(SolrInputDocument doc) {\n    List<DetectedLanguage> languages = new ArrayList<>();\n    String content = concatFields(doc);\n    if (content.length() != 0) {\n      LanguageIdentifier identifier = new LanguageIdentifier(content);\n      // FIXME: Hack - we get the distance from toString and calculate our own certainty score\n      Double distance = Double.parseDouble(tikaSimilarityPattern.matcher(identifier.toString()).replaceFirst(\"$1\"));\n      // This formula gives: 0.02 => 0.8, 0.1 => 0.5 which is a better sweetspot than isReasonablyCertain()\n      Double certainty = 1 - (5 * distance);\n      if (certainty < 0)\n        certainty = 0d;\n      DetectedLanguage language = new DetectedLanguage(identifier.getLanguage(), certainty);\n      languages.add(language);\n      log.debug(\"Language detected as \"+language+\" with a certainty of \"+language.getCertainty()+\" (Tika distance=\"+identifier.toString()+\")\");\n    } else {\n      log.debug(\"No input text to detect language from, returning empty list\");\n    }\n    return languages;\n  }\n\n","sourceOld":"  @Override\n  protected List<DetectedLanguage> detectLanguage(SolrInputDocument doc) {\n    List<DetectedLanguage> languages = new ArrayList<>();\n    String content = concatFields(doc);\n    if (content.length() != 0) {\n      LanguageIdentifier identifier = new LanguageIdentifier(content);\n      // FIXME: Hack - we get the distance from toString and calculate our own certainty score\n      Double distance = Double.parseDouble(tikaSimilarityPattern.matcher(identifier.toString()).replaceFirst(\"$1\"));\n      // This formula gives: 0.02 => 0.8, 0.1 => 0.5 which is a better sweetspot than isReasonablyCertain()\n      Double certainty = 1 - (5 * distance); \n      certainty = (certainty < 0) ? 0 : certainty;\n      DetectedLanguage language = new DetectedLanguage(identifier.getLanguage(), certainty);\n      languages.add(language);\n      log.debug(\"Language detected as \"+language+\" with a certainty of \"+language.getCertainty()+\" (Tika distance=\"+identifier.toString()+\")\");\n    } else {\n      log.debug(\"No input text to detect language from, returning empty list\");\n    }\n    return languages;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bca83a747f8e297ee4412c0d18bdd3a98c09df3b","date":1489651910,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessor#detectLanguage(SolrInputDocument).mjava","pathOld":"solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessor#detectLanguage(SolrInputDocument).mjava","sourceNew":"  @Override\n  protected List<DetectedLanguage> detectLanguage(SolrInputDocument doc) {\n    List<DetectedLanguage> languages = new ArrayList<>();\n    String content = concatFields(doc);\n    if (content.length() != 0) {\n      LanguageIdentifier identifier = new LanguageIdentifier(content);\n      // FIXME: Hack - we get the distance from toString and calculate our own certainty score\n      Double distance = Double.parseDouble(tikaSimilarityPattern.matcher(identifier.toString()).replaceFirst(\"$1\"));\n      // This formula gives: 0.02 => 0.8, 0.1 => 0.5 which is a better sweetspot than isReasonablyCertain()\n      Double certainty = 1 - (5 * distance);\n      if (certainty < 0)\n        certainty = 0d;\n      DetectedLanguage language = new DetectedLanguage(identifier.getLanguage(), certainty);\n      languages.add(language);\n      log.debug(\"Language detected as \"+language+\" with a certainty of \"+language.getCertainty()+\" (Tika distance=\"+identifier.toString()+\")\");\n    } else {\n      log.debug(\"No input text to detect language from, returning empty list\");\n    }\n    return languages;\n  }\n\n","sourceOld":"  @Override\n  protected List<DetectedLanguage> detectLanguage(SolrInputDocument doc) {\n    List<DetectedLanguage> languages = new ArrayList<>();\n    String content = concatFields(doc);\n    if (content.length() != 0) {\n      LanguageIdentifier identifier = new LanguageIdentifier(content);\n      // FIXME: Hack - we get the distance from toString and calculate our own certainty score\n      Double distance = Double.parseDouble(tikaSimilarityPattern.matcher(identifier.toString()).replaceFirst(\"$1\"));\n      // This formula gives: 0.02 => 0.8, 0.1 => 0.5 which is a better sweetspot than isReasonablyCertain()\n      Double certainty = 1 - (5 * distance); \n      certainty = (certainty < 0) ? 0 : certainty;\n      DetectedLanguage language = new DetectedLanguage(identifier.getLanguage(), certainty);\n      languages.add(language);\n      log.debug(\"Language detected as \"+language+\" with a certainty of \"+language.getCertainty()+\" (Tika distance=\"+identifier.toString()+\")\");\n    } else {\n      log.debug(\"No input text to detect language from, returning empty list\");\n    }\n    return languages;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab68488225b6a6c357dda72ed11dedca9914a192","date":1490013111,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessor#detectLanguage(SolrInputDocument).mjava","pathOld":"solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessor#detectLanguage(SolrInputDocument).mjava","sourceNew":"  @Override\n  protected List<DetectedLanguage> detectLanguage(SolrInputDocument doc) {\n    List<DetectedLanguage> languages = new ArrayList<>();\n    String content = concatFields(doc);\n    if (content.length() != 0) {\n      LanguageIdentifier identifier = new LanguageIdentifier(content);\n      // FIXME: Hack - we get the distance from toString and calculate our own certainty score\n      Double distance = Double.parseDouble(tikaSimilarityPattern.matcher(identifier.toString()).replaceFirst(\"$1\"));\n      // This formula gives: 0.02 => 0.8, 0.1 => 0.5 which is a better sweetspot than isReasonablyCertain()\n      Double certainty = 1 - (5 * distance);\n      if (certainty < 0)\n        certainty = 0d;\n      DetectedLanguage language = new DetectedLanguage(identifier.getLanguage(), certainty);\n      languages.add(language);\n      log.debug(\"Language detected as \"+language+\" with a certainty of \"+language.getCertainty()+\" (Tika distance=\"+identifier.toString()+\")\");\n    } else {\n      log.debug(\"No input text to detect language from, returning empty list\");\n    }\n    return languages;\n  }\n\n","sourceOld":"  @Override\n  protected List<DetectedLanguage> detectLanguage(SolrInputDocument doc) {\n    List<DetectedLanguage> languages = new ArrayList<>();\n    String content = concatFields(doc);\n    if (content.length() != 0) {\n      LanguageIdentifier identifier = new LanguageIdentifier(content);\n      // FIXME: Hack - we get the distance from toString and calculate our own certainty score\n      Double distance = Double.parseDouble(tikaSimilarityPattern.matcher(identifier.toString()).replaceFirst(\"$1\"));\n      // This formula gives: 0.02 => 0.8, 0.1 => 0.5 which is a better sweetspot than isReasonablyCertain()\n      Double certainty = 1 - (5 * distance); \n      certainty = (certainty < 0) ? 0 : certainty;\n      DetectedLanguage language = new DetectedLanguage(identifier.getLanguage(), certainty);\n      languages.add(language);\n      log.debug(\"Language detected as \"+language+\" with a certainty of \"+language.getCertainty()+\" (Tika distance=\"+identifier.toString()+\")\");\n    } else {\n      log.debug(\"No input text to detect language from, returning empty list\");\n    }\n    return languages;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a4da5f9e2a1f2ac76feac0c0796bdce4881cb687","date":1546536444,"type":5,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessor#detectLanguage(Reader).mjava","pathOld":"solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessor#detectLanguage(SolrInputDocument).mjava","sourceNew":"  @Override\n  protected List<DetectedLanguage> detectLanguage(Reader solrDocReader) {\n    String content = SolrInputDocumentReader.asString(solrDocReader);\n    List<DetectedLanguage> languages = new ArrayList<>();\n    if (content.length() != 0) {\n      LanguageIdentifier identifier = new LanguageIdentifier(content);\n      // FIXME: Hack - we get the distance from toString and calculate our own certainty score\n      Double distance = Double.parseDouble(tikaSimilarityPattern.matcher(identifier.toString()).replaceFirst(\"$1\"));\n      // This formula gives: 0.02 => 0.8, 0.1 => 0.5 which is a better sweetspot than isReasonablyCertain()\n      Double certainty = 1 - (5 * distance);\n      if (certainty < 0)\n        certainty = 0d;\n      DetectedLanguage language = new DetectedLanguage(identifier.getLanguage(), certainty);\n      languages.add(language);\n      log.debug(\"Language detected as \"+language+\" with a certainty of \"+language.getCertainty()+\" (Tika distance=\"+identifier.toString()+\")\");\n    } else {\n      log.debug(\"No input text to detect language from, returning empty list\");\n    }\n    return languages;\n  }\n\n","sourceOld":"  @Override\n  protected List<DetectedLanguage> detectLanguage(SolrInputDocument doc) {\n    List<DetectedLanguage> languages = new ArrayList<>();\n    String content = concatFields(doc);\n    if (content.length() != 0) {\n      LanguageIdentifier identifier = new LanguageIdentifier(content);\n      // FIXME: Hack - we get the distance from toString and calculate our own certainty score\n      Double distance = Double.parseDouble(tikaSimilarityPattern.matcher(identifier.toString()).replaceFirst(\"$1\"));\n      // This formula gives: 0.02 => 0.8, 0.1 => 0.5 which is a better sweetspot than isReasonablyCertain()\n      Double certainty = 1 - (5 * distance);\n      if (certainty < 0)\n        certainty = 0d;\n      DetectedLanguage language = new DetectedLanguage(identifier.getLanguage(), certainty);\n      languages.add(language);\n      log.debug(\"Language detected as \"+language+\" with a certainty of \"+language.getCertainty()+\" (Tika distance=\"+identifier.toString()+\")\");\n    } else {\n      log.debug(\"No input text to detect language from, returning empty list\");\n    }\n    return languages;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4958642f967bfbd6f083ddf50f141bcde89b9ec1":["3ff1a276d1c94e9393032df34ad607eda09ee3a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a4da5f9e2a1f2ac76feac0c0796bdce4881cb687":["4958642f967bfbd6f083ddf50f141bcde89b9ec1"],"bca83a747f8e297ee4412c0d18bdd3a98c09df3b":["3ff1a276d1c94e9393032df34ad607eda09ee3a6"],"ab68488225b6a6c357dda72ed11dedca9914a192":["3ff1a276d1c94e9393032df34ad607eda09ee3a6","bca83a747f8e297ee4412c0d18bdd3a98c09df3b"],"3ff1a276d1c94e9393032df34ad607eda09ee3a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a4da5f9e2a1f2ac76feac0c0796bdce4881cb687"]},"commit2Childs":{"4958642f967bfbd6f083ddf50f141bcde89b9ec1":["a4da5f9e2a1f2ac76feac0c0796bdce4881cb687"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3ff1a276d1c94e9393032df34ad607eda09ee3a6"],"a4da5f9e2a1f2ac76feac0c0796bdce4881cb687":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bca83a747f8e297ee4412c0d18bdd3a98c09df3b":["ab68488225b6a6c357dda72ed11dedca9914a192"],"ab68488225b6a6c357dda72ed11dedca9914a192":[],"3ff1a276d1c94e9393032df34ad607eda09ee3a6":["4958642f967bfbd6f083ddf50f141bcde89b9ec1","bca83a747f8e297ee4412c0d18bdd3a98c09df3b","ab68488225b6a6c357dda72ed11dedca9914a192"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ab68488225b6a6c357dda72ed11dedca9914a192","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}