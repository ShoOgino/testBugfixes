{"path":"solr/core/src/java/org/apache/solr/handler/SnapPuller#readToStringBuilder(long,String).mjava","commits":[{"id":"d06343967a29132f5d782f74e8d0988400278a02","date":1388963049,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapPuller#readToStringBuilder(long,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller#readToStringBuffer(long,String).mjava","sourceNew":"  private StringBuilder readToStringBuilder(long replicationTime, String str) {\n    StringBuilder sb = new StringBuilder();\n    List<String> l = new ArrayList<String>();\n    if (str != null && str.length() != 0) {\n      String[] ss = str.split(\",\");\n      for (int i = 0; i < ss.length; i++) {\n        l.add(ss[i]);\n      }\n    }\n    sb.append(replicationTime);\n    if (!l.isEmpty()) {\n      for (int i = 0; i < l.size() || i < 9; i++) {\n        if (i == l.size() || i == 9) break;\n        String s = l.get(i);\n        sb.append(\",\").append(s);\n      }\n    }\n    return sb;\n  }\n\n","sourceOld":"  private StringBuffer readToStringBuffer(long replicationTime, String str) {\n    StringBuffer sb = new StringBuffer();\n    List<String> l = new ArrayList<String>();\n    if (str != null && str.length() != 0) {\n      String[] ss = str.split(\",\");\n      for (int i = 0; i < ss.length; i++) {\n        l.add(ss[i]);\n      }\n    }\n    sb.append(replicationTime);\n    if (!l.isEmpty()) {\n      for (int i = 0; i < l.size() || i < 9; i++) {\n        if (i == l.size() || i == 9) break;\n        String s = l.get(i);\n        sb.append(\",\").append(s);\n      }\n    }\n    return sb;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapPuller#readToStringBuilder(long,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller#readToStringBuilder(long,String).mjava","sourceNew":"  private StringBuilder readToStringBuilder(long replicationTime, String str) {\n    StringBuilder sb = new StringBuilder();\n    List<String> l = new ArrayList<>();\n    if (str != null && str.length() != 0) {\n      String[] ss = str.split(\",\");\n      for (int i = 0; i < ss.length; i++) {\n        l.add(ss[i]);\n      }\n    }\n    sb.append(replicationTime);\n    if (!l.isEmpty()) {\n      for (int i = 0; i < l.size() || i < 9; i++) {\n        if (i == l.size() || i == 9) break;\n        String s = l.get(i);\n        sb.append(\",\").append(s);\n      }\n    }\n    return sb;\n  }\n\n","sourceOld":"  private StringBuilder readToStringBuilder(long replicationTime, String str) {\n    StringBuilder sb = new StringBuilder();\n    List<String> l = new ArrayList<String>();\n    if (str != null && str.length() != 0) {\n      String[] ss = str.split(\",\");\n      for (int i = 0; i < ss.length; i++) {\n        l.add(ss[i]);\n      }\n    }\n    sb.append(replicationTime);\n    if (!l.isEmpty()) {\n      for (int i = 0; i < l.size() || i < 9; i++) {\n        if (i == l.size() || i == 9) break;\n        String s = l.get(i);\n        sb.append(\",\").append(s);\n      }\n    }\n    return sb;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dea8e36e8c36d610840396c282a5affe3f722f4e","date":1422297045,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapPuller#readToStringBuilder(long,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller#readToStringBuilder(long,String).mjava","sourceNew":"  private StringBuilder readToStringBuilder(long replicationTime, String str) {\n    StringBuilder sb = new StringBuilder();\n    List<String> l = new ArrayList<>();\n    if (str != null && str.length() != 0) {\n      String[] ss = str.split(\",\");\n      Collections.addAll(l, ss);\n    }\n    sb.append(replicationTime);\n    if (!l.isEmpty()) {\n      for (int i = 0; i < l.size() || i < 9; i++) {\n        if (i == l.size() || i == 9) break;\n        String s = l.get(i);\n        sb.append(\",\").append(s);\n      }\n    }\n    return sb;\n  }\n\n","sourceOld":"  private StringBuilder readToStringBuilder(long replicationTime, String str) {\n    StringBuilder sb = new StringBuilder();\n    List<String> l = new ArrayList<>();\n    if (str != null && str.length() != 0) {\n      String[] ss = str.split(\",\");\n      for (int i = 0; i < ss.length; i++) {\n        l.add(ss[i]);\n      }\n    }\n    sb.append(replicationTime);\n    if (!l.isEmpty()) {\n      for (int i = 0; i < l.size() || i < 9; i++) {\n        if (i == l.size() || i == 9) break;\n        String s = l.get(i);\n        sb.append(\",\").append(s);\n      }\n    }\n    return sb;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20f6b7cff3771384f27af0f059795d7e64aff6b9","date":1425498309,"type":5,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/IndexFetcher#readToStringBuilder(long,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller#readToStringBuilder(long,String).mjava","sourceNew":"  private StringBuilder readToStringBuilder(long replicationTime, String str) {\n    StringBuilder sb = new StringBuilder();\n    List<String> l = new ArrayList<>();\n    if (str != null && str.length() != 0) {\n      String[] ss = str.split(\",\");\n      Collections.addAll(l, ss);\n    }\n    sb.append(replicationTime);\n    if (!l.isEmpty()) {\n      for (int i = 0; i < l.size() || i < 9; i++) {\n        if (i == l.size() || i == 9) break;\n        String s = l.get(i);\n        sb.append(\",\").append(s);\n      }\n    }\n    return sb;\n  }\n\n","sourceOld":"  private StringBuilder readToStringBuilder(long replicationTime, String str) {\n    StringBuilder sb = new StringBuilder();\n    List<String> l = new ArrayList<>();\n    if (str != null && str.length() != 0) {\n      String[] ss = str.split(\",\");\n      Collections.addAll(l, ss);\n    }\n    sb.append(replicationTime);\n    if (!l.isEmpty()) {\n      for (int i = 0; i < l.size() || i < 9; i++) {\n        if (i == l.size() || i == 9) break;\n        String s = l.get(i);\n        sb.append(\",\").append(s);\n      }\n    }\n    return sb;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":5,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/IndexFetcher#readToStringBuilder(long,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller#readToStringBuilder(long,String).mjava","sourceNew":"  private StringBuilder readToStringBuilder(long replicationTime, String str) {\n    StringBuilder sb = new StringBuilder();\n    List<String> l = new ArrayList<>();\n    if (str != null && str.length() != 0) {\n      String[] ss = str.split(\",\");\n      Collections.addAll(l, ss);\n    }\n    sb.append(replicationTime);\n    if (!l.isEmpty()) {\n      for (int i = 0; i < l.size() || i < 9; i++) {\n        if (i == l.size() || i == 9) break;\n        String s = l.get(i);\n        sb.append(\",\").append(s);\n      }\n    }\n    return sb;\n  }\n\n","sourceOld":"  private StringBuilder readToStringBuilder(long replicationTime, String str) {\n    StringBuilder sb = new StringBuilder();\n    List<String> l = new ArrayList<>();\n    if (str != null && str.length() != 0) {\n      String[] ss = str.split(\",\");\n      Collections.addAll(l, ss);\n    }\n    sb.append(replicationTime);\n    if (!l.isEmpty()) {\n      for (int i = 0; i < l.size() || i < 9; i++) {\n        if (i == l.size() || i == 9) break;\n        String s = l.get(i);\n        sb.append(\",\").append(s);\n      }\n    }\n    return sb;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["d06343967a29132f5d782f74e8d0988400278a02"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["dea8e36e8c36d610840396c282a5affe3f722f4e","20f6b7cff3771384f27af0f059795d7e64aff6b9"],"20f6b7cff3771384f27af0f059795d7e64aff6b9":["dea8e36e8c36d610840396c282a5affe3f722f4e"],"d06343967a29132f5d782f74e8d0988400278a02":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"dea8e36e8c36d610840396c282a5affe3f722f4e":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["20f6b7cff3771384f27af0f059795d7e64aff6b9"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["dea8e36e8c36d610840396c282a5affe3f722f4e"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"20f6b7cff3771384f27af0f059795d7e64aff6b9":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d06343967a29132f5d782f74e8d0988400278a02":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"dea8e36e8c36d610840396c282a5affe3f722f4e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","20f6b7cff3771384f27af0f059795d7e64aff6b9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d06343967a29132f5d782f74e8d0988400278a02"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}