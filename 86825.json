{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree.QuadCell#getSubCells().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree.QuadCell#getSubCells().mjava","pathOld":"modules/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree.QuadCell#getSubCells().mjava","sourceNew":"    @Override\n    public Collection<Node> getSubCells() {\n      List<Node> cells = new ArrayList<Node>(4);\n      cells.add(new QuadCell(getTokenString()+\"A\"));\n      cells.add(new QuadCell(getTokenString()+\"B\"));\n      cells.add(new QuadCell(getTokenString()+\"C\"));\n      cells.add(new QuadCell(getTokenString()+\"D\"));\n      return cells;\n    }\n\n","sourceOld":"    @Override\n    public Collection<Node> getSubCells() {\n      List<Node> cells = new ArrayList<Node>(4);\n      cells.add(new QuadCell(getTokenString()+\"A\"));\n      cells.add(new QuadCell(getTokenString()+\"B\"));\n      cells.add(new QuadCell(getTokenString()+\"C\"));\n      cells.add(new QuadCell(getTokenString()+\"D\"));\n      return cells;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8259c159da2de2e8528524fb76b244b46cbded59","date":1364478249,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree.QuadCell#getSubCells().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree.QuadCell#getSubCells().mjava","sourceNew":"    @Override\n    public Collection<Cell> getSubCells() {\n      List<Cell> cells = new ArrayList<Cell>(4);\n      cells.add(new QuadCell(getTokenString()+\"A\"));\n      cells.add(new QuadCell(getTokenString()+\"B\"));\n      cells.add(new QuadCell(getTokenString()+\"C\"));\n      cells.add(new QuadCell(getTokenString()+\"D\"));\n      return cells;\n    }\n\n","sourceOld":"    @Override\n    public Collection<Node> getSubCells() {\n      List<Node> cells = new ArrayList<Node>(4);\n      cells.add(new QuadCell(getTokenString()+\"A\"));\n      cells.add(new QuadCell(getTokenString()+\"B\"));\n      cells.add(new QuadCell(getTokenString()+\"C\"));\n      cells.add(new QuadCell(getTokenString()+\"D\"));\n      return cells;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree.QuadCell#getSubCells().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree.QuadCell#getSubCells().mjava","sourceNew":"    @Override\n    public Collection<Cell> getSubCells() {\n      List<Cell> cells = new ArrayList<>(4);\n      cells.add(new QuadCell(getTokenString()+\"A\"));\n      cells.add(new QuadCell(getTokenString()+\"B\"));\n      cells.add(new QuadCell(getTokenString()+\"C\"));\n      cells.add(new QuadCell(getTokenString()+\"D\"));\n      return cells;\n    }\n\n","sourceOld":"    @Override\n    public Collection<Cell> getSubCells() {\n      List<Cell> cells = new ArrayList<Cell>(4);\n      cells.add(new QuadCell(getTokenString()+\"A\"));\n      cells.add(new QuadCell(getTokenString()+\"B\"));\n      cells.add(new QuadCell(getTokenString()+\"C\"));\n      cells.add(new QuadCell(getTokenString()+\"D\"));\n      return cells;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4de14be4bd1b857ba37ca138b61c4661c6d1bed3","date":1396628861,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree.QuadCell#getSubCells().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree.QuadCell#getSubCells().mjava","sourceNew":"    @Override\n    public Collection<Cell> getSubCells() {\n      BytesRef source = getTokenBytesNoLeaf(null);\n      BytesRef target = new BytesRef();\n\n      List<Cell> cells = new ArrayList<>(4);\n      cells.add(new QuadCell(concat(source, (byte)'A', target), null));\n      cells.add(new QuadCell(concat(source, (byte)'B', target), null));\n      cells.add(new QuadCell(concat(source, (byte)'C', target), null));\n      cells.add(new QuadCell(concat(source, (byte)'D', target), null));\n      return cells;\n    }\n\n","sourceOld":"    @Override\n    public Collection<Cell> getSubCells() {\n      List<Cell> cells = new ArrayList<>(4);\n      cells.add(new QuadCell(getTokenString()+\"A\"));\n      cells.add(new QuadCell(getTokenString()+\"B\"));\n      cells.add(new QuadCell(getTokenString()+\"C\"));\n      cells.add(new QuadCell(getTokenString()+\"D\"));\n      return cells;\n    }\n\n","bugFix":null,"bugIntro":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"15e323346eac5e4685c0a9f2df85eb96b4239bbb","date":1396688577,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree.QuadCell#getSubCells().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree.QuadCell#getSubCells().mjava","sourceNew":"    @Override\n    public Collection<Cell> getSubCells() {\n      BytesRef source = getTokenBytesNoLeaf(null);\n      BytesRef target = new BytesRef();\n\n      List<Cell> cells = new ArrayList<>(4);\n      cells.add(new QuadCell(concat(source, (byte)'A', target), null));\n      cells.add(new QuadCell(concat(source, (byte)'B', target), null));\n      cells.add(new QuadCell(concat(source, (byte)'C', target), null));\n      cells.add(new QuadCell(concat(source, (byte)'D', target), null));\n      return cells;\n    }\n\n","sourceOld":"    @Override\n    public Collection<Cell> getSubCells() {\n      List<Cell> cells = new ArrayList<>(4);\n      cells.add(new QuadCell(getTokenString()+\"A\"));\n      cells.add(new QuadCell(getTokenString()+\"B\"));\n      cells.add(new QuadCell(getTokenString()+\"C\"));\n      cells.add(new QuadCell(getTokenString()+\"D\"));\n      return cells;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6","date":1397789149,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree.QuadCell#getSubCells().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree.QuadCell#getSubCells().mjava","sourceNew":"    @Override\n    protected Collection<Cell> getSubCells() {\n      BytesRef source = getTokenBytesNoLeaf(null);\n      BytesRef target = new BytesRef();\n\n      List<Cell> cells = new ArrayList<>(4);\n      cells.add(new QuadCell(concat(source, (byte)'A', target), null));\n      cells.add(new QuadCell(concat(source, (byte)'B', target), null));\n      cells.add(new QuadCell(concat(source, (byte)'C', target), null));\n      cells.add(new QuadCell(concat(source, (byte)'D', target), null));\n      return cells;\n    }\n\n","sourceOld":"    @Override\n    public Collection<Cell> getSubCells() {\n      BytesRef source = getTokenBytesNoLeaf(null);\n      BytesRef target = new BytesRef();\n\n      List<Cell> cells = new ArrayList<>(4);\n      cells.add(new QuadCell(concat(source, (byte)'A', target), null));\n      cells.add(new QuadCell(concat(source, (byte)'B', target), null));\n      cells.add(new QuadCell(concat(source, (byte)'C', target), null));\n      cells.add(new QuadCell(concat(source, (byte)'D', target), null));\n      return cells;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","date":1407854805,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree.QuadCell#getSubCells().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree.QuadCell#getSubCells().mjava","sourceNew":"    @Override\n    protected Collection<Cell> getSubCells() {\n      BytesRef source = getTokenBytesNoLeaf(null);\n\n      List<Cell> cells = new ArrayList<>(4);\n      cells.add(new QuadCell(concat(source, (byte)'A'), null));\n      cells.add(new QuadCell(concat(source, (byte)'B'), null));\n      cells.add(new QuadCell(concat(source, (byte)'C'), null));\n      cells.add(new QuadCell(concat(source, (byte)'D'), null));\n      return cells;\n    }\n\n","sourceOld":"    @Override\n    protected Collection<Cell> getSubCells() {\n      BytesRef source = getTokenBytesNoLeaf(null);\n      BytesRef target = new BytesRef();\n\n      List<Cell> cells = new ArrayList<>(4);\n      cells.add(new QuadCell(concat(source, (byte)'A', target), null));\n      cells.add(new QuadCell(concat(source, (byte)'B', target), null));\n      cells.add(new QuadCell(concat(source, (byte)'C', target), null));\n      cells.add(new QuadCell(concat(source, (byte)'D', target), null));\n      return cells;\n    }\n\n","bugFix":["4de14be4bd1b857ba37ca138b61c4661c6d1bed3"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree.QuadCell#getSubCells().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree.QuadCell#getSubCells().mjava","sourceNew":"    @Override\n    protected Collection<Cell> getSubCells() {\n      BytesRef source = getTokenBytesNoLeaf(null);\n\n      List<Cell> cells = new ArrayList<>(4);\n      cells.add(new QuadCell(concat(source, (byte)'A'), null));\n      cells.add(new QuadCell(concat(source, (byte)'B'), null));\n      cells.add(new QuadCell(concat(source, (byte)'C'), null));\n      cells.add(new QuadCell(concat(source, (byte)'D'), null));\n      return cells;\n    }\n\n","sourceOld":"    @Override\n    protected Collection<Cell> getSubCells() {\n      BytesRef source = getTokenBytesNoLeaf(null);\n\n      List<Cell> cells = new ArrayList<>(4);\n      cells.add(new QuadCell(concat(source, (byte)'A'), null));\n      cells.add(new QuadCell(concat(source, (byte)'B'), null));\n      cells.add(new QuadCell(concat(source, (byte)'C'), null));\n      cells.add(new QuadCell(concat(source, (byte)'D'), null));\n      return cells;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree.QuadCell#getSubCells().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree.QuadCell#getSubCells().mjava","sourceNew":"    @Override\n    protected Collection<Cell> getSubCells() {\n      BytesRef source = getTokenBytesNoLeaf(null);\n\n      List<Cell> cells = new ArrayList<>(4);\n      cells.add(new QuadCell(concat(source, (byte)'A'), null));\n      cells.add(new QuadCell(concat(source, (byte)'B'), null));\n      cells.add(new QuadCell(concat(source, (byte)'C'), null));\n      cells.add(new QuadCell(concat(source, (byte)'D'), null));\n      return cells;\n    }\n\n","sourceOld":"    @Override\n    protected Collection<Cell> getSubCells() {\n      BytesRef source = getTokenBytesNoLeaf(null);\n\n      List<Cell> cells = new ArrayList<>(4);\n      cells.add(new QuadCell(concat(source, (byte)'A'), null));\n      cells.add(new QuadCell(concat(source, (byte)'B'), null));\n      cells.add(new QuadCell(concat(source, (byte)'C'), null));\n      cells.add(new QuadCell(concat(source, (byte)'D'), null));\n      return cells;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["8259c159da2de2e8528524fb76b244b46cbded59"],"af2638813028b254a88b418ebeafb541afb49653":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","112d77ac8d3e10a362516ad834c9a11d35c94234"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","4de14be4bd1b857ba37ca138b61c4661c6d1bed3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"4de14be4bd1b857ba37ca138b61c4661c6d1bed3":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6"],"8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6":["4de14be4bd1b857ba37ca138b61c4661c6d1bed3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"],"8259c159da2de2e8528524fb76b244b46cbded59":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","4de14be4bd1b857ba37ca138b61c4661c6d1bed3"],"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["8259c159da2de2e8528524fb76b244b46cbded59"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"4de14be4bd1b857ba37ca138b61c4661c6d1bed3":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"8259c159da2de2e8528524fb76b244b46cbded59":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}