{"path":"lucene/src/test-framework/java/org/apache/lucene/codecs/ramonly/RAMOnlyPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/codecs/ramonly/RAMOnlyPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/index/codecs/ramonly/RAMOnlyPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState writeState) throws IOException {\n    final int id = nextID.getAndIncrement();\n\n    // TODO -- ok to do this up front instead of\n    // on close....?  should be ok?\n    // Write our ID:\n    final String idFileName = IndexFileNames.segmentFileName(writeState.segmentName, writeState.segmentSuffix, ID_EXTENSION);\n    IndexOutput out = writeState.directory.createOutput(idFileName, writeState.context);\n    boolean success = false;\n    try {\n      CodecUtil.writeHeader(out, RAM_ONLY_NAME, VERSION_LATEST);\n      out.writeVInt(id);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      } else {\n        IOUtils.close(out);\n      }\n    }\n    \n    final RAMPostings postings = new RAMPostings();\n    final RAMFieldsConsumer consumer = new RAMFieldsConsumer(postings);\n\n    synchronized(state) {\n      state.put(id, postings);\n    }\n    return consumer;\n  }\n\n","sourceOld":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState writeState) throws IOException {\n    final int id = nextID.getAndIncrement();\n\n    // TODO -- ok to do this up front instead of\n    // on close....?  should be ok?\n    // Write our ID:\n    final String idFileName = IndexFileNames.segmentFileName(writeState.segmentName, writeState.segmentSuffix, ID_EXTENSION);\n    IndexOutput out = writeState.directory.createOutput(idFileName, writeState.context);\n    boolean success = false;\n    try {\n      CodecUtil.writeHeader(out, RAM_ONLY_NAME, VERSION_LATEST);\n      out.writeVInt(id);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      } else {\n        IOUtils.close(out);\n      }\n    }\n    \n    final RAMPostings postings = new RAMPostings();\n    final RAMFieldsConsumer consumer = new RAMFieldsConsumer(postings);\n\n    synchronized(state) {\n      state.put(id, postings);\n    }\n    return consumer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/ramonly/RAMOnlyPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/codecs/ramonly/RAMOnlyPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState writeState) throws IOException {\n    final int id = nextID.getAndIncrement();\n\n    // TODO -- ok to do this up front instead of\n    // on close....?  should be ok?\n    // Write our ID:\n    final String idFileName = IndexFileNames.segmentFileName(writeState.segmentName, writeState.segmentSuffix, ID_EXTENSION);\n    IndexOutput out = writeState.directory.createOutput(idFileName, writeState.context);\n    boolean success = false;\n    try {\n      CodecUtil.writeHeader(out, RAM_ONLY_NAME, VERSION_LATEST);\n      out.writeVInt(id);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      } else {\n        IOUtils.close(out);\n      }\n    }\n    \n    final RAMPostings postings = new RAMPostings();\n    final RAMFieldsConsumer consumer = new RAMFieldsConsumer(postings);\n\n    synchronized(state) {\n      state.put(id, postings);\n    }\n    return consumer;\n  }\n\n","sourceOld":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState writeState) throws IOException {\n    final int id = nextID.getAndIncrement();\n\n    // TODO -- ok to do this up front instead of\n    // on close....?  should be ok?\n    // Write our ID:\n    final String idFileName = IndexFileNames.segmentFileName(writeState.segmentName, writeState.segmentSuffix, ID_EXTENSION);\n    IndexOutput out = writeState.directory.createOutput(idFileName, writeState.context);\n    boolean success = false;\n    try {\n      CodecUtil.writeHeader(out, RAM_ONLY_NAME, VERSION_LATEST);\n      out.writeVInt(id);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      } else {\n        IOUtils.close(out);\n      }\n    }\n    \n    final RAMPostings postings = new RAMPostings();\n    final RAMFieldsConsumer consumer = new RAMFieldsConsumer(postings);\n\n    synchronized(state) {\n      state.put(id, postings);\n    }\n    return consumer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}