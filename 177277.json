{"path":"solr/core/src/java/org/apache/solr/request/SimpleFacets#selectFacetMethod(String,SchemaField,FacetMethod,Integer,boolean).mjava","commits":[{"id":"39342cb658ac11dfcbf4459807fb00eb9ada0218","date":1472876688,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SimpleFacets#selectFacetMethod(String,SchemaField,FacetMethod,Integer,boolean).mjava","pathOld":"/dev/null","sourceNew":"   /**\n    * @param existsRequested facet.exists=true is passed for the given field\n    * */\n  static FacetMethod selectFacetMethod(String fieldName, \n                                       SchemaField field, FacetMethod method, Integer mincount,\n                                       boolean existsRequested) {\n    if (existsRequested) {\n      checkMincountOnExists(fieldName, mincount);\n      if (method == null) {\n        method = FacetMethod.ENUM;\n      }\n    }\n    final FacetMethod facetMethod = selectFacetMethod(field, method, mincount);\n    \n    if (existsRequested && facetMethod!=FacetMethod.ENUM) {\n      throw new SolrException (ErrorCode.BAD_REQUEST, \n          FacetParams.FACET_EXISTS + \"=true is requested, but \"+\n          FacetParams.FACET_METHOD+\"=\"+FacetParams.FACET_METHOD_enum+ \" can't be used with \"+fieldName\n      );\n    }\n    return facetMethod;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc8f206328a706450934717bec7ccc22ad166fc0","date":1473142172,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/request/SimpleFacets#selectFacetMethod(String,SchemaField,FacetMethod,Integer,boolean).mjava","pathOld":"/dev/null","sourceNew":"   /**\n    * @param existsRequested facet.exists=true is passed for the given field\n    * */\n  static FacetMethod selectFacetMethod(String fieldName, \n                                       SchemaField field, FacetMethod method, Integer mincount,\n                                       boolean existsRequested) {\n    if (existsRequested) {\n      checkMincountOnExists(fieldName, mincount);\n      if (method == null) {\n        method = FacetMethod.ENUM;\n      }\n    }\n    final FacetMethod facetMethod = selectFacetMethod(field, method, mincount);\n    \n    if (existsRequested && facetMethod!=FacetMethod.ENUM) {\n      throw new SolrException (ErrorCode.BAD_REQUEST, \n          FacetParams.FACET_EXISTS + \"=true is requested, but \"+\n          FacetParams.FACET_METHOD+\"=\"+FacetParams.FACET_METHOD_enum+ \" can't be used with \"+fieldName\n      );\n    }\n    return facetMethod;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89424def13674ea17829b41c5883c54ecc31a132","date":1473767373,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/request/SimpleFacets#selectFacetMethod(String,SchemaField,FacetMethod,Integer,boolean).mjava","pathOld":"/dev/null","sourceNew":"   /**\n    * @param existsRequested facet.exists=true is passed for the given field\n    * */\n  static FacetMethod selectFacetMethod(String fieldName, \n                                       SchemaField field, FacetMethod method, Integer mincount,\n                                       boolean existsRequested) {\n    if (existsRequested) {\n      checkMincountOnExists(fieldName, mincount);\n      if (method == null) {\n        method = FacetMethod.ENUM;\n      }\n    }\n    final FacetMethod facetMethod = selectFacetMethod(field, method, mincount);\n    \n    if (existsRequested && facetMethod!=FacetMethod.ENUM) {\n      throw new SolrException (ErrorCode.BAD_REQUEST, \n          FacetParams.FACET_EXISTS + \"=true is requested, but \"+\n          FacetParams.FACET_METHOD+\"=\"+FacetParams.FACET_METHOD_enum+ \" can't be used with \"+fieldName\n      );\n    }\n    return facetMethod;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/request/SimpleFacets#selectFacetMethod(String,SchemaField,FacetMethod,Integer,boolean).mjava","pathOld":"/dev/null","sourceNew":"   /**\n    * @param existsRequested facet.exists=true is passed for the given field\n    * */\n  static FacetMethod selectFacetMethod(String fieldName, \n                                       SchemaField field, FacetMethod method, Integer mincount,\n                                       boolean existsRequested) {\n    if (existsRequested) {\n      checkMincountOnExists(fieldName, mincount);\n      if (method == null) {\n        method = FacetMethod.ENUM;\n      }\n    }\n    final FacetMethod facetMethod = selectFacetMethod(field, method, mincount);\n    \n    if (existsRequested && facetMethod!=FacetMethod.ENUM) {\n      throw new SolrException (ErrorCode.BAD_REQUEST, \n          FacetParams.FACET_EXISTS + \"=true is requested, but \"+\n          FacetParams.FACET_METHOD+\"=\"+FacetParams.FACET_METHOD_enum+ \" can't be used with \"+fieldName\n      );\n    }\n    return facetMethod;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/request/SimpleFacets#selectFacetMethod(String,SchemaField,FacetMethod,Integer,boolean).mjava","pathOld":"/dev/null","sourceNew":"   /**\n    * @param existsRequested facet.exists=true is passed for the given field\n    * */\n  static FacetMethod selectFacetMethod(String fieldName, \n                                       SchemaField field, FacetMethod method, Integer mincount,\n                                       boolean existsRequested) {\n    if (existsRequested) {\n      checkMincountOnExists(fieldName, mincount);\n      if (method == null) {\n        method = FacetMethod.ENUM;\n      }\n    }\n    final FacetMethod facetMethod = selectFacetMethod(field, method, mincount);\n    \n    if (existsRequested && facetMethod!=FacetMethod.ENUM) {\n      throw new SolrException (ErrorCode.BAD_REQUEST, \n          FacetParams.FACET_EXISTS + \"=true is requested, but \"+\n          FacetParams.FACET_METHOD+\"=\"+FacetParams.FACET_METHOD_enum+ \" can't be used with \"+fieldName\n      );\n    }\n    return facetMethod;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","89424def13674ea17829b41c5883c54ecc31a132"],"bc8f206328a706450934717bec7ccc22ad166fc0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","39342cb658ac11dfcbf4459807fb00eb9ada0218"],"39342cb658ac11dfcbf4459807fb00eb9ada0218":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"89424def13674ea17829b41c5883c54ecc31a132":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bc8f206328a706450934717bec7ccc22ad166fc0"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","bc8f206328a706450934717bec7ccc22ad166fc0","39342cb658ac11dfcbf4459807fb00eb9ada0218","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","89424def13674ea17829b41c5883c54ecc31a132"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bc8f206328a706450934717bec7ccc22ad166fc0":["89424def13674ea17829b41c5883c54ecc31a132"],"39342cb658ac11dfcbf4459807fb00eb9ada0218":["bc8f206328a706450934717bec7ccc22ad166fc0"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"89424def13674ea17829b41c5883c54ecc31a132":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}