{"path":"solr/core/src/java/org/apache/solr/util/SolrCLI.ConfigSetDownloadTool#downconfig(CloudSolrClient,String,String).mjava","commits":[{"id":"688f23c47b3d5b61d795e3042013aa908716c068","date":1449761553,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.ConfigSetDownloadTool#downconfig(CloudSolrClient,String,String).mjava","pathOld":"/dev/null","sourceNew":"    protected void downconfig(CloudSolrClient cloudSolrClient, String confname, String confdir) throws IOException {\n\n      Path configSetPath = Paths.get(confdir);\n      // we try to be nice about having the \"conf\" in the directory, and we create it if it's not there.\n      if (configSetPath.endsWith(\"/conf\") == false) {\n        configSetPath = Paths.get(configSetPath.toString(), \"conf\");\n      }\n      if (Files.exists(configSetPath) == false) {\n        Files.createDirectories(configSetPath);\n      }\n\n      // Try to download the configset\n      echo(\"Downloading configset \" + confname + \" from ZooKeeper at \" + cloudSolrClient.getZkHost() +\n          \" to directory \" + configSetPath.toAbsolutePath());\n      cloudSolrClient.downloadConfig(confname, configSetPath);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9272a617a9cbebf86be127014bbbacd7cf8f8e83","date":1467480344,"type":4,"author":"Erick","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.ConfigSetDownloadTool#downconfig(CloudSolrClient,String,String).mjava","sourceNew":null,"sourceOld":"    protected void downconfig(CloudSolrClient cloudSolrClient, String confname, String confdir) throws IOException {\n\n      Path configSetPath = Paths.get(confdir);\n      // we try to be nice about having the \"conf\" in the directory, and we create it if it's not there.\n      if (configSetPath.endsWith(\"/conf\") == false) {\n        configSetPath = Paths.get(configSetPath.toString(), \"conf\");\n      }\n      if (Files.exists(configSetPath) == false) {\n        Files.createDirectories(configSetPath);\n      }\n\n      // Try to download the configset\n      echo(\"Downloading configset \" + confname + \" from ZooKeeper at \" + cloudSolrClient.getZkHost() +\n          \" to directory \" + configSetPath.toAbsolutePath());\n      cloudSolrClient.downloadConfig(confname, configSetPath);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.ConfigSetDownloadTool#downconfig(CloudSolrClient,String,String).mjava","sourceNew":null,"sourceOld":"    protected void downconfig(CloudSolrClient cloudSolrClient, String confname, String confdir) throws IOException {\n\n      Path configSetPath = Paths.get(confdir);\n      // we try to be nice about having the \"conf\" in the directory, and we create it if it's not there.\n      if (configSetPath.endsWith(\"/conf\") == false) {\n        configSetPath = Paths.get(configSetPath.toString(), \"conf\");\n      }\n      if (Files.exists(configSetPath) == false) {\n        Files.createDirectories(configSetPath);\n      }\n\n      // Try to download the configset\n      echo(\"Downloading configset \" + confname + \" from ZooKeeper at \" + cloudSolrClient.getZkHost() +\n          \" to directory \" + configSetPath.toAbsolutePath());\n      cloudSolrClient.downloadConfig(confname, configSetPath);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"688f23c47b3d5b61d795e3042013aa908716c068":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9272a617a9cbebf86be127014bbbacd7cf8f8e83":["688f23c47b3d5b61d795e3042013aa908716c068"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["688f23c47b3d5b61d795e3042013aa908716c068","9272a617a9cbebf86be127014bbbacd7cf8f8e83"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9272a617a9cbebf86be127014bbbacd7cf8f8e83"]},"commit2Childs":{"688f23c47b3d5b61d795e3042013aa908716c068":["9272a617a9cbebf86be127014bbbacd7cf8f8e83","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["688f23c47b3d5b61d795e3042013aa908716c068"],"9272a617a9cbebf86be127014bbbacd7cf8f8e83":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}