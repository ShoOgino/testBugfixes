{"path":"solr/core/src/java/org/apache/solr/parser/QueryParser#newFieldQuery(Analyzer,String,String,boolean,boolean,boolean,SynonymQueryStyle).mjava","commits":[{"id":"47d74fab5d64854ddafa81b65ed399b192f2d947","date":1512411916,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/parser/QueryParser#newFieldQuery(Analyzer,String,String,boolean,boolean,boolean,SynonymQueryStyle).mjava","pathOld":"solr/core/src/java/org/apache/solr/parser/QueryParser#newFieldQuery(Analyzer,String,String,boolean,boolean,boolean).mjava","sourceNew":"  @Override\n  protected Query newFieldQuery(Analyzer analyzer, String field, String queryText,\n                                boolean quoted, boolean fieldAutoGenPhraseQueries, boolean fieldEnableGraphQueries,\n                                SynonymQueryStyle synonymQueryStyle)\n      throws SyntaxError {\n    setAutoGenerateMultiTermSynonymsPhraseQuery(fieldAutoGenPhraseQueries || getAutoGeneratePhraseQueries());\n    // Don't auto-quote graph-aware field queries \n    boolean treatAsQuoted = getSplitOnWhitespace()\n        ? (quoted || fieldAutoGenPhraseQueries || getAutoGeneratePhraseQueries()) : quoted;\n    return super.newFieldQuery(analyzer, field, queryText, treatAsQuoted, false, fieldEnableGraphQueries, synonymQueryStyle);\n  }\n\n","sourceOld":"  @Override\n  protected Query newFieldQuery(Analyzer analyzer, String field, String queryText,\n                                boolean quoted, boolean fieldAutoGenPhraseQueries, boolean fieldEnableGraphQueries)\n      throws SyntaxError {\n    setAutoGenerateMultiTermSynonymsPhraseQuery(fieldAutoGenPhraseQueries || getAutoGeneratePhraseQueries());\n    // Don't auto-quote graph-aware field queries \n    boolean treatAsQuoted = getSplitOnWhitespace()\n        ? (quoted || fieldAutoGenPhraseQueries || getAutoGeneratePhraseQueries()) : quoted;\n    return super.newFieldQuery(analyzer, field, queryText, treatAsQuoted, false, fieldEnableGraphQueries);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"246882bcb7625b4ec0d71abb0d4917d6e34e0ac6","date":1580825798,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/parser/QueryParser#newFieldQuery(Analyzer,String,String,boolean,boolean,boolean,SynonymQueryStyle).mjava","pathOld":"solr/core/src/java/org/apache/solr/parser/QueryParser#newFieldQuery(Analyzer,String,String,boolean,boolean,boolean,SynonymQueryStyle).mjava","sourceNew":"  @Override\n  protected Query newFieldQuery(Analyzer analyzer, String field, String queryText,\n                                boolean quoted, boolean fieldAutoGenPhraseQueries,\n                                boolean fieldEnableGraphQueries,\n                                 SynonymQueryStyle synonymQueryStyle)\n      throws SyntaxError {\n    setAutoGenerateMultiTermSynonymsPhraseQuery(fieldAutoGenPhraseQueries || getAutoGeneratePhraseQueries());\n    // Don't auto-quote graph-aware field queries \n    boolean treatAsQuoted = getSplitOnWhitespace()\n        ? (quoted || fieldAutoGenPhraseQueries || getAutoGeneratePhraseQueries()) : quoted;\n    return super.newFieldQuery(analyzer, field, queryText, treatAsQuoted, false,\n    fieldEnableGraphQueries, synonymQueryStyle);\n  }\n\n","sourceOld":"  @Override\n  protected Query newFieldQuery(Analyzer analyzer, String field, String queryText,\n                                boolean quoted, boolean fieldAutoGenPhraseQueries, boolean fieldEnableGraphQueries,\n                                SynonymQueryStyle synonymQueryStyle)\n      throws SyntaxError {\n    setAutoGenerateMultiTermSynonymsPhraseQuery(fieldAutoGenPhraseQueries || getAutoGeneratePhraseQueries());\n    // Don't auto-quote graph-aware field queries \n    boolean treatAsQuoted = getSplitOnWhitespace()\n        ? (quoted || fieldAutoGenPhraseQueries || getAutoGeneratePhraseQueries()) : quoted;\n    return super.newFieldQuery(analyzer, field, queryText, treatAsQuoted, false, fieldEnableGraphQueries, synonymQueryStyle);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"47d74fab5d64854ddafa81b65ed399b192f2d947":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"246882bcb7625b4ec0d71abb0d4917d6e34e0ac6":["47d74fab5d64854ddafa81b65ed399b192f2d947"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["246882bcb7625b4ec0d71abb0d4917d6e34e0ac6"]},"commit2Childs":{"47d74fab5d64854ddafa81b65ed399b192f2d947":["246882bcb7625b4ec0d71abb0d4917d6e34e0ac6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["47d74fab5d64854ddafa81b65ed399b192f2d947"],"246882bcb7625b4ec0d71abb0d4917d6e34e0ac6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}