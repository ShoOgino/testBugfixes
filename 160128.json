{"path":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimSolrCloudTestCase#assertReplicaInfoEquals(Replica,Replica).mjava","commits":[{"id":"7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd","date":1594731683,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimSolrCloudTestCase#assertReplicaInfoEquals(Replica,Replica).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimSolrCloudTestCase#assertReplicaInfoEquals(ReplicaInfo,ReplicaInfo).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\"})\n  public static void assertReplicaInfoEquals(Replica one, Replica two) {\n    assertEquals(one.getName(), two.getName());\n    assertEquals(one.getNodeName(), two.getNodeName());\n    assertEquals(one.getState(), two.getState());\n    assertEquals(one.getType(), two.getType());\n    assertEquals(one.getCoreName(), two.getCoreName());\n    assertEquals(one.getCollection(), two.getCollection());\n    assertEquals(one.getShard(), two.getShard());\n    assertEquals(one.isLeader(), two.isLeader());\n    Map<String, Object> oneMap = new HashMap<>();\n    Map<String, Object> twoMap = new HashMap<>();\n    one.toMap(oneMap);\n    two.toMap(twoMap);\n    assertReplicaPropsEquals(\n        (Map<String, Object>)oneMap.get(one.getName()),\n        (Map<String, Object>)twoMap.get(two.getName()));\n  }\n\n","sourceOld":"  @SuppressWarnings({\"unchecked\"})\n  public static void assertReplicaInfoEquals(ReplicaInfo one, ReplicaInfo two) {\n    assertEquals(one.getName(), two.getName());\n    assertEquals(one.getNode(), two.getNode());\n    assertEquals(one.getState(), two.getState());\n    assertEquals(one.getType(), two.getType());\n    assertEquals(one.getCore(), two.getCore());\n    assertEquals(one.getCollection(), two.getCollection());\n    assertEquals(one.getShard(), two.getShard());\n    assertEquals(one.isLeader, two.isLeader);\n    Map<String, Object> oneMap = new HashMap<>();\n    Map<String, Object> twoMap = new HashMap<>();\n    one.toMap(oneMap);\n    two.toMap(twoMap);\n    assertReplicaPropsEquals(\n        (Map<String, Object>)oneMap.get(one.getName()),\n        (Map<String, Object>)twoMap.get(two.getName()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimSolrCloudTestCase#assertReplicaInfoEquals(Replica,Replica).mjava","sourceNew":null,"sourceOld":"  @SuppressWarnings({\"unchecked\"})\n  public static void assertReplicaInfoEquals(Replica one, Replica two) {\n    assertEquals(one.getName(), two.getName());\n    assertEquals(one.getNodeName(), two.getNodeName());\n    assertEquals(one.getState(), two.getState());\n    assertEquals(one.getType(), two.getType());\n    assertEquals(one.getCoreName(), two.getCoreName());\n    assertEquals(one.getCollection(), two.getCollection());\n    assertEquals(one.getShard(), two.getShard());\n    assertEquals(one.isLeader(), two.isLeader());\n    Map<String, Object> oneMap = new HashMap<>();\n    Map<String, Object> twoMap = new HashMap<>();\n    one.toMap(oneMap);\n    two.toMap(twoMap);\n    assertReplicaPropsEquals(\n        (Map<String, Object>)oneMap.get(one.getName()),\n        (Map<String, Object>)twoMap.get(two.getName()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3f504512a03d978990cbff30db0522b354e846db":["7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd":["3f504512a03d978990cbff30db0522b354e846db"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}