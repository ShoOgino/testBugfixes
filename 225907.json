{"path":"solr/core/src/java/org/apache/solr/response/ResponseWriterUtil#toSolrDocument(StoredDocument,IndexSchema).mjava","commits":[{"id":"9a862f08ffeb00b03b4c641de86b167b1d6f7cd1","date":1402094642,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/ResponseWriterUtil#toSolrDocument(StoredDocument,IndexSchema).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Utility method for converting a {@link StoredDocument} from the index into a \n   * {@link SolrDocument} suitable for inclusion in a {@link SolrQueryResponse}\n   */\n  public static final SolrDocument toSolrDocument( StoredDocument doc, final IndexSchema schema ) {\n    SolrDocument out = new SolrDocument();\n    for( StorableField f : doc.getFields()) {\n      // Make sure multivalued fields are represented as lists\n      Object existing = out.get(f.name());\n      if (existing == null) {\n        SchemaField sf = schema.getFieldOrNull(f.name());\n        if (sf != null && sf.multiValued()) {\n          List<Object> vals = new ArrayList<>();\n          vals.add( f );\n          out.setField( f.name(), vals );\n        }\n        else{\n          out.setField( f.name(), f );\n        }\n      }\n      else {\n        out.addField( f.name(), f );\n      }\n    }\n    return out;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b263a3dc926f93ae0dadfc542cdcaa2f8c5a95c9","date":1434467834,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/DocsStreamer#getDoc(StoredDocument,IndexSchema).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/ResponseWriterUtil#toSolrDocument(StoredDocument,IndexSchema).mjava","sourceNew":"  public static SolrDocument getDoc(StoredDocument doc, final IndexSchema schema) {\n    SolrDocument out = new SolrDocument();\n    for (StorableField f : doc.getFields()) {\n      // Make sure multivalued fields are represented as lists\n      Object existing = out.get(f.name());\n      if (existing == null) {\n        SchemaField sf = schema.getFieldOrNull(f.name());\n        if (sf != null && sf.multiValued()) {\n          List<Object> vals = new ArrayList<>();\n          vals.add(f);\n          out.setField(f.name(), vals);\n        } else {\n          out.setField(f.name(), f);\n        }\n      } else {\n        out.addField(f.name(), f);\n      }\n    }\n    return out;\n  }\n\n","sourceOld":"  /**\n   * Utility method for converting a {@link StoredDocument} from the index into a \n   * {@link SolrDocument} suitable for inclusion in a {@link SolrQueryResponse}\n   */\n  public static final SolrDocument toSolrDocument( StoredDocument doc, final IndexSchema schema ) {\n    SolrDocument out = new SolrDocument();\n    for( StorableField f : doc.getFields()) {\n      // Make sure multivalued fields are represented as lists\n      Object existing = out.get(f.name());\n      if (existing == null) {\n        SchemaField sf = schema.getFieldOrNull(f.name());\n        if (sf != null && sf.multiValued()) {\n          List<Object> vals = new ArrayList<>();\n          vals.add( f );\n          out.setField( f.name(), vals );\n        }\n        else{\n          out.setField( f.name(), f );\n        }\n      }\n      else {\n        out.addField( f.name(), f );\n      }\n    }\n    return out;\n  }\n\n","bugFix":null,"bugIntro":["b5d3613911d665344055ef7970e1783b3348b5c0","b5d3613911d665344055ef7970e1783b3348b5c0"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9a862f08ffeb00b03b4c641de86b167b1d6f7cd1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b263a3dc926f93ae0dadfc542cdcaa2f8c5a95c9":["9a862f08ffeb00b03b4c641de86b167b1d6f7cd1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b263a3dc926f93ae0dadfc542cdcaa2f8c5a95c9"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9a862f08ffeb00b03b4c641de86b167b1d6f7cd1"],"9a862f08ffeb00b03b4c641de86b167b1d6f7cd1":["b263a3dc926f93ae0dadfc542cdcaa2f8c5a95c9"],"b263a3dc926f93ae0dadfc542cdcaa2f8c5a95c9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}