{"path":"solr/core/src/java/org/apache/solr/cloud/api/collections/RoutedAlias#createCollectionsIfRequired(AddUpdateCommand).mjava","commits":[{"id":"b627755385655c7cd3fb296f17593658805cf4d5","date":1552455143,"type":0,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/RoutedAlias#createCollectionsIfRequired(AddUpdateCommand).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create any required collections and return the name of the collection to which the current document should be sent.\n   *\n   * @param cmd The command that might cause collection creation\n   * @return The name of the proper destination collection for the document which may or may not be a\n   * newly created collection\n   */\n  String createCollectionsIfRequired(AddUpdateCommand cmd);\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1eebf1b080530bdd7572c4927fb2bb52334b7a86","date":1563199033,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/RoutedAlias#createCollectionsIfRequired(AddUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/api/collections/RoutedAlias#createCollectionsIfRequired(AddUpdateCommand).mjava","sourceNew":"  /**\n   * Create any required collections and return the name of the collection to which the current document should be sent.\n   *\n   * @param cmd The command that might cause collection creation\n   * @return The name of the proper destination collection for the document which may or may not be a\n   * newly created collection\n   */\n  public String createCollectionsIfRequired(AddUpdateCommand cmd) {\n\n    // Even though it is possible that multiple requests hit this code in the 1-2 sec that\n    // it takes to create a collection, it's an established anti-pattern to feed data with a very large number\n    // of client connections. This in mind, we only guard against spamming the overseer within a batch of\n    // updates. We are intentionally tolerating a low level of redundant requests in favor of simpler code. Most\n    // super-sized installations with many update clients will likely be multi-tenant and multiple tenants\n    // probably don't write to the same alias. As such, we have deferred any solution to the \"many clients causing\n    // collection creation simultaneously\" problem until such time as someone actually has that problem in a\n    // real world use case that isn't just an anti-pattern.\n    CandidateCollection candidateCollectionDesc = findCandidateGivenValue(cmd);\n\n    try {\n      // It's important not to add code between here and the prior call to findCandidateGivenValue()\n      // in processAdd() that invokes updateParsedCollectionAliases(). Doing so would update parsedCollectionsDesc\n      // and create a race condition. When Routed aliases have an implicit sort for their collections we\n      // are relying on the fact that collectionList.get(0) is returning the head of the parsed collections that\n      // existed when the collection list was consulted for the candidate value. If this class updates it's notion\n      // of the list of collections since candidateCollectionDesc was chosen, we could create collection n+2\n      // instead of collection n+1.\n      return createAllRequiredCollections( cmd, candidateCollectionDesc);\n    } catch (SolrException e) {\n      throw e;\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":"  /**\n   * Create any required collections and return the name of the collection to which the current document should be sent.\n   *\n   * @param cmd The command that might cause collection creation\n   * @return The name of the proper destination collection for the document which may or may not be a\n   * newly created collection\n   */\n  String createCollectionsIfRequired(AddUpdateCommand cmd);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b627755385655c7cd3fb296f17593658805cf4d5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1eebf1b080530bdd7572c4927fb2bb52334b7a86":["b627755385655c7cd3fb296f17593658805cf4d5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1eebf1b080530bdd7572c4927fb2bb52334b7a86"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b627755385655c7cd3fb296f17593658805cf4d5"],"b627755385655c7cd3fb296f17593658805cf4d5":["1eebf1b080530bdd7572c4927fb2bb52334b7a86"],"1eebf1b080530bdd7572c4927fb2bb52334b7a86":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}