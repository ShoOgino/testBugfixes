{"path":"lucene/facet/src/java/org/apache/lucene/facet/simple/FacetIndexWriter#processAssocFacetFields(Map[String,List[AssociationFacetField]],List[Field],List[Field]).mjava","commits":[{"id":"a1e7272ef767c1304198a2cb2000cf54ea49f808","date":1384786433,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/FacetIndexWriter#processAssocFacetFields(Map[String,List[AssociationFacetField]],List[Field],List[Field]).mjava","pathOld":"/dev/null","sourceNew":"  private void processAssocFacetFields(Map<String,List<AssociationFacetField>> byField, List<Field> addedIndexedFields, List<Field> addedStoredFields) throws IOException {\n    for(Map.Entry<String,List<AssociationFacetField>> ent : byField.entrySet()) {\n      byte[] bytes = new byte[16];\n      int upto = 0;\n      String indexedFieldName = ent.getKey();\n      for(AssociationFacetField field : ent.getValue()) {\n        // NOTE: we don't add parents for associations\n        // nocommit is that right?  maybe we are supposed to\n        // add to taxo writer, and just not index the parent\n        // ords?\n        int ordinal = taxoWriter.addCategory(FacetLabel.create(field.dim, field.path));\n        if (upto + 4 > bytes.length) {\n          bytes = ArrayUtil.grow(bytes, upto+4);\n        }\n        // big-endian:\n        bytes[upto++] = (byte) (ordinal >> 24);\n        bytes[upto++] = (byte) (ordinal >> 16);\n        bytes[upto++] = (byte) (ordinal >> 8);\n        bytes[upto++] = (byte) ordinal;\n        if (upto + field.assoc.length > bytes.length) {\n          bytes = ArrayUtil.grow(bytes, upto+field.assoc.length);\n        }\n        System.arraycopy(field.assoc.bytes, field.assoc.offset, bytes, upto, field.assoc.length);\n        upto += field.assoc.length;\n      }\n      addedStoredFields.add(new BinaryDocValuesField(indexedFieldName, new BytesRef(bytes, 0, upto)));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"18edd2e3f5560087a37442fa424cbbed7c295ebc","date":1384813900,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/FacetIndexWriter#processAssocFacetFields(Map[String,List[AssociationFacetField]],List[Field],List[Field]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/FacetIndexWriter#processAssocFacetFields(Map[String,List[AssociationFacetField]],List[Field],List[Field]).mjava","sourceNew":"  private void processAssocFacetFields(Map<String,List<AssociationFacetField>> byField, List<Field> addedIndexedFields, List<Field> addedStoredFields) throws IOException {\n    for(Map.Entry<String,List<AssociationFacetField>> ent : byField.entrySet()) {\n      byte[] bytes = new byte[16];\n      int upto = 0;\n      String indexFieldName = ent.getKey();\n      for(AssociationFacetField field : ent.getValue()) {\n        // NOTE: we don't add parents for associations\n        // nocommit is that right?  maybe we are supposed to\n        // add to taxo writer, and just not index the parent\n        // ords?\n        int ordinal = taxoWriter.addCategory(FacetLabel.create(field.dim, field.path));\n        if (upto + 4 > bytes.length) {\n          bytes = ArrayUtil.grow(bytes, upto+4);\n        }\n        // big-endian:\n        bytes[upto++] = (byte) (ordinal >> 24);\n        bytes[upto++] = (byte) (ordinal >> 16);\n        bytes[upto++] = (byte) (ordinal >> 8);\n        bytes[upto++] = (byte) ordinal;\n        if (upto + field.assoc.length > bytes.length) {\n          bytes = ArrayUtil.grow(bytes, upto+field.assoc.length);\n        }\n        System.arraycopy(field.assoc.bytes, field.assoc.offset, bytes, upto, field.assoc.length);\n        upto += field.assoc.length;\n      }\n      addedStoredFields.add(new BinaryDocValuesField(indexFieldName, new BytesRef(bytes, 0, upto)));\n    }\n  }\n\n","sourceOld":"  private void processAssocFacetFields(Map<String,List<AssociationFacetField>> byField, List<Field> addedIndexedFields, List<Field> addedStoredFields) throws IOException {\n    for(Map.Entry<String,List<AssociationFacetField>> ent : byField.entrySet()) {\n      byte[] bytes = new byte[16];\n      int upto = 0;\n      String indexedFieldName = ent.getKey();\n      for(AssociationFacetField field : ent.getValue()) {\n        // NOTE: we don't add parents for associations\n        // nocommit is that right?  maybe we are supposed to\n        // add to taxo writer, and just not index the parent\n        // ords?\n        int ordinal = taxoWriter.addCategory(FacetLabel.create(field.dim, field.path));\n        if (upto + 4 > bytes.length) {\n          bytes = ArrayUtil.grow(bytes, upto+4);\n        }\n        // big-endian:\n        bytes[upto++] = (byte) (ordinal >> 24);\n        bytes[upto++] = (byte) (ordinal >> 16);\n        bytes[upto++] = (byte) (ordinal >> 8);\n        bytes[upto++] = (byte) ordinal;\n        if (upto + field.assoc.length > bytes.length) {\n          bytes = ArrayUtil.grow(bytes, upto+field.assoc.length);\n        }\n        System.arraycopy(field.assoc.bytes, field.assoc.offset, bytes, upto, field.assoc.length);\n        upto += field.assoc.length;\n      }\n      addedStoredFields.add(new BinaryDocValuesField(indexedFieldName, new BytesRef(bytes, 0, upto)));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7554009c97f9365492660c1df175b6349f7ec05c","date":1384886154,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/DocumentBuilder#processAssocFacetFields(Map[String,List[AssociationFacetField]],List[Field],List[Field]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/FacetIndexWriter#processAssocFacetFields(Map[String,List[AssociationFacetField]],List[Field],List[Field]).mjava","sourceNew":"  private void processAssocFacetFields(Map<String,List<AssociationFacetField>> byField, List<Field> addedIndexedFields, List<Field> addedStoredFields) throws IOException {\n    for(Map.Entry<String,List<AssociationFacetField>> ent : byField.entrySet()) {\n      byte[] bytes = new byte[16];\n      int upto = 0;\n      String indexFieldName = ent.getKey();\n      for(AssociationFacetField field : ent.getValue()) {\n        // NOTE: we don't add parents for associations\n        // nocommit is that right?  maybe we are supposed to\n        // add to taxo writer, and just not index the parent\n        // ords?\n        int ordinal = taxoWriter.addCategory(FacetLabel.create(field.dim, field.path));\n        if (upto + 4 > bytes.length) {\n          bytes = ArrayUtil.grow(bytes, upto+4);\n        }\n        // big-endian:\n        bytes[upto++] = (byte) (ordinal >> 24);\n        bytes[upto++] = (byte) (ordinal >> 16);\n        bytes[upto++] = (byte) (ordinal >> 8);\n        bytes[upto++] = (byte) ordinal;\n        if (upto + field.assoc.length > bytes.length) {\n          bytes = ArrayUtil.grow(bytes, upto+field.assoc.length);\n        }\n        System.arraycopy(field.assoc.bytes, field.assoc.offset, bytes, upto, field.assoc.length);\n        upto += field.assoc.length;\n      }\n      addedStoredFields.add(new BinaryDocValuesField(indexFieldName, new BytesRef(bytes, 0, upto)));\n    }\n  }\n\n","sourceOld":"  private void processAssocFacetFields(Map<String,List<AssociationFacetField>> byField, List<Field> addedIndexedFields, List<Field> addedStoredFields) throws IOException {\n    for(Map.Entry<String,List<AssociationFacetField>> ent : byField.entrySet()) {\n      byte[] bytes = new byte[16];\n      int upto = 0;\n      String indexFieldName = ent.getKey();\n      for(AssociationFacetField field : ent.getValue()) {\n        // NOTE: we don't add parents for associations\n        // nocommit is that right?  maybe we are supposed to\n        // add to taxo writer, and just not index the parent\n        // ords?\n        int ordinal = taxoWriter.addCategory(FacetLabel.create(field.dim, field.path));\n        if (upto + 4 > bytes.length) {\n          bytes = ArrayUtil.grow(bytes, upto+4);\n        }\n        // big-endian:\n        bytes[upto++] = (byte) (ordinal >> 24);\n        bytes[upto++] = (byte) (ordinal >> 16);\n        bytes[upto++] = (byte) (ordinal >> 8);\n        bytes[upto++] = (byte) ordinal;\n        if (upto + field.assoc.length > bytes.length) {\n          bytes = ArrayUtil.grow(bytes, upto+field.assoc.length);\n        }\n        System.arraycopy(field.assoc.bytes, field.assoc.offset, bytes, upto, field.assoc.length);\n        upto += field.assoc.length;\n      }\n      addedStoredFields.add(new BinaryDocValuesField(indexFieldName, new BytesRef(bytes, 0, upto)));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7554009c97f9365492660c1df175b6349f7ec05c":["18edd2e3f5560087a37442fa424cbbed7c295ebc"],"a1e7272ef767c1304198a2cb2000cf54ea49f808":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"18edd2e3f5560087a37442fa424cbbed7c295ebc":["a1e7272ef767c1304198a2cb2000cf54ea49f808"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7554009c97f9365492660c1df175b6349f7ec05c":[],"a1e7272ef767c1304198a2cb2000cf54ea49f808":["18edd2e3f5560087a37442fa424cbbed7c295ebc"],"18edd2e3f5560087a37442fa424cbbed7c295ebc":["7554009c97f9365492660c1df175b6349f7ec05c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a1e7272ef767c1304198a2cb2000cf54ea49f808","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7554009c97f9365492660c1df175b6349f7ec05c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}