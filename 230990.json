{"path":"contrib/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#algLinesToText(String[]).mjava","commits":[{"id":"975cb787e66d548dba4f63c22c08d692c7235f73","date":1174605228,"type":0,"author":"Doron Cohen","isMerge":false,"pathNew":"contrib/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#algLinesToText(String[]).mjava","pathOld":"/dev/null","sourceNew":"  // catenate alg lines to make the alg text\n  private String algLinesToText(String[] algLines) {\n    String indent = \"  \";\n    StringBuffer sb = new StringBuffer();\n    for (int i = 0; i < propLines.length; i++) {\n      sb.append(indent).append(propLines[i]).append(NEW_LINE);\n    }\n    for (int i = 0; i < algLines.length; i++) {\n      sb.append(indent).append(algLines[i]).append(NEW_LINE);\n    }\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df2d68685a69bd82bf79243e28623c0775eb7bd8","date":1185567892,"type":3,"author":"Doron Cohen","isMerge":false,"pathNew":"contrib/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#algLinesToText(String[]).mjava","pathOld":"contrib/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#algLinesToText(String[]).mjava","sourceNew":"  // catenate alg lines to make the alg text\n  private static String algLinesToText(String[] algLines) {\n    String indent = \"  \";\n    StringBuffer sb = new StringBuffer();\n    for (int i = 0; i < propLines.length; i++) {\n      sb.append(indent).append(propLines[i]).append(NEW_LINE);\n    }\n    for (int i = 0; i < algLines.length; i++) {\n      sb.append(indent).append(algLines[i]).append(NEW_LINE);\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  // catenate alg lines to make the alg text\n  private String algLinesToText(String[] algLines) {\n    String indent = \"  \";\n    StringBuffer sb = new StringBuffer();\n    for (int i = 0; i < propLines.length; i++) {\n      sb.append(indent).append(propLines[i]).append(NEW_LINE);\n    }\n    for (int i = 0; i < algLines.length; i++) {\n      sb.append(indent).append(algLines[i]).append(NEW_LINE);\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#algLinesToText(String[]).mjava","pathOld":"contrib/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#algLinesToText(String[]).mjava","sourceNew":"  // catenate alg lines to make the alg text\n  private static String algLinesToText(String[] algLines) {\n    String indent = \"  \";\n    StringBuffer sb = new StringBuffer();\n    for (int i = 0; i < propLines.length; i++) {\n      sb.append(indent).append(propLines[i]).append(NEW_LINE);\n    }\n    for (int i = 0; i < algLines.length; i++) {\n      sb.append(indent).append(algLines[i]).append(NEW_LINE);\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  // catenate alg lines to make the alg text\n  private static String algLinesToText(String[] algLines) {\n    String indent = \"  \";\n    StringBuffer sb = new StringBuffer();\n    for (int i = 0; i < propLines.length; i++) {\n      sb.append(indent).append(propLines[i]).append(NEW_LINE);\n    }\n    for (int i = 0; i < algLines.length; i++) {\n      sb.append(indent).append(algLines[i]).append(NEW_LINE);\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"975cb787e66d548dba4f63c22c08d692c7235f73":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"df2d68685a69bd82bf79243e28623c0775eb7bd8":["975cb787e66d548dba4f63c22c08d692c7235f73"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["df2d68685a69bd82bf79243e28623c0775eb7bd8"]},"commit2Childs":{"975cb787e66d548dba4f63c22c08d692c7235f73":["df2d68685a69bd82bf79243e28623c0775eb7bd8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["975cb787e66d548dba4f63c22c08d692c7235f73"],"df2d68685a69bd82bf79243e28623c0775eb7bd8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}