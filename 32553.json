{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/no/NorwegianLightStemFilterFactory#NorwegianLightStemFilterFactory(Map[String,String]).mjava","commits":[{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/no/NorwegianLightStemFilterFactory#NorwegianLightStemFilterFactory(Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  /** Creates a new NorwegianLightStemFilterFactory */\n  public NorwegianLightStemFilterFactory(Map<String,String> args) {\n    super(args);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fb2596a1dcedacf5c843ed19f93ce2113f071dc","date":1372346925,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/no/NorwegianLightStemFilterFactory#NorwegianLightStemFilterFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/no/NorwegianLightStemFilterFactory#NorwegianLightStemFilterFactory(Map[String,String]).mjava","sourceNew":"  /** Creates a new NorwegianLightStemFilterFactory */\n  public NorwegianLightStemFilterFactory(Map<String,String> args) {\n    super(args);\n    String variant = get(args, \"variant\");\n    if (variant == null || \"nb\".equals(variant)) {\n      flags = BOKMAAL;\n    } else if (\"nn\".equals(variant)) {\n      flags = NYNORSK;\n    } else if (\"no\".equals(variant)) {\n      flags = BOKMAAL | NYNORSK;\n    } else {\n      throw new IllegalArgumentException(\"invalid variant: \" + variant);\n    }\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":"  /** Creates a new NorwegianLightStemFilterFactory */\n  public NorwegianLightStemFilterFactory(Map<String,String> args) {\n    super(args);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/no/NorwegianLightStemFilterFactory#NorwegianLightStemFilterFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/no/NorwegianLightStemFilterFactory#NorwegianLightStemFilterFactory(Map[String,String]).mjava","sourceNew":"  /** Creates a new NorwegianLightStemFilterFactory */\n  public NorwegianLightStemFilterFactory(Map<String,String> args) {\n    super(args);\n    String variant = get(args, \"variant\");\n    if (variant == null || \"nb\".equals(variant)) {\n      flags = BOKMAAL;\n    } else if (\"nn\".equals(variant)) {\n      flags = NYNORSK;\n    } else if (\"no\".equals(variant)) {\n      flags = BOKMAAL | NYNORSK;\n    } else {\n      throw new IllegalArgumentException(\"invalid variant: \" + variant);\n    }\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":"  /** Creates a new NorwegianLightStemFilterFactory */\n  public NorwegianLightStemFilterFactory(Map<String,String> args) {\n    super(args);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd","9fb2596a1dcedacf5c843ed19f93ce2113f071dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9fb2596a1dcedacf5c843ed19f93ce2113f071dc":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9fb2596a1dcedacf5c843ed19f93ce2113f071dc"]},"commit2Childs":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["37a0f60745e53927c4c876cfe5b5a58170f0646c","9fb2596a1dcedacf5c843ed19f93ce2113f071dc"],"9fb2596a1dcedacf5c843ed19f93ce2113f071dc":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}