{"path":"src/java/org/apache/lucene/search/spans/SpanOrQuery#equals(Object).mjava","commits":[{"id":"7906c5abe56bd9dcad466e5035e40b9b6a4bda81","date":1124639142,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/spans/SpanOrQuery#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    final SpanOrQuery that = (SpanOrQuery) o;\n\n    if (!clauses.equals(that.clauses)) return false;\n    if (!field.equals(that.field)) return false;\n\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["403276476fcb5face94d280a9d9a54cd9e5771c8"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"df8dadf22de84eeb1294e70792e292ecf8ded564","date":1130577981,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/spans/SpanOrQuery#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/search/spans/SpanOrQuery#equals(Object).mjava","sourceNew":"  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    final SpanOrQuery that = (SpanOrQuery) o;\n\n    if (!clauses.equals(that.clauses)) return false;\n    if (!field.equals(that.field)) return false;\n\n    return getBoost() == that.getBoost();\n  }\n\n","sourceOld":"  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    final SpanOrQuery that = (SpanOrQuery) o;\n\n    if (!clauses.equals(that.clauses)) return false;\n    if (!field.equals(that.field)) return false;\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"403276476fcb5face94d280a9d9a54cd9e5771c8","date":1236174606,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/spans/SpanOrQuery#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/search/spans/SpanOrQuery#equals(Object).mjava","sourceNew":"  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    final SpanOrQuery that = (SpanOrQuery) o;\n\n    if (!clauses.equals(that.clauses)) return false;\n    if (!clauses.isEmpty() && !field.equals(that.field)) return false;\n\n    return getBoost() == that.getBoost();\n  }\n\n","sourceOld":"  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    final SpanOrQuery that = (SpanOrQuery) o;\n\n    if (!clauses.equals(that.clauses)) return false;\n    if (!field.equals(that.field)) return false;\n\n    return getBoost() == that.getBoost();\n  }\n\n","bugFix":["7906c5abe56bd9dcad466e5035e40b9b6a4bda81"],"bugIntro":["15b2c0b1d50ad54ea367036e4bd9376be42c2805"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/spans/SpanOrQuery#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/search/spans/SpanOrQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    final SpanOrQuery that = (SpanOrQuery) o;\n\n    if (!clauses.equals(that.clauses)) return false;\n    if (!clauses.isEmpty() && !field.equals(that.field)) return false;\n\n    return getBoost() == that.getBoost();\n  }\n\n","sourceOld":"  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    final SpanOrQuery that = (SpanOrQuery) o;\n\n    if (!clauses.equals(that.clauses)) return false;\n    if (!clauses.isEmpty() && !field.equals(that.field)) return false;\n\n    return getBoost() == that.getBoost();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/spans/SpanOrQuery#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/search/spans/SpanOrQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    final SpanOrQuery that = (SpanOrQuery) o;\n\n    if (!clauses.equals(that.clauses)) return false;\n    if (!clauses.isEmpty() && !field.equals(that.field)) return false;\n\n    return getBoost() == that.getBoost();\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    final SpanOrQuery that = (SpanOrQuery) o;\n\n    if (!clauses.equals(that.clauses)) return false;\n    if (!clauses.isEmpty() && !field.equals(that.field)) return false;\n\n    return getBoost() == that.getBoost();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"df8dadf22de84eeb1294e70792e292ecf8ded564":["7906c5abe56bd9dcad466e5035e40b9b6a4bda81"],"8a9e385641d717e641408d8fbbc62be8fc766357":["403276476fcb5face94d280a9d9a54cd9e5771c8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7906c5abe56bd9dcad466e5035e40b9b6a4bda81":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"403276476fcb5face94d280a9d9a54cd9e5771c8":["df8dadf22de84eeb1294e70792e292ecf8ded564"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"]},"commit2Childs":{"df8dadf22de84eeb1294e70792e292ecf8ded564":["403276476fcb5face94d280a9d9a54cd9e5771c8"],"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7906c5abe56bd9dcad466e5035e40b9b6a4bda81"],"7906c5abe56bd9dcad466e5035e40b9b6a4bda81":["df8dadf22de84eeb1294e70792e292ecf8ded564"],"403276476fcb5face94d280a9d9a54cd9e5771c8":["8a9e385641d717e641408d8fbbc62be8fc766357"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}