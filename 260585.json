{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ContentItemsSource#collectFiles(Path,ArrayList[Path]).mjava","commits":[{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ContentItemsSource#collectFiles(Path,ArrayList[Path]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * A convenience method for collecting all the files of a content source from\n   * a given directory. The collected {@link Path} instances are stored in the\n   * given <code>files</code>.\n   */\n  protected final void collectFiles(Path dir, final ArrayList<Path> files) throws IOException {\n    Files.walkFileTree(dir, new SimpleFileVisitor<Path>() {\n      @Override\n      public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException {\n        if (Files.isReadable(file)) {\n          files.add(file.toRealPath());\n        }\n        return FileVisitResult.CONTINUE;\n      }\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f4abec28b874149a7223e32cc7a01704c27790de":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f4abec28b874149a7223e32cc7a01704c27790de"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f4abec28b874149a7223e32cc7a01704c27790de"],"f4abec28b874149a7223e32cc7a01704c27790de":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}