{"path":"lucene/core/src/test/org/apache/lucene/search/TestTermQueryPostings#testTermQueryPayloads().mjava","commits":[{"id":"954e59be3da8dc1b046646ad7af4b466852009d3","date":1423482367,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTermQueryPostings#testTermQueryPayloads().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testTermQueryPayloads() throws Exception {\n\n    PayloadHelper helper = new PayloadHelper();\n    IndexSearcher searcher = helper.setUp(random(), new DefaultSimilarity(), 1000);\n\n    TermQuery tq = new TermQuery(new Term(PayloadHelper.FIELD, \"seventy\"));\n    Weight weight = searcher.createNormalizedWeight(tq, PostingsEnum.FLAG_PAYLOADS);\n\n    for (LeafReaderContext ctx : searcher.leafContexts) {\n      Scorer scorer = weight.scorer(ctx, null);\n      if (scorer.nextDoc() == DocIdSetIterator.NO_MORE_DOCS)\n        continue;\n      scorer.nextPosition();\n      BytesRef payload = scorer.getPayload();\n      assertEquals(payload.length, 1);\n    }\n\n    helper.tearDown();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a47d642ab24da1a811adce4bda9cc52c520ca13","date":1423483323,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTermQueryPostings#testTermQueryPayloads().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testTermQueryPayloads() throws Exception {\n\n    PayloadHelper helper = new PayloadHelper();\n    IndexSearcher searcher = helper.setUp(random(), new DefaultSimilarity(), 1000);\n\n    TermQuery tq = new TermQuery(new Term(PayloadHelper.FIELD, \"seventy\"));\n    Weight weight = searcher.createNormalizedWeight(tq, PostingsEnum.FLAG_PAYLOADS);\n\n    for (LeafReaderContext ctx : searcher.leafContexts) {\n      Scorer scorer = weight.scorer(ctx, null);\n      if (scorer.nextDoc() == DocIdSetIterator.NO_MORE_DOCS)\n        continue;\n      scorer.nextPosition();\n      BytesRef payload = scorer.getPayload();\n      assertEquals(payload.length, 1);\n    }\n\n    helper.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6a47d642ab24da1a811adce4bda9cc52c520ca13":["954e59be3da8dc1b046646ad7af4b466852009d3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"954e59be3da8dc1b046646ad7af4b466852009d3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6a47d642ab24da1a811adce4bda9cc52c520ca13"]},"commit2Childs":{"6a47d642ab24da1a811adce4bda9cc52c520ca13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["954e59be3da8dc1b046646ad7af4b466852009d3"],"954e59be3da8dc1b046646ad7af4b466852009d3":["6a47d642ab24da1a811adce4bda9cc52c520ca13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}