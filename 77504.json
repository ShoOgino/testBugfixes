{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestConditionalTokenFilter.PositionAssertingTokenFilter#incrementToken().mjava","commits":[{"id":"6133d5299bf7ee1d673759e77343fc20151fa05a","date":1527605976,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestConditionalTokenFilter.PositionAssertingTokenFilter#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (reset) {\n        assertEquals(1, posIncAtt.getPositionIncrement());\n      }\n      reset = false;\n      return input.incrementToken();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8c072c5e1c6ed1643a8c71758930b6b13ccbd43","date":1529312258,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestConditionalTokenFilter.PositionAssertingTokenFilter#incrementToken().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestConditionalTokenFilter.PositionAssertingTokenFilter#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      boolean more = input.incrementToken();\n      if (more && reset) {\n        assertEquals(1, posIncAtt.getPositionIncrement());\n      }\n      reset = false;\n      return more;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (reset) {\n        assertEquals(1, posIncAtt.getPositionIncrement());\n      }\n      reset = false;\n      return input.incrementToken();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestConditionalTokenFilter.PositionAssertingTokenFilter#incrementToken().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestConditionalTokenFilter.PositionAssertingTokenFilter#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      boolean more = input.incrementToken();\n      if (more && reset) {\n        assertEquals(1, posIncAtt.getPositionIncrement());\n      }\n      reset = false;\n      return more;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (reset) {\n        assertEquals(1, posIncAtt.getPositionIncrement());\n      }\n      reset = false;\n      return input.incrementToken();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestConditionalTokenFilter.PositionAssertingTokenFilter#incrementToken().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestConditionalTokenFilter.PositionAssertingTokenFilter#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      boolean more = input.incrementToken();\n      if (more && reset) {\n        assertEquals(1, posIncAtt.getPositionIncrement());\n      }\n      reset = false;\n      return more;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (reset) {\n        assertEquals(1, posIncAtt.getPositionIncrement());\n      }\n      reset = false;\n      return input.incrementToken();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["6133d5299bf7ee1d673759e77343fc20151fa05a","b8c072c5e1c6ed1643a8c71758930b6b13ccbd43"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b8c072c5e1c6ed1643a8c71758930b6b13ccbd43":["6133d5299bf7ee1d673759e77343fc20151fa05a"],"6133d5299bf7ee1d673759e77343fc20151fa05a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b8c072c5e1c6ed1643a8c71758930b6b13ccbd43"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["6133d5299bf7ee1d673759e77343fc20151fa05a","b8c072c5e1c6ed1643a8c71758930b6b13ccbd43"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6133d5299bf7ee1d673759e77343fc20151fa05a"],"b8c072c5e1c6ed1643a8c71758930b6b13ccbd43":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"6133d5299bf7ee1d673759e77343fc20151fa05a":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","b8c072c5e1c6ed1643a8c71758930b6b13ccbd43","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}