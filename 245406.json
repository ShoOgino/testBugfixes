{"path":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","commits":[{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","sourceNew":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName() \n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed)\n        + reproduceWithExtraParams());\n  }\n\n","sourceOld":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName() \n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed)\n        + reproduceWithExtraParams());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","sourceNew":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName() \n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed)\n        + reproduceWithExtraParams());\n  }\n\n","sourceOld":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName() \n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed)\n        + reproduceWithExtraParams());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","sourceNew":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName()\n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed)\n        + reproduceWithExtraParams());\n  }\n\n","sourceOld":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName()\n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed)\n        + reproduceWithExtraParams());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3e06be49006ecac364d39d12b9c9f74882f9b9f","date":1304289513,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","sourceNew":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName()\n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed)\n        + reproduceWithExtraParams());\n  }\n\n","sourceOld":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName() \n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed)\n        + reproduceWithExtraParams());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","sourceNew":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName()\n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed)\n        + reproduceWithExtraParams());\n  }\n\n","sourceOld":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName() \n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed)\n        + reproduceWithExtraParams());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","sourceNew":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName()\n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed)\n        + reproduceWithExtraParams());\n  }\n\n","sourceOld":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName() \n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed)\n        + reproduceWithExtraParams());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b88f145033cba453c8f65cc86eb444c625ee86c0","date":1312803337,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","sourceNew":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName()\n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new ThreeLongs(staticSeed, seed, LuceneTestCaseRunner.runnerSeed)\n        + reproduceWithExtraParams());\n  }\n\n","sourceOld":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName()\n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new TwoLongs(staticSeed, seed)\n        + reproduceWithExtraParams());\n  }\n\n","bugFix":["0c839e28bbf8e26233e9cb58aa45188ae669f2be"],"bugIntro":["0ed97703eb37066163749ca2f635433a2f2184a5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","sourceNew":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName()\n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new ThreeLongs(staticSeed, seed, LuceneTestCaseRunner.runnerSeed)\n        + reproduceWithExtraParams());\n  }\n\n","sourceOld":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName()\n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new ThreeLongs(staticSeed, seed, LuceneTestCaseRunner.runnerSeed)\n        + reproduceWithExtraParams());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["b88f145033cba453c8f65cc86eb444c625ee86c0"],"a3776dccca01c11e7046323cfad46a3b4a471233":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"b88f145033cba453c8f65cc86eb444c625ee86c0":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","b88f145033cba453c8f65cc86eb444c625ee86c0"],"b88f145033cba453c8f65cc86eb444c625ee86c0":["7b91922b55d15444d554721b352861d028eb8278"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d","b3e06be49006ecac364d39d12b9c9f74882f9b9f","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}