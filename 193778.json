{"path":"src/common/org/apache/solr/common/util/NamedListCodec#writePrimitive(Object).mjava","commits":[{"id":"e3602d5eab954caecc726ab136ad580ac1ceb917","date":1228676831,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/common/org/apache/solr/common/util/NamedListCodec#writePrimitive(Object).mjava","pathOld":"src/java/org/apache/solr/common/util/NamedListCodec#writePrimitive(Object).mjava","sourceNew":"  public boolean writePrimitive(Object val) throws IOException {\n    if (val == null) {\n      daos.writeByte(NULL);\n      return true;\n    } else if (val instanceof String) {\n      writeStr((String)val);\n      return true;\n    } else if (val instanceof Integer) {\n      writeInt(((Integer)val).intValue());\n      return true;\n    } else if (val instanceof Long) {\n      writeLong(((Long)val).longValue());\n      return true;\n    } else if (val instanceof Float) {\n      daos.writeByte(FLOAT);\n      daos.writeFloat(((Float) val).floatValue());\n      return true;\n    } else if (val instanceof Date) {\n      daos.writeByte(DATE);\n      daos.writeLong(((Date) val).getTime());\n      return true;\n    } else if (val instanceof Boolean) {\n      if ((Boolean) val) daos.writeByte(BOOL_TRUE);\n      else daos.writeByte(BOOL_FALSE);\n      return true;\n    } else if (val instanceof Double) {\n      daos.writeByte(DOUBLE);\n      daos.writeDouble(((Double) val).doubleValue());\n      return true;\n    } else if (val instanceof Byte) {\n      daos.writeByte(BYTE);\n      daos.writeByte(((Byte) val).intValue());\n      return true;\n    } else if (val instanceof Short) {\n      daos.writeByte(SHORT);\n      daos.writeShort(((Short) val).intValue());\n      return true;\n    } else if (val instanceof byte[]) {\n      writeByteArray((byte[])val, 0, ((byte[])val).length);\n      return true;\n    } else if (val == END_OBJ) {\n      writeTag(END);\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  public boolean writePrimitive(Object val) throws IOException {\n    if (val == null) {\n      daos.writeByte(NULL);\n      return true;\n    } else if (val instanceof String) {\n      writeStr((String)val);\n      return true;\n    } else if (val instanceof Integer) {\n      writeInt(((Integer)val).intValue());\n      return true;\n    } else if (val instanceof Long) {\n      writeLong(((Long)val).longValue());\n      return true;\n    } else if (val instanceof Float) {\n      daos.writeByte(FLOAT);\n      daos.writeFloat(((Float) val).floatValue());\n      return true;\n    } else if (val instanceof Date) {\n      daos.writeByte(DATE);\n      daos.writeLong(((Date) val).getTime());\n      return true;\n    } else if (val instanceof Boolean) {\n      if ((Boolean) val) daos.writeByte(BOOL_TRUE);\n      else daos.writeByte(BOOL_FALSE);\n      return true;\n    } else if (val instanceof Double) {\n      daos.writeByte(DOUBLE);\n      daos.writeDouble(((Double) val).doubleValue());\n      return true;\n    } else if (val instanceof Byte) {\n      daos.writeByte(BYTE);\n      daos.writeByte(((Byte) val).intValue());\n      return true;\n    } else if (val instanceof Short) {\n      daos.writeByte(SHORT);\n      daos.writeShort(((Short) val).intValue());\n      return true;\n    } else if (val instanceof byte[]) {\n      writeByteArray((byte[])val, 0, ((byte[])val).length);\n      return true;\n    } else if (val == END_OBJ) {\n      writeTag(END);\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"18a1b51b47d1035bf90ecfc7d16c739fe983647a","date":1229928361,"type":5,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/common/org/apache/solr/common/util/JavaBinCodec#writePrimitive(Object).mjava","pathOld":"src/common/org/apache/solr/common/util/NamedListCodec#writePrimitive(Object).mjava","sourceNew":"  public boolean writePrimitive(Object val) throws IOException {\n    if (val == null) {\n      daos.writeByte(NULL);\n      return true;\n    } else if (val instanceof String) {\n      writeStr((String) val);\n      return true;\n    } else if (val instanceof Integer) {\n      writeInt(((Integer) val).intValue());\n      return true;\n    } else if (val instanceof Long) {\n      writeLong(((Long) val).longValue());\n      return true;\n    } else if (val instanceof Float) {\n      daos.writeByte(FLOAT);\n      daos.writeFloat(((Float) val).floatValue());\n      return true;\n    } else if (val instanceof Date) {\n      daos.writeByte(DATE);\n      daos.writeLong(((Date) val).getTime());\n      return true;\n    } else if (val instanceof Boolean) {\n      if ((Boolean) val) daos.writeByte(BOOL_TRUE);\n      else daos.writeByte(BOOL_FALSE);\n      return true;\n    } else if (val instanceof Double) {\n      daos.writeByte(DOUBLE);\n      daos.writeDouble(((Double) val).doubleValue());\n      return true;\n    } else if (val instanceof Byte) {\n      daos.writeByte(BYTE);\n      daos.writeByte(((Byte) val).intValue());\n      return true;\n    } else if (val instanceof Short) {\n      daos.writeByte(SHORT);\n      daos.writeShort(((Short) val).intValue());\n      return true;\n    } else if (val instanceof byte[]) {\n      writeByteArray((byte[]) val, 0, ((byte[]) val).length);\n      return true;\n    } else if (val == END_OBJ) {\n      writeTag(END);\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  public boolean writePrimitive(Object val) throws IOException {\n    if (val == null) {\n      daos.writeByte(NULL);\n      return true;\n    } else if (val instanceof String) {\n      writeStr((String)val);\n      return true;\n    } else if (val instanceof Integer) {\n      writeInt(((Integer)val).intValue());\n      return true;\n    } else if (val instanceof Long) {\n      writeLong(((Long)val).longValue());\n      return true;\n    } else if (val instanceof Float) {\n      daos.writeByte(FLOAT);\n      daos.writeFloat(((Float) val).floatValue());\n      return true;\n    } else if (val instanceof Date) {\n      daos.writeByte(DATE);\n      daos.writeLong(((Date) val).getTime());\n      return true;\n    } else if (val instanceof Boolean) {\n      if ((Boolean) val) daos.writeByte(BOOL_TRUE);\n      else daos.writeByte(BOOL_FALSE);\n      return true;\n    } else if (val instanceof Double) {\n      daos.writeByte(DOUBLE);\n      daos.writeDouble(((Double) val).doubleValue());\n      return true;\n    } else if (val instanceof Byte) {\n      daos.writeByte(BYTE);\n      daos.writeByte(((Byte) val).intValue());\n      return true;\n    } else if (val instanceof Short) {\n      daos.writeByte(SHORT);\n      daos.writeShort(((Short) val).intValue());\n      return true;\n    } else if (val instanceof byte[]) {\n      writeByteArray((byte[])val, 0, ((byte[])val).length);\n      return true;\n    } else if (val == END_OBJ) {\n      writeTag(END);\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"18a1b51b47d1035bf90ecfc7d16c739fe983647a":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["18a1b51b47d1035bf90ecfc7d16c739fe983647a"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"18a1b51b47d1035bf90ecfc7d16c739fe983647a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["18a1b51b47d1035bf90ecfc7d16c739fe983647a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}