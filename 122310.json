{"path":"solr/core/src/test/org/apache/solr/DistributedIntervalFacetingTest#testSolrJ().mjava","commits":[{"id":"4b74869edee26aa619609ae7a51351466ba06d39","date":1407454039,"type":0,"author":"Tomas Eduardo Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/DistributedIntervalFacetingTest#testSolrJ().mjava","pathOld":"/dev/null","sourceNew":"  private void testSolrJ() throws Exception {\n    indexr(\"id\", \"0\", \"test_i_dv\", \"0\", \"test_s_dv\", \"AAA\");\n    indexr(\"id\", \"1\", \"test_i_dv\", \"1\", \"test_s_dv\", \"BBB\");\n    indexr(\"id\", \"2\", \"test_i_dv\", \"2\", \"test_s_dv\", \"AAA\");\n    indexr(\"id\", \"3\", \"test_i_dv\", \"3\", \"test_s_dv\", \"CCC\");\n    commit();\n    \n    QueryResponse response = controlClient.query(new SolrQuery(\"*:*\"));\n    assertEquals(4, response.getResults().getNumFound());\n    \n    SolrQuery q = new SolrQuery(\"*:*\");\n    String[] intervals =  new String[]{\"[0,1)\",\"[1,2)\", \"[2,3)\", \"[3,*)\"};\n    q.addIntervalFacets(\"test_i_dv\", intervals);\n    response = controlClient.query(q);\n    assertEquals(1, response.getIntervalFacets().size());\n    assertEquals(\"test_i_dv\", response.getIntervalFacets().get(0).getField());\n    assertEquals(4, response.getIntervalFacets().get(0).getIntervals().size());\n    for (int i = 0; i < response.getIntervalFacets().get(0).getIntervals().size(); i++) {\n      Count count = response.getIntervalFacets().get(0).getIntervals().get(i);\n      assertEquals(intervals[i], count.getKey());\n      assertEquals(1, count.getCount());\n    }\n    \n    q = new SolrQuery(\"*:*\");\n    q.addIntervalFacets(\"test_i_dv\", intervals);\n    q.addIntervalFacets(\"test_s_dv\", new String[]{\"{!key='AAA'}[AAA,AAA]\", \"{!key='BBB'}[BBB,BBB]\", \"{!key='CCC'}[CCC,CCC]\"});\n    response = controlClient.query(q);\n    assertEquals(2, response.getIntervalFacets().size());\n    \n    int stringIntervalIndex = \"test_s_dv\".equals(response.getIntervalFacets().get(0).getField())?0:1;\n        \n    assertEquals(\"test_i_dv\", response.getIntervalFacets().get(1-stringIntervalIndex).getField());\n    assertEquals(\"test_s_dv\", response.getIntervalFacets().get(stringIntervalIndex).getField());\n    \n    for (int i = 0; i < response.getIntervalFacets().get(1-stringIntervalIndex).getIntervals().size(); i++) {\n      Count count = response.getIntervalFacets().get(1-stringIntervalIndex).getIntervals().get(i);\n      assertEquals(intervals[i], count.getKey());\n      assertEquals(1, count.getCount());\n    }\n    \n    List<Count> stringIntervals = response.getIntervalFacets().get(stringIntervalIndex).getIntervals();\n    assertEquals(3, stringIntervals.size());\n    assertEquals(\"AAA\", stringIntervals.get(0).getKey());\n    assertEquals(2, stringIntervals.get(0).getCount());\n    \n    assertEquals(\"BBB\", stringIntervals.get(1).getKey());\n    assertEquals(1, stringIntervals.get(1).getCount());\n    \n    assertEquals(\"CCC\", stringIntervals.get(2).getKey());\n    assertEquals(1, stringIntervals.get(2).getCount());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4b74869edee26aa619609ae7a51351466ba06d39":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4b74869edee26aa619609ae7a51351466ba06d39"]},"commit2Childs":{"4b74869edee26aa619609ae7a51351466ba06d39":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4b74869edee26aa619609ae7a51351466ba06d39"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}