{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#getBaseUrlForNodeName(String,String).mjava","commits":[{"id":"c9eee76c6a8ac63dd88a66571d553973ea0a1131","date":1480015269,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#getBaseUrlForNodeName(String,String).mjava","pathOld":"/dev/null","sourceNew":"  public static String getBaseUrlForNodeName(final String nodeName, String urlScheme) {\n    final int _offset = nodeName.indexOf(\"_\");\n    if (_offset < 0) {\n      throw new IllegalArgumentException(\"nodeName does not contain expected '_' seperator: \" + nodeName);\n    }\n    final String hostAndPort = nodeName.substring(0,_offset);\n    try {\n      final String path = URLDecoder.decode(nodeName.substring(1+_offset), \"UTF-8\");\n      return urlScheme + \"://\" + hostAndPort + (path.isEmpty() ? \"\" : (\"/\" + path));\n    } catch (UnsupportedEncodingException e) {\n      throw new IllegalStateException(\"JVM Does not seem to support UTF-8\", e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"727bb765ff2542275f6d31f67be18d7104bae148","date":1480353976,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#getBaseUrlForNodeName(String,String).mjava","pathOld":"/dev/null","sourceNew":"  public static String getBaseUrlForNodeName(final String nodeName, String urlScheme) {\n    final int _offset = nodeName.indexOf(\"_\");\n    if (_offset < 0) {\n      throw new IllegalArgumentException(\"nodeName does not contain expected '_' seperator: \" + nodeName);\n    }\n    final String hostAndPort = nodeName.substring(0,_offset);\n    try {\n      final String path = URLDecoder.decode(nodeName.substring(1+_offset), \"UTF-8\");\n      return urlScheme + \"://\" + hostAndPort + (path.isEmpty() ? \"\" : (\"/\" + path));\n    } catch (UnsupportedEncodingException e) {\n      throw new IllegalStateException(\"JVM Does not seem to support UTF-8\", e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"18e7cf5eab4be20c96aa36554daa39b53f43cf6e","date":1490632275,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#getBaseUrlForNodeName(String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#getBaseUrlForNodeName(String,String).mjava","sourceNew":"  public static String getBaseUrlForNodeName(final String nodeName, String urlScheme) {\n    final int _offset = nodeName.indexOf(\"_\");\n    if (_offset < 0) {\n      throw new IllegalArgumentException(\"nodeName does not contain expected '_' separator: \" + nodeName);\n    }\n    final String hostAndPort = nodeName.substring(0,_offset);\n    try {\n      final String path = URLDecoder.decode(nodeName.substring(1+_offset), \"UTF-8\");\n      return urlScheme + \"://\" + hostAndPort + (path.isEmpty() ? \"\" : (\"/\" + path));\n    } catch (UnsupportedEncodingException e) {\n      throw new IllegalStateException(\"JVM Does not seem to support UTF-8\", e);\n    }\n  }\n\n","sourceOld":"  public static String getBaseUrlForNodeName(final String nodeName, String urlScheme) {\n    final int _offset = nodeName.indexOf(\"_\");\n    if (_offset < 0) {\n      throw new IllegalArgumentException(\"nodeName does not contain expected '_' seperator: \" + nodeName);\n    }\n    final String hostAndPort = nodeName.substring(0,_offset);\n    try {\n      final String path = URLDecoder.decode(nodeName.substring(1+_offset), \"UTF-8\");\n      return urlScheme + \"://\" + hostAndPort + (path.isEmpty() ? \"\" : (\"/\" + path));\n    } catch (UnsupportedEncodingException e) {\n      throw new IllegalStateException(\"JVM Does not seem to support UTF-8\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"febf4fa8feff6bbc932c1b388cbd758a3e6697f7","date":1490873944,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#getBaseUrlForNodeName(String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#getBaseUrlForNodeName(String,String).mjava","sourceNew":"  public static String getBaseUrlForNodeName(final String nodeName, String urlScheme) {\n    final int _offset = nodeName.indexOf(\"_\");\n    if (_offset < 0) {\n      throw new IllegalArgumentException(\"nodeName does not contain expected '_' separator: \" + nodeName);\n    }\n    final String hostAndPort = nodeName.substring(0,_offset);\n    try {\n      final String path = URLDecoder.decode(nodeName.substring(1+_offset), \"UTF-8\");\n      return urlScheme + \"://\" + hostAndPort + (path.isEmpty() ? \"\" : (\"/\" + path));\n    } catch (UnsupportedEncodingException e) {\n      throw new IllegalStateException(\"JVM Does not seem to support UTF-8\", e);\n    }\n  }\n\n","sourceOld":"  public static String getBaseUrlForNodeName(final String nodeName, String urlScheme) {\n    final int _offset = nodeName.indexOf(\"_\");\n    if (_offset < 0) {\n      throw new IllegalArgumentException(\"nodeName does not contain expected '_' seperator: \" + nodeName);\n    }\n    final String hostAndPort = nodeName.substring(0,_offset);\n    try {\n      final String path = URLDecoder.decode(nodeName.substring(1+_offset), \"UTF-8\");\n      return urlScheme + \"://\" + hostAndPort + (path.isEmpty() ? \"\" : (\"/\" + path));\n    } catch (UnsupportedEncodingException e) {\n      throw new IllegalStateException(\"JVM Does not seem to support UTF-8\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1","date":1513252583,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils#getBaseUrlForNodeName(String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#getBaseUrlForNodeName(String,String).mjava","sourceNew":"  public static String getBaseUrlForNodeName(final String nodeName, String urlScheme) {\n    final int _offset = nodeName.indexOf(\"_\");\n    if (_offset < 0) {\n      throw new IllegalArgumentException(\"nodeName does not contain expected '_' separator: \" + nodeName);\n    }\n    final String hostAndPort = nodeName.substring(0,_offset);\n    try {\n      final String path = URLDecoder.decode(nodeName.substring(1+_offset), \"UTF-8\");\n      return urlScheme + \"://\" + hostAndPort + (path.isEmpty() ? \"\" : (\"/\" + path));\n    } catch (UnsupportedEncodingException e) {\n      throw new IllegalStateException(\"JVM Does not seem to support UTF-8\", e);\n    }\n  }\n\n","sourceOld":"  public static String getBaseUrlForNodeName(final String nodeName, String urlScheme) {\n    final int _offset = nodeName.indexOf(\"_\");\n    if (_offset < 0) {\n      throw new IllegalArgumentException(\"nodeName does not contain expected '_' separator: \" + nodeName);\n    }\n    final String hostAndPort = nodeName.substring(0,_offset);\n    try {\n      final String path = URLDecoder.decode(nodeName.substring(1+_offset), \"UTF-8\");\n      return urlScheme + \"://\" + hostAndPort + (path.isEmpty() ? \"\" : (\"/\" + path));\n    } catch (UnsupportedEncodingException e) {\n      throw new IllegalStateException(\"JVM Does not seem to support UTF-8\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"febf4fa8feff6bbc932c1b388cbd758a3e6697f7":["c9eee76c6a8ac63dd88a66571d553973ea0a1131"],"18e7cf5eab4be20c96aa36554daa39b53f43cf6e":["c9eee76c6a8ac63dd88a66571d553973ea0a1131"],"727bb765ff2542275f6d31f67be18d7104bae148":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c9eee76c6a8ac63dd88a66571d553973ea0a1131"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["18e7cf5eab4be20c96aa36554daa39b53f43cf6e"],"c9eee76c6a8ac63dd88a66571d553973ea0a1131":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"]},"commit2Childs":{"febf4fa8feff6bbc932c1b388cbd758a3e6697f7":[],"18e7cf5eab4be20c96aa36554daa39b53f43cf6e":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"727bb765ff2542275f6d31f67be18d7104bae148":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["727bb765ff2542275f6d31f67be18d7104bae148","c9eee76c6a8ac63dd88a66571d553973ea0a1131"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c9eee76c6a8ac63dd88a66571d553973ea0a1131":["febf4fa8feff6bbc932c1b388cbd758a3e6697f7","18e7cf5eab4be20c96aa36554daa39b53f43cf6e","727bb765ff2542275f6d31f67be18d7104bae148"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["febf4fa8feff6bbc932c1b388cbd758a3e6697f7","727bb765ff2542275f6d31f67be18d7104bae148","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}