{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ClientDataProvider.ClientSnitchCtx#invoke(String,String,SolrParams).mjava","commits":[{"id":"862864c0fab5449b10f29b4eee94a380d27d787f","date":1491552584,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ClientDataProvider.ClientSnitchCtx#invoke(String,String,SolrParams).mjava","pathOld":"/dev/null","sourceNew":"    public SimpleSolrResponse invoke(String solrNode, String path, SolrParams params)\n        throws IOException, SolrServerException {\n      String url = zkClientClusterStateProvider.getZkStateReader().getBaseUrlForNodeName(solrNode);\n\n      GenericSolrRequest request = new GenericSolrRequest(SolrRequest.METHOD.GET, path, params);\n      try (HttpSolrClient client = new HttpSolrClient.Builder()\n          .withHttpClient(solrClient.getHttpClient())\n          .withBaseSolrUrl(url)\n          .withResponseParser(new BinaryResponseParser())\n          .build()) {\n        NamedList<Object> rsp = client.request(request);\n        request.response.nl = rsp;\n        return request.response;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86fff6c123a5a1d38adb665dd045347219798da9","date":1493623721,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/SolrClientDataProvider.ClientSnitchCtx#invoke(String,String,SolrParams).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ClientDataProvider.ClientSnitchCtx#invoke(String,String,SolrParams).mjava","sourceNew":"    public SimpleSolrResponse invoke(String solrNode, String path, SolrParams params)\n        throws IOException, SolrServerException {\n      String url = zkClientClusterStateProvider.getZkStateReader().getBaseUrlForNodeName(solrNode);\n\n      GenericSolrRequest request = new GenericSolrRequest(SolrRequest.METHOD.GET, path, params);\n      try (HttpSolrClient client = new HttpSolrClient.Builder()\n          .withHttpClient(solrClient.getHttpClient())\n          .withBaseSolrUrl(url)\n          .withResponseParser(new BinaryResponseParser())\n          .build()) {\n        NamedList<Object> rsp = client.request(request);\n        request.response.nl = rsp;\n        return request.response;\n      }\n    }\n\n","sourceOld":"    public SimpleSolrResponse invoke(String solrNode, String path, SolrParams params)\n        throws IOException, SolrServerException {\n      String url = zkClientClusterStateProvider.getZkStateReader().getBaseUrlForNodeName(solrNode);\n\n      GenericSolrRequest request = new GenericSolrRequest(SolrRequest.METHOD.GET, path, params);\n      try (HttpSolrClient client = new HttpSolrClient.Builder()\n          .withHttpClient(solrClient.getHttpClient())\n          .withBaseSolrUrl(url)\n          .withResponseParser(new BinaryResponseParser())\n          .build()) {\n        NamedList<Object> rsp = client.request(request);\n        request.response.nl = rsp;\n        return request.response;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"86fff6c123a5a1d38adb665dd045347219798da9":["862864c0fab5449b10f29b4eee94a380d27d787f"],"862864c0fab5449b10f29b4eee94a380d27d787f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["862864c0fab5449b10f29b4eee94a380d27d787f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"86fff6c123a5a1d38adb665dd045347219798da9":[],"862864c0fab5449b10f29b4eee94a380d27d787f":["86fff6c123a5a1d38adb665dd045347219798da9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["86fff6c123a5a1d38adb665dd045347219798da9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}