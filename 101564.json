{"path":"src/java/org/apache/solr/schema/RandomSortField#getSortField(SchemaField,boolean).mjava","commits":[{"id":"89aee276bc7d730ed81ff5e3c92ec5cf55302909","date":1182230867,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/RandomSortField#getSortField(SchemaField,boolean).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SortField getSortField(SchemaField field,boolean reverse) {\n    return new RandomSort(field.getName());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8840160499b9caa7faa044ba4b0d02dc1326557f","date":1182303498,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/RandomSortField#getSortField(SchemaField,boolean).mjava","pathOld":"src/java/org/apache/solr/schema/RandomSortField#getSortField(SchemaField,boolean).mjava","sourceNew":"  @Override\n  public SortField getSortField(SchemaField field, boolean reverse) {\n    return new RandomSort(field.getName(), reverse);\n  }\n\n","sourceOld":"  @Override\n  public SortField getSortField(SchemaField field,boolean reverse) {\n    return new RandomSort(field.getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96d59821c7c46ee8751575f517e2adc7d6aebd06","date":1244337375,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/RandomSortField#getSortField(SchemaField,boolean).mjava","pathOld":"src/java/org/apache/solr/schema/RandomSortField#getSortField(SchemaField,boolean).mjava","sourceNew":"  @Override\n  public SortField getSortField(SchemaField field, boolean reverse) {\n    return new SortField(field.getName(), randomComparatorSource, reverse);\n  }\n\n","sourceOld":"  @Override\n  public SortField getSortField(SchemaField field, boolean reverse) {\n    return new RandomSort(field.getName(), reverse);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/RandomSortField#getSortField(SchemaField,boolean).mjava","pathOld":"src/java/org/apache/solr/schema/RandomSortField#getSortField(SchemaField,boolean).mjava","sourceNew":"  @Override\n  public SortField getSortField(SchemaField field, boolean reverse) {\n    return new SortField(field.getName(), randomComparatorSource, reverse);\n  }\n\n","sourceOld":"  @Override\n  public SortField getSortField(SchemaField field, boolean reverse) {\n    return new SortField(field.getName(), randomComparatorSource, reverse);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"96d59821c7c46ee8751575f517e2adc7d6aebd06":["8840160499b9caa7faa044ba4b0d02dc1326557f"],"89aee276bc7d730ed81ff5e3c92ec5cf55302909":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["96d59821c7c46ee8751575f517e2adc7d6aebd06"],"8840160499b9caa7faa044ba4b0d02dc1326557f":["89aee276bc7d730ed81ff5e3c92ec5cf55302909"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["89aee276bc7d730ed81ff5e3c92ec5cf55302909"],"96d59821c7c46ee8751575f517e2adc7d6aebd06":["ad94625fb8d088209f46650c8097196fec67f00c"],"89aee276bc7d730ed81ff5e3c92ec5cf55302909":["8840160499b9caa7faa044ba4b0d02dc1326557f"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"8840160499b9caa7faa044ba4b0d02dc1326557f":["96d59821c7c46ee8751575f517e2adc7d6aebd06"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}