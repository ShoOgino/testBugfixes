{"path":"src/java/org/apache/lucene/index/Term#Term(String,String).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/Term#Term(String,String).mjava","pathOld":"/dev/null","sourceNew":"  /** Constructs a Term with the given field and text. */\n  public Term(String fld, String txt) {\n    this(fld, txt, true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73338ba5866e7265a2dfcf86f8ae27b8cd9aa1f0","date":1172725425,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/Term#Term(String,String).mjava","pathOld":"src/java/org/apache/lucene/index/Term#Term(String,String).mjava","sourceNew":"  /** Constructs a Term with the given field and text.\n   * <p>Note that a text value of null results in undefined\n   * behavior for most Lucene APIs that accept a Term parameter. */\n  public Term(String fld, String txt) {\n    this(fld, txt, true);\n  }\n\n","sourceOld":"  /** Constructs a Term with the given field and text. */\n  public Term(String fld, String txt) {\n    this(fld, txt, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60994237a74f43aca81ac1bd8835fca5ca4a5ee6","date":1172790651,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/Term#Term(String,String).mjava","pathOld":"src/java/org/apache/lucene/index/Term#Term(String,String).mjava","sourceNew":"  /** Constructs a Term with the given field and text.\n   * <p>Note that a null field or null text value results in undefined\n   * behavior for most Lucene APIs that accept a Term parameter. */\n  public Term(String fld, String txt) {\n    this(fld, txt, true);\n  }\n\n","sourceOld":"  /** Constructs a Term with the given field and text.\n   * <p>Note that a text value of null results in undefined\n   * behavior for most Lucene APIs that accept a Term parameter. */\n  public Term(String fld, String txt) {\n    this(fld, txt, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf93f7a278746d4746fa3ebb3d53267b22fd040f","date":1249495506,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/Term#Term(String,String).mjava","pathOld":"src/java/org/apache/lucene/index/Term#Term(String,String).mjava","sourceNew":"  /** Constructs a Term with the given field and text.\n   * <p>Note that a null field or null text value results in undefined\n   * behavior for most Lucene APIs that accept a Term parameter. */\n  public Term(String fld, String txt) {\n    field = StringHelper.intern(fld);\n    text = txt;\n  }\n\n","sourceOld":"  /** Constructs a Term with the given field and text.\n   * <p>Note that a null field or null text value results in undefined\n   * behavior for most Lucene APIs that accept a Term parameter. */\n  public Term(String fld, String txt) {\n    this(fld, txt, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/Term#Term(String,String).mjava","pathOld":"src/java/org/apache/lucene/index/Term#Term(String,String).mjava","sourceNew":"  /** Constructs a Term with the given field and text.\n   * <p>Note that a null field or null text value results in undefined\n   * behavior for most Lucene APIs that accept a Term parameter. */\n  public Term(String fld, String txt) {\n    field = StringHelper.intern(fld);\n    text = txt;\n  }\n\n","sourceOld":"  /** Constructs a Term with the given field and text.\n   * <p>Note that a null field or null text value results in undefined\n   * behavior for most Lucene APIs that accept a Term parameter. */\n  public Term(String fld, String txt) {\n    field = StringHelper.intern(fld);\n    text = txt;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cf93f7a278746d4746fa3ebb3d53267b22fd040f":["60994237a74f43aca81ac1bd8835fca5ca4a5ee6"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"73338ba5866e7265a2dfcf86f8ae27b8cd9aa1f0":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"60994237a74f43aca81ac1bd8835fca5ca4a5ee6":["73338ba5866e7265a2dfcf86f8ae27b8cd9aa1f0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cf93f7a278746d4746fa3ebb3d53267b22fd040f"]},"commit2Childs":{"cf93f7a278746d4746fa3ebb3d53267b22fd040f":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["73338ba5866e7265a2dfcf86f8ae27b8cd9aa1f0"],"73338ba5866e7265a2dfcf86f8ae27b8cd9aa1f0":["60994237a74f43aca81ac1bd8835fca5ca4a5ee6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"60994237a74f43aca81ac1bd8835fca5ca4a5ee6":["cf93f7a278746d4746fa3ebb3d53267b22fd040f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}