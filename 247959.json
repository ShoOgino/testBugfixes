{"path":"solr/core/src/java/org/apache/solr/cloud/OverseerProcessor#OverseerProcessor(ZkStateReader,String,ShardHandlerFactory,String,Overseer.Stats,OverseerMessageHandlerSelector,OverseerNodePrioritizer,DistributedQueue,DistributedMap,DistributedMap,DistributedMap).mjava","commits":[{"id":"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac","date":1438841252,"type":1,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerProcessor#OverseerProcessor(ZkStateReader,String,ShardHandlerFactory,String,Overseer.Stats,OverseerMessageHandlerSelector,OverseerNodePrioritizer,DistributedQueue,DistributedMap,DistributedMap,DistributedMap).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#OverseerCollectionProcessor(ZkStateReader,String,ShardHandlerFactory,String,Overseer.Stats,DistributedQueue,DistributedMap,DistributedMap,DistributedMap).mjava","sourceNew":"  public OverseerProcessor(ZkStateReader zkStateReader, String myId,\n                                        final ShardHandlerFactory shardHandlerFactory,\n                                        String adminPath,\n                                        Overseer.Stats stats,\n                                        OverseerMessageHandlerSelector selector,\n                                        OverseerNodePrioritizer prioritizer,\n                                        DistributedQueue workQueue,\n                                        DistributedMap runningMap,\n                                        DistributedMap completedMap,\n                                        DistributedMap failureMap) {\n    this.zkStateReader = zkStateReader;\n    this.myId = myId;\n    this.shardHandlerFactory = shardHandlerFactory;\n    this.adminPath = adminPath;\n    this.stats = stats;\n    this.selector = selector;\n    this.prioritizer = prioritizer;\n    this.workQueue = workQueue;\n    this.runningMap = runningMap;\n    this.completedMap = completedMap;\n    this.failureMap = failureMap;\n    this.runningZKTasks = new HashSet<>();\n    this.runningTasks = new HashSet();\n    this.completedTasks = new HashMap<>();\n  }\n\n","sourceOld":"  protected OverseerCollectionProcessor(ZkStateReader zkStateReader, String myId,\n                                        final ShardHandlerFactory shardHandlerFactory,\n                                        String adminPath,\n                                        Overseer.Stats stats,\n                                        DistributedQueue workQueue,\n                                        DistributedMap runningMap,\n                                        DistributedMap completedMap,\n                                        DistributedMap failureMap) {\n    this.zkStateReader = zkStateReader;\n    this.myId = myId;\n    this.shardHandlerFactory = shardHandlerFactory;\n    this.adminPath = adminPath;\n    this.workQueue = workQueue;\n    this.runningMap = runningMap;\n    this.completedMap = completedMap;\n    this.failureMap = failureMap;\n    this.stats = stats;\n    this.runningZKTasks = new HashSet<>();\n    this.runningTasks = new HashSet();\n    this.collectionWip = new HashSet();\n    this.completedTasks = new HashMap<>();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a282020d6c9a4ea32a359539e283e4771a2fda8","date":1440047542,"type":5,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerProcessor#OverseerProcessor(ZkStateReader,String,ShardHandlerFactory,String,Overseer.Stats,OverseerMessageHandlerSelector,OverseerNodePrioritizer,OverseerCollectionQueue,DistributedMap,DistributedMap,DistributedMap).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerProcessor#OverseerProcessor(ZkStateReader,String,ShardHandlerFactory,String,Overseer.Stats,OverseerMessageHandlerSelector,OverseerNodePrioritizer,DistributedQueue,DistributedMap,DistributedMap,DistributedMap).mjava","sourceNew":"  public OverseerProcessor(ZkStateReader zkStateReader, String myId,\n                                        final ShardHandlerFactory shardHandlerFactory,\n                                        String adminPath,\n                                        Overseer.Stats stats,\n                                        OverseerMessageHandlerSelector selector,\n                                        OverseerNodePrioritizer prioritizer,\n                                        OverseerCollectionQueue workQueue,\n                                        DistributedMap runningMap,\n                                        DistributedMap completedMap,\n                                        DistributedMap failureMap) {\n    this.zkStateReader = zkStateReader;\n    this.myId = myId;\n    this.shardHandlerFactory = shardHandlerFactory;\n    this.adminPath = adminPath;\n    this.stats = stats;\n    this.selector = selector;\n    this.prioritizer = prioritizer;\n    this.workQueue = workQueue;\n    this.runningMap = runningMap;\n    this.completedMap = completedMap;\n    this.failureMap = failureMap;\n    this.runningZKTasks = new HashSet<>();\n    this.runningTasks = new HashSet();\n    this.completedTasks = new HashMap<>();\n  }\n\n","sourceOld":"  public OverseerProcessor(ZkStateReader zkStateReader, String myId,\n                                        final ShardHandlerFactory shardHandlerFactory,\n                                        String adminPath,\n                                        Overseer.Stats stats,\n                                        OverseerMessageHandlerSelector selector,\n                                        OverseerNodePrioritizer prioritizer,\n                                        DistributedQueue workQueue,\n                                        DistributedMap runningMap,\n                                        DistributedMap completedMap,\n                                        DistributedMap failureMap) {\n    this.zkStateReader = zkStateReader;\n    this.myId = myId;\n    this.shardHandlerFactory = shardHandlerFactory;\n    this.adminPath = adminPath;\n    this.stats = stats;\n    this.selector = selector;\n    this.prioritizer = prioritizer;\n    this.workQueue = workQueue;\n    this.runningMap = runningMap;\n    this.completedMap = completedMap;\n    this.failureMap = failureMap;\n    this.runningZKTasks = new HashSet<>();\n    this.runningTasks = new HashSet();\n    this.completedTasks = new HashMap<>();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2a282020d6c9a4ea32a359539e283e4771a2fda8":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2a282020d6c9a4ea32a359539e283e4771a2fda8"]},"commit2Childs":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["2a282020d6c9a4ea32a359539e283e4771a2fda8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"],"2a282020d6c9a4ea32a359539e283e4771a2fda8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}