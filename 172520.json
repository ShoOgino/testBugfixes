{"path":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestStandardQP#testOperatorVsWhitespace().mjava","commits":[{"id":"ee76d213d935c68932ca13b55fa0a8a32bf6af1a","date":1343572717,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestStandardQP#testOperatorVsWhitespace().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void testOperatorVsWhitespace() throws Exception {\n    // LUCENE-2566 is not implemented for StandardQueryParser\n    // TODO implement LUCENE-2566 and remove this (override)method\n    Analyzer a = new Analyzer() {\n      @Override\n      public TokenStreamComponents createComponents(String fieldName,\n          Reader reader) {\n        return new TokenStreamComponents(new MockTokenizer(reader,\n            MockTokenizer.WHITESPACE, false));\n      }\n    };\n    assertQueryEquals(\"a - b\", a, \"a -b\");\n    assertQueryEquals(\"a + b\", a, \"a +b\");\n    assertQueryEquals(\"a ! b\", a, \"a -b\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestStandardQP#testOperatorVsWhitespace().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void testOperatorVsWhitespace() throws Exception {\n    // LUCENE-2566 is not implemented for StandardQueryParser\n    // TODO implement LUCENE-2566 and remove this (override)method\n    Analyzer a = new Analyzer() {\n      @Override\n      public TokenStreamComponents createComponents(String fieldName,\n          Reader reader) {\n        return new TokenStreamComponents(new MockTokenizer(reader,\n            MockTokenizer.WHITESPACE, false));\n      }\n    };\n    assertQueryEquals(\"a - b\", a, \"a -b\");\n    assertQueryEquals(\"a + b\", a, \"a +b\");\n    assertQueryEquals(\"a ! b\", a, \"a -b\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestStandardQP#testOperatorVsWhitespace().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void testOperatorVsWhitespace() throws Exception {\n    // LUCENE-2566 is not implemented for StandardQueryParser\n    // TODO implement LUCENE-2566 and remove this (override)method\n    Analyzer a = new Analyzer() {\n      @Override\n      public TokenStreamComponents createComponents(String fieldName,\n          Reader reader) {\n        return new TokenStreamComponents(new MockTokenizer(reader,\n            MockTokenizer.WHITESPACE, false));\n      }\n    };\n    assertQueryEquals(\"a - b\", a, \"a -b\");\n    assertQueryEquals(\"a + b\", a, \"a +b\");\n    assertQueryEquals(\"a ! b\", a, \"a -b\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestStandardQP#testOperatorVsWhitespace().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestStandardQP#testOperatorVsWhitespace().mjava","sourceNew":"  @Override\n  public void testOperatorVsWhitespace() throws Exception {\n    // LUCENE-2566 is not implemented for StandardQueryParser\n    // TODO implement LUCENE-2566 and remove this (override)method\n    Analyzer a = new Analyzer() {\n      @Override\n      public TokenStreamComponents createComponents(String fieldName) {\n        return new TokenStreamComponents(new MockTokenizer(MockTokenizer.WHITESPACE, false));\n      }\n    };\n    assertQueryEquals(\"a - b\", a, \"a -b\");\n    assertQueryEquals(\"a + b\", a, \"a +b\");\n    assertQueryEquals(\"a ! b\", a, \"a -b\");\n  }\n\n","sourceOld":"  @Override\n  public void testOperatorVsWhitespace() throws Exception {\n    // LUCENE-2566 is not implemented for StandardQueryParser\n    // TODO implement LUCENE-2566 and remove this (override)method\n    Analyzer a = new Analyzer() {\n      @Override\n      public TokenStreamComponents createComponents(String fieldName,\n          Reader reader) {\n        return new TokenStreamComponents(new MockTokenizer(reader,\n            MockTokenizer.WHITESPACE, false));\n      }\n    };\n    assertQueryEquals(\"a - b\", a, \"a -b\");\n    assertQueryEquals(\"a + b\", a, \"a +b\");\n    assertQueryEquals(\"a ! b\", a, \"a -b\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ee76d213d935c68932ca13b55fa0a8a32bf6af1a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["ee76d213d935c68932ca13b55fa0a8a32bf6af1a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ee76d213d935c68932ca13b55fa0a8a32bf6af1a"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ee76d213d935c68932ca13b55fa0a8a32bf6af1a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"]},"commit2Childs":{"ee76d213d935c68932ca13b55fa0a8a32bf6af1a":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ee76d213d935c68932ca13b55fa0a8a32bf6af1a","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}