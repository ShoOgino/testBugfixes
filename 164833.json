{"path":"solr/core/src/java/org/apache/solr/handler/SQLHandler#bucketSortComp(Bucket[],String).mjava","commits":[{"id":"7b2c4e17100e207bc842e56d016b9f91f411304e","date":1434336696,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SQLHandler#bucketSortComp(Bucket[],String).mjava","pathOld":"/dev/null","sourceNew":"  private static Comparator<Tuple> bucketSortComp(Bucket[] buckets, String dir) {\n    Comparator<Tuple>[] comps = new Comparator[buckets.length];\n    for(int i=0; i<buckets.length; i++) {\n      ComparatorOrder comparatorOrder = ascDescComp(dir);\n      String sortKey = buckets[i].toString();\n      comps[i] = new FieldComparator(stripQuotes(sortKey), comparatorOrder);\n    }\n\n    if(comps.length == 1) {\n      return comps[0];\n    } else {\n      return new MultiComp(comps);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e431b0806b8db369da896b66a74e304a49953c7b","date":1434740037,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SQLHandler#bucketSortComp(Bucket[],String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SQLHandler#bucketSortComp(Bucket[],String).mjava","sourceNew":"  private static Comparator<Tuple> bucketSortComp(Bucket[] buckets, String dir) {\n    Comparator<Tuple>[] comps = new Comparator[buckets.length];\n    for(int i=0; i<buckets.length; i++) {\n      ComparatorOrder comparatorOrder = ascDescComp(dir);\n      String sortKey = buckets[i].toString();\n      comps[i] = new StreamComparator(stripQuotes(sortKey), comparatorOrder);\n    }\n\n    if(comps.length == 1) {\n      return comps[0];\n    } else {\n      return new MultiComp(comps);\n    }\n  }\n\n","sourceOld":"  private static Comparator<Tuple> bucketSortComp(Bucket[] buckets, String dir) {\n    Comparator<Tuple>[] comps = new Comparator[buckets.length];\n    for(int i=0; i<buckets.length; i++) {\n      ComparatorOrder comparatorOrder = ascDescComp(dir);\n      String sortKey = buckets[i].toString();\n      comps[i] = new FieldComparator(stripQuotes(sortKey), comparatorOrder);\n    }\n\n    if(comps.length == 1) {\n      return comps[0];\n    } else {\n      return new MultiComp(comps);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0891a6931fc352fc7e61f2752ef9add758d3fb89","date":1435151229,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SQLHandler#bucketSortComp(Bucket[],String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SQLHandler#bucketSortComp(Bucket[],String).mjava","sourceNew":"  private static StreamComparator bucketSortComp(Bucket[] buckets, String dir) {\n    FieldComparator[] comps = new FieldComparator[buckets.length];\n    for(int i=0; i<buckets.length; i++) {\n      ComparatorOrder comparatorOrder = ascDescComp(dir);\n      String sortKey = buckets[i].toString();\n      comps[i] = new FieldComparator(stripQuotes(sortKey), comparatorOrder);\n    }\n\n    if(comps.length == 1) {\n      return comps[0];\n    } else {\n      return new MultipleFieldComparator(comps);\n    }\n  }\n\n","sourceOld":"  private static Comparator<Tuple> bucketSortComp(Bucket[] buckets, String dir) {\n    Comparator<Tuple>[] comps = new Comparator[buckets.length];\n    for(int i=0; i<buckets.length; i++) {\n      ComparatorOrder comparatorOrder = ascDescComp(dir);\n      String sortKey = buckets[i].toString();\n      comps[i] = new StreamComparator(stripQuotes(sortKey), comparatorOrder);\n    }\n\n    if(comps.length == 1) {\n      return comps[0];\n    } else {\n      return new MultiComp(comps);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d984627825732e682759c22df7a3b171a80f3812","date":1461857653,"type":4,"author":"Kevin Risden","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/SQLHandler#bucketSortComp(Bucket[],String).mjava","sourceNew":null,"sourceOld":"  private static StreamComparator bucketSortComp(Bucket[] buckets, String dir) {\n    FieldComparator[] comps = new FieldComparator[buckets.length];\n    for(int i=0; i<buckets.length; i++) {\n      ComparatorOrder comparatorOrder = ascDescComp(dir);\n      String sortKey = buckets[i].toString();\n      comps[i] = new FieldComparator(stripQuotes(sortKey), comparatorOrder);\n    }\n\n    if(comps.length == 1) {\n      return comps[0];\n    } else {\n      return new MultipleFieldComparator(comps);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"116fdd6b9e04e18a6547a5650bc0afd3fda020aa","date":1487184909,"type":5,"author":"Joel Bernstein","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable#bucketSortComp(Bucket[],String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SQLHandler#bucketSortComp(Bucket[],String).mjava","sourceNew":"  private static StreamComparator bucketSortComp(Bucket[] buckets, String dir) {\n    FieldComparator[] comps = new FieldComparator[buckets.length];\n    for(int i=0; i<buckets.length; i++) {\n      ComparatorOrder comparatorOrder = ascDescComp(dir);\n      String sortKey = buckets[i].toString();\n      comps[i] = new FieldComparator(sortKey, comparatorOrder);\n    }\n\n    if(comps.length == 1) {\n      return comps[0];\n    } else {\n      return new MultipleFieldComparator(comps);\n    }\n  }\n\n","sourceOld":"  private static StreamComparator bucketSortComp(Bucket[] buckets, String dir) {\n    FieldComparator[] comps = new FieldComparator[buckets.length];\n    for(int i=0; i<buckets.length; i++) {\n      ComparatorOrder comparatorOrder = ascDescComp(dir);\n      String sortKey = buckets[i].toString();\n      comps[i] = new FieldComparator(stripQuotes(sortKey), comparatorOrder);\n    }\n\n    if(comps.length == 1) {\n      return comps[0];\n    } else {\n      return new MultipleFieldComparator(comps);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0891a6931fc352fc7e61f2752ef9add758d3fb89":["e431b0806b8db369da896b66a74e304a49953c7b"],"116fdd6b9e04e18a6547a5650bc0afd3fda020aa":["0891a6931fc352fc7e61f2752ef9add758d3fb89","d984627825732e682759c22df7a3b171a80f3812"],"d984627825732e682759c22df7a3b171a80f3812":["0891a6931fc352fc7e61f2752ef9add758d3fb89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7b2c4e17100e207bc842e56d016b9f91f411304e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e431b0806b8db369da896b66a74e304a49953c7b":["7b2c4e17100e207bc842e56d016b9f91f411304e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa"]},"commit2Childs":{"0891a6931fc352fc7e61f2752ef9add758d3fb89":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa","d984627825732e682759c22df7a3b171a80f3812"],"116fdd6b9e04e18a6547a5650bc0afd3fda020aa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d984627825732e682759c22df7a3b171a80f3812":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b2c4e17100e207bc842e56d016b9f91f411304e"],"7b2c4e17100e207bc842e56d016b9f91f411304e":["e431b0806b8db369da896b66a74e304a49953c7b"],"e431b0806b8db369da896b66a74e304a49953c7b":["0891a6931fc352fc7e61f2752ef9add758d3fb89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}