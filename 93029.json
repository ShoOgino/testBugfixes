{"path":"lucene/highlighter/src/test/org/apache/lucene/search/matchhighlight/TestMatchHighlighter#setup().mjava","commits":[{"id":"930e5c340e08514a7f57a54cf65e2f8f1f90c8f0","date":1599736633,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/matchhighlight/TestMatchHighlighter#setup().mjava","pathOld":"/dev/null","sourceNew":"  @Before\n  public void setup() throws IOException {\n    TYPE_TEXT_POSITIONS = TextField.TYPE_STORED;\n\n    TYPE_TEXT_POSITIONS_OFFSETS = new FieldType(TextField.TYPE_STORED);\n    TYPE_TEXT_POSITIONS_OFFSETS.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);\n    TYPE_TEXT_POSITIONS_OFFSETS.freeze();\n\n    Map<String, Analyzer> fieldAnalyzers = new HashMap<>();\n\n    // Create an analyzer with some synonyms, just to showcase them.\n    SynonymMap synonymMap = buildSynonymMap(new String[][]{\n        {\"moon\\u0000shine\", \"firewater\"},\n        {\"firewater\", \"moon\\u0000shine\"},\n    });\n\n    // Make a non-empty offset gap so that break iterator doesn't go haywire on multivalues\n    // glued together.\n    final int offsetGap = RandomizedTest.randomIntBetween(1, 2);\n    final int positionGap = RandomizedTest.randomFrom(new int[]{0, 1, 100});\n    Analyzer synonymsAnalyzer =\n        new AnalyzerWithGaps(offsetGap, positionGap, new Analyzer() {\n          @Override\n          protected TokenStreamComponents createComponents(String fieldName) {\n            Tokenizer tokenizer = new WhitespaceTokenizer();\n            TokenStream tokenStream = new SynonymGraphFilter(tokenizer, synonymMap, true);\n            return new TokenStreamComponents(tokenizer, tokenStream);\n          }\n        });\n\n    fieldAnalyzers.put(FLD_TEXT1, synonymsAnalyzer);\n    fieldAnalyzers.put(FLD_TEXT2, synonymsAnalyzer);\n\n    analyzer = new PerFieldAnalyzerWrapper(new MissingAnalyzer(), fieldAnalyzers);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"930e5c340e08514a7f57a54cf65e2f8f1f90c8f0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["930e5c340e08514a7f57a54cf65e2f8f1f90c8f0"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["930e5c340e08514a7f57a54cf65e2f8f1f90c8f0"],"930e5c340e08514a7f57a54cf65e2f8f1f90c8f0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}