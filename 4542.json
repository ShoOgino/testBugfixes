{"path":"solr/core/src/java/org/apache/solr/update/SolrIndexWriter#create(String,String,DirectoryFactory,boolean,IndexSchema,SolrIndexConfig,IndexDeletionPolicy,Codec).mjava","commits":[{"id":"54f9a16329716fa08b653c53f1c3dfc6b284d2cc","date":1363905854,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrIndexWriter#create(String,String,DirectoryFactory,boolean,IndexSchema,SolrIndexConfig,IndexDeletionPolicy,Codec).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrIndexWriter#create(String,String,DirectoryFactory,boolean,IndexSchema,SolrIndexConfig,IndexDeletionPolicy,Codec,boolean).mjava","sourceNew":"  public static SolrIndexWriter create(String name, String path, DirectoryFactory directoryFactory, boolean create, IndexSchema schema, SolrIndexConfig config, IndexDeletionPolicy delPolicy, Codec codec) throws IOException {\n\n    SolrIndexWriter w = null;\n    final Directory d = directoryFactory.get(path, DirContext.DEFAULT, config.lockType);\n    try {\n      w = new SolrIndexWriter(name, path, d, create, schema, \n                              config, delPolicy, codec);\n      w.setDirectoryFactory(directoryFactory);\n      return w;\n    } finally {\n      if (null == w && null != d) { \n        directoryFactory.doneWithDirectory(d);\n        directoryFactory.release(d);\n      }\n    }\n  }\n\n","sourceOld":"  public static SolrIndexWriter create(String name, String path, DirectoryFactory directoryFactory, boolean create, IndexSchema schema, SolrIndexConfig config, IndexDeletionPolicy delPolicy, Codec codec, boolean forceNewDirectory) throws IOException {\n\n    SolrIndexWriter w = null;\n    final Directory d = directoryFactory.get(path, DirContext.DEFAULT, config.lockType, forceNewDirectory);\n    try {\n      w = new SolrIndexWriter(name, path, d, create, schema, \n                              config, delPolicy, codec);\n      w.setDirectoryFactory(directoryFactory);\n      return w;\n    } finally {\n      if (null == w && null != d) { \n        directoryFactory.doneWithDirectory(d);\n        directoryFactory.release(d);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0","date":1422781929,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrIndexWriter#create(SolrCore,String,String,DirectoryFactory,boolean,IndexSchema,SolrIndexConfig,IndexDeletionPolicy,Codec).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrIndexWriter#create(String,String,DirectoryFactory,boolean,IndexSchema,SolrIndexConfig,IndexDeletionPolicy,Codec).mjava","sourceNew":"  public static SolrIndexWriter create(SolrCore core, String name, String path, DirectoryFactory directoryFactory, boolean create, IndexSchema schema, SolrIndexConfig config, IndexDeletionPolicy delPolicy, Codec codec) throws IOException {\n\n    SolrIndexWriter w = null;\n    final Directory d = directoryFactory.get(path, DirContext.DEFAULT, config.lockType);\n    try {\n      w = new SolrIndexWriter(core, name, path, d, create, schema, \n                              config, delPolicy, codec);\n      w.setDirectoryFactory(directoryFactory);\n      return w;\n    } finally {\n      if (null == w && null != d) { \n        directoryFactory.doneWithDirectory(d);\n        directoryFactory.release(d);\n      }\n    }\n  }\n\n","sourceOld":"  public static SolrIndexWriter create(String name, String path, DirectoryFactory directoryFactory, boolean create, IndexSchema schema, SolrIndexConfig config, IndexDeletionPolicy delPolicy, Codec codec) throws IOException {\n\n    SolrIndexWriter w = null;\n    final Directory d = directoryFactory.get(path, DirContext.DEFAULT, config.lockType);\n    try {\n      w = new SolrIndexWriter(name, path, d, create, schema, \n                              config, delPolicy, codec);\n      w.setDirectoryFactory(directoryFactory);\n      return w;\n    } finally {\n      if (null == w && null != d) { \n        directoryFactory.doneWithDirectory(d);\n        directoryFactory.release(d);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"54f9a16329716fa08b653c53f1c3dfc6b284d2cc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0"],"5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0":["54f9a16329716fa08b653c53f1c3dfc6b284d2cc"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54f9a16329716fa08b653c53f1c3dfc6b284d2cc"],"54f9a16329716fa08b653c53f1c3dfc6b284d2cc":["5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}