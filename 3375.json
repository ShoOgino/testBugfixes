{"path":"src/test/org/apache/lucene/index/TestParallelReader#single().mjava","commits":[{"id":"4ed0ea2885b7ccb481842fabd599c56b9a0a8e80","date":1115920781,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestParallelReader#single().mjava","pathOld":"/dev/null","sourceNew":"  // Fiels 1-4 indexed together:\n  private Searcher single() throws IOException {\n    Directory dir = new RAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new StandardAnalyzer(), true);\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d72db039743bd6a2da9be6306f57c71654ca1bf6","4e4962d33c7b8f7092842cb4760383123f35092b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d72db039743bd6a2da9be6306f57c71654ca1bf6","date":1173217255,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestParallelReader#single().mjava","pathOld":"src/test/org/apache/lucene/index/TestParallelReader#single().mjava","sourceNew":"  // Fiels 1-4 indexed together:\n  private Searcher single() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new StandardAnalyzer(), true);\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir);\n  }\n\n","sourceOld":"  // Fiels 1-4 indexed together:\n  private Searcher single() throws IOException {\n    Directory dir = new RAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new StandardAnalyzer(), true);\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir);\n  }\n\n","bugFix":["4ed0ea2885b7ccb481842fabd599c56b9a0a8e80"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4e4962d33c7b8f7092842cb4760383123f35092b","date":1185928991,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestParallelReader#single().mjava","pathOld":"src/test/org/apache/lucene/index/TestParallelReader#single().mjava","sourceNew":"  // Fields 1-4 indexed together:\n  private Searcher single() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new StandardAnalyzer(), true);\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir);\n  }\n\n","sourceOld":"  // Fiels 1-4 indexed together:\n  private Searcher single() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new StandardAnalyzer(), true);\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir);\n  }\n\n","bugFix":["4ed0ea2885b7ccb481842fabd599c56b9a0a8e80"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0018e7a0579df5d3de71d0bd878322a7abef04d9","date":1202242049,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestParallelReader#single().mjava","pathOld":"src/test/org/apache/lucene/index/TestParallelReader#single().mjava","sourceNew":"  // Fields 1-4 indexed together:\n  private Searcher single() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new StandardAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir);\n  }\n\n","sourceOld":"  // Fields 1-4 indexed together:\n  private Searcher single() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new StandardAnalyzer(), true);\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","date":1221082732,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestParallelReader#single().mjava","pathOld":"src/test/org/apache/lucene/index/TestParallelReader#single().mjava","sourceNew":"  // Fields 1-4 indexed together:\n  private Searcher single() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new StandardAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir);\n  }\n\n","sourceOld":"  // Fields 1-4 indexed together:\n  private Searcher single() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new StandardAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.TOKENIZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.TOKENIZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestParallelReader#single().mjava","pathOld":"src/test/org/apache/lucene/index/TestParallelReader#single().mjava","sourceNew":"  // Fields 1-4 indexed together:\n  private Searcher single() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new StandardAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","sourceOld":"  // Fields 1-4 indexed together:\n  private Searcher single() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new StandardAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"src/test/org/apache/lucene/index/TestParallelReader#single().mjava","pathOld":"src/test/org/apache/lucene/index/TestParallelReader#single().mjava","sourceNew":"  // Fields 1-4 indexed together:\n  private Searcher single() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new StandardAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","sourceOld":"  // Fields 1-4 indexed together:\n  private Searcher single() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new StandardAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9","date":1256127131,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestParallelReader#single().mjava","pathOld":"src/test/org/apache/lucene/index/TestParallelReader#single().mjava","sourceNew":"  // Fields 1-4 indexed together:\n  private Searcher single() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","sourceOld":"  // Fields 1-4 indexed together:\n  private Searcher single() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new StandardAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestParallelReader#single().mjava","pathOld":"src/test/org/apache/lucene/index/TestParallelReader#single().mjava","sourceNew":"  // Fields 1-4 indexed together:\n  private Searcher single() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new StandardAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","sourceOld":"  // Fields 1-4 indexed together:\n  private Searcher single() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestParallelReader#single().mjava","pathOld":"src/test/org/apache/lucene/index/TestParallelReader#single().mjava","sourceNew":"  // Fields 1-4 indexed together:\n  private Searcher single() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","sourceOld":"  // Fields 1-4 indexed together:\n  private Searcher single() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new StandardAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestParallelReader#single().mjava","pathOld":"src/test/org/apache/lucene/index/TestParallelReader#single().mjava","sourceNew":"  // Fields 1-4 indexed together:\n  private Searcher single() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new StandardAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","sourceOld":"  // Fields 1-4 indexed together:\n  private Searcher single() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestParallelReader#single().mjava","pathOld":"src/test/org/apache/lucene/index/TestParallelReader#single().mjava","sourceNew":"  // Fields 1-4 indexed together:\n  private Searcher single() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT)));\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","sourceOld":"  // Fields 1-4 indexed together:\n  private Searcher single() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new StandardAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single().mjava","pathOld":"src/test/org/apache/lucene/index/TestParallelReader#single().mjava","sourceNew":"  // Fields 1-4 indexed together:\n  private Searcher single() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT)));\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","sourceOld":"  // Fields 1-4 indexed together:\n  private Searcher single() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT)));\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4ed0ea2885b7ccb481842fabd599c56b9a0a8e80":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"0a046c0c310bc77931fc8441bd920053b607dd14":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["4e4962d33c7b8f7092842cb4760383123f35092b"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d72db039743bd6a2da9be6306f57c71654ca1bf6":["4ed0ea2885b7ccb481842fabd599c56b9a0a8e80"],"4e4962d33c7b8f7092842cb4760383123f35092b":["d72db039743bd6a2da9be6306f57c71654ca1bf6"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["0a046c0c310bc77931fc8441bd920053b607dd14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"4ed0ea2885b7ccb481842fabd599c56b9a0a8e80":["d72db039743bd6a2da9be6306f57c71654ca1bf6"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"0a046c0c310bc77931fc8441bd920053b607dd14":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["0a046c0c310bc77931fc8441bd920053b607dd14","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4ed0ea2885b7ccb481842fabd599c56b9a0a8e80"],"d72db039743bd6a2da9be6306f57c71654ca1bf6":["4e4962d33c7b8f7092842cb4760383123f35092b"],"4e4962d33c7b8f7092842cb4760383123f35092b":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}