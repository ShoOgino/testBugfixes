{"path":"lucene/core/src/java/org/apache/lucene/document/DimensionalBinaryField#DimensionalBinaryField(String,byte[],FieldType).mjava","commits":[{"id":"770342641f7b505eaa8dccdc666158bff2419109","date":1449868421,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/DimensionalBinaryField#DimensionalBinaryField(String,byte[],FieldType).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/DimensionalField#DimensionalField(String,byte[],FieldType).mjava","sourceNew":"  /** Expert API */\n  public DimensionalBinaryField(String name, byte[] packedPoint, FieldType type) {\n    super(name, packedPoint, type);\n    if (packedPoint.length != type.dimensionCount() * type.dimensionNumBytes()) {\n      throw new IllegalArgumentException(\"packedPoint is length=\" + packedPoint.length + \" but type.dimensionCount()=\" + type.dimensionCount() + \" and type.dimensionNumBytes()=\" + type.dimensionNumBytes());\n    }\n  }\n\n","sourceOld":"  /** Expert API */\n  public DimensionalField(String name, byte[] packedPoint, FieldType type) {\n    super(name, packedPoint, type);\n    if (packedPoint.length != type.dimensionCount() * type.dimensionNumBytes()) {\n      throw new IllegalArgumentException(\"packedPoint is length=\" + packedPoint.length + \" but type.dimensionCount()=\" + type.dimensionCount() + \" and type.dimensionNumBytes()=\" + type.dimensionNumBytes());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cab7a79353f33d1a94cd307bf33aa5148601ebe6","date":1453391888,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/BinaryPoint#BinaryPoint(String,byte[],FieldType).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/DimensionalBinaryField#DimensionalBinaryField(String,byte[],FieldType).mjava","sourceNew":"  /** Expert API */\n  public BinaryPoint(String name, byte[] packedPoint, FieldType type) {\n    super(name, packedPoint, type);\n    if (packedPoint.length != type.pointDimensionCount() * type.pointNumBytes()) {\n      throw new IllegalArgumentException(\"packedPoint is length=\" + packedPoint.length + \" but type.pointDimensionCount()=\" + type.pointDimensionCount() + \" and type.pointNumBytes()=\" + type.pointNumBytes());\n    }\n  }\n\n","sourceOld":"  /** Expert API */\n  public DimensionalBinaryField(String name, byte[] packedPoint, FieldType type) {\n    super(name, packedPoint, type);\n    if (packedPoint.length != type.dimensionCount() * type.dimensionNumBytes()) {\n      throw new IllegalArgumentException(\"packedPoint is length=\" + packedPoint.length + \" but type.dimensionCount()=\" + type.dimensionCount() + \" and type.dimensionNumBytes()=\" + type.dimensionNumBytes());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["770342641f7b505eaa8dccdc666158bff2419109"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"770342641f7b505eaa8dccdc666158bff2419109":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"]},"commit2Childs":{"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["770342641f7b505eaa8dccdc666158bff2419109"],"770342641f7b505eaa8dccdc666158bff2419109":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}