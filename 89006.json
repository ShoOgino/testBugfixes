{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/ExceptionStream#read().mjava","commits":[{"id":"a55bf71f91aeded06b44ad1abea6666ea168b697","date":1435941127,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/ExceptionStream#read().mjava","pathOld":"/dev/null","sourceNew":"  public Tuple read() {\n    if(openException != null) {\n      //There was an exception during the open.\n      Map fields = new HashMap();\n      fields.put(\"_EXCEPTION_\", openException.getMessage());\n      fields.put(\"EOF\", true);\n      log.error(\"Error while opening Stream\", openException);\n      return new Tuple(fields);\n    }\n\n    try {\n      return stream.read();\n    } catch (Exception e) {\n      Map fields = new HashMap();\n      fields.put(\"_EXCEPTION_\", e.getMessage());\n      fields.put(\"EOF\", true);\n      log.error(\"Error while reading Stream:\" + e);\n      return new Tuple(fields);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8da9a71da64ce12a97dcfcdd912893aeb1fa2981","date":1437510515,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/ExceptionStream#read().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/ExceptionStream#read().mjava","sourceNew":"  public Tuple read() {\n    if(openException != null) {\n      //There was an exception during the open.\n      Map fields = new HashMap();\n      fields.put(\"EXCEPTION\", openException.getMessage());\n      fields.put(\"EOF\", true);\n      SolrException.log(log, openException);\n      return new Tuple(fields);\n    }\n\n    try {\n      return stream.read();\n    } catch (Exception e) {\n      Map fields = new HashMap();\n      fields.put(\"EXCEPTION\", e.getMessage());\n      fields.put(\"EOF\", true);\n      SolrException.log(log, e);\n      return new Tuple(fields);\n    }\n  }\n\n","sourceOld":"  public Tuple read() {\n    if(openException != null) {\n      //There was an exception during the open.\n      Map fields = new HashMap();\n      fields.put(\"_EXCEPTION_\", openException.getMessage());\n      fields.put(\"EOF\", true);\n      log.error(\"Error while opening Stream\", openException);\n      return new Tuple(fields);\n    }\n\n    try {\n      return stream.read();\n    } catch (Exception e) {\n      Map fields = new HashMap();\n      fields.put(\"_EXCEPTION_\", e.getMessage());\n      fields.put(\"EOF\", true);\n      log.error(\"Error while reading Stream:\" + e);\n      return new Tuple(fields);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"804a8d5358fe7b7563b85ee7838714d720b89272","date":1591624987,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/ExceptionStream#read().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/ExceptionStream#read().mjava","sourceNew":"  public Tuple read() {\n    if(openException != null) {\n      //There was an exception during the open.\n      SolrException.log(log, openException);\n      return Tuple.EXCEPTION(openException.getMessage(), true);\n    }\n\n    try {\n      return stream.read();\n    } catch (Exception e) {\n      SolrException.log(log, e);\n      return Tuple.EXCEPTION(e.getMessage(), true);\n    }\n  }\n\n","sourceOld":"  public Tuple read() {\n    if(openException != null) {\n      //There was an exception during the open.\n      Map fields = new HashMap();\n      fields.put(\"EXCEPTION\", openException.getMessage());\n      fields.put(\"EOF\", true);\n      SolrException.log(log, openException);\n      return new Tuple(fields);\n    }\n\n    try {\n      return stream.read();\n    } catch (Exception e) {\n      Map fields = new HashMap();\n      fields.put(\"EXCEPTION\", e.getMessage());\n      fields.put(\"EOF\", true);\n      SolrException.log(log, e);\n      return new Tuple(fields);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a55bf71f91aeded06b44ad1abea6666ea168b697":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8da9a71da64ce12a97dcfcdd912893aeb1fa2981":["a55bf71f91aeded06b44ad1abea6666ea168b697"],"804a8d5358fe7b7563b85ee7838714d720b89272":["8da9a71da64ce12a97dcfcdd912893aeb1fa2981"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["804a8d5358fe7b7563b85ee7838714d720b89272"]},"commit2Childs":{"a55bf71f91aeded06b44ad1abea6666ea168b697":["8da9a71da64ce12a97dcfcdd912893aeb1fa2981"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a55bf71f91aeded06b44ad1abea6666ea168b697"],"8da9a71da64ce12a97dcfcdd912893aeb1fa2981":["804a8d5358fe7b7563b85ee7838714d720b89272"],"804a8d5358fe7b7563b85ee7838714d720b89272":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}