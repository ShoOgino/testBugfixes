{"path":"src/test/org/apache/lucene/store/TestLockFactory#testNativeFSLockReleaseByOtherLock().mjava","commits":[{"id":"60e34c62b11034ddc6f3799b5c9a38cbe6de4042","date":1260964905,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestLockFactory#testNativeFSLockReleaseByOtherLock().mjava","pathOld":"/dev/null","sourceNew":"    public void testNativeFSLockReleaseByOtherLock() throws IOException {\n\n      NativeFSLockFactory f = new NativeFSLockFactory(System.getProperty(\"tempDir\"));\n\n      f.setLockPrefix(\"test\");\n      Lock l = f.makeLock(\"commit\");\n      Lock l2 = f.makeLock(\"commit\");\n\n      assertTrue(\"failed to obtain lock\", l.obtain());\n      try {\n        assertTrue(l2.isLocked());\n        l2.release();\n        fail(\"should not have reached here. LockReleaseFailedException should have been thrown\");\n      } catch (IOException e) {\n        assertTrue(\"Unexpected exception\", e instanceof LockReleaseFailedException);\n      } finally {\n        l.release();\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["0fcdcf196523675146a4df3193e91413533857ab"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1d16275d75dfe0b780ed62df4c811d083187c71a","date":1268583591,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestLockFactory#testNativeFSLockReleaseByOtherLock().mjava","pathOld":"src/test/org/apache/lucene/store/TestLockFactory#testNativeFSLockReleaseByOtherLock().mjava","sourceNew":"    public void testNativeFSLockReleaseByOtherLock() throws IOException {\n\n      NativeFSLockFactory f = new NativeFSLockFactory(TEMP_DIR);\n\n      f.setLockPrefix(\"test\");\n      Lock l = f.makeLock(\"commit\");\n      Lock l2 = f.makeLock(\"commit\");\n\n      assertTrue(\"failed to obtain lock\", l.obtain());\n      try {\n        assertTrue(l2.isLocked());\n        l2.release();\n        fail(\"should not have reached here. LockReleaseFailedException should have been thrown\");\n      } catch (IOException e) {\n        assertTrue(\"Unexpected exception\", e instanceof LockReleaseFailedException);\n      } finally {\n        l.release();\n      }\n    }\n\n","sourceOld":"    public void testNativeFSLockReleaseByOtherLock() throws IOException {\n\n      NativeFSLockFactory f = new NativeFSLockFactory(System.getProperty(\"tempDir\"));\n\n      f.setLockPrefix(\"test\");\n      Lock l = f.makeLock(\"commit\");\n      Lock l2 = f.makeLock(\"commit\");\n\n      assertTrue(\"failed to obtain lock\", l.obtain());\n      try {\n        assertTrue(l2.isLocked());\n        l2.release();\n        fail(\"should not have reached here. LockReleaseFailedException should have been thrown\");\n      } catch (IOException e) {\n        assertTrue(\"Unexpected exception\", e instanceof LockReleaseFailedException);\n      } finally {\n        l.release();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testNativeFSLockReleaseByOtherLock().mjava","pathOld":"src/test/org/apache/lucene/store/TestLockFactory#testNativeFSLockReleaseByOtherLock().mjava","sourceNew":"    public void testNativeFSLockReleaseByOtherLock() throws IOException {\n\n      NativeFSLockFactory f = new NativeFSLockFactory(TEMP_DIR);\n\n      f.setLockPrefix(\"test\");\n      Lock l = f.makeLock(\"commit\");\n      Lock l2 = f.makeLock(\"commit\");\n\n      assertTrue(\"failed to obtain lock\", l.obtain());\n      try {\n        assertTrue(l2.isLocked());\n        l2.release();\n        fail(\"should not have reached here. LockReleaseFailedException should have been thrown\");\n      } catch (IOException e) {\n        assertTrue(\"Unexpected exception\", e instanceof LockReleaseFailedException);\n      } finally {\n        l.release();\n      }\n    }\n\n","sourceOld":"    public void testNativeFSLockReleaseByOtherLock() throws IOException {\n\n      NativeFSLockFactory f = new NativeFSLockFactory(TEMP_DIR);\n\n      f.setLockPrefix(\"test\");\n      Lock l = f.makeLock(\"commit\");\n      Lock l2 = f.makeLock(\"commit\");\n\n      assertTrue(\"failed to obtain lock\", l.obtain());\n      try {\n        assertTrue(l2.isLocked());\n        l2.release();\n        fail(\"should not have reached here. LockReleaseFailedException should have been thrown\");\n      } catch (IOException e) {\n        assertTrue(\"Unexpected exception\", e instanceof LockReleaseFailedException);\n      } finally {\n        l.release();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"60e34c62b11034ddc6f3799b5c9a38cbe6de4042":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1d16275d75dfe0b780ed62df4c811d083187c71a":["60e34c62b11034ddc6f3799b5c9a38cbe6de4042"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1d16275d75dfe0b780ed62df4c811d083187c71a"]},"commit2Childs":{"60e34c62b11034ddc6f3799b5c9a38cbe6de4042":["1d16275d75dfe0b780ed62df4c811d083187c71a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["60e34c62b11034ddc6f3799b5c9a38cbe6de4042"],"1d16275d75dfe0b780ed62df4c811d083187c71a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}