{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter#getHyphenationTree(InputSource).mjava","commits":[{"id":"c8b28a7124e9fa13cdb9b0c79da424c3d05f4217","date":1288533406,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter#getHyphenationTree(InputSource).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a hyphenator tree\n   * \n   * @param hyphenationSource the InputSource pointing to the XML grammar\n   * @return An object representing the hyphenation patterns\n   * @throws Exception\n   */\n  public static HyphenationTree getHyphenationTree(InputSource hyphenationSource)\n      throws Exception {\n    HyphenationTree tree = new HyphenationTree();\n    tree.loadPatterns(hyphenationSource);\n    return tree;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter#getHyphenationTree(InputSource).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a hyphenator tree\n   * \n   * @param hyphenationSource the InputSource pointing to the XML grammar\n   * @return An object representing the hyphenation patterns\n   * @throws Exception\n   */\n  public static HyphenationTree getHyphenationTree(InputSource hyphenationSource)\n      throws Exception {\n    HyphenationTree tree = new HyphenationTree();\n    tree.loadPatterns(hyphenationSource);\n    return tree;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter#getHyphenationTree(InputSource).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a hyphenator tree\n   * \n   * @param hyphenationSource the InputSource pointing to the XML grammar\n   * @return An object representing the hyphenation patterns\n   * @throws Exception\n   */\n  public static HyphenationTree getHyphenationTree(InputSource hyphenationSource)\n      throws Exception {\n    HyphenationTree tree = new HyphenationTree();\n    tree.loadPatterns(hyphenationSource);\n    return tree;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter#getHyphenationTree(InputSource).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter#getHyphenationTree(InputSource).mjava","sourceNew":"  /**\n   * Create a hyphenator tree\n   * \n   * @param hyphenationSource the InputSource pointing to the XML grammar\n   * @return An object representing the hyphenation patterns\n   * @throws Exception\n   */\n  public static HyphenationTree getHyphenationTree(InputSource hyphenationSource)\n      throws Exception {\n    HyphenationTree tree = new HyphenationTree();\n    tree.loadPatterns(hyphenationSource);\n    return tree;\n  }\n\n","sourceOld":"  /**\n   * Create a hyphenator tree\n   * \n   * @param hyphenationSource the InputSource pointing to the XML grammar\n   * @return An object representing the hyphenation patterns\n   * @throws Exception\n   */\n  public static HyphenationTree getHyphenationTree(InputSource hyphenationSource)\n      throws Exception {\n    HyphenationTree tree = new HyphenationTree();\n    tree.loadPatterns(hyphenationSource);\n    return tree;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["c8b28a7124e9fa13cdb9b0c79da424c3d05f4217"],"c8b28a7124e9fa13cdb9b0c79da424c3d05f4217":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85a883878c0af761245ab048babc63d099f835f3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c8b28a7124e9fa13cdb9b0c79da424c3d05f4217"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c8b28a7124e9fa13cdb9b0c79da424c3d05f4217"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c8b28a7124e9fa13cdb9b0c79da424c3d05f4217":["b89678825b68eccaf09e6ab71675fc0b0af1e099","85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c8b28a7124e9fa13cdb9b0c79da424c3d05f4217","85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"85a883878c0af761245ab048babc63d099f835f3":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}