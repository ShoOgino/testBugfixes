{"path":"solr/core/src/java/org/apache/solr/cloud/rule/ReplicaAssigner#getSnitchInfos(CoreContainer,List).mjava","commits":[{"id":"07dbf37ea1062f6f3f4fc7deb3ae385ab837ebc8","date":1431966199,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/rule/ReplicaAssigner#getSnitchInfos(CoreContainer,List).mjava","pathOld":"/dev/null","sourceNew":"  static Map<Class, SnitchInfoImpl> getSnitchInfos(CoreContainer cc, List snitchConf) {\n    Map<Class, SnitchInfoImpl> snitches = new LinkedHashMap<>();\n    if (snitchConf == null) return snitches;\n    for (Object o : snitchConf) {\n      //instantiating explicitly specified snitches\n      String klas = null;\n      Map map = Collections.emptyMap();\n      if (o instanceof Map) {//it can be a Map\n        map = (Map) o;\n        klas = (String) map.get(\"class\");\n        if (klas == null) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"snitch must have  a class attribute\");\n        }\n      } else { //or just the snitch name\n        klas = o.toString();\n      }\n      try {\n        if (klas.indexOf('.') == -1) klas = Snitch.class.getPackage().getName() + \".\" + klas;\n        Snitch inst = cc == null ?\n            (Snitch) Snitch.class.getClassLoader().loadClass(klas).newInstance() :\n            cc.getResourceLoader().newInstance(klas, Snitch.class);\n        snitches.put(inst.getClass(), new SnitchInfoImpl(map, inst, cc));\n      } catch (Exception e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n\n      }\n\n    }\n    return snitches;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec4fc24ecd353171e03bd016c1681cd97476015f","date":1432214672,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/rule/ReplicaAssigner#getSnitchInfos(CoreContainer,List).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/rule/ReplicaAssigner#getSnitchInfos(CoreContainer,List).mjava","sourceNew":"  static Map<Class, SnitchInfoImpl> getSnitchInfos(CoreContainer cc, List snitchConf) {\n    if (snitchConf == null) snitchConf = Collections.emptyList();\n    Map<Class, SnitchInfoImpl> snitches = new LinkedHashMap<>();\n    for (Object o : snitchConf) {\n      //instantiating explicitly specified snitches\n      String klas = null;\n      Map map = Collections.emptyMap();\n      if (o instanceof Map) {//it can be a Map\n        map = (Map) o;\n        klas = (String) map.get(\"class\");\n        if (klas == null) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"snitch must have  a class attribute\");\n        }\n      } else { //or just the snitch name\n        klas = o.toString();\n      }\n      try {\n        if (klas.indexOf('.') == -1) klas = Snitch.class.getPackage().getName() + \".\" + klas;\n        Snitch inst = cc == null ?\n            (Snitch) Snitch.class.getClassLoader().loadClass(klas).newInstance() :\n            cc.getResourceLoader().newInstance(klas, Snitch.class);\n        snitches.put(inst.getClass(), new SnitchInfoImpl(map, inst, cc));\n      } catch (Exception e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n\n      }\n\n    }\n    return snitches;\n  }\n\n","sourceOld":"  static Map<Class, SnitchInfoImpl> getSnitchInfos(CoreContainer cc, List snitchConf) {\n    Map<Class, SnitchInfoImpl> snitches = new LinkedHashMap<>();\n    if (snitchConf == null) return snitches;\n    for (Object o : snitchConf) {\n      //instantiating explicitly specified snitches\n      String klas = null;\n      Map map = Collections.emptyMap();\n      if (o instanceof Map) {//it can be a Map\n        map = (Map) o;\n        klas = (String) map.get(\"class\");\n        if (klas == null) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"snitch must have  a class attribute\");\n        }\n      } else { //or just the snitch name\n        klas = o.toString();\n      }\n      try {\n        if (klas.indexOf('.') == -1) klas = Snitch.class.getPackage().getName() + \".\" + klas;\n        Snitch inst = cc == null ?\n            (Snitch) Snitch.class.getClassLoader().loadClass(klas).newInstance() :\n            cc.getResourceLoader().newInstance(klas, Snitch.class);\n        snitches.put(inst.getClass(), new SnitchInfoImpl(map, inst, cc));\n      } catch (Exception e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n\n      }\n\n    }\n    return snitches;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6397103f7076f0b5ee4edf5b3a63c750a072ff65","date":1510231708,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/rule/ReplicaAssigner#getSnitchInfos(SolrCloudManager,List).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/rule/ReplicaAssigner#getSnitchInfos(CoreContainer,List).mjava","sourceNew":"  static Map<Class, SnitchInfoImpl> getSnitchInfos(SolrCloudManager cloudManager, List snitchConf) {\n    if (snitchConf == null) snitchConf = Collections.emptyList();\n    Map<Class, SnitchInfoImpl> snitches = new LinkedHashMap<>();\n    for (Object o : snitchConf) {\n      //instantiating explicitly specified snitches\n      String klas = null;\n      Map map = Collections.emptyMap();\n      if (o instanceof Map) {//it can be a Map\n        map = (Map) o;\n        klas = (String) map.get(\"class\");\n        if (klas == null) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"snitch must have  a class attribute\");\n        }\n      } else { //or just the snitch name\n        klas = o.toString();\n      }\n      try {\n        if (klas.indexOf('.') == -1) klas = Snitch.class.getPackage().getName() + \".\" + klas;\n        Snitch inst =\n            (Snitch) Snitch.class.getClassLoader().loadClass(klas).newInstance() ;\n        snitches.put(inst.getClass(), new SnitchInfoImpl(map, inst, cloudManager));\n      } catch (Exception e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n\n      }\n\n    }\n    return snitches;\n  }\n\n","sourceOld":"  static Map<Class, SnitchInfoImpl> getSnitchInfos(CoreContainer cc, List snitchConf) {\n    if (snitchConf == null) snitchConf = Collections.emptyList();\n    Map<Class, SnitchInfoImpl> snitches = new LinkedHashMap<>();\n    for (Object o : snitchConf) {\n      //instantiating explicitly specified snitches\n      String klas = null;\n      Map map = Collections.emptyMap();\n      if (o instanceof Map) {//it can be a Map\n        map = (Map) o;\n        klas = (String) map.get(\"class\");\n        if (klas == null) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"snitch must have  a class attribute\");\n        }\n      } else { //or just the snitch name\n        klas = o.toString();\n      }\n      try {\n        if (klas.indexOf('.') == -1) klas = Snitch.class.getPackage().getName() + \".\" + klas;\n        Snitch inst = cc == null ?\n            (Snitch) Snitch.class.getClassLoader().loadClass(klas).newInstance() :\n            cc.getResourceLoader().newInstance(klas, Snitch.class);\n        snitches.put(inst.getClass(), new SnitchInfoImpl(map, inst, cc));\n      } catch (Exception e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n\n      }\n\n    }\n    return snitches;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6397103f7076f0b5ee4edf5b3a63c750a072ff65":["ec4fc24ecd353171e03bd016c1681cd97476015f"],"ec4fc24ecd353171e03bd016c1681cd97476015f":["07dbf37ea1062f6f3f4fc7deb3ae385ab837ebc8"],"07dbf37ea1062f6f3f4fc7deb3ae385ab837ebc8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6397103f7076f0b5ee4edf5b3a63c750a072ff65"]},"commit2Childs":{"6397103f7076f0b5ee4edf5b3a63c750a072ff65":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ec4fc24ecd353171e03bd016c1681cd97476015f":["6397103f7076f0b5ee4edf5b3a63c750a072ff65"],"07dbf37ea1062f6f3f4fc7deb3ae385ab837ebc8":["ec4fc24ecd353171e03bd016c1681cd97476015f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["07dbf37ea1062f6f3f4fc7deb3ae385ab837ebc8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}