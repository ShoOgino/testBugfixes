{"path":"lucene/core/src/test/org/apache/lucene/util/TestPagedBytes#testRamBytesUsed().mjava","commits":[{"id":"d943163030bbd7a9caf93cb5fea92257390a2a99","date":1403094254,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestPagedBytes#testRamBytesUsed().mjava","pathOld":"/dev/null","sourceNew":"  public void testRamBytesUsed() {\n    final int blockBits = TestUtil.nextInt(random(), 4, 22);\n    PagedBytes b = new PagedBytes(blockBits);\n    final int totalBytes = random().nextInt(10000);\n    for (long pointer = 0; pointer < totalBytes; ) {\n      BytesRef bytes = new BytesRef(TestUtil.randomSimpleString(random(), 10));\n      pointer = b.copyUsingLengthPrefix(bytes);\n    }\n    assertEquals(RamUsageTester.sizeOf(b), b.ramBytesUsed());\n    final PagedBytes.Reader reader = b.freeze(random().nextBoolean());\n    assertEquals(RamUsageTester.sizeOf(reader), reader.ramBytesUsed());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e57c73924f3b8c19defa62e96bfa34a4922d49c2","date":1403106358,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestPagedBytes#testRamBytesUsed().mjava","pathOld":"/dev/null","sourceNew":"  public void testRamBytesUsed() {\n    final int blockBits = TestUtil.nextInt(random(), 4, 22);\n    PagedBytes b = new PagedBytes(blockBits);\n    final int totalBytes = random().nextInt(10000);\n    for (long pointer = 0; pointer < totalBytes; ) {\n      BytesRef bytes = new BytesRef(TestUtil.randomSimpleString(random(), 10));\n      pointer = b.copyUsingLengthPrefix(bytes);\n    }\n    assertEquals(RamUsageTester.sizeOf(b), b.ramBytesUsed());\n    final PagedBytes.Reader reader = b.freeze(random().nextBoolean());\n    assertEquals(RamUsageTester.sizeOf(reader), reader.ramBytesUsed());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"282412d91b33b1a7f2efd2610399fe03045d7d2c","date":1403134999,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestPagedBytes#testRamBytesUsed().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestPagedBytes#testRamBytesUsed().mjava","sourceNew":"  public void testRamBytesUsed() {\n    final int blockBits = TestUtil.nextInt(random(), 4, 22);\n    PagedBytes b = new PagedBytes(blockBits);\n    final int totalBytes = random().nextInt(10000);\n    for (long pointer = 0; pointer < totalBytes; ) {\n      BytesRef bytes = new BytesRef(TestUtil.randomSimpleString(random(), 10));\n      pointer = b.copyUsingLengthPrefix(bytes);\n    }\n    assertEquals(RamUsageTester.sizeOf(b), b.ramBytesUsed());\n    final PagedBytes.Reader reader = b.freeze(random().nextBoolean());\n    assertEquals(RamUsageTester.sizeOf(b), b.ramBytesUsed());\n    assertEquals(RamUsageTester.sizeOf(reader), reader.ramBytesUsed());\n  }\n\n","sourceOld":"  public void testRamBytesUsed() {\n    final int blockBits = TestUtil.nextInt(random(), 4, 22);\n    PagedBytes b = new PagedBytes(blockBits);\n    final int totalBytes = random().nextInt(10000);\n    for (long pointer = 0; pointer < totalBytes; ) {\n      BytesRef bytes = new BytesRef(TestUtil.randomSimpleString(random(), 10));\n      pointer = b.copyUsingLengthPrefix(bytes);\n    }\n    assertEquals(RamUsageTester.sizeOf(b), b.ramBytesUsed());\n    final PagedBytes.Reader reader = b.freeze(random().nextBoolean());\n    assertEquals(RamUsageTester.sizeOf(reader), reader.ramBytesUsed());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"282412d91b33b1a7f2efd2610399fe03045d7d2c":["d943163030bbd7a9caf93cb5fea92257390a2a99"],"e57c73924f3b8c19defa62e96bfa34a4922d49c2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d943163030bbd7a9caf93cb5fea92257390a2a99"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d943163030bbd7a9caf93cb5fea92257390a2a99":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["282412d91b33b1a7f2efd2610399fe03045d7d2c"]},"commit2Childs":{"282412d91b33b1a7f2efd2610399fe03045d7d2c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e57c73924f3b8c19defa62e96bfa34a4922d49c2":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e57c73924f3b8c19defa62e96bfa34a4922d49c2","d943163030bbd7a9caf93cb5fea92257390a2a99"],"d943163030bbd7a9caf93cb5fea92257390a2a99":["282412d91b33b1a7f2efd2610399fe03045d7d2c","e57c73924f3b8c19defa62e96bfa34a4922d49c2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e57c73924f3b8c19defa62e96bfa34a4922d49c2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}