{"path":"solr/core/src/java/org/apache/solr/security/PKIAuthenticationPlugin#decipherData(String,String).mjava","commits":[{"id":"b3a34dae868734612eb6329aa0ef754f30bd2036","date":1438783154,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/PKIAuthenticationPlugin#decipherData(String,String).mjava","pathOld":"/dev/null","sourceNew":"  private byte[] decipherData(String nodeName, String cipherBase64) {\n    boolean freshKey = false;\n    PublicKey key = keyCache.get(nodeName);\n    if (key == null) {\n      key = getRemotePublicKey(nodeName);\n      freshKey = true;\n    }\n\n    try {\n      return CryptoKeys.decryptRSA(Base64.base64ToByteArray(cipherBase64), key);\n    } catch (InvalidKeyException e) {\n      if (!freshKey) {\n        key = getRemotePublicKey(nodeName);\n        if (key == null) {\n          return null;\n        }\n        try {\n          return CryptoKeys.decryptRSA(Base64.base64ToByteArray(cipherBase64), key);\n        } catch (Exception e1) {\n          log.error(\"Error decrypting\");\n          return null;\n        }\n      }\n\n    } catch (Exception e) {\n      log.error(\"Error decrypting\");\n      return null;\n    }\n\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e76c7a05748b87468b5ccbcf325482013e002a3d","date":1448547807,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/security/PKIAuthenticationPlugin#decipherData(String,String).mjava","sourceNew":null,"sourceOld":"  private byte[] decipherData(String nodeName, String cipherBase64) {\n    boolean freshKey = false;\n    PublicKey key = keyCache.get(nodeName);\n    if (key == null) {\n      key = getRemotePublicKey(nodeName);\n      freshKey = true;\n    }\n\n    try {\n      return CryptoKeys.decryptRSA(Base64.base64ToByteArray(cipherBase64), key);\n    } catch (InvalidKeyException e) {\n      if (!freshKey) {\n        key = getRemotePublicKey(nodeName);\n        if (key == null) {\n          return null;\n        }\n        try {\n          return CryptoKeys.decryptRSA(Base64.base64ToByteArray(cipherBase64), key);\n        } catch (Exception e1) {\n          log.error(\"Error decrypting\");\n          return null;\n        }\n      }\n\n    } catch (Exception e) {\n      log.error(\"Error decrypting\");\n      return null;\n    }\n\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e76c7a05748b87468b5ccbcf325482013e002a3d":["b3a34dae868734612eb6329aa0ef754f30bd2036"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b3a34dae868734612eb6329aa0ef754f30bd2036":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e76c7a05748b87468b5ccbcf325482013e002a3d"]},"commit2Childs":{"e76c7a05748b87468b5ccbcf325482013e002a3d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b3a34dae868734612eb6329aa0ef754f30bd2036"],"b3a34dae868734612eb6329aa0ef754f30bd2036":["e76c7a05748b87468b5ccbcf325482013e002a3d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}