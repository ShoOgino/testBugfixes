{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testWrongIndexFieldName().mjava","commits":[{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testWrongIndexFieldName().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetCounts#testWrongIndexFieldName().mjava","sourceNew":"  public void testWrongIndexFieldName() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"a\", \"$facets2\");\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    // Uses default $facets field:\n    Facets facets;\n    if (random().nextBoolean()) {\n      facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    } else {\n      OrdinalsReader ordsReader = new DocValuesOrdinalsReader();\n      if (random().nextBoolean()) {\n        ordsReader = new CachedOrdinalsReader(ordsReader);\n      }\n      facets = new TaxonomyFacetCounts(ordsReader, taxoReader, config, c);\n    }\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n    assertTrue(results.isEmpty());\n\n    try {\n      facets.getSpecificValue(\"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    try {\n      facets.getTopChildren(10, \"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","sourceOld":"  public void testWrongIndexFieldName() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"a\", \"$facets2\");\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    // Uses default $facets field:\n    Facets facets;\n    if (random().nextBoolean()) {\n      facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    } else {\n      OrdinalsReader ordsReader = new DocValuesOrdinalsReader();\n      if (random().nextBoolean()) {\n        ordsReader = new CachedOrdinalsReader(ordsReader);\n      }\n      facets = new TaxonomyFacetCounts(ordsReader, taxoReader, config, c);\n    }\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n    assertTrue(results.isEmpty());\n\n    try {\n      facets.getSpecificValue(\"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    try {\n      facets.getTopChildren(10, \"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testWrongIndexFieldName().mjava","pathOld":"/dev/null","sourceNew":"  public void testWrongIndexFieldName() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"a\", \"$facets2\");\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    // Uses default $facets field:\n    Facets facets;\n    if (random().nextBoolean()) {\n      facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    } else {\n      OrdinalsReader ordsReader = new DocValuesOrdinalsReader();\n      if (random().nextBoolean()) {\n        ordsReader = new CachedOrdinalsReader(ordsReader);\n      }\n      facets = new TaxonomyFacetCounts(ordsReader, taxoReader, config, c);\n    }\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n    assertTrue(results.isEmpty());\n\n    try {\n      facets.getSpecificValue(\"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    try {\n      facets.getTopChildren(10, \"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testWrongIndexFieldName().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testWrongIndexFieldName().mjava","sourceNew":"  public void testWrongIndexFieldName() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"a\", \"$facets2\");\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    // Uses default $facets field:\n    Facets facets;\n    if (random().nextBoolean()) {\n      facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    } else {\n      OrdinalsReader ordsReader = new DocValuesOrdinalsReader();\n      if (random().nextBoolean()) {\n        ordsReader = new CachedOrdinalsReader(ordsReader);\n      }\n      facets = new TaxonomyFacetCounts(ordsReader, taxoReader, config, c);\n    }\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n    assertTrue(results.isEmpty());\n\n    try {\n      facets.getSpecificValue(\"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    try {\n      facets.getTopChildren(10, \"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    writer.shutdown();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","sourceOld":"  public void testWrongIndexFieldName() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"a\", \"$facets2\");\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    // Uses default $facets field:\n    Facets facets;\n    if (random().nextBoolean()) {\n      facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    } else {\n      OrdinalsReader ordsReader = new DocValuesOrdinalsReader();\n      if (random().nextBoolean()) {\n        ordsReader = new CachedOrdinalsReader(ordsReader);\n      }\n      facets = new TaxonomyFacetCounts(ordsReader, taxoReader, config, c);\n    }\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n    assertTrue(results.isEmpty());\n\n    try {\n      facets.getSpecificValue(\"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    try {\n      facets.getTopChildren(10, \"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testWrongIndexFieldName().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testWrongIndexFieldName().mjava","sourceNew":"  public void testWrongIndexFieldName() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"a\", \"$facets2\");\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    // Uses default $facets field:\n    Facets facets;\n    if (random().nextBoolean()) {\n      facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    } else {\n      OrdinalsReader ordsReader = new DocValuesOrdinalsReader();\n      if (random().nextBoolean()) {\n        ordsReader = new CachedOrdinalsReader(ordsReader);\n      }\n      facets = new TaxonomyFacetCounts(ordsReader, taxoReader, config, c);\n    }\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n    assertTrue(results.isEmpty());\n\n    try {\n      facets.getSpecificValue(\"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    try {\n      facets.getTopChildren(10, \"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","sourceOld":"  public void testWrongIndexFieldName() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"a\", \"$facets2\");\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    // Uses default $facets field:\n    Facets facets;\n    if (random().nextBoolean()) {\n      facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    } else {\n      OrdinalsReader ordsReader = new DocValuesOrdinalsReader();\n      if (random().nextBoolean()) {\n        ordsReader = new CachedOrdinalsReader(ordsReader);\n      }\n      facets = new TaxonomyFacetCounts(ordsReader, taxoReader, config, c);\n    }\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n    assertTrue(results.isEmpty());\n\n    try {\n      facets.getSpecificValue(\"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    try {\n      facets.getTopChildren(10, \"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    writer.shutdown();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testWrongIndexFieldName().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testWrongIndexFieldName().mjava","sourceNew":"  public void testWrongIndexFieldName() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"a\", \"$facets2\");\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    // Uses default $facets field:\n    Facets facets;\n    if (random().nextBoolean()) {\n      facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    } else {\n      OrdinalsReader ordsReader = new DocValuesOrdinalsReader();\n      if (random().nextBoolean()) {\n        ordsReader = new CachedOrdinalsReader(ordsReader);\n      }\n      facets = new TaxonomyFacetCounts(ordsReader, taxoReader, config, c);\n    }\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n    assertTrue(results.isEmpty());\n\n    expectThrows(IllegalArgumentException.class, () -> {\n      facets.getSpecificValue(\"a\");\n    });\n\n    expectThrows(IllegalArgumentException.class, () -> {\n      facets.getTopChildren(10, \"a\");\n    });\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","sourceOld":"  public void testWrongIndexFieldName() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"a\", \"$facets2\");\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    // Uses default $facets field:\n    Facets facets;\n    if (random().nextBoolean()) {\n      facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    } else {\n      OrdinalsReader ordsReader = new DocValuesOrdinalsReader();\n      if (random().nextBoolean()) {\n        ordsReader = new CachedOrdinalsReader(ordsReader);\n      }\n      facets = new TaxonomyFacetCounts(ordsReader, taxoReader, config, c);\n    }\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n    assertTrue(results.isEmpty());\n\n    try {\n      facets.getSpecificValue(\"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    try {\n      facets.getTopChildren(10, \"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","bugFix":["18edd2e3f5560087a37442fa424cbbed7c295ebc"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b8b2bc4b8b503cc0b5743b19445798c62069e4d","date":1477390943,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testWrongIndexFieldName().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testWrongIndexFieldName().mjava","sourceNew":"  public void testWrongIndexFieldName() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"a\", \"$facets2\");\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    // Uses default $facets field:\n    Facets facets;\n    if (random().nextBoolean()) {\n      facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    } else {\n      OrdinalsReader ordsReader = new DocValuesOrdinalsReader();\n      if (random().nextBoolean()) {\n        ordsReader = new CachedOrdinalsReader(ordsReader);\n      }\n      facets = new TaxonomyFacetCounts(ordsReader, taxoReader, config, c);\n    }\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n    assertTrue(results.isEmpty());\n\n    expectThrows(IllegalArgumentException.class, () -> {\n      facets.getSpecificValue(\"a\");\n    });\n\n    expectThrows(IllegalArgumentException.class, () -> {\n      facets.getTopChildren(10, \"a\");\n    });\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","sourceOld":"  public void testWrongIndexFieldName() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"a\", \"$facets2\");\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    // Uses default $facets field:\n    Facets facets;\n    if (random().nextBoolean()) {\n      facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    } else {\n      OrdinalsReader ordsReader = new DocValuesOrdinalsReader();\n      if (random().nextBoolean()) {\n        ordsReader = new CachedOrdinalsReader(ordsReader);\n      }\n      facets = new TaxonomyFacetCounts(ordsReader, taxoReader, config, c);\n    }\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n    assertTrue(results.isEmpty());\n\n    expectThrows(IllegalArgumentException.class, () -> {\n      facets.getSpecificValue(\"a\");\n    });\n\n    expectThrows(IllegalArgumentException.class, () -> {\n      facets.getTopChildren(10, \"a\");\n    });\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60b61628d1912768f51eccaa8ead5a5a32ab34c6","date":1477427681,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testWrongIndexFieldName().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testWrongIndexFieldName().mjava","sourceNew":"  public void testWrongIndexFieldName() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"a\", \"$facets2\");\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    // Uses default $facets field:\n    Facets facets;\n    if (random().nextBoolean()) {\n      facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    } else {\n      OrdinalsReader ordsReader = new DocValuesOrdinalsReader();\n      if (random().nextBoolean()) {\n        ordsReader = new CachedOrdinalsReader(ordsReader);\n      }\n      facets = new TaxonomyFacetCounts(ordsReader, taxoReader, config, c);\n    }\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n    assertTrue(results.isEmpty());\n\n    expectThrows(IllegalArgumentException.class, () -> {\n      facets.getSpecificValue(\"a\");\n    });\n\n    expectThrows(IllegalArgumentException.class, () -> {\n      facets.getTopChildren(10, \"a\");\n    });\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","sourceOld":"  public void testWrongIndexFieldName() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"a\", \"$facets2\");\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    // Uses default $facets field:\n    Facets facets;\n    if (random().nextBoolean()) {\n      facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    } else {\n      OrdinalsReader ordsReader = new DocValuesOrdinalsReader();\n      if (random().nextBoolean()) {\n        ordsReader = new CachedOrdinalsReader(ordsReader);\n      }\n      facets = new TaxonomyFacetCounts(ordsReader, taxoReader, config, c);\n    }\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n    assertTrue(results.isEmpty());\n\n    expectThrows(IllegalArgumentException.class, () -> {\n      facets.getSpecificValue(\"a\");\n    });\n\n    expectThrows(IllegalArgumentException.class, () -> {\n      facets.getTopChildren(10, \"a\");\n    });\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testWrongIndexFieldName().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testWrongIndexFieldName().mjava","sourceNew":"  public void testWrongIndexFieldName() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"a\", \"$facets2\");\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    // Uses default $facets field:\n    Facets facets;\n    if (random().nextBoolean()) {\n      facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    } else {\n      OrdinalsReader ordsReader = new DocValuesOrdinalsReader();\n      if (random().nextBoolean()) {\n        ordsReader = new CachedOrdinalsReader(ordsReader);\n      }\n      facets = new TaxonomyFacetCounts(ordsReader, taxoReader, config, c);\n    }\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n    assertTrue(results.isEmpty());\n\n    expectThrows(IllegalArgumentException.class, () -> {\n      facets.getSpecificValue(\"a\");\n    });\n\n    expectThrows(IllegalArgumentException.class, () -> {\n      facets.getTopChildren(10, \"a\");\n    });\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","sourceOld":"  public void testWrongIndexFieldName() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"a\", \"$facets2\");\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    // Uses default $facets field:\n    Facets facets;\n    if (random().nextBoolean()) {\n      facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    } else {\n      OrdinalsReader ordsReader = new DocValuesOrdinalsReader();\n      if (random().nextBoolean()) {\n        ordsReader = new CachedOrdinalsReader(ordsReader);\n      }\n      facets = new TaxonomyFacetCounts(ordsReader, taxoReader, config, c);\n    }\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n    assertTrue(results.isEmpty());\n\n    expectThrows(IllegalArgumentException.class, () -> {\n      facets.getSpecificValue(\"a\");\n    });\n\n    expectThrows(IllegalArgumentException.class, () -> {\n      facets.getTopChildren(10, \"a\");\n    });\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60b61628d1912768f51eccaa8ead5a5a32ab34c6":["05fe562aa248790944d43cdd478f512572835ba0","4b8b2bc4b8b503cc0b5743b19445798c62069e4d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["05fe562aa248790944d43cdd478f512572835ba0","60b61628d1912768f51eccaa8ead5a5a32ab34c6"],"05fe562aa248790944d43cdd478f512572835ba0":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"4edc984f0f4ac77c37e48ace2932f780f888453c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4b8b2bc4b8b503cc0b5743b19445798c62069e4d":["05fe562aa248790944d43cdd478f512572835ba0"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4edc984f0f4ac77c37e48ace2932f780f888453c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["60b61628d1912768f51eccaa8ead5a5a32ab34c6"]},"commit2Childs":{"60b61628d1912768f51eccaa8ead5a5a32ab34c6":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4edc984f0f4ac77c37e48ace2932f780f888453c","3cc728b07df73b197e6d940d27f9b08b63918f13"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"05fe562aa248790944d43cdd478f512572835ba0":["60b61628d1912768f51eccaa8ead5a5a32ab34c6","80d0e6d59ae23f4a6f30eaf40bfb40742300287f","4b8b2bc4b8b503cc0b5743b19445798c62069e4d"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["05fe562aa248790944d43cdd478f512572835ba0"],"4edc984f0f4ac77c37e48ace2932f780f888453c":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"4b8b2bc4b8b503cc0b5743b19445798c62069e4d":["60b61628d1912768f51eccaa8ead5a5a32ab34c6"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}