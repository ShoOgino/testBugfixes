{"path":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testDefaultFSLockFactoryPrefix().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testDefaultFSLockFactoryPrefix().mjava","pathOld":"src/test/org/apache/lucene/store/TestLockFactory#testDefaultFSLockFactoryPrefix().mjava","sourceNew":"    // Verify: default LockFactory has no prefix (ie\n    // write.lock is stored in index):\n    public void testDefaultFSLockFactoryPrefix() throws IOException {\n\n      // Make sure we get null prefix:\n      File dirName = _TestUtil.getTempDir(\"TestLockFactory.10\");\n      Directory dir = FSDirectory.open(dirName);\n\n      String prefix = dir.getLockFactory().getLockPrefix();\n\n      assertTrue(\"Default lock prefix should be null\", null == prefix);\n\n      _TestUtil.rmDir(dirName);\n    }\n\n","sourceOld":"    // Verify: default LockFactory has no prefix (ie\n    // write.lock is stored in index):\n    public void testDefaultFSLockFactoryPrefix() throws IOException {\n\n      // Make sure we get null prefix:\n      File dirName = _TestUtil.getTempDir(\"TestLockFactory.10\");\n      Directory dir = FSDirectory.open(dirName);\n\n      String prefix = dir.getLockFactory().getLockPrefix();\n\n      assertTrue(\"Default lock prefix should be null\", null == prefix);\n\n      _TestUtil.rmDir(dirName);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a13a126d15299d5c1e117ea99ddae6fb0fa3f209","date":1291909583,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testDefaultFSLockFactoryPrefix().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testDefaultFSLockFactoryPrefix().mjava","sourceNew":"    // Verify: default LockFactory has no prefix (ie\n    // write.lock is stored in index):\n    public void testDefaultFSLockFactoryPrefix() throws IOException {\n\n      // Make sure we get null prefix:\n      File dirName = _TestUtil.getTempDir(\"TestLockFactory.10\");\n      Directory dir = newFSDirectory(dirName);\n\n      String prefix = dir.getLockFactory().getLockPrefix();\n\n      assertTrue(\"Default lock prefix should be null\", null == prefix);\n\n      dir.close();\n      _TestUtil.rmDir(dirName);\n    }\n\n","sourceOld":"    // Verify: default LockFactory has no prefix (ie\n    // write.lock is stored in index):\n    public void testDefaultFSLockFactoryPrefix() throws IOException {\n\n      // Make sure we get null prefix:\n      File dirName = _TestUtil.getTempDir(\"TestLockFactory.10\");\n      Directory dir = FSDirectory.open(dirName);\n\n      String prefix = dir.getLockFactory().getLockPrefix();\n\n      assertTrue(\"Default lock prefix should be null\", null == prefix);\n\n      _TestUtil.rmDir(dirName);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testDefaultFSLockFactoryPrefix().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testDefaultFSLockFactoryPrefix().mjava","sourceNew":"    // Verify: default LockFactory has no prefix (ie\n    // write.lock is stored in index):\n    public void testDefaultFSLockFactoryPrefix() throws IOException {\n\n      // Make sure we get null prefix:\n      File dirName = _TestUtil.getTempDir(\"TestLockFactory.10\");\n      Directory dir = newFSDirectory(dirName);\n\n      String prefix = dir.getLockFactory().getLockPrefix();\n\n      assertTrue(\"Default lock prefix should be null\", null == prefix);\n\n      dir.close();\n      _TestUtil.rmDir(dirName);\n    }\n\n","sourceOld":"    // Verify: default LockFactory has no prefix (ie\n    // write.lock is stored in index):\n    public void testDefaultFSLockFactoryPrefix() throws IOException {\n\n      // Make sure we get null prefix:\n      File dirName = _TestUtil.getTempDir(\"TestLockFactory.10\");\n      Directory dir = FSDirectory.open(dirName);\n\n      String prefix = dir.getLockFactory().getLockPrefix();\n\n      assertTrue(\"Default lock prefix should be null\", null == prefix);\n\n      _TestUtil.rmDir(dirName);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testDefaultFSLockFactoryPrefix().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testDefaultFSLockFactoryPrefix().mjava","sourceNew":"    // Verify: default LockFactory has no prefix (ie\n    // write.lock is stored in index):\n    public void testDefaultFSLockFactoryPrefix() throws IOException {\n\n      // Make sure we get null prefix:\n      File dirName = _TestUtil.getTempDir(\"TestLockFactory.10\");\n      Directory dir = newFSDirectory(dirName);\n\n      String prefix = dir.getLockFactory().getLockPrefix();\n\n      assertTrue(\"Default lock prefix should be null\", null == prefix);\n\n      dir.close();\n      _TestUtil.rmDir(dirName);\n    }\n\n","sourceOld":"    // Verify: default LockFactory has no prefix (ie\n    // write.lock is stored in index):\n    public void testDefaultFSLockFactoryPrefix() throws IOException {\n\n      // Make sure we get null prefix:\n      File dirName = _TestUtil.getTempDir(\"TestLockFactory.10\");\n      Directory dir = FSDirectory.open(dirName);\n\n      String prefix = dir.getLockFactory().getLockPrefix();\n\n      assertTrue(\"Default lock prefix should be null\", null == prefix);\n\n      _TestUtil.rmDir(dirName);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"efb7a19703a037c29e30440260d393500febc1f4","date":1306648116,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testDefaultFSLockFactoryPrefix().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testDefaultFSLockFactoryPrefix().mjava","sourceNew":"    // Verify: default LockFactory has no prefix (ie\n    // write.lock is stored in index):\n    public void testDefaultFSLockFactoryPrefix() throws IOException {\n\n      // Make sure we get null prefix, which wont happen if setLockFactory is ever called.\n      File dirName = _TestUtil.getTempDir(\"TestLockFactory.10\");\n\n      Directory dir = new SimpleFSDirectory(dirName);\n      assertNull(\"Default lock prefix should be null\", dir.getLockFactory().getLockPrefix());\n      dir.close();\n      \n      dir = new MMapDirectory(dirName);\n      assertNull(\"Default lock prefix should be null\", dir.getLockFactory().getLockPrefix());\n      dir.close();\n      \n      dir = new NIOFSDirectory(dirName);\n      assertNull(\"Default lock prefix should be null\", dir.getLockFactory().getLockPrefix());\n      dir.close();\n \n      _TestUtil.rmDir(dirName);\n    }\n\n","sourceOld":"    // Verify: default LockFactory has no prefix (ie\n    // write.lock is stored in index):\n    public void testDefaultFSLockFactoryPrefix() throws IOException {\n\n      // Make sure we get null prefix:\n      File dirName = _TestUtil.getTempDir(\"TestLockFactory.10\");\n      Directory dir = newFSDirectory(dirName);\n\n      String prefix = dir.getLockFactory().getLockPrefix();\n\n      assertTrue(\"Default lock prefix should be null\", null == prefix);\n\n      dir.close();\n      _TestUtil.rmDir(dirName);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testDefaultFSLockFactoryPrefix().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testDefaultFSLockFactoryPrefix().mjava","sourceNew":"    // Verify: default LockFactory has no prefix (ie\n    // write.lock is stored in index):\n    public void testDefaultFSLockFactoryPrefix() throws IOException {\n\n      // Make sure we get null prefix, which wont happen if setLockFactory is ever called.\n      File dirName = _TestUtil.getTempDir(\"TestLockFactory.10\");\n\n      Directory dir = new SimpleFSDirectory(dirName);\n      assertNull(\"Default lock prefix should be null\", dir.getLockFactory().getLockPrefix());\n      dir.close();\n      \n      dir = new MMapDirectory(dirName);\n      assertNull(\"Default lock prefix should be null\", dir.getLockFactory().getLockPrefix());\n      dir.close();\n      \n      dir = new NIOFSDirectory(dirName);\n      assertNull(\"Default lock prefix should be null\", dir.getLockFactory().getLockPrefix());\n      dir.close();\n \n      _TestUtil.rmDir(dirName);\n    }\n\n","sourceOld":"    // Verify: default LockFactory has no prefix (ie\n    // write.lock is stored in index):\n    public void testDefaultFSLockFactoryPrefix() throws IOException {\n\n      // Make sure we get null prefix:\n      File dirName = _TestUtil.getTempDir(\"TestLockFactory.10\");\n      Directory dir = newFSDirectory(dirName);\n\n      String prefix = dir.getLockFactory().getLockPrefix();\n\n      assertTrue(\"Default lock prefix should be null\", null == prefix);\n\n      dir.close();\n      _TestUtil.rmDir(dirName);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testDefaultFSLockFactoryPrefix().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testDefaultFSLockFactoryPrefix().mjava","sourceNew":"    // Verify: default LockFactory has no prefix (ie\n    // write.lock is stored in index):\n    public void testDefaultFSLockFactoryPrefix() throws IOException {\n\n      // Make sure we get null prefix, which wont happen if setLockFactory is ever called.\n      File dirName = _TestUtil.getTempDir(\"TestLockFactory.10\");\n\n      Directory dir = new SimpleFSDirectory(dirName);\n      assertNull(\"Default lock prefix should be null\", dir.getLockFactory().getLockPrefix());\n      dir.close();\n      \n      dir = new MMapDirectory(dirName);\n      assertNull(\"Default lock prefix should be null\", dir.getLockFactory().getLockPrefix());\n      dir.close();\n      \n      dir = new NIOFSDirectory(dirName);\n      assertNull(\"Default lock prefix should be null\", dir.getLockFactory().getLockPrefix());\n      dir.close();\n \n      _TestUtil.rmDir(dirName);\n    }\n\n","sourceOld":"    // Verify: default LockFactory has no prefix (ie\n    // write.lock is stored in index):\n    public void testDefaultFSLockFactoryPrefix() throws IOException {\n\n      // Make sure we get null prefix:\n      File dirName = _TestUtil.getTempDir(\"TestLockFactory.10\");\n      Directory dir = newFSDirectory(dirName);\n\n      String prefix = dir.getLockFactory().getLockPrefix();\n\n      assertTrue(\"Default lock prefix should be null\", null == prefix);\n\n      dir.close();\n      _TestUtil.rmDir(dirName);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory#testDefaultFSLockFactoryPrefix().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testDefaultFSLockFactoryPrefix().mjava","sourceNew":"    // Verify: default LockFactory has no prefix (ie\n    // write.lock is stored in index):\n    public void testDefaultFSLockFactoryPrefix() throws IOException {\n\n      // Make sure we get null prefix, which wont happen if setLockFactory is ever called.\n      File dirName = _TestUtil.getTempDir(\"TestLockFactory.10\");\n\n      Directory dir = new SimpleFSDirectory(dirName);\n      assertNull(\"Default lock prefix should be null\", dir.getLockFactory().getLockPrefix());\n      dir.close();\n      \n      dir = new MMapDirectory(dirName);\n      assertNull(\"Default lock prefix should be null\", dir.getLockFactory().getLockPrefix());\n      dir.close();\n      \n      dir = new NIOFSDirectory(dirName);\n      assertNull(\"Default lock prefix should be null\", dir.getLockFactory().getLockPrefix());\n      dir.close();\n \n      _TestUtil.rmDir(dirName);\n    }\n\n","sourceOld":"    // Verify: default LockFactory has no prefix (ie\n    // write.lock is stored in index):\n    public void testDefaultFSLockFactoryPrefix() throws IOException {\n\n      // Make sure we get null prefix, which wont happen if setLockFactory is ever called.\n      File dirName = _TestUtil.getTempDir(\"TestLockFactory.10\");\n\n      Directory dir = new SimpleFSDirectory(dirName);\n      assertNull(\"Default lock prefix should be null\", dir.getLockFactory().getLockPrefix());\n      dir.close();\n      \n      dir = new MMapDirectory(dirName);\n      assertNull(\"Default lock prefix should be null\", dir.getLockFactory().getLockPrefix());\n      dir.close();\n      \n      dir = new NIOFSDirectory(dirName);\n      assertNull(\"Default lock prefix should be null\", dir.getLockFactory().getLockPrefix());\n      dir.close();\n \n      _TestUtil.rmDir(dirName);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a13a126d15299d5c1e117ea99ddae6fb0fa3f209":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209","efb7a19703a037c29e30440260d393500febc1f4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["efb7a19703a037c29e30440260d393500febc1f4"],"efb7a19703a037c29e30440260d393500febc1f4":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["9454a6510e2db155fb01faa5c049b06ece95fab9","a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","efb7a19703a037c29e30440260d393500febc1f4"]},"commit2Childs":{"a13a126d15299d5c1e117ea99ddae6fb0fa3f209":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","efb7a19703a037c29e30440260d393500febc1f4","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"efb7a19703a037c29e30440260d393500febc1f4":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","3a119bbc8703c10faa329ec201c654b3a35a1e3e","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}