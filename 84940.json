{"path":"solr/test-framework/src/java/org/apache/solr/util/RestTestBase#JQ(String).mjava","commits":[{"id":"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37","date":1362545433,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/RestTestBase#JQ(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   *  Makes a query request and returns the JSON string response \n   *\n   * @param request a URL path with optional query params, e.g. \"/schema/fields?fl=id,_version_\" \n   */\n  public static String JQ(String request) throws Exception {\n    int queryStartPos = request.indexOf('?');\n    String query;\n    String path;\n    if (-1 == queryStartPos) {\n      query = \"\";\n      path = request;\n    } else {\n      query = request.substring(queryStartPos + 1);\n      path = request.substring(0, queryStartPos);\n    }\n    query = setParam(query, \"wt\", \"json\");\n    request = path + '?' + setParam(query, \"indent\", \"on\"); \n\n    String response;\n    boolean failed=true;\n    try {\n      response = restTestHarness.query(request);\n      failed = false;\n    } finally {\n      if (failed) {\n        log.error(\"REQUEST FAILED: \" + request);\n      }\n    }\n\n    return response;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/RestTestBase#JQ(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/RestTestBase#JQ(String).mjava","sourceNew":"  /**\n   *  Makes a query request and returns the JSON string response \n   *\n   * @param request a URL path with optional query params, e.g. \"/schema/fields?fl=id,_version_\" \n   */\n  public static String JQ(String request) throws Exception {\n    int queryStartPos = request.indexOf('?');\n    String query;\n    String path;\n    if (-1 == queryStartPos) {\n      query = \"\";\n      path = request;\n    } else {\n      query = request.substring(queryStartPos + 1);\n      path = request.substring(0, queryStartPos);\n    }\n    query = setParam(query, \"wt\", \"json\");\n    request = path + '?' + setParam(query, \"indent\", \"on\"); \n\n    String response;\n    boolean failed=true;\n    try {\n      response = restTestHarness.query(request);\n      failed = false;\n    } finally {\n      if (failed) {\n        log.error(\"REQUEST FAILED: {}\", request);\n      }\n    }\n\n    return response;\n  }\n\n","sourceOld":"  /**\n   *  Makes a query request and returns the JSON string response \n   *\n   * @param request a URL path with optional query params, e.g. \"/schema/fields?fl=id,_version_\" \n   */\n  public static String JQ(String request) throws Exception {\n    int queryStartPos = request.indexOf('?');\n    String query;\n    String path;\n    if (-1 == queryStartPos) {\n      query = \"\";\n      path = request;\n    } else {\n      query = request.substring(queryStartPos + 1);\n      path = request.substring(0, queryStartPos);\n    }\n    query = setParam(query, \"wt\", \"json\");\n    request = path + '?' + setParam(query, \"indent\", \"on\"); \n\n    String response;\n    boolean failed=true;\n    try {\n      response = restTestHarness.query(request);\n      failed = false;\n    } finally {\n      if (failed) {\n        log.error(\"REQUEST FAILED: \" + request);\n      }\n    }\n\n    return response;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["054c04cf724f73ebdd3b16e3a86ce802c0ba5e37"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a966532d92cf9ba2856f15a8140151bb6b518e4b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["054c04cf724f73ebdd3b16e3a86ce802c0ba5e37"],"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}