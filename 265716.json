{"path":"solr/solrj/src/test/org/apache/solr/common/TestToleratedUpdateError#testParseMap().mjava","commits":[{"id":"f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef","date":1458928975,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/TestToleratedUpdateError#testParseMap().mjava","pathOld":"/dev/null","sourceNew":"  public void testParseMap() {\n    // trivial\n    SimpleOrderedMap valid = new SimpleOrderedMap<String>();\n    valid.add(\"type\", CmdType.ADD.toString());\n    valid.add(\"id\", \"some id\");\n    valid.add(\"message\", \"some message\");\n    \n    ToleratedUpdateError in = ToleratedUpdateError.parseMap(valid);\n    compare(in, MAP_COPPIER);\n    compare(in, METADATA_COPPIER);\n\n    // randomized\n    int numIters = atLeast(5000);\n    for (int i = 0; i < numIters; i++) {\n      valid = new SimpleOrderedMap<String>();\n      valid.add(\"type\", ALL_TYPES[TestUtil.nextInt(random(), 0, ALL_TYPES.length-1)].toString());\n      valid.add(\"id\", TestUtil.randomUnicodeString(random()));\n      valid.add(\"message\", TestUtil.randomUnicodeString(random()));\n      \n      in = ToleratedUpdateError.parseMap(valid);\n      compare(in, MAP_COPPIER);\n      compare(in, METADATA_COPPIER);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ba1b632c041956c93c41aa1143d16a567014891","date":1592328473,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/TestToleratedUpdateError#testParseMap().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/TestToleratedUpdateError#testParseMap().mjava","sourceNew":"  @SuppressWarnings({\"unchecked\"})\n  public void testParseMap() {\n    // trivial\n    @SuppressWarnings({\"rawtypes\"})\n    SimpleOrderedMap valid = new SimpleOrderedMap<String>();\n    valid.add(\"type\", CmdType.ADD.toString());\n    valid.add(\"id\", \"some id\");\n    valid.add(\"message\", \"some message\");\n    \n    ToleratedUpdateError in = ToleratedUpdateError.parseMap(valid);\n    compare(in, MAP_COPPIER);\n    compare(in, METADATA_COPPIER);\n\n    // randomized\n    int numIters = atLeast(5000);\n    for (int i = 0; i < numIters; i++) {\n      valid = new SimpleOrderedMap<String>();\n      valid.add(\"type\", ALL_TYPES[TestUtil.nextInt(random(), 0, ALL_TYPES.length-1)].toString());\n      valid.add(\"id\", TestUtil.randomUnicodeString(random()));\n      valid.add(\"message\", TestUtil.randomUnicodeString(random()));\n      \n      in = ToleratedUpdateError.parseMap(valid);\n      compare(in, MAP_COPPIER);\n      compare(in, METADATA_COPPIER);\n    }\n  }\n\n","sourceOld":"  public void testParseMap() {\n    // trivial\n    SimpleOrderedMap valid = new SimpleOrderedMap<String>();\n    valid.add(\"type\", CmdType.ADD.toString());\n    valid.add(\"id\", \"some id\");\n    valid.add(\"message\", \"some message\");\n    \n    ToleratedUpdateError in = ToleratedUpdateError.parseMap(valid);\n    compare(in, MAP_COPPIER);\n    compare(in, METADATA_COPPIER);\n\n    // randomized\n    int numIters = atLeast(5000);\n    for (int i = 0; i < numIters; i++) {\n      valid = new SimpleOrderedMap<String>();\n      valid.add(\"type\", ALL_TYPES[TestUtil.nextInt(random(), 0, ALL_TYPES.length-1)].toString());\n      valid.add(\"id\", TestUtil.randomUnicodeString(random()));\n      valid.add(\"message\", TestUtil.randomUnicodeString(random()));\n      \n      in = ToleratedUpdateError.parseMap(valid);\n      compare(in, MAP_COPPIER);\n      compare(in, METADATA_COPPIER);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ba1b632c041956c93c41aa1143d16a567014891":["f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ba1b632c041956c93c41aa1143d16a567014891"]},"commit2Childs":{"9ba1b632c041956c93c41aa1143d16a567014891":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef"],"f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef":["9ba1b632c041956c93c41aa1143d16a567014891"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}