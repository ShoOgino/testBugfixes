{"path":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.SynonymManager#updateInitArgs(NamedList[#]).mjava","commits":[{"id":"9ed5f4bd4ee593745097b1ec9f0110b1997a9e58","date":1396480148,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.SynonymManager#updateInitArgs(NamedList[#]).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Handles a change in the ignoreCase setting for synonyms, which requires\n     * a full rebuild of the synonymMappings.\n     */\n    @Override\n    protected boolean updateInitArgs(NamedList<?> updatedArgs) {\n      if (updatedArgs == null || updatedArgs.size() == 0) {\n        return false;\n      }\n      boolean currentIgnoreCase = getIgnoreCase(managedInitArgs);\n      boolean updatedIgnoreCase = getIgnoreCase(updatedArgs);\n      if (currentIgnoreCase == true && updatedIgnoreCase == false) {\n        throw new SolrException(ErrorCode.BAD_REQUEST,\n            \"Changing a managed word set's ignoreCase arg from true to false is not permitted.\");\n      } else if (currentIgnoreCase == false && updatedIgnoreCase == true) {\n        // ignore case policy changed ... rebuild the map\n        Map<String,Set<String>> rebuild = new TreeMap<>();\n        for (String curr : synonymMappings.keySet()) {\n          Set<String> newMappings = new TreeSet<>();\n          for (String next : synonymMappings.get(curr)) {\n            newMappings.add(applyCaseSetting(updatedIgnoreCase, next));\n          }\n          rebuild.put(applyCaseSetting(updatedIgnoreCase, curr), newMappings);\n        }\n        synonymMappings = rebuild;\n      }\n      \n      return super.updateInitArgs(updatedArgs);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.SynonymManager#updateInitArgs(NamedList[#]).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Handles a change in the ignoreCase setting for synonyms, which requires\n     * a full rebuild of the synonymMappings.\n     */\n    @Override\n    protected boolean updateInitArgs(NamedList<?> updatedArgs) {\n      if (updatedArgs == null || updatedArgs.size() == 0) {\n        return false;\n      }\n      boolean currentIgnoreCase = getIgnoreCase(managedInitArgs);\n      boolean updatedIgnoreCase = getIgnoreCase(updatedArgs);\n      if (currentIgnoreCase == true && updatedIgnoreCase == false) {\n        throw new SolrException(ErrorCode.BAD_REQUEST,\n            \"Changing a managed word set's ignoreCase arg from true to false is not permitted.\");\n      } else if (currentIgnoreCase == false && updatedIgnoreCase == true) {\n        // ignore case policy changed ... rebuild the map\n        Map<String,Set<String>> rebuild = new TreeMap<>();\n        for (String curr : synonymMappings.keySet()) {\n          Set<String> newMappings = new TreeSet<>();\n          for (String next : synonymMappings.get(curr)) {\n            newMappings.add(applyCaseSetting(updatedIgnoreCase, next));\n          }\n          rebuild.put(applyCaseSetting(updatedIgnoreCase, curr), newMappings);\n        }\n        synonymMappings = rebuild;\n      }\n      \n      return super.updateInitArgs(updatedArgs);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c897483ab479f5d1bcdd40400d20ef417b3b837","date":1400781817,"type":4,"author":"Timothy Potter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.SynonymManager#updateInitArgs(NamedList[#]).mjava","sourceNew":null,"sourceOld":"    /**\n     * Handles a change in the ignoreCase setting for synonyms, which requires\n     * a full rebuild of the synonymMappings.\n     */\n    @Override\n    protected boolean updateInitArgs(NamedList<?> updatedArgs) {\n      if (updatedArgs == null || updatedArgs.size() == 0) {\n        return false;\n      }\n      boolean currentIgnoreCase = getIgnoreCase(managedInitArgs);\n      boolean updatedIgnoreCase = getIgnoreCase(updatedArgs);\n      if (currentIgnoreCase == true && updatedIgnoreCase == false) {\n        throw new SolrException(ErrorCode.BAD_REQUEST,\n            \"Changing a managed word set's ignoreCase arg from true to false is not permitted.\");\n      } else if (currentIgnoreCase == false && updatedIgnoreCase == true) {\n        // ignore case policy changed ... rebuild the map\n        Map<String,Set<String>> rebuild = new TreeMap<>();\n        for (String curr : synonymMappings.keySet()) {\n          Set<String> newMappings = new TreeSet<>();\n          for (String next : synonymMappings.get(curr)) {\n            newMappings.add(applyCaseSetting(updatedIgnoreCase, next));\n          }\n          rebuild.put(applyCaseSetting(updatedIgnoreCase, curr), newMappings);\n        }\n        synonymMappings = rebuild;\n      }\n      \n      return super.updateInitArgs(updatedArgs);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9ed5f4bd4ee593745097b1ec9f0110b1997a9e58"],"9ed5f4bd4ee593745097b1ec9f0110b1997a9e58":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3c897483ab479f5d1bcdd40400d20ef417b3b837":["9ed5f4bd4ee593745097b1ec9f0110b1997a9e58"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3c897483ab479f5d1bcdd40400d20ef417b3b837"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"9ed5f4bd4ee593745097b1ec9f0110b1997a9e58":["5eb2511ababf862ea11e10761c70ee560cd84510","3c897483ab479f5d1bcdd40400d20ef417b3b837"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5eb2511ababf862ea11e10761c70ee560cd84510","9ed5f4bd4ee593745097b1ec9f0110b1997a9e58"],"3c897483ab479f5d1bcdd40400d20ef417b3b837":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}