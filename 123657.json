{"path":"src/java/org/apache/solr/analysis/RemoveDuplicatesTokenFilter#process(Token).mjava","commits":[{"id":"99b35e237ce51e4310a1e5ff694eb62942f68aa6","date":1152164344,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/RemoveDuplicatesTokenFilter#process(Token).mjava","pathOld":"/dev/null","sourceNew":"  protected Token process(Token t) throws IOException {\n    Token tok = read();\n    OUT: while (tok != null && tok.getPositionIncrement()==0) {\n      if (null != t) {\n        write(t);\n        t = null;\n      }\n      boolean dup=false;\n      IN: for (Token outTok : output()) {\n        if (outTok.termText().equals(tok.termText())) {\n          dup=true;\n          break IN;\n        }\n      }\n      if (!dup)\n        write(tok);\n      tok = read();\n    }\n    if (tok != null) pushBack(tok);\n    return t;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe8ae1ed027200f075b0de9f264776fa32c4862f","date":1207066219,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/RemoveDuplicatesTokenFilter#process(Token).mjava","pathOld":"src/java/org/apache/solr/analysis/RemoveDuplicatesTokenFilter#process(Token).mjava","sourceNew":"  protected Token process(Token t) throws IOException {\n    Token tok = read();\n    while (tok != null && tok.getPositionIncrement()==0) {\n      if (null != t) {\n        write(t);\n        t = null;\n      }\n      boolean dup=false;\n      for (Token outTok : output()) {\n        int tokLen = tok.termLength();\n        if (outTok.termLength() == tokLen && ArraysUtils.equals(outTok.termBuffer(), 0, tok.termBuffer(), 0, tokLen)) {\n          dup=true;\n          //continue;;\n        }\n      }\n      if (!dup){\n        write(tok);\n      }\n      tok = read();\n    }\n    if (tok != null) {\n      pushBack(tok);\n    }\n    return t;\n  }\n\n","sourceOld":"  protected Token process(Token t) throws IOException {\n    Token tok = read();\n    OUT: while (tok != null && tok.getPositionIncrement()==0) {\n      if (null != t) {\n        write(t);\n        t = null;\n      }\n      boolean dup=false;\n      IN: for (Token outTok : output()) {\n        if (outTok.termText().equals(tok.termText())) {\n          dup=true;\n          break IN;\n        }\n      }\n      if (!dup)\n        write(tok);\n      tok = read();\n    }\n    if (tok != null) pushBack(tok);\n    return t;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef28ac95f5f85bbf872801277448c0924b0a6827","date":1268600312,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/solr/analysis/RemoveDuplicatesTokenFilter#process(Token).mjava","sourceNew":null,"sourceOld":"  protected Token process(Token t) throws IOException {\n    Token tok = read();\n    while (tok != null && tok.getPositionIncrement()==0) {\n      if (null != t) {\n        write(t);\n        t = null;\n      }\n      boolean dup=false;\n      for (Token outTok : output()) {\n        int tokLen = tok.termLength();\n        if (outTok.termLength() == tokLen && ArraysUtils.equals(outTok.termBuffer(), 0, tok.termBuffer(), 0, tokLen)) {\n          dup=true;\n          //continue;;\n        }\n      }\n      if (!dup){\n        write(tok);\n      }\n      tok = read();\n    }\n    if (tok != null) {\n      pushBack(tok);\n    }\n    return t;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fe8ae1ed027200f075b0de9f264776fa32c4862f":["99b35e237ce51e4310a1e5ff694eb62942f68aa6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"99b35e237ce51e4310a1e5ff694eb62942f68aa6":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ef28ac95f5f85bbf872801277448c0924b0a6827":["fe8ae1ed027200f075b0de9f264776fa32c4862f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"fe8ae1ed027200f075b0de9f264776fa32c4862f":["ef28ac95f5f85bbf872801277448c0924b0a6827"],"99b35e237ce51e4310a1e5ff694eb62942f68aa6":["fe8ae1ed027200f075b0de9f264776fa32c4862f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["99b35e237ce51e4310a1e5ff694eb62942f68aa6"],"ef28ac95f5f85bbf872801277448c0924b0a6827":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ef28ac95f5f85bbf872801277448c0924b0a6827","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}