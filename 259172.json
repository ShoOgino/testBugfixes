{"path":"src/java/org/apache/lucene/index/MultiReader#doSetNorm(int,String,byte).mjava","commits":[{"id":"f653aecb322b74d99e6ecdb93765e453a3d7aa71","date":1082107025,"type":1,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#doSetNorm(int,String,byte).mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#setNorm(int,String,byte).mjava","sourceNew":"  protected void doSetNorm(int n, String field, byte value)\n    throws IOException {\n    normsCache.remove(field);                     // clear cache\n    int i = readerIndex(n);\t\t\t  // find segment num\n    subReaders[i].setNorm(n-starts[i], field, value); // dispatch\n  }\n\n","sourceOld":"  public synchronized void setNorm(int n, String field, byte value)\n    throws IOException {\n    normsCache.remove(field);                     // clear cache\n    int i = readerIndex(n);\t\t\t  // find segment num\n    readers[i].setNorm(n-starts[i], field, value); // dispatch\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddbe196f6406e5d96f401c346389b069dc7fd0e1","date":1084538986,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#doSetNorm(int,String,byte).mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#doSetNorm(int,String,byte).mjava","sourceNew":"  protected void doSetNorm(int n, String field, byte value)\n    throws IOException {\n    normsCache.remove(field);                         // clear cache\n    int i = readerIndex(n);                           // find segment num\n    subReaders[i].setNorm(n-starts[i], field, value); // dispatch\n  }\n\n","sourceOld":"  protected void doSetNorm(int n, String field, byte value)\n    throws IOException {\n    normsCache.remove(field);                     // clear cache\n    int i = readerIndex(n);\t\t\t  // find segment num\n    subReaders[i].setNorm(n-starts[i], field, value); // dispatch\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1b54a9bc667895a2095a886184bf69a3179e63df","date":1172088096,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#doSetNorm(int,String,byte).mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#doSetNorm(int,String,byte).mjava","sourceNew":"  protected void doSetNorm(int n, String field, byte value)\n    throws CorruptIndexException, IOException {\n    normsCache.remove(field);                         // clear cache\n    int i = readerIndex(n);                           // find segment num\n    subReaders[i].setNorm(n-starts[i], field, value); // dispatch\n  }\n\n","sourceOld":"  protected void doSetNorm(int n, String field, byte value)\n    throws IOException {\n    normsCache.remove(field);                         // clear cache\n    int i = readerIndex(n);                           // find segment num\n    subReaders[i].setNorm(n-starts[i], field, value); // dispatch\n  }\n\n","bugFix":["f653aecb322b74d99e6ecdb93765e453a3d7aa71"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7f2552b9f13037c62acd400d263d1e9262d6e4e","date":1185490328,"type":5,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiSegmentReader#doSetNorm(int,String,byte).mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#doSetNorm(int,String,byte).mjava","sourceNew":"  protected void doSetNorm(int n, String field, byte value)\r\n    throws CorruptIndexException, IOException {\r\n    normsCache.remove(field);                         // clear cache\r\n    int i = readerIndex(n);                           // find segment num\r\n    subReaders[i].setNorm(n-starts[i], field, value); // dispatch\r\n  }\r\n\n","sourceOld":"  protected void doSetNorm(int n, String field, byte value)\n    throws CorruptIndexException, IOException {\n    normsCache.remove(field);                         // clear cache\n    int i = readerIndex(n);                           // find segment num\n    subReaders[i].setNorm(n-starts[i], field, value); // dispatch\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"125b5699f11b58d9be0820c6ce8b1648812902e8","date":1190273227,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#doSetNorm(int,String,byte).mjava","pathOld":"/dev/null","sourceNew":"  protected void doSetNorm(int n, String field, byte value)\n    throws CorruptIndexException, IOException {\n    normsCache.remove(field);                         // clear cache\n    int i = readerIndex(n);                           // find segment num\n    subReaders[i].setNorm(n-starts[i], field, value); // dispatch\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7b6cdc70e097da94da79a655ed8f94477ff69f5","date":1220815360,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#doSetNorm(int,String,byte).mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#doSetNorm(int,String,byte).mjava","sourceNew":"  protected void doSetNorm(int n, String field, byte value)\n    throws CorruptIndexException, IOException {\n    synchronized (normsCache) {\n      normsCache.remove(field);                         // clear cache\n    }\n    int i = readerIndex(n);                           // find segment num\n    subReaders[i].setNorm(n-starts[i], field, value); // dispatch\n  }\n\n","sourceOld":"  protected void doSetNorm(int n, String field, byte value)\n    throws CorruptIndexException, IOException {\n    normsCache.remove(field);                         // clear cache\n    int i = readerIndex(n);                           // find segment num\n    subReaders[i].setNorm(n-starts[i], field, value); // dispatch\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#doSetNorm(int,String,byte).mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#doSetNorm(int,String,byte).mjava","sourceNew":"  @Override\n  protected void doSetNorm(int n, String field, byte value)\n    throws CorruptIndexException, IOException {\n    synchronized (normsCache) {\n      normsCache.remove(field);                         // clear cache\n    }\n    int i = readerIndex(n);                           // find segment num\n    subReaders[i].setNorm(n-starts[i], field, value); // dispatch\n  }\n\n","sourceOld":"  protected void doSetNorm(int n, String field, byte value)\n    throws CorruptIndexException, IOException {\n    synchronized (normsCache) {\n      normsCache.remove(field);                         // clear cache\n    }\n    int i = readerIndex(n);                           // find segment num\n    subReaders[i].setNorm(n-starts[i], field, value); // dispatch\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/MultiReader#doSetNorm(int,String,byte).mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#doSetNorm(int,String,byte).mjava","sourceNew":"  @Override\n  protected void doSetNorm(int n, String field, byte value)\n    throws CorruptIndexException, IOException {\n    synchronized (normsCache) {\n      normsCache.remove(field);                         // clear cache\n    }\n    int i = readerIndex(n);                           // find segment num\n    subReaders[i].setNorm(n-starts[i], field, value); // dispatch\n  }\n\n","sourceOld":"  @Override\n  protected void doSetNorm(int n, String field, byte value)\n    throws CorruptIndexException, IOException {\n    synchronized (normsCache) {\n      normsCache.remove(field);                         // clear cache\n    }\n    int i = readerIndex(n);                           // find segment num\n    subReaders[i].setNorm(n-starts[i], field, value); // dispatch\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"125b5699f11b58d9be0820c6ce8b1648812902e8":["f7f2552b9f13037c62acd400d263d1e9262d6e4e"],"1b54a9bc667895a2095a886184bf69a3179e63df":["ddbe196f6406e5d96f401c346389b069dc7fd0e1"],"8a9e385641d717e641408d8fbbc62be8fc766357":["c7b6cdc70e097da94da79a655ed8f94477ff69f5"],"ddbe196f6406e5d96f401c346389b069dc7fd0e1":["f653aecb322b74d99e6ecdb93765e453a3d7aa71"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f7f2552b9f13037c62acd400d263d1e9262d6e4e":["1b54a9bc667895a2095a886184bf69a3179e63df"],"c7b6cdc70e097da94da79a655ed8f94477ff69f5":["125b5699f11b58d9be0820c6ce8b1648812902e8"],"f653aecb322b74d99e6ecdb93765e453a3d7aa71":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"]},"commit2Childs":{"125b5699f11b58d9be0820c6ce8b1648812902e8":["c7b6cdc70e097da94da79a655ed8f94477ff69f5"],"1b54a9bc667895a2095a886184bf69a3179e63df":["f7f2552b9f13037c62acd400d263d1e9262d6e4e"],"ddbe196f6406e5d96f401c346389b069dc7fd0e1":["1b54a9bc667895a2095a886184bf69a3179e63df"],"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f653aecb322b74d99e6ecdb93765e453a3d7aa71"],"f7f2552b9f13037c62acd400d263d1e9262d6e4e":["125b5699f11b58d9be0820c6ce8b1648812902e8"],"c7b6cdc70e097da94da79a655ed8f94477ff69f5":["8a9e385641d717e641408d8fbbc62be8fc766357"],"f653aecb322b74d99e6ecdb93765e453a3d7aa71":["ddbe196f6406e5d96f401c346389b069dc7fd0e1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}