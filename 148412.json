{"path":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/UIMAAnnotationsTokenizerFactory#UIMAAnnotationsTokenizerFactory(Map[String,String]).mjava","commits":[{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/UIMAAnnotationsTokenizerFactory#UIMAAnnotationsTokenizerFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/UIMAAnnotationsTokenizerFactory#init(Map[String,String]).mjava","sourceNew":"  /** Creates a new UIMAAnnotationsTokenizerFactory */\n  public UIMAAnnotationsTokenizerFactory(Map<String, String> args) {\n    super(args);\n    for (String k : args.keySet()) {\n      if (k.equals(\"tokenType\")) {\n        tokenType = args.get(\"tokenType\");\n      } else if (k.equals(\"descriptorPath\")) {\n        descriptorPath = args.get(\"descriptorPath\");\n      } else {\n        configurationParameters.put(k, args.get(k));\n      }\n    }\n    if (descriptorPath == null || tokenType == null ) {\n      throw new IllegalArgumentException(\"descriptorPath and tokenType are mandatory\");\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, String> args) {\n    super.init(args);\n    configurationParameters = new HashMap<String, Object>();\n    for (String k : args.keySet()) {\n      if (k.equals(\"tokenType\")) {\n        tokenType = args.get(\"tokenType\");\n      } else if (k.equals(\"descriptorPath\")) {\n        descriptorPath = args.get(\"descriptorPath\");\n      } else {\n        configurationParameters.put(k, args.get(k));\n      }\n    }\n    if (descriptorPath == null || tokenType == null ) {\n      throw new IllegalArgumentException(\"descriptorPath and tokenType are mandatory\");\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dcae30df9fe9300569835aef42ec65802c7c0afb","date":1364859933,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/UIMAAnnotationsTokenizerFactory#UIMAAnnotationsTokenizerFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/UIMAAnnotationsTokenizerFactory#UIMAAnnotationsTokenizerFactory(Map[String,String]).mjava","sourceNew":"  /** Creates a new UIMAAnnotationsTokenizerFactory */\n  public UIMAAnnotationsTokenizerFactory(Map<String,String> args) {\n    super(args);\n    tokenType = require(args, \"tokenType\");\n    descriptorPath = require(args, \"descriptorPath\");\n    configurationParameters.putAll(args);\n  }\n\n","sourceOld":"  /** Creates a new UIMAAnnotationsTokenizerFactory */\n  public UIMAAnnotationsTokenizerFactory(Map<String, String> args) {\n    super(args);\n    for (String k : args.keySet()) {\n      if (k.equals(\"tokenType\")) {\n        tokenType = args.get(\"tokenType\");\n      } else if (k.equals(\"descriptorPath\")) {\n        descriptorPath = args.get(\"descriptorPath\");\n      } else {\n        configurationParameters.put(k, args.get(k));\n      }\n    }\n    if (descriptorPath == null || tokenType == null ) {\n      throw new IllegalArgumentException(\"descriptorPath and tokenType are mandatory\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8c9a6ea78b00a421744e770568d8c2aab262e4cd","date":1530971937,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/UIMAAnnotationsTokenizerFactory#UIMAAnnotationsTokenizerFactory(Map[String,String]).mjava","sourceNew":null,"sourceOld":"  /** Creates a new UIMAAnnotationsTokenizerFactory */\n  public UIMAAnnotationsTokenizerFactory(Map<String,String> args) {\n    super(args);\n    tokenType = require(args, \"tokenType\");\n    descriptorPath = require(args, \"descriptorPath\");\n    configurationParameters.putAll(args);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":4,"author":"Michael Braun","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/UIMAAnnotationsTokenizerFactory#UIMAAnnotationsTokenizerFactory(Map[String,String]).mjava","sourceNew":null,"sourceOld":"  /** Creates a new UIMAAnnotationsTokenizerFactory */\n  public UIMAAnnotationsTokenizerFactory(Map<String,String> args) {\n    super(args);\n    tokenType = require(args, \"tokenType\");\n    descriptorPath = require(args, \"descriptorPath\");\n    configurationParameters.putAll(args);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":4,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/UIMAAnnotationsTokenizerFactory#UIMAAnnotationsTokenizerFactory(Map[String,String]).mjava","sourceNew":null,"sourceOld":"  /** Creates a new UIMAAnnotationsTokenizerFactory */\n  public UIMAAnnotationsTokenizerFactory(Map<String,String> args) {\n    super(args);\n    tokenType = require(args, \"tokenType\");\n    descriptorPath = require(args, \"descriptorPath\");\n    configurationParameters.putAll(args);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["dcae30df9fe9300569835aef42ec65802c7c0afb","8c9a6ea78b00a421744e770568d8c2aab262e4cd"],"dcae30df9fe9300569835aef42ec65802c7c0afb":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8c9a6ea78b00a421744e770568d8c2aab262e4cd"],"8c9a6ea78b00a421744e770568d8c2aab262e4cd":["dcae30df9fe9300569835aef42ec65802c7c0afb"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["dcae30df9fe9300569835aef42ec65802c7c0afb","8c9a6ea78b00a421744e770568d8c2aab262e4cd"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"dcae30df9fe9300569835aef42ec65802c7c0afb":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","8c9a6ea78b00a421744e770568d8c2aab262e4cd","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["dcae30df9fe9300569835aef42ec65802c7c0afb"],"8c9a6ea78b00a421744e770568d8c2aab262e4cd":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}