{"path":"src/java/org/apache/lucene/store/RAMInputStream#readBytes(byte[],int,int).mjava","commits":[{"id":"d568d474b2c3c00dd89047135bcb6ff8bfa7b559","date":1176840521,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMInputStream#readBytes(byte[],int,int).mjava","pathOld":"/dev/null","sourceNew":"  public void readBytes(byte[] b, int offset, int len) throws IOException {\n    while (len > 0) {\n      if (bufferPosition >= bufferLength) {\n        currentBufferIndex++;\n        switchCurrentBuffer();\n      }\n\n      int remainInBuffer = bufferLength - bufferPosition;\n      int bytesToCopy = len < remainInBuffer ? len : remainInBuffer;\n      System.arraycopy(currentBuffer, bufferPosition, b, offset, bytesToCopy);\n      offset += bytesToCopy;\n      len -= bytesToCopy;\n      bufferPosition += bytesToCopy;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1e64e4308bd25f7fdf6115d689d83d8c2786cf3f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e64e4308bd25f7fdf6115d689d83d8c2786cf3f","date":1204233239,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMInputStream#readBytes(byte[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/RAMInputStream#readBytes(byte[],int,int).mjava","sourceNew":"  public void readBytes(byte[] b, int offset, int len) throws IOException {\n    while (len > 0) {\n      if (bufferPosition >= bufferLength) {\n        currentBufferIndex++;\n        switchCurrentBuffer(true);\n      }\n\n      int remainInBuffer = bufferLength - bufferPosition;\n      int bytesToCopy = len < remainInBuffer ? len : remainInBuffer;\n      System.arraycopy(currentBuffer, bufferPosition, b, offset, bytesToCopy);\n      offset += bytesToCopy;\n      len -= bytesToCopy;\n      bufferPosition += bytesToCopy;\n    }\n  }\n\n","sourceOld":"  public void readBytes(byte[] b, int offset, int len) throws IOException {\n    while (len > 0) {\n      if (bufferPosition >= bufferLength) {\n        currentBufferIndex++;\n        switchCurrentBuffer();\n      }\n\n      int remainInBuffer = bufferLength - bufferPosition;\n      int bytesToCopy = len < remainInBuffer ? len : remainInBuffer;\n      System.arraycopy(currentBuffer, bufferPosition, b, offset, bytesToCopy);\n      offset += bytesToCopy;\n      len -= bytesToCopy;\n      bufferPosition += bytesToCopy;\n    }\n  }\n\n","bugFix":["d568d474b2c3c00dd89047135bcb6ff8bfa7b559"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMInputStream#readBytes(byte[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/RAMInputStream#readBytes(byte[],int,int).mjava","sourceNew":"  @Override\n  public void readBytes(byte[] b, int offset, int len) throws IOException {\n    while (len > 0) {\n      if (bufferPosition >= bufferLength) {\n        currentBufferIndex++;\n        switchCurrentBuffer(true);\n      }\n\n      int remainInBuffer = bufferLength - bufferPosition;\n      int bytesToCopy = len < remainInBuffer ? len : remainInBuffer;\n      System.arraycopy(currentBuffer, bufferPosition, b, offset, bytesToCopy);\n      offset += bytesToCopy;\n      len -= bytesToCopy;\n      bufferPosition += bytesToCopy;\n    }\n  }\n\n","sourceOld":"  public void readBytes(byte[] b, int offset, int len) throws IOException {\n    while (len > 0) {\n      if (bufferPosition >= bufferLength) {\n        currentBufferIndex++;\n        switchCurrentBuffer(true);\n      }\n\n      int remainInBuffer = bufferLength - bufferPosition;\n      int bytesToCopy = len < remainInBuffer ? len : remainInBuffer;\n      System.arraycopy(currentBuffer, bufferPosition, b, offset, bytesToCopy);\n      offset += bytesToCopy;\n      len -= bytesToCopy;\n      bufferPosition += bytesToCopy;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/RAMInputStream#readBytes(byte[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/RAMInputStream#readBytes(byte[],int,int).mjava","sourceNew":"  @Override\n  public void readBytes(byte[] b, int offset, int len) throws IOException {\n    while (len > 0) {\n      if (bufferPosition >= bufferLength) {\n        currentBufferIndex++;\n        switchCurrentBuffer(true);\n      }\n\n      int remainInBuffer = bufferLength - bufferPosition;\n      int bytesToCopy = len < remainInBuffer ? len : remainInBuffer;\n      System.arraycopy(currentBuffer, bufferPosition, b, offset, bytesToCopy);\n      offset += bytesToCopy;\n      len -= bytesToCopy;\n      bufferPosition += bytesToCopy;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void readBytes(byte[] b, int offset, int len) throws IOException {\n    while (len > 0) {\n      if (bufferPosition >= bufferLength) {\n        currentBufferIndex++;\n        switchCurrentBuffer(true);\n      }\n\n      int remainInBuffer = bufferLength - bufferPosition;\n      int bytesToCopy = len < remainInBuffer ? len : remainInBuffer;\n      System.arraycopy(currentBuffer, bufferPosition, b, offset, bytesToCopy);\n      offset += bytesToCopy;\n      len -= bytesToCopy;\n      bufferPosition += bytesToCopy;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d568d474b2c3c00dd89047135bcb6ff8bfa7b559":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1e64e4308bd25f7fdf6115d689d83d8c2786cf3f":["d568d474b2c3c00dd89047135bcb6ff8bfa7b559"],"8a9e385641d717e641408d8fbbc62be8fc766357":["1e64e4308bd25f7fdf6115d689d83d8c2786cf3f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"]},"commit2Childs":{"d568d474b2c3c00dd89047135bcb6ff8bfa7b559":["1e64e4308bd25f7fdf6115d689d83d8c2786cf3f"],"1e64e4308bd25f7fdf6115d689d83d8c2786cf3f":["8a9e385641d717e641408d8fbbc62be8fc766357"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d568d474b2c3c00dd89047135bcb6ff8bfa7b559"],"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}