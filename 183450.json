{"path":"lucene/sandbox/src/java/org/apache/lucene/search/DimensionalPointInRectQuery#DimensionalPointInRectQuery(String,double,double,double,double).mjava","commits":[{"id":"1904709ea0185dc04e3d77ea01c79e909caf2796","date":1447006699,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/DimensionalPointInRectQuery#DimensionalPointInRectQuery(String,double,double,double,double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/bkdtree/BKDPointInBBoxQuery#BKDPointInBBoxQuery(String,double,double,double,double).mjava","sourceNew":"  /** Matches all points &gt;= minLon, minLat (inclusive) and &lt; maxLon, maxLat (exclusive). */ \n  public DimensionalPointInRectQuery(String field, double minLat, double maxLat, double minLon, double maxLon) {\n    this.field = field;\n    if (GeoUtils.isValidLat(minLat) == false) {\n      throw new IllegalArgumentException(\"minLat=\" + minLat + \" is not a valid latitude\");\n    }\n    if (GeoUtils.isValidLat(maxLat) == false) {\n      throw new IllegalArgumentException(\"maxLat=\" + maxLat + \" is not a valid latitude\");\n    }\n    if (GeoUtils.isValidLon(minLon) == false) {\n      throw new IllegalArgumentException(\"minLon=\" + minLon + \" is not a valid longitude\");\n    }\n    if (GeoUtils.isValidLon(maxLon) == false) {\n      throw new IllegalArgumentException(\"maxLon=\" + maxLon + \" is not a valid longitude\");\n    }\n    this.minLon = minLon;\n    this.maxLon = maxLon;\n    this.minLat = minLat;\n    this.maxLat = maxLat;\n  }\n\n","sourceOld":"  /** Matches all points &gt;= minLon, minLat (inclusive) and &lt; maxLon, maxLat (exclusive). */ \n  public BKDPointInBBoxQuery(String field, double minLat, double maxLat, double minLon, double maxLon) {\n    this.field = field;\n    if (BKDTreeWriter.validLat(minLat) == false) {\n      throw new IllegalArgumentException(\"minLat=\" + minLat + \" is not a valid latitude\");\n    }\n    if (BKDTreeWriter.validLat(maxLat) == false) {\n      throw new IllegalArgumentException(\"maxLat=\" + maxLat + \" is not a valid latitude\");\n    }\n    if (BKDTreeWriter.validLon(minLon) == false) {\n      throw new IllegalArgumentException(\"minLon=\" + minLon + \" is not a valid longitude\");\n    }\n    if (BKDTreeWriter.validLon(maxLon) == false) {\n      throw new IllegalArgumentException(\"maxLon=\" + maxLon + \" is not a valid longitude\");\n    }\n    this.minLon = minLon;\n    this.maxLon = maxLon;\n    this.minLat = minLat;\n    this.maxLat = maxLat;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cab7a79353f33d1a94cd307bf33aa5148601ebe6","date":1453391888,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/PointInRectQuery#PointInRectQuery(String,double,double,double,double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/DimensionalPointInRectQuery#DimensionalPointInRectQuery(String,double,double,double,double).mjava","sourceNew":"  /** Matches all points &gt;= minLon, minLat (inclusive) and &lt; maxLon, maxLat (exclusive). */ \n  public PointInRectQuery(String field, double minLat, double maxLat, double minLon, double maxLon) {\n    this.field = field;\n    if (GeoUtils.isValidLat(minLat) == false) {\n      throw new IllegalArgumentException(\"minLat=\" + minLat + \" is not a valid latitude\");\n    }\n    if (GeoUtils.isValidLat(maxLat) == false) {\n      throw new IllegalArgumentException(\"maxLat=\" + maxLat + \" is not a valid latitude\");\n    }\n    if (GeoUtils.isValidLon(minLon) == false) {\n      throw new IllegalArgumentException(\"minLon=\" + minLon + \" is not a valid longitude\");\n    }\n    if (GeoUtils.isValidLon(maxLon) == false) {\n      throw new IllegalArgumentException(\"maxLon=\" + maxLon + \" is not a valid longitude\");\n    }\n    this.minLon = minLon;\n    this.maxLon = maxLon;\n    this.minLat = minLat;\n    this.maxLat = maxLat;\n  }\n\n","sourceOld":"  /** Matches all points &gt;= minLon, minLat (inclusive) and &lt; maxLon, maxLat (exclusive). */ \n  public DimensionalPointInRectQuery(String field, double minLat, double maxLat, double minLon, double maxLon) {\n    this.field = field;\n    if (GeoUtils.isValidLat(minLat) == false) {\n      throw new IllegalArgumentException(\"minLat=\" + minLat + \" is not a valid latitude\");\n    }\n    if (GeoUtils.isValidLat(maxLat) == false) {\n      throw new IllegalArgumentException(\"maxLat=\" + maxLat + \" is not a valid latitude\");\n    }\n    if (GeoUtils.isValidLon(minLon) == false) {\n      throw new IllegalArgumentException(\"minLon=\" + minLon + \" is not a valid longitude\");\n    }\n    if (GeoUtils.isValidLon(maxLon) == false) {\n      throw new IllegalArgumentException(\"maxLon=\" + maxLon + \" is not a valid longitude\");\n    }\n    this.minLon = minLon;\n    this.maxLon = maxLon;\n    this.minLat = minLat;\n    this.maxLat = maxLat;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["1904709ea0185dc04e3d77ea01c79e909caf2796"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1904709ea0185dc04e3d77ea01c79e909caf2796":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"]},"commit2Childs":{"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1904709ea0185dc04e3d77ea01c79e909caf2796"],"1904709ea0185dc04e3d77ea01c79e909caf2796":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}