{"path":"solr/core/src/test/org/apache/solr/handler/admin/IndexSizeEstimatorTest#addDocs(String,int).mjava","commits":[{"id":"e4583dbd381e291c87e23144564c59ba3391b188","date":1560187306,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/IndexSizeEstimatorTest#addDocs(String,int).mjava","pathOld":"/dev/null","sourceNew":"  private static SolrInputDocument addDocs(String collection, int n) throws Exception {\n    UpdateRequest ureq = new UpdateRequest();\n    SolrInputDocument doc = null;\n    for (int i = 0; i < n; i++) {\n      doc = new SolrInputDocument();\n      doc.addField(\"id\", \"id-\" + i);\n      doc.addField(\"long_l\", i);\n      doc.addField(\"long_tl\", i);\n      doc.addField(\"multival_long_ll\", i);\n      doc.addField(\"multival_long_ll\", i + 1);\n      // indexed, not stored\n      doc.addField(\"string_sI\", TestUtil.randomAnalysisString(random(), 100, true));\n      // stored, not indexed\n      doc.addField(\"string_sS\", TestUtil.randomAnalysisString(random(), 100, true));\n      // multival, stored, indexed, tv, pos, offsets\n      doc.addField(\"tv_mv_string\", TestUtil.randomAnalysisString(random(), 100, true));\n      doc.addField(\"tv_mv_string\", TestUtil.randomAnalysisString(random(), 100, true));\n      //binary\n      doc.addField(\"payload\", TestUtil.randomBinaryTerm(random()).bytes);\n      // points\n      doc.addField(\"point\", random().nextInt(100) + \",\" + random().nextInt(100));\n      ureq.add(doc);\n    }\n    solrClient.request(ureq, collection);\n    solrClient.commit(collection);\n    // verify the number of docs\n    TimeOut timeOut = new TimeOut(30, TimeUnit.SECONDS, TimeSource.NANO_TIME);\n    while (!timeOut.hasTimedOut()) {\n      QueryResponse rsp = solrClient.query(collection, params(\"q\", \"*:*\", \"rows\", \"0\"));\n      if (rsp.getResults().getNumFound() == n) {\n        break;\n      }\n      timeOut.sleep(500);\n    }\n    assertFalse(\"timed out waiting for documents to be added\", timeOut.hasTimedOut());\n    return doc;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e4583dbd381e291c87e23144564c59ba3391b188":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e4583dbd381e291c87e23144564c59ba3391b188"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e4583dbd381e291c87e23144564c59ba3391b188"],"e4583dbd381e291c87e23144564c59ba3391b188":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}