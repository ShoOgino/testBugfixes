{"path":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#totalTermFreq().mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":1,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#totalTermFreq().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingTermsEnum#totalTermFreq().mjava","sourceNew":"    @Override\n    public long totalTermFreq() throws IOException {\n      assert state == State.POSITIONED : \"totalTermFreq() called on unpositioned TermsEnum\";\n      return super.totalTermFreq();\n    }\n\n","sourceOld":"    @Override\n    public long totalTermFreq() throws IOException {\n      assert state == State.POSITIONED : \"totalTermFreq() called on unpositioned TermsEnum\";\n      return super.totalTermFreq();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86762b84c3fc613e3c2250dc9452529a68181a3f","date":1419412618,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#totalTermFreq().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#totalTermFreq().mjava","sourceNew":"    @Override\n    public long totalTermFreq() throws IOException {\n      assertThread(\"Terms enums\", creationThread);\n      assert state == State.POSITIONED : \"totalTermFreq() called on unpositioned TermsEnum\";\n      return super.totalTermFreq();\n    }\n\n","sourceOld":"    @Override\n    public long totalTermFreq() throws IOException {\n      assert state == State.POSITIONED : \"totalTermFreq() called on unpositioned TermsEnum\";\n      return super.totalTermFreq();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"086ffe31d8fba0110227db122974163709ecc1b4","date":1509678141,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#totalTermFreq().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#totalTermFreq().mjava","sourceNew":"    @Override\n    public long totalTermFreq() throws IOException {\n      assertThread(\"Terms enums\", creationThread);\n      assert state == State.POSITIONED : \"totalTermFreq() called on unpositioned TermsEnum\";\n      final long ttf = super.totalTermFreq();\n      if (hasFreqs) {\n        assert ttf >= docFreq();\n      } else {\n        assert ttf == docFreq();\n      }\n      return ttf;\n    }\n\n","sourceOld":"    @Override\n    public long totalTermFreq() throws IOException {\n      assertThread(\"Terms enums\", creationThread);\n      assert state == State.POSITIONED : \"totalTermFreq() called on unpositioned TermsEnum\";\n      return super.totalTermFreq();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d523b8189b211dd1630166aa77b8c88bb48b3fcc","date":1510144168,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#totalTermFreq().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#totalTermFreq().mjava","sourceNew":"    @Override\n    public long totalTermFreq() throws IOException {\n      assertThread(\"Terms enums\", creationThread);\n      assert state == State.POSITIONED : \"totalTermFreq() called on unpositioned TermsEnum\";\n      final long ttf = super.totalTermFreq();\n      if (hasFreqs) {\n        assert ttf >= docFreq();\n      } else {\n        assert ttf == docFreq();\n      }\n      return ttf;\n    }\n\n","sourceOld":"    @Override\n    public long totalTermFreq() throws IOException {\n      assertThread(\"Terms enums\", creationThread);\n      assert state == State.POSITIONED : \"totalTermFreq() called on unpositioned TermsEnum\";\n      return super.totalTermFreq();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"086ffe31d8fba0110227db122974163709ecc1b4":["86762b84c3fc613e3c2250dc9452529a68181a3f"],"d523b8189b211dd1630166aa77b8c88bb48b3fcc":["86762b84c3fc613e3c2250dc9452529a68181a3f","086ffe31d8fba0110227db122974163709ecc1b4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"86762b84c3fc613e3c2250dc9452529a68181a3f":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d523b8189b211dd1630166aa77b8c88bb48b3fcc"]},"commit2Childs":{"086ffe31d8fba0110227db122974163709ecc1b4":["d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"d523b8189b211dd1630166aa77b8c88bb48b3fcc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"86762b84c3fc613e3c2250dc9452529a68181a3f":["086ffe31d8fba0110227db122974163709ecc1b4","d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["86762b84c3fc613e3c2250dc9452529a68181a3f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}