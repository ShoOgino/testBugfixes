{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/Sort.ByteSequencesReader#read(BytesRef).mjava","commits":[{"id":"847d1294c8ff2f0172af20892ef98a1c6a952e09","date":1359503775,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/Sort.ByteSequencesReader#read(BytesRef).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort.ByteSequencesReader#read(BytesRef).mjava","sourceNew":"    /**\n     * Reads the next entry into the provided {@link BytesRef}. The internal\n     * storage is resized if needed.\n     * \n     * @return Returns <code>false</code> if EOF occurred when trying to read\n     * the header of the next sequence. Returns <code>true</code> otherwise.\n     * @throws EOFException if the file ends before the full sequence is read.\n     */\n    public boolean read(BytesRef ref) throws IOException {\n      short length;\n      try {\n        length = is.readShort();\n      } catch (EOFException e) {\n        return false;\n      }\n\n      ref.grow(length);\n      ref.offset = 0;\n      ref.length = length;\n      is.readFully(ref.bytes, 0, length);\n      return true;\n    }\n\n","sourceOld":"    /**\n     * Reads the next entry into the provided {@link BytesRef}. The internal\n     * storage is resized if needed.\n     * \n     * @return Returns <code>false</code> if EOF occurred when trying to read\n     * the header of the next sequence. Returns <code>true</code> otherwise.\n     * @throws EOFException if the file ends before the full sequence is read.\n     */\n    public boolean read(BytesRef ref) throws IOException {\n      short length;\n      try {\n        length = is.readShort();\n      } catch (EOFException e) {\n        return false;\n      }\n\n      ref.grow(length);\n      ref.offset = 0;\n      ref.length = length;\n      is.readFully(ref.bytes, 0, length);\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/Sort.ByteSequencesReader#read(BytesRef).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort.ByteSequencesReader#read(BytesRef).mjava","sourceNew":"    /**\n     * Reads the next entry into the provided {@link BytesRef}. The internal\n     * storage is resized if needed.\n     * \n     * @return Returns <code>false</code> if EOF occurred when trying to read\n     * the header of the next sequence. Returns <code>true</code> otherwise.\n     * @throws EOFException if the file ends before the full sequence is read.\n     */\n    public boolean read(BytesRef ref) throws IOException {\n      short length;\n      try {\n        length = is.readShort();\n      } catch (EOFException e) {\n        return false;\n      }\n\n      ref.grow(length);\n      ref.offset = 0;\n      ref.length = length;\n      is.readFully(ref.bytes, 0, length);\n      return true;\n    }\n\n","sourceOld":"    /**\n     * Reads the next entry into the provided {@link BytesRef}. The internal\n     * storage is resized if needed.\n     * \n     * @return Returns <code>false</code> if EOF occurred when trying to read\n     * the header of the next sequence. Returns <code>true</code> otherwise.\n     * @throws EOFException if the file ends before the full sequence is read.\n     */\n    public boolean read(BytesRef ref) throws IOException {\n      short length;\n      try {\n        length = is.readShort();\n      } catch (EOFException e) {\n        return false;\n      }\n\n      ref.grow(length);\n      ref.offset = 0;\n      ref.length = length;\n      is.readFully(ref.bytes, 0, length);\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36f5a8c57e16c0f801006a52f87c75378427852e","date":1393256707,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/OfflineSorter.ByteSequencesReader#read(BytesRef).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/Sort.ByteSequencesReader#read(BytesRef).mjava","sourceNew":"    /**\n     * Reads the next entry into the provided {@link BytesRef}. The internal\n     * storage is resized if needed.\n     * \n     * @return Returns <code>false</code> if EOF occurred when trying to read\n     * the header of the next sequence. Returns <code>true</code> otherwise.\n     * @throws EOFException if the file ends before the full sequence is read.\n     */\n    public boolean read(BytesRef ref) throws IOException {\n      short length;\n      try {\n        length = is.readShort();\n      } catch (EOFException e) {\n        return false;\n      }\n\n      ref.grow(length);\n      ref.offset = 0;\n      ref.length = length;\n      is.readFully(ref.bytes, 0, length);\n      return true;\n    }\n\n","sourceOld":"    /**\n     * Reads the next entry into the provided {@link BytesRef}. The internal\n     * storage is resized if needed.\n     * \n     * @return Returns <code>false</code> if EOF occurred when trying to read\n     * the header of the next sequence. Returns <code>true</code> otherwise.\n     * @throws EOFException if the file ends before the full sequence is read.\n     */\n    public boolean read(BytesRef ref) throws IOException {\n      short length;\n      try {\n        length = is.readShort();\n      } catch (EOFException e) {\n        return false;\n      }\n\n      ref.grow(length);\n      ref.offset = 0;\n      ref.length = length;\n      is.readFully(ref.bytes, 0, length);\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba791bce8103c79e38f957e9c5a53a75871bd918","date":1393539206,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/OfflineSorter.ByteSequencesReader#read(BytesRef).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/Sort.ByteSequencesReader#read(BytesRef).mjava","sourceNew":"    /**\n     * Reads the next entry into the provided {@link BytesRef}. The internal\n     * storage is resized if needed.\n     * \n     * @return Returns <code>false</code> if EOF occurred when trying to read\n     * the header of the next sequence. Returns <code>true</code> otherwise.\n     * @throws EOFException if the file ends before the full sequence is read.\n     */\n    public boolean read(BytesRef ref) throws IOException {\n      short length;\n      try {\n        length = is.readShort();\n      } catch (EOFException e) {\n        return false;\n      }\n\n      ref.grow(length);\n      ref.offset = 0;\n      ref.length = length;\n      is.readFully(ref.bytes, 0, length);\n      return true;\n    }\n\n","sourceOld":"    /**\n     * Reads the next entry into the provided {@link BytesRef}. The internal\n     * storage is resized if needed.\n     * \n     * @return Returns <code>false</code> if EOF occurred when trying to read\n     * the header of the next sequence. Returns <code>true</code> otherwise.\n     * @throws EOFException if the file ends before the full sequence is read.\n     */\n    public boolean read(BytesRef ref) throws IOException {\n      short length;\n      try {\n        length = is.readShort();\n      } catch (EOFException e) {\n        return false;\n      }\n\n      ref.grow(length);\n      ref.offset = 0;\n      ref.length = length;\n      is.readFully(ref.bytes, 0, length);\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","847d1294c8ff2f0172af20892ef98a1c6a952e09"],"ba791bce8103c79e38f957e9c5a53a75871bd918":["d4d69c535930b5cce125cff868d40f6373dc27d4","36f5a8c57e16c0f801006a52f87c75378427852e"],"36f5a8c57e16c0f801006a52f87c75378427852e":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"847d1294c8ff2f0172af20892ef98a1c6a952e09":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba791bce8103c79e38f957e9c5a53a75871bd918"]},"commit2Childs":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["ba791bce8103c79e38f957e9c5a53a75871bd918","36f5a8c57e16c0f801006a52f87c75378427852e"],"ba791bce8103c79e38f957e9c5a53a75871bd918":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"36f5a8c57e16c0f801006a52f87c75378427852e":["ba791bce8103c79e38f957e9c5a53a75871bd918"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","847d1294c8ff2f0172af20892ef98a1c6a952e09"],"847d1294c8ff2f0172af20892ef98a1c6a952e09":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}