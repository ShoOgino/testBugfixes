{"path":"lucene/core/src/java/org/apache/lucene/index/PointValues.IntersectVisitor#visit(int,byte[]).mjava","commits":[{"id":"cab7a79353f33d1a94cd307bf33aa5148601ebe6","date":1453391888,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PointValues.IntersectVisitor#visit(int,byte[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DimensionalValues.IntersectVisitor#visit(int,byte[]).mjava","sourceNew":"    /** Called for all docs in a leaf cell that crosses the query.  The consumer\n     *  should scrutinize the packedValue to decide whether to accept it. */\n    void visit(int docID, byte[] packedValue) throws IOException;\n\n","sourceOld":"    /** Called for all docs in a leaf cell that crosses the query.  The consumer\n     *  should scrutinize the packedValue to decide whether to accept it. */\n    void visit(int docID, byte[] packedValue) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62339417213032946b38beec9a9f355681c24fa6","date":1455981009,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PointValues.IntersectVisitor#visit(int,byte[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PointValues.IntersectVisitor#visit(int,byte[]).mjava","sourceNew":"    /** Called for all documents in a leaf cell that crosses the query.  The consumer\n     *  should scrutinize the packedValue to decide whether to accept it. */\n    void visit(int docID, byte[] packedValue) throws IOException;\n\n","sourceOld":"    /** Called for all docs in a leaf cell that crosses the query.  The consumer\n     *  should scrutinize the packedValue to decide whether to accept it. */\n    void visit(int docID, byte[] packedValue) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"adc9dc8ef0ce617b940a039fd12f79e8b098cc7f","date":1456936072,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PointValues.IntersectVisitor#visit(int,byte[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PointValues.IntersectVisitor#visit(int,byte[]).mjava","sourceNew":"    /** Called for all documents in a leaf cell that crosses the query.  The consumer\n     *  should scrutinize the packedValue to decide whether to accept it.  In the 1D case,\n     *  values are visited in increasing order, and in the case of ties, in increasing\n     *  docID order. */\n    void visit(int docID, byte[] packedValue) throws IOException;\n\n","sourceOld":"    /** Called for all documents in a leaf cell that crosses the query.  The consumer\n     *  should scrutinize the packedValue to decide whether to accept it. */\n    void visit(int docID, byte[] packedValue) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PointValues.IntersectVisitor#visit(int,byte[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PointValues.IntersectVisitor#visit(int,byte[]).mjava","sourceNew":"    /** Called for all documents in a leaf cell that crosses the query.  The consumer\n     *  should scrutinize the packedValue to decide whether to accept it.  In the 1D case,\n     *  values are visited in increasing order, and in the case of ties, in increasing\n     *  docID order. */\n    void visit(int docID, byte[] packedValue) throws IOException;\n\n","sourceOld":"    /** Called for all documents in a leaf cell that crosses the query.  The consumer\n     *  should scrutinize the packedValue to decide whether to accept it. */\n    void visit(int docID, byte[] packedValue) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"62339417213032946b38beec9a9f355681c24fa6":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["62339417213032946b38beec9a9f355681c24fa6","adc9dc8ef0ce617b940a039fd12f79e8b098cc7f"],"adc9dc8ef0ce617b940a039fd12f79e8b098cc7f":["62339417213032946b38beec9a9f355681c24fa6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"]},"commit2Childs":{"62339417213032946b38beec9a9f355681c24fa6":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273","adc9dc8ef0ce617b940a039fd12f79e8b098cc7f"],"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["62339417213032946b38beec9a9f355681c24fa6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"adc9dc8ef0ce617b940a039fd12f79e8b098cc7f":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}