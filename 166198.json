{"path":"lucene/core/src/java/org/apache/lucene/util/packed/BulkOperation.Packed64SingleBlockBulkOperation1#decode(LongBuffer,IntBuffer,int).mjava","commits":[{"id":"035130b0c342f404c027af8c8870587c3741cb1e","date":1342898805,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/BulkOperation.Packed64SingleBlockBulkOperation1#decode(LongBuffer,IntBuffer,int).mjava","pathOld":"/dev/null","sourceNew":"    public void decode(LongBuffer blocks, IntBuffer values, int iterations) {\n      assert blocks.position() + iterations * blocks() <= blocks.limit();\n      assert values.position() + iterations * values() <= values.limit();\n      for (int i = 0; i < iterations; ++i) {\n        final long block = blocks.get();\n        values.put((int) (block & 1L));\n        values.put((int) ((block >>> 1) & 1L));\n        values.put((int) ((block >>> 2) & 1L));\n        values.put((int) ((block >>> 3) & 1L));\n        values.put((int) ((block >>> 4) & 1L));\n        values.put((int) ((block >>> 5) & 1L));\n        values.put((int) ((block >>> 6) & 1L));\n        values.put((int) ((block >>> 7) & 1L));\n        values.put((int) ((block >>> 8) & 1L));\n        values.put((int) ((block >>> 9) & 1L));\n        values.put((int) ((block >>> 10) & 1L));\n        values.put((int) ((block >>> 11) & 1L));\n        values.put((int) ((block >>> 12) & 1L));\n        values.put((int) ((block >>> 13) & 1L));\n        values.put((int) ((block >>> 14) & 1L));\n        values.put((int) ((block >>> 15) & 1L));\n        values.put((int) ((block >>> 16) & 1L));\n        values.put((int) ((block >>> 17) & 1L));\n        values.put((int) ((block >>> 18) & 1L));\n        values.put((int) ((block >>> 19) & 1L));\n        values.put((int) ((block >>> 20) & 1L));\n        values.put((int) ((block >>> 21) & 1L));\n        values.put((int) ((block >>> 22) & 1L));\n        values.put((int) ((block >>> 23) & 1L));\n        values.put((int) ((block >>> 24) & 1L));\n        values.put((int) ((block >>> 25) & 1L));\n        values.put((int) ((block >>> 26) & 1L));\n        values.put((int) ((block >>> 27) & 1L));\n        values.put((int) ((block >>> 28) & 1L));\n        values.put((int) ((block >>> 29) & 1L));\n        values.put((int) ((block >>> 30) & 1L));\n        values.put((int) ((block >>> 31) & 1L));\n        values.put((int) ((block >>> 32) & 1L));\n        values.put((int) ((block >>> 33) & 1L));\n        values.put((int) ((block >>> 34) & 1L));\n        values.put((int) ((block >>> 35) & 1L));\n        values.put((int) ((block >>> 36) & 1L));\n        values.put((int) ((block >>> 37) & 1L));\n        values.put((int) ((block >>> 38) & 1L));\n        values.put((int) ((block >>> 39) & 1L));\n        values.put((int) ((block >>> 40) & 1L));\n        values.put((int) ((block >>> 41) & 1L));\n        values.put((int) ((block >>> 42) & 1L));\n        values.put((int) ((block >>> 43) & 1L));\n        values.put((int) ((block >>> 44) & 1L));\n        values.put((int) ((block >>> 45) & 1L));\n        values.put((int) ((block >>> 46) & 1L));\n        values.put((int) ((block >>> 47) & 1L));\n        values.put((int) ((block >>> 48) & 1L));\n        values.put((int) ((block >>> 49) & 1L));\n        values.put((int) ((block >>> 50) & 1L));\n        values.put((int) ((block >>> 51) & 1L));\n        values.put((int) ((block >>> 52) & 1L));\n        values.put((int) ((block >>> 53) & 1L));\n        values.put((int) ((block >>> 54) & 1L));\n        values.put((int) ((block >>> 55) & 1L));\n        values.put((int) ((block >>> 56) & 1L));\n        values.put((int) ((block >>> 57) & 1L));\n        values.put((int) ((block >>> 58) & 1L));\n        values.put((int) ((block >>> 59) & 1L));\n        values.put((int) ((block >>> 60) & 1L));\n        values.put((int) ((block >>> 61) & 1L));\n        values.put((int) ((block >>> 62) & 1L));\n        values.put((int) (block >>> 63));\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e3359210474c12c0b79e6400450313e3d7ef2bb","date":1344347790,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/BulkOperation.Packed64SingleBlockBulkOperation1#decode(LongBuffer,IntBuffer,int).mjava","sourceNew":null,"sourceOld":"    public void decode(LongBuffer blocks, IntBuffer values, int iterations) {\n      assert blocks.position() + iterations * blocks() <= blocks.limit();\n      assert values.position() + iterations * values() <= values.limit();\n      for (int i = 0; i < iterations; ++i) {\n        final long block = blocks.get();\n        values.put((int) (block & 1L));\n        values.put((int) ((block >>> 1) & 1L));\n        values.put((int) ((block >>> 2) & 1L));\n        values.put((int) ((block >>> 3) & 1L));\n        values.put((int) ((block >>> 4) & 1L));\n        values.put((int) ((block >>> 5) & 1L));\n        values.put((int) ((block >>> 6) & 1L));\n        values.put((int) ((block >>> 7) & 1L));\n        values.put((int) ((block >>> 8) & 1L));\n        values.put((int) ((block >>> 9) & 1L));\n        values.put((int) ((block >>> 10) & 1L));\n        values.put((int) ((block >>> 11) & 1L));\n        values.put((int) ((block >>> 12) & 1L));\n        values.put((int) ((block >>> 13) & 1L));\n        values.put((int) ((block >>> 14) & 1L));\n        values.put((int) ((block >>> 15) & 1L));\n        values.put((int) ((block >>> 16) & 1L));\n        values.put((int) ((block >>> 17) & 1L));\n        values.put((int) ((block >>> 18) & 1L));\n        values.put((int) ((block >>> 19) & 1L));\n        values.put((int) ((block >>> 20) & 1L));\n        values.put((int) ((block >>> 21) & 1L));\n        values.put((int) ((block >>> 22) & 1L));\n        values.put((int) ((block >>> 23) & 1L));\n        values.put((int) ((block >>> 24) & 1L));\n        values.put((int) ((block >>> 25) & 1L));\n        values.put((int) ((block >>> 26) & 1L));\n        values.put((int) ((block >>> 27) & 1L));\n        values.put((int) ((block >>> 28) & 1L));\n        values.put((int) ((block >>> 29) & 1L));\n        values.put((int) ((block >>> 30) & 1L));\n        values.put((int) ((block >>> 31) & 1L));\n        values.put((int) ((block >>> 32) & 1L));\n        values.put((int) ((block >>> 33) & 1L));\n        values.put((int) ((block >>> 34) & 1L));\n        values.put((int) ((block >>> 35) & 1L));\n        values.put((int) ((block >>> 36) & 1L));\n        values.put((int) ((block >>> 37) & 1L));\n        values.put((int) ((block >>> 38) & 1L));\n        values.put((int) ((block >>> 39) & 1L));\n        values.put((int) ((block >>> 40) & 1L));\n        values.put((int) ((block >>> 41) & 1L));\n        values.put((int) ((block >>> 42) & 1L));\n        values.put((int) ((block >>> 43) & 1L));\n        values.put((int) ((block >>> 44) & 1L));\n        values.put((int) ((block >>> 45) & 1L));\n        values.put((int) ((block >>> 46) & 1L));\n        values.put((int) ((block >>> 47) & 1L));\n        values.put((int) ((block >>> 48) & 1L));\n        values.put((int) ((block >>> 49) & 1L));\n        values.put((int) ((block >>> 50) & 1L));\n        values.put((int) ((block >>> 51) & 1L));\n        values.put((int) ((block >>> 52) & 1L));\n        values.put((int) ((block >>> 53) & 1L));\n        values.put((int) ((block >>> 54) & 1L));\n        values.put((int) ((block >>> 55) & 1L));\n        values.put((int) ((block >>> 56) & 1L));\n        values.put((int) ((block >>> 57) & 1L));\n        values.put((int) ((block >>> 58) & 1L));\n        values.put((int) ((block >>> 59) & 1L));\n        values.put((int) ((block >>> 60) & 1L));\n        values.put((int) ((block >>> 61) & 1L));\n        values.put((int) ((block >>> 62) & 1L));\n        values.put((int) (block >>> 63));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e3359210474c12c0b79e6400450313e3d7ef2bb":["035130b0c342f404c027af8c8870587c3741cb1e"],"035130b0c342f404c027af8c8870587c3741cb1e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["035130b0c342f404c027af8c8870587c3741cb1e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0e3359210474c12c0b79e6400450313e3d7ef2bb":[],"035130b0c342f404c027af8c8870587c3741cb1e":["0e3359210474c12c0b79e6400450313e3d7ef2bb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0e3359210474c12c0b79e6400450313e3d7ef2bb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}