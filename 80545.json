{"path":"solr/core/src/java/org/apache/solr/core/ConfigOverlay#isEditableProp(String,boolean,List[String]).mjava","commits":[{"id":"531fe719c7218235a679452eb3d137bfd8fc6af1","date":1415191086,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigOverlay#isEditableProp(String,boolean,List[String]).mjava","pathOld":"/dev/null","sourceNew":"  public static boolean isEditableProp(String path, boolean isXpath, List<String> hierarchy) {\n    List<String> parts = StrUtils.splitSmart(path, isXpath? '/':'.');\n    Object obj = editable_prop_map;\n    for (int i = 0; i < parts.size(); i++) {\n      String part = parts.get(i);\n      boolean isAttr = isXpath && part.startsWith(\"@\");\n      if(isAttr){\n        part = part.substring(1);\n      }\n      if(hierarchy != null) hierarchy.add(part);\n      if(obj ==null) return false;\n      if(i == parts.size()-1) {\n        if (obj instanceof Map) {\n          Map map = (Map) obj;\n          if(isXpath && isAttr){\n            return XML_ATTR.equals(map.get(part));\n          } else {\n             return XML_ATTR.equals( map.get(part)) || XML_NODE.equals(map.get(part));\n          }\n        }\n        return false;\n      }\n      obj = ((Map) obj).get(part);\n    }\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae2f5be890d26585d438eba0b9cc7d3c0a9775be","date":1427387954,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigOverlay#isEditableProp(String,boolean,List[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigOverlay#isEditableProp(String,boolean,List[String]).mjava","sourceNew":"  public static boolean isEditableProp(String path, boolean isXpath, List<String> hierarchy) {\n    return !(checkEditable(path, isXpath, hierarchy) == null);\n  }\n\n","sourceOld":"  public static boolean isEditableProp(String path, boolean isXpath, List<String> hierarchy) {\n    List<String> parts = StrUtils.splitSmart(path, isXpath? '/':'.');\n    Object obj = editable_prop_map;\n    for (int i = 0; i < parts.size(); i++) {\n      String part = parts.get(i);\n      boolean isAttr = isXpath && part.startsWith(\"@\");\n      if(isAttr){\n        part = part.substring(1);\n      }\n      if(hierarchy != null) hierarchy.add(part);\n      if(obj ==null) return false;\n      if(i == parts.size()-1) {\n        if (obj instanceof Map) {\n          Map map = (Map) obj;\n          if(isXpath && isAttr){\n            return XML_ATTR.equals(map.get(part));\n          } else {\n             return XML_ATTR.equals( map.get(part)) || XML_NODE.equals(map.get(part));\n          }\n        }\n        return false;\n      }\n      obj = ((Map) obj).get(part);\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigOverlay#isEditableProp(String,boolean,List[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigOverlay#isEditableProp(String,boolean,List[String]).mjava","sourceNew":"  public static boolean isEditableProp(String path, boolean isXpath, List<String> hierarchy) {\n    return !(checkEditable(path, isXpath, hierarchy) == null);\n  }\n\n","sourceOld":"  public static boolean isEditableProp(String path, boolean isXpath, List<String> hierarchy) {\n    List<String> parts = StrUtils.splitSmart(path, isXpath? '/':'.');\n    Object obj = editable_prop_map;\n    for (int i = 0; i < parts.size(); i++) {\n      String part = parts.get(i);\n      boolean isAttr = isXpath && part.startsWith(\"@\");\n      if(isAttr){\n        part = part.substring(1);\n      }\n      if(hierarchy != null) hierarchy.add(part);\n      if(obj ==null) return false;\n      if(i == parts.size()-1) {\n        if (obj instanceof Map) {\n          Map map = (Map) obj;\n          if(isXpath && isAttr){\n            return XML_ATTR.equals(map.get(part));\n          } else {\n             return XML_ATTR.equals( map.get(part)) || XML_NODE.equals(map.get(part));\n          }\n        }\n        return false;\n      }\n      obj = ((Map) obj).get(part);\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["531fe719c7218235a679452eb3d137bfd8fc6af1","ae2f5be890d26585d438eba0b9cc7d3c0a9775be"],"531fe719c7218235a679452eb3d137bfd8fc6af1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ae2f5be890d26585d438eba0b9cc7d3c0a9775be":["531fe719c7218235a679452eb3d137bfd8fc6af1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ae2f5be890d26585d438eba0b9cc7d3c0a9775be"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"531fe719c7218235a679452eb3d137bfd8fc6af1":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","ae2f5be890d26585d438eba0b9cc7d3c0a9775be"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["531fe719c7218235a679452eb3d137bfd8fc6af1"],"ae2f5be890d26585d438eba0b9cc7d3c0a9775be":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}