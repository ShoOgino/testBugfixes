{"path":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.FieldValueCollapse#FieldValueCollapse(int,String,int,boolean,boolean,IntOpenHashSet).mjava","commits":[{"id":"ceae51e37bbff02dcdeaa12303fec10d3eaaa004","date":1387382773,"type":1,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.FieldValueCollapse#FieldValueCollapse(int,String,int,boolean,boolean,IntOpenHashSet).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.FieldValueCollapse#FieldValueCollapse(SolrIndexSearcher,String,int,boolean,boolean,IntOpenHashSet).mjava","sourceNew":"    public FieldValueCollapse(int maxDoc,\n                              String field,\n                              int nullPolicy,\n                              boolean max,\n                              boolean needsScores,\n                              IntOpenHashSet boostDocs) {\n      this.field = field;\n      this.nullPolicy = nullPolicy;\n      this.max = max;\n      this.needsScores = needsScores;\n      this.collapsedSet = new OpenBitSet(maxDoc);\n      this.boostDocs = boostDocs;\n      if(this.boostDocs != null) {\n        Iterator<IntCursor> it = boostDocs.iterator();\n        while(it.hasNext()) {\n          IntCursor cursor = it.next();\n          this.collapsedSet.fastSet(cursor.value);\n        }\n      }\n    }\n\n","sourceOld":"    public FieldValueCollapse(SolrIndexSearcher searcher,\n                              String field,\n                              int nullPolicy,\n                              boolean max,\n                              boolean needsScores,\n                              IntOpenHashSet boostDocs) {\n      this.field = field;\n      this.nullPolicy = nullPolicy;\n      this.max = max;\n      this.needsScores = needsScores;\n      this.collapsedSet = new OpenBitSet(searcher.maxDoc());\n      this.boostDocs = boostDocs;\n      if(this.boostDocs != null) {\n        Iterator<IntCursor> it = boostDocs.iterator();\n        while(it.hasNext()) {\n          IntCursor cursor = it.next();\n          this.collapsedSet.fastSet(cursor.value);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.FieldValueCollapse#FieldValueCollapse(int,String,int,boolean,boolean,IntOpenHashSet).mjava","pathOld":"/dev/null","sourceNew":"    public FieldValueCollapse(int maxDoc,\n                              String field,\n                              int nullPolicy,\n                              boolean max,\n                              boolean needsScores,\n                              IntOpenHashSet boostDocs) {\n      this.field = field;\n      this.nullPolicy = nullPolicy;\n      this.max = max;\n      this.needsScores = needsScores;\n      this.collapsedSet = new OpenBitSet(maxDoc);\n      this.boostDocs = boostDocs;\n      if(this.boostDocs != null) {\n        Iterator<IntCursor> it = boostDocs.iterator();\n        while(it.hasNext()) {\n          IntCursor cursor = it.next();\n          this.collapsedSet.fastSet(cursor.value);\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a69cf7f1b4cac5d5b1363402b565cd535f13e6a1","date":1392536197,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.FieldValueCollapse#FieldValueCollapse(int,String,int,boolean,boolean,IntOpenHashSet).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.FieldValueCollapse#FieldValueCollapse(int,String,int,boolean,boolean,IntOpenHashSet).mjava","sourceNew":"    public FieldValueCollapse(int maxDoc,\n                              String field,\n                              int nullPolicy,\n                              boolean max,\n                              boolean needsScores,\n                              IntOpenHashSet boostDocs) {\n      this.field = field;\n      this.nullPolicy = nullPolicy;\n      this.max = max;\n      this.needsScores = needsScores;\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.boostDocs = boostDocs;\n      if(this.boostDocs != null) {\n        Iterator<IntCursor> it = boostDocs.iterator();\n        while(it.hasNext()) {\n          IntCursor cursor = it.next();\n          this.collapsedSet.set(cursor.value);\n        }\n      }\n    }\n\n","sourceOld":"    public FieldValueCollapse(int maxDoc,\n                              String field,\n                              int nullPolicy,\n                              boolean max,\n                              boolean needsScores,\n                              IntOpenHashSet boostDocs) {\n      this.field = field;\n      this.nullPolicy = nullPolicy;\n      this.max = max;\n      this.needsScores = needsScores;\n      this.collapsedSet = new OpenBitSet(maxDoc);\n      this.boostDocs = boostDocs;\n      if(this.boostDocs != null) {\n        Iterator<IntCursor> it = boostDocs.iterator();\n        while(it.hasNext()) {\n          IntCursor cursor = it.next();\n          this.collapsedSet.fastSet(cursor.value);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a72d053a3654ff5cb7da6c761dfbfbea4258aa5","date":1396311813,"type":5,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.FieldValueCollapse#FieldValueCollapse(int,String,int,boolean,boolean,IntOpenHashSet,SortedDocValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.FieldValueCollapse#FieldValueCollapse(int,String,int,boolean,boolean,IntOpenHashSet).mjava","sourceNew":"    public FieldValueCollapse(int maxDoc,\n                              String field,\n                              int nullPolicy,\n                              boolean max,\n                              boolean needsScores,\n                              IntOpenHashSet boostDocs,\n                              SortedDocValues values) {\n      this.field = field;\n      this.nullPolicy = nullPolicy;\n      this.max = max;\n      this.needsScores = needsScores;\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.boostDocs = boostDocs;\n      if(this.boostDocs != null) {\n        IntOpenHashSet boostG = new IntOpenHashSet();\n        Iterator<IntCursor> it = boostDocs.iterator();\n        while(it.hasNext()) {\n          IntCursor cursor = it.next();\n          int i = cursor.value;\n          this.collapsedSet.set(i);\n          int ord = values.getOrd(i);\n          if(ord > -1) {\n            boostG.add(ord);\n          }\n        }\n        this.boostOrds = boostG.toArray();\n        Arrays.sort(this.boostOrds);\n      }\n    }\n\n","sourceOld":"    public FieldValueCollapse(int maxDoc,\n                              String field,\n                              int nullPolicy,\n                              boolean max,\n                              boolean needsScores,\n                              IntOpenHashSet boostDocs) {\n      this.field = field;\n      this.nullPolicy = nullPolicy;\n      this.max = max;\n      this.needsScores = needsScores;\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.boostDocs = boostDocs;\n      if(this.boostDocs != null) {\n        Iterator<IntCursor> it = boostDocs.iterator();\n        while(it.hasNext()) {\n          IntCursor cursor = it.next();\n          this.collapsedSet.set(cursor.value);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":5,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.FieldValueCollapse#FieldValueCollapse(int,String,int,boolean,boolean,IntOpenHashSet,SortedDocValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.FieldValueCollapse#FieldValueCollapse(int,String,int,boolean,boolean,IntOpenHashSet).mjava","sourceNew":"    public FieldValueCollapse(int maxDoc,\n                              String field,\n                              int nullPolicy,\n                              boolean max,\n                              boolean needsScores,\n                              IntOpenHashSet boostDocs,\n                              SortedDocValues values) {\n      this.field = field;\n      this.nullPolicy = nullPolicy;\n      this.max = max;\n      this.needsScores = needsScores;\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.boostDocs = boostDocs;\n      if(this.boostDocs != null) {\n        IntOpenHashSet boostG = new IntOpenHashSet();\n        Iterator<IntCursor> it = boostDocs.iterator();\n        while(it.hasNext()) {\n          IntCursor cursor = it.next();\n          int i = cursor.value;\n          this.collapsedSet.set(i);\n          int ord = values.getOrd(i);\n          if(ord > -1) {\n            boostG.add(ord);\n          }\n        }\n        this.boostOrds = boostG.toArray();\n        Arrays.sort(this.boostOrds);\n      }\n    }\n\n","sourceOld":"    public FieldValueCollapse(int maxDoc,\n                              String field,\n                              int nullPolicy,\n                              boolean max,\n                              boolean needsScores,\n                              IntOpenHashSet boostDocs) {\n      this.field = field;\n      this.nullPolicy = nullPolicy;\n      this.max = max;\n      this.needsScores = needsScores;\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.boostDocs = boostDocs;\n      if(this.boostDocs != null) {\n        Iterator<IntCursor> it = boostDocs.iterator();\n        while(it.hasNext()) {\n          IntCursor cursor = it.next();\n          this.collapsedSet.set(cursor.value);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["a69cf7f1b4cac5d5b1363402b565cd535f13e6a1","0a72d053a3654ff5cb7da6c761dfbfbea4258aa5"],"a69cf7f1b4cac5d5b1363402b565cd535f13e6a1":["ceae51e37bbff02dcdeaa12303fec10d3eaaa004"],"0a72d053a3654ff5cb7da6c761dfbfbea4258aa5":["a69cf7f1b4cac5d5b1363402b565cd535f13e6a1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ceae51e37bbff02dcdeaa12303fec10d3eaaa004"],"ceae51e37bbff02dcdeaa12303fec10d3eaaa004":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0a72d053a3654ff5cb7da6c761dfbfbea4258aa5"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"a69cf7f1b4cac5d5b1363402b565cd535f13e6a1":["5eb2511ababf862ea11e10761c70ee560cd84510","0a72d053a3654ff5cb7da6c761dfbfbea4258aa5"],"0a72d053a3654ff5cb7da6c761dfbfbea4258aa5":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","ceae51e37bbff02dcdeaa12303fec10d3eaaa004"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"ceae51e37bbff02dcdeaa12303fec10d3eaaa004":["a69cf7f1b4cac5d5b1363402b565cd535f13e6a1","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}