{"path":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#visitLeafBlockValues(IndexTree,IntersectState).mjava","commits":[{"id":"9fc0d60683b47b5d922124c31f57c8b34734f9e6","date":1480846684,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#visitLeafBlockValues(IndexTree,IntersectState).mjava","pathOld":"/dev/null","sourceNew":"  /** Visits all docIDs and packed values in a single leaf block */\n  public void visitLeafBlockValues(IndexTree index, IntersectState state) throws IOException {\n\n    // Leaf node; scan and filter all points in this block:\n    int count = readDocIDs(state.in, index.getLeafBlockFP(), state.scratchDocIDs);\n\n    // Again, this time reading values and checking with the visitor\n    visitDocValues(state.commonPrefixLengths, state.scratchPackedValue, state.in, state.scratchDocIDs, count, state.visitor);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9856095f7afb5a607bf5e65077615ed91273508c","date":1481837697,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#visitLeafBlockValues(IndexTree,IntersectState).mjava","pathOld":"/dev/null","sourceNew":"  /** Visits all docIDs and packed values in a single leaf block */\n  public void visitLeafBlockValues(IndexTree index, IntersectState state) throws IOException {\n\n    // Leaf node; scan and filter all points in this block:\n    int count = readDocIDs(state.in, index.getLeafBlockFP(), state.scratchDocIDs);\n\n    // Again, this time reading values and checking with the visitor\n    visitDocValues(state.commonPrefixLengths, state.scratchPackedValue, state.in, state.scratchDocIDs, count, state.visitor);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d774afea15a18cc375fae2ffaa8319935d0a7b2a","date":1536414150,"type":3,"author":"iverase","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#visitLeafBlockValues(IndexTree,IntersectState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#visitLeafBlockValues(IndexTree,IntersectState).mjava","sourceNew":"  /** Visits all docIDs and packed values in a single leaf block */\n  public void visitLeafBlockValues(IndexTree index, IntersectState state) throws IOException {\n\n    // Leaf node; scan and filter all points in this block:\n    int count = readDocIDs(state.in, index.getLeafBlockFP(), state.scratchDocIDs);\n\n    // Again, this time reading values and checking with the visitor\n    visitDocValues(state.commonPrefixLengths, state.scratchPackedValue1, state.scratchPackedValue2, state.in, state.scratchDocIDs, count, state.visitor);\n  }\n\n","sourceOld":"  /** Visits all docIDs and packed values in a single leaf block */\n  public void visitLeafBlockValues(IndexTree index, IntersectState state) throws IOException {\n\n    // Leaf node; scan and filter all points in this block:\n    int count = readDocIDs(state.in, index.getLeafBlockFP(), state.scratchDocIDs);\n\n    // Again, this time reading values and checking with the visitor\n    visitDocValues(state.commonPrefixLengths, state.scratchPackedValue, state.in, state.scratchDocIDs, count, state.visitor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6652c943595e92c187ee904c382863013eae28f","date":1539042663,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#visitLeafBlockValues(IndexTree,IntersectState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#visitLeafBlockValues(IndexTree,IntersectState).mjava","sourceNew":"  /** Visits all docIDs and packed values in a single leaf block */\n  public void visitLeafBlockValues(IndexTree index, IntersectState state) throws IOException {\n\n    // Leaf node; scan and filter all points in this block:\n    int count = readDocIDs(state.in, index.getLeafBlockFP(), state.scratchDocIDs);\n\n    // Again, this time reading values and checking with the visitor\n    visitDocValues(state.commonPrefixLengths, state.scratchDataPackedValue, state.scratchMinIndexPackedValue, state.scratchMaxIndexPackedValue, state.in, state.scratchDocIDs, count, state.visitor);\n  }\n\n","sourceOld":"  /** Visits all docIDs and packed values in a single leaf block */\n  public void visitLeafBlockValues(IndexTree index, IntersectState state) throws IOException {\n\n    // Leaf node; scan and filter all points in this block:\n    int count = readDocIDs(state.in, index.getLeafBlockFP(), state.scratchDocIDs);\n\n    // Again, this time reading values and checking with the visitor\n    visitDocValues(state.commonPrefixLengths, state.scratchPackedValue1, state.scratchPackedValue2, state.in, state.scratchDocIDs, count, state.visitor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a14a9a6131884330f34844dabc1ece206ceaea9","date":1561954503,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#visitLeafBlockValues(IndexTree,IntersectState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#visitLeafBlockValues(IndexTree,IntersectState).mjava","sourceNew":"  /** Visits all docIDs and packed values in a single leaf block */\n  public void visitLeafBlockValues(IndexTree index, IntersectState state) throws IOException {\n\n    // Leaf node; scan and filter all points in this block:\n    int count = readDocIDs(state.in, index.getLeafBlockFP(), state.scratchIterator);\n\n    // Again, this time reading values and checking with the visitor\n    visitDocValues(state.commonPrefixLengths, state.scratchDataPackedValue, state.scratchMinIndexPackedValue, state.scratchMaxIndexPackedValue, state.in, state.scratchIterator, count, state.visitor);\n  }\n\n","sourceOld":"  /** Visits all docIDs and packed values in a single leaf block */\n  public void visitLeafBlockValues(IndexTree index, IntersectState state) throws IOException {\n\n    // Leaf node; scan and filter all points in this block:\n    int count = readDocIDs(state.in, index.getLeafBlockFP(), state.scratchDocIDs);\n\n    // Again, this time reading values and checking with the visitor\n    visitDocValues(state.commonPrefixLengths, state.scratchDataPackedValue, state.scratchMinIndexPackedValue, state.scratchMaxIndexPackedValue, state.in, state.scratchDocIDs, count, state.visitor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9fc0d60683b47b5d922124c31f57c8b34734f9e6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f6652c943595e92c187ee904c382863013eae28f":["d774afea15a18cc375fae2ffaa8319935d0a7b2a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8a14a9a6131884330f34844dabc1ece206ceaea9":["f6652c943595e92c187ee904c382863013eae28f"],"9856095f7afb5a607bf5e65077615ed91273508c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9fc0d60683b47b5d922124c31f57c8b34734f9e6"],"d774afea15a18cc375fae2ffaa8319935d0a7b2a":["9fc0d60683b47b5d922124c31f57c8b34734f9e6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8a14a9a6131884330f34844dabc1ece206ceaea9"]},"commit2Childs":{"9fc0d60683b47b5d922124c31f57c8b34734f9e6":["9856095f7afb5a607bf5e65077615ed91273508c","d774afea15a18cc375fae2ffaa8319935d0a7b2a"],"f6652c943595e92c187ee904c382863013eae28f":["8a14a9a6131884330f34844dabc1ece206ceaea9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9fc0d60683b47b5d922124c31f57c8b34734f9e6","9856095f7afb5a607bf5e65077615ed91273508c"],"8a14a9a6131884330f34844dabc1ece206ceaea9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9856095f7afb5a607bf5e65077615ed91273508c":[],"d774afea15a18cc375fae2ffaa8319935d0a7b2a":["f6652c943595e92c187ee904c382863013eae28f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9856095f7afb5a607bf5e65077615ed91273508c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}