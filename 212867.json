{"path":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestNumericQueryParser#setFieldValues(NumberType,HashMap[String,Field]).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestNumericQueryParser#setFieldValues(NumberType,HashMap[String,Field]).mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestNumericQueryParser#setFieldValues(NumberType,HashMap[String,Field]).mjava","sourceNew":"  private static void setFieldValues(NumberType numberType,\n      HashMap<String,Field> numericFieldMap) {\n    \n    Number number = getNumberType(numberType, NumericType.DOUBLE\n        .name());\n    numericFieldMap.get(NumericType.DOUBLE.name()).setDoubleValue(\n        number.doubleValue());\n    \n    number = getNumberType(numberType, NumericType.INT.name());\n    numericFieldMap.get(NumericType.INT.name()).setIntValue(\n        number.intValue());\n    \n    number = getNumberType(numberType, NumericType.LONG.name());\n    numericFieldMap.get(NumericType.LONG.name()).setLongValue(\n        number.longValue());\n    \n    number = getNumberType(numberType, NumericType.FLOAT.name());\n    numericFieldMap.get(NumericType.FLOAT.name()).setFloatValue(\n        number.floatValue());\n    \n    number = getNumberType(numberType, DATE_FIELD_NAME);\n    numericFieldMap.get(DATE_FIELD_NAME).setLongValue(number.longValue());\n  }\n\n","sourceOld":"  private static void setFieldValues(NumberType numberType,\n      HashMap<String,Field> numericFieldMap) {\n    \n    Number number = getNumberType(numberType, NumericType.DOUBLE\n        .name());\n    numericFieldMap.get(NumericType.DOUBLE.name()).setDoubleValue(\n        number.doubleValue());\n    \n    number = getNumberType(numberType, NumericType.INT.name());\n    numericFieldMap.get(NumericType.INT.name()).setIntValue(\n        number.intValue());\n    \n    number = getNumberType(numberType, NumericType.LONG.name());\n    numericFieldMap.get(NumericType.LONG.name()).setLongValue(\n        number.longValue());\n    \n    number = getNumberType(numberType, NumericType.FLOAT.name());\n    numericFieldMap.get(NumericType.FLOAT.name()).setFloatValue(\n        number.floatValue());\n    \n    number = getNumberType(numberType, DATE_FIELD_NAME);\n    numericFieldMap.get(DATE_FIELD_NAME).setLongValue(number.longValue());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"770342641f7b505eaa8dccdc666158bff2419109","date":1449868421,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestNumericQueryParser#setFieldValues(NumberType,HashMap[String,Field]).mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestNumericQueryParser#setFieldValues(NumberType,HashMap[String,Field]).mjava","sourceNew":"  private static void setFieldValues(NumberType numberType,\n      HashMap<String,Field> numericFieldMap) {\n    \n    Number number = getNumberType(numberType, LegacyNumericType.DOUBLE\n        .name());\n    numericFieldMap.get(LegacyNumericType.DOUBLE.name()).setDoubleValue(\n        number.doubleValue());\n    \n    number = getNumberType(numberType, FieldType.LegacyNumericType.INT.name());\n    numericFieldMap.get(FieldType.LegacyNumericType.INT.name()).setIntValue(\n        number.intValue());\n    \n    number = getNumberType(numberType, LegacyNumericType.LONG.name());\n    numericFieldMap.get(FieldType.LegacyNumericType.LONG.name()).setLongValue(\n        number.longValue());\n    \n    number = getNumberType(numberType, FieldType.LegacyNumericType.FLOAT.name());\n    numericFieldMap.get(FieldType.LegacyNumericType.FLOAT.name()).setFloatValue(\n        number.floatValue());\n    \n    number = getNumberType(numberType, DATE_FIELD_NAME);\n    numericFieldMap.get(DATE_FIELD_NAME).setLongValue(number.longValue());\n  }\n\n","sourceOld":"  private static void setFieldValues(NumberType numberType,\n      HashMap<String,Field> numericFieldMap) {\n    \n    Number number = getNumberType(numberType, NumericType.DOUBLE\n        .name());\n    numericFieldMap.get(NumericType.DOUBLE.name()).setDoubleValue(\n        number.doubleValue());\n    \n    number = getNumberType(numberType, NumericType.INT.name());\n    numericFieldMap.get(NumericType.INT.name()).setIntValue(\n        number.intValue());\n    \n    number = getNumberType(numberType, NumericType.LONG.name());\n    numericFieldMap.get(NumericType.LONG.name()).setLongValue(\n        number.longValue());\n    \n    number = getNumberType(numberType, NumericType.FLOAT.name());\n    numericFieldMap.get(NumericType.FLOAT.name()).setFloatValue(\n        number.floatValue());\n    \n    number = getNumberType(numberType, DATE_FIELD_NAME);\n    numericFieldMap.get(DATE_FIELD_NAME).setLongValue(number.longValue());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"683242c67a3f6086bae8b1354748fcaa38edfbd5","date":1457575601,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestLegacyNumericQueryParser#setFieldValues(NumberType,HashMap[String,Field]).mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestNumericQueryParser#setFieldValues(NumberType,HashMap[String,Field]).mjava","sourceNew":"  private static void setFieldValues(NumberType numberType,\n      HashMap<String,Field> numericFieldMap) {\n    \n    Number number = getNumberType(numberType, LegacyNumericType.DOUBLE\n        .name());\n    numericFieldMap.get(LegacyNumericType.DOUBLE.name()).setDoubleValue(\n        number.doubleValue());\n    \n    number = getNumberType(numberType, FieldType.LegacyNumericType.INT.name());\n    numericFieldMap.get(FieldType.LegacyNumericType.INT.name()).setIntValue(\n        number.intValue());\n    \n    number = getNumberType(numberType, LegacyNumericType.LONG.name());\n    numericFieldMap.get(FieldType.LegacyNumericType.LONG.name()).setLongValue(\n        number.longValue());\n    \n    number = getNumberType(numberType, FieldType.LegacyNumericType.FLOAT.name());\n    numericFieldMap.get(FieldType.LegacyNumericType.FLOAT.name()).setFloatValue(\n        number.floatValue());\n    \n    number = getNumberType(numberType, DATE_FIELD_NAME);\n    numericFieldMap.get(DATE_FIELD_NAME).setLongValue(number.longValue());\n  }\n\n","sourceOld":"  private static void setFieldValues(NumberType numberType,\n      HashMap<String,Field> numericFieldMap) {\n    \n    Number number = getNumberType(numberType, LegacyNumericType.DOUBLE\n        .name());\n    numericFieldMap.get(LegacyNumericType.DOUBLE.name()).setDoubleValue(\n        number.doubleValue());\n    \n    number = getNumberType(numberType, FieldType.LegacyNumericType.INT.name());\n    numericFieldMap.get(FieldType.LegacyNumericType.INT.name()).setIntValue(\n        number.intValue());\n    \n    number = getNumberType(numberType, LegacyNumericType.LONG.name());\n    numericFieldMap.get(FieldType.LegacyNumericType.LONG.name()).setLongValue(\n        number.longValue());\n    \n    number = getNumberType(numberType, FieldType.LegacyNumericType.FLOAT.name());\n    numericFieldMap.get(FieldType.LegacyNumericType.FLOAT.name()).setFloatValue(\n        number.floatValue());\n    \n    number = getNumberType(numberType, DATE_FIELD_NAME);\n    numericFieldMap.get(DATE_FIELD_NAME).setLongValue(number.longValue());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"683242c67a3f6086bae8b1354748fcaa38edfbd5":["770342641f7b505eaa8dccdc666158bff2419109"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"770342641f7b505eaa8dccdc666158bff2419109":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["683242c67a3f6086bae8b1354748fcaa38edfbd5"]},"commit2Childs":{"683242c67a3f6086bae8b1354748fcaa38edfbd5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["770342641f7b505eaa8dccdc666158bff2419109"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"770342641f7b505eaa8dccdc666158bff2419109":["683242c67a3f6086bae8b1354748fcaa38edfbd5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}