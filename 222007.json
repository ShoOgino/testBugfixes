{"path":"lucene/src/java/org/apache/lucene/index/SegmentInfo#hasDeletions().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#hasDeletions().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#hasDeletions().mjava","sourceNew":"  public boolean hasDeletions()\n    throws IOException {\n    // Cases:\n    //\n    //   delGen == NO: this means this segment was written\n    //     by the LOCKLESS code and for certain does not have\n    //     deletions yet\n    //\n    //   delGen == CHECK_DIR: this means this segment was written by\n    //     pre-LOCKLESS code which means we must check\n    //     directory to see if .del file exists\n    //\n    //   delGen >= YES: this means this segment was written by\n    //     the LOCKLESS code and for certain has\n    //     deletions\n    //\n    if (delGen == NO) {\n      return false;\n    } else if (delGen >= YES) {\n      return true;\n    } else {\n      return dir.fileExists(getDelFileName());\n    }\n  }\n\n","sourceOld":"  public boolean hasDeletions()\n    throws IOException {\n    // Cases:\n    //\n    //   delGen == NO: this means this segment was written\n    //     by the LOCKLESS code and for certain does not have\n    //     deletions yet\n    //\n    //   delGen == CHECK_DIR: this means this segment was written by\n    //     pre-LOCKLESS code which means we must check\n    //     directory to see if .del file exists\n    //\n    //   delGen >= YES: this means this segment was written by\n    //     the LOCKLESS code and for certain has\n    //     deletions\n    //\n    if (delGen == NO) {\n      return false;\n    } else if (delGen >= YES) {\n      return true;\n    } else {\n      return dir.fileExists(getDelFileName());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6267e1ce56c2eec111425690cd04e251b6f14952","date":1275222352,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#hasDeletions().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#hasDeletions().mjava","sourceNew":"  public boolean hasDeletions() {\n    // Cases:\n    //\n    //   delGen == NO: this means this segment does not have deletions yet\n    //   delGen >= YES: this means this segment has deletions\n    //\n    return delGen != NO;\n  }\n\n","sourceOld":"  public boolean hasDeletions()\n    throws IOException {\n    // Cases:\n    //\n    //   delGen == NO: this means this segment was written\n    //     by the LOCKLESS code and for certain does not have\n    //     deletions yet\n    //\n    //   delGen == CHECK_DIR: this means this segment was written by\n    //     pre-LOCKLESS code which means we must check\n    //     directory to see if .del file exists\n    //\n    //   delGen >= YES: this means this segment was written by\n    //     the LOCKLESS code and for certain has\n    //     deletions\n    //\n    if (delGen == NO) {\n      return false;\n    } else if (delGen >= YES) {\n      return true;\n    } else {\n      return dir.fileExists(getDelFileName());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#hasDeletions().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#hasDeletions().mjava","sourceNew":"  public boolean hasDeletions() {\n    // Cases:\n    //\n    //   delGen == NO: this means this segment does not have deletions yet\n    //   delGen >= YES: this means this segment has deletions\n    //\n    return delGen != NO;\n  }\n\n","sourceOld":"  public boolean hasDeletions() {\n    // Cases:\n    //\n    //   delGen == NO: this means this segment does not have deletions yet\n    //   delGen >= YES: this means this segment has deletions\n    //\n    return delGen != NO;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6267e1ce56c2eec111425690cd04e251b6f14952":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["6267e1ce56c2eec111425690cd04e251b6f14952"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6267e1ce56c2eec111425690cd04e251b6f14952":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["6267e1ce56c2eec111425690cd04e251b6f14952"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}