{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.ReplaceNode#ReplaceNode(String,String).mjava","commits":[{"id":"b1777912fb613f51063554d81f71c1b70d6bcd77","date":1470897768,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.ReplaceNode#ReplaceNode(String,String).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * @param source node to be cleaned up\n     * @param target node where the new replicas are to be created\n     */\n    public ReplaceNode(String source, String target) {\n      super(CollectionAction.REPLACENODE);\n      this.source = source;\n      this.target = target;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.ReplaceNode#ReplaceNode(String,String).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * @param source node to be cleaned up\n     * @param target node where the new replicas are to be created\n     */\n    public ReplaceNode(String source, String target) {\n      super(CollectionAction.REPLACENODE);\n      this.source = source;\n      this.target = target;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.ReplaceNode#ReplaceNode(String,String).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * @param source node to be cleaned up\n     * @param target node where the new replicas are to be created\n     */\n    public ReplaceNode(String source, String target) {\n      super(CollectionAction.REPLACENODE);\n      this.source = source;\n      this.target = target;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac97ea104d893f16aab430d9904473bc1f233f3c","date":1496249396,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.ReplaceNode#ReplaceNode(String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.ReplaceNode#ReplaceNode(String,String).mjava","sourceNew":"    /**\n     * @param source node to be cleaned up\n     * @param target node where the new replicas are to be created\n     */\n    public ReplaceNode(String source, String target) {\n      super(CollectionAction.REPLACENODE);\n      this.source = checkNotNull(\"source\",source);\n      this.target = checkNotNull(\"target\",target);\n    }\n\n","sourceOld":"    /**\n     * @param source node to be cleaned up\n     * @param target node where the new replicas are to be created\n     */\n    public ReplaceNode(String source, String target) {\n      super(CollectionAction.REPLACENODE);\n      this.source = source;\n      this.target = target;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3217321f3e1d7922898c6c633d17acfa840d6875","date":1496257480,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.ReplaceNode#ReplaceNode(String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.ReplaceNode#ReplaceNode(String,String).mjava","sourceNew":"    /**\n     * @param source node to be cleaned up\n     * @param target node where the new replicas are to be created\n     */\n    public ReplaceNode(String source, String target) {\n      super(CollectionAction.REPLACENODE);\n      this.source = checkNotNull(\"source\",source);\n      this.target = checkNotNull(\"target\",target);\n    }\n\n","sourceOld":"    /**\n     * @param source node to be cleaned up\n     * @param target node where the new replicas are to be created\n     */\n    public ReplaceNode(String source, String target) {\n      super(CollectionAction.REPLACENODE);\n      this.source = source;\n      this.target = target;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42dc7f2d60851668d9efa2d12baa1d4ebe54b12f","date":1496281877,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.ReplaceNode#ReplaceNode(String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.ReplaceNode#ReplaceNode(String,String).mjava","sourceNew":"    /**\n     * @param source node to be cleaned up\n     * @param target node where the new replicas are to be created\n     */\n    public ReplaceNode(String source, String target) {\n      super(CollectionAction.REPLACENODE);\n      this.source = checkNotNull(\"source\",source);\n      this.target = checkNotNull(\"target\",target);\n    }\n\n","sourceOld":"    /**\n     * @param source node to be cleaned up\n     * @param target node where the new replicas are to be created\n     */\n    public ReplaceNode(String source, String target) {\n      super(CollectionAction.REPLACENODE);\n      this.source = source;\n      this.target = target;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.ReplaceNode#ReplaceNode(String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.ReplaceNode#ReplaceNode(String,String).mjava","sourceNew":"    /**\n     * @param source node to be cleaned up\n     * @param target node where the new replicas are to be created\n     */\n    public ReplaceNode(String source, String target) {\n      super(CollectionAction.REPLACENODE);\n      this.source = checkNotNull(\"source\",source);\n      this.target = checkNotNull(\"target\",target);\n    }\n\n","sourceOld":"    /**\n     * @param source node to be cleaned up\n     * @param target node where the new replicas are to be created\n     */\n    public ReplaceNode(String source, String target) {\n      super(CollectionAction.REPLACENODE);\n      this.source = source;\n      this.target = target;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"541d16fbfc627e2eeecfb3eb40fe384fa8c75b4e","date":1500089733,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.ReplaceNode#ReplaceNode(String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.ReplaceNode#ReplaceNode(String,String).mjava","sourceNew":"    /**\n     * @param source node to be cleaned up\n     * @param target node where the new replicas are to be created\n     */\n    public ReplaceNode(String source, String target) {\n      super(CollectionAction.REPLACENODE);\n      this.sourceNode = checkNotNull(CollectionParams.SOURCE_NODE, source);\n      this.targetNode = checkNotNull(CollectionParams.TARGET_NODE, target);\n    }\n\n","sourceOld":"    /**\n     * @param source node to be cleaned up\n     * @param target node where the new replicas are to be created\n     */\n    public ReplaceNode(String source, String target) {\n      super(CollectionAction.REPLACENODE);\n      this.source = checkNotNull(\"source\",source);\n      this.target = checkNotNull(\"target\",target);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aaf90fc29510e72665ac7934f34c3d1c25efad64","date":1500354819,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.ReplaceNode#ReplaceNode(String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.ReplaceNode#ReplaceNode(String,String).mjava","sourceNew":"    /**\n     * @param source node to be cleaned up\n     * @param target node where the new replicas are to be created\n     */\n    public ReplaceNode(String source, String target) {\n      super(CollectionAction.REPLACENODE);\n      this.sourceNode = checkNotNull(CollectionParams.SOURCE_NODE, source);\n      this.targetNode = checkNotNull(CollectionParams.TARGET_NODE, target);\n    }\n\n","sourceOld":"    /**\n     * @param source node to be cleaned up\n     * @param target node where the new replicas are to be created\n     */\n    public ReplaceNode(String source, String target) {\n      super(CollectionAction.REPLACENODE);\n      this.source = checkNotNull(\"source\",source);\n      this.target = checkNotNull(\"target\",target);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135a17bf08af5eaa5db73b2de6d1e36ea2ecafa1","date":1517395742,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.ReplaceNode#ReplaceNode(String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.ReplaceNode#ReplaceNode(String,String).mjava","sourceNew":"    /**\n     * @param source node to be cleaned up\n     * @param target node where the new replicas are to be created\n     */\n    public ReplaceNode(String source, String target) {\n      super(CollectionAction.REPLACENODE);\n      this.sourceNode = checkNotNull(CollectionParams.SOURCE_NODE, source);\n      this.targetNode = target;\n    }\n\n","sourceOld":"    /**\n     * @param source node to be cleaned up\n     * @param target node where the new replicas are to be created\n     */\n    public ReplaceNode(String source, String target) {\n      super(CollectionAction.REPLACENODE);\n      this.sourceNode = checkNotNull(CollectionParams.SOURCE_NODE, source);\n      this.targetNode = checkNotNull(CollectionParams.TARGET_NODE, target);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["403d05f7f8d69b65659157eff1bc1d2717f04c66","42dc7f2d60851668d9efa2d12baa1d4ebe54b12f"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b1777912fb613f51063554d81f71c1b70d6bcd77"],"135a17bf08af5eaa5db73b2de6d1e36ea2ecafa1":["541d16fbfc627e2eeecfb3eb40fe384fa8c75b4e"],"aaf90fc29510e72665ac7934f34c3d1c25efad64":["e9017cf144952056066919f1ebc7897ff9bd71b1","541d16fbfc627e2eeecfb3eb40fe384fa8c75b4e"],"541d16fbfc627e2eeecfb3eb40fe384fa8c75b4e":["3217321f3e1d7922898c6c633d17acfa840d6875"],"ac97ea104d893f16aab430d9904473bc1f233f3c":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3217321f3e1d7922898c6c633d17acfa840d6875":["403d05f7f8d69b65659157eff1bc1d2717f04c66","ac97ea104d893f16aab430d9904473bc1f233f3c"],"b1777912fb613f51063554d81f71c1b70d6bcd77":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"42dc7f2d60851668d9efa2d12baa1d4ebe54b12f":["403d05f7f8d69b65659157eff1bc1d2717f04c66","3217321f3e1d7922898c6c633d17acfa840d6875"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","403d05f7f8d69b65659157eff1bc1d2717f04c66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["135a17bf08af5eaa5db73b2de6d1e36ea2ecafa1"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["aaf90fc29510e72665ac7934f34c3d1c25efad64"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["e9017cf144952056066919f1ebc7897ff9bd71b1","ac97ea104d893f16aab430d9904473bc1f233f3c","3217321f3e1d7922898c6c633d17acfa840d6875","42dc7f2d60851668d9efa2d12baa1d4ebe54b12f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"135a17bf08af5eaa5db73b2de6d1e36ea2ecafa1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"aaf90fc29510e72665ac7934f34c3d1c25efad64":[],"541d16fbfc627e2eeecfb3eb40fe384fa8c75b4e":["135a17bf08af5eaa5db73b2de6d1e36ea2ecafa1","aaf90fc29510e72665ac7934f34c3d1c25efad64"],"ac97ea104d893f16aab430d9904473bc1f233f3c":["3217321f3e1d7922898c6c633d17acfa840d6875"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["403d05f7f8d69b65659157eff1bc1d2717f04c66","b1777912fb613f51063554d81f71c1b70d6bcd77","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"3217321f3e1d7922898c6c633d17acfa840d6875":["541d16fbfc627e2eeecfb3eb40fe384fa8c75b4e","42dc7f2d60851668d9efa2d12baa1d4ebe54b12f"],"b1777912fb613f51063554d81f71c1b70d6bcd77":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"42dc7f2d60851668d9efa2d12baa1d4ebe54b12f":["e9017cf144952056066919f1ebc7897ff9bd71b1"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aaf90fc29510e72665ac7934f34c3d1c25efad64","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}