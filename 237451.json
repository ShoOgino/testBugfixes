{"path":"lucene/core/src/test/org/apache/lucene/codecs/pfor/TestPForUtil#createDistribution(int[],int,double,int,int).mjava","commits":[{"id":"48d40647dc87c7b55ffe4d9dca73f63a3cebc58b","date":1342134079,"type":2,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/pfor/TestPForUtil#createDistribution(int[],int,double,int,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/pfor/TestPForUtil#tryDistribution(int,double,int,int).mjava","sourceNew":"  public void createDistribution(int[] data, int sz, double alpha, int masknorm, int maskexc) {\n    Integer[] buff= new Integer[sz];\n    int i=0;\n    for (; i<sz*alpha; ++i)\n      buff[i]=gen.nextInt() & masknorm;\n    for (; i<sz; ++i)\n      buff[i]=gen.nextInt() & maskexc;\n    Collections.shuffle(Arrays.asList(buff),gen);\n    for (i=0; i<sz; ++i)\n      data[i] = buff[i];\n  }\n\n","sourceOld":"  public void tryDistribution(int sz, double alpha, int masknorm, int maskexc) throws Exception {\n    Integer[] buff= new Integer[sz];\n    int[] data = new int[sz];\n    byte[] res = new byte[4+sz*8];      // loosely upperbound\n    IntBuffer resBuffer = ByteBuffer.wrap(res).asIntBuffer();\n    int i=0;\n    for (; i<sz*alpha; ++i)\n      buff[i]=gen.nextInt() & masknorm;\n    for (; i<sz; ++i)\n      buff[i]=gen.nextInt() & maskexc;\n    Collections.shuffle(Arrays.asList(buff),gen);\n    for (i=0; i<sz; ++i)\n      data[i] = buff[i];\n\n    int ensz = PForUtil.compress(data,sz,resBuffer);\n    \n    assert (ensz <= sz*8+4);  // must not exceed the loose upperbound\n\n    int[] copy = new int[sz];\n    PForUtil.decompress(resBuffer,copy);\n\n//    println(getHex(data,sz)+\"\\n\");\n//    println(getHex(res,ensz)+\"\\n\");\n//    println(getHex(copy,sz)+\"\\n\");\n\n    assert cmp(data,sz,copy,sz)==true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","date":1343686506,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/pfor/TestPForUtil#createDistribution(int[],int,double,int,int).mjava","sourceNew":null,"sourceOld":"  public void createDistribution(int[] data, int sz, double alpha, int masknorm, int maskexc) {\n    Integer[] buff= new Integer[sz];\n    int i=0;\n    for (; i<sz*alpha; ++i)\n      buff[i]=gen.nextInt() & masknorm;\n    for (; i<sz; ++i)\n      buff[i]=gen.nextInt() & maskexc;\n    Collections.shuffle(Arrays.asList(buff),gen);\n    for (i=0; i<sz; ++i)\n      data[i] = buff[i];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":["48d40647dc87c7b55ffe4d9dca73f63a3cebc58b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"48d40647dc87c7b55ffe4d9dca73f63a3cebc58b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["48d40647dc87c7b55ffe4d9dca73f63a3cebc58b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"48d40647dc87c7b55ffe4d9dca73f63a3cebc58b":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}