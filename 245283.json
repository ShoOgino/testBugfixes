{"path":"lucene/core/src/java/org/apache/lucene/search/GraphQuery#rewrite(IndexReader).mjava","commits":[{"id":"e52c30617998e1bc2a946cc226f52e9b35162b1e","date":1483438353,"type":0,"author":"Matt Weber","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/GraphQuery#rewrite(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Rewrites to a single query or a boolean query where each query is a SHOULD clause.\n   */\n  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    if (queries.length == 0) {\n      return new BooleanQuery.Builder().build();\n    }\n\n    if (queries.length == 1) {\n      return queries[0];\n    }\n\n    BooleanQuery.Builder q = new BooleanQuery.Builder();\n    for (Query clause : queries) {\n      q.add(clause, BooleanClause.Occur.SHOULD);\n    }\n\n    return q.build();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/GraphQuery#rewrite(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Rewrites to a single query or a boolean query where each query is a SHOULD clause.\n   */\n  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    if (queries.length == 0) {\n      return new BooleanQuery.Builder().build();\n    }\n\n    if (queries.length == 1) {\n      return queries[0];\n    }\n\n    BooleanQuery.Builder q = new BooleanQuery.Builder();\n    for (Query clause : queries) {\n      q.add(clause, BooleanClause.Occur.SHOULD);\n    }\n\n    return q.build();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b4408f3223cc4586cae91dc945fefb692e411d6d","date":1487771345,"type":4,"author":"Jim Ferenczi","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/GraphQuery#rewrite(IndexReader).mjava","sourceNew":null,"sourceOld":"  /**\n   * Rewrites to a single query or a boolean query where each query is a SHOULD clause.\n   */\n  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    if (queries.length == 0) {\n      return new BooleanQuery.Builder().build();\n    }\n\n    if (queries.length == 1) {\n      return queries[0];\n    }\n\n    BooleanQuery.Builder q = new BooleanQuery.Builder();\n    for (Query clause : queries) {\n      q.add(clause, BooleanClause.Occur.SHOULD);\n    }\n\n    return q.build();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e52c30617998e1bc2a946cc226f52e9b35162b1e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b4408f3223cc4586cae91dc945fefb692e411d6d":["e52c30617998e1bc2a946cc226f52e9b35162b1e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b4408f3223cc4586cae91dc945fefb692e411d6d"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e52c30617998e1bc2a946cc226f52e9b35162b1e"]},"commit2Childs":{"e52c30617998e1bc2a946cc226f52e9b35162b1e":["b4408f3223cc4586cae91dc945fefb692e411d6d","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e52c30617998e1bc2a946cc226f52e9b35162b1e","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"b4408f3223cc4586cae91dc945fefb692e411d6d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}