{"path":"lucene/src/java/org/apache/lucene/search/TopScoreDocCollector.OutOfOrderTopScoreDocCollector#collect(int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/TopScoreDocCollector.OutOfOrderTopScoreDocCollector#collect(int).mjava","pathOld":"src/java/org/apache/lucene/search/TopScoreDocCollector.OutOfOrderTopScoreDocCollector#collect(int).mjava","sourceNew":"    @Override\n    public void collect(int doc) throws IOException {\n      float score = scorer.score();\n\n      // This collector cannot handle NaN\n      assert !Float.isNaN(score);\n\n      totalHits++;\n      doc += docBase;\n      if (score < pqTop.score || (score == pqTop.score && doc > pqTop.doc)) {\n        return;\n      }\n      pqTop.doc = doc;\n      pqTop.score = score;\n      pqTop = pq.updateTop();\n    }\n\n","sourceOld":"    @Override\n    public void collect(int doc) throws IOException {\n      float score = scorer.score();\n\n      // This collector cannot handle NaN\n      assert !Float.isNaN(score);\n\n      totalHits++;\n      doc += docBase;\n      if (score < pqTop.score || (score == pqTop.score && doc > pqTop.doc)) {\n        return;\n      }\n      pqTop.doc = doc;\n      pqTop.score = score;\n      pqTop = pq.updateTop();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7964fc20138bf50f43e764b003d82406054de0bd","date":1311265020,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/TopScoreDocCollector.OutOfOrderTopScoreDocCollector#collect(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/TopScoreDocCollector.OutOfOrderTopScoreDocCollector#collect(int).mjava","sourceNew":"    @Override\n    public void collect(int doc) throws IOException {\n      float score = scorer.score();\n\n      // This collector cannot handle NaN\n      assert !Float.isNaN(score);\n\n      totalHits++;\n      if (score < pqTop.score) {\n        // Doesn't compete w/ bottom entry in queue\n        return;\n      }\n      doc += docBase;\n      if (score == pqTop.score && doc > pqTop.doc) {\n        // Break tie in score by doc ID:\n        return;\n      }\n      pqTop.doc = doc;\n      pqTop.score = score;\n      pqTop = pq.updateTop();\n    }\n\n","sourceOld":"    @Override\n    public void collect(int doc) throws IOException {\n      float score = scorer.score();\n\n      // This collector cannot handle NaN\n      assert !Float.isNaN(score);\n\n      totalHits++;\n      doc += docBase;\n      if (score < pqTop.score || (score == pqTop.score && doc > pqTop.doc)) {\n        return;\n      }\n      pqTop.doc = doc;\n      pqTop.score = score;\n      pqTop = pq.updateTop();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopScoreDocCollector.OutOfOrderTopScoreDocCollector#collect(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/TopScoreDocCollector.OutOfOrderTopScoreDocCollector#collect(int).mjava","sourceNew":"    @Override\n    public void collect(int doc) throws IOException {\n      float score = scorer.score();\n\n      // This collector cannot handle NaN\n      assert !Float.isNaN(score);\n\n      totalHits++;\n      if (score < pqTop.score) {\n        // Doesn't compete w/ bottom entry in queue\n        return;\n      }\n      doc += docBase;\n      if (score == pqTop.score && doc > pqTop.doc) {\n        // Break tie in score by doc ID:\n        return;\n      }\n      pqTop.doc = doc;\n      pqTop.score = score;\n      pqTop = pq.updateTop();\n    }\n\n","sourceOld":"    @Override\n    public void collect(int doc) throws IOException {\n      float score = scorer.score();\n\n      // This collector cannot handle NaN\n      assert !Float.isNaN(score);\n\n      totalHits++;\n      if (score < pqTop.score) {\n        // Doesn't compete w/ bottom entry in queue\n        return;\n      }\n      doc += docBase;\n      if (score == pqTop.score && doc > pqTop.doc) {\n        // Break tie in score by doc ID:\n        return;\n      }\n      pqTop.doc = doc;\n      pqTop.score = score;\n      pqTop = pq.updateTop();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["7964fc20138bf50f43e764b003d82406054de0bd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7964fc20138bf50f43e764b003d82406054de0bd":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7964fc20138bf50f43e764b003d82406054de0bd":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7964fc20138bf50f43e764b003d82406054de0bd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}