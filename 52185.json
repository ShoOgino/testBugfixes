{"path":"src/test/org/apache/lucene/store/MockRAMInputStream#close().mjava","commits":[{"id":"6a9c72bd2eb83901c17f22729e7a4d3d2b18c4b9","date":1172996731,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/MockRAMInputStream#close().mjava","pathOld":"/dev/null","sourceNew":"  public void close() {\n    super.close();\n    synchronized(dir.openFiles) {\n      Integer v = (Integer) dir.openFiles.get(name);\n      if (v.intValue() == 1) {\n        dir.openFiles.remove(name);\n      } else {\n        v = new Integer(v.intValue()-1);\n        dir.openFiles.put(name, v);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d72db039743bd6a2da9be6306f57c71654ca1bf6"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d72db039743bd6a2da9be6306f57c71654ca1bf6","date":1173217255,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/MockRAMInputStream#close().mjava","pathOld":"src/test/org/apache/lucene/store/MockRAMInputStream#close().mjava","sourceNew":"  public void close() {\n    super.close();\n    // Pending resolution on LUCENE-686 we may want to\n    // remove the conditional check so we also track that\n    // all clones get closed:\n    if (!isClone) {\n      synchronized(dir.openFiles) {\n        Integer v = (Integer) dir.openFiles.get(name);\n        if (v.intValue() == 1) {\n          dir.openFiles.remove(name);\n        } else {\n          v = new Integer(v.intValue()-1);\n          dir.openFiles.put(name, v);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public void close() {\n    super.close();\n    synchronized(dir.openFiles) {\n      Integer v = (Integer) dir.openFiles.get(name);\n      if (v.intValue() == 1) {\n        dir.openFiles.remove(name);\n      } else {\n        v = new Integer(v.intValue()-1);\n        dir.openFiles.put(name, v);\n      }\n    }\n  }\n\n","bugFix":["6a9c72bd2eb83901c17f22729e7a4d3d2b18c4b9"],"bugIntro":["c65000dee855f8d7329bd4f6310cb44af4d63bd3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e82780afe6097066eb5befb86e9432f077667e3d","date":1202756169,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/MockRAMInputStream#close().mjava","pathOld":"src/test/org/apache/lucene/store/MockRAMInputStream#close().mjava","sourceNew":"  public void close() {\n    super.close();\n    // Pending resolution on LUCENE-686 we may want to\n    // remove the conditional check so we also track that\n    // all clones get closed:\n    if (!isClone) {\n      synchronized(dir.openFiles) {\n        Integer v = (Integer) dir.openFiles.get(name);\n        // Could be null when MockRAMDirectory.crash() was called\n        if (v != null) {\n          if (v.intValue() == 1) {\n            dir.openFiles.remove(name);\n          } else {\n            v = new Integer(v.intValue()-1);\n            dir.openFiles.put(name, v);\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public void close() {\n    super.close();\n    // Pending resolution on LUCENE-686 we may want to\n    // remove the conditional check so we also track that\n    // all clones get closed:\n    if (!isClone) {\n      synchronized(dir.openFiles) {\n        Integer v = (Integer) dir.openFiles.get(name);\n        if (v.intValue() == 1) {\n          dir.openFiles.remove(name);\n        } else {\n          v = new Integer(v.intValue()-1);\n          dir.openFiles.put(name, v);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c65000dee855f8d7329bd4f6310cb44af4d63bd3","date":1242673652,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/MockRAMInputStream#close().mjava","pathOld":"src/test/org/apache/lucene/store/MockRAMInputStream#close().mjava","sourceNew":"  public void close() {\n    super.close();\n    // Pending resolution on LUCENE-686 we may want to\n    // remove the conditional check so we also track that\n    // all clones get closed:\n    if (!isClone) {\n      synchronized(dir) {\n        Integer v = (Integer) dir.openFiles.get(name);\n        // Could be null when MockRAMDirectory.crash() was called\n        if (v != null) {\n          if (v.intValue() == 1) {\n            dir.openFiles.remove(name);\n          } else {\n            v = new Integer(v.intValue()-1);\n            dir.openFiles.put(name, v);\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public void close() {\n    super.close();\n    // Pending resolution on LUCENE-686 we may want to\n    // remove the conditional check so we also track that\n    // all clones get closed:\n    if (!isClone) {\n      synchronized(dir.openFiles) {\n        Integer v = (Integer) dir.openFiles.get(name);\n        // Could be null when MockRAMDirectory.crash() was called\n        if (v != null) {\n          if (v.intValue() == 1) {\n            dir.openFiles.remove(name);\n          } else {\n            v = new Integer(v.intValue()-1);\n            dir.openFiles.put(name, v);\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":["d72db039743bd6a2da9be6306f57c71654ca1bf6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bcde5e3f23911110baa101ed062b544162825b5","date":1254521804,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/MockRAMInputStream#close().mjava","pathOld":"src/test/org/apache/lucene/store/MockRAMInputStream#close().mjava","sourceNew":"  public void close() {\n    super.close();\n    // Pending resolution on LUCENE-686 we may want to\n    // remove the conditional check so we also track that\n    // all clones get closed:\n    if (!isClone) {\n      synchronized(dir) {\n        Integer v = (Integer) dir.openFiles.get(name);\n        // Could be null when MockRAMDirectory.crash() was called\n        if (v != null) {\n          if (v.intValue() == 1) {\n            dir.openFiles.remove(name);\n          } else {\n            v = Integer.valueOf(v.intValue()-1);\n            dir.openFiles.put(name, v);\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public void close() {\n    super.close();\n    // Pending resolution on LUCENE-686 we may want to\n    // remove the conditional check so we also track that\n    // all clones get closed:\n    if (!isClone) {\n      synchronized(dir) {\n        Integer v = (Integer) dir.openFiles.get(name);\n        // Could be null when MockRAMDirectory.crash() was called\n        if (v != null) {\n          if (v.intValue() == 1) {\n            dir.openFiles.remove(name);\n          } else {\n            v = new Integer(v.intValue()-1);\n            dir.openFiles.put(name, v);\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1326054a8d3aa66382d49decc7f330955c9c6f71","date":1257386139,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/MockRAMInputStream#close().mjava","pathOld":"src/test/org/apache/lucene/store/MockRAMInputStream#close().mjava","sourceNew":"  @Override\n  public void close() {\n    super.close();\n    // Pending resolution on LUCENE-686 we may want to\n    // remove the conditional check so we also track that\n    // all clones get closed:\n    if (!isClone) {\n      synchronized(dir) {\n        Integer v = (Integer) dir.openFiles.get(name);\n        // Could be null when MockRAMDirectory.crash() was called\n        if (v != null) {\n          if (v.intValue() == 1) {\n            dir.openFiles.remove(name);\n          } else {\n            v = Integer.valueOf(v.intValue()-1);\n            dir.openFiles.put(name, v);\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public void close() {\n    super.close();\n    // Pending resolution on LUCENE-686 we may want to\n    // remove the conditional check so we also track that\n    // all clones get closed:\n    if (!isClone) {\n      synchronized(dir) {\n        Integer v = (Integer) dir.openFiles.get(name);\n        // Could be null when MockRAMDirectory.crash() was called\n        if (v != null) {\n          if (v.intValue() == 1) {\n            dir.openFiles.remove(name);\n          } else {\n            v = Integer.valueOf(v.intValue()-1);\n            dir.openFiles.put(name, v);\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e450c7d50c2fc84c963d0d7ade9d3217d868064d","date":1259932067,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/MockRAMInputStream#close().mjava","pathOld":"src/test/org/apache/lucene/store/MockRAMInputStream#close().mjava","sourceNew":"  @Override\n  public void close() {\n    super.close();\n    // Pending resolution on LUCENE-686 we may want to\n    // remove the conditional check so we also track that\n    // all clones get closed:\n    if (!isClone) {\n      synchronized(dir) {\n        Integer v = dir.openFiles.get(name);\n        // Could be null when MockRAMDirectory.crash() was called\n        if (v != null) {\n          if (v.intValue() == 1) {\n            dir.openFiles.remove(name);\n          } else {\n            v = Integer.valueOf(v.intValue()-1);\n            dir.openFiles.put(name, v);\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() {\n    super.close();\n    // Pending resolution on LUCENE-686 we may want to\n    // remove the conditional check so we also track that\n    // all clones get closed:\n    if (!isClone) {\n      synchronized(dir) {\n        Integer v = (Integer) dir.openFiles.get(name);\n        // Could be null when MockRAMDirectory.crash() was called\n        if (v != null) {\n          if (v.intValue() == 1) {\n            dir.openFiles.remove(name);\n          } else {\n            v = Integer.valueOf(v.intValue()-1);\n            dir.openFiles.put(name, v);\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/MockRAMInputStream#close().mjava","pathOld":"src/test/org/apache/lucene/store/MockRAMInputStream#close().mjava","sourceNew":"  @Override\n  public void close() {\n    super.close();\n    // Pending resolution on LUCENE-686 we may want to\n    // remove the conditional check so we also track that\n    // all clones get closed:\n    if (!isClone) {\n      synchronized(dir) {\n        Integer v = dir.openFiles.get(name);\n        // Could be null when MockRAMDirectory.crash() was called\n        if (v != null) {\n          if (v.intValue() == 1) {\n            dir.openFiles.remove(name);\n          } else {\n            v = Integer.valueOf(v.intValue()-1);\n            dir.openFiles.put(name, v);\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() {\n    super.close();\n    // Pending resolution on LUCENE-686 we may want to\n    // remove the conditional check so we also track that\n    // all clones get closed:\n    if (!isClone) {\n      synchronized(dir) {\n        Integer v = dir.openFiles.get(name);\n        // Could be null when MockRAMDirectory.crash() was called\n        if (v != null) {\n          if (v.intValue() == 1) {\n            dir.openFiles.remove(name);\n          } else {\n            v = Integer.valueOf(v.intValue()-1);\n            dir.openFiles.put(name, v);\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["6bcde5e3f23911110baa101ed062b544162825b5"],"6bcde5e3f23911110baa101ed062b544162825b5":["c65000dee855f8d7329bd4f6310cb44af4d63bd3"],"6a9c72bd2eb83901c17f22729e7a4d3d2b18c4b9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c65000dee855f8d7329bd4f6310cb44af4d63bd3":["e82780afe6097066eb5befb86e9432f077667e3d"],"d72db039743bd6a2da9be6306f57c71654ca1bf6":["6a9c72bd2eb83901c17f22729e7a4d3d2b18c4b9"],"e82780afe6097066eb5befb86e9432f077667e3d":["d72db039743bd6a2da9be6306f57c71654ca1bf6"],"e450c7d50c2fc84c963d0d7ade9d3217d868064d":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["e450c7d50c2fc84c963d0d7ade9d3217d868064d"]},"commit2Childs":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["e450c7d50c2fc84c963d0d7ade9d3217d868064d"],"6bcde5e3f23911110baa101ed062b544162825b5":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"6a9c72bd2eb83901c17f22729e7a4d3d2b18c4b9":["d72db039743bd6a2da9be6306f57c71654ca1bf6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6a9c72bd2eb83901c17f22729e7a4d3d2b18c4b9"],"c65000dee855f8d7329bd4f6310cb44af4d63bd3":["6bcde5e3f23911110baa101ed062b544162825b5"],"d72db039743bd6a2da9be6306f57c71654ca1bf6":["e82780afe6097066eb5befb86e9432f077667e3d"],"e82780afe6097066eb5befb86e9432f077667e3d":["c65000dee855f8d7329bd4f6310cb44af4d63bd3"],"e450c7d50c2fc84c963d0d7ade9d3217d868064d":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}