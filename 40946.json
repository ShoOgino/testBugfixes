{"path":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillDownQuery#add(String,String...).mjava","commits":[{"id":"9fdb15e93058f718a65d564872aadbed5ca78296","date":1384720267,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillDownQuery#add(String,String...).mjava","pathOld":"/dev/null","sourceNew":"  /** Adds one dimension of drill downs; if you pass the same\n   *  dimension again, it's OR'd with the previous\n   *  constraints on that dimension, and all dimensions are\n   *  AND'd against each other and the base query. */\n  // nocommit can we remove FacetLabel here?\n  public void add(String dim, String... path) {\n\n    if (drillDownDims.containsKey(dim)) {\n      merge(dim, path);\n      return;\n    }\n    String indexedField = config.getDimConfig(dim).indexedFieldName;\n\n    // nocommit pull this from FacetsConfig\n    char delimChar = Constants.DEFAULT_DELIM_CHAR;\n    BooleanQuery bq = new BooleanQuery(true); // disable coord\n    if (path.length == 0) {\n      throw new IllegalArgumentException(\"must have at least one facet label under dim\");\n    }\n    bq.add(new TermQuery(term(indexedField, delimChar, dim, path)), Occur.SHOULD);\n\n    add(dim, bq);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fe35a54e036b5f516cb04b39f3eb96a55812376","date":1384725462,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillDownQuery#add(String,String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillDownQuery#add(String,String...).mjava","sourceNew":"  /** Adds one dimension of drill downs; if you pass the same\n   *  dimension again, it's OR'd with the previous\n   *  constraints on that dimension, and all dimensions are\n   *  AND'd against each other and the base query. */\n  // nocommit can we remove FacetLabel here?\n  public void add(String dim, String... path) {\n\n    if (drillDownDims.containsKey(dim)) {\n      merge(dim, path);\n      return;\n    }\n    String indexedField = config.getDimConfig(dim).indexedFieldName;\n\n    BooleanQuery bq = new BooleanQuery(true); // disable coord\n    if (path.length == 0) {\n      throw new IllegalArgumentException(\"must have at least one facet label under dim\");\n    }\n    bq.add(new TermQuery(term(indexedField, dim, path)), Occur.SHOULD);\n\n    add(dim, bq);\n  }\n\n","sourceOld":"  /** Adds one dimension of drill downs; if you pass the same\n   *  dimension again, it's OR'd with the previous\n   *  constraints on that dimension, and all dimensions are\n   *  AND'd against each other and the base query. */\n  // nocommit can we remove FacetLabel here?\n  public void add(String dim, String... path) {\n\n    if (drillDownDims.containsKey(dim)) {\n      merge(dim, path);\n      return;\n    }\n    String indexedField = config.getDimConfig(dim).indexedFieldName;\n\n    // nocommit pull this from FacetsConfig\n    char delimChar = Constants.DEFAULT_DELIM_CHAR;\n    BooleanQuery bq = new BooleanQuery(true); // disable coord\n    if (path.length == 0) {\n      throw new IllegalArgumentException(\"must have at least one facet label under dim\");\n    }\n    bq.add(new TermQuery(term(indexedField, delimChar, dim, path)), Occur.SHOULD);\n\n    add(dim, bq);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"18edd2e3f5560087a37442fa424cbbed7c295ebc","date":1384813900,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillDownQuery#add(String,String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillDownQuery#add(String,String...).mjava","sourceNew":"  /** Adds one dimension of drill downs; if you pass the same\n   *  dimension again, it's OR'd with the previous\n   *  constraints on that dimension, and all dimensions are\n   *  AND'd against each other and the base query. */\n  // nocommit can we remove FacetLabel here?\n  public void add(String dim, String... path) {\n\n    if (drillDownDims.containsKey(dim)) {\n      merge(dim, path);\n      return;\n    }\n    String indexedField = config.getDimConfig(dim).indexFieldName;\n\n    BooleanQuery bq = new BooleanQuery(true); // disable coord\n    if (path.length == 0) {\n      throw new IllegalArgumentException(\"must have at least one facet label under dim\");\n    }\n    bq.add(new TermQuery(term(indexedField, dim, path)), Occur.SHOULD);\n\n    add(dim, bq);\n  }\n\n","sourceOld":"  /** Adds one dimension of drill downs; if you pass the same\n   *  dimension again, it's OR'd with the previous\n   *  constraints on that dimension, and all dimensions are\n   *  AND'd against each other and the base query. */\n  // nocommit can we remove FacetLabel here?\n  public void add(String dim, String... path) {\n\n    if (drillDownDims.containsKey(dim)) {\n      merge(dim, path);\n      return;\n    }\n    String indexedField = config.getDimConfig(dim).indexedFieldName;\n\n    BooleanQuery bq = new BooleanQuery(true); // disable coord\n    if (path.length == 0) {\n      throw new IllegalArgumentException(\"must have at least one facet label under dim\");\n    }\n    bq.add(new TermQuery(term(indexedField, dim, path)), Occur.SHOULD);\n\n    add(dim, bq);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca39562b2d7687143fdb601d5de1b8f7b778f1db","date":1385299806,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillDownQuery#add(String,String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillDownQuery#add(String,String...).mjava","sourceNew":"  /** Adds one dimension of drill downs; if you pass the same\n   *  dimension again, it's OR'd with the previous\n   *  constraints on that dimension, and all dimensions are\n   *  AND'd against each other and the base query. */\n  // nocommit can we remove FacetLabel here?\n  public void add(String dim, String... path) {\n\n    if (drillDownDims.containsKey(dim)) {\n      merge(dim, path);\n      return;\n    }\n    String indexedField = config.getDimConfig(dim).indexFieldName;\n\n    BooleanQuery bq = new BooleanQuery(true); // disable coord\n    // nocommit too anal?\n    /*\n    if (path.length == 0) {\n      throw new IllegalArgumentException(\"must have at least one facet label under dim\");\n    }\n    */\n    bq.add(new TermQuery(term(indexedField, dim, path)), Occur.SHOULD);\n\n    add(dim, bq);\n  }\n\n","sourceOld":"  /** Adds one dimension of drill downs; if you pass the same\n   *  dimension again, it's OR'd with the previous\n   *  constraints on that dimension, and all dimensions are\n   *  AND'd against each other and the base query. */\n  // nocommit can we remove FacetLabel here?\n  public void add(String dim, String... path) {\n\n    if (drillDownDims.containsKey(dim)) {\n      merge(dim, path);\n      return;\n    }\n    String indexedField = config.getDimConfig(dim).indexFieldName;\n\n    BooleanQuery bq = new BooleanQuery(true); // disable coord\n    if (path.length == 0) {\n      throw new IllegalArgumentException(\"must have at least one facet label under dim\");\n    }\n    bq.add(new TermQuery(term(indexedField, dim, path)), Occur.SHOULD);\n\n    add(dim, bq);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#add(String,String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillDownQuery#add(String,String...).mjava","sourceNew":"  /** Adds one dimension of drill downs; if you pass the same\n   *  dimension again, it's OR'd with the previous\n   *  constraints on that dimension, and all dimensions are\n   *  AND'd against each other and the base query. */\n  // nocommit can we remove FacetLabel here?\n  public void add(String dim, String... path) {\n\n    if (drillDownDims.containsKey(dim)) {\n      merge(dim, path);\n      return;\n    }\n    String indexedField = config.getDimConfig(dim).indexFieldName;\n\n    BooleanQuery bq = new BooleanQuery(true); // disable coord\n    // nocommit too anal?\n    /*\n    if (path.length == 0) {\n      throw new IllegalArgumentException(\"must have at least one facet label under dim\");\n    }\n    */\n    bq.add(new TermQuery(term(indexedField, dim, path)), Occur.SHOULD);\n\n    add(dim, bq);\n  }\n\n","sourceOld":"  /** Adds one dimension of drill downs; if you pass the same\n   *  dimension again, it's OR'd with the previous\n   *  constraints on that dimension, and all dimensions are\n   *  AND'd against each other and the base query. */\n  // nocommit can we remove FacetLabel here?\n  public void add(String dim, String... path) {\n\n    if (drillDownDims.containsKey(dim)) {\n      merge(dim, path);\n      return;\n    }\n    String indexedField = config.getDimConfig(dim).indexFieldName;\n\n    BooleanQuery bq = new BooleanQuery(true); // disable coord\n    // nocommit too anal?\n    /*\n    if (path.length == 0) {\n      throw new IllegalArgumentException(\"must have at least one facet label under dim\");\n    }\n    */\n    bq.add(new TermQuery(term(indexedField, dim, path)), Occur.SHOULD);\n\n    add(dim, bq);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9fdb15e93058f718a65d564872aadbed5ca78296":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"18edd2e3f5560087a37442fa424cbbed7c295ebc":["9fe35a54e036b5f516cb04b39f3eb96a55812376"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["ca39562b2d7687143fdb601d5de1b8f7b778f1db"],"9fe35a54e036b5f516cb04b39f3eb96a55812376":["9fdb15e93058f718a65d564872aadbed5ca78296"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ca39562b2d7687143fdb601d5de1b8f7b778f1db":["18edd2e3f5560087a37442fa424cbbed7c295ebc"]},"commit2Childs":{"9fdb15e93058f718a65d564872aadbed5ca78296":["9fe35a54e036b5f516cb04b39f3eb96a55812376"],"18edd2e3f5560087a37442fa424cbbed7c295ebc":["ca39562b2d7687143fdb601d5de1b8f7b778f1db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9fdb15e93058f718a65d564872aadbed5ca78296","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"21d36d0db865f7b84026b447bec653469a6e66df":[],"9fe35a54e036b5f516cb04b39f3eb96a55812376":["18edd2e3f5560087a37442fa424cbbed7c295ebc"],"ca39562b2d7687143fdb601d5de1b8f7b778f1db":["21d36d0db865f7b84026b447bec653469a6e66df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}