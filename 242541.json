{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort#readPartition(ByteSequencesReader).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort#readPartition(ByteSequencesReader).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort#readPartition(ByteSequencesReader).mjava","sourceNew":"  /** Read in a single partition of data */\n  int readPartition(ByteSequencesReader reader) throws IOException {\n    long start = System.currentTimeMillis();\n    final BytesRef scratch = new BytesRef();\n    while ((scratch.bytes = reader.read()) != null) {\n      scratch.length = scratch.bytes.length; \n      buffer.append(scratch);\n      // Account for the created objects.\n      // (buffer slots do not account to buffer size.) \n      if (ramBufferSize.bytes < buffer.bytesUsed()) {\n        break;\n      }\n    }\n    sortInfo.readTime += (System.currentTimeMillis() - start);\n    return buffer.size();\n  }\n\n","sourceOld":"  /** Read in a single partition of data */\n  int readPartition(ByteSequencesReader reader) throws IOException {\n    long start = System.currentTimeMillis();\n    final BytesRef scratch = new BytesRef();\n    while ((scratch.bytes = reader.read()) != null) {\n      scratch.length = scratch.bytes.length; \n      buffer.append(scratch);\n      // Account for the created objects.\n      // (buffer slots do not account to buffer size.) \n      if (ramBufferSize.bytes < buffer.bytesUsed()) {\n        break;\n      }\n    }\n    sortInfo.readTime += (System.currentTimeMillis() - start);\n    return buffer.size();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"caa40272511a69bd4ad04b8242ae420932f5799b","date":1359341326,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort#readPartition(ByteSequencesReader).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort#readPartition(ByteSequencesReader).mjava","sourceNew":"  /** Read in a single partition of data */\n  int readPartition(ByteSequencesReader reader) throws IOException {\n    long start = System.currentTimeMillis();\n    final BytesRef scratch = new BytesRef();\n    while ((scratch.bytes = reader.read()) != null) {\n      scratch.length = scratch.bytes.length; \n      buffer.append(scratch);\n      // Account for the created objects.\n      // (buffer slots do not account to buffer size.) \n      if (ramBufferSize.bytes < bufferBytesUsed.get()) {\n        break;\n      }\n    }\n    sortInfo.readTime += (System.currentTimeMillis() - start);\n    return buffer.size();\n  }\n\n","sourceOld":"  /** Read in a single partition of data */\n  int readPartition(ByteSequencesReader reader) throws IOException {\n    long start = System.currentTimeMillis();\n    final BytesRef scratch = new BytesRef();\n    while ((scratch.bytes = reader.read()) != null) {\n      scratch.length = scratch.bytes.length; \n      buffer.append(scratch);\n      // Account for the created objects.\n      // (buffer slots do not account to buffer size.) \n      if (ramBufferSize.bytes < buffer.bytesUsed()) {\n        break;\n      }\n    }\n    sortInfo.readTime += (System.currentTimeMillis() - start);\n    return buffer.size();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"847d1294c8ff2f0172af20892ef98a1c6a952e09","date":1359503775,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/Sort#readPartition(ByteSequencesReader).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort#readPartition(ByteSequencesReader).mjava","sourceNew":"  /** Read in a single partition of data */\n  int readPartition(ByteSequencesReader reader) throws IOException {\n    long start = System.currentTimeMillis();\n    final BytesRef scratch = new BytesRef();\n    while ((scratch.bytes = reader.read()) != null) {\n      scratch.length = scratch.bytes.length; \n      buffer.append(scratch);\n      // Account for the created objects.\n      // (buffer slots do not account to buffer size.) \n      if (ramBufferSize.bytes < bufferBytesUsed.get()) {\n        break;\n      }\n    }\n    sortInfo.readTime += (System.currentTimeMillis() - start);\n    return buffer.size();\n  }\n\n","sourceOld":"  /** Read in a single partition of data */\n  int readPartition(ByteSequencesReader reader) throws IOException {\n    long start = System.currentTimeMillis();\n    final BytesRef scratch = new BytesRef();\n    while ((scratch.bytes = reader.read()) != null) {\n      scratch.length = scratch.bytes.length; \n      buffer.append(scratch);\n      // Account for the created objects.\n      // (buffer slots do not account to buffer size.) \n      if (ramBufferSize.bytes < bufferBytesUsed.get()) {\n        break;\n      }\n    }\n    sortInfo.readTime += (System.currentTimeMillis() - start);\n    return buffer.size();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort#readPartition(ByteSequencesReader).mjava","sourceNew":null,"sourceOld":"  /** Read in a single partition of data */\n  int readPartition(ByteSequencesReader reader) throws IOException {\n    long start = System.currentTimeMillis();\n    final BytesRef scratch = new BytesRef();\n    while ((scratch.bytes = reader.read()) != null) {\n      scratch.length = scratch.bytes.length; \n      buffer.append(scratch);\n      // Account for the created objects.\n      // (buffer slots do not account to buffer size.) \n      if (ramBufferSize.bytes < buffer.bytesUsed()) {\n        break;\n      }\n    }\n    sortInfo.readTime += (System.currentTimeMillis() - start);\n    return buffer.size();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["b89678825b68eccaf09e6ab71675fc0b0af1e099","847d1294c8ff2f0172af20892ef98a1c6a952e09"],"caa40272511a69bd4ad04b8242ae420932f5799b":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"847d1294c8ff2f0172af20892ef98a1c6a952e09":["caa40272511a69bd4ad04b8242ae420932f5799b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d4d69c535930b5cce125cff868d40f6373dc27d4"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d4d69c535930b5cce125cff868d40f6373dc27d4","caa40272511a69bd4ad04b8242ae420932f5799b"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"caa40272511a69bd4ad04b8242ae420932f5799b":["847d1294c8ff2f0172af20892ef98a1c6a952e09"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"847d1294c8ff2f0172af20892ef98a1c6a952e09":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}