{"path":"lucene/core/src/java/org/apache/lucene/search/WildcardQuery#WildcardQuery(Term).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/WildcardQuery#WildcardQuery(Term).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/WildcardQuery#WildcardQuery(Term).mjava","sourceNew":"  /**\n   * Constructs a query for terms matching <code>term</code>. \n   */\n  public WildcardQuery(Term term) {\n    super(term, toAutomaton(term));\n  }\n\n","sourceOld":"  /**\n   * Constructs a query for terms matching <code>term</code>. \n   */\n  public WildcardQuery(Term term) {\n    super(term, toAutomaton(term));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac34f0c5bb9274821fb0cb18075234e02002e9bf","date":1402508126,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/WildcardQuery#WildcardQuery(Term).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/WildcardQuery#WildcardQuery(Term).mjava","sourceNew":"  /**\n   * Constructs a query for terms matching <code>term</code>. \n   */\n  public WildcardQuery(Term term) {\n    super(term, toLightAutomaton(term));\n  }\n\n","sourceOld":"  /**\n   * Constructs a query for terms matching <code>term</code>. \n   */\n  public WildcardQuery(Term term) {\n    super(term, toAutomaton(term));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a2de8b489026711e8edde133418a7cacfd2ce4d3","date":1402528930,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/WildcardQuery#WildcardQuery(Term).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/WildcardQuery#WildcardQuery(Term).mjava","sourceNew":"  /**\n   * Constructs a query for terms matching <code>term</code>. \n   */\n  public WildcardQuery(Term term) {\n    super(term, toAutomaton(term));\n  }\n\n","sourceOld":"  /**\n   * Constructs a query for terms matching <code>term</code>. \n   */\n  public WildcardQuery(Term term) {\n    super(term, toLightAutomaton(term));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a2de8b489026711e8edde133418a7cacfd2ce4d3":["ac34f0c5bb9274821fb0cb18075234e02002e9bf"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ac34f0c5bb9274821fb0cb18075234e02002e9bf":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"a2de8b489026711e8edde133418a7cacfd2ce4d3":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["ac34f0c5bb9274821fb0cb18075234e02002e9bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"ac34f0c5bb9274821fb0cb18075234e02002e9bf":["a2de8b489026711e8edde133418a7cacfd2ce4d3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a2de8b489026711e8edde133418a7cacfd2ce4d3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}