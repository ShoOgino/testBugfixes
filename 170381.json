{"path":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector.GroupHead#GroupHead(Comparable[#],Sort,int,AtomicReaderContext,Scorer).mjava","commits":[{"id":"10ecbc03c2fc578015d597a26fe35271fe9504d2","date":1331200601,"type":1,"author":"Martijn van Groningen","isMerge":false,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector.GroupHead#GroupHead(Comparable[#],Sort,int,AtomicReaderContext,Scorer).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector.GroupHead#GroupHead(Comparable,Sort,int,AtomicReaderContext,Scorer).mjava","sourceNew":"    GroupHead(Comparable<?> groupValue, Sort sort, int doc, AtomicReaderContext readerContext, Scorer scorer) throws IOException {\n      super(groupValue, doc + readerContext.docBase);\n      final SortField[] sortFields = sort.getSort();\n      comparators = new FieldComparator<?>[sortFields.length];\n      for (int i = 0; i < sortFields.length; i++) {\n        comparators[i] = sortFields[i].getComparator(1, i).setNextReader(readerContext);\n        comparators[i].setScorer(scorer);\n        comparators[i].copy(0, doc);\n        comparators[i].setBottom(0);\n      }\n\n      this.readerContext = readerContext;\n      this.scorer = scorer;\n    }\n\n","sourceOld":"    GroupHead(Comparable groupValue, Sort sort, int doc, AtomicReaderContext readerContext, Scorer scorer) throws IOException {\n      super(groupValue, doc + readerContext.docBase);\n      final SortField[] sortFields = sort.getSort();\n      comparators = new FieldComparator[sortFields.length];\n      for (int i = 0; i < sortFields.length; i++) {\n        comparators[i] = sortFields[i].getComparator(1, i).setNextReader(readerContext);\n        comparators[i].setScorer(scorer);\n        comparators[i].copy(0, doc);\n        comparators[i].setBottom(0);\n      }\n\n      this.readerContext = readerContext;\n      this.scorer = scorer;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":1,"author":"Ryan McKinley","isMerge":true,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector.GroupHead#GroupHead(Comparable[#],Sort,int,AtomicReaderContext,Scorer).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector.GroupHead#GroupHead(Comparable,Sort,int,AtomicReaderContext,Scorer).mjava","sourceNew":"    GroupHead(Comparable<?> groupValue, Sort sort, int doc, AtomicReaderContext readerContext, Scorer scorer) throws IOException {\n      super(groupValue, doc + readerContext.docBase);\n      final SortField[] sortFields = sort.getSort();\n      comparators = new FieldComparator<?>[sortFields.length];\n      for (int i = 0; i < sortFields.length; i++) {\n        comparators[i] = sortFields[i].getComparator(1, i).setNextReader(readerContext);\n        comparators[i].setScorer(scorer);\n        comparators[i].copy(0, doc);\n        comparators[i].setBottom(0);\n      }\n\n      this.readerContext = readerContext;\n      this.scorer = scorer;\n    }\n\n","sourceOld":"    GroupHead(Comparable groupValue, Sort sort, int doc, AtomicReaderContext readerContext, Scorer scorer) throws IOException {\n      super(groupValue, doc + readerContext.docBase);\n      final SortField[] sortFields = sort.getSort();\n      comparators = new FieldComparator[sortFields.length];\n      for (int i = 0; i < sortFields.length; i++) {\n        comparators[i] = sortFields[i].getComparator(1, i).setNextReader(readerContext);\n        comparators[i].setScorer(scorer);\n        comparators[i].copy(0, doc);\n        comparators[i].setBottom(0);\n      }\n\n      this.readerContext = readerContext;\n      this.scorer = scorer;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector.GroupHead#GroupHead(Comparable[#],Sort,int,AtomicReaderContext,Scorer).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector.GroupHead#GroupHead(Comparable[#],Sort,int,AtomicReaderContext,Scorer).mjava","sourceNew":"    GroupHead(Comparable<?> groupValue, Sort sort, int doc, AtomicReaderContext readerContext, Scorer scorer) throws IOException {\n      super(groupValue, doc + readerContext.docBase);\n      final SortField[] sortFields = sort.getSort();\n      comparators = new FieldComparator<?>[sortFields.length];\n      for (int i = 0; i < sortFields.length; i++) {\n        comparators[i] = sortFields[i].getComparator(1, i).setNextReader(readerContext);\n        comparators[i].setScorer(scorer);\n        comparators[i].copy(0, doc);\n        comparators[i].setBottom(0);\n      }\n\n      this.readerContext = readerContext;\n      this.scorer = scorer;\n    }\n\n","sourceOld":"    GroupHead(Comparable<?> groupValue, Sort sort, int doc, AtomicReaderContext readerContext, Scorer scorer) throws IOException {\n      super(groupValue, doc + readerContext.docBase);\n      final SortField[] sortFields = sort.getSort();\n      comparators = new FieldComparator<?>[sortFields.length];\n      for (int i = 0; i < sortFields.length; i++) {\n        comparators[i] = sortFields[i].getComparator(1, i).setNextReader(readerContext);\n        comparators[i].setScorer(scorer);\n        comparators[i].copy(0, doc);\n        comparators[i].setBottom(0);\n      }\n\n      this.readerContext = readerContext;\n      this.scorer = scorer;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","10ecbc03c2fc578015d597a26fe35271fe9504d2"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["10ecbc03c2fc578015d597a26fe35271fe9504d2"],"10ecbc03c2fc578015d597a26fe35271fe9504d2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["38e3b736c7ca086d61b7dbb841c905ee115490da","10ecbc03c2fc578015d597a26fe35271fe9504d2"],"10ecbc03c2fc578015d597a26fe35271fe9504d2":["38e3b736c7ca086d61b7dbb841c905ee115490da","b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}