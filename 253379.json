{"path":"solr/core/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int).mjava","pathOld":"solr/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int).mjava","sourceNew":"    @Override\n    public void transform(SolrDocument doc, int docid) {\n      if( context != null && context.query != null ) {\n        try {\n          Explanation exp = context.searcher.explain(context.query, docid);\n          if( style == Style.nl ) {\n            doc.setField( name, SolrPluginUtils.explanationToNamedList(exp) );\n          }\n          else if( style == Style.html ) {\n            doc.setField( name, exp.toHtml() );\n          }\n          else {\n            doc.setField( name, exp.toString() );\n          }\n        }\n        catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void transform(SolrDocument doc, int docid) {\n      if( context != null && context.query != null ) {\n        try {\n          Explanation exp = context.searcher.explain(context.query, docid);\n          if( style == Style.nl ) {\n            doc.setField( name, SolrPluginUtils.explanationToNamedList(exp) );\n          }\n          else if( style == Style.html ) {\n            doc.setField( name, exp.toHtml() );\n          }\n          else {\n            doc.setField( name, exp.toString() );\n          }\n        }\n        catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int).mjava","pathOld":"solr/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int).mjava","sourceNew":"    @Override\n    public void transform(SolrDocument doc, int docid) {\n      if( context != null && context.query != null ) {\n        try {\n          Explanation exp = context.searcher.explain(context.query, docid);\n          if( style == Style.nl ) {\n            doc.setField( name, SolrPluginUtils.explanationToNamedList(exp) );\n          }\n          else if( style == Style.html ) {\n            doc.setField( name, exp.toHtml() );\n          }\n          else {\n            doc.setField( name, exp.toString() );\n          }\n        }\n        catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void transform(SolrDocument doc, int docid) {\n      if( context != null && context.query != null ) {\n        try {\n          Explanation exp = context.searcher.explain(context.query, docid);\n          if( style == Style.nl ) {\n            doc.setField( name, SolrPluginUtils.explanationToNamedList(exp) );\n          }\n          else if( style == Style.html ) {\n            doc.setField( name, exp.toHtml() );\n          }\n          else {\n            doc.setField( name, exp.toString() );\n          }\n        }\n        catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int).mjava","pathOld":"solr/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int).mjava","sourceNew":"    @Override\n    public void transform(SolrDocument doc, int docid) {\n      if( context != null && context.query != null ) {\n        try {\n          Explanation exp = context.searcher.explain(context.query, docid);\n          if( style == Style.nl ) {\n            doc.setField( name, SolrPluginUtils.explanationToNamedList(exp) );\n          }\n          else if( style == Style.html ) {\n            doc.setField( name, exp.toHtml() );\n          }\n          else {\n            doc.setField( name, exp.toString() );\n          }\n        }\n        catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void transform(SolrDocument doc, int docid) {\n      if( context != null && context.query != null ) {\n        try {\n          Explanation exp = context.searcher.explain(context.query, docid);\n          if( style == Style.nl ) {\n            doc.setField( name, SolrPluginUtils.explanationToNamedList(exp) );\n          }\n          else if( style == Style.html ) {\n            doc.setField( name, exp.toHtml() );\n          }\n          else {\n            doc.setField( name, exp.toString() );\n          }\n        }\n        catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65fa3fc3a71e185062b4f869597e7b1e86e4d616","date":1434534970,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int).mjava","sourceNew":"    @Override\n    public void transform(SolrDocument doc, int docid) {\n      if( context != null && context.getQuery() != null ) {\n        try {\n          Explanation exp = context.getSearcher().explain(context.getQuery(), docid);\n          if( style == Style.nl ) {\n            doc.setField( name, SolrPluginUtils.explanationToNamedList(exp) );\n          }\n          else if( style == Style.html ) {\n            doc.setField( name, exp.toHtml() );\n          }\n          else {\n            doc.setField( name, exp.toString() );\n          }\n        }\n        catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void transform(SolrDocument doc, int docid) {\n      if( context != null && context.query != null ) {\n        try {\n          Explanation exp = context.searcher.explain(context.query, docid);\n          if( style == Style.nl ) {\n            doc.setField( name, SolrPluginUtils.explanationToNamedList(exp) );\n          }\n          else if( style == Style.html ) {\n            doc.setField( name, exp.toHtml() );\n          }\n          else {\n            doc.setField( name, exp.toString() );\n          }\n        }\n        catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc","date":1440797084,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int).mjava","sourceNew":"    @Override\n    public void transform(SolrDocument doc, int docid, float score) {\n      if( context != null && context.getQuery() != null ) {\n        try {\n          Explanation exp = context.getSearcher().explain(context.getQuery(), docid);\n          if( style == Style.nl ) {\n            doc.setField( name, SolrPluginUtils.explanationToNamedList(exp) );\n          }\n          else if( style == Style.html ) {\n            doc.setField( name, exp.toHtml() );\n          }\n          else {\n            doc.setField( name, exp.toString() );\n          }\n        }\n        catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void transform(SolrDocument doc, int docid) {\n      if( context != null && context.getQuery() != null ) {\n        try {\n          Explanation exp = context.getSearcher().explain(context.getQuery(), docid);\n          if( style == Style.nl ) {\n            doc.setField( name, SolrPluginUtils.explanationToNamedList(exp) );\n          }\n          else if( style == Style.html ) {\n            doc.setField( name, exp.toHtml() );\n          }\n          else {\n            doc.setField( name, exp.toString() );\n          }\n        }\n        catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"320eec6599df6f97f2461a5d1ad49cd93b324a14","date":1503502574,"type":1,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int,float).mjava","sourceNew":"    @Override\n    public void transform(SolrDocument doc, int docid) {\n      if( context != null && context.getQuery() != null ) {\n        try {\n          Explanation exp = context.getSearcher().explain(context.getQuery(), docid);\n          if( style == Style.nl ) {\n            doc.setField( name, SolrPluginUtils.explanationToNamedList(exp) );\n          }\n          else if( style == Style.html ) {\n            doc.setField( name, toHtml(exp));\n          }\n          else {\n            doc.setField( name, exp.toString() );\n          }\n        }\n        catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void transform(SolrDocument doc, int docid, float score) {\n      if( context != null && context.getQuery() != null ) {\n        try {\n          Explanation exp = context.getSearcher().explain(context.getQuery(), docid);\n          if( style == Style.nl ) {\n            doc.setField( name, SolrPluginUtils.explanationToNamedList(exp) );\n          }\n          else if( style == Style.html ) {\n            doc.setField( name, toHtml(exp));\n          }\n          else {\n            doc.setField( name, exp.toString() );\n          }\n        }\n        catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"182384b20c064aa16998ddebe9f36e649279c5a6","date":1503596494,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int,float).mjava","sourceNew":"    @Override\n    public void transform(SolrDocument doc, int docid) {\n      if( context != null && context.getQuery() != null ) {\n        try {\n          Explanation exp = context.getSearcher().explain(context.getQuery(), docid);\n          if( style == Style.nl ) {\n            doc.setField( name, SolrPluginUtils.explanationToNamedList(exp) );\n          }\n          else if( style == Style.html ) {\n            doc.setField( name, toHtml(exp));\n          }\n          else {\n            doc.setField( name, exp.toString() );\n          }\n        }\n        catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void transform(SolrDocument doc, int docid, float score) {\n      if( context != null && context.getQuery() != null ) {\n        try {\n          Explanation exp = context.getSearcher().explain(context.getQuery(), docid);\n          if( style == Style.nl ) {\n            doc.setField( name, SolrPluginUtils.explanationToNamedList(exp) );\n          }\n          else if( style == Style.html ) {\n            doc.setField( name, toHtml(exp));\n          }\n          else {\n            doc.setField( name, exp.toString() );\n          }\n        }\n        catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":1,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int,float).mjava","sourceNew":"    @Override\n    public void transform(SolrDocument doc, int docid) {\n      if( context != null && context.getQuery() != null ) {\n        try {\n          Explanation exp = context.getSearcher().explain(context.getQuery(), docid);\n          if( style == Style.nl ) {\n            doc.setField( name, SolrPluginUtils.explanationToNamedList(exp) );\n          }\n          else if( style == Style.html ) {\n            doc.setField( name, toHtml(exp));\n          }\n          else {\n            doc.setField( name, exp.toString() );\n          }\n        }\n        catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void transform(SolrDocument doc, int docid, float score) {\n      if( context != null && context.getQuery() != null ) {\n        try {\n          Explanation exp = context.getSearcher().explain(context.getQuery(), docid);\n          if( style == Style.nl ) {\n            doc.setField( name, SolrPluginUtils.explanationToNamedList(exp) );\n          }\n          else if( style == Style.html ) {\n            doc.setField( name, toHtml(exp));\n          }\n          else {\n            doc.setField( name, exp.toString() );\n          }\n        }\n        catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15","date":1554259533,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/ExplainAugmenterFactory.ExplainAugmenter#transform(SolrDocument,int).mjava","sourceNew":"    @Override\n    public void transform(SolrDocument doc, int docid) throws IOException {\n      if( context != null && context.getQuery() != null ) {\n        Explanation exp = context.getSearcher().explain(context.getQuery(), docid);\n        if( style == Style.nl ) {\n          doc.setField( name, SolrPluginUtils.explanationToNamedList(exp) );\n        }\n        else if( style == Style.html ) {\n          doc.setField( name, toHtml(exp));\n        }\n        else {\n          doc.setField( name, exp.toString() );\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void transform(SolrDocument doc, int docid) {\n      if( context != null && context.getQuery() != null ) {\n        try {\n          Explanation exp = context.getSearcher().explain(context.getQuery(), docid);\n          if( style == Style.nl ) {\n            doc.setField( name, SolrPluginUtils.explanationToNamedList(exp) );\n          }\n          else if( style == Style.html ) {\n            doc.setField( name, toHtml(exp));\n          }\n          else {\n            doc.setField( name, exp.toString() );\n          }\n        }\n        catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc","182384b20c064aa16998ddebe9f36e649279c5a6"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"65fa3fc3a71e185062b4f869597e7b1e86e4d616":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"320eec6599df6f97f2461a5d1ad49cd93b324a14":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"182384b20c064aa16998ddebe9f36e649279c5a6":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc","320eec6599df6f97f2461a5d1ad49cd93b324a14"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["182384b20c064aa16998ddebe9f36e649279c5a6"],"7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc":["65fa3fc3a71e185062b4f869597e7b1e86e4d616"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"]},"commit2Childs":{"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"65fa3fc3a71e185062b4f869597e7b1e86e4d616":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc"],"c26f00b574427b55127e869b935845554afde1fa":["65fa3fc3a71e185062b4f869597e7b1e86e4d616"],"320eec6599df6f97f2461a5d1ad49cd93b324a14":["182384b20c064aa16998ddebe9f36e649279c5a6"],"182384b20c064aa16998ddebe9f36e649279c5a6":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","320eec6599df6f97f2461a5d1ad49cd93b324a14","182384b20c064aa16998ddebe9f36e649279c5a6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}