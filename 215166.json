{"path":"lucene/core/src/java/org/apache/lucene/util/fst/FST#readArcByIndex(Arc[T],BytesReader,int).mjava","commits":[{"id":"f9b7d62e1503063c6f8cd0aeaa3ca4f8428cd244","date":1564170395,"type":0,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#readArcByIndex(Arc[T],BytesReader,int).mjava","pathOld":"/dev/null","sourceNew":"  public Arc<T> readArcByIndex(Arc<T> arc, final BytesReader in, int idx) throws IOException {\n    arc.arcIdx = idx;\n    assert arc.arcIdx() < arc.numArcs();\n    in.setPosition(arc.posArcsStart() - arc.arcIdx() * arc.bytesPerArc());\n    arc.flags = in.readByte();\n    return readArc(arc, in);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":0,"author":"Atri Sharma","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#readArcByIndex(Arc[T],BytesReader,int).mjava","pathOld":"/dev/null","sourceNew":"  public Arc<T> readArcByIndex(Arc<T> arc, final BytesReader in, int idx) throws IOException {\n    arc.arcIdx = idx;\n    assert arc.arcIdx() < arc.numArcs();\n    in.setPosition(arc.posArcsStart() - arc.arcIdx() * arc.bytesPerArc());\n    arc.flags = in.readByte();\n    return readArc(arc, in);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71d31a7d5773508492505519bb5230b87c8937ad","date":1573681693,"type":3,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#readArcByIndex(Arc[T],BytesReader,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#readArcByIndex(Arc[T],BytesReader,int).mjava","sourceNew":"  public Arc<T> readArcByIndex(Arc<T> arc, final BytesReader in, int idx) throws IOException {\n    assert idx >= 0 && idx < arc.numArcs();\n    in.setPosition(arc.posArcsStart() - idx * arc.bytesPerArc());\n    arc.arcIdx = idx;\n    arc.flags = in.readByte();\n    return readArc(arc, in);\n  }\n\n","sourceOld":"  public Arc<T> readArcByIndex(Arc<T> arc, final BytesReader in, int idx) throws IOException {\n    arc.arcIdx = idx;\n    assert arc.arcIdx() < arc.numArcs();\n    in.setPosition(arc.posArcsStart() - arc.arcIdx() * arc.bytesPerArc());\n    arc.flags = in.readByte();\n    return readArc(arc, in);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06086b5bd0f0d57858f0675becc58edf1f6b7c11","date":1586421397,"type":3,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#readArcByIndex(Arc[T],BytesReader,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#readArcByIndex(Arc[T],BytesReader,int).mjava","sourceNew":"  public Arc<T> readArcByIndex(Arc<T> arc, final BytesReader in, int idx) throws IOException {\n    assert arc.bytesPerArc() > 0;\n    assert arc.nodeFlags() == ARCS_FOR_BINARY_SEARCH;\n    assert idx >= 0 && idx < arc.numArcs();\n    in.setPosition(arc.posArcsStart() - idx * arc.bytesPerArc());\n    arc.arcIdx = idx;\n    arc.flags = in.readByte();\n    return readArc(arc, in);\n  }\n\n","sourceOld":"  public Arc<T> readArcByIndex(Arc<T> arc, final BytesReader in, int idx) throws IOException {\n    assert idx >= 0 && idx < arc.numArcs();\n    in.setPosition(arc.posArcsStart() - idx * arc.bytesPerArc());\n    arc.arcIdx = idx;\n    arc.flags = in.readByte();\n    return readArc(arc, in);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"06086b5bd0f0d57858f0675becc58edf1f6b7c11":["71d31a7d5773508492505519bb5230b87c8937ad"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f9b7d62e1503063c6f8cd0aeaa3ca4f8428cd244":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"71d31a7d5773508492505519bb5230b87c8937ad":["f9b7d62e1503063c6f8cd0aeaa3ca4f8428cd244"],"f8061ddd97f3352007d927dae445884a6f3d857b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f9b7d62e1503063c6f8cd0aeaa3ca4f8428cd244"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["06086b5bd0f0d57858f0675becc58edf1f6b7c11"]},"commit2Childs":{"06086b5bd0f0d57858f0675becc58edf1f6b7c11":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f9b7d62e1503063c6f8cd0aeaa3ca4f8428cd244","f8061ddd97f3352007d927dae445884a6f3d857b"],"f9b7d62e1503063c6f8cd0aeaa3ca4f8428cd244":["71d31a7d5773508492505519bb5230b87c8937ad","f8061ddd97f3352007d927dae445884a6f3d857b"],"71d31a7d5773508492505519bb5230b87c8937ad":["06086b5bd0f0d57858f0675becc58edf1f6b7c11"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}