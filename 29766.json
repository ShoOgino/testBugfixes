{"path":"lucene/queryparser/src/test/org/apache/lucene/queryparser/simple/TestSimpleQueryParser#testRandomQueries().mjava","commits":[{"id":"fdc91c6aee685b616507b9e44fcc69315b8a9e6c","date":1384275771,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/simple/TestSimpleQueryParser#testRandomQueries().mjava","pathOld":"/dev/null","sourceNew":"  // we aren't supposed to barf on any input...\n  public void testRandomQueries() throws Exception {\n    for (int i = 0; i < 1000; i++) {\n      String query = _TestUtil.randomUnicodeString(random());\n      parse(query); // no exception\n      parseKeyword(query, _TestUtil.nextInt(random(), 0, 256)); // no exception\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bae2070aa7aaff000145c4978276eb085e2ff279","date":1391309822,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/simple/TestSimpleQueryParser#testRandomQueries().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/simple/TestSimpleQueryParser#testRandomQueries().mjava","sourceNew":"  // we aren't supposed to barf on any input...\n  public void testRandomQueries() throws Exception {\n    for (int i = 0; i < 1000; i++) {\n      String query = _TestUtil.randomUnicodeString(random());\n      parse(query); // no exception\n      parseKeyword(query, _TestUtil.nextInt(random(), 0, 1024)); // no exception\n    }\n  }\n\n","sourceOld":"  // we aren't supposed to barf on any input...\n  public void testRandomQueries() throws Exception {\n    for (int i = 0; i < 1000; i++) {\n      String query = _TestUtil.randomUnicodeString(random());\n      parse(query); // no exception\n      parseKeyword(query, _TestUtil.nextInt(random(), 0, 256)); // no exception\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/simple/TestSimpleQueryParser#testRandomQueries().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/simple/TestSimpleQueryParser#testRandomQueries().mjava","sourceNew":"  // we aren't supposed to barf on any input...\n  public void testRandomQueries() throws Exception {\n    for (int i = 0; i < 1000; i++) {\n      String query = TestUtil.randomUnicodeString(random());\n      parse(query); // no exception\n      parseKeyword(query, TestUtil.nextInt(random(), 0, 1024)); // no exception\n    }\n  }\n\n","sourceOld":"  // we aren't supposed to barf on any input...\n  public void testRandomQueries() throws Exception {\n    for (int i = 0; i < 1000; i++) {\n      String query = _TestUtil.randomUnicodeString(random());\n      parse(query); // no exception\n      parseKeyword(query, _TestUtil.nextInt(random(), 0, 1024)); // no exception\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6613659748fe4411a7dcf85266e55db1f95f7315":["bae2070aa7aaff000145c4978276eb085e2ff279"],"bae2070aa7aaff000145c4978276eb085e2ff279":["fdc91c6aee685b616507b9e44fcc69315b8a9e6c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fdc91c6aee685b616507b9e44fcc69315b8a9e6c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6613659748fe4411a7dcf85266e55db1f95f7315"]},"commit2Childs":{"6613659748fe4411a7dcf85266e55db1f95f7315":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bae2070aa7aaff000145c4978276eb085e2ff279":["6613659748fe4411a7dcf85266e55db1f95f7315"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fdc91c6aee685b616507b9e44fcc69315b8a9e6c"],"fdc91c6aee685b616507b9e44fcc69315b8a9e6c":["bae2070aa7aaff000145c4978276eb085e2ff279"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}