{"path":"solr/core/src/java/org/apache/solr/update/processor/TimePartitionedUpdateProcessor#processAdd(AddUpdateCommand).mjava","commits":[{"id":"543992c52fe295c8b15aafe4b066e7e3a9a42c48","date":1510862949,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/TimePartitionedUpdateProcessor#processAdd(AddUpdateCommand).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void processAdd(AddUpdateCommand cmd) throws IOException {\n    final Object routeValue = cmd.getSolrInputDocument().getFieldValue(routeField);\n    final String targetCollection = findTargetCollectionGivenRouteKey(routeValue);\n    if (targetCollection == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Doc \" + cmd.getPrintableId() + \" couldn't be routed with \" + routeField + \"=\" + routeValue);\n    }\n    if (thisCollection.equals(targetCollection)) {\n      // pass on through; we've reached the right collection\n      super.processAdd(cmd);\n    } else {\n      // send to the right collection\n      SolrCmdDistributor.Node targetLeaderNode = lookupShardLeaderOfCollection(targetCollection);\n      cmdDistrib.distribAdd(cmd, Collections.singletonList(targetLeaderNode), new ModifiableSolrParams(outParamsToLeader));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5613a70439d5d429f0689c2c5a21615e58deff97","date":1512102314,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessor#processAdd(AddUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/TimePartitionedUpdateProcessor#processAdd(AddUpdateCommand).mjava","sourceNew":"  @Override\n  public void processAdd(AddUpdateCommand cmd) throws IOException {\n    final Object routeValue = cmd.getSolrInputDocument().getFieldValue(routeField);\n    final String targetCollection = findTargetCollectionGivenRouteKey(routeValue);\n    if (targetCollection == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Doc \" + cmd.getPrintableId() + \" couldn't be routed with \" + routeField + \"=\" + routeValue);\n    }\n    if (thisCollection.equals(targetCollection)) {\n      // pass on through; we've reached the right collection\n      super.processAdd(cmd);\n    } else {\n      // send to the right collection\n      SolrCmdDistributor.Node targetLeaderNode = lookupShardLeaderOfCollection(targetCollection);\n      cmdDistrib.distribAdd(cmd, Collections.singletonList(targetLeaderNode), new ModifiableSolrParams(outParamsToLeader));\n    }\n  }\n\n","sourceOld":"  @Override\n  public void processAdd(AddUpdateCommand cmd) throws IOException {\n    final Object routeValue = cmd.getSolrInputDocument().getFieldValue(routeField);\n    final String targetCollection = findTargetCollectionGivenRouteKey(routeValue);\n    if (targetCollection == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Doc \" + cmd.getPrintableId() + \" couldn't be routed with \" + routeField + \"=\" + routeValue);\n    }\n    if (thisCollection.equals(targetCollection)) {\n      // pass on through; we've reached the right collection\n      super.processAdd(cmd);\n    } else {\n      // send to the right collection\n      SolrCmdDistributor.Node targetLeaderNode = lookupShardLeaderOfCollection(targetCollection);\n      cmdDistrib.distribAdd(cmd, Collections.singletonList(targetLeaderNode), new ModifiableSolrParams(outParamsToLeader));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5613a70439d5d429f0689c2c5a21615e58deff97":["543992c52fe295c8b15aafe4b066e7e3a9a42c48"],"543992c52fe295c8b15aafe4b066e7e3a9a42c48":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5613a70439d5d429f0689c2c5a21615e58deff97"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["543992c52fe295c8b15aafe4b066e7e3a9a42c48"],"5613a70439d5d429f0689c2c5a21615e58deff97":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"543992c52fe295c8b15aafe4b066e7e3a9a42c48":["5613a70439d5d429f0689c2c5a21615e58deff97"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}