{"path":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#applyFlushTickets(FlushTicket,FlushedSegment).mjava","commits":[{"id":"327863a2fd61e831028b6c56c8fef6b00a44eb0b","date":1302686439,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#applyFlushTickets(FlushTicket,FlushedSegment).mjava","pathOld":"/dev/null","sourceNew":"  private void applyFlushTickets(FlushTicket current, FlushedSegment segment) throws IOException {\n    synchronized (ticketQueue) {\n      if (current != null) {\n        // this is a segment FlushTicket so assign the flushed segment so we can make progress.\n        assert segment != null;\n        current.segment = segment;\n      }\n      while (true) {\n        // while we can publish flushes keep on making the queue empty.\n        final FlushTicket head = ticketQueue.peek();\n        if (head != null && head.canPublish()) {\n          ticketQueue.poll();\n          finishFlushedSegment(head.segment, head.frozenDeletes);\n        } else {\n          break;\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["7d45e9e2ad7f57776540627c78f5e22e469ccdc1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7d45e9e2ad7f57776540627c78f5e22e469ccdc1","date":1302784878,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#applyFlushTickets(FlushTicket,FlushedSegment).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#applyFlushTickets(FlushTicket,FlushedSegment).mjava","sourceNew":"  private void applyFlushTickets(FlushTicket current, FlushedSegment segment) throws IOException {\n    synchronized (ticketQueue) {\n      if (current != null) {\n        // this is a segment FlushTicket so assign the flushed segment so we can make progress.\n        assert segment != null;\n        current.segment = segment;\n      }\n      while (true) {\n        // while we can publish flushes keep on making the queue empty.\n        final FlushTicket head = ticketQueue.peek();\n        if (head != null && head.canPublish()) {\n          ticketQueue.poll();\n          finishFlush(head.segment, head.frozenDeletes);\n        } else {\n          break;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void applyFlushTickets(FlushTicket current, FlushedSegment segment) throws IOException {\n    synchronized (ticketQueue) {\n      if (current != null) {\n        // this is a segment FlushTicket so assign the flushed segment so we can make progress.\n        assert segment != null;\n        current.segment = segment;\n      }\n      while (true) {\n        // while we can publish flushes keep on making the queue empty.\n        final FlushTicket head = ticketQueue.peek();\n        if (head != null && head.canPublish()) {\n          ticketQueue.poll();\n          finishFlushedSegment(head.segment, head.frozenDeletes);\n        } else {\n          break;\n        }\n      }\n    }\n  }\n\n","bugFix":["327863a2fd61e831028b6c56c8fef6b00a44eb0b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6f4cae61e16730201371ab7e9912721c19324e7","date":1303199575,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#applyFlushTickets(FlushTicket,FlushedSegment).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#applyFlushTickets(FlushTicket,FlushedSegment).mjava","sourceNew":"  private void applyFlushTickets(FlushTicket current, FlushedSegment segment) throws IOException {\n    synchronized (ticketQueue) {\n      if (current != null) {\n        // nocommit -- can't caller set current.segment = segment?\n        // nocommit -- confused by this comment:\n        // This is a segment FlushTicket so assign the flushed segment so we can make progress.\n        assert segment != null;\n        current.segment = segment;\n      }\n      while (true) {\n        // Keep publishing eligible flushed segments:\n        final FlushTicket head = ticketQueue.peek();\n        if (head != null && head.canPublish()) {\n          ticketQueue.poll();\n          finishFlush(head.segment, head.frozenDeletes);\n        } else {\n          break;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void applyFlushTickets(FlushTicket current, FlushedSegment segment) throws IOException {\n    synchronized (ticketQueue) {\n      if (current != null) {\n        // this is a segment FlushTicket so assign the flushed segment so we can make progress.\n        assert segment != null;\n        current.segment = segment;\n      }\n      while (true) {\n        // while we can publish flushes keep on making the queue empty.\n        final FlushTicket head = ticketQueue.peek();\n        if (head != null && head.canPublish()) {\n          ticketQueue.poll();\n          finishFlush(head.segment, head.frozenDeletes);\n        } else {\n          break;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"761f91143f5b5b8e3016b2b178ee0f2f61a9b4e4","date":1303818069,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#applyFlushTickets().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#applyFlushTickets(FlushTicket,FlushedSegment).mjava","sourceNew":"  private void applyFlushTickets() throws IOException {\n    synchronized (ticketQueue) {\n      while (true) {\n        // Keep publishing eligible flushed segments:\n        final FlushTicket head = ticketQueue.peek();\n        if (head != null && head.canPublish()) {\n          ticketQueue.poll();\n          finishFlush(head.segment, head.frozenDeletes);\n        } else {\n          break;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void applyFlushTickets(FlushTicket current, FlushedSegment segment) throws IOException {\n    synchronized (ticketQueue) {\n      if (current != null) {\n        // nocommit -- can't caller set current.segment = segment?\n        // nocommit -- confused by this comment:\n        // This is a segment FlushTicket so assign the flushed segment so we can make progress.\n        assert segment != null;\n        current.segment = segment;\n      }\n      while (true) {\n        // Keep publishing eligible flushed segments:\n        final FlushTicket head = ticketQueue.peek();\n        if (head != null && head.canPublish()) {\n          ticketQueue.poll();\n          finishFlush(head.segment, head.frozenDeletes);\n        } else {\n          break;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["a1c3710e755dc60691ac0d7fe23c9fcba0537bdc"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"7d45e9e2ad7f57776540627c78f5e22e469ccdc1":["327863a2fd61e831028b6c56c8fef6b00a44eb0b"],"761f91143f5b5b8e3016b2b178ee0f2f61a9b4e4":["f6f4cae61e16730201371ab7e9912721c19324e7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"327863a2fd61e831028b6c56c8fef6b00a44eb0b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f6f4cae61e16730201371ab7e9912721c19324e7":["7d45e9e2ad7f57776540627c78f5e22e469ccdc1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7d45e9e2ad7f57776540627c78f5e22e469ccdc1":["f6f4cae61e16730201371ab7e9912721c19324e7"],"761f91143f5b5b8e3016b2b178ee0f2f61a9b4e4":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["327863a2fd61e831028b6c56c8fef6b00a44eb0b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"327863a2fd61e831028b6c56c8fef6b00a44eb0b":["7d45e9e2ad7f57776540627c78f5e22e469ccdc1"],"f6f4cae61e16730201371ab7e9912721c19324e7":["761f91143f5b5b8e3016b2b178ee0f2f61a9b4e4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["761f91143f5b5b8e3016b2b178ee0f2f61a9b4e4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}