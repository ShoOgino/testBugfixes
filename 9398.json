{"path":"lucene/src/test/org/apache/lucene/search/TestParallelMultiSearcher#getMultiSearcherInstance(Searcher[]).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestParallelMultiSearcher#getMultiSearcherInstance(Searcher[]).mjava","pathOld":"src/test/org/apache/lucene/search/TestParallelMultiSearcher#getMultiSearcherInstance(Searcher[]).mjava","sourceNew":"  @Override\n  protected MultiSearcher getMultiSearcherInstance(Searcher[] searchers)\n    throws IOException {\n    return new ParallelMultiSearcher(searchers);\n  }\n\n","sourceOld":"  @Override\n  protected MultiSearcher getMultiSearcherInstance(Searcher[] searchers)\n    throws IOException {\n    return new ParallelMultiSearcher(searchers);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7fc5a2665a7fa1b9450097ae658193a11ee4d02c","date":1292699695,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestParallelMultiSearcher#getMultiSearcherInstance(Searcher[]).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestParallelMultiSearcher#getMultiSearcherInstance(Searcher[]).mjava","sourceNew":"  @Override\n  protected MultiSearcher getMultiSearcherInstance(Searcher[] searchers)\n    throws IOException {\n    ExecutorService exec = Executors.newFixedThreadPool(_TestUtil.nextInt(random, 2, 8));\n    pools.add(exec);\n    return new ParallelMultiSearcher(exec, searchers);\n  }\n\n","sourceOld":"  @Override\n  protected MultiSearcher getMultiSearcherInstance(Searcher[] searchers)\n    throws IOException {\n    return new ParallelMultiSearcher(searchers);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestParallelMultiSearcher#getMultiSearcherInstance(Searcher[]).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestParallelMultiSearcher#getMultiSearcherInstance(Searcher[]).mjava","sourceNew":"  @Override\n  protected MultiSearcher getMultiSearcherInstance(Searcher[] searchers)\n    throws IOException {\n    ExecutorService exec = Executors.newFixedThreadPool(_TestUtil.nextInt(random, 2, 8));\n    pools.add(exec);\n    return new ParallelMultiSearcher(exec, searchers);\n  }\n\n","sourceOld":"  @Override\n  protected MultiSearcher getMultiSearcherInstance(Searcher[] searchers)\n    throws IOException {\n    return new ParallelMultiSearcher(searchers);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestParallelMultiSearcher#getMultiSearcherInstance(Searcher[]).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestParallelMultiSearcher#getMultiSearcherInstance(Searcher[]).mjava","sourceNew":"  @Override\n  protected MultiSearcher getMultiSearcherInstance(Searcher[] searchers)\n    throws IOException {\n    ExecutorService exec = Executors.newFixedThreadPool(_TestUtil.nextInt(random, 2, 8));\n    pools.add(exec);\n    return new ParallelMultiSearcher(exec, searchers);\n  }\n\n","sourceOld":"  @Override\n  protected MultiSearcher getMultiSearcherInstance(Searcher[] searchers)\n    throws IOException {\n    return new ParallelMultiSearcher(searchers);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b241ea5e635d896cc0af83cd96ffd0322e0aba7","date":1294226200,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/search/TestParallelMultiSearcher#getMultiSearcherInstance(Searcher[]).mjava","sourceNew":null,"sourceOld":"  @Override\n  protected MultiSearcher getMultiSearcherInstance(Searcher[] searchers)\n    throws IOException {\n    ExecutorService exec = Executors.newFixedThreadPool(_TestUtil.nextInt(random, 2, 8));\n    pools.add(exec);\n    return new ParallelMultiSearcher(exec, searchers);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/search/TestParallelMultiSearcher#getMultiSearcherInstance(Searcher[]).mjava","sourceNew":null,"sourceOld":"  @Override\n  protected MultiSearcher getMultiSearcherInstance(Searcher[] searchers)\n    throws IOException {\n    ExecutorService exec = Executors.newFixedThreadPool(_TestUtil.nextInt(random, 2, 8));\n    pools.add(exec);\n    return new ParallelMultiSearcher(exec, searchers);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/search/TestParallelMultiSearcher#getMultiSearcherInstance(Searcher[]).mjava","sourceNew":null,"sourceOld":"  @Override\n  protected MultiSearcher getMultiSearcherInstance(Searcher[] searchers)\n    throws IOException {\n    ExecutorService exec = Executors.newFixedThreadPool(_TestUtil.nextInt(random, 2, 8));\n    pools.add(exec);\n    return new ParallelMultiSearcher(exec, searchers);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7fc5a2665a7fa1b9450097ae658193a11ee4d02c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"70ad682703b8585f5d0a637efec044d57ec05efb":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"8b241ea5e635d896cc0af83cd96ffd0322e0aba7":["7fc5a2665a7fa1b9450097ae658193a11ee4d02c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["9454a6510e2db155fb01faa5c049b06ece95fab9","7fc5a2665a7fa1b9450097ae658193a11ee4d02c"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","7fc5a2665a7fa1b9450097ae658193a11ee4d02c"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7fc5a2665a7fa1b9450097ae658193a11ee4d02c":["8b241ea5e635d896cc0af83cd96ffd0322e0aba7","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"70ad682703b8585f5d0a637efec044d57ec05efb":[],"8b241ea5e635d896cc0af83cd96ffd0322e0aba7":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["70ad682703b8585f5d0a637efec044d57ec05efb"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7fc5a2665a7fa1b9450097ae658193a11ee4d02c","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}