{"path":"lucene/core/src/test/org/apache/lucene/search/TestFilterWeight#implTestDeclaredMethodsOverridden(Class[#],Class[#]).mjava","commits":[{"id":"96ab132e6f739772060bedf1719a057e97d5b759","date":1468422264,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilterWeight#implTestDeclaredMethodsOverridden(Class[#],Class[#]).mjava","pathOld":"/dev/null","sourceNew":"  private void implTestDeclaredMethodsOverridden(Class<?> superClass, Class<?> subClass) throws Exception {\n    for (final Method superClassMethod : superClass.getDeclaredMethods()) {\n      final int modifiers = superClassMethod.getModifiers();\n      if (Modifier.isFinal(modifiers)) continue;\n      if (Modifier.isStatic(modifiers)) continue;\n      if (superClassMethod.getName().equals(\"bulkScorer\")) {\n        try {\n          final Method subClassMethod = subClass.getDeclaredMethod(\n              superClassMethod.getName(),\n              superClassMethod.getParameterTypes());\n          fail(subClass + \" must not override\\n'\" + superClassMethod + \"'\"\n              + \" but it does override\\n'\" + subClassMethod + \"'\");\n        } catch (NoSuchMethodException e) {\n          /* FilterWeight must not override the bulkScorer method\n           * since as of July 2016 not all deriving classes use the\n           * {code}return in.bulkScorer(content);{code}\n           * implementation that FilterWeight.bulkScorer would use.\n           */\n          continue;\n        }\n      }\n      try {\n        final Method subClassMethod = subClass.getDeclaredMethod(\n            superClassMethod.getName(),\n            superClassMethod.getParameterTypes());\n        assertEquals(\"getReturnType() difference\",\n            superClassMethod.getReturnType(),\n            subClassMethod.getReturnType());\n      } catch (NoSuchMethodException e) {\n        fail(subClass + \" needs to override '\" + superClassMethod + \"'\");\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilterWeight#implTestDeclaredMethodsOverridden(Class[#],Class[#]).mjava","pathOld":"/dev/null","sourceNew":"  private void implTestDeclaredMethodsOverridden(Class<?> superClass, Class<?> subClass) throws Exception {\n    for (final Method superClassMethod : superClass.getDeclaredMethods()) {\n      final int modifiers = superClassMethod.getModifiers();\n      if (Modifier.isFinal(modifiers)) continue;\n      if (Modifier.isStatic(modifiers)) continue;\n      if (superClassMethod.getName().equals(\"bulkScorer\")) {\n        try {\n          final Method subClassMethod = subClass.getDeclaredMethod(\n              superClassMethod.getName(),\n              superClassMethod.getParameterTypes());\n          fail(subClass + \" must not override\\n'\" + superClassMethod + \"'\"\n              + \" but it does override\\n'\" + subClassMethod + \"'\");\n        } catch (NoSuchMethodException e) {\n          /* FilterWeight must not override the bulkScorer method\n           * since as of July 2016 not all deriving classes use the\n           * {code}return in.bulkScorer(content);{code}\n           * implementation that FilterWeight.bulkScorer would use.\n           */\n          continue;\n        }\n      }\n      try {\n        final Method subClassMethod = subClass.getDeclaredMethod(\n            superClassMethod.getName(),\n            superClassMethod.getParameterTypes());\n        assertEquals(\"getReturnType() difference\",\n            superClassMethod.getReturnType(),\n            subClassMethod.getReturnType());\n      } catch (NoSuchMethodException e) {\n        fail(subClass + \" needs to override '\" + superClassMethod + \"'\");\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dca67e06c96e95a8d9ef07418b6299bfd981523b","date":1484639518,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilterWeight#implTestDeclaredMethodsOverridden(Class[#],Class[#]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilterWeight#implTestDeclaredMethodsOverridden(Class[#],Class[#]).mjava","sourceNew":"  private void implTestDeclaredMethodsOverridden(Class<?> superClass, Class<?> subClass) throws Exception {\n    for (final Method superClassMethod : superClass.getDeclaredMethods()) {\n      final int modifiers = superClassMethod.getModifiers();\n      if (Modifier.isFinal(modifiers)) continue;\n      if (Modifier.isStatic(modifiers)) continue;\n      if (Arrays.asList(\"bulkScorer\", \"scorerSupplier\").contains(superClassMethod.getName())) {\n        try {\n          final Method subClassMethod = subClass.getDeclaredMethod(\n              superClassMethod.getName(),\n              superClassMethod.getParameterTypes());\n          fail(subClass + \" must not override\\n'\" + superClassMethod + \"'\"\n              + \" but it does override\\n'\" + subClassMethod + \"'\");\n        } catch (NoSuchMethodException e) {\n          /* FilterWeight must not override the bulkScorer method\n           * since as of July 2016 not all deriving classes use the\n           * {code}return in.bulkScorer(content);{code}\n           * implementation that FilterWeight.bulkScorer would use.\n           */\n          continue;\n        }\n      }\n      try {\n        final Method subClassMethod = subClass.getDeclaredMethod(\n            superClassMethod.getName(),\n            superClassMethod.getParameterTypes());\n        assertEquals(\"getReturnType() difference\",\n            superClassMethod.getReturnType(),\n            subClassMethod.getReturnType());\n      } catch (NoSuchMethodException e) {\n        fail(subClass + \" needs to override '\" + superClassMethod + \"'\");\n      }\n    }\n  }\n\n","sourceOld":"  private void implTestDeclaredMethodsOverridden(Class<?> superClass, Class<?> subClass) throws Exception {\n    for (final Method superClassMethod : superClass.getDeclaredMethods()) {\n      final int modifiers = superClassMethod.getModifiers();\n      if (Modifier.isFinal(modifiers)) continue;\n      if (Modifier.isStatic(modifiers)) continue;\n      if (superClassMethod.getName().equals(\"bulkScorer\")) {\n        try {\n          final Method subClassMethod = subClass.getDeclaredMethod(\n              superClassMethod.getName(),\n              superClassMethod.getParameterTypes());\n          fail(subClass + \" must not override\\n'\" + superClassMethod + \"'\"\n              + \" but it does override\\n'\" + subClassMethod + \"'\");\n        } catch (NoSuchMethodException e) {\n          /* FilterWeight must not override the bulkScorer method\n           * since as of July 2016 not all deriving classes use the\n           * {code}return in.bulkScorer(content);{code}\n           * implementation that FilterWeight.bulkScorer would use.\n           */\n          continue;\n        }\n      }\n      try {\n        final Method subClassMethod = subClass.getDeclaredMethod(\n            superClassMethod.getName(),\n            superClassMethod.getParameterTypes());\n        assertEquals(\"getReturnType() difference\",\n            superClassMethod.getReturnType(),\n            subClassMethod.getReturnType());\n      } catch (NoSuchMethodException e) {\n        fail(subClass + \" needs to override '\" + superClassMethod + \"'\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"302d34f2c66e8d489ee13078305c330cbf67b226","date":1484754357,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilterWeight#implTestDeclaredMethodsOverridden(Class[#],Class[#]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilterWeight#implTestDeclaredMethodsOverridden(Class[#],Class[#]).mjava","sourceNew":"  private void implTestDeclaredMethodsOverridden(Class<?> superClass, Class<?> subClass) throws Exception {\n    for (final Method superClassMethod : superClass.getDeclaredMethods()) {\n      final int modifiers = superClassMethod.getModifiers();\n      if (Modifier.isFinal(modifiers)) continue;\n      if (Modifier.isStatic(modifiers)) continue;\n      if (Arrays.asList(\"bulkScorer\", \"scorerSupplier\").contains(superClassMethod.getName())) {\n        try {\n          final Method subClassMethod = subClass.getDeclaredMethod(\n              superClassMethod.getName(),\n              superClassMethod.getParameterTypes());\n          fail(subClass + \" must not override\\n'\" + superClassMethod + \"'\"\n              + \" but it does override\\n'\" + subClassMethod + \"'\");\n        } catch (NoSuchMethodException e) {\n          /* FilterWeight must not override the bulkScorer method\n           * since as of July 2016 not all deriving classes use the\n           * {code}return in.bulkScorer(content);{code}\n           * implementation that FilterWeight.bulkScorer would use.\n           */\n          continue;\n        }\n      }\n      try {\n        final Method subClassMethod = subClass.getDeclaredMethod(\n            superClassMethod.getName(),\n            superClassMethod.getParameterTypes());\n        assertEquals(\"getReturnType() difference\",\n            superClassMethod.getReturnType(),\n            subClassMethod.getReturnType());\n      } catch (NoSuchMethodException e) {\n        fail(subClass + \" needs to override '\" + superClassMethod + \"'\");\n      }\n    }\n  }\n\n","sourceOld":"  private void implTestDeclaredMethodsOverridden(Class<?> superClass, Class<?> subClass) throws Exception {\n    for (final Method superClassMethod : superClass.getDeclaredMethods()) {\n      final int modifiers = superClassMethod.getModifiers();\n      if (Modifier.isFinal(modifiers)) continue;\n      if (Modifier.isStatic(modifiers)) continue;\n      if (superClassMethod.getName().equals(\"bulkScorer\")) {\n        try {\n          final Method subClassMethod = subClass.getDeclaredMethod(\n              superClassMethod.getName(),\n              superClassMethod.getParameterTypes());\n          fail(subClass + \" must not override\\n'\" + superClassMethod + \"'\"\n              + \" but it does override\\n'\" + subClassMethod + \"'\");\n        } catch (NoSuchMethodException e) {\n          /* FilterWeight must not override the bulkScorer method\n           * since as of July 2016 not all deriving classes use the\n           * {code}return in.bulkScorer(content);{code}\n           * implementation that FilterWeight.bulkScorer would use.\n           */\n          continue;\n        }\n      }\n      try {\n        final Method subClassMethod = subClass.getDeclaredMethod(\n            superClassMethod.getName(),\n            superClassMethod.getParameterTypes());\n        assertEquals(\"getReturnType() difference\",\n            superClassMethod.getReturnType(),\n            subClassMethod.getReturnType());\n      } catch (NoSuchMethodException e) {\n        fail(subClass + \" needs to override '\" + superClassMethod + \"'\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dca67e06c96e95a8d9ef07418b6299bfd981523b":["96ab132e6f739772060bedf1719a057e97d5b759"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"96ab132e6f739772060bedf1719a057e97d5b759":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","96ab132e6f739772060bedf1719a057e97d5b759"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dca67e06c96e95a8d9ef07418b6299bfd981523b"],"302d34f2c66e8d489ee13078305c330cbf67b226":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","dca67e06c96e95a8d9ef07418b6299bfd981523b"]},"commit2Childs":{"dca67e06c96e95a8d9ef07418b6299bfd981523b":["cd5edd1f2b162a5cfa08efd17851a07373a96817","302d34f2c66e8d489ee13078305c330cbf67b226"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["96ab132e6f739772060bedf1719a057e97d5b759","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"96ab132e6f739772060bedf1719a057e97d5b759":["dca67e06c96e95a8d9ef07418b6299bfd981523b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["302d34f2c66e8d489ee13078305c330cbf67b226"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"302d34f2c66e8d489ee13078305c330cbf67b226":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","302d34f2c66e8d489ee13078305c330cbf67b226"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}