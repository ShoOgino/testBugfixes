{"path":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#newFSDirectory(File,LockFactory,boolean).mjava","commits":[{"id":"065d530f7c7a67789e972c4611cd4b2bd28a07e9","date":1324000361,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#newFSDirectory(File,LockFactory,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns a new FSDirectory instance over the given file, which must be a folder. */\n  public static MockDirectoryWrapper newFSDirectory(File f, LockFactory lf, boolean maybeWrap) throws IOException {\n    String fsdirClass = TEST_DIRECTORY;\n    if (fsdirClass.equals(\"random\")) {\n      fsdirClass = FS_DIRECTORIES[random.nextInt(FS_DIRECTORIES.length)];\n    }\n\n    Class<? extends FSDirectory> clazz;\n    try {\n      try {\n        clazz = CommandLineUtil.loadFSDirectoryClass(fsdirClass);\n      } catch (ClassCastException e) {\n        // TEST_DIRECTORY is not a sub-class of FSDirectory, so draw one at random\n        fsdirClass = FS_DIRECTORIES[random.nextInt(FS_DIRECTORIES.length)];\n        clazz = CommandLineUtil.loadFSDirectoryClass(fsdirClass);\n      }\n      \n      Directory fsdir = newFSDirectoryImpl(clazz, f);\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, maybeWrap ? maybeNRTWrap(random, fsdir) : fsdir);\n      if (lf != null) {\n        dir.setLockFactory(lf);\n      }\n      stores.put(dir, Thread.currentThread().getStackTrace());\n      dir.setThrottling(TEST_THROTTLING);\n      return dir;\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592e183306e8e4efabf3e7e08d3e709c9b97dbb","date":1324403520,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#newFSDirectory(File,LockFactory,boolean).mjava","sourceNew":null,"sourceOld":"  /** Returns a new FSDirectory instance over the given file, which must be a folder. */\n  public static MockDirectoryWrapper newFSDirectory(File f, LockFactory lf, boolean maybeWrap) throws IOException {\n    String fsdirClass = TEST_DIRECTORY;\n    if (fsdirClass.equals(\"random\")) {\n      fsdirClass = FS_DIRECTORIES[random.nextInt(FS_DIRECTORIES.length)];\n    }\n\n    Class<? extends FSDirectory> clazz;\n    try {\n      try {\n        clazz = CommandLineUtil.loadFSDirectoryClass(fsdirClass);\n      } catch (ClassCastException e) {\n        // TEST_DIRECTORY is not a sub-class of FSDirectory, so draw one at random\n        fsdirClass = FS_DIRECTORIES[random.nextInt(FS_DIRECTORIES.length)];\n        clazz = CommandLineUtil.loadFSDirectoryClass(fsdirClass);\n      }\n      \n      Directory fsdir = newFSDirectoryImpl(clazz, f);\n      MockDirectoryWrapper dir = new MockDirectoryWrapper(random, maybeWrap ? maybeNRTWrap(random, fsdir) : fsdir);\n      if (lf != null) {\n        dir.setLockFactory(lf);\n      }\n      stores.put(dir, Thread.currentThread().getStackTrace());\n      dir.setThrottling(TEST_THROTTLING);\n      return dir;\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f592e183306e8e4efabf3e7e08d3e709c9b97dbb":["065d530f7c7a67789e972c4611cd4b2bd28a07e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"065d530f7c7a67789e972c4611cd4b2bd28a07e9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f592e183306e8e4efabf3e7e08d3e709c9b97dbb"]},"commit2Childs":{"f592e183306e8e4efabf3e7e08d3e709c9b97dbb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["065d530f7c7a67789e972c4611cd4b2bd28a07e9"],"065d530f7c7a67789e972c4611cd4b2bd28a07e9":["f592e183306e8e4efabf3e7e08d3e709c9b97dbb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}