{"path":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/ar/ArabicAnalyzer#tokenStream(String,Reader).mjava","commits":[{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/ar/ArabicAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/ar/ArabicAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * Creates a TokenStream which tokenizes all the text in the provided Reader.\n   *\n   * @return  A TokenStream build from a StandardTokenizer filtered with\n   * \t\t\tStandardFilter, StopFilter, ArabicNormalizationFilter and ArabicStemFilter.\n   */\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer( reader );\n    result = new StopFilter( result, stoptable );\n    result = new ArabicNormalizationFilter( result );\n    result = new ArabicStemFilter( result );\n\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Creates a TokenStream which tokenizes all the text in the provided Reader.\n   *\n   * @return  A TokenStream build from a StandardTokenizer filtered with\n   * \t\t\tStandardFilter, StopFilter, ArabicNormalizationFilter and ArabicStemFilter.\n   */\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer( reader );\n    result = new StopFilter( result, stoptable );\n    result = new ArabicNormalizationFilter( result );\n    result = new ArabicStemFilter( result );\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c83dcc030e0c23d7e510af785f698bca9c48bc8","date":1249496542,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/ar/ArabicAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/ar/ArabicAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * Creates a TokenStream which tokenizes all the text in the provided Reader.\n   *\n   * @return  A TokenStream build from an ArabicTokenizer filtered with\n   * \t\t\tStopFilter, LowerCaseFilter, ArabicNormalizationFilter and ArabicStemFilter.\n   */\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer( reader );\n    result = new StopFilter( result, stoptable );\n    result = new LowerCaseFilter(result);\n    result = new ArabicNormalizationFilter( result );\n    result = new ArabicStemFilter( result );\n\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Creates a TokenStream which tokenizes all the text in the provided Reader.\n   *\n   * @return  A TokenStream build from a StandardTokenizer filtered with\n   * \t\t\tStandardFilter, StopFilter, ArabicNormalizationFilter and ArabicStemFilter.\n   */\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer( reader );\n    result = new StopFilter( result, stoptable );\n    result = new ArabicNormalizationFilter( result );\n    result = new ArabicStemFilter( result );\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"18359c8e12d55f66c27cfe7babe86283f06a6aa5","date":1250426225,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/ar/ArabicAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/ar/ArabicAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * Creates a TokenStream which tokenizes all the text in the provided Reader.\n   *\n   * @return  A TokenStream built from an ArabicTokenizer filtered with\n   * \t\t\tStopFilter, LowerCaseFilter, ArabicNormalizationFilter and ArabicStemFilter.\n   */\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer( reader );\n    result = new StopFilter( result, stoptable );\n    result = new LowerCaseFilter(result);\n    result = new ArabicNormalizationFilter( result );\n    result = new ArabicStemFilter( result );\n\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Creates a TokenStream which tokenizes all the text in the provided Reader.\n   *\n   * @return  A TokenStream build from an ArabicTokenizer filtered with\n   * \t\t\tStopFilter, LowerCaseFilter, ArabicNormalizationFilter and ArabicStemFilter.\n   */\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer( reader );\n    result = new StopFilter( result, stoptable );\n    result = new LowerCaseFilter(result);\n    result = new ArabicNormalizationFilter( result );\n    result = new ArabicStemFilter( result );\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45b06c3ff8a4d9d3d751dd311e51c59303c2719c","date":1250600126,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/ar/ArabicAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/ar/ArabicAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided {@link Reader}.\n   *\n   * @return  A {@link TokenStream} built from an {@link ArabicLetterTokenizer} filtered with\n   * \t\t\t{@link StopFilter}, {@link LowerCaseFilter}, {@link ArabicNormalizationFilter}\n   *            and {@link ArabicStemFilter}.\n   */\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer( reader );\n    result = new StopFilter( result, stoptable );\n    result = new LowerCaseFilter(result);\n    result = new ArabicNormalizationFilter( result );\n    result = new ArabicStemFilter( result );\n\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Creates a TokenStream which tokenizes all the text in the provided Reader.\n   *\n   * @return  A TokenStream built from an ArabicTokenizer filtered with\n   * \t\t\tStopFilter, LowerCaseFilter, ArabicNormalizationFilter and ArabicStemFilter.\n   */\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer( reader );\n    result = new StopFilter( result, stoptable );\n    result = new LowerCaseFilter(result);\n    result = new ArabicNormalizationFilter( result );\n    result = new ArabicStemFilter( result );\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a6f07227e65a4e198419b5c9ea3a60ca99d51fd4","date":1255092947,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/ar/ArabicAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/ar/ArabicAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided {@link Reader}.\n   *\n   * @return  A {@link TokenStream} built from an {@link ArabicLetterTokenizer} filtered with\n   * \t\t\t{@link LowerCaseFilter}, {@link StopFilter}, {@link ArabicNormalizationFilter}\n   *            and {@link ArabicStemFilter}.\n   */\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer( reader );\n    result = new LowerCaseFilter(result);\n    result = new StopFilter( result, stoptable );\n    result = new ArabicNormalizationFilter( result );\n    result = new ArabicStemFilter( result );\n\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided {@link Reader}.\n   *\n   * @return  A {@link TokenStream} built from an {@link ArabicLetterTokenizer} filtered with\n   * \t\t\t{@link StopFilter}, {@link LowerCaseFilter}, {@link ArabicNormalizationFilter}\n   *            and {@link ArabicStemFilter}.\n   */\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer( reader );\n    result = new StopFilter( result, stoptable );\n    result = new LowerCaseFilter(result);\n    result = new ArabicNormalizationFilter( result );\n    result = new ArabicStemFilter( result );\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55cfe5c9a36a6278252026854d756ea2f27a248d","date":1255523058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/ar/ArabicAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/ar/ArabicAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided {@link Reader}.\n   *\n   * @return  A {@link TokenStream} built from an {@link ArabicLetterTokenizer} filtered with\n   * \t\t\t{@link LowerCaseFilter}, {@link StopFilter}, {@link ArabicNormalizationFilter}\n   *            and {@link ArabicStemFilter}.\n   */\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer( reader );\n    result = new LowerCaseFilter(result);\n    // the order here is important: the stopword list is not normalized!\n    result = new StopFilter( result, stoptable );\n    result = new ArabicNormalizationFilter( result );\n    result = new ArabicStemFilter( result );\n\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided {@link Reader}.\n   *\n   * @return  A {@link TokenStream} built from an {@link ArabicLetterTokenizer} filtered with\n   * \t\t\t{@link LowerCaseFilter}, {@link StopFilter}, {@link ArabicNormalizationFilter}\n   *            and {@link ArabicStemFilter}.\n   */\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer( reader );\n    result = new LowerCaseFilter(result);\n    result = new StopFilter( result, stoptable );\n    result = new ArabicNormalizationFilter( result );\n    result = new ArabicStemFilter( result );\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9","date":1256127131,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/ar/ArabicAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/ar/ArabicAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided {@link Reader}.\n   *\n   * @return  A {@link TokenStream} built from an {@link ArabicLetterTokenizer} filtered with\n   * \t\t\t{@link LowerCaseFilter}, {@link StopFilter}, {@link ArabicNormalizationFilter}\n   *            and {@link ArabicStemFilter}.\n   */\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer( reader );\n    result = new LowerCaseFilter(result);\n    // the order here is important: the stopword list is not normalized!\n    result = new StopFilter(false, result, stoptable );\n    result = new ArabicNormalizationFilter( result );\n    result = new ArabicStemFilter( result );\n\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided {@link Reader}.\n   *\n   * @return  A {@link TokenStream} built from an {@link ArabicLetterTokenizer} filtered with\n   * \t\t\t{@link LowerCaseFilter}, {@link StopFilter}, {@link ArabicNormalizationFilter}\n   *            and {@link ArabicStemFilter}.\n   */\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer( reader );\n    result = new LowerCaseFilter(result);\n    // the order here is important: the stopword list is not normalized!\n    result = new StopFilter( result, stoptable );\n    result = new ArabicNormalizationFilter( result );\n    result = new ArabicStemFilter( result );\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba1116b3450a9c1642c89445d131b37344055245","date":1256329517,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/ar/ArabicAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/ar/ArabicAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided {@link Reader}.\n   *\n   * @return  A {@link TokenStream} built from an {@link ArabicLetterTokenizer} filtered with\n   * \t\t\t{@link LowerCaseFilter}, {@link StopFilter}, {@link ArabicNormalizationFilter}\n   *            and {@link ArabicStemFilter}.\n   */\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer( reader );\n    result = new LowerCaseFilter(result);\n    // the order here is important: the stopword list is not normalized!\n    result = new StopFilter( StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                             result, stoptable );\n    result = new ArabicNormalizationFilter( result );\n    result = new ArabicStemFilter( result );\n\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided {@link Reader}.\n   *\n   * @return  A {@link TokenStream} built from an {@link ArabicLetterTokenizer} filtered with\n   * \t\t\t{@link LowerCaseFilter}, {@link StopFilter}, {@link ArabicNormalizationFilter}\n   *            and {@link ArabicStemFilter}.\n   */\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer( reader );\n    result = new LowerCaseFilter(result);\n    // the order here is important: the stopword list is not normalized!\n    result = new StopFilter(false, result, stoptable );\n    result = new ArabicNormalizationFilter( result );\n    result = new ArabicStemFilter( result );\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/ar/ArabicAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/ar/ArabicAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided {@link Reader}.\n   *\n   * @return  A {@link TokenStream} built from an {@link ArabicLetterTokenizer} filtered with\n   * \t\t\t{@link LowerCaseFilter}, {@link StopFilter}, {@link ArabicNormalizationFilter}\n   *            and {@link ArabicStemFilter}.\n   */\n  @Override\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer( reader );\n    result = new LowerCaseFilter(result);\n    // the order here is important: the stopword list is not normalized!\n    result = new StopFilter( StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                             result, stoptable );\n    result = new ArabicNormalizationFilter( result );\n    result = new ArabicStemFilter( result );\n\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided {@link Reader}.\n   *\n   * @return  A {@link TokenStream} built from an {@link ArabicLetterTokenizer} filtered with\n   * \t\t\t{@link LowerCaseFilter}, {@link StopFilter}, {@link ArabicNormalizationFilter}\n   *            and {@link ArabicStemFilter}.\n   */\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer( reader );\n    result = new LowerCaseFilter(result);\n    // the order here is important: the stopword list is not normalized!\n    result = new StopFilter( StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                             result, stoptable );\n    result = new ArabicNormalizationFilter( result );\n    result = new ArabicStemFilter( result );\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41ce0ce6485d29a241c4ca4b6179d14df6a66bae","date":1259357651,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/ar/ArabicAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/ar/ArabicAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided {@link Reader}.\n   *\n   * @return  A {@link TokenStream} built from an {@link ArabicLetterTokenizer} filtered with\n   * \t\t\t{@link LowerCaseFilter}, {@link StopFilter}, {@link ArabicNormalizationFilter}\n   *            and {@link ArabicStemFilter}.\n   */\n  @Override\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer( reader );\n    result = new LowerCaseFilter(matchVersion, result);\n    // the order here is important: the stopword list is not normalized!\n    result = new StopFilter( StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                             result, stoptable );\n    result = new ArabicNormalizationFilter( result );\n    result = new ArabicStemFilter( result );\n\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided {@link Reader}.\n   *\n   * @return  A {@link TokenStream} built from an {@link ArabicLetterTokenizer} filtered with\n   * \t\t\t{@link LowerCaseFilter}, {@link StopFilter}, {@link ArabicNormalizationFilter}\n   *            and {@link ArabicStemFilter}.\n   */\n  @Override\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer( reader );\n    result = new LowerCaseFilter(result);\n    // the order here is important: the stopword list is not normalized!\n    result = new StopFilter( StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                             result, stoptable );\n    result = new ArabicNormalizationFilter( result );\n    result = new ArabicStemFilter( result );\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f6c85ffa816c86be877aa7a5029a5daa1336e7f","date":1259617761,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/ar/ArabicAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/ar/ArabicAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided {@link Reader}.\n   *\n   * @return  A {@link TokenStream} built from an {@link ArabicLetterTokenizer} filtered with\n   * \t\t\t{@link LowerCaseFilter}, {@link StopFilter}, {@link ArabicNormalizationFilter}\n   *            and {@link ArabicStemFilter}.\n   */\n  @Override\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer( reader );\n    result = new LowerCaseFilter(matchVersion, result);\n    // the order here is important: the stopword list is not normalized!\n    result = new StopFilter( matchVersion, result, stoptable );\n    result = new ArabicNormalizationFilter( result );\n    result = new ArabicStemFilter( result );\n\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided {@link Reader}.\n   *\n   * @return  A {@link TokenStream} built from an {@link ArabicLetterTokenizer} filtered with\n   * \t\t\t{@link LowerCaseFilter}, {@link StopFilter}, {@link ArabicNormalizationFilter}\n   *            and {@link ArabicStemFilter}.\n   */\n  @Override\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer( reader );\n    result = new LowerCaseFilter(matchVersion, result);\n    // the order here is important: the stopword list is not normalized!\n    result = new StopFilter( StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                             result, stoptable );\n    result = new ArabicNormalizationFilter( result );\n    result = new ArabicStemFilter( result );\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc5fbfd4c64963aba52713a4496522540294d69","date":1262508497,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/ar/ArabicAnalyzer#tokenStream(String,Reader).mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided {@link Reader}.\n   *\n   * @return  A {@link TokenStream} built from an {@link ArabicLetterTokenizer} filtered with\n   * \t\t\t{@link LowerCaseFilter}, {@link StopFilter}, {@link ArabicNormalizationFilter}\n   *            and {@link ArabicStemFilter}.\n   */\n  @Override\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new ArabicLetterTokenizer( reader );\n    result = new LowerCaseFilter(matchVersion, result);\n    // the order here is important: the stopword list is not normalized!\n    result = new StopFilter( matchVersion, result, stoptable );\n    result = new ArabicNormalizationFilter( result );\n    result = new ArabicStemFilter( result );\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"18359c8e12d55f66c27cfe7babe86283f06a6aa5":["4c83dcc030e0c23d7e510af785f698bca9c48bc8"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["ba1116b3450a9c1642c89445d131b37344055245"],"55cfe5c9a36a6278252026854d756ea2f27a248d":["a6f07227e65a4e198419b5c9ea3a60ca99d51fd4"],"ddc5fbfd4c64963aba52713a4496522540294d69":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"ba1116b3450a9c1642c89445d131b37344055245":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"4c83dcc030e0c23d7e510af785f698bca9c48bc8":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["55cfe5c9a36a6278252026854d756ea2f27a248d"],"45b06c3ff8a4d9d3d751dd311e51c59303c2719c":["18359c8e12d55f66c27cfe7babe86283f06a6aa5"],"41ce0ce6485d29a241c4ca4b6179d14df6a66bae":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"a6f07227e65a4e198419b5c9ea3a60ca99d51fd4":["45b06c3ff8a4d9d3d751dd311e51c59303c2719c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ddc5fbfd4c64963aba52713a4496522540294d69"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["41ce0ce6485d29a241c4ca4b6179d14df6a66bae"]},"commit2Childs":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["4c83dcc030e0c23d7e510af785f698bca9c48bc8"],"18359c8e12d55f66c27cfe7babe86283f06a6aa5":["45b06c3ff8a4d9d3d751dd311e51c59303c2719c"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["41ce0ce6485d29a241c4ca4b6179d14df6a66bae"],"55cfe5c9a36a6278252026854d756ea2f27a248d":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"ddc5fbfd4c64963aba52713a4496522540294d69":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ba1116b3450a9c1642c89445d131b37344055245":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"4c83dcc030e0c23d7e510af785f698bca9c48bc8":["18359c8e12d55f66c27cfe7babe86283f06a6aa5"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["ba1116b3450a9c1642c89445d131b37344055245"],"45b06c3ff8a4d9d3d751dd311e51c59303c2719c":["a6f07227e65a4e198419b5c9ea3a60ca99d51fd4"],"a6f07227e65a4e198419b5c9ea3a60ca99d51fd4":["55cfe5c9a36a6278252026854d756ea2f27a248d"],"41ce0ce6485d29a241c4ca4b6179d14df6a66bae":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["ddc5fbfd4c64963aba52713a4496522540294d69"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}