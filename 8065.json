{"path":"lucene/contrib/queries/src/test/org/apache/lucene/search/TestSlowCollationMethods#beforeClass().mjava","commits":[{"id":"3e492fb0f2bb0b4b47208286f9331ff55963c656","date":1298870150,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/TestSlowCollationMethods#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final Locale locale = LuceneTestCase.randomLocale(random);\n    collator = Collator.getInstance(locale);\n    collator.setStrength(Collator.IDENTICAL);\n    collator.setDecomposition(Collator.NO_DECOMPOSITION);\n\n    numDocs = 1000 * RANDOM_MULTIPLIER;\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String value = _TestUtil.randomUnicodeString(random);\n      Field field = newField(\"field\", value, Field.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS);\n      doc.add(field);\n      iw.addDocument(doc);\n    }\n    reader = iw.getReader();\n    iw.close();\n\n    // TODO: we should be able to use newSearcher, but custom sorts are broken if IS has an executorservice\n    // see LUCENE-2941\n    //searcher = newSearcher(reader);\n    searcher = new IndexSearcher(reader); \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d868f38e751225153684493f6a89d784835297bd"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d868f38e751225153684493f6a89d784835297bd","date":1299017203,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/TestSlowCollationMethods#beforeClass().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/TestSlowCollationMethods#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final Locale locale = LuceneTestCase.randomLocale(random);\n    collator = Collator.getInstance(locale);\n    collator.setStrength(Collator.IDENTICAL);\n    collator.setDecomposition(Collator.NO_DECOMPOSITION);\n\n    numDocs = 1000 * RANDOM_MULTIPLIER;\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String value = _TestUtil.randomUnicodeString(random);\n      Field field = newField(\"field\", value, Field.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS);\n      doc.add(field);\n      iw.addDocument(doc);\n    }\n    reader = iw.getReader();\n    iw.close();\n\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final Locale locale = LuceneTestCase.randomLocale(random);\n    collator = Collator.getInstance(locale);\n    collator.setStrength(Collator.IDENTICAL);\n    collator.setDecomposition(Collator.NO_DECOMPOSITION);\n\n    numDocs = 1000 * RANDOM_MULTIPLIER;\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String value = _TestUtil.randomUnicodeString(random);\n      Field field = newField(\"field\", value, Field.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS);\n      doc.add(field);\n      iw.addDocument(doc);\n    }\n    reader = iw.getReader();\n    iw.close();\n\n    // TODO: we should be able to use newSearcher, but custom sorts are broken if IS has an executorservice\n    // see LUCENE-2941\n    //searcher = newSearcher(reader);\n    searcher = new IndexSearcher(reader); \n  }\n\n","bugFix":["3e492fb0f2bb0b4b47208286f9331ff55963c656"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/TestSlowCollationMethods#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final Locale locale = LuceneTestCase.randomLocale(random);\n    collator = Collator.getInstance(locale);\n    collator.setStrength(Collator.IDENTICAL);\n    collator.setDecomposition(Collator.NO_DECOMPOSITION);\n\n    numDocs = 1000 * RANDOM_MULTIPLIER;\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String value = _TestUtil.randomUnicodeString(random);\n      Field field = newField(\"field\", value, Field.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS);\n      doc.add(field);\n      iw.addDocument(doc);\n    }\n    reader = iw.getReader();\n    iw.close();\n\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/TestSlowCollationMethods#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final Locale locale = LuceneTestCase.randomLocale(random);\n    collator = Collator.getInstance(locale);\n    collator.setStrength(Collator.IDENTICAL);\n    collator.setDecomposition(Collator.NO_DECOMPOSITION);\n\n    numDocs = 1000 * RANDOM_MULTIPLIER;\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String value = _TestUtil.randomUnicodeString(random);\n      Field field = newField(\"field\", value, Field.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS);\n      doc.add(field);\n      iw.addDocument(doc);\n    }\n    reader = iw.getReader();\n    iw.close();\n\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1339b30c5298a1bbc583b1538dafe2dfe001c9c7","date":1309278655,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/TestSlowCollationMethods#beforeClass().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/TestSlowCollationMethods#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final Locale locale = LuceneTestCase.randomLocale(random);\n    collator = Collator.getInstance(locale);\n    collator.setStrength(Collator.IDENTICAL);\n    collator.setDecomposition(Collator.NO_DECOMPOSITION);\n\n    numDocs = 1000 * RANDOM_MULTIPLIER;\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String value = _TestUtil.randomUnicodeString(random);\n      Field field = newField(\"field\", value, Field.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS);\n      doc.add(field);\n      iw.addDocument(doc);\n    }\n    splitDoc = _TestUtil.randomUnicodeString(random);\n    reader = iw.getReader();\n    iw.close();\n\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final Locale locale = LuceneTestCase.randomLocale(random);\n    collator = Collator.getInstance(locale);\n    collator.setStrength(Collator.IDENTICAL);\n    collator.setDecomposition(Collator.NO_DECOMPOSITION);\n\n    numDocs = 1000 * RANDOM_MULTIPLIER;\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String value = _TestUtil.randomUnicodeString(random);\n      Field field = newField(\"field\", value, Field.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS);\n      doc.add(field);\n      iw.addDocument(doc);\n    }\n    reader = iw.getReader();\n    iw.close();\n\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/TestSlowCollationMethods#beforeClass().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/TestSlowCollationMethods#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final Locale locale = LuceneTestCase.randomLocale(random);\n    collator = Collator.getInstance(locale);\n    collator.setStrength(Collator.IDENTICAL);\n    collator.setDecomposition(Collator.NO_DECOMPOSITION);\n\n    numDocs = 1000 * RANDOM_MULTIPLIER;\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String value = _TestUtil.randomUnicodeString(random);\n      Field field = newField(\"field\", value, Field.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS);\n      doc.add(field);\n      iw.addDocument(doc);\n    }\n    splitDoc = _TestUtil.randomUnicodeString(random);\n    reader = iw.getReader();\n    iw.close();\n\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final Locale locale = LuceneTestCase.randomLocale(random);\n    collator = Collator.getInstance(locale);\n    collator.setStrength(Collator.IDENTICAL);\n    collator.setDecomposition(Collator.NO_DECOMPOSITION);\n\n    numDocs = 1000 * RANDOM_MULTIPLIER;\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String value = _TestUtil.randomUnicodeString(random);\n      Field field = newField(\"field\", value, Field.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS);\n      doc.add(field);\n      iw.addDocument(doc);\n    }\n    reader = iw.getReader();\n    iw.close();\n\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/TestSlowCollationMethods#beforeClass().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/TestSlowCollationMethods#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final Locale locale = LuceneTestCase.randomLocale(random);\n    collator = Collator.getInstance(locale);\n    collator.setStrength(Collator.IDENTICAL);\n    collator.setDecomposition(Collator.NO_DECOMPOSITION);\n\n    numDocs = 1000 * RANDOM_MULTIPLIER;\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String value = _TestUtil.randomUnicodeString(random);\n      Field field = newField(\"field\", value, Field.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS);\n      doc.add(field);\n      iw.addDocument(doc);\n    }\n    splitDoc = _TestUtil.randomUnicodeString(random);\n    reader = iw.getReader();\n    iw.close();\n\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final Locale locale = LuceneTestCase.randomLocale(random);\n    collator = Collator.getInstance(locale);\n    collator.setStrength(Collator.IDENTICAL);\n    collator.setDecomposition(Collator.NO_DECOMPOSITION);\n\n    numDocs = 1000 * RANDOM_MULTIPLIER;\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String value = _TestUtil.randomUnicodeString(random);\n      Field field = newField(\"field\", value, Field.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS);\n      doc.add(field);\n      iw.addDocument(doc);\n    }\n    reader = iw.getReader();\n    iw.close();\n\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9fdc0777b84633cc8cfa8995ff5b0d411e4515b","date":1313816278,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/contrib/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowCollationMethods#beforeClass().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/TestSlowCollationMethods#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final Locale locale = LuceneTestCase.randomLocale(random);\n    collator = Collator.getInstance(locale);\n    collator.setStrength(Collator.IDENTICAL);\n    collator.setDecomposition(Collator.NO_DECOMPOSITION);\n\n    numDocs = 1000 * RANDOM_MULTIPLIER;\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String value = _TestUtil.randomUnicodeString(random);\n      Field field = newField(\"field\", value, Field.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS);\n      doc.add(field);\n      iw.addDocument(doc);\n    }\n    splitDoc = _TestUtil.randomUnicodeString(random);\n    reader = iw.getReader();\n    iw.close();\n\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final Locale locale = LuceneTestCase.randomLocale(random);\n    collator = Collator.getInstance(locale);\n    collator.setStrength(Collator.IDENTICAL);\n    collator.setDecomposition(Collator.NO_DECOMPOSITION);\n\n    numDocs = 1000 * RANDOM_MULTIPLIER;\n    dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String value = _TestUtil.randomUnicodeString(random);\n      Field field = newField(\"field\", value, Field.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS);\n      doc.add(field);\n      iw.addDocument(doc);\n    }\n    splitDoc = _TestUtil.randomUnicodeString(random);\n    reader = iw.getReader();\n    iw.close();\n\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f9fdc0777b84633cc8cfa8995ff5b0d411e4515b":["1339b30c5298a1bbc583b1538dafe2dfe001c9c7"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d868f38e751225153684493f6a89d784835297bd"],"1339b30c5298a1bbc583b1538dafe2dfe001c9c7":["d868f38e751225153684493f6a89d784835297bd"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d868f38e751225153684493f6a89d784835297bd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3e492fb0f2bb0b4b47208286f9331ff55963c656":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2553b00f699380c64959ccb27991289aae87be2e":["d868f38e751225153684493f6a89d784835297bd","1339b30c5298a1bbc583b1538dafe2dfe001c9c7"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["d868f38e751225153684493f6a89d784835297bd","1339b30c5298a1bbc583b1538dafe2dfe001c9c7"],"d868f38e751225153684493f6a89d784835297bd":["3e492fb0f2bb0b4b47208286f9331ff55963c656"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f9fdc0777b84633cc8cfa8995ff5b0d411e4515b"]},"commit2Childs":{"f9fdc0777b84633cc8cfa8995ff5b0d411e4515b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"1339b30c5298a1bbc583b1538dafe2dfe001c9c7":["f9fdc0777b84633cc8cfa8995ff5b0d411e4515b","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","3e492fb0f2bb0b4b47208286f9331ff55963c656"],"3e492fb0f2bb0b4b47208286f9331ff55963c656":["d868f38e751225153684493f6a89d784835297bd"],"2553b00f699380c64959ccb27991289aae87be2e":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"d868f38e751225153684493f6a89d784835297bd":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","1339b30c5298a1bbc583b1538dafe2dfe001c9c7","d619839baa8ce5503e496b94a9e42ad6f079293f","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}