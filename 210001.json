{"path":"solr/core/src/java/org/apache/solr/cloud/api/collections/CreateAliasCmd#callCreateRoutedAlias(ZkNodeProps,String,ZkStateReader,ClusterState,CloudConfig).mjava","commits":[{"id":"c526352db87264a72a7a9ad68c1b769b81e54305","date":1598780188,"type":1,"author":"Ilan Ginzburg","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/CreateAliasCmd#callCreateRoutedAlias(ZkNodeProps,String,ZkStateReader,ClusterState,CloudConfig).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/api/collections/CreateAliasCmd#callCreateRoutedAlias(ZkNodeProps,String,ZkStateReader,ClusterState).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void callCreateRoutedAlias(ZkNodeProps message, String aliasName, ZkStateReader zkStateReader, ClusterState state, CloudConfig cloudConfig) throws Exception {\n    // Validate we got a basic minimum\n    if (!message.getProperties().keySet().containsAll(RoutedAlias.MINIMAL_REQUIRED_PARAMS)) {\n      throw new SolrException(BAD_REQUEST, \"A routed alias requires these params: \" + RoutedAlias.MINIMAL_REQUIRED_PARAMS\n      + \" plus some create-collection prefixed ones.\");\n    }\n\n    // convert values to strings\n    Map<String, String> props = new LinkedHashMap<>();\n    message.getProperties().forEach((key, value) -> props.put(key, String.valueOf(value)));\n\n    // Further validation happens here\n    RoutedAlias routedAlias = RoutedAlias.fromProps(aliasName, props);\n    if (routedAlias == null) {\n      // should never happen here, but keep static analysis in IDE's happy...\n      throw new SolrException(SERVER_ERROR,\"Tried to create a routed alias with no type!\");\n    }\n\n    if (!props.keySet().containsAll(routedAlias.getRequiredParams())) {\n      throw new SolrException(BAD_REQUEST, \"Not all required params were supplied. Missing params: \" +\n          StrUtils.join(Sets.difference(routedAlias.getRequiredParams(), props.keySet()), ','));\n    }\n\n    // Create the first collection.\n    String initialColl = routedAlias.computeInitialCollectionName();\n      ensureAliasCollection(aliasName, zkStateReader, state, cloudConfig, routedAlias.getAliasMetadata(), initialColl);\n      // Create/update the alias\n      zkStateReader.aliasesManager.applyModificationAndExportToZk(aliases -> aliases\n          .cloneWithCollectionAlias(aliasName, initialColl)\n          .cloneWithCollectionAliasProperties(aliasName, routedAlias.getAliasMetadata()));\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void callCreateRoutedAlias(ZkNodeProps message, String aliasName, ZkStateReader zkStateReader, ClusterState state) throws Exception {\n    // Validate we got a basic minimum\n    if (!message.getProperties().keySet().containsAll(RoutedAlias.MINIMAL_REQUIRED_PARAMS)) {\n      throw new SolrException(BAD_REQUEST, \"A routed alias requires these params: \" + RoutedAlias.MINIMAL_REQUIRED_PARAMS\n      + \" plus some create-collection prefixed ones.\");\n    }\n\n    // convert values to strings\n    Map<String, String> props = new LinkedHashMap<>();\n    message.getProperties().forEach((key, value) -> props.put(key, String.valueOf(value)));\n\n    // Further validation happens here\n    RoutedAlias routedAlias = RoutedAlias.fromProps(aliasName, props);\n    if (routedAlias == null) {\n      // should never happen here, but keep static analysis in IDE's happy...\n      throw new SolrException(SERVER_ERROR,\"Tried to create a routed alias with no type!\");\n    }\n\n    if (!props.keySet().containsAll(routedAlias.getRequiredParams())) {\n      throw new SolrException(BAD_REQUEST, \"Not all required params were supplied. Missing params: \" +\n          StrUtils.join(Sets.difference(routedAlias.getRequiredParams(), props.keySet()), ','));\n    }\n\n    // Create the first collection.\n    String initialColl = routedAlias.computeInitialCollectionName();\n      ensureAliasCollection(aliasName, zkStateReader, state, routedAlias.getAliasMetadata(), initialColl);\n      // Create/update the alias\n      zkStateReader.aliasesManager.applyModificationAndExportToZk(aliases -> aliases\n          .cloneWithCollectionAlias(aliasName, initialColl)\n          .cloneWithCollectionAliasProperties(aliasName, routedAlias.getAliasMetadata()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7b17e79a71117668ecbf8d3417c876e41396565","date":1598973672,"type":5,"author":"Ilan Ginzburg","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/CreateAliasCmd#callCreateRoutedAlias(ZkNodeProps,String,ZkStateReader,ClusterState).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/api/collections/CreateAliasCmd#callCreateRoutedAlias(ZkNodeProps,String,ZkStateReader,ClusterState,CloudConfig).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void callCreateRoutedAlias(ZkNodeProps message, String aliasName, ZkStateReader zkStateReader, ClusterState state) throws Exception {\n    // Validate we got a basic minimum\n    if (!message.getProperties().keySet().containsAll(RoutedAlias.MINIMAL_REQUIRED_PARAMS)) {\n      throw new SolrException(BAD_REQUEST, \"A routed alias requires these params: \" + RoutedAlias.MINIMAL_REQUIRED_PARAMS\n      + \" plus some create-collection prefixed ones.\");\n    }\n\n    // convert values to strings\n    Map<String, String> props = new LinkedHashMap<>();\n    message.getProperties().forEach((key, value) -> props.put(key, String.valueOf(value)));\n\n    // Further validation happens here\n    RoutedAlias routedAlias = RoutedAlias.fromProps(aliasName, props);\n    if (routedAlias == null) {\n      // should never happen here, but keep static analysis in IDE's happy...\n      throw new SolrException(SERVER_ERROR,\"Tried to create a routed alias with no type!\");\n    }\n\n    if (!props.keySet().containsAll(routedAlias.getRequiredParams())) {\n      throw new SolrException(BAD_REQUEST, \"Not all required params were supplied. Missing params: \" +\n          StrUtils.join(Sets.difference(routedAlias.getRequiredParams(), props.keySet()), ','));\n    }\n\n    // Create the first collection.\n    String initialColl = routedAlias.computeInitialCollectionName();\n      ensureAliasCollection(aliasName, zkStateReader, state, routedAlias.getAliasMetadata(), initialColl);\n      // Create/update the alias\n      zkStateReader.aliasesManager.applyModificationAndExportToZk(aliases -> aliases\n          .cloneWithCollectionAlias(aliasName, initialColl)\n          .cloneWithCollectionAliasProperties(aliasName, routedAlias.getAliasMetadata()));\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void callCreateRoutedAlias(ZkNodeProps message, String aliasName, ZkStateReader zkStateReader, ClusterState state, CloudConfig cloudConfig) throws Exception {\n    // Validate we got a basic minimum\n    if (!message.getProperties().keySet().containsAll(RoutedAlias.MINIMAL_REQUIRED_PARAMS)) {\n      throw new SolrException(BAD_REQUEST, \"A routed alias requires these params: \" + RoutedAlias.MINIMAL_REQUIRED_PARAMS\n      + \" plus some create-collection prefixed ones.\");\n    }\n\n    // convert values to strings\n    Map<String, String> props = new LinkedHashMap<>();\n    message.getProperties().forEach((key, value) -> props.put(key, String.valueOf(value)));\n\n    // Further validation happens here\n    RoutedAlias routedAlias = RoutedAlias.fromProps(aliasName, props);\n    if (routedAlias == null) {\n      // should never happen here, but keep static analysis in IDE's happy...\n      throw new SolrException(SERVER_ERROR,\"Tried to create a routed alias with no type!\");\n    }\n\n    if (!props.keySet().containsAll(routedAlias.getRequiredParams())) {\n      throw new SolrException(BAD_REQUEST, \"Not all required params were supplied. Missing params: \" +\n          StrUtils.join(Sets.difference(routedAlias.getRequiredParams(), props.keySet()), ','));\n    }\n\n    // Create the first collection.\n    String initialColl = routedAlias.computeInitialCollectionName();\n      ensureAliasCollection(aliasName, zkStateReader, state, cloudConfig, routedAlias.getAliasMetadata(), initialColl);\n      // Create/update the alias\n      zkStateReader.aliasesManager.applyModificationAndExportToZk(aliases -> aliases\n          .cloneWithCollectionAlias(aliasName, initialColl)\n          .cloneWithCollectionAliasProperties(aliasName, routedAlias.getAliasMetadata()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e7b17e79a71117668ecbf8d3417c876e41396565":["c526352db87264a72a7a9ad68c1b769b81e54305"],"c526352db87264a72a7a9ad68c1b769b81e54305":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e7b17e79a71117668ecbf8d3417c876e41396565"]},"commit2Childs":{"e7b17e79a71117668ecbf8d3417c876e41396565":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c526352db87264a72a7a9ad68c1b769b81e54305":["e7b17e79a71117668ecbf8d3417c876e41396565"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c526352db87264a72a7a9ad68c1b769b81e54305"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}