{"path":"src/java/org/apache/lucene/index/StoredFieldsWriterPerField#processFields(Fieldable[],int).mjava","commits":[{"id":"5350389bf83287111f7760b9e3db3af8e3648474","date":1216372812,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/StoredFieldsWriterPerField#processFields(Fieldable[],int).mjava","pathOld":"/dev/null","sourceNew":"  // Process all occurrences of a single field in one doc;\n  // count is 1 if a given field occurs only once in the\n  // Document, which is the \"typical\" case\n  public void processFields(Fieldable[] fields, int count) throws IOException {\n\n    final StoredFieldsWriter.PerDoc doc;\n    if (perThread.doc == null) {\n      doc = perThread.doc = perThread.storedFieldsWriter.getPerDoc();\n      doc.docID = docState.docID;\n      perThread.localFieldsWriter.setFieldsStream(doc.fdt);\n      assert doc.numStoredFields == 0: \"doc.numStoredFields=\" + doc.numStoredFields;\n      assert 0 == doc.fdt.length();\n      assert 0 == doc.fdt.getFilePointer();\n    } else {\n      doc = perThread.doc;\n      assert doc.docID == docState.docID: \"doc.docID=\" + doc.docID + \" docState.docID=\" + docState.docID;\n    }\n\n    for(int i=0;i<count;i++) {\n      final Fieldable field = fields[i];\n      if (field.isStored()) {\n        perThread.localFieldsWriter.writeField(fieldInfo, field);\n        assert docState.testPoint(\"StoredFieldsWriterPerField.processFields.writeField\");\n        doc.numStoredFields++;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99351c613f288821fa2b1fa505fe5cbab9ab0600","date":1247144008,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/index/StoredFieldsWriterPerField#processFields(Fieldable[],int).mjava","sourceNew":null,"sourceOld":"  // Process all occurrences of a single field in one doc;\n  // count is 1 if a given field occurs only once in the\n  // Document, which is the \"typical\" case\n  public void processFields(Fieldable[] fields, int count) throws IOException {\n\n    final StoredFieldsWriter.PerDoc doc;\n    if (perThread.doc == null) {\n      doc = perThread.doc = perThread.storedFieldsWriter.getPerDoc();\n      doc.docID = docState.docID;\n      perThread.localFieldsWriter.setFieldsStream(doc.fdt);\n      assert doc.numStoredFields == 0: \"doc.numStoredFields=\" + doc.numStoredFields;\n      assert 0 == doc.fdt.length();\n      assert 0 == doc.fdt.getFilePointer();\n    } else {\n      doc = perThread.doc;\n      assert doc.docID == docState.docID: \"doc.docID=\" + doc.docID + \" docState.docID=\" + docState.docID;\n    }\n\n    for(int i=0;i<count;i++) {\n      final Fieldable field = fields[i];\n      if (field.isStored()) {\n        perThread.localFieldsWriter.writeField(fieldInfo, field);\n        assert docState.testPoint(\"StoredFieldsWriterPerField.processFields.writeField\");\n        doc.numStoredFields++;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"99351c613f288821fa2b1fa505fe5cbab9ab0600":["5350389bf83287111f7760b9e3db3af8e3648474"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5350389bf83287111f7760b9e3db3af8e3648474":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["99351c613f288821fa2b1fa505fe5cbab9ab0600"]},"commit2Childs":{"99351c613f288821fa2b1fa505fe5cbab9ab0600":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5350389bf83287111f7760b9e3db3af8e3648474"],"5350389bf83287111f7760b9e3db3af8e3648474":["99351c613f288821fa2b1fa505fe5cbab9ab0600"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}