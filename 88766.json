{"path":"src/java/org/apache/solr/handler/BinaryUpdateRequestHandler#parseAndLoadDocs(SolrQueryRequest,SolrQueryResponse,InputStream,UpdateRequestProcessor).mjava","commits":[{"id":"8d0c1d69778439d99fc635727129e99480e64f06","date":1232050859,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/BinaryUpdateRequestHandler#parseAndLoadDocs(SolrQueryRequest,SolrQueryResponse,InputStream,UpdateRequestProcessor).mjava","pathOld":"/dev/null","sourceNew":"  private void parseAndLoadDocs(SolrQueryRequest req, SolrQueryResponse rsp, InputStream stream,\n                                final UpdateRequestProcessor processor) throws IOException {\n    UpdateRequest update = null;\n    update = new JavaBinUpdateRequestCodec().unmarshal(stream,\n            new JavaBinUpdateRequestCodec.StreamingDocumentHandler() {\n              private AddUpdateCommand addCmd = null;\n\n              public void document(SolrInputDocument document, UpdateRequest updateRequest) {\n                if (addCmd == null) {\n                  addCmd = getAddCommand(updateRequest.getParams());\n                }\n                addCmd.solrDoc = document;\n                try {\n                  processor.processAdd(addCmd);\n                  addCmd.clear();\n                } catch (IOException e) {\n                  throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"ERROR adding document \" + document);\n                }\n              }\n            });\n    if (update.getDeleteById() != null) {\n      delete(update.getDeleteById(), processor, true);\n    }\n    if (update.getDeleteQuery() != null) {\n      delete(update.getDeleteQuery(), processor, false);\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/BinaryUpdateRequestHandler#parseAndLoadDocs(SolrQueryRequest,SolrQueryResponse,InputStream,UpdateRequestProcessor).mjava","pathOld":"src/java/org/apache/solr/handler/BinaryUpdateRequestHandler#parseAndLoadDocs(SolrQueryRequest,SolrQueryResponse,InputStream,UpdateRequestProcessor).mjava","sourceNew":"  private void parseAndLoadDocs(SolrQueryRequest req, SolrQueryResponse rsp, InputStream stream,\n                                final UpdateRequestProcessor processor) throws IOException {\n    UpdateRequest update = null;\n    update = new JavaBinUpdateRequestCodec().unmarshal(stream,\n            new JavaBinUpdateRequestCodec.StreamingDocumentHandler() {\n              private AddUpdateCommand addCmd = null;\n\n              public void document(SolrInputDocument document, UpdateRequest updateRequest) {\n                if (addCmd == null) {\n                  addCmd = getAddCommand(updateRequest.getParams());\n                }\n                addCmd.solrDoc = document;\n                try {\n                  processor.processAdd(addCmd);\n                  addCmd.clear();\n                } catch (IOException e) {\n                  throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"ERROR adding document \" + document);\n                }\n              }\n            });\n    if (update.getDeleteById() != null) {\n      delete(update.getDeleteById(), processor, true);\n    }\n    if (update.getDeleteQuery() != null) {\n      delete(update.getDeleteQuery(), processor, false);\n    }\n\n  }\n\n","sourceOld":"  private void parseAndLoadDocs(SolrQueryRequest req, SolrQueryResponse rsp, InputStream stream,\n                                final UpdateRequestProcessor processor) throws IOException {\n    UpdateRequest update = null;\n    update = new JavaBinUpdateRequestCodec().unmarshal(stream,\n            new JavaBinUpdateRequestCodec.StreamingDocumentHandler() {\n              private AddUpdateCommand addCmd = null;\n\n              public void document(SolrInputDocument document, UpdateRequest updateRequest) {\n                if (addCmd == null) {\n                  addCmd = getAddCommand(updateRequest.getParams());\n                }\n                addCmd.solrDoc = document;\n                try {\n                  processor.processAdd(addCmd);\n                  addCmd.clear();\n                } catch (IOException e) {\n                  throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"ERROR adding document \" + document);\n                }\n              }\n            });\n    if (update.getDeleteById() != null) {\n      delete(update.getDeleteById(), processor, true);\n    }\n    if (update.getDeleteQuery() != null) {\n      delete(update.getDeleteQuery(), processor, false);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8d0c1d69778439d99fc635727129e99480e64f06":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["8d0c1d69778439d99fc635727129e99480e64f06"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"8d0c1d69778439d99fc635727129e99480e64f06":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["8d0c1d69778439d99fc635727129e99480e64f06"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}