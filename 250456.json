{"path":"solr/core/src/java/org/apache/solr/core/CoreDescriptor#CoreDescriptor(CoreContainer,String,String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreDescriptor#CoreDescriptor(CoreContainer,String,String).mjava","pathOld":"solr/src/java/org/apache/solr/core/CoreDescriptor#CoreDescriptor(CoreContainer,String,String).mjava","sourceNew":"  public CoreDescriptor(CoreContainer coreContainer, String name, String instanceDir) {\n    this.coreContainer = coreContainer;\n    this.name = name;\n    \n    if(coreContainer.getZkController() != null) {\n      this.cloudDesc = new CloudDescriptor();\n      // cloud collection defaults to core name\n      cloudDesc.setCollectionName(name == \"\" ? coreContainer.getDefaultCoreName() : name);\n      this.cloudDesc.setShardId(coreContainer.getZkController().getNodeName() + \"_\" + name);\n    }\n    \n    if (name == null) {\n      throw new RuntimeException(\"Core needs a name\");\n    }\n    if (instanceDir == null) {\n      throw new NullPointerException(\"Missing required \\'instanceDir\\'\");\n    }\n    instanceDir = SolrResourceLoader.normalizeDir(instanceDir);\n    this.instanceDir = instanceDir;\n    this.configName = getDefaultConfigName();\n    this.schemaName = getDefaultSchemaName();\n  }\n\n","sourceOld":"  public CoreDescriptor(CoreContainer coreContainer, String name, String instanceDir) {\n    this.coreContainer = coreContainer;\n    this.name = name;\n    \n    if(coreContainer.getZkController() != null) {\n      this.cloudDesc = new CloudDescriptor();\n      // cloud collection defaults to core name\n      cloudDesc.setCollectionName(name == \"\" ? coreContainer.getDefaultCoreName() : name);\n      this.cloudDesc.setShardId(coreContainer.getZkController().getNodeName() + \"_\" + name);\n    }\n    \n    if (name == null) {\n      throw new RuntimeException(\"Core needs a name\");\n    }\n    if (instanceDir == null) {\n      throw new NullPointerException(\"Missing required \\'instanceDir\\'\");\n    }\n    instanceDir = SolrResourceLoader.normalizeDir(instanceDir);\n    this.instanceDir = instanceDir;\n    this.configName = getDefaultConfigName();\n    this.schemaName = getDefaultSchemaName();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreDescriptor#CoreDescriptor(CoreContainer,String,String).mjava","pathOld":"solr/src/java/org/apache/solr/core/CoreDescriptor#CoreDescriptor(CoreContainer,String,String).mjava","sourceNew":"  public CoreDescriptor(CoreContainer coreContainer, String name, String instanceDir) {\n    this.coreContainer = coreContainer;\n    this.name = name;\n    \n    if(coreContainer.getZkController() != null) {\n      this.cloudDesc = new CloudDescriptor();\n      // cloud collection defaults to core name\n      cloudDesc.setCollectionName(name == \"\" ? coreContainer.getDefaultCoreName() : name);\n      this.cloudDesc.setShardId(coreContainer.getZkController().getNodeName() + \"_\" + name);\n    }\n    \n    if (name == null) {\n      throw new RuntimeException(\"Core needs a name\");\n    }\n    if (instanceDir == null) {\n      throw new NullPointerException(\"Missing required \\'instanceDir\\'\");\n    }\n    instanceDir = SolrResourceLoader.normalizeDir(instanceDir);\n    this.instanceDir = instanceDir;\n    this.configName = getDefaultConfigName();\n    this.schemaName = getDefaultSchemaName();\n  }\n\n","sourceOld":"  public CoreDescriptor(CoreContainer coreContainer, String name, String instanceDir) {\n    this.coreContainer = coreContainer;\n    this.name = name;\n    \n    if(coreContainer.getZkController() != null) {\n      this.cloudDesc = new CloudDescriptor();\n      // cloud collection defaults to core name\n      cloudDesc.setCollectionName(name == \"\" ? coreContainer.getDefaultCoreName() : name);\n      this.cloudDesc.setShardId(coreContainer.getZkController().getNodeName() + \"_\" + name);\n    }\n    \n    if (name == null) {\n      throw new RuntimeException(\"Core needs a name\");\n    }\n    if (instanceDir == null) {\n      throw new NullPointerException(\"Missing required \\'instanceDir\\'\");\n    }\n    instanceDir = SolrResourceLoader.normalizeDir(instanceDir);\n    this.instanceDir = instanceDir;\n    this.configName = getDefaultConfigName();\n    this.schemaName = getDefaultSchemaName();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreDescriptor#CoreDescriptor(CoreContainer,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreDescriptor#CoreDescriptor(CoreContainer,String,String).mjava","sourceNew":"  public CoreDescriptor(CoreContainer coreContainer, String name, String instanceDir) {\n    this.coreContainer = coreContainer;\n    this.name = name;\n    \n    if(coreContainer.getZkController() != null) {\n      this.cloudDesc = new CloudDescriptor();\n      // cloud collection defaults to core name\n      cloudDesc.setCollectionName(name.isEmpty() ? coreContainer.getDefaultCoreName() : name);\n      this.cloudDesc.setShardId(coreContainer.getZkController().getNodeName() + \"_\" + name);\n    }\n    \n    if (name == null) {\n      throw new RuntimeException(\"Core needs a name\");\n    }\n    if (instanceDir == null) {\n      throw new NullPointerException(\"Missing required \\'instanceDir\\'\");\n    }\n    instanceDir = SolrResourceLoader.normalizeDir(instanceDir);\n    this.instanceDir = instanceDir;\n    this.configName = getDefaultConfigName();\n    this.schemaName = getDefaultSchemaName();\n  }\n\n","sourceOld":"  public CoreDescriptor(CoreContainer coreContainer, String name, String instanceDir) {\n    this.coreContainer = coreContainer;\n    this.name = name;\n    \n    if(coreContainer.getZkController() != null) {\n      this.cloudDesc = new CloudDescriptor();\n      // cloud collection defaults to core name\n      cloudDesc.setCollectionName(name == \"\" ? coreContainer.getDefaultCoreName() : name);\n      this.cloudDesc.setShardId(coreContainer.getZkController().getNodeName() + \"_\" + name);\n    }\n    \n    if (name == null) {\n      throw new RuntimeException(\"Core needs a name\");\n    }\n    if (instanceDir == null) {\n      throw new NullPointerException(\"Missing required \\'instanceDir\\'\");\n    }\n    instanceDir = SolrResourceLoader.normalizeDir(instanceDir);\n    this.instanceDir = instanceDir;\n    this.configName = getDefaultConfigName();\n    this.schemaName = getDefaultSchemaName();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreDescriptor#CoreDescriptor(CoreContainer,String,String).mjava","pathOld":"solr/src/java/org/apache/solr/core/CoreDescriptor#CoreDescriptor(CoreContainer,String,String).mjava","sourceNew":"  public CoreDescriptor(CoreContainer coreContainer, String name, String instanceDir) {\n    this.coreContainer = coreContainer;\n    this.name = name;\n    \n    if(coreContainer.getZkController() != null) {\n      this.cloudDesc = new CloudDescriptor();\n      // cloud collection defaults to core name\n      cloudDesc.setCollectionName(name.isEmpty() ? coreContainer.getDefaultCoreName() : name);\n      this.cloudDesc.setShardId(coreContainer.getZkController().getNodeName() + \"_\" + name);\n    }\n    \n    if (name == null) {\n      throw new RuntimeException(\"Core needs a name\");\n    }\n    if (instanceDir == null) {\n      throw new NullPointerException(\"Missing required \\'instanceDir\\'\");\n    }\n    instanceDir = SolrResourceLoader.normalizeDir(instanceDir);\n    this.instanceDir = instanceDir;\n    this.configName = getDefaultConfigName();\n    this.schemaName = getDefaultSchemaName();\n  }\n\n","sourceOld":"  public CoreDescriptor(CoreContainer coreContainer, String name, String instanceDir) {\n    this.coreContainer = coreContainer;\n    this.name = name;\n    \n    if(coreContainer.getZkController() != null) {\n      this.cloudDesc = new CloudDescriptor();\n      // cloud collection defaults to core name\n      cloudDesc.setCollectionName(name.isEmpty() ? coreContainer.getDefaultCoreName() : name);\n      this.cloudDesc.setShardId(coreContainer.getZkController().getNodeName() + \"_\" + name);\n    }\n    \n    if (name == null) {\n      throw new RuntimeException(\"Core needs a name\");\n    }\n    if (instanceDir == null) {\n      throw new NullPointerException(\"Missing required \\'instanceDir\\'\");\n    }\n    instanceDir = SolrResourceLoader.normalizeDir(instanceDir);\n    this.instanceDir = instanceDir;\n    this.configName = getDefaultConfigName();\n    this.schemaName = getDefaultSchemaName();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreDescriptor#CoreDescriptor(CoreContainer,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreDescriptor#CoreDescriptor(CoreContainer,String,String).mjava","sourceNew":"  public CoreDescriptor(CoreContainer coreContainer, String name, String instanceDir) {\n    this.coreContainer = coreContainer;\n    this.name = name;\n    \n    if(coreContainer != null && coreContainer.getZkController() != null) {\n      this.cloudDesc = new CloudDescriptor();\n      // cloud collection defaults to core name\n      cloudDesc.setCollectionName(name.isEmpty() ? coreContainer.getDefaultCoreName() : name);\n    }\n    \n    if (name == null) {\n      throw new RuntimeException(\"Core needs a name\");\n    }\n    if (instanceDir == null) {\n      throw new NullPointerException(\"Missing required \\'instanceDir\\'\");\n    }\n    instanceDir = SolrResourceLoader.normalizeDir(instanceDir);\n    this.instanceDir = instanceDir;\n    this.configName = getDefaultConfigName();\n    this.schemaName = getDefaultSchemaName();\n  }\n\n","sourceOld":"  public CoreDescriptor(CoreContainer coreContainer, String name, String instanceDir) {\n    this.coreContainer = coreContainer;\n    this.name = name;\n    \n    if(coreContainer.getZkController() != null) {\n      this.cloudDesc = new CloudDescriptor();\n      // cloud collection defaults to core name\n      cloudDesc.setCollectionName(name.isEmpty() ? coreContainer.getDefaultCoreName() : name);\n      this.cloudDesc.setShardId(coreContainer.getZkController().getNodeName() + \"_\" + name);\n    }\n    \n    if (name == null) {\n      throw new RuntimeException(\"Core needs a name\");\n    }\n    if (instanceDir == null) {\n      throw new NullPointerException(\"Missing required \\'instanceDir\\'\");\n    }\n    instanceDir = SolrResourceLoader.normalizeDir(instanceDir);\n    this.instanceDir = instanceDir;\n    this.configName = getDefaultConfigName();\n    this.schemaName = getDefaultSchemaName();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreDescriptor#CoreDescriptor(CoreContainer,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreDescriptor#CoreDescriptor(CoreContainer,String,String).mjava","sourceNew":"  public CoreDescriptor(CoreContainer coreContainer, String name, String instanceDir) {\n    this.coreContainer = coreContainer;\n    this.name = name;\n    \n    if(coreContainer != null && coreContainer.getZkController() != null) {\n      this.cloudDesc = new CloudDescriptor();\n      // cloud collection defaults to core name\n      cloudDesc.setCollectionName(name.isEmpty() ? coreContainer.getDefaultCoreName() : name);\n    }\n    \n    if (name == null) {\n      throw new RuntimeException(\"Core needs a name\");\n    }\n    if (instanceDir == null) {\n      throw new NullPointerException(\"Missing required \\'instanceDir\\'\");\n    }\n    instanceDir = SolrResourceLoader.normalizeDir(instanceDir);\n    this.instanceDir = instanceDir;\n    this.configName = getDefaultConfigName();\n    this.schemaName = getDefaultSchemaName();\n  }\n\n","sourceOld":"  public CoreDescriptor(CoreContainer coreContainer, String name, String instanceDir) {\n    this.coreContainer = coreContainer;\n    this.name = name;\n    \n    if(coreContainer.getZkController() != null) {\n      this.cloudDesc = new CloudDescriptor();\n      // cloud collection defaults to core name\n      cloudDesc.setCollectionName(name.isEmpty() ? coreContainer.getDefaultCoreName() : name);\n      this.cloudDesc.setShardId(coreContainer.getZkController().getNodeName() + \"_\" + name);\n    }\n    \n    if (name == null) {\n      throw new RuntimeException(\"Core needs a name\");\n    }\n    if (instanceDir == null) {\n      throw new NullPointerException(\"Missing required \\'instanceDir\\'\");\n    }\n    instanceDir = SolrResourceLoader.normalizeDir(instanceDir);\n    this.instanceDir = instanceDir;\n    this.configName = getDefaultConfigName();\n    this.schemaName = getDefaultSchemaName();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreDescriptor#CoreDescriptor(CoreContainer,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreDescriptor#CoreDescriptor(CoreContainer,String,String).mjava","sourceNew":"  public CoreDescriptor(CoreContainer coreContainer, String name, String instanceDir) {\n    this.coreContainer = coreContainer;\n    this.name = name;\n    \n    if(coreContainer != null && coreContainer.getZkController() != null) {\n      this.cloudDesc = new CloudDescriptor();\n      // cloud collection defaults to core name\n      cloudDesc.setCollectionName(name.isEmpty() ? coreContainer.getDefaultCoreName() : name);\n    }\n    \n    if (name == null) {\n      throw new RuntimeException(\"Core needs a name\");\n    }\n    if (instanceDir == null) {\n      throw new NullPointerException(\"Missing required \\'instanceDir\\'\");\n    }\n    instanceDir = SolrResourceLoader.normalizeDir(instanceDir);\n    this.instanceDir = instanceDir;\n    this.configName = getDefaultConfigName();\n    this.schemaName = getDefaultSchemaName();\n  }\n\n","sourceOld":"  public CoreDescriptor(CoreContainer coreContainer, String name, String instanceDir) {\n    this.coreContainer = coreContainer;\n    this.name = name;\n    \n    if(coreContainer.getZkController() != null) {\n      this.cloudDesc = new CloudDescriptor();\n      // cloud collection defaults to core name\n      cloudDesc.setCollectionName(name.isEmpty() ? coreContainer.getDefaultCoreName() : name);\n      this.cloudDesc.setShardId(coreContainer.getZkController().getNodeName() + \"_\" + name);\n    }\n    \n    if (name == null) {\n      throw new RuntimeException(\"Core needs a name\");\n    }\n    if (instanceDir == null) {\n      throw new NullPointerException(\"Missing required \\'instanceDir\\'\");\n    }\n    instanceDir = SolrResourceLoader.normalizeDir(instanceDir);\n    this.instanceDir = instanceDir;\n    this.configName = getDefaultConfigName();\n    this.schemaName = getDefaultSchemaName();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46e2d37c19555349716a5f663bfa521d4a3085d6","date":1329097151,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreDescriptor#CoreDescriptor(CoreContainer,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreDescriptor#CoreDescriptor(CoreContainer,String,String).mjava","sourceNew":"  public CoreDescriptor(CoreContainer coreContainer, String name, String instanceDir) {\n    this.coreContainer = coreContainer;\n    this.name = name;\n    \n    if (name == null) {\n      throw new RuntimeException(\"Core needs a name\");\n    }\n    \n    if(coreContainer != null && coreContainer.getZkController() != null) {\n      this.cloudDesc = new CloudDescriptor();\n      // cloud collection defaults to core name\n      cloudDesc.setCollectionName(name.isEmpty() ? coreContainer.getDefaultCoreName() : name);\n    }\n\n    if (instanceDir == null) {\n      throw new NullPointerException(\"Missing required \\'instanceDir\\'\");\n    }\n    instanceDir = SolrResourceLoader.normalizeDir(instanceDir);\n    this.instanceDir = instanceDir;\n    this.configName = getDefaultConfigName();\n    this.schemaName = getDefaultSchemaName();\n  }\n\n","sourceOld":"  public CoreDescriptor(CoreContainer coreContainer, String name, String instanceDir) {\n    this.coreContainer = coreContainer;\n    this.name = name;\n    \n    if(coreContainer != null && coreContainer.getZkController() != null) {\n      this.cloudDesc = new CloudDescriptor();\n      // cloud collection defaults to core name\n      cloudDesc.setCollectionName(name.isEmpty() ? coreContainer.getDefaultCoreName() : name);\n    }\n    \n    if (name == null) {\n      throw new RuntimeException(\"Core needs a name\");\n    }\n    if (instanceDir == null) {\n      throw new NullPointerException(\"Missing required \\'instanceDir\\'\");\n    }\n    instanceDir = SolrResourceLoader.normalizeDir(instanceDir);\n    this.instanceDir = instanceDir;\n    this.configName = getDefaultConfigName();\n    this.schemaName = getDefaultSchemaName();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e635cfcf66f9e8b914c54c24d337820e475f44a5","date":1335303739,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreDescriptor#CoreDescriptor(CoreContainer,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreDescriptor#CoreDescriptor(CoreContainer,String,String).mjava","sourceNew":"  public CoreDescriptor(CoreContainer coreContainer, String name, String instanceDir) {\n    this.coreContainer = coreContainer;\n    this.name = name;\n    \n    if (name == null) {\n      throw new RuntimeException(\"Core needs a name\");\n    }\n    \n    if(coreContainer != null && coreContainer.getZkController() != null) {\n      this.cloudDesc = new CloudDescriptor();\n      // cloud collection defaults to core name\n      cloudDesc.setCollectionName(name);\n    }\n\n    if (instanceDir == null) {\n      throw new NullPointerException(\"Missing required \\'instanceDir\\'\");\n    }\n    instanceDir = SolrResourceLoader.normalizeDir(instanceDir);\n    this.instanceDir = instanceDir;\n    this.configName = getDefaultConfigName();\n    this.schemaName = getDefaultSchemaName();\n  }\n\n","sourceOld":"  public CoreDescriptor(CoreContainer coreContainer, String name, String instanceDir) {\n    this.coreContainer = coreContainer;\n    this.name = name;\n    \n    if (name == null) {\n      throw new RuntimeException(\"Core needs a name\");\n    }\n    \n    if(coreContainer != null && coreContainer.getZkController() != null) {\n      this.cloudDesc = new CloudDescriptor();\n      // cloud collection defaults to core name\n      cloudDesc.setCollectionName(name.isEmpty() ? coreContainer.getDefaultCoreName() : name);\n    }\n\n    if (instanceDir == null) {\n      throw new NullPointerException(\"Missing required \\'instanceDir\\'\");\n    }\n    instanceDir = SolrResourceLoader.normalizeDir(instanceDir);\n    this.instanceDir = instanceDir;\n    this.configName = getDefaultConfigName();\n    this.schemaName = getDefaultSchemaName();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a837c064b67fa63a9394136e31218b908cdcf783","date":1362186072,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreDescriptor#CoreDescriptor(CoreContainer,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreDescriptor#CoreDescriptor(CoreContainer,String,String).mjava","sourceNew":"  public CoreDescriptor(CoreContainer container, String name, String instanceDir) {\n    this(container);\n    doInit(name, instanceDir);\n  }\n\n","sourceOld":"  public CoreDescriptor(CoreContainer coreContainer, String name, String instanceDir) {\n    this.coreContainer = coreContainer;\n    this.name = name;\n    \n    if (name == null) {\n      throw new RuntimeException(\"Core needs a name\");\n    }\n    \n    if(coreContainer != null && coreContainer.getZkController() != null) {\n      this.cloudDesc = new CloudDescriptor();\n      // cloud collection defaults to core name\n      cloudDesc.setCollectionName(name);\n    }\n\n    if (instanceDir == null) {\n      throw new NullPointerException(\"Missing required \\'instanceDir\\'\");\n    }\n    instanceDir = SolrResourceLoader.normalizeDir(instanceDir);\n    this.instanceDir = instanceDir;\n    this.configName = getDefaultConfigName();\n    this.schemaName = getDefaultSchemaName();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e764e9a107f93be9fa3c922bc6a197b3eec387e","date":1373560501,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreDescriptor#CoreDescriptor(CoreContainer,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreDescriptor#CoreDescriptor(CoreContainer,String,String).mjava","sourceNew":"  /**\n   * Create a new CoreDescriptor with a given name and instancedir\n   * @param container     the CoreDescriptor's container\n   * @param name          the CoreDescriptor's name\n   * @param instanceDir   the CoreDescriptor's instancedir\n   */\n  public CoreDescriptor(CoreContainer container, String name, String instanceDir) {\n    this(container, name, instanceDir, new Properties());\n  }\n\n","sourceOld":"  public CoreDescriptor(CoreContainer container, String name, String instanceDir) {\n    this(container);\n    doInit(name, instanceDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreDescriptor#CoreDescriptor(CoreContainer,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreDescriptor#CoreDescriptor(CoreContainer,String,String).mjava","sourceNew":"  /**\n   * Create a new CoreDescriptor with a given name and instancedir\n   * @param container     the CoreDescriptor's container\n   * @param name          the CoreDescriptor's name\n   * @param instanceDir   the CoreDescriptor's instancedir\n   */\n  public CoreDescriptor(CoreContainer container, String name, String instanceDir) {\n    this(container, name, instanceDir, new Properties());\n  }\n\n","sourceOld":"  public CoreDescriptor(CoreContainer container, String name, String instanceDir) {\n    this(container);\n    doInit(name, instanceDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3","date":1448892165,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreDescriptor#CoreDescriptor(CoreContainer,String,Path).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreDescriptor#CoreDescriptor(CoreContainer,String,String).mjava","sourceNew":"  /**\n   * Create a new CoreDescriptor with a given name and instancedir\n   * @param container     the CoreDescriptor's container\n   * @param name          the CoreDescriptor's name\n   * @param instanceDir   the CoreDescriptor's instancedir\n   */\n  public CoreDescriptor(CoreContainer container, String name, Path instanceDir) {\n    this(container, name, instanceDir, Collections.emptyMap());\n  }\n\n","sourceOld":"  /**\n   * Create a new CoreDescriptor with a given name and instancedir\n   * @param container     the CoreDescriptor's container\n   * @param name          the CoreDescriptor's name\n   * @param instanceDir   the CoreDescriptor's instancedir\n   */\n  public CoreDescriptor(CoreContainer container, String name, String instanceDir) {\n    this(container, name, instanceDir, new Properties());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a837c064b67fa63a9394136e31218b908cdcf783","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5d004d0e0b3f65bb40da76d476d659d7888270e8"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["c26f00b574427b55127e869b935845554afde1fa","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["c26f00b574427b55127e869b935845554afde1fa","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["c26f00b574427b55127e869b935845554afde1fa"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["a837c064b67fa63a9394136e31218b908cdcf783"],"a837c064b67fa63a9394136e31218b908cdcf783":["e635cfcf66f9e8b914c54c24d337820e475f44a5"],"e635cfcf66f9e8b914c54c24d337820e475f44a5":["46e2d37c19555349716a5f663bfa521d4a3085d6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"46e2d37c19555349716a5f663bfa521d4a3085d6":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"]},"commit2Childs":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"c26f00b574427b55127e869b935845554afde1fa":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["5d004d0e0b3f65bb40da76d476d659d7888270e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","5d004d0e0b3f65bb40da76d476d659d7888270e8","a258fbb26824fd104ed795e5d9033d2d040049ee"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["c26f00b574427b55127e869b935845554afde1fa"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","46e2d37c19555349716a5f663bfa521d4a3085d6"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["37a0f60745e53927c4c876cfe5b5a58170f0646c","11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"a837c064b67fa63a9394136e31218b908cdcf783":["37a0f60745e53927c4c876cfe5b5a58170f0646c","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"e635cfcf66f9e8b914c54c24d337820e475f44a5":["a837c064b67fa63a9394136e31218b908cdcf783"],"46e2d37c19555349716a5f663bfa521d4a3085d6":["e635cfcf66f9e8b914c54c24d337820e475f44a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}