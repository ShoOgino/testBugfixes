{"path":"solr/core/src/java/org/apache/solr/spelling/IndexBasedSpellChecker#initSourceReader().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/IndexBasedSpellChecker#initSourceReader().mjava","pathOld":"solr/src/java/org/apache/solr/spelling/IndexBasedSpellChecker#initSourceReader().mjava","sourceNew":"  private void initSourceReader() {\n    if (sourceLocation != null) {\n      try {\n        FSDirectory luceneIndexDir = FSDirectory.open(new File(sourceLocation));\n        this.reader = IndexReader.open(luceneIndexDir);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","sourceOld":"  private void initSourceReader() {\n    if (sourceLocation != null) {\n      try {\n        FSDirectory luceneIndexDir = FSDirectory.open(new File(sourceLocation));\n        this.reader = IndexReader.open(luceneIndexDir);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/IndexBasedSpellChecker#initSourceReader().mjava","pathOld":"solr/src/java/org/apache/solr/spelling/IndexBasedSpellChecker#initSourceReader().mjava","sourceNew":"  private void initSourceReader() {\n    if (sourceLocation != null) {\n      try {\n        FSDirectory luceneIndexDir = FSDirectory.open(new File(sourceLocation));\n        this.reader = IndexReader.open(luceneIndexDir);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","sourceOld":"  private void initSourceReader() {\n    if (sourceLocation != null) {\n      try {\n        FSDirectory luceneIndexDir = FSDirectory.open(new File(sourceLocation));\n        this.reader = IndexReader.open(luceneIndexDir);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/spelling/IndexBasedSpellChecker#initSourceReader().mjava","pathOld":"solr/src/java/org/apache/solr/spelling/IndexBasedSpellChecker#initSourceReader().mjava","sourceNew":"  private void initSourceReader() {\n    if (sourceLocation != null) {\n      try {\n        FSDirectory luceneIndexDir = FSDirectory.open(new File(sourceLocation));\n        this.reader = IndexReader.open(luceneIndexDir);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","sourceOld":"  private void initSourceReader() {\n    if (sourceLocation != null) {\n      try {\n        FSDirectory luceneIndexDir = FSDirectory.open(new File(sourceLocation));\n        this.reader = IndexReader.open(luceneIndexDir);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/IndexBasedSpellChecker#initSourceReader().mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/IndexBasedSpellChecker#initSourceReader().mjava","sourceNew":"  private void initSourceReader() {\n    if (sourceLocation != null) {\n      try {\n        FSDirectory luceneIndexDir = FSDirectory.open(new File(sourceLocation));\n        this.reader = IndexReader.open(luceneIndexDir, true);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","sourceOld":"  private void initSourceReader() {\n    if (sourceLocation != null) {\n      try {\n        FSDirectory luceneIndexDir = FSDirectory.open(new File(sourceLocation));\n        this.reader = IndexReader.open(luceneIndexDir);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c5b026d03cbbb03ca4c0b97d14e9839682281dc","date":1323049298,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/IndexBasedSpellChecker#initSourceReader().mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/IndexBasedSpellChecker#initSourceReader().mjava","sourceNew":"  private void initSourceReader() {\n    if (sourceLocation != null) {\n      try {\n        FSDirectory luceneIndexDir = FSDirectory.open(new File(sourceLocation));\n        this.reader = IndexReader.open(luceneIndexDir);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","sourceOld":"  private void initSourceReader() {\n    if (sourceLocation != null) {\n      try {\n        FSDirectory luceneIndexDir = FSDirectory.open(new File(sourceLocation));\n        this.reader = IndexReader.open(luceneIndexDir, true);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/spelling/IndexBasedSpellChecker#initSourceReader().mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/IndexBasedSpellChecker#initSourceReader().mjava","sourceNew":"  private void initSourceReader() {\n    if (sourceLocation != null) {\n      try {\n        FSDirectory luceneIndexDir = FSDirectory.open(new File(sourceLocation));\n        this.reader = IndexReader.open(luceneIndexDir);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","sourceOld":"  private void initSourceReader() {\n    if (sourceLocation != null) {\n      try {\n        FSDirectory luceneIndexDir = FSDirectory.open(new File(sourceLocation));\n        this.reader = IndexReader.open(luceneIndexDir, true);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/spelling/IndexBasedSpellChecker#initSourceReader().mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/IndexBasedSpellChecker#initSourceReader().mjava","sourceNew":"  private void initSourceReader() {\n    if (sourceLocation != null) {\n      try {\n        FSDirectory luceneIndexDir = FSDirectory.open(new File(sourceLocation));\n        this.reader = IndexReader.open(luceneIndexDir);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","sourceOld":"  private void initSourceReader() {\n    if (sourceLocation != null) {\n      try {\n        FSDirectory luceneIndexDir = FSDirectory.open(new File(sourceLocation));\n        this.reader = IndexReader.open(luceneIndexDir, true);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/IndexBasedSpellChecker#initSourceReader().mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/IndexBasedSpellChecker#initSourceReader().mjava","sourceNew":"  private void initSourceReader() {\n    if (sourceLocation != null) {\n      try {\n        FSDirectory luceneIndexDir = FSDirectory.open(new File(sourceLocation));\n        this.reader = DirectoryReader.open(luceneIndexDir);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","sourceOld":"  private void initSourceReader() {\n    if (sourceLocation != null) {\n      try {\n        FSDirectory luceneIndexDir = FSDirectory.open(new File(sourceLocation));\n        this.reader = IndexReader.open(luceneIndexDir);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/IndexBasedSpellChecker#initSourceReader().mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/IndexBasedSpellChecker#initSourceReader().mjava","sourceNew":"  private void initSourceReader() {\n    if (sourceLocation != null) {\n      try {\n        FSDirectory luceneIndexDir = FSDirectory.open(new File(sourceLocation).toPath());\n        this.reader = DirectoryReader.open(luceneIndexDir);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","sourceOld":"  private void initSourceReader() {\n    if (sourceLocation != null) {\n      try {\n        FSDirectory luceneIndexDir = FSDirectory.open(new File(sourceLocation));\n        this.reader = DirectoryReader.open(luceneIndexDir);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["c26f00b574427b55127e869b935845554afde1fa"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["7b91922b55d15444d554721b352861d028eb8278","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["7b91922b55d15444d554721b352861d028eb8278","1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["7b91922b55d15444d554721b352861d028eb8278"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f4abec28b874149a7223e32cc7a01704c27790de":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f4abec28b874149a7223e32cc7a01704c27790de"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3615ce4a1f785ae1b779244de52c6a7d99227e60","1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["f4abec28b874149a7223e32cc7a01704c27790de"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"c26f00b574427b55127e869b935845554afde1fa":["7b91922b55d15444d554721b352861d028eb8278"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"f4abec28b874149a7223e32cc7a01704c27790de":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}