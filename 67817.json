{"path":"solr/core/src/test/org/apache/solr/cloud/TestRandomFlRTGCloud#testRandomizedUpdatesAndRTGs().mjava","commits":[{"id":"136796946c32863f11b97ebec6b4091cdfe3a20b","date":1468862468,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRandomFlRTGCloud#testRandomizedUpdatesAndRTGs().mjava","pathOld":"/dev/null","sourceNew":"  public void testRandomizedUpdatesAndRTGs() throws Exception {\n\n    final int maxNumDocs = atLeast(100);\n    final int numSeedDocs = random().nextInt(maxNumDocs / 10); // at most ~10% of the max possible docs\n    final int numIters = atLeast(maxNumDocs * 10);\n    final SolrInputDocument[] knownDocs = new SolrInputDocument[maxNumDocs];\n\n    log.info(\"Starting {} iters by seeding {} of {} max docs\",\n             numIters, numSeedDocs, maxNumDocs);\n\n    int itersSinceLastCommit = 0;\n    for (int i = 0; i < numIters; i++) {\n      itersSinceLastCommit = maybeCommit(random(), itersSinceLastCommit, numIters);\n\n      if (i < numSeedDocs) {\n        // first N iters all we worry about is seeding\n        knownDocs[i] = addRandomDocument(i);\n      } else {\n        assertOneIter(knownDocs);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRandomFlRTGCloud#testRandomizedUpdatesAndRTGs().mjava","pathOld":"/dev/null","sourceNew":"  public void testRandomizedUpdatesAndRTGs() throws Exception {\n\n    final int maxNumDocs = atLeast(100);\n    final int numSeedDocs = random().nextInt(maxNumDocs / 10); // at most ~10% of the max possible docs\n    final int numIters = atLeast(maxNumDocs * 10);\n    final SolrInputDocument[] knownDocs = new SolrInputDocument[maxNumDocs];\n\n    log.info(\"Starting {} iters by seeding {} of {} max docs\",\n             numIters, numSeedDocs, maxNumDocs);\n\n    int itersSinceLastCommit = 0;\n    for (int i = 0; i < numIters; i++) {\n      itersSinceLastCommit = maybeCommit(random(), itersSinceLastCommit, numIters);\n\n      if (i < numSeedDocs) {\n        // first N iters all we worry about is seeding\n        knownDocs[i] = addRandomDocument(i);\n      } else {\n        assertOneIter(knownDocs);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"136796946c32863f11b97ebec6b4091cdfe3a20b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","136796946c32863f11b97ebec6b4091cdfe3a20b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["136796946c32863f11b97ebec6b4091cdfe3a20b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["136796946c32863f11b97ebec6b4091cdfe3a20b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"136796946c32863f11b97ebec6b4091cdfe3a20b":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}