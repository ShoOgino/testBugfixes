{"path":"solr/contrib/ltr/src/java/org/apache/solr/ltr/response/transform/LTRFeatureLoggerTransformerFactory#create(String,SolrParams,SolrQueryRequest).mjava","commits":[{"id":"eec520bd69db5e7976780e93a0dfc7c0f0e75c2e","date":1478891880,"type":1,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/response/transform/LTRFeatureLoggerTransformerFactory#create(String,SolrParams,SolrQueryRequest).mjava","pathOld":"solr/contrib/ltr/src/java/org/apache/solr/response/transform/LTRFeatureLoggerTransformerFactory#create(String,SolrParams,SolrQueryRequest).mjava","sourceNew":"  @Override\n  public DocTransformer create(String name, SolrParams params,\n      SolrQueryRequest req) {\n\n    // Hint to enable feature vector cache since we are requesting features\n    SolrQueryRequestContextUtils.setIsExtractingFeatures(req);\n\n    // Communicate which feature store we are requesting features for\n    SolrQueryRequestContextUtils.setFvStoreName(req, params.get(FV_STORE, defaultFvStore));\n\n    // Create and supply the feature logger to be used\n    SolrQueryRequestContextUtils.setFeatureLogger(req,\n        FeatureLogger.createFeatureLogger(\n            params.get(FV_RESPONSE_WRITER, defaultFvwt),\n            params.get(FV_FORMAT, defaultFvFormat)));\n\n    return new FeatureTransformer(name, params, req);\n  }\n\n","sourceOld":"  @Override\n  public DocTransformer create(String name, SolrParams params,\n      SolrQueryRequest req) {\n\n    // Hint to enable feature vector cache since we are requesting features\n    SolrQueryRequestContextUtils.setIsExtractingFeatures(req);\n\n    // Communicate which feature store we are requesting features for\n    SolrQueryRequestContextUtils.setFvStoreName(req, params.get(FV_STORE, defaultFvStore));\n\n    // Create and supply the feature logger to be used\n    SolrQueryRequestContextUtils.setFeatureLogger(req,\n        FeatureLogger.createFeatureLogger(\n            params.get(FV_RESPONSE_WRITER, defaultFvwt),\n            params.get(FV_FORMAT, defaultFvFormat)));\n\n    return new FeatureTransformer(name, params, req);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2459db523605752a3affcf444fb717d625904488","date":1478970978,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/response/transform/LTRFeatureLoggerTransformerFactory#create(String,SolrParams,SolrQueryRequest).mjava","pathOld":"solr/contrib/ltr/src/java/org/apache/solr/response/transform/LTRFeatureLoggerTransformerFactory#create(String,SolrParams,SolrQueryRequest).mjava","sourceNew":"  @Override\n  public DocTransformer create(String name, SolrParams params,\n      SolrQueryRequest req) {\n\n    // Hint to enable feature vector cache since we are requesting features\n    SolrQueryRequestContextUtils.setIsExtractingFeatures(req);\n\n    // Communicate which feature store we are requesting features for\n    SolrQueryRequestContextUtils.setFvStoreName(req, params.get(FV_STORE, defaultFvStore));\n\n    // Create and supply the feature logger to be used\n    SolrQueryRequestContextUtils.setFeatureLogger(req,\n        FeatureLogger.createFeatureLogger(\n            params.get(FV_RESPONSE_WRITER, defaultFvwt),\n            params.get(FV_FORMAT, defaultFvFormat)));\n\n    return new FeatureTransformer(name, params, req);\n  }\n\n","sourceOld":"  @Override\n  public DocTransformer create(String name, SolrParams params,\n      SolrQueryRequest req) {\n\n    // Hint to enable feature vector cache since we are requesting features\n    SolrQueryRequestContextUtils.setIsExtractingFeatures(req);\n\n    // Communicate which feature store we are requesting features for\n    SolrQueryRequestContextUtils.setFvStoreName(req, params.get(FV_STORE, defaultFvStore));\n\n    // Create and supply the feature logger to be used\n    SolrQueryRequestContextUtils.setFeatureLogger(req,\n        FeatureLogger.createFeatureLogger(\n            params.get(FV_RESPONSE_WRITER, defaultFvwt),\n            params.get(FV_FORMAT, defaultFvFormat)));\n\n    return new FeatureTransformer(name, params, req);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fa1f8f009c5147b03311c7e6e6469fa7b677186","date":1482164570,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/response/transform/LTRFeatureLoggerTransformerFactory#create(String,SolrParams,SolrQueryRequest).mjava","pathOld":"solr/contrib/ltr/src/java/org/apache/solr/ltr/response/transform/LTRFeatureLoggerTransformerFactory#create(String,SolrParams,SolrQueryRequest).mjava","sourceNew":"  @Override\n  public DocTransformer create(String name, SolrParams localparams,\n      SolrQueryRequest req) {\n\n    // Hint to enable feature vector cache since we are requesting features\n    SolrQueryRequestContextUtils.setIsExtractingFeatures(req);\n\n    // Communicate which feature store we are requesting features for\n    SolrQueryRequestContextUtils.setFvStoreName(req, localparams.get(FV_STORE, defaultStore));\n\n    // Create and supply the feature logger to be used\n    SolrQueryRequestContextUtils.setFeatureLogger(req,\n        createFeatureLogger(\n            localparams.get(FV_FORMAT, defaultFormat)));\n\n    return new FeatureTransformer(name, localparams, req);\n  }\n\n","sourceOld":"  @Override\n  public DocTransformer create(String name, SolrParams params,\n      SolrQueryRequest req) {\n\n    // Hint to enable feature vector cache since we are requesting features\n    SolrQueryRequestContextUtils.setIsExtractingFeatures(req);\n\n    // Communicate which feature store we are requesting features for\n    SolrQueryRequestContextUtils.setFvStoreName(req, params.get(FV_STORE, defaultFvStore));\n\n    // Create and supply the feature logger to be used\n    SolrQueryRequestContextUtils.setFeatureLogger(req,\n        FeatureLogger.createFeatureLogger(\n            params.get(FV_RESPONSE_WRITER, defaultFvwt),\n            params.get(FV_FORMAT, defaultFvFormat)));\n\n    return new FeatureTransformer(name, params, req);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/response/transform/LTRFeatureLoggerTransformerFactory#create(String,SolrParams,SolrQueryRequest).mjava","pathOld":"solr/contrib/ltr/src/java/org/apache/solr/ltr/response/transform/LTRFeatureLoggerTransformerFactory#create(String,SolrParams,SolrQueryRequest).mjava","sourceNew":"  @Override\n  public DocTransformer create(String name, SolrParams localparams,\n      SolrQueryRequest req) {\n\n    // Hint to enable feature vector cache since we are requesting features\n    SolrQueryRequestContextUtils.setIsExtractingFeatures(req);\n\n    // Communicate which feature store we are requesting features for\n    SolrQueryRequestContextUtils.setFvStoreName(req, localparams.get(FV_STORE, defaultStore));\n\n    // Create and supply the feature logger to be used\n    SolrQueryRequestContextUtils.setFeatureLogger(req,\n        createFeatureLogger(\n            localparams.get(FV_FORMAT, defaultFormat)));\n\n    return new FeatureTransformer(name, localparams, req);\n  }\n\n","sourceOld":"  @Override\n  public DocTransformer create(String name, SolrParams params,\n      SolrQueryRequest req) {\n\n    // Hint to enable feature vector cache since we are requesting features\n    SolrQueryRequestContextUtils.setIsExtractingFeatures(req);\n\n    // Communicate which feature store we are requesting features for\n    SolrQueryRequestContextUtils.setFvStoreName(req, params.get(FV_STORE, defaultFvStore));\n\n    // Create and supply the feature logger to be used\n    SolrQueryRequestContextUtils.setFeatureLogger(req,\n        FeatureLogger.createFeatureLogger(\n            params.get(FV_RESPONSE_WRITER, defaultFvwt),\n            params.get(FV_FORMAT, defaultFvFormat)));\n\n    return new FeatureTransformer(name, params, req);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97843b36f201934938da5d3392d87b90624dfe6b","date":1482500716,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/response/transform/LTRFeatureLoggerTransformerFactory#create(String,SolrParams,SolrQueryRequest).mjava","pathOld":"solr/contrib/ltr/src/java/org/apache/solr/ltr/response/transform/LTRFeatureLoggerTransformerFactory#create(String,SolrParams,SolrQueryRequest).mjava","sourceNew":"  @Override\n  public DocTransformer create(String name, SolrParams localparams,\n      SolrQueryRequest req) {\n\n    // Hint to enable feature vector cache since we are requesting features\n    SolrQueryRequestContextUtils.setIsExtractingFeatures(req);\n\n    // Communicate which feature store we are requesting features for\n    SolrQueryRequestContextUtils.setFvStoreName(req, localparams.get(FV_STORE, defaultStore));\n\n    // Create and supply the feature logger to be used\n    SolrQueryRequestContextUtils.setFeatureLogger(req,\n        createFeatureLogger(\n            localparams.get(FV_FORMAT)));\n\n    return new FeatureTransformer(name, localparams, req);\n  }\n\n","sourceOld":"  @Override\n  public DocTransformer create(String name, SolrParams localparams,\n      SolrQueryRequest req) {\n\n    // Hint to enable feature vector cache since we are requesting features\n    SolrQueryRequestContextUtils.setIsExtractingFeatures(req);\n\n    // Communicate which feature store we are requesting features for\n    SolrQueryRequestContextUtils.setFvStoreName(req, localparams.get(FV_STORE, defaultStore));\n\n    // Create and supply the feature logger to be used\n    SolrQueryRequestContextUtils.setFeatureLogger(req,\n        createFeatureLogger(\n            localparams.get(FV_FORMAT, defaultFormat)));\n\n    return new FeatureTransformer(name, localparams, req);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/response/transform/LTRFeatureLoggerTransformerFactory#create(String,SolrParams,SolrQueryRequest).mjava","pathOld":"solr/contrib/ltr/src/java/org/apache/solr/ltr/response/transform/LTRFeatureLoggerTransformerFactory#create(String,SolrParams,SolrQueryRequest).mjava","sourceNew":"  @Override\n  public DocTransformer create(String name, SolrParams localparams,\n      SolrQueryRequest req) {\n\n    // Hint to enable feature vector cache since we are requesting features\n    SolrQueryRequestContextUtils.setIsExtractingFeatures(req);\n\n    // Communicate which feature store we are requesting features for\n    SolrQueryRequestContextUtils.setFvStoreName(req, localparams.get(FV_STORE, defaultStore));\n\n    // Create and supply the feature logger to be used\n    SolrQueryRequestContextUtils.setFeatureLogger(req,\n        createFeatureLogger(\n            localparams.get(FV_FORMAT)));\n\n    return new FeatureTransformer(name, localparams, req);\n  }\n\n","sourceOld":"  @Override\n  public DocTransformer create(String name, SolrParams localparams,\n      SolrQueryRequest req) {\n\n    // Hint to enable feature vector cache since we are requesting features\n    SolrQueryRequestContextUtils.setIsExtractingFeatures(req);\n\n    // Communicate which feature store we are requesting features for\n    SolrQueryRequestContextUtils.setFvStoreName(req, localparams.get(FV_STORE, defaultStore));\n\n    // Create and supply the feature logger to be used\n    SolrQueryRequestContextUtils.setFeatureLogger(req,\n        createFeatureLogger(\n            localparams.get(FV_FORMAT, defaultFormat)));\n\n    return new FeatureTransformer(name, localparams, req);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97843b36f201934938da5d3392d87b90624dfe6b":["8fa1f8f009c5147b03311c7e6e6469fa7b677186"],"8fa1f8f009c5147b03311c7e6e6469fa7b677186":["eec520bd69db5e7976780e93a0dfc7c0f0e75c2e"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["2459db523605752a3affcf444fb717d625904488","8fa1f8f009c5147b03311c7e6e6469fa7b677186"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"eec520bd69db5e7976780e93a0dfc7c0f0e75c2e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2459db523605752a3affcf444fb717d625904488":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","eec520bd69db5e7976780e93a0dfc7c0f0e75c2e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["97843b36f201934938da5d3392d87b90624dfe6b"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","97843b36f201934938da5d3392d87b90624dfe6b"]},"commit2Childs":{"97843b36f201934938da5d3392d87b90624dfe6b":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"8fa1f8f009c5147b03311c7e6e6469fa7b677186":["97843b36f201934938da5d3392d87b90624dfe6b","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["f03e4bed5023ec3ef93a771b8888cae991cf448d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eec520bd69db5e7976780e93a0dfc7c0f0e75c2e","2459db523605752a3affcf444fb717d625904488"],"eec520bd69db5e7976780e93a0dfc7c0f0e75c2e":["8fa1f8f009c5147b03311c7e6e6469fa7b677186","2459db523605752a3affcf444fb717d625904488"],"2459db523605752a3affcf444fb717d625904488":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}