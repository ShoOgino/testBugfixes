{"path":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer#testCustomTransformer().mjava","commits":[{"id":"97054ceae268680b440507fbba9c4e80fd86125f","date":1433272560,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer#testCustomTransformer().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testCustomTransformer() throws Exception {\n    // Build a simple index\n    int max = 10;\n    for(int i=0; i<max; i++) {\n      SolrInputDocument sdoc = new SolrInputDocument();\n      sdoc.addField(\"id\", i);\n      sdoc.addField(\"subject\", \"xx\");\n      sdoc.addField(\"title\", \"title_\"+i);\n      updateJ(jsonAdd(sdoc), null);\n    }\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\"), \"//*[@numFound='\" + max + \"']\");\n    \n    assertQ( req(\n        \"q\", \"*:*\", \n        \"fl\", \"id,out:[custom extra=subject,title]\"), \n        // Check that the concatinated fields make it in the results\n        \"//*[@numFound='\" + max + \"']\",\n        \"//str[.='xx#title_0#']\",\n        \"//str[.='xx#title_1#']\",\n        \"//str[.='xx#title_2#']\",\n        \"//str[.='xx#title_3#']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0158ced21948b6626f733c1c42c1e18d94449789","date":1462994341,"type":3,"author":"Bartosz KrasiÅ„ski","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer#testCustomTransformer().mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer#testCustomTransformer().mjava","sourceNew":"  @Test\n  public void testCustomTransformer() throws Exception {\n    // Build a simple index\n    int max = 10;\n    for(int i=0; i<max; i++) {\n      SolrInputDocument sdoc = new SolrInputDocument();\n      sdoc.addField(\"id\", i);\n      sdoc.addField(\"subject\", \"xx\");\n      sdoc.addField(\"title\", \"title_\"+i);\n      updateJ(jsonAdd(sdoc), null);\n    }\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\"), \"//*[@numFound='\" + max + \"']\");\n    \n    assertQ( req(\n        \"q\", \"*:*\", \n        \"fl\", \"id,out:[custom extra=subject,title]\"), \n        // Check that the concatenated fields make it in the results\n        \"//*[@numFound='\" + max + \"']\",\n        \"//str[.='xx#title_0#']\",\n        \"//str[.='xx#title_1#']\",\n        \"//str[.='xx#title_2#']\",\n        \"//str[.='xx#title_3#']\");\n  }\n\n","sourceOld":"  @Test\n  public void testCustomTransformer() throws Exception {\n    // Build a simple index\n    int max = 10;\n    for(int i=0; i<max; i++) {\n      SolrInputDocument sdoc = new SolrInputDocument();\n      sdoc.addField(\"id\", i);\n      sdoc.addField(\"subject\", \"xx\");\n      sdoc.addField(\"title\", \"title_\"+i);\n      updateJ(jsonAdd(sdoc), null);\n    }\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\"), \"//*[@numFound='\" + max + \"']\");\n    \n    assertQ( req(\n        \"q\", \"*:*\", \n        \"fl\", \"id,out:[custom extra=subject,title]\"), \n        // Check that the concatinated fields make it in the results\n        \"//*[@numFound='\" + max + \"']\",\n        \"//str[.='xx#title_0#']\",\n        \"//str[.='xx#title_1#']\",\n        \"//str[.='xx#title_2#']\",\n        \"//str[.='xx#title_3#']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer#testCustomTransformer().mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer#testCustomTransformer().mjava","sourceNew":"  @Test\n  public void testCustomTransformer() throws Exception {\n    // Build a simple index\n    int max = 10;\n    for(int i=0; i<max; i++) {\n      SolrInputDocument sdoc = new SolrInputDocument();\n      sdoc.addField(\"id\", i);\n      sdoc.addField(\"subject\", \"xx\");\n      sdoc.addField(\"title\", \"title_\"+i);\n      updateJ(jsonAdd(sdoc), null);\n    }\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\"), \"//*[@numFound='\" + max + \"']\");\n    \n    assertQ( req(\n        \"q\", \"*:*\", \n        \"fl\", \"id,out:[custom extra=subject,title]\"), \n        // Check that the concatenated fields make it in the results\n        \"//*[@numFound='\" + max + \"']\",\n        \"//str[.='xx#title_0#']\",\n        \"//str[.='xx#title_1#']\",\n        \"//str[.='xx#title_2#']\",\n        \"//str[.='xx#title_3#']\");\n  }\n\n","sourceOld":"  @Test\n  public void testCustomTransformer() throws Exception {\n    // Build a simple index\n    int max = 10;\n    for(int i=0; i<max; i++) {\n      SolrInputDocument sdoc = new SolrInputDocument();\n      sdoc.addField(\"id\", i);\n      sdoc.addField(\"subject\", \"xx\");\n      sdoc.addField(\"title\", \"title_\"+i);\n      updateJ(jsonAdd(sdoc), null);\n    }\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\"), \"//*[@numFound='\" + max + \"']\");\n    \n    assertQ( req(\n        \"q\", \"*:*\", \n        \"fl\", \"id,out:[custom extra=subject,title]\"), \n        // Check that the concatinated fields make it in the results\n        \"//*[@numFound='\" + max + \"']\",\n        \"//str[.='xx#title_0#']\",\n        \"//str[.='xx#title_1#']\",\n        \"//str[.='xx#title_2#']\",\n        \"//str[.='xx#title_3#']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer#testCustomTransformer().mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer#testCustomTransformer().mjava","sourceNew":"  @Test\n  public void testCustomTransformer() throws Exception {\n    // Build a simple index\n    int max = 10;\n    for(int i=0; i<max; i++) {\n      SolrInputDocument sdoc = new SolrInputDocument();\n      sdoc.addField(\"id\", i);\n      sdoc.addField(\"subject\", \"xx\");\n      sdoc.addField(\"title\", \"title_\"+i);\n      updateJ(jsonAdd(sdoc), null);\n    }\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\"), \"//*[@numFound='\" + max + \"']\");\n    \n    assertQ( req(\n        \"q\", \"*:*\", \n        \"fl\", \"id,out:[custom extra=subject,title]\"), \n        // Check that the concatenated fields make it in the results\n        \"//*[@numFound='\" + max + \"']\",\n        \"//str[.='xx#title_0#']\",\n        \"//str[.='xx#title_1#']\",\n        \"//str[.='xx#title_2#']\",\n        \"//str[.='xx#title_3#']\");\n  }\n\n","sourceOld":"  @Test\n  public void testCustomTransformer() throws Exception {\n    // Build a simple index\n    int max = 10;\n    for(int i=0; i<max; i++) {\n      SolrInputDocument sdoc = new SolrInputDocument();\n      sdoc.addField(\"id\", i);\n      sdoc.addField(\"subject\", \"xx\");\n      sdoc.addField(\"title\", \"title_\"+i);\n      updateJ(jsonAdd(sdoc), null);\n    }\n    assertU(commit());\n    assertQ(req(\"q\", \"*:*\"), \"//*[@numFound='\" + max + \"']\");\n    \n    assertQ( req(\n        \"q\", \"*:*\", \n        \"fl\", \"id,out:[custom extra=subject,title]\"), \n        // Check that the concatinated fields make it in the results\n        \"//*[@numFound='\" + max + \"']\",\n        \"//str[.='xx#title_0#']\",\n        \"//str[.='xx#title_1#']\",\n        \"//str[.='xx#title_2#']\",\n        \"//str[.='xx#title_3#']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"97054ceae268680b440507fbba9c4e80fd86125f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["97054ceae268680b440507fbba9c4e80fd86125f","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["97054ceae268680b440507fbba9c4e80fd86125f","0158ced21948b6626f733c1c42c1e18d94449789"],"0158ced21948b6626f733c1c42c1e18d94449789":["97054ceae268680b440507fbba9c4e80fd86125f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["97054ceae268680b440507fbba9c4e80fd86125f"],"97054ceae268680b440507fbba9c4e80fd86125f":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89","0158ced21948b6626f733c1c42c1e18d94449789"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"0158ced21948b6626f733c1c42c1e18d94449789":["d470c8182e92b264680e34081b75e70a9f2b3c89"]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}