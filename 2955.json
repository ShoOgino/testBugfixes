{"path":"src/test/org/apache/solr/core/SolrCoreTest#testRefCount().mjava","commits":[{"id":"c28792ff7d1774c306e16afbd44ded91a417049b","date":1219072108,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/core/SolrCoreTest#testRefCount().mjava","pathOld":"/dev/null","sourceNew":"  public void testRefCount() throws Exception {\n    SolrCore core = h.getCore();\n    assertTrue(\"Refcount != 1\", core.getOpenCount() == 1);\n    \n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore c1 = cores.getCore(\"\");\n    assertTrue(\"Refcount != 2\", core.getOpenCount() == 2);\n\n    ClosingRequestHandler handler1 = new ClosingRequestHandler();\n    handler1.inform( core );\n\n    String path = \"/this/is A path /that won't be registered!\";\n    SolrRequestHandler old = core.registerRequestHandler( path, handler1 );\n    assertNull( old ); // should not be anything...\n    assertEquals( core.getRequestHandlers().get( path ), handler1 );\n   \n    SolrCore c2 = cores.getCore(\"\");\n    c1.close();\n    assertTrue(\"Refcount < 1\", core.getOpenCount() >= 1);\n    assertTrue(\"Handler is closed\", handler1.closed == false);\n    \n    c1 = cores.getCore(\"\");\n    assertTrue(\"Refcount < 2\", core.getOpenCount() >= 2);\n    assertTrue(\"Handler is closed\", handler1.closed == false);\n    \n    c2.close();\n    assertTrue(\"Refcount < 1\", core.getOpenCount() >= 1);\n    assertTrue(\"Handler is closed\", handler1.closed == false);\n\n    c1.close();\n    cores.shutdown();\n    assertTrue(\"Refcount != 0\", core.getOpenCount() == 0);\n    assertTrue(\"Handler not closed\", core.isClosed() && handler1.closed == true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/SolrCoreTest#testRefCount().mjava","pathOld":"src/test/org/apache/solr/core/SolrCoreTest#testRefCount().mjava","sourceNew":"  public void testRefCount() throws Exception {\n    SolrCore core = h.getCore();\n    assertTrue(\"Refcount != 1\", core.getOpenCount() == 1);\n    \n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore c1 = cores.getCore(\"\");\n    assertTrue(\"Refcount != 2\", core.getOpenCount() == 2);\n\n    ClosingRequestHandler handler1 = new ClosingRequestHandler();\n    handler1.inform( core );\n\n    String path = \"/this/is A path /that won't be registered!\";\n    SolrRequestHandler old = core.registerRequestHandler( path, handler1 );\n    assertNull( old ); // should not be anything...\n    assertEquals( core.getRequestHandlers().get( path ), handler1 );\n   \n    SolrCore c2 = cores.getCore(\"\");\n    c1.close();\n    assertTrue(\"Refcount < 1\", core.getOpenCount() >= 1);\n    assertTrue(\"Handler is closed\", handler1.closed == false);\n    \n    c1 = cores.getCore(\"\");\n    assertTrue(\"Refcount < 2\", core.getOpenCount() >= 2);\n    assertTrue(\"Handler is closed\", handler1.closed == false);\n    \n    c2.close();\n    assertTrue(\"Refcount < 1\", core.getOpenCount() >= 1);\n    assertTrue(\"Handler is closed\", handler1.closed == false);\n\n    c1.close();\n    cores.shutdown();\n    assertTrue(\"Refcount != 0\", core.getOpenCount() == 0);\n    assertTrue(\"Handler not closed\", core.isClosed() && handler1.closed == true);\n  }\n\n","sourceOld":"  public void testRefCount() throws Exception {\n    SolrCore core = h.getCore();\n    assertTrue(\"Refcount != 1\", core.getOpenCount() == 1);\n    \n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore c1 = cores.getCore(\"\");\n    assertTrue(\"Refcount != 2\", core.getOpenCount() == 2);\n\n    ClosingRequestHandler handler1 = new ClosingRequestHandler();\n    handler1.inform( core );\n\n    String path = \"/this/is A path /that won't be registered!\";\n    SolrRequestHandler old = core.registerRequestHandler( path, handler1 );\n    assertNull( old ); // should not be anything...\n    assertEquals( core.getRequestHandlers().get( path ), handler1 );\n   \n    SolrCore c2 = cores.getCore(\"\");\n    c1.close();\n    assertTrue(\"Refcount < 1\", core.getOpenCount() >= 1);\n    assertTrue(\"Handler is closed\", handler1.closed == false);\n    \n    c1 = cores.getCore(\"\");\n    assertTrue(\"Refcount < 2\", core.getOpenCount() >= 2);\n    assertTrue(\"Handler is closed\", handler1.closed == false);\n    \n    c2.close();\n    assertTrue(\"Refcount < 1\", core.getOpenCount() >= 1);\n    assertTrue(\"Handler is closed\", handler1.closed == false);\n\n    c1.close();\n    cores.shutdown();\n    assertTrue(\"Refcount != 0\", core.getOpenCount() == 0);\n    assertTrue(\"Handler not closed\", core.isClosed() && handler1.closed == true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"c28792ff7d1774c306e16afbd44ded91a417049b":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["c28792ff7d1774c306e16afbd44ded91a417049b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["c28792ff7d1774c306e16afbd44ded91a417049b"],"c28792ff7d1774c306e16afbd44ded91a417049b":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}