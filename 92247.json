{"path":"solr/contrib/uima/src/test/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#addDoc(String,String).mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/uima/src/test/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#addDoc(String,String).mjava","pathOld":"solr/contrib/uima/src/test/java/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#addDoc(String,String).mjava","sourceNew":"  private void addDoc(String chain, String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    params.put(UpdateParams.UPDATE_CHAIN, new String[] { chain });\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(), (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n  }\n\n","sourceOld":"  private void addDoc(String chain, String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    params.put(UpdateParams.UPDATE_CHAIN, new String[] { chain });\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(), (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/uima/src/test/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#addDoc(String,String).mjava","pathOld":"solr/contrib/uima/src/test/java/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#addDoc(String,String).mjava","sourceNew":"  private void addDoc(String chain, String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    params.put(UpdateParams.UPDATE_CHAIN, new String[] { chain });\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(), (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n  }\n\n","sourceOld":"  private void addDoc(String chain, String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    params.put(UpdateParams.UPDATE_CHAIN, new String[] { chain });\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(), (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"042e4d934397657ba04c82b46cc5665076bc5c58","date":1336511170,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/contrib/uima/src/test/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#addDoc(String,String).mjava","pathOld":"solr/contrib/uima/src/test/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#addDoc(String,String).mjava","sourceNew":"  private void addDoc(String chain, String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    params.put(UpdateParams.UPDATE_CHAIN, new String[] { chain });\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(), (SolrParams) mmparams) {\n    };\n\n    UpdateRequestHandler handler = new UpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n  }\n\n","sourceOld":"  private void addDoc(String chain, String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    params.put(UpdateParams.UPDATE_CHAIN, new String[] { chain });\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(), (SolrParams) mmparams) {\n    };\n\n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/uima/src/test/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#addDoc(String,String).mjava","pathOld":"solr/contrib/uima/src/test/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#addDoc(String,String).mjava","sourceNew":"  private void addDoc(String chain, String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<>();\n    params.put(UpdateParams.UPDATE_CHAIN, new String[] { chain });\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(), (SolrParams) mmparams) {\n    };\n\n    UpdateRequestHandler handler = new UpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n  }\n\n","sourceOld":"  private void addDoc(String chain, String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<String, String[]>();\n    params.put(UpdateParams.UPDATE_CHAIN, new String[] { chain });\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(), (SolrParams) mmparams) {\n    };\n\n    UpdateRequestHandler handler = new UpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9f1ec46dc24c2330c5e9dd0edefaede91c962926","date":1480027437,"type":4,"author":"Tommaso Teofili","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/uima/src/test/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#addDoc(String,String).mjava","sourceNew":null,"sourceOld":"  private void addDoc(String chain, String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<>();\n    params.put(UpdateParams.UPDATE_CHAIN, new String[] { chain });\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(), (SolrParams) mmparams) {\n    };\n\n    UpdateRequestHandler handler = new UpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"75babd1dfc2521603bfeb0968042e921d8c6c652","date":1480042089,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/contrib/uima/src/test/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#addDoc(String,String).mjava","sourceNew":null,"sourceOld":"  private void addDoc(String chain, String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<>();\n    params.put(UpdateParams.UPDATE_CHAIN, new String[] { chain });\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(), (SolrParams) mmparams) {\n    };\n\n    UpdateRequestHandler handler = new UpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"727bb765ff2542275f6d31f67be18d7104bae148","date":1480353976,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/contrib/uima/src/test/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorTest#addDoc(String,String).mjava","sourceNew":null,"sourceOld":"  private void addDoc(String chain, String doc) throws Exception {\n    Map<String, String[]> params = new HashMap<>();\n    params.put(UpdateParams.UPDATE_CHAIN, new String[] { chain });\n    MultiMapSolrParams mmparams = new MultiMapSolrParams(params);\n    SolrQueryRequestBase req = new SolrQueryRequestBase(h.getCore(), (SolrParams) mmparams) {\n    };\n\n    UpdateRequestHandler handler = new UpdateRequestHandler();\n    handler.init(null);\n    ArrayList<ContentStream> streams = new ArrayList<>(2);\n    streams.add(new ContentStreamBase.StringStream(doc));\n    req.setContentStreams(streams);\n    handler.handleRequestBody(req, new SolrQueryResponse());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9f1ec46dc24c2330c5e9dd0edefaede91c962926":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["042e4d934397657ba04c82b46cc5665076bc5c58"],"727bb765ff2542275f6d31f67be18d7104bae148":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","75babd1dfc2521603bfeb0968042e921d8c6c652"],"042e4d934397657ba04c82b46cc5665076bc5c58":["c26f00b574427b55127e869b935845554afde1fa"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"75babd1dfc2521603bfeb0968042e921d8c6c652":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","9f1ec46dc24c2330c5e9dd0edefaede91c962926"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["75babd1dfc2521603bfeb0968042e921d8c6c652"]},"commit2Childs":{"9f1ec46dc24c2330c5e9dd0edefaede91c962926":["75babd1dfc2521603bfeb0968042e921d8c6c652"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["9f1ec46dc24c2330c5e9dd0edefaede91c962926","727bb765ff2542275f6d31f67be18d7104bae148","75babd1dfc2521603bfeb0968042e921d8c6c652"],"727bb765ff2542275f6d31f67be18d7104bae148":[],"042e4d934397657ba04c82b46cc5665076bc5c58":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"75babd1dfc2521603bfeb0968042e921d8c6c652":["727bb765ff2542275f6d31f67be18d7104bae148","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c26f00b574427b55127e869b935845554afde1fa":["042e4d934397657ba04c82b46cc5665076bc5c58"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["727bb765ff2542275f6d31f67be18d7104bae148","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}