{"path":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermDocsEnum(IndexReader,Bits,String,BytesRef).mjava","commits":[{"id":"02331260bb246364779cb6f04919ca47900d01bb","date":1343749884,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermDocsEnum(IndexReader,Bits,String,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns {@link DocsEnum} for the specified field &\n   *  term.  This will return null if the field or term does\n   *  not exist. */\n  public static DocsEnum getTermDocsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term) throws IOException {\n    return getTermDocsEnum(r, liveDocs, field, term);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["e19625838dd1a85a437128a16e58c33c668a810d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermDocsEnum(IndexReader,Bits,String,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns {@link DocsEnum} for the specified field &\n   *  term.  This will return null if the field or term does\n   *  not exist. */\n  public static DocsEnum getTermDocsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term) throws IOException {\n    return getTermDocsEnum(r, liveDocs, field, term);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermDocsEnum(IndexReader,Bits,String,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns {@link DocsEnum} for the specified field &\n   *  term.  This will return null if the field or term does\n   *  not exist. */\n  public static DocsEnum getTermDocsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term) throws IOException {\n    return getTermDocsEnum(r, liveDocs, field, term);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e19625838dd1a85a437128a16e58c33c668a810d","date":1344529148,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermDocsEnum(IndexReader,Bits,String,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermDocsEnum(IndexReader,Bits,String,BytesRef).mjava","sourceNew":"  /** Returns {@link DocsEnum} for the specified field &\n   *  term.  This will return null if the field or term does\n   *  not exist. */\n  public static DocsEnum getTermDocsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term) throws IOException {\n    return getTermDocsEnum(r, liveDocs, field, term, DocsEnum.FLAG_FREQS);\n  }\n\n","sourceOld":"  /** Returns {@link DocsEnum} for the specified field &\n   *  term.  This will return null if the field or term does\n   *  not exist. */\n  public static DocsEnum getTermDocsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term) throws IOException {\n    return getTermDocsEnum(r, liveDocs, field, term);\n  }\n\n","bugFix":["02331260bb246364779cb6f04919ca47900d01bb"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermDocsEnum(IndexReader,Bits,String,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermDocsEnum(IndexReader,Bits,String,BytesRef).mjava","sourceNew":"  /** Returns {@link DocsEnum} for the specified field &\n   *  term.  This will return null if the field or term does\n   *  not exist. */\n  public static DocsEnum getTermDocsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term) throws IOException {\n    return getTermDocsEnum(r, liveDocs, field, term, DocsEnum.FLAG_FREQS);\n  }\n\n","sourceOld":"  /** Returns {@link DocsEnum} for the specified field &\n   *  term.  This will return null if the field or term does\n   *  not exist. */\n  public static DocsEnum getTermDocsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term) throws IOException {\n    return getTermDocsEnum(r, liveDocs, field, term);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","date":1344867506,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermDocsEnum(IndexReader,Bits,String,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermDocsEnum(IndexReader,Bits,String,BytesRef).mjava","sourceNew":"  /** Returns {@link DocsEnum} for the specified field &\n   *  term.  This will return null if the field or term does\n   *  not exist. */\n  public static DocsEnum getTermDocsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term) throws IOException {\n    return getTermDocsEnum(r, liveDocs, field, term, DocsEnum.FLAG_FREQS);\n  }\n\n","sourceOld":"  /** Returns {@link DocsEnum} for the specified field &\n   *  term.  This will return null if the field or term does\n   *  not exist. */\n  public static DocsEnum getTermDocsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term) throws IOException {\n    return getTermDocsEnum(r, liveDocs, field, term);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1eb427f2c6beed80d1724555fc1db003ccf3030","date":1417137397,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermDocsEnum(IndexReader,Bits,String,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermDocsEnum(IndexReader,Bits,String,BytesRef).mjava","sourceNew":"  /** Returns {@link DocsEnum} for the specified field and\n   *  term.  This will return null if the field or term does\n   *  not exist. */\n  public static DocsEnum getTermDocsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term) throws IOException {\n    return getTermDocsEnum(r, liveDocs, field, term, DocsEnum.FLAG_FREQS);\n  }\n\n","sourceOld":"  /** Returns {@link DocsEnum} for the specified field &\n   *  term.  This will return null if the field or term does\n   *  not exist. */\n  public static DocsEnum getTermDocsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term) throws IOException {\n    return getTermDocsEnum(r, liveDocs, field, term, DocsEnum.FLAG_FREQS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermDocsEnum(IndexReader,Bits,String,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermDocsEnum(IndexReader,Bits,String,BytesRef).mjava","sourceNew":"  /** Returns {@link PostingsEnum} for the specified field and\n   *  term.  This will return null if the field or term does\n   *  not exist. */\n  public static PostingsEnum getTermDocsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term) throws IOException {\n    return getTermDocsEnum(r, liveDocs, field, term, PostingsEnum.FLAG_FREQS);\n  }\n\n","sourceOld":"  /** Returns {@link DocsEnum} for the specified field and\n   *  term.  This will return null if the field or term does\n   *  not exist. */\n  public static DocsEnum getTermDocsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term) throws IOException {\n    return getTermDocsEnum(r, liveDocs, field, term, DocsEnum.FLAG_FREQS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e73063b92d958076ef4ae8beb5f493e8ccdcecb4","date":1424177215,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermDocsEnum(IndexReader,Bits,String,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermDocsEnum(IndexReader,Bits,String,BytesRef).mjava","sourceNew":"  /** Returns {@link PostingsEnum} for the specified field and\n   *  term.  This will return null if the field or term does\n   *  not exist. */\n  public static PostingsEnum getTermDocsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term) throws IOException {\n    return getTermDocsEnum(r, liveDocs, field, term, PostingsEnum.FREQS);\n  }\n\n","sourceOld":"  /** Returns {@link PostingsEnum} for the specified field and\n   *  term.  This will return null if the field or term does\n   *  not exist. */\n  public static PostingsEnum getTermDocsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term) throws IOException {\n    return getTermDocsEnum(r, liveDocs, field, term, PostingsEnum.FLAG_FREQS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermDocsEnum(IndexReader,String,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiFields#getTermDocsEnum(IndexReader,Bits,String,BytesRef).mjava","sourceNew":"  /** Returns {@link PostingsEnum} for the specified field and\n   *  term.  This will return null if the field or term does\n   *  not exist. */\n  public static PostingsEnum getTermDocsEnum(IndexReader r, String field, BytesRef term) throws IOException {\n    return getTermDocsEnum(r, field, term, PostingsEnum.FREQS);\n  }\n\n","sourceOld":"  /** Returns {@link PostingsEnum} for the specified field and\n   *  term.  This will return null if the field or term does\n   *  not exist. */\n  public static PostingsEnum getTermDocsEnum(IndexReader r, Bits liveDocs, String field, BytesRef term) throws IOException {\n    return getTermDocsEnum(r, liveDocs, field, term, PostingsEnum.FREQS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b1eb427f2c6beed80d1724555fc1db003ccf3030":["e19625838dd1a85a437128a16e58c33c668a810d"],"e19625838dd1a85a437128a16e58c33c668a810d":["02331260bb246364779cb6f04919ca47900d01bb"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["e73063b92d958076ef4ae8beb5f493e8ccdcecb4"],"e73063b92d958076ef4ae8beb5f493e8ccdcecb4":["51f5280f31484820499077f41fcdfe92d527d9dc"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","e19625838dd1a85a437128a16e58c33c668a810d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","02331260bb246364779cb6f04919ca47900d01bb"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","02331260bb246364779cb6f04919ca47900d01bb"],"51f5280f31484820499077f41fcdfe92d527d9dc":["b1eb427f2c6beed80d1724555fc1db003ccf3030"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":["d6f074e73200c07d54f242d3880a8da5a35ff97b","e19625838dd1a85a437128a16e58c33c668a810d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"02331260bb246364779cb6f04919ca47900d01bb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b1eb427f2c6beed80d1724555fc1db003ccf3030":["51f5280f31484820499077f41fcdfe92d527d9dc"],"e19625838dd1a85a437128a16e58c33c668a810d":["b1eb427f2c6beed80d1724555fc1db003ccf3030","c7869f64c874ebf7f317d22c00baf2b6857797a6","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e73063b92d958076ef4ae8beb5f493e8ccdcecb4":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["c7869f64c874ebf7f317d22c00baf2b6857797a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","02331260bb246364779cb6f04919ca47900d01bb"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"51f5280f31484820499077f41fcdfe92d527d9dc":["e73063b92d958076ef4ae8beb5f493e8ccdcecb4"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":[],"02331260bb246364779cb6f04919ca47900d01bb":["e19625838dd1a85a437128a16e58c33c668a810d","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}