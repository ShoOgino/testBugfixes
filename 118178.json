{"path":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestRerankBase#createModelFromFiles(String,String,String).mjava","commits":[{"id":"24c1c003d41edcd662a111a7fa869fe9c97ea18c","date":1483549958,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestRerankBase#createModelFromFiles(String,String,String).mjava","pathOld":"/dev/null","sourceNew":"  public static LTRScoringModel createModelFromFiles(String modelFileName,\n      String featureFileName, String featureStoreName) throws ModelException, Exception {\n    URL url = TestRerankBase.class.getResource(\"/modelExamples/\"\n        + modelFileName);\n    final String modelJson = FileUtils.readFileToString(new File(url.toURI()),\n        \"UTF-8\");\n    final ManagedModelStore ms = getManagedModelStore();\n\n    url = TestRerankBase.class.getResource(\"/featureExamples/\"\n        + featureFileName);\n    final String featureJson = FileUtils.readFileToString(\n        new File(url.toURI()), \"UTF-8\");\n\n    Object parsedFeatureJson = null;\n    try {\n      parsedFeatureJson = ObjectBuilder.fromJSON(featureJson);\n    } catch (final IOException ioExc) {\n      throw new ModelException(\"ObjectBuilder failed parsing json\", ioExc);\n    }\n\n    final ManagedFeatureStore fs = getManagedFeatureStore();\n    // fs.getFeatureStore(null).clear();\n    fs.doDeleteChild(null, featureStoreName); // is this safe??\n    // based on my need to call this I dont think that\n    // \"getNewManagedFeatureStore()\"\n    // is actually returning a new feature store each time\n    fs.applyUpdatesToManagedData(parsedFeatureJson);\n    ms.setManagedFeatureStore(fs); // can we skip this and just use fs directly below?\n\n    final LTRScoringModel ltrScoringModel = ManagedModelStore.fromLTRScoringModelMap(\n        solrResourceLoader, mapFromJson(modelJson), ms.getManagedFeatureStore());\n    ms.addModel(ltrScoringModel);\n    return ltrScoringModel;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"491c9672ec42582fe43960452dbd37f1c80fe0f0","date":1483739222,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestRerankBase#createModelFromFiles(String,String,String).mjava","pathOld":"/dev/null","sourceNew":"  public static LTRScoringModel createModelFromFiles(String modelFileName,\n      String featureFileName, String featureStoreName) throws ModelException, Exception {\n    URL url = TestRerankBase.class.getResource(\"/modelExamples/\"\n        + modelFileName);\n    final String modelJson = FileUtils.readFileToString(new File(url.toURI()),\n        \"UTF-8\");\n    final ManagedModelStore ms = getManagedModelStore();\n\n    url = TestRerankBase.class.getResource(\"/featureExamples/\"\n        + featureFileName);\n    final String featureJson = FileUtils.readFileToString(\n        new File(url.toURI()), \"UTF-8\");\n\n    Object parsedFeatureJson = null;\n    try {\n      parsedFeatureJson = ObjectBuilder.fromJSON(featureJson);\n    } catch (final IOException ioExc) {\n      throw new ModelException(\"ObjectBuilder failed parsing json\", ioExc);\n    }\n\n    final ManagedFeatureStore fs = getManagedFeatureStore();\n    // fs.getFeatureStore(null).clear();\n    fs.doDeleteChild(null, featureStoreName); // is this safe??\n    // based on my need to call this I dont think that\n    // \"getNewManagedFeatureStore()\"\n    // is actually returning a new feature store each time\n    fs.applyUpdatesToManagedData(parsedFeatureJson);\n    ms.setManagedFeatureStore(fs); // can we skip this and just use fs directly below?\n\n    final LTRScoringModel ltrScoringModel = ManagedModelStore.fromLTRScoringModelMap(\n        solrResourceLoader, mapFromJson(modelJson), ms.getManagedFeatureStore());\n    ms.addModel(ltrScoringModel);\n    return ltrScoringModel;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3714bcf66a68a1600e9dd11442fc1b33b62ef088","date":1556832005,"type":3,"author":"noble","isMerge":false,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestRerankBase#createModelFromFiles(String,String,String).mjava","pathOld":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestRerankBase#createModelFromFiles(String,String,String).mjava","sourceNew":"  public static LTRScoringModel createModelFromFiles(String modelFileName,\n      String featureFileName, String featureStoreName) throws ModelException, Exception {\n    URL url = TestRerankBase.class.getResource(\"/modelExamples/\"\n        + modelFileName);\n    final String modelJson = FileUtils.readFileToString(new File(url.toURI()),\n        \"UTF-8\");\n    final ManagedModelStore ms = getManagedModelStore();\n\n    url = TestRerankBase.class.getResource(\"/featureExamples/\"\n        + featureFileName);\n    final String featureJson = FileUtils.readFileToString(\n        new File(url.toURI()), \"UTF-8\");\n\n    Object parsedFeatureJson = null;\n    try {\n      parsedFeatureJson = Utils.fromJSONString(featureJson);\n    } catch (final Exception ioExc) {\n      throw new ModelException(\"ObjectBuilder failed parsing json\", ioExc);\n    }\n\n    final ManagedFeatureStore fs = getManagedFeatureStore();\n    // fs.getFeatureStore(null).clear();\n    fs.doDeleteChild(null, featureStoreName); // is this safe??\n    // based on my need to call this I dont think that\n    // \"getNewManagedFeatureStore()\"\n    // is actually returning a new feature store each time\n    fs.applyUpdatesToManagedData(parsedFeatureJson);\n    ms.setManagedFeatureStore(fs); // can we skip this and just use fs directly below?\n\n    final LTRScoringModel ltrScoringModel = ManagedModelStore.fromLTRScoringModelMap(\n        solrResourceLoader, mapFromJson(modelJson), ms.getManagedFeatureStore());\n    ms.addModel(ltrScoringModel);\n    return ltrScoringModel;\n  }\n\n","sourceOld":"  public static LTRScoringModel createModelFromFiles(String modelFileName,\n      String featureFileName, String featureStoreName) throws ModelException, Exception {\n    URL url = TestRerankBase.class.getResource(\"/modelExamples/\"\n        + modelFileName);\n    final String modelJson = FileUtils.readFileToString(new File(url.toURI()),\n        \"UTF-8\");\n    final ManagedModelStore ms = getManagedModelStore();\n\n    url = TestRerankBase.class.getResource(\"/featureExamples/\"\n        + featureFileName);\n    final String featureJson = FileUtils.readFileToString(\n        new File(url.toURI()), \"UTF-8\");\n\n    Object parsedFeatureJson = null;\n    try {\n      parsedFeatureJson = ObjectBuilder.fromJSON(featureJson);\n    } catch (final IOException ioExc) {\n      throw new ModelException(\"ObjectBuilder failed parsing json\", ioExc);\n    }\n\n    final ManagedFeatureStore fs = getManagedFeatureStore();\n    // fs.getFeatureStore(null).clear();\n    fs.doDeleteChild(null, featureStoreName); // is this safe??\n    // based on my need to call this I dont think that\n    // \"getNewManagedFeatureStore()\"\n    // is actually returning a new feature store each time\n    fs.applyUpdatesToManagedData(parsedFeatureJson);\n    ms.setManagedFeatureStore(fs); // can we skip this and just use fs directly below?\n\n    final LTRScoringModel ltrScoringModel = ManagedModelStore.fromLTRScoringModelMap(\n        solrResourceLoader, mapFromJson(modelJson), ms.getManagedFeatureStore());\n    ms.addModel(ltrScoringModel);\n    return ltrScoringModel;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"24c1c003d41edcd662a111a7fa869fe9c97ea18c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3714bcf66a68a1600e9dd11442fc1b33b62ef088":["24c1c003d41edcd662a111a7fa869fe9c97ea18c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3714bcf66a68a1600e9dd11442fc1b33b62ef088"],"491c9672ec42582fe43960452dbd37f1c80fe0f0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","24c1c003d41edcd662a111a7fa869fe9c97ea18c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["24c1c003d41edcd662a111a7fa869fe9c97ea18c","491c9672ec42582fe43960452dbd37f1c80fe0f0"],"24c1c003d41edcd662a111a7fa869fe9c97ea18c":["3714bcf66a68a1600e9dd11442fc1b33b62ef088","491c9672ec42582fe43960452dbd37f1c80fe0f0"],"3714bcf66a68a1600e9dd11442fc1b33b62ef088":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"491c9672ec42582fe43960452dbd37f1c80fe0f0":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","491c9672ec42582fe43960452dbd37f1c80fe0f0"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}