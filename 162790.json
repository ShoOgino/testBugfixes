{"path":"modules/queryparser/src/java/org/apache/lucene/queryparser/xml/DOMUtils#getNonBlankTextOrFail(Element).mjava","commits":[{"id":"251550f5d19b526a76f8c5126ae7bb2d22cf8935","date":1315202008,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/java/org/apache/lucene/queryparser/xml/DOMUtils#getNonBlankTextOrFail(Element).mjava","pathOld":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/DOMUtils#getNonBlankTextOrFail(Element).mjava","sourceNew":"  public static String getNonBlankTextOrFail(Element e) throws ParserException {\n    String v = getText(e);\n    if (null != v)\n      v = v.trim();\n    if (null == v || 0 == v.length()) {\n      throw new ParserException(e.getTagName() + \" has no text\");\n    }\n    return v;\n  }\n\n","sourceOld":"  public static String getNonBlankTextOrFail(Element e) throws ParserException {\n    String v = getText(e);\n    if (null != v)\n      v = v.trim();\n    if (null == v || 0 == v.length()) {\n      throw new ParserException(e.getTagName() + \" has no text\");\n    }\n    return v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/DOMUtils#getNonBlankTextOrFail(Element).mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/xml/DOMUtils#getNonBlankTextOrFail(Element).mjava","sourceNew":"  public static String getNonBlankTextOrFail(Element e) throws ParserException {\n    String v = getText(e);\n    if (null != v)\n      v = v.trim();\n    if (null == v || 0 == v.length()) {\n      throw new ParserException(e.getTagName() + \" has no text\");\n    }\n    return v;\n  }\n\n","sourceOld":"  public static String getNonBlankTextOrFail(Element e) throws ParserException {\n    String v = getText(e);\n    if (null != v)\n      v = v.trim();\n    if (null == v || 0 == v.length()) {\n      throw new ParserException(e.getTagName() + \" has no text\");\n    }\n    return v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["251550f5d19b526a76f8c5126ae7bb2d22cf8935"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"251550f5d19b526a76f8c5126ae7bb2d22cf8935":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["251550f5d19b526a76f8c5126ae7bb2d22cf8935"],"251550f5d19b526a76f8c5126ae7bb2d22cf8935":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}