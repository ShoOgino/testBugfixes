{"path":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#add_doc(String...).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#add_doc(String...).mjava","pathOld":"solr/src/test/org/apache/solr/request/SimpleFacetsTest#add_doc(String...).mjava","sourceNew":"  // committing randomly gives different looking segments each time\n  static void add_doc(String... fieldsAndValues) {\n    do {\n      pendingDocs.add(fieldsAndValues);      \n    } while (random.nextInt(100) <= random_dupe_percent);\n\n    // assertU(adoc(fieldsAndValues));\n    // randomCommit(random_commit_percent);\n  }\n\n","sourceOld":"  // committing randomly gives different looking segments each time\n  static void add_doc(String... fieldsAndValues) {\n    do {\n      pendingDocs.add(fieldsAndValues);      \n    } while (random.nextInt(100) <= random_dupe_percent);\n\n    // assertU(adoc(fieldsAndValues));\n    // randomCommit(random_commit_percent);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#add_doc(String...).mjava","pathOld":"solr/src/test/org/apache/solr/request/SimpleFacetsTest#add_doc(String...).mjava","sourceNew":"  // committing randomly gives different looking segments each time\n  static void add_doc(String... fieldsAndValues) {\n    do {\n      pendingDocs.add(fieldsAndValues);      \n    } while (random.nextInt(100) <= random_dupe_percent);\n\n    // assertU(adoc(fieldsAndValues));\n    // randomCommit(random_commit_percent);\n  }\n\n","sourceOld":"  // committing randomly gives different looking segments each time\n  static void add_doc(String... fieldsAndValues) {\n    do {\n      pendingDocs.add(fieldsAndValues);      \n    } while (random.nextInt(100) <= random_dupe_percent);\n\n    // assertU(adoc(fieldsAndValues));\n    // randomCommit(random_commit_percent);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#add_doc(String...).mjava","pathOld":"solr/src/test/org/apache/solr/request/SimpleFacetsTest#add_doc(String...).mjava","sourceNew":"  // committing randomly gives different looking segments each time\n  static void add_doc(String... fieldsAndValues) {\n    do {\n      pendingDocs.add(fieldsAndValues);      \n    } while (random.nextInt(100) <= random_dupe_percent);\n\n    // assertU(adoc(fieldsAndValues));\n    // randomCommit(random_commit_percent);\n  }\n\n","sourceOld":"  // committing randomly gives different looking segments each time\n  static void add_doc(String... fieldsAndValues) {\n    do {\n      pendingDocs.add(fieldsAndValues);      \n    } while (random.nextInt(100) <= random_dupe_percent);\n\n    // assertU(adoc(fieldsAndValues));\n    // randomCommit(random_commit_percent);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#add_doc(String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#add_doc(String...).mjava","sourceNew":"  // committing randomly gives different looking segments each time\n  static void add_doc(String... fieldsAndValues) {\n    do {\n      pendingDocs.add(fieldsAndValues);      \n    } while (random().nextInt(100) <= random_dupe_percent);\n\n    // assertU(adoc(fieldsAndValues));\n    // randomCommit(random_commit_percent);\n  }\n\n","sourceOld":"  // committing randomly gives different looking segments each time\n  static void add_doc(String... fieldsAndValues) {\n    do {\n      pendingDocs.add(fieldsAndValues);      \n    } while (random.nextInt(100) <= random_dupe_percent);\n\n    // assertU(adoc(fieldsAndValues));\n    // randomCommit(random_commit_percent);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"03298305b51c91a6b0221a7b134ba26578934d39","date":1418532926,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#add_doc(String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#add_doc(String...).mjava","sourceNew":"  // committing randomly gives different looking segments each time\n  static void add_doc(String... fieldsAndValues) {\n    do {\n      //do our own copy-field:\n      List<String> fieldsAndValuesList = new ArrayList<>(Arrays.asList(fieldsAndValues));\n      int idx = fieldsAndValuesList.indexOf(\"a_tdt\");\n      if (idx >= 0) {\n        fieldsAndValuesList.add(\"a_drf\");\n        fieldsAndValuesList.add(fieldsAndValuesList.get(idx + 1));//copy\n      }\n      idx = fieldsAndValuesList.indexOf(\"bday\");\n      if (idx >= 0) {\n        fieldsAndValuesList.add(\"bday_drf\");\n        fieldsAndValuesList.add(fieldsAndValuesList.get(idx + 1));//copy\n      }\n      fieldsAndValues = fieldsAndValuesList.toArray(new String[fieldsAndValuesList.size()]);\n\n      pendingDocs.add(fieldsAndValues);      \n    } while (random().nextInt(100) <= random_dupe_percent);\n\n    // assertU(adoc(fieldsAndValues));\n    // randomCommit(random_commit_percent);\n  }\n\n","sourceOld":"  // committing randomly gives different looking segments each time\n  static void add_doc(String... fieldsAndValues) {\n    do {\n      pendingDocs.add(fieldsAndValues);      \n    } while (random().nextInt(100) <= random_dupe_percent);\n\n    // assertU(adoc(fieldsAndValues));\n    // randomCommit(random_commit_percent);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"03298305b51c91a6b0221a7b134ba26578934d39":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["03298305b51c91a6b0221a7b134ba26578934d39"]},"commit2Childs":{"03298305b51c91a6b0221a7b134ba26578934d39":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["03298305b51c91a6b0221a7b134ba26578934d39"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}