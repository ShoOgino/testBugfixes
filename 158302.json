{"path":"modules/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#assertPostingListExists(String,String,IndexReader).mjava","commits":[{"id":"89f15687f60bd49cd3d9de427e85c17fd9397d61","date":1309381327,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#assertPostingListExists(String,String,IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  private void assertPostingListExists(String field, String text, IndexReader ir) throws IOException {\n    DocsEnum de = MultiFields.getTermDocsEnum(ir, null, field, new BytesRef(text));\n    assertTrue(de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#assertPostingListExists(String,String,IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  private void assertPostingListExists(String field, String text, IndexReader ir) throws IOException {\n    DocsEnum de = MultiFields.getTermDocsEnum(ir, null, field, new BytesRef(text));\n    assertTrue(de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#assertPostingListExists(String,String,IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  private void assertPostingListExists(String field, String text, IndexReader ir) throws IOException {\n    DocsEnum de = MultiFields.getTermDocsEnum(ir, null, field, new BytesRef(text));\n    assertTrue(de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"872cff1d3a554e0cd64014cd97f88d3002b0f491","date":1323024658,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#assertPostingListExists(String,String,IndexReader).mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#assertPostingListExists(String,String,IndexReader).mjava","sourceNew":"  private void assertPostingListExists(String field, String text, IndexReader ir) throws IOException {\n    DocsEnum de = _TestUtil.docs(random, ir, field, new BytesRef(text), null, null, false);\n    assertTrue(de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","sourceOld":"  private void assertPostingListExists(String field, String text, IndexReader ir) throws IOException {\n    DocsEnum de = MultiFields.getTermDocsEnum(ir, null, field, new BytesRef(text));\n    assertTrue(de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b65b350ca9588f9fc76ce7d6804160d06c45ff42","date":1323026297,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#assertPostingListExists(String,String,IndexReader).mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#assertPostingListExists(String,String,IndexReader).mjava","sourceNew":"  private void assertPostingListExists(String field, String text, IndexReader ir) throws IOException {\n    DocsEnum de = _TestUtil.docs(random, ir, field, new BytesRef(text), null, null, false);\n    assertTrue(de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","sourceOld":"  private void assertPostingListExists(String field, String text, IndexReader ir) throws IOException {\n    DocsEnum de = MultiFields.getTermDocsEnum(ir, null, field, new BytesRef(text));\n    assertTrue(de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#assertPostingListExists(String,String,IndexReader).mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#assertPostingListExists(String,String,IndexReader).mjava","sourceNew":"  private void assertPostingListExists(String field, String text, IndexReader ir) throws IOException {\n    DocsEnum de = _TestUtil.docs(random(), ir, field, new BytesRef(text), null, null, false);\n    assertTrue(de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","sourceOld":"  private void assertPostingListExists(String field, String text, IndexReader ir) throws IOException {\n    DocsEnum de = _TestUtil.docs(random, ir, field, new BytesRef(text), null, null, false);\n    assertTrue(de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","bugFix":null,"bugIntro":["02331260bb246364779cb6f04919ca47900d01bb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#assertPostingListExists(String,String,IndexReader).mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#assertPostingListExists(String,String,IndexReader).mjava","sourceNew":"  private void assertPostingListExists(String field, String text, IndexReader ir) throws IOException {\n    DocsEnum de = _TestUtil.docs(random(), ir, field, new BytesRef(text), null, null, false);\n    assertTrue(de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","sourceOld":"  private void assertPostingListExists(String field, String text, IndexReader ir) throws IOException {\n    DocsEnum de = _TestUtil.docs(random(), ir, field, new BytesRef(text), null, null, false);\n    assertTrue(de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"b65b350ca9588f9fc76ce7d6804160d06c45ff42":["89f15687f60bd49cd3d9de427e85c17fd9397d61","872cff1d3a554e0cd64014cd97f88d3002b0f491"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"872cff1d3a554e0cd64014cd97f88d3002b0f491":["89f15687f60bd49cd3d9de427e85c17fd9397d61"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["872cff1d3a554e0cd64014cd97f88d3002b0f491"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","89f15687f60bd49cd3d9de427e85c17fd9397d61"],"89f15687f60bd49cd3d9de427e85c17fd9397d61":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","89f15687f60bd49cd3d9de427e85c17fd9397d61"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b65b350ca9588f9fc76ce7d6804160d06c45ff42":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d083e83f225b11e5fdd900e83d26ddb385b6955c","89f15687f60bd49cd3d9de427e85c17fd9397d61","817d8435e9135b756f08ce6710ab0baac51bdf88"],"872cff1d3a554e0cd64014cd97f88d3002b0f491":["b65b350ca9588f9fc76ce7d6804160d06c45ff42","629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"89f15687f60bd49cd3d9de427e85c17fd9397d61":["b65b350ca9588f9fc76ce7d6804160d06c45ff42","872cff1d3a554e0cd64014cd97f88d3002b0f491","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b65b350ca9588f9fc76ce7d6804160d06c45ff42","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}