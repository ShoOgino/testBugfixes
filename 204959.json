{"path":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldPhraseListTest#test2ConcatTermsIndexB().mjava","commits":[{"id":"eb8d4dc4aa7b4ad5d3b0b7c13d4b0aa74958be2b","date":1253187690,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldPhraseListTest#test2ConcatTermsIndexB().mjava","pathOld":"/dev/null","sourceNew":"  public void test2ConcatTermsIndexB() throws Exception {\n    // 01 12 23 (offsets)\n    // ab|ba|ab\n    //  0  1  2 (positions)\n    make1d1fIndexB( \"abab\" );\n\n    FieldQuery fq = new FieldQuery( tq( \"ab\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    assertEquals( 2, fpl.phraseList.size() );\n    assertEquals( \"ab(1.0)((0,2))\", fpl.phraseList.get( 0 ).toString() );\n    assertEquals( \"ab(1.0)((2,4))\", fpl.phraseList.get( 1 ).toString() );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldPhraseListTest#test2ConcatTermsIndexB().mjava","pathOld":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldPhraseListTest#test2ConcatTermsIndexB().mjava","sourceNew":"  public void test2ConcatTermsIndexB() throws Exception {\n    // 01 12 23 (offsets)\n    // ab|ba|ab\n    //  0  1  2 (positions)\n    make1d1fIndexB( \"abab\" );\n\n    FieldQuery fq = new FieldQuery( tq( \"ab\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    assertEquals( 2, fpl.phraseList.size() );\n    assertEquals( \"ab(1.0)((0,2))\", fpl.phraseList.get( 0 ).toString() );\n    assertEquals( \"ab(1.0)((2,4))\", fpl.phraseList.get( 1 ).toString() );\n  }\n\n","sourceOld":"  public void test2ConcatTermsIndexB() throws Exception {\n    // 01 12 23 (offsets)\n    // ab|ba|ab\n    //  0  1  2 (positions)\n    make1d1fIndexB( \"abab\" );\n\n    FieldQuery fq = new FieldQuery( tq( \"ab\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    assertEquals( 2, fpl.phraseList.size() );\n    assertEquals( \"ab(1.0)((0,2))\", fpl.phraseList.get( 0 ).toString() );\n    assertEquals( \"ab(1.0)((2,4))\", fpl.phraseList.get( 1 ).toString() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"eb8d4dc4aa7b4ad5d3b0b7c13d4b0aa74958be2b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["eb8d4dc4aa7b4ad5d3b0b7c13d4b0aa74958be2b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eb8d4dc4aa7b4ad5d3b0b7c13d4b0aa74958be2b"],"eb8d4dc4aa7b4ad5d3b0b7c13d4b0aa74958be2b":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}