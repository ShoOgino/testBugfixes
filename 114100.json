{"path":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#createIndex().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#createIndex().mjava","pathOld":"solr/src/test/org/apache/solr/request/SimpleFacetsTest#createIndex().mjava","sourceNew":"  static void createIndex() {\n    indexSimpleFacetCounts();\n    indexDateFacets();\n    indexFacetSingleValued();\n    indexFacetPrefixMultiValued();\n    indexFacetPrefixSingleValued();\n    \n   Collections.shuffle(pendingDocs, random);\n    for (String[] doc : pendingDocs) {\n      assertU(adoc(doc));\n      randomCommit(random_commit_percent);\n    }\n    assertU(commit());\n  }\n\n","sourceOld":"  static void createIndex() {\n    indexSimpleFacetCounts();\n    indexDateFacets();\n    indexFacetSingleValued();\n    indexFacetPrefixMultiValued();\n    indexFacetPrefixSingleValued();\n    \n   Collections.shuffle(pendingDocs, random);\n    for (String[] doc : pendingDocs) {\n      assertU(adoc(doc));\n      randomCommit(random_commit_percent);\n    }\n    assertU(commit());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#createIndex().mjava","pathOld":"solr/src/test/org/apache/solr/request/SimpleFacetsTest#createIndex().mjava","sourceNew":"  static void createIndex() {\n    indexSimpleFacetCounts();\n    indexDateFacets();\n    indexFacetSingleValued();\n    indexFacetPrefixMultiValued();\n    indexFacetPrefixSingleValued();\n    \n   Collections.shuffle(pendingDocs, random);\n    for (String[] doc : pendingDocs) {\n      assertU(adoc(doc));\n      randomCommit(random_commit_percent);\n    }\n    assertU(commit());\n  }\n\n","sourceOld":"  static void createIndex() {\n    indexSimpleFacetCounts();\n    indexDateFacets();\n    indexFacetSingleValued();\n    indexFacetPrefixMultiValued();\n    indexFacetPrefixSingleValued();\n    \n   Collections.shuffle(pendingDocs, random);\n    for (String[] doc : pendingDocs) {\n      assertU(adoc(doc));\n      randomCommit(random_commit_percent);\n    }\n    assertU(commit());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#createIndex().mjava","pathOld":"solr/src/test/org/apache/solr/request/SimpleFacetsTest#createIndex().mjava","sourceNew":"  static void createIndex() {\n    indexSimpleFacetCounts();\n    indexDateFacets();\n    indexFacetSingleValued();\n    indexFacetPrefixMultiValued();\n    indexFacetPrefixSingleValued();\n    \n   Collections.shuffle(pendingDocs, random);\n    for (String[] doc : pendingDocs) {\n      assertU(adoc(doc));\n      randomCommit(random_commit_percent);\n    }\n    assertU(commit());\n  }\n\n","sourceOld":"  static void createIndex() {\n    indexSimpleFacetCounts();\n    indexDateFacets();\n    indexFacetSingleValued();\n    indexFacetPrefixMultiValued();\n    indexFacetPrefixSingleValued();\n    \n   Collections.shuffle(pendingDocs, random);\n    for (String[] doc : pendingDocs) {\n      assertU(adoc(doc));\n      randomCommit(random_commit_percent);\n    }\n    assertU(commit());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c750c9942b5f894af0f235b503bec55f2db8d1d3","date":1329857574,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#createIndex().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#createIndex().mjava","sourceNew":"  static void createIndex() throws Exception {\n    doEmptyFacetCounts();   // try on empty index\n\n    indexSimpleFacetCounts();\n    indexDateFacets();\n    indexFacetSingleValued();\n    indexFacetPrefixMultiValued();\n    indexFacetPrefixSingleValued();\n    \n   Collections.shuffle(pendingDocs, random);\n    for (String[] doc : pendingDocs) {\n      assertU(adoc(doc));\n      randomCommit(random_commit_percent);\n    }\n    assertU(commit());\n  }\n\n","sourceOld":"  static void createIndex() {\n    indexSimpleFacetCounts();\n    indexDateFacets();\n    indexFacetSingleValued();\n    indexFacetPrefixMultiValued();\n    indexFacetPrefixSingleValued();\n    \n   Collections.shuffle(pendingDocs, random);\n    for (String[] doc : pendingDocs) {\n      assertU(adoc(doc));\n      randomCommit(random_commit_percent);\n    }\n    assertU(commit());\n  }\n\n","bugFix":["98a8a68e6714cb8742c790308b9f5180d63417d4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#createIndex().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#createIndex().mjava","sourceNew":"  static void createIndex() throws Exception {\n    doEmptyFacetCounts();   // try on empty index\n\n    indexSimpleFacetCounts();\n    indexDateFacets();\n    indexFacetSingleValued();\n    indexFacetPrefixMultiValued();\n    indexFacetPrefixSingleValued();\n    \n   Collections.shuffle(pendingDocs, random);\n    for (String[] doc : pendingDocs) {\n      assertU(adoc(doc));\n      randomCommit(random_commit_percent);\n    }\n    assertU(commit());\n  }\n\n","sourceOld":"  static void createIndex() {\n    indexSimpleFacetCounts();\n    indexDateFacets();\n    indexFacetSingleValued();\n    indexFacetPrefixMultiValued();\n    indexFacetPrefixSingleValued();\n    \n   Collections.shuffle(pendingDocs, random);\n    for (String[] doc : pendingDocs) {\n      assertU(adoc(doc));\n      randomCommit(random_commit_percent);\n    }\n    assertU(commit());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dc4cbb07b89a0942261a14579fdfc607af58137c","date":1331160678,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#createIndex().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#createIndex().mjava","sourceNew":"  static void createIndex() throws Exception {\n    doEmptyFacetCounts();   // try on empty index\n\n    indexSimpleFacetCounts();\n    indexDateFacets();\n    indexFacetSingleValued();\n    indexFacetPrefixMultiValued();\n    indexFacetPrefixSingleValued();\n    indexSimpleGroupedFacetCounts();\n\n    Collections.shuffle(pendingDocs, random);\n    for (String[] doc : pendingDocs) {\n      assertU(adoc(doc));\n      randomCommit(random_commit_percent);\n    }\n    assertU(commit());\n  }\n\n","sourceOld":"  static void createIndex() throws Exception {\n    doEmptyFacetCounts();   // try on empty index\n\n    indexSimpleFacetCounts();\n    indexDateFacets();\n    indexFacetSingleValued();\n    indexFacetPrefixMultiValued();\n    indexFacetPrefixSingleValued();\n    \n   Collections.shuffle(pendingDocs, random);\n    for (String[] doc : pendingDocs) {\n      assertU(adoc(doc));\n      randomCommit(random_commit_percent);\n    }\n    assertU(commit());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#createIndex().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#createIndex().mjava","sourceNew":"  static void createIndex() throws Exception {\n    doEmptyFacetCounts();   // try on empty index\n\n    indexSimpleFacetCounts();\n    indexDateFacets();\n    indexFacetSingleValued();\n    indexFacetPrefixMultiValued();\n    indexFacetPrefixSingleValued();\n    indexSimpleGroupedFacetCounts();\n\n    Collections.shuffle(pendingDocs, random);\n    for (String[] doc : pendingDocs) {\n      assertU(adoc(doc));\n      randomCommit(random_commit_percent);\n    }\n    assertU(commit());\n  }\n\n","sourceOld":"  static void createIndex() throws Exception {\n    doEmptyFacetCounts();   // try on empty index\n\n    indexSimpleFacetCounts();\n    indexDateFacets();\n    indexFacetSingleValued();\n    indexFacetPrefixMultiValued();\n    indexFacetPrefixSingleValued();\n    \n   Collections.shuffle(pendingDocs, random);\n    for (String[] doc : pendingDocs) {\n      assertU(adoc(doc));\n      randomCommit(random_commit_percent);\n    }\n    assertU(commit());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#createIndex().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#createIndex().mjava","sourceNew":"  static void createIndex() throws Exception {\n    doEmptyFacetCounts();   // try on empty index\n\n    indexSimpleFacetCounts();\n    indexDateFacets();\n    indexFacetSingleValued();\n    indexFacetPrefixMultiValued();\n    indexFacetPrefixSingleValued();\n    indexSimpleGroupedFacetCounts();\n\n    Collections.shuffle(pendingDocs, random());\n    for (String[] doc : pendingDocs) {\n      assertU(adoc(doc));\n      randomCommit(random_commit_percent);\n    }\n    assertU(commit());\n  }\n\n","sourceOld":"  static void createIndex() throws Exception {\n    doEmptyFacetCounts();   // try on empty index\n\n    indexSimpleFacetCounts();\n    indexDateFacets();\n    indexFacetSingleValued();\n    indexFacetPrefixMultiValued();\n    indexFacetPrefixSingleValued();\n    indexSimpleGroupedFacetCounts();\n\n    Collections.shuffle(pendingDocs, random);\n    for (String[] doc : pendingDocs) {\n      assertU(adoc(doc));\n      randomCommit(random_commit_percent);\n    }\n    assertU(commit());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52c5280f6286c7546ab75b72c663f7bb1dc10e96","date":1427372570,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#createIndex().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#createIndex().mjava","sourceNew":"  static void createIndex() throws Exception {\n    doEmptyFacetCounts();   // try on empty index\n\n    indexSimpleFacetCounts();\n    indexDateFacets();\n    indexFacetSingleValued();\n    indexFacetPrefixMultiValued();\n    indexFacetPrefixSingleValued();\n    indexFacetContains();\n    indexSimpleGroupedFacetCounts();\n\n    Collections.shuffle(pendingDocs, random());\n    for (String[] doc : pendingDocs) {\n      assertU(adoc(doc));\n      randomCommit(random_commit_percent);\n    }\n    assertU(commit());\n  }\n\n","sourceOld":"  static void createIndex() throws Exception {\n    doEmptyFacetCounts();   // try on empty index\n\n    indexSimpleFacetCounts();\n    indexDateFacets();\n    indexFacetSingleValued();\n    indexFacetPrefixMultiValued();\n    indexFacetPrefixSingleValued();\n    indexSimpleGroupedFacetCounts();\n\n    Collections.shuffle(pendingDocs, random());\n    for (String[] doc : pendingDocs) {\n      assertU(adoc(doc));\n      randomCommit(random_commit_percent);\n    }\n    assertU(commit());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#createIndex().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#createIndex().mjava","sourceNew":"  static void createIndex() throws Exception {\n    doEmptyFacetCounts();   // try on empty index\n\n    indexSimpleFacetCounts();\n    indexDateFacets();\n    indexFacetSingleValued();\n    indexFacetPrefixMultiValued();\n    indexFacetPrefixSingleValued();\n    indexFacetContains();\n    indexSimpleGroupedFacetCounts();\n\n    Collections.shuffle(pendingDocs, random());\n    for (String[] doc : pendingDocs) {\n      assertU(adoc(doc));\n      randomCommit(random_commit_percent);\n    }\n    assertU(commit());\n  }\n\n","sourceOld":"  static void createIndex() throws Exception {\n    doEmptyFacetCounts();   // try on empty index\n\n    indexSimpleFacetCounts();\n    indexDateFacets();\n    indexFacetSingleValued();\n    indexFacetPrefixMultiValued();\n    indexFacetPrefixSingleValued();\n    indexSimpleGroupedFacetCounts();\n\n    Collections.shuffle(pendingDocs, random());\n    for (String[] doc : pendingDocs) {\n      assertU(adoc(doc));\n      randomCommit(random_commit_percent);\n    }\n    assertU(commit());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","dc4cbb07b89a0942261a14579fdfc607af58137c"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["629c38c4ae4e303d0617e05fbfe508140b32f0a3","52c5280f6286c7546ab75b72c663f7bb1dc10e96"],"dc4cbb07b89a0942261a14579fdfc607af58137c":["c750c9942b5f894af0f235b503bec55f2db8d1d3"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["c26f00b574427b55127e869b935845554afde1fa","c750c9942b5f894af0f235b503bec55f2db8d1d3"],"52c5280f6286c7546ab75b72c663f7bb1dc10e96":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["dc4cbb07b89a0942261a14579fdfc607af58137c"],"c750c9942b5f894af0f235b503bec55f2db8d1d3":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["52c5280f6286c7546ab75b72c663f7bb1dc10e96"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["38e3b736c7ca086d61b7dbb841c905ee115490da"],"dc4cbb07b89a0942261a14579fdfc607af58137c":["38e3b736c7ca086d61b7dbb841c905ee115490da","629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"52c5280f6286c7546ab75b72c663f7bb1dc10e96":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","c750c9942b5f894af0f235b503bec55f2db8d1d3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","52c5280f6286c7546ab75b72c663f7bb1dc10e96"],"c750c9942b5f894af0f235b503bec55f2db8d1d3":["dc4cbb07b89a0942261a14579fdfc607af58137c","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}