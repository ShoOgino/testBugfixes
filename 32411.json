{"path":"lucene/src/test/org/apache/lucene/index/TestNorms#doTestNorms(Random,Directory).mjava","commits":[{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNorms#doTestNorms(Random,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNorms#doTestNorms(Directory).mjava","sourceNew":"  private void doTestNorms(Random random, Directory dir) throws IOException {\n    for (int i=0; i<5; i++) {\n      addDocs(random, dir,12,true);\n      verifyIndex(dir);\n      modifyNormsForF1(dir);\n      verifyIndex(dir);\n      addDocs(random, dir,12,false);\n      verifyIndex(dir);\n      modifyNormsForF1(dir);\n      verifyIndex(dir);\n    }\n  }\n\n","sourceOld":"  private void doTestNorms(Directory dir) throws IOException {\n    for (int i=0; i<5; i++) {\n      addDocs(dir,12,true);\n      verifyIndex(dir);\n      modifyNormsForF1(dir);\n      verifyIndex(dir);\n      addDocs(dir,12,false);\n      verifyIndex(dir);\n      modifyNormsForF1(dir);\n      verifyIndex(dir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNorms#doTestNorms(Random,Directory).mjava","pathOld":"/dev/null","sourceNew":"  private void doTestNorms(Random random, Directory dir) throws IOException {\n    for (int i=0; i<5; i++) {\n      addDocs(random, dir,12,true);\n      verifyIndex(dir);\n      modifyNormsForF1(dir);\n      verifyIndex(dir);\n      addDocs(random, dir,12,false);\n      verifyIndex(dir);\n      modifyNormsForF1(dir);\n      verifyIndex(dir);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cca56866c19997e28ef073622656669c15210540","date":1307449014,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNorms#doTestNorms(Random,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNorms#doTestNorms(Random,Directory).mjava","sourceNew":"  private void doTestNorms(Random random, Directory dir) throws IOException {\n    int num = (TEST_NIGHTLY ? 5 : 1) * RANDOM_MULTIPLIER;\n    for (int i=0; i<num; i++) {\n      addDocs(random, dir,12,true);\n      verifyIndex(dir);\n      modifyNormsForF1(dir);\n      verifyIndex(dir);\n      addDocs(random, dir,12,false);\n      verifyIndex(dir);\n      modifyNormsForF1(dir);\n      verifyIndex(dir);\n    }\n  }\n\n","sourceOld":"  private void doTestNorms(Random random, Directory dir) throws IOException {\n    for (int i=0; i<5; i++) {\n      addDocs(random, dir,12,true);\n      verifyIndex(dir);\n      modifyNormsForF1(dir);\n      verifyIndex(dir);\n      addDocs(random, dir,12,false);\n      verifyIndex(dir);\n      modifyNormsForF1(dir);\n      verifyIndex(dir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f83af14a2a8131b14d7aee6274c740334e0363d3","date":1307579822,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNorms#doTestNorms(Random,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNorms#doTestNorms(Random,Directory).mjava","sourceNew":"  private void doTestNorms(Random random, Directory dir) throws IOException {\n    int num = atLeast(1);\n    for (int i=0; i<num; i++) {\n      addDocs(random, dir,12,true);\n      verifyIndex(dir);\n      modifyNormsForF1(dir);\n      verifyIndex(dir);\n      addDocs(random, dir,12,false);\n      verifyIndex(dir);\n      modifyNormsForF1(dir);\n      verifyIndex(dir);\n    }\n  }\n\n","sourceOld":"  private void doTestNorms(Random random, Directory dir) throws IOException {\n    int num = (TEST_NIGHTLY ? 5 : 1) * RANDOM_MULTIPLIER;\n    for (int i=0; i<num; i++) {\n      addDocs(random, dir,12,true);\n      verifyIndex(dir);\n      modifyNormsForF1(dir);\n      verifyIndex(dir);\n      addDocs(random, dir,12,false);\n      verifyIndex(dir);\n      modifyNormsForF1(dir);\n      verifyIndex(dir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNorms#doTestNorms(Random,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNorms#doTestNorms(Random,Directory).mjava","sourceNew":"  private void doTestNorms(Random random, Directory dir) throws IOException {\n    int num = atLeast(1);\n    for (int i=0; i<num; i++) {\n      addDocs(random, dir,12,true);\n      verifyIndex(dir);\n      modifyNormsForF1(dir);\n      verifyIndex(dir);\n      addDocs(random, dir,12,false);\n      verifyIndex(dir);\n      modifyNormsForF1(dir);\n      verifyIndex(dir);\n    }\n  }\n\n","sourceOld":"  private void doTestNorms(Random random, Directory dir) throws IOException {\n    for (int i=0; i<5; i++) {\n      addDocs(random, dir,12,true);\n      verifyIndex(dir);\n      modifyNormsForF1(dir);\n      verifyIndex(dir);\n      addDocs(random, dir,12,false);\n      verifyIndex(dir);\n      modifyNormsForF1(dir);\n      verifyIndex(dir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNorms#doTestNorms(Random,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNorms#doTestNorms(Random,Directory).mjava","sourceNew":"  private void doTestNorms(Random random, Directory dir) throws IOException {\n    int num = atLeast(1);\n    for (int i=0; i<num; i++) {\n      addDocs(random, dir,12,true);\n      verifyIndex(dir);\n      modifyNormsForF1(dir);\n      verifyIndex(dir);\n      addDocs(random, dir,12,false);\n      verifyIndex(dir);\n      modifyNormsForF1(dir);\n      verifyIndex(dir);\n    }\n  }\n\n","sourceOld":"  private void doTestNorms(Random random, Directory dir) throws IOException {\n    for (int i=0; i<5; i++) {\n      addDocs(random, dir,12,true);\n      verifyIndex(dir);\n      modifyNormsForF1(dir);\n      verifyIndex(dir);\n      addDocs(random, dir,12,false);\n      verifyIndex(dir);\n      modifyNormsForF1(dir);\n      verifyIndex(dir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4122a26e1fd0457a340616673a3d3aada370f713","date":1322955654,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestNorms#doTestNorms(Random,Directory).mjava","sourceNew":null,"sourceOld":"  private void doTestNorms(Random random, Directory dir) throws IOException {\n    int num = atLeast(1);\n    for (int i=0; i<num; i++) {\n      addDocs(random, dir,12,true);\n      verifyIndex(dir);\n      modifyNormsForF1(dir);\n      verifyIndex(dir);\n      addDocs(random, dir,12,false);\n      verifyIndex(dir);\n      modifyNormsForF1(dir);\n      verifyIndex(dir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestNorms#doTestNorms(Random,Directory).mjava","sourceNew":null,"sourceOld":"  private void doTestNorms(Random random, Directory dir) throws IOException {\n    int num = atLeast(1);\n    for (int i=0; i<num; i++) {\n      addDocs(random, dir,12,true);\n      verifyIndex(dir);\n      modifyNormsForF1(dir);\n      verifyIndex(dir);\n      addDocs(random, dir,12,false);\n      verifyIndex(dir);\n      modifyNormsForF1(dir);\n      verifyIndex(dir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestNorms#doTestNorms(Random,Directory).mjava","sourceNew":null,"sourceOld":"  private void doTestNorms(Random random, Directory dir) throws IOException {\n    int num = atLeast(1);\n    for (int i=0; i<num; i++) {\n      addDocs(random, dir,12,true);\n      verifyIndex(dir);\n      modifyNormsForF1(dir);\n      verifyIndex(dir);\n      addDocs(random, dir,12,false);\n      verifyIndex(dir);\n      modifyNormsForF1(dir);\n      verifyIndex(dir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["b21422ff1d1d56499dec481f193b402e5e8def5b","f83af14a2a8131b14d7aee6274c740334e0363d3"],"f83af14a2a8131b14d7aee6274c740334e0363d3":["cca56866c19997e28ef073622656669c15210540"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["f83af14a2a8131b14d7aee6274c740334e0363d3","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["b21422ff1d1d56499dec481f193b402e5e8def5b","f83af14a2a8131b14d7aee6274c740334e0363d3"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["f83af14a2a8131b14d7aee6274c740334e0363d3","4122a26e1fd0457a340616673a3d3aada370f713"],"4122a26e1fd0457a340616673a3d3aada370f713":["f83af14a2a8131b14d7aee6274c740334e0363d3"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b21422ff1d1d56499dec481f193b402e5e8def5b"],"cca56866c19997e28ef073622656669c15210540":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3615ce4a1f785ae1b779244de52c6a7d99227e60"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"f83af14a2a8131b14d7aee6274c740334e0363d3":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","3615ce4a1f785ae1b779244de52c6a7d99227e60","4122a26e1fd0457a340616673a3d3aada370f713"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b21422ff1d1d56499dec481f193b402e5e8def5b"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4122a26e1fd0457a340616673a3d3aada370f713":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"b21422ff1d1d56499dec481f193b402e5e8def5b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cca56866c19997e28ef073622656669c15210540"],"cca56866c19997e28ef073622656669c15210540":["f83af14a2a8131b14d7aee6274c740334e0363d3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}