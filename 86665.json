{"path":"src/java/org/apache/lucene/search/PhraseQuery#add(Term).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/PhraseQuery#add(Term).mjava","pathOld":"/dev/null","sourceNew":"  /** Adds a term to the end of the query phrase. */\n  public final void add(Term term) {\n    if (terms.size() == 0)\n      field = term.field();\n    else if (term.field() != field)\n      throw new IllegalArgumentException\n\t(\"All phrase terms must be in the same field: \" + term);\n\n    terms.addElement(term);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9c7454619ea6a0710272c1dd947345cee64489f6","date":1026927484,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/PhraseQuery#add(Term).mjava","pathOld":"src/java/org/apache/lucene/search/PhraseQuery#add(Term).mjava","sourceNew":"  /** Adds a term to the end of the query phrase. */\n  public void add(Term term) {\n    if (terms.size() == 0)\n      field = term.field();\n    else if (term.field() != field)\n      throw new IllegalArgumentException\n\t(\"All phrase terms must be in the same field: \" + term);\n\n    terms.addElement(term);\n  }\n\n","sourceOld":"  /** Adds a term to the end of the query phrase. */\n  public final void add(Term term) {\n    if (terms.size() == 0)\n      field = term.field();\n    else if (term.field() != field)\n      throw new IllegalArgumentException\n\t(\"All phrase terms must be in the same field: \" + term);\n\n    terms.addElement(term);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4988178cfbf5117763a956901f39d3efa3282e72","date":1095241130,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/PhraseQuery#add(Term).mjava","pathOld":"src/java/org/apache/lucene/search/PhraseQuery#add(Term).mjava","sourceNew":"  /**\n   * Adds a term to the end of the query phrase.\n   * The relative position of the term is the one immediately after the last term added.\n   */\n  public void add(Term term) {\n    int position = 0;\n    if(positions.size() > 0)\n        position = ((Integer) positions.lastElement()).intValue() + 1;\n    \n    add(term, position);\n  }\n\n","sourceOld":"  /** Adds a term to the end of the query phrase. */\n  public void add(Term term) {\n    if (terms.size() == 0)\n      field = term.field();\n    else if (term.field() != field)\n      throw new IllegalArgumentException\n\t(\"All phrase terms must be in the same field: \" + term);\n\n    terms.addElement(term);\n  }\n\n","bugFix":null,"bugIntro":["6fb5dc223475059e18daa29ecbc9ee827971f72c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"df8dadf22de84eeb1294e70792e292ecf8ded564","date":1130577981,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/PhraseQuery#add(Term).mjava","pathOld":"src/java/org/apache/lucene/search/PhraseQuery#add(Term).mjava","sourceNew":"  /**\n   * Adds a term to the end of the query phrase.\n   * The relative position of the term is the one immediately after the last term added.\n   */\n  public void add(Term term) {\n    int position = 0;\n    if(positions.size() > 0)\n        position = ((Integer) positions.lastElement()).intValue() + 1;\n\n    add(term, position);\n  }\n\n","sourceOld":"  /**\n   * Adds a term to the end of the query phrase.\n   * The relative position of the term is the one immediately after the last term added.\n   */\n  public void add(Term term) {\n    int position = 0;\n    if(positions.size() > 0)\n        position = ((Integer) positions.lastElement()).intValue() + 1;\n    \n    add(term, position);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"19f758d6efad251890e720eb5370329f6ab5b509","date":1217253519,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/PhraseQuery#add(Term).mjava","pathOld":"src/java/org/apache/lucene/search/PhraseQuery#add(Term).mjava","sourceNew":"  /**\n   * Adds a term to the end of the query phrase.\n   * The relative position of the term is the one immediately after the last term added.\n   */\n  public void add(Term term) {\n    int position = 0;\n    if(positions.size() > 0)\n        position = ((Integer) positions.get(positions.size()-1)).intValue() + 1;\n\n    add(term, position);\n  }\n\n","sourceOld":"  /**\n   * Adds a term to the end of the query phrase.\n   * The relative position of the term is the one immediately after the last term added.\n   */\n  public void add(Term term) {\n    int position = 0;\n    if(positions.size() > 0)\n        position = ((Integer) positions.lastElement()).intValue() + 1;\n\n    add(term, position);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ef82ff03e4016c705811b2658e81471a645c0e49","date":1255900293,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/PhraseQuery#add(Term).mjava","pathOld":"src/java/org/apache/lucene/search/PhraseQuery#add(Term).mjava","sourceNew":"  /**\n   * Adds a term to the end of the query phrase.\n   * The relative position of the term is the one immediately after the last term added.\n   */\n  public void add(Term term) {\n    int position = 0;\n    if(positions.size() > 0)\n        position = positions.get(positions.size()-1).intValue() + 1;\n\n    add(term, position);\n  }\n\n","sourceOld":"  /**\n   * Adds a term to the end of the query phrase.\n   * The relative position of the term is the one immediately after the last term added.\n   */\n  public void add(Term term) {\n    int position = 0;\n    if(positions.size() > 0)\n        position = ((Integer) positions.get(positions.size()-1)).intValue() + 1;\n\n    add(term, position);\n  }\n\n","bugFix":null,"bugIntro":["6fb5dc223475059e18daa29ecbc9ee827971f72c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/PhraseQuery#add(Term).mjava","pathOld":"src/java/org/apache/lucene/search/PhraseQuery#add(Term).mjava","sourceNew":"  /**\n   * Adds a term to the end of the query phrase.\n   * The relative position of the term is the one immediately after the last term added.\n   */\n  public void add(Term term) {\n    int position = 0;\n    if(positions.size() > 0)\n        position = positions.get(positions.size()-1).intValue() + 1;\n\n    add(term, position);\n  }\n\n","sourceOld":"  /**\n   * Adds a term to the end of the query phrase.\n   * The relative position of the term is the one immediately after the last term added.\n   */\n  public void add(Term term) {\n    int position = 0;\n    if(positions.size() > 0)\n        position = positions.get(positions.size()-1).intValue() + 1;\n\n    add(term, position);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"19f758d6efad251890e720eb5370329f6ab5b509":["df8dadf22de84eeb1294e70792e292ecf8ded564"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"df8dadf22de84eeb1294e70792e292ecf8ded564":["4988178cfbf5117763a956901f39d3efa3282e72"],"ef82ff03e4016c705811b2658e81471a645c0e49":["19f758d6efad251890e720eb5370329f6ab5b509"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9c7454619ea6a0710272c1dd947345cee64489f6":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ef82ff03e4016c705811b2658e81471a645c0e49"],"4988178cfbf5117763a956901f39d3efa3282e72":["9c7454619ea6a0710272c1dd947345cee64489f6"]},"commit2Childs":{"19f758d6efad251890e720eb5370329f6ab5b509":["ef82ff03e4016c705811b2658e81471a645c0e49"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["9c7454619ea6a0710272c1dd947345cee64489f6"],"df8dadf22de84eeb1294e70792e292ecf8ded564":["19f758d6efad251890e720eb5370329f6ab5b509"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"ef82ff03e4016c705811b2658e81471a645c0e49":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9c7454619ea6a0710272c1dd947345cee64489f6":["4988178cfbf5117763a956901f39d3efa3282e72"],"4988178cfbf5117763a956901f39d3efa3282e72":["df8dadf22de84eeb1294e70792e292ecf8ded564"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}