{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50CompoundReader#openInput(String,IOContext).mjava","commits":[{"id":"7f936b67ab4a872d22231aae4f63608e7f411071","date":1412266152,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50CompoundReader#openInput(String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/CompoundFileDirectory#openInput(String,IOContext).mjava","sourceNew":"  @Override\n  public IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    final String id = IndexFileNames.stripSegmentName(name);\n    final FileEntry entry = entries.get(id);\n    if (entry == null) {\n      throw new FileNotFoundException(\"No sub-file with id \" + id + \" found (fileName=\" + name + \" files: \" + entries.keySet() + \")\");\n    }\n    return handle.slice(name, entry.offset, entry.length);\n  }\n\n","sourceOld":"  @Override\n  public synchronized IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    assert !openForWrite;\n    final String id = IndexFileNames.stripSegmentName(name);\n    final FileEntry entry = entries.get(id);\n    if (entry == null) {\n      throw new FileNotFoundException(\"No sub-file with id \" + id + \" found (fileName=\" + name + \" files: \" + entries.keySet() + \")\");\n    }\n    return handle.slice(name, entry.offset, entry.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50CompoundReader#openInput(String,IOContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    final String id = IndexFileNames.stripSegmentName(name);\n    final FileEntry entry = entries.get(id);\n    if (entry == null) {\n      throw new FileNotFoundException(\"No sub-file with id \" + id + \" found (fileName=\" + name + \" files: \" + entries.keySet() + \")\");\n    }\n    return handle.slice(name, entry.offset, entry.length);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71488d7f5786ae87541276121ecb69705a11a295","date":1465498138,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50CompoundReader#openInput(String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50CompoundReader#openInput(String,IOContext).mjava","sourceNew":"  @Override\n  public IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    final String id = IndexFileNames.stripSegmentName(name);\n    final FileEntry entry = entries.get(id);\n    if (entry == null) {\n      String datFileName = IndexFileNames.segmentFileName(segmentName, \"\", Lucene50CompoundFormat.DATA_EXTENSION);\n      throw new FileNotFoundException(\"No sub-file with id \" + id + \" found in compound file \\\"\" + datFileName + \"\\\" (fileName=\" + name + \" files: \" + entries.keySet() + \")\");\n    }\n    return handle.slice(name, entry.offset, entry.length);\n  }\n\n","sourceOld":"  @Override\n  public IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    final String id = IndexFileNames.stripSegmentName(name);\n    final FileEntry entry = entries.get(id);\n    if (entry == null) {\n      throw new FileNotFoundException(\"No sub-file with id \" + id + \" found (fileName=\" + name + \" files: \" + entries.keySet() + \")\");\n    }\n    return handle.slice(name, entry.offset, entry.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50CompoundReader#openInput(String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50CompoundReader#openInput(String,IOContext).mjava","sourceNew":"  @Override\n  public IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    final String id = IndexFileNames.stripSegmentName(name);\n    final FileEntry entry = entries.get(id);\n    if (entry == null) {\n      String datFileName = IndexFileNames.segmentFileName(segmentName, \"\", Lucene50CompoundFormat.DATA_EXTENSION);\n      throw new FileNotFoundException(\"No sub-file with id \" + id + \" found in compound file \\\"\" + datFileName + \"\\\" (fileName=\" + name + \" files: \" + entries.keySet() + \")\");\n    }\n    return handle.slice(name, entry.offset, entry.length);\n  }\n\n","sourceOld":"  @Override\n  public IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    final String id = IndexFileNames.stripSegmentName(name);\n    final FileEntry entry = entries.get(id);\n    if (entry == null) {\n      throw new FileNotFoundException(\"No sub-file with id \" + id + \" found (fileName=\" + name + \" files: \" + entries.keySet() + \")\");\n    }\n    return handle.slice(name, entry.offset, entry.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9bb9a29a5e71a90295f175df8919802993142c9a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7f936b67ab4a872d22231aae4f63608e7f411071"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"71488d7f5786ae87541276121ecb69705a11a295":["9bb9a29a5e71a90295f175df8919802993142c9a"],"7f936b67ab4a872d22231aae4f63608e7f411071":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["9bb9a29a5e71a90295f175df8919802993142c9a","71488d7f5786ae87541276121ecb69705a11a295"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71488d7f5786ae87541276121ecb69705a11a295"]},"commit2Childs":{"9bb9a29a5e71a90295f175df8919802993142c9a":["71488d7f5786ae87541276121ecb69705a11a295","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9bb9a29a5e71a90295f175df8919802993142c9a","7f936b67ab4a872d22231aae4f63608e7f411071"],"71488d7f5786ae87541276121ecb69705a11a295":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7f936b67ab4a872d22231aae4f63608e7f411071":["9bb9a29a5e71a90295f175df8919802993142c9a"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}