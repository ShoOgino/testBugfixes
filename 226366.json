{"path":"contrib/analyzers/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#setMaxShingleSize(int).mjava","commits":[{"id":"c3e328a6f2b163170d23e06008798fb82c27af8b","date":1206825093,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#setMaxShingleSize(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Set the max shingle size (default: 2)\n   *\n   * @param maxShingleSize max size of output shingles\n   */\n  public void setMaxShingleSize(int maxShingleSize) {\n    if (maxShingleSize < 2) {\n      throw new IllegalArgumentException(\"Max shingle size must be >= 2\");\n    }\n    shingles = new StringBuffer[maxShingleSize];\n    for (int i = 0; i < shingles.length; i++) {\n      shingles[i] = new StringBuffer();\n    }\n    this.maxShingleSize = maxShingleSize;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#setMaxShingleSize(int).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#setMaxShingleSize(int).mjava","sourceNew":"  /**\n   * Set the max shingle size (default: 2)\n   *\n   * @param maxShingleSize max size of output shingles\n   */\n  public void setMaxShingleSize(int maxShingleSize) {\n    if (maxShingleSize < 2) {\n      throw new IllegalArgumentException(\"Max shingle size must be >= 2\");\n    }\n    shingles = new StringBuffer[maxShingleSize];\n    for (int i = 0; i < shingles.length; i++) {\n      shingles[i] = new StringBuffer();\n    }\n    this.maxShingleSize = maxShingleSize;\n  }\n\n","sourceOld":"  /**\n   * Set the max shingle size (default: 2)\n   *\n   * @param maxShingleSize max size of output shingles\n   */\n  public void setMaxShingleSize(int maxShingleSize) {\n    if (maxShingleSize < 2) {\n      throw new IllegalArgumentException(\"Max shingle size must be >= 2\");\n    }\n    shingles = new StringBuffer[maxShingleSize];\n    for (int i = 0; i < shingles.length; i++) {\n      shingles[i] = new StringBuffer();\n    }\n    this.maxShingleSize = maxShingleSize;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["c3e328a6f2b163170d23e06008798fb82c27af8b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"c3e328a6f2b163170d23e06008798fb82c27af8b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c3e328a6f2b163170d23e06008798fb82c27af8b"],"c3e328a6f2b163170d23e06008798fb82c27af8b":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}