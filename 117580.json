{"path":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockSkipReader#trim(int).mjava","commits":[{"id":"8081d5018e8846bf4080f2809432c759996e749f","date":1344206372,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockSkipReader#trim(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Trim original docFreq to tell skipReader read proper number of skip points.\n   *\n   * Since our definition in BlockSkip* is a little different from MultiLevelSkip*\n   * This trimed docFreq will prevent skipReader from:\n   * 1. silly reading a non-existed skip point after the last block boundary\n   * 2. moving into the vInt block\n   *\n   */\n  protected int trim(int df) {\n    return df % blockSize == 0? df - 1: df;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2ac1ee1c4b858b7699821a938b8a5da1af20228","date":1345467405,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockSkipReader#trim(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockSkipReader#trim(int).mjava","sourceNew":"  /**\n   * Trim original docFreq to tell skipReader read proper number of skip points.\n   *\n   * Since our definition in BlockSkip* is a little different from MultiLevelSkip*\n   * This trimmed docFreq will prevent skipReader from:\n   * 1. silly reading a non-existed skip point after the last block boundary\n   * 2. moving into the vInt block\n   *\n   */\n  protected int trim(int df) {\n    return df % blockSize == 0? df - 1: df;\n  }\n\n","sourceOld":"  /**\n   * Trim original docFreq to tell skipReader read proper number of skip points.\n   *\n   * Since our definition in BlockSkip* is a little different from MultiLevelSkip*\n   * This trimed docFreq will prevent skipReader from:\n   * 1. silly reading a non-existed skip point after the last block boundary\n   * 2. moving into the vInt block\n   *\n   */\n  protected int trim(int df) {\n    return df % blockSize == 0? df - 1: df;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8615860cb50aefb8eebca1d1b3893dbe21cf126","date":1345550448,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockSkipReader#trim(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Trim original docFreq to tell skipReader read proper number of skip points.\n   *\n   * Since our definition in BlockSkip* is a little different from MultiLevelSkip*\n   * This trimmed docFreq will prevent skipReader from:\n   * 1. silly reading a non-existed skip point after the last block boundary\n   * 2. moving into the vInt block\n   *\n   */\n  protected int trim(int df) {\n    return df % blockSize == 0? df - 1: df;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockSkipReader#trim(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Trim original docFreq to tell skipReader read proper number of skip points.\n   *\n   * Since our definition in BlockSkip* is a little different from MultiLevelSkip*\n   * This trimmed docFreq will prevent skipReader from:\n   * 1. silly reading a non-existed skip point after the last block boundary\n   * 2. moving into the vInt block\n   *\n   */\n  protected int trim(int df) {\n    return df % blockSize == 0? df - 1: df;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockSkipReader#trim(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockSkipReader#trim(int).mjava","sourceNew":"  /**\n   * Trim original docFreq to tell skipReader read proper number of skip points.\n   *\n   * Since our definition in BlockSkip* is a little different from MultiLevelSkip*\n   * This trimmed docFreq will prevent skipReader from:\n   * 1. silly reading a non-existed skip point after the last block boundary\n   * 2. moving into the vInt block\n   *\n   */\n  protected int trim(int df) {\n    return df % blockSize == 0? df - 1: df;\n  }\n\n","sourceOld":"  /**\n   * Trim original docFreq to tell skipReader read proper number of skip points.\n   *\n   * Since our definition in BlockSkip* is a little different from MultiLevelSkip*\n   * This trimmed docFreq will prevent skipReader from:\n   * 1. silly reading a non-existed skip point after the last block boundary\n   * 2. moving into the vInt block\n   *\n   */\n  protected int trim(int df) {\n    return df % blockSize == 0? df - 1: df;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"001b25b42373b22a52f399dbf072f1224632e8e6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f8615860cb50aefb8eebca1d1b3893dbe21cf126":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f2ac1ee1c4b858b7699821a938b8a5da1af20228"],"8081d5018e8846bf4080f2809432c759996e749f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f2ac1ee1c4b858b7699821a938b8a5da1af20228":["8081d5018e8846bf4080f2809432c759996e749f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"]},"commit2Childs":{"001b25b42373b22a52f399dbf072f1224632e8e6":[],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["001b25b42373b22a52f399dbf072f1224632e8e6","f8615860cb50aefb8eebca1d1b3893dbe21cf126","8081d5018e8846bf4080f2809432c759996e749f"],"f8615860cb50aefb8eebca1d1b3893dbe21cf126":["001b25b42373b22a52f399dbf072f1224632e8e6","3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"8081d5018e8846bf4080f2809432c759996e749f":["f2ac1ee1c4b858b7699821a938b8a5da1af20228"],"f2ac1ee1c4b858b7699821a938b8a5da1af20228":["f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["001b25b42373b22a52f399dbf072f1224632e8e6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}