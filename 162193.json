{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestCapitalizationFilter#assertCapitalizesTo(Tokenizer,String[],boolean,CharArraySet,boolean,Collection[char[]],int,int,int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestCapitalizationFilter#assertCapitalizesTo(Tokenizer,String[],boolean,CharArraySet,boolean,Collection[char[]],int,int,int).mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestCapitalizationFilter#assertCapitalizesTo(Tokenizer,String[],boolean,CharArraySet,boolean,Collection[char[]],int,int,int).mjava","sourceNew":"  static void assertCapitalizesTo(Tokenizer tokenizer, String expected[],\n      boolean onlyFirstWord, CharArraySet keep, boolean forceFirstLetter,\n      Collection<char[]> okPrefix, int minWordLength, int maxWordCount,\n      int maxTokenLength) throws IOException {\n    CapitalizationFilter filter = new CapitalizationFilter(tokenizer, onlyFirstWord, keep, \n        forceFirstLetter, okPrefix, minWordLength, maxWordCount, maxTokenLength);\n    assertTokenStreamContents(filter, expected);    \n  }\n\n","sourceOld":"  static void assertCapitalizesTo(Tokenizer tokenizer, String expected[],\n      boolean onlyFirstWord, CharArraySet keep, boolean forceFirstLetter,\n      Collection<char[]> okPrefix, int minWordLength, int maxWordCount,\n      int maxTokenLength) throws IOException {\n    CapitalizationFilter filter = new CapitalizationFilter(tokenizer, onlyFirstWord, keep, \n        forceFirstLetter, okPrefix, minWordLength, maxWordCount, maxTokenLength);\n    assertTokenStreamContents(filter, expected);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}