{"path":"lucene/test-framework/src/java/org/apache/lucene/analysis/BaseTokenStreamTestCase#checkRandomData(Random,Analyzer,int,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/BaseTokenStreamTestCase#checkRandomData(Random,Analyzer,int,int).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/analysis/BaseTokenStreamTestCase#checkRandomData(Random,Analyzer,int,int).mjava","sourceNew":"  public static void checkRandomData(Random random, Analyzer a, int iterations, int maxWordLength) throws IOException {\n    checkRandomData(random, a, iterations, maxWordLength, random.nextBoolean());\n  }\n\n","sourceOld":"  public static void checkRandomData(Random random, Analyzer a, int iterations, int maxWordLength) throws IOException {\n    checkRandomData(random, a, iterations, maxWordLength, random.nextBoolean());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"47777586dd4c026834be0b2cc454d527cf8884b3","date":1330348390,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/BaseTokenStreamTestCase#checkRandomData(Random,Analyzer,int,int).mjava","sourceNew":null,"sourceOld":"  public static void checkRandomData(Random random, Analyzer a, int iterations, int maxWordLength) throws IOException {\n    checkRandomData(random, a, iterations, maxWordLength, random.nextBoolean());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":4,"author":"Ryan McKinley","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/BaseTokenStreamTestCase#checkRandomData(Random,Analyzer,int,int).mjava","sourceNew":null,"sourceOld":"  public static void checkRandomData(Random random, Analyzer a, int iterations, int maxWordLength) throws IOException {\n    checkRandomData(random, a, iterations, maxWordLength, random.nextBoolean());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"48c24874200e9de5384198d657ad311c531ba55e","date":1332298447,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/BaseTokenStreamTestCase#checkRandomData(Random,Analyzer,int,int).mjava","pathOld":"/dev/null","sourceNew":"  /** utility method for blasting tokenstreams with data to make sure they don't do anything crazy */\n  public static void checkRandomData(Random random, Analyzer a, int iterations, int maxWordLength) throws IOException {\n    checkRandomData(random, a, iterations, maxWordLength, false);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"888c2d6bca1edd8d9293631d6e1d188b036e0f05","date":1334076894,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/BaseTokenStreamTestCase#checkRandomData(Random,Analyzer,int,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/BaseTokenStreamTestCase#checkRandomData(Random,Analyzer,int,int).mjava","sourceNew":"  /** utility method for blasting tokenstreams with data to make sure they don't do anything crazy */\n  public static void checkRandomData(Random random, Analyzer a, int iterations, int maxWordLength) throws IOException {\n    checkRandomData(random, a, iterations, maxWordLength, false, true);\n  }\n\n","sourceOld":"  /** utility method for blasting tokenstreams with data to make sure they don't do anything crazy */\n  public static void checkRandomData(Random random, Analyzer a, int iterations, int maxWordLength) throws IOException {\n    checkRandomData(random, a, iterations, maxWordLength, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e","date":1334174049,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/BaseTokenStreamTestCase#checkRandomData(Random,Analyzer,int,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/BaseTokenStreamTestCase#checkRandomData(Random,Analyzer,int,int).mjava","sourceNew":"  /** utility method for blasting tokenstreams with data to make sure they don't do anything crazy */\n  public static void checkRandomData(Random random, Analyzer a, int iterations, int maxWordLength) throws IOException {\n    checkRandomData(random, a, iterations, maxWordLength, false, true);\n  }\n\n","sourceOld":"  /** utility method for blasting tokenstreams with data to make sure they don't do anything crazy */\n  public static void checkRandomData(Random random, Analyzer a, int iterations, int maxWordLength) throws IOException {\n    checkRandomData(random, a, iterations, maxWordLength, false);\n  }\n\n","bugFix":["48c24874200e9de5384198d657ad311c531ba55e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"888c2d6bca1edd8d9293631d6e1d188b036e0f05":["48c24874200e9de5384198d657ad311c531ba55e"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","47777586dd4c026834be0b2cc454d527cf8884b3"],"48c24874200e9de5384198d657ad311c531ba55e":["47777586dd4c026834be0b2cc454d527cf8884b3"],"ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e":["48c24874200e9de5384198d657ad311c531ba55e","888c2d6bca1edd8d9293631d6e1d188b036e0f05"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"47777586dd4c026834be0b2cc454d527cf8884b3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e"]},"commit2Childs":{"888c2d6bca1edd8d9293631d6e1d188b036e0f05":["ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"48c24874200e9de5384198d657ad311c531ba55e":["888c2d6bca1edd8d9293631d6e1d188b036e0f05","ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e"],"ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","47777586dd4c026834be0b2cc454d527cf8884b3"],"47777586dd4c026834be0b2cc454d527cf8884b3":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","48c24874200e9de5384198d657ad311c531ba55e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}