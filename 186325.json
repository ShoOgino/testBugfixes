{"path":"lucene/core/src/java/org/apache/lucene/analysis/AnalyzerWrapper#AnalyzerWrapper().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/AnalyzerWrapper#AnalyzerWrapper().mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/AnalyzerWrapper#AnalyzerWrapper().mjava","sourceNew":"  /**\n   * Creates a new AnalyzerWrapper.  Since the {@link Analyzer.ReuseStrategy} of\n   * the wrapped Analyzers are unknown, {@link Analyzer.PerFieldReuseStrategy} is assumed\n   */\n  protected AnalyzerWrapper() {\n    super(new PerFieldReuseStrategy());\n  }\n\n","sourceOld":"  /**\n   * Creates a new AnalyzerWrapper.  Since the {@link Analyzer.ReuseStrategy} of\n   * the wrapped Analyzers are unknown, {@link Analyzer.PerFieldReuseStrategy} is assumed\n   */\n  protected AnalyzerWrapper() {\n    super(new PerFieldReuseStrategy());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38061899d760e06a12fe186bc1f09ca9ff0e64a6","date":1376491296,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/AnalyzerWrapper#AnalyzerWrapper().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/AnalyzerWrapper#AnalyzerWrapper().mjava","sourceNew":"  /**\n   * Creates a new AnalyzerWrapper.  Since the {@link Analyzer.ReuseStrategy} of\n   * the wrapped Analyzers are unknown, {@link #PER_FIELD_REUSE_STRATEGY} is assumed.\n   * @deprecated Use {@link #AnalyzerWrapper(Analyzer.ReuseStrategy)}\n   * and specify a valid {@link Analyzer.ReuseStrategy}, probably retrieved from the\n   * wrapped analyzer using {@link #getReuseStrategy()}.\n   */\n  @Deprecated\n  protected AnalyzerWrapper() {\n    this(PER_FIELD_REUSE_STRATEGY);\n  }\n\n","sourceOld":"  /**\n   * Creates a new AnalyzerWrapper.  Since the {@link Analyzer.ReuseStrategy} of\n   * the wrapped Analyzers are unknown, {@link Analyzer.PerFieldReuseStrategy} is assumed\n   */\n  protected AnalyzerWrapper() {\n    super(new PerFieldReuseStrategy());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/AnalyzerWrapper#AnalyzerWrapper().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/AnalyzerWrapper#AnalyzerWrapper().mjava","sourceNew":"  /**\n   * Creates a new AnalyzerWrapper.  Since the {@link Analyzer.ReuseStrategy} of\n   * the wrapped Analyzers are unknown, {@link #PER_FIELD_REUSE_STRATEGY} is assumed.\n   * @deprecated Use {@link #AnalyzerWrapper(Analyzer.ReuseStrategy)}\n   * and specify a valid {@link Analyzer.ReuseStrategy}, probably retrieved from the\n   * wrapped analyzer using {@link #getReuseStrategy()}.\n   */\n  @Deprecated\n  protected AnalyzerWrapper() {\n    this(PER_FIELD_REUSE_STRATEGY);\n  }\n\n","sourceOld":"  /**\n   * Creates a new AnalyzerWrapper.  Since the {@link Analyzer.ReuseStrategy} of\n   * the wrapped Analyzers are unknown, {@link Analyzer.PerFieldReuseStrategy} is assumed\n   */\n  protected AnalyzerWrapper() {\n    super(new PerFieldReuseStrategy());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e6076d5869e894e98558285d9c9be9179d93921","date":1404559951,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/AnalyzerWrapper#AnalyzerWrapper().mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates a new AnalyzerWrapper.  Since the {@link Analyzer.ReuseStrategy} of\n   * the wrapped Analyzers are unknown, {@link #PER_FIELD_REUSE_STRATEGY} is assumed.\n   * @deprecated Use {@link #AnalyzerWrapper(Analyzer.ReuseStrategy)}\n   * and specify a valid {@link Analyzer.ReuseStrategy}, probably retrieved from the\n   * wrapped analyzer using {@link #getReuseStrategy()}.\n   */\n  @Deprecated\n  protected AnalyzerWrapper() {\n    this(PER_FIELD_REUSE_STRATEGY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38061899d760e06a12fe186bc1f09ca9ff0e64a6":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"6e6076d5869e894e98558285d9c9be9179d93921":["38061899d760e06a12fe186bc1f09ca9ff0e64a6"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","38061899d760e06a12fe186bc1f09ca9ff0e64a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6e6076d5869e894e98558285d9c9be9179d93921"]},"commit2Childs":{"38061899d760e06a12fe186bc1f09ca9ff0e64a6":["6e6076d5869e894e98558285d9c9be9179d93921","3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"6e6076d5869e894e98558285d9c9be9179d93921":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["38061899d760e06a12fe186bc1f09ca9ff0e64a6","3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}