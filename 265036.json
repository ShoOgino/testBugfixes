{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer#EdgeNGramTokenizer(Version,int,int).mjava","commits":[{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer#EdgeNGramTokenizer(Version,int,int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer#EdgeNGramTokenizer(Version,Reader,int,int).mjava","sourceNew":"  /**\n   * Creates EdgeNGramTokenizer that can generate n-grams in the sizes of the given range\n   *\n   * @param version the Lucene match version\n   * @param minGram the smallest n-gram to generate\n   * @param maxGram the largest n-gram to generate\n   */\n  public EdgeNGramTokenizer(Version version, int minGram, int maxGram) {\n    super(version, minGram, maxGram, true);\n  }\n\n","sourceOld":"  /**\n   * Creates EdgeNGramTokenizer that can generate n-grams in the sizes of the given range\n   *\n   * @param version the Lucene match version\n   * @param input {@link Reader} holding the input to be tokenized\n   * @param minGram the smallest n-gram to generate\n   * @param maxGram the largest n-gram to generate\n   */\n  public EdgeNGramTokenizer(Version version, Reader input, int minGram, int maxGram) {\n    super(version, input, minGram, maxGram, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"379db3ad24c4f0214f30a122265a6d6be003a99d","date":1407537768,"type":5,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer#EdgeNGramTokenizer(int,int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer#EdgeNGramTokenizer(Version,int,int).mjava","sourceNew":"  /**\n   * Creates EdgeNGramTokenizer that can generate n-grams in the sizes of the given range\n   *\n   * @param minGram the smallest n-gram to generate\n   * @param maxGram the largest n-gram to generate\n   */\n  public EdgeNGramTokenizer(int minGram, int maxGram) {\n    super(minGram, maxGram, true);\n  }\n\n","sourceOld":"  /**\n   * Creates EdgeNGramTokenizer that can generate n-grams in the sizes of the given range\n   *\n   * @param version the Lucene match version\n   * @param minGram the smallest n-gram to generate\n   * @param maxGram the largest n-gram to generate\n   */\n  public EdgeNGramTokenizer(Version version, int minGram, int maxGram) {\n    super(version, minGram, maxGram, true);\n  }\n\n","bugFix":null,"bugIntro":["e4ad57577191b2431362044f3135e10a3c0dc1f8"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"379db3ad24c4f0214f30a122265a6d6be003a99d","date":1407537768,"type":6,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/Lucene43EdgeNGramTokenizer#Lucene43EdgeNGramTokenizer(int,int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer#EdgeNGramTokenizer(Version,int,int).mjava","sourceNew":"  /**\n   * Creates EdgeNGramTokenizer that can generate n-grams in the sizes of the given range\n   *\n   * @param minGram the smallest n-gram to generate\n   * @param maxGram the largest n-gram to generate\n   */\n  public Lucene43EdgeNGramTokenizer(int minGram, int maxGram) {\n    super(minGram, maxGram);\n  }\n\n","sourceOld":"  /**\n   * Creates EdgeNGramTokenizer that can generate n-grams in the sizes of the given range\n   *\n   * @param version the Lucene match version\n   * @param minGram the smallest n-gram to generate\n   * @param maxGram the largest n-gram to generate\n   */\n  public EdgeNGramTokenizer(Version version, int minGram, int maxGram) {\n    super(version, minGram, maxGram, true);\n  }\n\n","bugFix":null,"bugIntro":["e4ad57577191b2431362044f3135e10a3c0dc1f8"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["379db3ad24c4f0214f30a122265a6d6be003a99d"]},"commit2Childs":{"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}