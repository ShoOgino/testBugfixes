{"path":"src/java/org/apache/solr/search/function/distance/StringDistanceFunction#getValues(Map,IndexReader).mjava","commits":[{"id":"23f795605596bf10e785aeb3a27b488f6263a908","date":1258996696,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/search/function/distance/StringDistanceFunction#getValues(Map,IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocValues getValues(Map context, IndexReader reader) throws IOException {\n    final DocValues str1DV = str1.getValues(context, reader);\n    final DocValues str2DV = str2.getValues(context, reader);\n    return new DocValues() {\n\n      public float floatVal(int doc) {\n        return (float) dist.getDistance(str1DV.strVal(doc), str2DV.strVal(doc));\n      }\n\n      public int intVal(int doc) {\n        return (int) doubleVal(doc);\n      }\n\n      public long longVal(int doc) {\n        return (long) doubleVal(doc);\n      }\n\n      public double doubleVal(int doc) {\n        return (double) floatVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"strdist\").append('(');\n        sb.append(str1DV.toString(doc)).append(',').append(str2DV.toString(doc))\n                .append(\", dist=\").append(dist.getClass().getName());\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["5eeff6b8391d7b5e70e37193643d76c05a3abf75"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/distance/StringDistanceFunction#getValues(Map,IndexReader).mjava","pathOld":"src/java/org/apache/solr/search/function/distance/StringDistanceFunction#getValues(Map,IndexReader).mjava","sourceNew":"  @Override\n  public DocValues getValues(Map context, IndexReader reader) throws IOException {\n    final DocValues str1DV = str1.getValues(context, reader);\n    final DocValues str2DV = str2.getValues(context, reader);\n    return new DocValues() {\n\n      public float floatVal(int doc) {\n        return (float) dist.getDistance(str1DV.strVal(doc), str2DV.strVal(doc));\n      }\n\n      public int intVal(int doc) {\n        return (int) doubleVal(doc);\n      }\n\n      public long longVal(int doc) {\n        return (long) doubleVal(doc);\n      }\n\n      public double doubleVal(int doc) {\n        return (double) floatVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"strdist\").append('(');\n        sb.append(str1DV.toString(doc)).append(',').append(str2DV.toString(doc))\n                .append(\", dist=\").append(dist.getClass().getName());\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, IndexReader reader) throws IOException {\n    final DocValues str1DV = str1.getValues(context, reader);\n    final DocValues str2DV = str2.getValues(context, reader);\n    return new DocValues() {\n\n      public float floatVal(int doc) {\n        return (float) dist.getDistance(str1DV.strVal(doc), str2DV.strVal(doc));\n      }\n\n      public int intVal(int doc) {\n        return (int) doubleVal(doc);\n      }\n\n      public long longVal(int doc) {\n        return (long) doubleVal(doc);\n      }\n\n      public double doubleVal(int doc) {\n        return (double) floatVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"strdist\").append('(');\n        sb.append(str1DV.toString(doc)).append(',').append(str2DV.toString(doc))\n                .append(\", dist=\").append(dist.getClass().getName());\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"23f795605596bf10e785aeb3a27b488f6263a908":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["23f795605596bf10e785aeb3a27b488f6263a908"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"23f795605596bf10e785aeb3a27b488f6263a908":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["23f795605596bf10e785aeb3a27b488f6263a908"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}