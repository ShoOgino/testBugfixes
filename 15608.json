{"path":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testNodeNameUrlConversion().mjava","commits":[{"id":"042891089d57d0e6af18ea6cec15f9e9a7da7d25","date":1355271969,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testNodeNameUrlConversion().mjava","pathOld":"/dev/null","sourceNew":"  public void testNodeNameUrlConversion() throws Exception {\n\n    // nodeName from parts\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"solr\"));\n    assertEquals(\"localhost:8888_\", // root context\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"solr/sub_dir\"));\n\n    // setup a SolrZkClient to do some getBaseUrlForNodeName testing\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      SolrZkClient zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n      try {\n\n        // getBaseUrlForNodeName\n        assertEquals(\"http://zzz.xxx:1234/solr\",\n                     zkClient.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        assertEquals(\"http://xxx:99/\",\n                     zkClient.getBaseUrlForNodeName(\"xxx:99_\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/some_dir\",\n                     zkClient.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_some_dir\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/solr/sub_dir\",\n                     zkClient.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_solr%2Fsub_dir\"));\n        \n        \n        // generateNodeName + getBaseUrlForNodeName\n        assertEquals(\"http://foo:9876/solr\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"solr\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"solr/sub_dir\")));\n        assertEquals(\"http://foo-bar:9876/\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"some_dir\")));\n      } finally {\n        zkClient.close();\n      }\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["227c5621583c5b934878e3c051aae9c4649ae700","bb222a3f9d9421d5c95afce73013fbd8de07ea1f","1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"227c5621583c5b934878e3c051aae9c4649ae700","date":1356045968,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testNodeNameUrlConversion().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testNodeNameUrlConversion().mjava","sourceNew":"  public void testNodeNameUrlConversion() throws Exception {\n\n    // nodeName from parts\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr/\"));\n    // root context\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"\"));\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/\"));\n    // subdir\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir/\"));\n\n    // setup a SolrZkClient to do some getBaseUrlForNodeName testing\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      SolrZkClient zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n      try {\n\n        // getBaseUrlForNodeName\n        assertEquals(\"http://zzz.xxx:1234/solr\",\n                     zkClient.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        assertEquals(\"http://xxx:99\",\n                     zkClient.getBaseUrlForNodeName(\"xxx:99_\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/some_dir\",\n                     zkClient.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_some_dir\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/solr/sub_dir\",\n                     zkClient.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_solr%2Fsub_dir\"));\n        \n        // generateNodeName + getBaseUrlForNodeName\n        assertEquals(\"http://foo:9876/solr\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr/\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"solr/sub_dir\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"/solr/sub_dir/\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"/\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"some_dir\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n      } finally {\n        zkClient.close();\n      }\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","sourceOld":"  public void testNodeNameUrlConversion() throws Exception {\n\n    // nodeName from parts\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"solr\"));\n    assertEquals(\"localhost:8888_\", // root context\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"solr/sub_dir\"));\n\n    // setup a SolrZkClient to do some getBaseUrlForNodeName testing\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      SolrZkClient zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n      try {\n\n        // getBaseUrlForNodeName\n        assertEquals(\"http://zzz.xxx:1234/solr\",\n                     zkClient.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        assertEquals(\"http://xxx:99/\",\n                     zkClient.getBaseUrlForNodeName(\"xxx:99_\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/some_dir\",\n                     zkClient.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_some_dir\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/solr/sub_dir\",\n                     zkClient.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_solr%2Fsub_dir\"));\n        \n        \n        // generateNodeName + getBaseUrlForNodeName\n        assertEquals(\"http://foo:9876/solr\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"solr\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"solr/sub_dir\")));\n        assertEquals(\"http://foo-bar:9876/\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"some_dir\")));\n      } finally {\n        zkClient.close();\n      }\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","bugFix":["042891089d57d0e6af18ea6cec15f9e9a7da7d25"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testNodeNameUrlConversion().mjava","pathOld":"/dev/null","sourceNew":"  public void testNodeNameUrlConversion() throws Exception {\n\n    // nodeName from parts\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr/\"));\n    // root context\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"\"));\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/\"));\n    // subdir\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir/\"));\n\n    // setup a SolrZkClient to do some getBaseUrlForNodeName testing\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      SolrZkClient zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n      try {\n\n        // getBaseUrlForNodeName\n        assertEquals(\"http://zzz.xxx:1234/solr\",\n                     zkClient.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        assertEquals(\"http://xxx:99\",\n                     zkClient.getBaseUrlForNodeName(\"xxx:99_\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/some_dir\",\n                     zkClient.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_some_dir\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/solr/sub_dir\",\n                     zkClient.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_solr%2Fsub_dir\"));\n        \n        // generateNodeName + getBaseUrlForNodeName\n        assertEquals(\"http://foo:9876/solr\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr/\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"solr/sub_dir\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"/solr/sub_dir/\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"/\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"some_dir\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n      } finally {\n        zkClient.close();\n      }\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72","date":1391985588,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testNodeNameUrlConversion().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testNodeNameUrlConversion().mjava","sourceNew":"  public void testNodeNameUrlConversion() throws Exception {\n\n    // nodeName from parts\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr/\"));\n    // root context\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"\"));\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/\"));\n    // subdir\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir/\"));\n\n    // setup a SolrZkClient to do some getBaseUrlForNodeName testing\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      ZkStateReader zkStateReader = new ZkStateReader(server.getZkAddress(), TIMEOUT, TIMEOUT);\n      try {\n        // getBaseUrlForNodeName\n        assertEquals(\"http://zzz.xxx:1234/solr\",\n                     zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        assertEquals(\"http://xxx:99\",\n                     zkStateReader.getBaseUrlForNodeName(\"xxx:99_\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_some_dir\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_solr%2Fsub_dir\"));\n        \n        // generateNodeName + getBaseUrlForNodeName\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr/\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"solr/sub_dir\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"/solr/sub_dir/\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"/\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"some_dir\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n        \n        //Verify the URL Scheme is taken into account\n        zkStateReader.getZkClient().create(ZkStateReader.CLUSTER_PROPS,\n            ZkStateReader.toJSON(Collections.singletonMap(\"urlScheme\", \"https\")), CreateMode.PERSISTENT, true);\n        \n        assertEquals(\"https://zzz.xxx:1234/solr\",\n            zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        \n        assertEquals(\"https://foo-bar.com:80/some_dir\",\n            zkStateReader.getBaseUrlForNodeName\n            (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n      } finally {\n        zkStateReader.close();\n      }\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","sourceOld":"  public void testNodeNameUrlConversion() throws Exception {\n\n    // nodeName from parts\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr/\"));\n    // root context\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"\"));\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/\"));\n    // subdir\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir/\"));\n\n    // setup a SolrZkClient to do some getBaseUrlForNodeName testing\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      SolrZkClient zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n      try {\n\n        // getBaseUrlForNodeName\n        assertEquals(\"http://zzz.xxx:1234/solr\",\n                     zkClient.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        assertEquals(\"http://xxx:99\",\n                     zkClient.getBaseUrlForNodeName(\"xxx:99_\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/some_dir\",\n                     zkClient.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_some_dir\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/solr/sub_dir\",\n                     zkClient.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_solr%2Fsub_dir\"));\n        \n        // generateNodeName + getBaseUrlForNodeName\n        assertEquals(\"http://foo:9876/solr\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr/\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"solr/sub_dir\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"/solr/sub_dir/\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"/\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"some_dir\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkClient.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n      } finally {\n        zkClient.close();\n      }\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testNodeNameUrlConversion().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testNodeNameUrlConversion().mjava","sourceNew":"  public void testNodeNameUrlConversion() throws Exception {\n\n    // nodeName from parts\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr/\"));\n    // root context\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"\"));\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/\"));\n    // subdir\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir/\"));\n\n    // setup a SolrZkClient to do some getBaseUrlForNodeName testing\n    String zkDir = createTempDir().getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      ZkStateReader zkStateReader = new ZkStateReader(server.getZkAddress(), TIMEOUT, TIMEOUT);\n      try {\n        // getBaseUrlForNodeName\n        assertEquals(\"http://zzz.xxx:1234/solr\",\n                     zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        assertEquals(\"http://xxx:99\",\n                     zkStateReader.getBaseUrlForNodeName(\"xxx:99_\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_some_dir\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_solr%2Fsub_dir\"));\n        \n        // generateNodeName + getBaseUrlForNodeName\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr/\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"solr/sub_dir\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"/solr/sub_dir/\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"/\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"some_dir\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n        \n        //Verify the URL Scheme is taken into account\n        zkStateReader.getZkClient().create(ZkStateReader.CLUSTER_PROPS,\n            ZkStateReader.toJSON(Collections.singletonMap(\"urlScheme\", \"https\")), CreateMode.PERSISTENT, true);\n        \n        assertEquals(\"https://zzz.xxx:1234/solr\",\n            zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        \n        assertEquals(\"https://foo-bar.com:80/some_dir\",\n            zkStateReader.getBaseUrlForNodeName\n            (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n      } finally {\n        zkStateReader.close();\n      }\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","sourceOld":"  public void testNodeNameUrlConversion() throws Exception {\n\n    // nodeName from parts\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr/\"));\n    // root context\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"\"));\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/\"));\n    // subdir\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir/\"));\n\n    // setup a SolrZkClient to do some getBaseUrlForNodeName testing\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      ZkStateReader zkStateReader = new ZkStateReader(server.getZkAddress(), TIMEOUT, TIMEOUT);\n      try {\n        // getBaseUrlForNodeName\n        assertEquals(\"http://zzz.xxx:1234/solr\",\n                     zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        assertEquals(\"http://xxx:99\",\n                     zkStateReader.getBaseUrlForNodeName(\"xxx:99_\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_some_dir\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_solr%2Fsub_dir\"));\n        \n        // generateNodeName + getBaseUrlForNodeName\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr/\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"solr/sub_dir\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"/solr/sub_dir/\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"/\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"some_dir\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n        \n        //Verify the URL Scheme is taken into account\n        zkStateReader.getZkClient().create(ZkStateReader.CLUSTER_PROPS,\n            ZkStateReader.toJSON(Collections.singletonMap(\"urlScheme\", \"https\")), CreateMode.PERSISTENT, true);\n        \n        assertEquals(\"https://zzz.xxx:1234/solr\",\n            zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        \n        assertEquals(\"https://foo-bar.com:80/some_dir\",\n            zkStateReader.getBaseUrlForNodeName\n            (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n      } finally {\n        zkStateReader.close();\n      }\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e9ce820cd3ed9efb959c181daaafd22f0c70143","date":1396201051,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testNodeNameUrlConversion().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testNodeNameUrlConversion().mjava","sourceNew":"  public void testNodeNameUrlConversion() throws Exception {\n\n    // nodeName from parts\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr/\"));\n    // root context\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"\"));\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/\"));\n    // subdir\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir/\"));\n\n    // setup a SolrZkClient to do some getBaseUrlForNodeName testing\n    String zkDir = createTempDir(\"zkData\").getAbsolutePath();\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      ZkStateReader zkStateReader = new ZkStateReader(server.getZkAddress(), TIMEOUT, TIMEOUT);\n      try {\n        // getBaseUrlForNodeName\n        assertEquals(\"http://zzz.xxx:1234/solr\",\n                     zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        assertEquals(\"http://xxx:99\",\n                     zkStateReader.getBaseUrlForNodeName(\"xxx:99_\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_some_dir\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_solr%2Fsub_dir\"));\n        \n        // generateNodeName + getBaseUrlForNodeName\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr/\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"solr/sub_dir\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"/solr/sub_dir/\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"/\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"some_dir\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n        \n        //Verify the URL Scheme is taken into account\n        zkStateReader.getZkClient().create(ZkStateReader.CLUSTER_PROPS,\n            ZkStateReader.toJSON(Collections.singletonMap(\"urlScheme\", \"https\")), CreateMode.PERSISTENT, true);\n        \n        assertEquals(\"https://zzz.xxx:1234/solr\",\n            zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        \n        assertEquals(\"https://foo-bar.com:80/some_dir\",\n            zkStateReader.getBaseUrlForNodeName\n            (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n      } finally {\n        zkStateReader.close();\n      }\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","sourceOld":"  public void testNodeNameUrlConversion() throws Exception {\n\n    // nodeName from parts\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr/\"));\n    // root context\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"\"));\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/\"));\n    // subdir\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir/\"));\n\n    // setup a SolrZkClient to do some getBaseUrlForNodeName testing\n    String zkDir = createTempDir().getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      ZkStateReader zkStateReader = new ZkStateReader(server.getZkAddress(), TIMEOUT, TIMEOUT);\n      try {\n        // getBaseUrlForNodeName\n        assertEquals(\"http://zzz.xxx:1234/solr\",\n                     zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        assertEquals(\"http://xxx:99\",\n                     zkStateReader.getBaseUrlForNodeName(\"xxx:99_\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_some_dir\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_solr%2Fsub_dir\"));\n        \n        // generateNodeName + getBaseUrlForNodeName\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr/\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"solr/sub_dir\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"/solr/sub_dir/\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"/\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"some_dir\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n        \n        //Verify the URL Scheme is taken into account\n        zkStateReader.getZkClient().create(ZkStateReader.CLUSTER_PROPS,\n            ZkStateReader.toJSON(Collections.singletonMap(\"urlScheme\", \"https\")), CreateMode.PERSISTENT, true);\n        \n        assertEquals(\"https://zzz.xxx:1234/solr\",\n            zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        \n        assertEquals(\"https://foo-bar.com:80/some_dir\",\n            zkStateReader.getBaseUrlForNodeName\n            (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n      } finally {\n        zkStateReader.close();\n      }\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","bugFix":["042891089d57d0e6af18ea6cec15f9e9a7da7d25","bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testNodeNameUrlConversion().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testNodeNameUrlConversion().mjava","sourceNew":"  public void testNodeNameUrlConversion() throws Exception {\n\n    // nodeName from parts\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr/\"));\n    // root context\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"\"));\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/\"));\n    // subdir\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir/\"));\n\n    // setup a SolrZkClient to do some getBaseUrlForNodeName testing\n    String zkDir = createTempDir(\"zkData\").getAbsolutePath();\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      ZkStateReader zkStateReader = new ZkStateReader(server.getZkAddress(), TIMEOUT, TIMEOUT);\n      try {\n        // getBaseUrlForNodeName\n        assertEquals(\"http://zzz.xxx:1234/solr\",\n                     zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        assertEquals(\"http://xxx:99\",\n                     zkStateReader.getBaseUrlForNodeName(\"xxx:99_\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_some_dir\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_solr%2Fsub_dir\"));\n        \n        // generateNodeName + getBaseUrlForNodeName\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr/\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"solr/sub_dir\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"/solr/sub_dir/\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"/\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"some_dir\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n        \n        //Verify the URL Scheme is taken into account\n        zkStateReader.getZkClient().create(ZkStateReader.CLUSTER_PROPS,\n            ZkStateReader.toJSON(Collections.singletonMap(\"urlScheme\", \"https\")), CreateMode.PERSISTENT, true);\n        \n        assertEquals(\"https://zzz.xxx:1234/solr\",\n            zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        \n        assertEquals(\"https://foo-bar.com:80/some_dir\",\n            zkStateReader.getBaseUrlForNodeName\n            (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n      } finally {\n        zkStateReader.close();\n      }\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","sourceOld":"  public void testNodeNameUrlConversion() throws Exception {\n\n    // nodeName from parts\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr/\"));\n    // root context\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"\"));\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/\"));\n    // subdir\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir/\"));\n\n    // setup a SolrZkClient to do some getBaseUrlForNodeName testing\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      ZkStateReader zkStateReader = new ZkStateReader(server.getZkAddress(), TIMEOUT, TIMEOUT);\n      try {\n        // getBaseUrlForNodeName\n        assertEquals(\"http://zzz.xxx:1234/solr\",\n                     zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        assertEquals(\"http://xxx:99\",\n                     zkStateReader.getBaseUrlForNodeName(\"xxx:99_\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_some_dir\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_solr%2Fsub_dir\"));\n        \n        // generateNodeName + getBaseUrlForNodeName\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr/\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"solr/sub_dir\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"/solr/sub_dir/\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"/\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"some_dir\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n        \n        //Verify the URL Scheme is taken into account\n        zkStateReader.getZkClient().create(ZkStateReader.CLUSTER_PROPS,\n            ZkStateReader.toJSON(Collections.singletonMap(\"urlScheme\", \"https\")), CreateMode.PERSISTENT, true);\n        \n        assertEquals(\"https://zzz.xxx:1234/solr\",\n            zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        \n        assertEquals(\"https://foo-bar.com:80/some_dir\",\n            zkStateReader.getBaseUrlForNodeName\n            (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n      } finally {\n        zkStateReader.close();\n      }\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testNodeNameUrlConversion().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testNodeNameUrlConversion().mjava","sourceNew":"  public void testNodeNameUrlConversion() throws Exception {\n\n    // nodeName from parts\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr/\"));\n    // root context\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"\"));\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/\"));\n    // subdir\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir/\"));\n\n    // setup a SolrZkClient to do some getBaseUrlForNodeName testing\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      ZkStateReader zkStateReader = new ZkStateReader(server.getZkAddress(), TIMEOUT, TIMEOUT);\n      try {\n        // getBaseUrlForNodeName\n        assertEquals(\"http://zzz.xxx:1234/solr\",\n                     zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        assertEquals(\"http://xxx:99\",\n                     zkStateReader.getBaseUrlForNodeName(\"xxx:99_\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_some_dir\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_solr%2Fsub_dir\"));\n        \n        // generateNodeName + getBaseUrlForNodeName\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr/\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"solr/sub_dir\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"/solr/sub_dir/\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"/\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"some_dir\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n        \n        //Verify the URL Scheme is taken into account\n        zkStateReader.getZkClient().create(ZkStateReader.CLUSTER_PROPS,\n            ZkStateReader.toJSON(Collections.singletonMap(\"urlScheme\", \"https\")), CreateMode.PERSISTENT, true);\n        \n        assertEquals(\"https://zzz.xxx:1234/solr\",\n            zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        \n        assertEquals(\"https://foo-bar.com:80/some_dir\",\n            zkStateReader.getBaseUrlForNodeName\n            (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n      } finally {\n        zkStateReader.close();\n      }\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","sourceOld":"  public void testNodeNameUrlConversion() throws Exception {\n\n    // nodeName from parts\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr/\"));\n    // root context\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"\"));\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/\"));\n    // subdir\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir/\"));\n\n    // setup a SolrZkClient to do some getBaseUrlForNodeName testing\n    String zkDir = createTempDir(\"zkData\").getAbsolutePath();\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      ZkStateReader zkStateReader = new ZkStateReader(server.getZkAddress(), TIMEOUT, TIMEOUT);\n      try {\n        // getBaseUrlForNodeName\n        assertEquals(\"http://zzz.xxx:1234/solr\",\n                     zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        assertEquals(\"http://xxx:99\",\n                     zkStateReader.getBaseUrlForNodeName(\"xxx:99_\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_some_dir\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_solr%2Fsub_dir\"));\n        \n        // generateNodeName + getBaseUrlForNodeName\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr/\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"solr/sub_dir\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"/solr/sub_dir/\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"/\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"some_dir\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n        \n        //Verify the URL Scheme is taken into account\n        zkStateReader.getZkClient().create(ZkStateReader.CLUSTER_PROPS,\n            ZkStateReader.toJSON(Collections.singletonMap(\"urlScheme\", \"https\")), CreateMode.PERSISTENT, true);\n        \n        assertEquals(\"https://zzz.xxx:1234/solr\",\n            zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        \n        assertEquals(\"https://foo-bar.com:80/some_dir\",\n            zkStateReader.getBaseUrlForNodeName\n            (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n      } finally {\n        zkStateReader.close();\n      }\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b693a83132c9e45afcd564fd65a25b60ed80388b","date":1436882146,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testNodeNameUrlConversion().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testNodeNameUrlConversion().mjava","sourceNew":"  public void testNodeNameUrlConversion() throws Exception {\n\n    // nodeName from parts\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr/\"));\n    // root context\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"\"));\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/\"));\n    // subdir\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir/\"));\n\n    // setup a SolrZkClient to do some getBaseUrlForNodeName testing\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      ZkStateReader zkStateReader = new ZkStateReader(server.getZkAddress(), TIMEOUT, TIMEOUT);\n      try {\n        // getBaseUrlForNodeName\n        assertEquals(\"http://zzz.xxx:1234/solr\",\n                     zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        assertEquals(\"http://xxx:99\",\n                     zkStateReader.getBaseUrlForNodeName(\"xxx:99_\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_some_dir\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_solr%2Fsub_dir\"));\n        \n        // generateNodeName + getBaseUrlForNodeName\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr/\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"solr/sub_dir\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"/solr/sub_dir/\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"/\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"some_dir\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n        \n        //Verify the URL Scheme is taken into account\n        zkStateReader.getZkClient().create(ZkStateReader.CLUSTER_PROPS,\n            Utils.toJSON(Collections.singletonMap(\"urlScheme\", \"https\")), CreateMode.PERSISTENT, true);\n        \n        assertEquals(\"https://zzz.xxx:1234/solr\",\n            zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        \n        assertEquals(\"https://foo-bar.com:80/some_dir\",\n            zkStateReader.getBaseUrlForNodeName\n            (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n      } finally {\n        zkStateReader.close();\n      }\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","sourceOld":"  public void testNodeNameUrlConversion() throws Exception {\n\n    // nodeName from parts\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr/\"));\n    // root context\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"\"));\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/\"));\n    // subdir\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir/\"));\n\n    // setup a SolrZkClient to do some getBaseUrlForNodeName testing\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      ZkStateReader zkStateReader = new ZkStateReader(server.getZkAddress(), TIMEOUT, TIMEOUT);\n      try {\n        // getBaseUrlForNodeName\n        assertEquals(\"http://zzz.xxx:1234/solr\",\n                     zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        assertEquals(\"http://xxx:99\",\n                     zkStateReader.getBaseUrlForNodeName(\"xxx:99_\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_some_dir\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_solr%2Fsub_dir\"));\n        \n        // generateNodeName + getBaseUrlForNodeName\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr/\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"solr/sub_dir\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"/solr/sub_dir/\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"/\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"some_dir\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n        \n        //Verify the URL Scheme is taken into account\n        zkStateReader.getZkClient().create(ZkStateReader.CLUSTER_PROPS,\n            ZkStateReader.toJSON(Collections.singletonMap(\"urlScheme\", \"https\")), CreateMode.PERSISTENT, true);\n        \n        assertEquals(\"https://zzz.xxx:1234/solr\",\n            zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        \n        assertEquals(\"https://foo-bar.com:80/some_dir\",\n            zkStateReader.getBaseUrlForNodeName\n            (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n      } finally {\n        zkStateReader.close();\n      }\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"115923bc88e5b1dc4bef049b1ded8486723052ed","date":1463216796,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testNodeNameUrlConversion().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testNodeNameUrlConversion().mjava","sourceNew":"  public void testNodeNameUrlConversion() throws Exception {\n\n    // nodeName from parts\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr/\"));\n    // root context\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"\"));\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/\"));\n    // subdir\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir/\"));\n\n    // setup a SolrZkClient to do some getBaseUrlForNodeName testing\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      try (SolrZkClient client = new SolrZkClient(server.getZkAddress(), TIMEOUT)) {\n\n        ZkController.createClusterZkNodes(client);\n\n        try (ZkStateReader zkStateReader = new ZkStateReader(client)) {\n          zkStateReader.createClusterStateWatchersAndUpdate();\n\n          // getBaseUrlForNodeName\n          assertEquals(\"http://zzz.xxx:1234/solr\",\n              zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n          assertEquals(\"http://xxx:99\",\n              zkStateReader.getBaseUrlForNodeName(\"xxx:99_\"));\n          assertEquals(\"http://foo-bar.baz.org:9999/some_dir\",\n              zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_some_dir\"));\n          assertEquals(\"http://foo-bar.baz.org:9999/solr/sub_dir\",\n              zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_solr%2Fsub_dir\"));\n\n          // generateNodeName + getBaseUrlForNodeName\n          assertEquals(\"http://foo:9876/solr\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo\", \"9876\", \"solr\")));\n          assertEquals(\"http://foo:9876/solr\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo\", \"9876\", \"/solr\")));\n          assertEquals(\"http://foo:9876/solr\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo\", \"9876\", \"/solr/\")));\n          assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo.bar.com\", \"9876\", \"solr/sub_dir\")));\n          assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo.bar.com\", \"9876\", \"/solr/sub_dir/\")));\n          assertEquals(\"http://foo-bar:9876\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar\", \"9876\", \"\")));\n          assertEquals(\"http://foo-bar:9876\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar\", \"9876\", \"/\")));\n          assertEquals(\"http://foo-bar.com:80/some_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar.com\", \"80\", \"some_dir\")));\n          assertEquals(\"http://foo-bar.com:80/some_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar.com\", \"80\", \"/some_dir\")));\n\n        }\n\n        ClusterProperties cp = new ClusterProperties(client);\n        cp.setClusterProperty(\"urlScheme\", \"https\");\n        \n        //Verify the URL Scheme is taken into account\n\n        try (ZkStateReader zkStateReader = new ZkStateReader(client)) {\n\n          zkStateReader.createClusterStateWatchersAndUpdate();\n\n          assertEquals(\"https://zzz.xxx:1234/solr\",\n              zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n\n          assertEquals(\"https://foo-bar.com:80/some_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar.com\", \"80\", \"/some_dir\")));\n\n        }\n      }\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","sourceOld":"  public void testNodeNameUrlConversion() throws Exception {\n\n    // nodeName from parts\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr/\"));\n    // root context\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"\"));\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/\"));\n    // subdir\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir/\"));\n\n    // setup a SolrZkClient to do some getBaseUrlForNodeName testing\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      ZkStateReader zkStateReader = new ZkStateReader(server.getZkAddress(), TIMEOUT, TIMEOUT);\n      try {\n        // getBaseUrlForNodeName\n        assertEquals(\"http://zzz.xxx:1234/solr\",\n                     zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        assertEquals(\"http://xxx:99\",\n                     zkStateReader.getBaseUrlForNodeName(\"xxx:99_\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_some_dir\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_solr%2Fsub_dir\"));\n        \n        // generateNodeName + getBaseUrlForNodeName\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr/\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"solr/sub_dir\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"/solr/sub_dir/\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"/\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"some_dir\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n        \n        //Verify the URL Scheme is taken into account\n        zkStateReader.getZkClient().create(ZkStateReader.CLUSTER_PROPS,\n            Utils.toJSON(Collections.singletonMap(\"urlScheme\", \"https\")), CreateMode.PERSISTENT, true);\n        \n        assertEquals(\"https://zzz.xxx:1234/solr\",\n            zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        \n        assertEquals(\"https://foo-bar.com:80/some_dir\",\n            zkStateReader.getBaseUrlForNodeName\n            (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n      } finally {\n        zkStateReader.close();\n      }\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testNodeNameUrlConversion().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testNodeNameUrlConversion().mjava","sourceNew":"  public void testNodeNameUrlConversion() throws Exception {\n\n    // nodeName from parts\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr/\"));\n    // root context\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"\"));\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/\"));\n    // subdir\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir/\"));\n\n    // setup a SolrZkClient to do some getBaseUrlForNodeName testing\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      try (SolrZkClient client = new SolrZkClient(server.getZkAddress(), TIMEOUT)) {\n\n        ZkController.createClusterZkNodes(client);\n\n        try (ZkStateReader zkStateReader = new ZkStateReader(client)) {\n          zkStateReader.createClusterStateWatchersAndUpdate();\n\n          // getBaseUrlForNodeName\n          assertEquals(\"http://zzz.xxx:1234/solr\",\n              zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n          assertEquals(\"http://xxx:99\",\n              zkStateReader.getBaseUrlForNodeName(\"xxx:99_\"));\n          assertEquals(\"http://foo-bar.baz.org:9999/some_dir\",\n              zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_some_dir\"));\n          assertEquals(\"http://foo-bar.baz.org:9999/solr/sub_dir\",\n              zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_solr%2Fsub_dir\"));\n\n          // generateNodeName + getBaseUrlForNodeName\n          assertEquals(\"http://foo:9876/solr\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo\", \"9876\", \"solr\")));\n          assertEquals(\"http://foo:9876/solr\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo\", \"9876\", \"/solr\")));\n          assertEquals(\"http://foo:9876/solr\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo\", \"9876\", \"/solr/\")));\n          assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo.bar.com\", \"9876\", \"solr/sub_dir\")));\n          assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo.bar.com\", \"9876\", \"/solr/sub_dir/\")));\n          assertEquals(\"http://foo-bar:9876\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar\", \"9876\", \"\")));\n          assertEquals(\"http://foo-bar:9876\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar\", \"9876\", \"/\")));\n          assertEquals(\"http://foo-bar.com:80/some_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar.com\", \"80\", \"some_dir\")));\n          assertEquals(\"http://foo-bar.com:80/some_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar.com\", \"80\", \"/some_dir\")));\n\n        }\n\n        ClusterProperties cp = new ClusterProperties(client);\n        cp.setClusterProperty(\"urlScheme\", \"https\");\n        \n        //Verify the URL Scheme is taken into account\n\n        try (ZkStateReader zkStateReader = new ZkStateReader(client)) {\n\n          zkStateReader.createClusterStateWatchersAndUpdate();\n\n          assertEquals(\"https://zzz.xxx:1234/solr\",\n              zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n\n          assertEquals(\"https://foo-bar.com:80/some_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar.com\", \"80\", \"/some_dir\")));\n\n        }\n      }\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","sourceOld":"  public void testNodeNameUrlConversion() throws Exception {\n\n    // nodeName from parts\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr/\"));\n    // root context\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"\"));\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/\"));\n    // subdir\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir/\"));\n\n    // setup a SolrZkClient to do some getBaseUrlForNodeName testing\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      ZkStateReader zkStateReader = new ZkStateReader(server.getZkAddress(), TIMEOUT, TIMEOUT);\n      try {\n        // getBaseUrlForNodeName\n        assertEquals(\"http://zzz.xxx:1234/solr\",\n                     zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        assertEquals(\"http://xxx:99\",\n                     zkStateReader.getBaseUrlForNodeName(\"xxx:99_\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_some_dir\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_solr%2Fsub_dir\"));\n        \n        // generateNodeName + getBaseUrlForNodeName\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr/\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"solr/sub_dir\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"/solr/sub_dir/\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"/\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"some_dir\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n        \n        //Verify the URL Scheme is taken into account\n        zkStateReader.getZkClient().create(ZkStateReader.CLUSTER_PROPS,\n            Utils.toJSON(Collections.singletonMap(\"urlScheme\", \"https\")), CreateMode.PERSISTENT, true);\n        \n        assertEquals(\"https://zzz.xxx:1234/solr\",\n            zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        \n        assertEquals(\"https://foo-bar.com:80/some_dir\",\n            zkStateReader.getBaseUrlForNodeName\n            (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n      } finally {\n        zkStateReader.close();\n      }\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testNodeNameUrlConversion().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testNodeNameUrlConversion().mjava","sourceNew":"  public void testNodeNameUrlConversion() throws Exception {\n\n    // nodeName from parts\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr/\"));\n    // root context\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"\"));\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/\"));\n    // subdir\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir/\"));\n\n    // setup a SolrZkClient to do some getBaseUrlForNodeName testing\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      try (SolrZkClient client = new SolrZkClient(server.getZkAddress(), TIMEOUT)) {\n\n        ZkController.createClusterZkNodes(client);\n\n        try (ZkStateReader zkStateReader = new ZkStateReader(client)) {\n          zkStateReader.createClusterStateWatchersAndUpdate();\n\n          // getBaseUrlForNodeName\n          assertEquals(\"http://zzz.xxx:1234/solr\",\n              zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n          assertEquals(\"http://xxx:99\",\n              zkStateReader.getBaseUrlForNodeName(\"xxx:99_\"));\n          assertEquals(\"http://foo-bar.baz.org:9999/some_dir\",\n              zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_some_dir\"));\n          assertEquals(\"http://foo-bar.baz.org:9999/solr/sub_dir\",\n              zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_solr%2Fsub_dir\"));\n\n          // generateNodeName + getBaseUrlForNodeName\n          assertEquals(\"http://foo:9876/solr\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo\", \"9876\", \"solr\")));\n          assertEquals(\"http://foo:9876/solr\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo\", \"9876\", \"/solr\")));\n          assertEquals(\"http://foo:9876/solr\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo\", \"9876\", \"/solr/\")));\n          assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo.bar.com\", \"9876\", \"solr/sub_dir\")));\n          assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo.bar.com\", \"9876\", \"/solr/sub_dir/\")));\n          assertEquals(\"http://foo-bar:9876\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar\", \"9876\", \"\")));\n          assertEquals(\"http://foo-bar:9876\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar\", \"9876\", \"/\")));\n          assertEquals(\"http://foo-bar.com:80/some_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar.com\", \"80\", \"some_dir\")));\n          assertEquals(\"http://foo-bar.com:80/some_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar.com\", \"80\", \"/some_dir\")));\n\n        }\n\n        ClusterProperties cp = new ClusterProperties(client);\n        cp.setClusterProperty(\"urlScheme\", \"https\");\n        \n        //Verify the URL Scheme is taken into account\n\n        try (ZkStateReader zkStateReader = new ZkStateReader(client)) {\n\n          zkStateReader.createClusterStateWatchersAndUpdate();\n\n          assertEquals(\"https://zzz.xxx:1234/solr\",\n              zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n\n          assertEquals(\"https://foo-bar.com:80/some_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar.com\", \"80\", \"/some_dir\")));\n\n        }\n      }\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","sourceOld":"  public void testNodeNameUrlConversion() throws Exception {\n\n    // nodeName from parts\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr/\"));\n    // root context\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"\"));\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/\"));\n    // subdir\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir/\"));\n\n    // setup a SolrZkClient to do some getBaseUrlForNodeName testing\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      ZkStateReader zkStateReader = new ZkStateReader(server.getZkAddress(), TIMEOUT, TIMEOUT);\n      try {\n        // getBaseUrlForNodeName\n        assertEquals(\"http://zzz.xxx:1234/solr\",\n                     zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        assertEquals(\"http://xxx:99\",\n                     zkStateReader.getBaseUrlForNodeName(\"xxx:99_\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_some_dir\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_solr%2Fsub_dir\"));\n        \n        // generateNodeName + getBaseUrlForNodeName\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr/\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"solr/sub_dir\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"/solr/sub_dir/\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"/\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"some_dir\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n        \n        //Verify the URL Scheme is taken into account\n        zkStateReader.getZkClient().create(ZkStateReader.CLUSTER_PROPS,\n            Utils.toJSON(Collections.singletonMap(\"urlScheme\", \"https\")), CreateMode.PERSISTENT, true);\n        \n        assertEquals(\"https://zzz.xxx:1234/solr\",\n            zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        \n        assertEquals(\"https://foo-bar.com:80/some_dir\",\n            zkStateReader.getBaseUrlForNodeName\n            (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n      } finally {\n        zkStateReader.close();\n      }\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testNodeNameUrlConversion().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testNodeNameUrlConversion().mjava","sourceNew":"  public void testNodeNameUrlConversion() throws Exception {\n\n    // nodeName from parts\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr/\"));\n    // root context\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"\"));\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/\"));\n    // subdir\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir/\"));\n\n    // setup a SolrZkClient to do some getBaseUrlForNodeName testing\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      try (SolrZkClient client = new SolrZkClient(server.getZkAddress(), TIMEOUT)) {\n\n        ZkController.createClusterZkNodes(client);\n\n        try (ZkStateReader zkStateReader = new ZkStateReader(client)) {\n          zkStateReader.createClusterStateWatchersAndUpdate();\n\n          // getBaseUrlForNodeName\n          assertEquals(\"http://zzz.xxx:1234/solr\",\n              zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n          assertEquals(\"http://xxx:99\",\n              zkStateReader.getBaseUrlForNodeName(\"xxx:99_\"));\n          assertEquals(\"http://foo-bar.baz.org:9999/some_dir\",\n              zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_some_dir\"));\n          assertEquals(\"http://foo-bar.baz.org:9999/solr/sub_dir\",\n              zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_solr%2Fsub_dir\"));\n\n          // generateNodeName + getBaseUrlForNodeName\n          assertEquals(\"http://foo:9876/solr\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo\", \"9876\", \"solr\")));\n          assertEquals(\"http://foo:9876/solr\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo\", \"9876\", \"/solr\")));\n          assertEquals(\"http://foo:9876/solr\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo\", \"9876\", \"/solr/\")));\n          assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo.bar.com\", \"9876\", \"solr/sub_dir\")));\n          assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo.bar.com\", \"9876\", \"/solr/sub_dir/\")));\n          assertEquals(\"http://foo-bar:9876\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar\", \"9876\", \"\")));\n          assertEquals(\"http://foo-bar:9876\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar\", \"9876\", \"/\")));\n          assertEquals(\"http://foo-bar.com:80/some_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar.com\", \"80\", \"some_dir\")));\n          assertEquals(\"http://foo-bar.com:80/some_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar.com\", \"80\", \"/some_dir\")));\n\n        }\n\n        ClusterProperties cp = new ClusterProperties(client);\n        cp.setClusterProperty(\"urlScheme\", \"https\");\n        \n        //Verify the URL Scheme is taken into account\n\n        try (ZkStateReader zkStateReader = new ZkStateReader(client)) {\n\n          zkStateReader.createClusterStateWatchersAndUpdate();\n\n          assertEquals(\"https://zzz.xxx:1234/solr\",\n              zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n\n          assertEquals(\"https://foo-bar.com:80/some_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar.com\", \"80\", \"/some_dir\")));\n\n        }\n      }\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","sourceOld":"  public void testNodeNameUrlConversion() throws Exception {\n\n    // nodeName from parts\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr/\"));\n    // root context\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"\"));\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/\"));\n    // subdir\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir/\"));\n\n    // setup a SolrZkClient to do some getBaseUrlForNodeName testing\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      ZkStateReader zkStateReader = new ZkStateReader(server.getZkAddress(), TIMEOUT, TIMEOUT);\n      try {\n        // getBaseUrlForNodeName\n        assertEquals(\"http://zzz.xxx:1234/solr\",\n                     zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        assertEquals(\"http://xxx:99\",\n                     zkStateReader.getBaseUrlForNodeName(\"xxx:99_\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_some_dir\"));\n        assertEquals(\"http://foo-bar.baz.org:9999/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_solr%2Fsub_dir\"));\n        \n        // generateNodeName + getBaseUrlForNodeName\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr\")));\n        assertEquals(\"http://foo:9876/solr\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo\",\"9876\",\"/solr/\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"solr/sub_dir\")));\n        assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo.bar.com\",\"9876\",\"/solr/sub_dir/\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"\")));\n        assertEquals(\"http://foo-bar:9876\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar\",\"9876\",\"/\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"some_dir\")));\n        assertEquals(\"http://foo-bar.com:80/some_dir\",\n                     zkStateReader.getBaseUrlForNodeName\n                     (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n        \n        //Verify the URL Scheme is taken into account\n        zkStateReader.getZkClient().create(ZkStateReader.CLUSTER_PROPS,\n            Utils.toJSON(Collections.singletonMap(\"urlScheme\", \"https\")), CreateMode.PERSISTENT, true);\n        \n        assertEquals(\"https://zzz.xxx:1234/solr\",\n            zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n        \n        assertEquals(\"https://foo-bar.com:80/some_dir\",\n            zkStateReader.getBaseUrlForNodeName\n            (ZkController.generateNodeName(\"foo-bar.com\",\"80\",\"/some_dir\")));\n      } finally {\n        zkStateReader.close();\n      }\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testNodeNameUrlConversion().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testNodeNameUrlConversion().mjava","sourceNew":"  public void testNodeNameUrlConversion() throws Exception {\n\n    // nodeName from parts\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr/\"));\n    // root context\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"\"));\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/\"));\n    // subdir\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir/\"));\n\n    // setup a SolrZkClient to do some getBaseUrlForNodeName testing\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      try (SolrZkClient client = new SolrZkClient(server.getZkAddress(), TIMEOUT)) {\n\n        ZkController.createClusterZkNodes(client);\n\n        try (ZkStateReader zkStateReader = new ZkStateReader(client)) {\n          zkStateReader.createClusterStateWatchersAndUpdate();\n\n          // getBaseUrlForNodeName\n          assertEquals(\"http://zzz.xxx:1234/solr\",\n              zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n          assertEquals(\"http://xxx:99\",\n              zkStateReader.getBaseUrlForNodeName(\"xxx:99_\"));\n          assertEquals(\"http://foo-bar.baz.org:9999/some_dir\",\n              zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_some_dir\"));\n          assertEquals(\"http://foo-bar.baz.org:9999/solr/sub_dir\",\n              zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_solr%2Fsub_dir\"));\n\n          // generateNodeName + getBaseUrlForNodeName\n          assertEquals(\"http://foo:9876/solr\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo\", \"9876\", \"solr\")));\n          assertEquals(\"http://foo:9876/solr\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo\", \"9876\", \"/solr\")));\n          assertEquals(\"http://foo:9876/solr\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo\", \"9876\", \"/solr/\")));\n          assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo.bar.com\", \"9876\", \"solr/sub_dir\")));\n          assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo.bar.com\", \"9876\", \"/solr/sub_dir/\")));\n          assertEquals(\"http://foo-bar:9876\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar\", \"9876\", \"\")));\n          assertEquals(\"http://foo-bar:9876\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar\", \"9876\", \"/\")));\n          assertEquals(\"http://foo-bar.com:80/some_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar.com\", \"80\", \"some_dir\")));\n          assertEquals(\"http://foo-bar.com:80/some_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar.com\", \"80\", \"/some_dir\")));\n\n        }\n\n        ClusterProperties cp = new ClusterProperties(client);\n        cp.setClusterProperty(\"urlScheme\", \"https\");\n        \n        //Verify the URL Scheme is taken into account\n\n        try (ZkStateReader zkStateReader = new ZkStateReader(client)) {\n\n          zkStateReader.createClusterStateWatchersAndUpdate();\n\n          assertEquals(\"https://zzz.xxx:1234/solr\",\n              zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n\n          assertEquals(\"https://foo-bar.com:80/some_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar.com\", \"80\", \"/some_dir\")));\n\n        }\n      }\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","sourceOld":"  public void testNodeNameUrlConversion() throws Exception {\n\n    // nodeName from parts\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr/\"));\n    // root context\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"\"));\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/\"));\n    // subdir\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir/\"));\n\n    // setup a SolrZkClient to do some getBaseUrlForNodeName testing\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      try (SolrZkClient client = new SolrZkClient(server.getZkAddress(), TIMEOUT)) {\n\n        ZkController.createClusterZkNodes(client);\n\n        try (ZkStateReader zkStateReader = new ZkStateReader(client)) {\n          zkStateReader.createClusterStateWatchersAndUpdate();\n\n          // getBaseUrlForNodeName\n          assertEquals(\"http://zzz.xxx:1234/solr\",\n              zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n          assertEquals(\"http://xxx:99\",\n              zkStateReader.getBaseUrlForNodeName(\"xxx:99_\"));\n          assertEquals(\"http://foo-bar.baz.org:9999/some_dir\",\n              zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_some_dir\"));\n          assertEquals(\"http://foo-bar.baz.org:9999/solr/sub_dir\",\n              zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_solr%2Fsub_dir\"));\n\n          // generateNodeName + getBaseUrlForNodeName\n          assertEquals(\"http://foo:9876/solr\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo\", \"9876\", \"solr\")));\n          assertEquals(\"http://foo:9876/solr\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo\", \"9876\", \"/solr\")));\n          assertEquals(\"http://foo:9876/solr\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo\", \"9876\", \"/solr/\")));\n          assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo.bar.com\", \"9876\", \"solr/sub_dir\")));\n          assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo.bar.com\", \"9876\", \"/solr/sub_dir/\")));\n          assertEquals(\"http://foo-bar:9876\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar\", \"9876\", \"\")));\n          assertEquals(\"http://foo-bar:9876\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar\", \"9876\", \"/\")));\n          assertEquals(\"http://foo-bar.com:80/some_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar.com\", \"80\", \"some_dir\")));\n          assertEquals(\"http://foo-bar.com:80/some_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar.com\", \"80\", \"/some_dir\")));\n\n        }\n\n        ClusterProperties cp = new ClusterProperties(client);\n        cp.setClusterProperty(\"urlScheme\", \"https\");\n        \n        //Verify the URL Scheme is taken into account\n\n        try (ZkStateReader zkStateReader = new ZkStateReader(client)) {\n\n          zkStateReader.createClusterStateWatchersAndUpdate();\n\n          assertEquals(\"https://zzz.xxx:1234/solr\",\n              zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n\n          assertEquals(\"https://foo-bar.com:80/some_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar.com\", \"80\", \"/some_dir\")));\n\n        }\n      }\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","bugFix":["042891089d57d0e6af18ea6cec15f9e9a7da7d25"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1778938cb7fb298e6e07a43e2d5acaf552d61518","date":1559609435,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testNodeNameUrlConversion().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testNodeNameUrlConversion().mjava","sourceNew":"  public void testNodeNameUrlConversion() throws Exception {\n\n    // nodeName from parts\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr/\"));\n    // root context\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"\"));\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/\"));\n    // subdir\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir/\"));\n\n    // setup a SolrZkClient to do some getBaseUrlForNodeName testing\n    Path zkDir = createTempDir(\"zkData\");\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      try (SolrZkClient client = new SolrZkClient(server.getZkAddress(), TIMEOUT)) {\n\n        ZkController.createClusterZkNodes(client);\n\n        try (ZkStateReader zkStateReader = new ZkStateReader(client)) {\n          zkStateReader.createClusterStateWatchersAndUpdate();\n\n          // getBaseUrlForNodeName\n          assertEquals(\"http://zzz.xxx:1234/solr\",\n              zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n          assertEquals(\"http://xxx:99\",\n              zkStateReader.getBaseUrlForNodeName(\"xxx:99_\"));\n          assertEquals(\"http://foo-bar.baz.org:9999/some_dir\",\n              zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_some_dir\"));\n          assertEquals(\"http://foo-bar.baz.org:9999/solr/sub_dir\",\n              zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_solr%2Fsub_dir\"));\n\n          // generateNodeName + getBaseUrlForNodeName\n          assertEquals(\"http://foo:9876/solr\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo\", \"9876\", \"solr\")));\n          assertEquals(\"http://foo:9876/solr\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo\", \"9876\", \"/solr\")));\n          assertEquals(\"http://foo:9876/solr\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo\", \"9876\", \"/solr/\")));\n          assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo.bar.com\", \"9876\", \"solr/sub_dir\")));\n          assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo.bar.com\", \"9876\", \"/solr/sub_dir/\")));\n          assertEquals(\"http://foo-bar:9876\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar\", \"9876\", \"\")));\n          assertEquals(\"http://foo-bar:9876\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar\", \"9876\", \"/\")));\n          assertEquals(\"http://foo-bar.com:80/some_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar.com\", \"80\", \"some_dir\")));\n          assertEquals(\"http://foo-bar.com:80/some_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar.com\", \"80\", \"/some_dir\")));\n\n        }\n\n        ClusterProperties cp = new ClusterProperties(client);\n        cp.setClusterProperty(\"urlScheme\", \"https\");\n        \n        //Verify the URL Scheme is taken into account\n\n        try (ZkStateReader zkStateReader = new ZkStateReader(client)) {\n\n          zkStateReader.createClusterStateWatchersAndUpdate();\n\n          assertEquals(\"https://zzz.xxx:1234/solr\",\n              zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n\n          assertEquals(\"https://foo-bar.com:80/some_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar.com\", \"80\", \"/some_dir\")));\n\n        }\n      }\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","sourceOld":"  public void testNodeNameUrlConversion() throws Exception {\n\n    // nodeName from parts\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr\"));\n    assertEquals(\"localhost:8888_solr\",\n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/solr/\"));\n    // root context\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"\"));\n    assertEquals(\"localhost:8888_\", \n                 ZkController.generateNodeName(\"localhost\", \"8888\", \"/\"));\n    // subdir\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir\"));\n    assertEquals(\"foo-bar:77_solr%2Fsub_dir\",\n                 ZkController.generateNodeName(\"foo-bar\", \"77\", \"/solr/sub_dir/\"));\n\n    // setup a SolrZkClient to do some getBaseUrlForNodeName testing\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    try {\n      server.run();\n\n      try (SolrZkClient client = new SolrZkClient(server.getZkAddress(), TIMEOUT)) {\n\n        ZkController.createClusterZkNodes(client);\n\n        try (ZkStateReader zkStateReader = new ZkStateReader(client)) {\n          zkStateReader.createClusterStateWatchersAndUpdate();\n\n          // getBaseUrlForNodeName\n          assertEquals(\"http://zzz.xxx:1234/solr\",\n              zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n          assertEquals(\"http://xxx:99\",\n              zkStateReader.getBaseUrlForNodeName(\"xxx:99_\"));\n          assertEquals(\"http://foo-bar.baz.org:9999/some_dir\",\n              zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_some_dir\"));\n          assertEquals(\"http://foo-bar.baz.org:9999/solr/sub_dir\",\n              zkStateReader.getBaseUrlForNodeName(\"foo-bar.baz.org:9999_solr%2Fsub_dir\"));\n\n          // generateNodeName + getBaseUrlForNodeName\n          assertEquals(\"http://foo:9876/solr\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo\", \"9876\", \"solr\")));\n          assertEquals(\"http://foo:9876/solr\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo\", \"9876\", \"/solr\")));\n          assertEquals(\"http://foo:9876/solr\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo\", \"9876\", \"/solr/\")));\n          assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo.bar.com\", \"9876\", \"solr/sub_dir\")));\n          assertEquals(\"http://foo.bar.com:9876/solr/sub_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo.bar.com\", \"9876\", \"/solr/sub_dir/\")));\n          assertEquals(\"http://foo-bar:9876\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar\", \"9876\", \"\")));\n          assertEquals(\"http://foo-bar:9876\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar\", \"9876\", \"/\")));\n          assertEquals(\"http://foo-bar.com:80/some_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar.com\", \"80\", \"some_dir\")));\n          assertEquals(\"http://foo-bar.com:80/some_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar.com\", \"80\", \"/some_dir\")));\n\n        }\n\n        ClusterProperties cp = new ClusterProperties(client);\n        cp.setClusterProperty(\"urlScheme\", \"https\");\n        \n        //Verify the URL Scheme is taken into account\n\n        try (ZkStateReader zkStateReader = new ZkStateReader(client)) {\n\n          zkStateReader.createClusterStateWatchersAndUpdate();\n\n          assertEquals(\"https://zzz.xxx:1234/solr\",\n              zkStateReader.getBaseUrlForNodeName(\"zzz.xxx:1234_solr\"));\n\n          assertEquals(\"https://foo-bar.com:80/some_dir\",\n              zkStateReader.getBaseUrlForNodeName\n                  (ZkController.generateNodeName(\"foo-bar.com\", \"80\", \"/some_dir\")));\n\n        }\n      }\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","227c5621583c5b934878e3c051aae9c4649ae700"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72","1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"b693a83132c9e45afcd564fd65a25b60ed80388b":["f4abec28b874149a7223e32cc7a01704c27790de"],"0ad30c6a479e764150a3316e57263319775f1df2":["b693a83132c9e45afcd564fd65a25b60ed80388b","115923bc88e5b1dc4bef049b1ded8486723052ed"],"f4abec28b874149a7223e32cc7a01704c27790de":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["b693a83132c9e45afcd564fd65a25b60ed80388b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["b693a83132c9e45afcd564fd65a25b60ed80388b","0ad30c6a479e764150a3316e57263319775f1df2"],"042891089d57d0e6af18ea6cec15f9e9a7da7d25":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"227c5621583c5b934878e3c051aae9c4649ae700":["042891089d57d0e6af18ea6cec15f9e9a7da7d25"],"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72":["227c5621583c5b934878e3c051aae9c4649ae700"],"115923bc88e5b1dc4bef049b1ded8486723052ed":["b693a83132c9e45afcd564fd65a25b60ed80388b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"1778938cb7fb298e6e07a43e2d5acaf552d61518":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1778938cb7fb298e6e07a43e2d5acaf552d61518"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["f4abec28b874149a7223e32cc7a01704c27790de"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["1778938cb7fb298e6e07a43e2d5acaf552d61518"],"b693a83132c9e45afcd564fd65a25b60ed80388b":["0ad30c6a479e764150a3316e57263319775f1df2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89","115923bc88e5b1dc4bef049b1ded8486723052ed"],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"f4abec28b874149a7223e32cc7a01704c27790de":["b693a83132c9e45afcd564fd65a25b60ed80388b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"042891089d57d0e6af18ea6cec15f9e9a7da7d25":["227c5621583c5b934878e3c051aae9c4649ae700"],"227c5621583c5b934878e3c051aae9c4649ae700":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72"],"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72":["bb1f22cfa77230b5f05b7784feae5367f6bbb488","2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"115923bc88e5b1dc4bef049b1ded8486723052ed":["0ad30c6a479e764150a3316e57263319775f1df2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","042891089d57d0e6af18ea6cec15f9e9a7da7d25"],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"1778938cb7fb298e6e07a43e2d5acaf552d61518":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}