{"path":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#FloatsWriter(Directory,String,int,AtomicLong).mjava","commits":[{"id":"5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4","date":1291128345,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#FloatsWriter(Directory,String,int,AtomicLong).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#FloatsWriter(Directory,String,int).mjava","sourceNew":"    protected FloatsWriter(Directory dir, String id, int precision, AtomicLong bytesUsed)\n        throws IOException {\n      super(bytesUsed);\n      this.dir = dir;\n      this.id = id;\n      this.precision = (byte) precision;\n    }\n\n","sourceOld":"    protected FloatsWriter(Directory dir, String id, int precision)\n        throws IOException {\n      this.dir = dir;\n      this.id = id;\n      this.precision = (byte) precision;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#FloatsWriter(Directory,String,int,AtomicLong).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#FloatsWriter(Directory,String,int,AtomicLong).mjava","sourceNew":"    protected FloatsWriter(Directory dir, String id, int precision,\n        AtomicLong bytesUsed) throws IOException {\n      super(bytesUsed);\n      this.dir = dir;\n      this.id = id;\n      this.precision = (byte) precision;\n      initDatOut();\n    }\n\n","sourceOld":"    protected FloatsWriter(Directory dir, String id, int precision, AtomicLong bytesUsed)\n        throws IOException {\n      super(bytesUsed);\n      this.dir = dir;\n      this.id = id;\n      this.precision = (byte) precision;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd04845a7e675e6eda07c4475e3f5ec15d5a2f94","date":1305894342,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#FloatsWriter(Directory,String,int,AtomicLong).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#FloatsWriter(Directory,String,int,AtomicLong).mjava","sourceNew":"    protected FloatsWriter(Directory dir, String id, int precision,\n        AtomicLong bytesUsed) throws IOException {\n      super(bytesUsed);\n      this.id = id;\n      this.precision = (byte) precision;\n      datOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      CodecUtil.writeHeader(datOut, CODEC_NAME, VERSION_CURRENT);\n      assert datOut.getFilePointer() == CodecUtil.headerLength(CODEC_NAME);\n      datOut.writeByte(this.precision);\n    }\n\n","sourceOld":"    protected FloatsWriter(Directory dir, String id, int precision,\n        AtomicLong bytesUsed) throws IOException {\n      super(bytesUsed);\n      this.dir = dir;\n      this.id = id;\n      this.precision = (byte) precision;\n      initDatOut();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11352ebb2f3f885d30324a3f4684be92642a25ee","date":1306844538,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#FloatsWriter(Directory,String,int,AtomicLong).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#FloatsWriter(Directory,String,int,AtomicLong).mjava","sourceNew":"    protected FloatsWriter(Directory dir, String id, int precision,\n        AtomicLong bytesUsed) throws IOException {\n      super(bytesUsed);\n      this.id = id;\n      this.precision = (byte) precision;\n      datOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      boolean success = false;\n      try {\n        CodecUtil.writeHeader(datOut, CODEC_NAME, VERSION_CURRENT);\n        assert datOut.getFilePointer() == CodecUtil.headerLength(CODEC_NAME);\n        datOut.writeByte(this.precision);\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datOut);\n        }\n      }\n    }\n\n","sourceOld":"    protected FloatsWriter(Directory dir, String id, int precision,\n        AtomicLong bytesUsed) throws IOException {\n      super(bytesUsed);\n      this.id = id;\n      this.precision = (byte) precision;\n      datOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      CodecUtil.writeHeader(datOut, CODEC_NAME, VERSION_CURRENT);\n      assert datOut.getFilePointer() == CodecUtil.headerLength(CODEC_NAME);\n      datOut.writeByte(this.precision);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#FloatsWriter(Directory,String,int,AtomicLong).mjava","pathOld":"/dev/null","sourceNew":"    protected FloatsWriter(Directory dir, String id, int precision,\n        AtomicLong bytesUsed) throws IOException {\n      super(bytesUsed);\n      this.id = id;\n      this.precision = (byte) precision;\n      datOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      boolean success = false;\n      try {\n        CodecUtil.writeHeader(datOut, CODEC_NAME, VERSION_CURRENT);\n        assert datOut.getFilePointer() == CodecUtil.headerLength(CODEC_NAME);\n        datOut.writeByte(this.precision);\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datOut);\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#FloatsWriter(Directory,String,int,AtomicLong).mjava","pathOld":"/dev/null","sourceNew":"    protected FloatsWriter(Directory dir, String id, int precision,\n        AtomicLong bytesUsed) throws IOException {\n      super(bytesUsed);\n      this.id = id;\n      this.precision = (byte) precision;\n      datOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      boolean success = false;\n      try {\n        CodecUtil.writeHeader(datOut, CODEC_NAME, VERSION_CURRENT);\n        assert datOut.getFilePointer() == CodecUtil.headerLength(CODEC_NAME);\n        datOut.writeByte(this.precision);\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datOut);\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"639c36565ce03aed5b0fce7c9e4448e53a1f7efd","date":1308580104,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#FloatsWriter(Directory,String,int,AtomicLong,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#FloatsWriter(Directory,String,int,AtomicLong).mjava","sourceNew":"    protected FloatsWriter(Directory dir, String id, int precision,\n        AtomicLong bytesUsed, IOContext context) throws IOException {\n      super(bytesUsed);\n      this.id = id;\n      this.precision = (byte) precision;\n      datOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION), context);\n      boolean success = false;\n      try {\n        CodecUtil.writeHeader(datOut, CODEC_NAME, VERSION_CURRENT);\n        assert datOut.getFilePointer() == CodecUtil.headerLength(CODEC_NAME);\n        datOut.writeByte(this.precision);\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datOut);\n        }\n      }\n    }\n\n","sourceOld":"    protected FloatsWriter(Directory dir, String id, int precision,\n        AtomicLong bytesUsed) throws IOException {\n      super(bytesUsed);\n      this.id = id;\n      this.precision = (byte) precision;\n      datOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      boolean success = false;\n      try {\n        CodecUtil.writeHeader(datOut, CODEC_NAME, VERSION_CURRENT);\n        assert datOut.getFilePointer() == CodecUtil.headerLength(CODEC_NAME);\n        datOut.writeByte(this.precision);\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datOut);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d99ebe8731bf50d5cb230be452816572bdfd7037","date":1309162035,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#FloatsWriter(Directory,String,int,AtomicLong).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#FloatsWriter(Directory,String,int,AtomicLong).mjava","sourceNew":"    protected FloatsWriter(Directory dir, String id, int precision,\n        AtomicLong bytesUsed) throws IOException {\n      super(bytesUsed);\n      this.id = id;\n      this.precision = (byte) precision;\n      this.dir = dir;\n     \n    }\n\n","sourceOld":"    protected FloatsWriter(Directory dir, String id, int precision,\n        AtomicLong bytesUsed) throws IOException {\n      super(bytesUsed);\n      this.id = id;\n      this.precision = (byte) precision;\n      datOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      boolean success = false;\n      try {\n        CodecUtil.writeHeader(datOut, CODEC_NAME, VERSION_CURRENT);\n        assert datOut.getFilePointer() == CodecUtil.headerLength(CODEC_NAME);\n        datOut.writeByte(this.precision);\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datOut);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#FloatsWriter(Directory,String,int,AtomicLong).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#FloatsWriter(Directory,String,int,AtomicLong).mjava","sourceNew":"    protected FloatsWriter(Directory dir, String id, int precision,\n        AtomicLong bytesUsed) throws IOException {\n      super(bytesUsed);\n      this.id = id;\n      this.precision = (byte) precision;\n      this.dir = dir;\n     \n    }\n\n","sourceOld":"    protected FloatsWriter(Directory dir, String id, int precision,\n        AtomicLong bytesUsed) throws IOException {\n      super(bytesUsed);\n      this.id = id;\n      this.precision = (byte) precision;\n      datOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      boolean success = false;\n      try {\n        CodecUtil.writeHeader(datOut, CODEC_NAME, VERSION_CURRENT);\n        assert datOut.getFilePointer() == CodecUtil.headerLength(CODEC_NAME);\n        datOut.writeByte(this.precision);\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datOut);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#FloatsWriter(Directory,String,int,AtomicLong,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#FloatsWriter(Directory,String,int,AtomicLong).mjava","sourceNew":"    protected FloatsWriter(Directory dir, String id, int precision,\n        AtomicLong bytesUsed, IOContext context) throws IOException {\n      super(bytesUsed);\n      this.id = id;\n      this.precision = (byte) precision;\n      this.dir = dir;\n      this.context = context;\n     \n    }\n\n","sourceOld":"    protected FloatsWriter(Directory dir, String id, int precision,\n        AtomicLong bytesUsed) throws IOException {\n      super(bytesUsed);\n      this.id = id;\n      this.precision = (byte) precision;\n      this.dir = dir;\n     \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#FloatsWriter(Directory,String,int,AtomicLong,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsWriter#FloatsWriter(Directory,String,int,AtomicLong).mjava","sourceNew":"    protected FloatsWriter(Directory dir, String id, int precision,\n        AtomicLong bytesUsed, IOContext context) throws IOException {\n      super(bytesUsed);\n      this.id = id;\n      this.precision = (byte) precision;\n      this.dir = dir;\n      this.context = context;\n     \n    }\n\n","sourceOld":"    protected FloatsWriter(Directory dir, String id, int precision,\n        AtomicLong bytesUsed) throws IOException {\n      super(bytesUsed);\n      this.id = id;\n      this.precision = (byte) precision;\n      this.dir = dir;\n     \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2e8d7ba2175f47e280231533f7d3016249cea88b"],"d99ebe8731bf50d5cb230be452816572bdfd7037":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"2553b00f699380c64959ccb27991289aae87be2e":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","d99ebe8731bf50d5cb230be452816572bdfd7037"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","11352ebb2f3f885d30324a3f4684be92642a25ee"],"11352ebb2f3f885d30324a3f4684be92642a25ee":["dd04845a7e675e6eda07c4475e3f5ec15d5a2f94"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["2553b00f699380c64959ccb27991289aae87be2e","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"dd04845a7e675e6eda07c4475e3f5ec15d5a2f94":["ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["d99ebe8731bf50d5cb230be452816572bdfd7037","639c36565ce03aed5b0fce7c9e4448e53a1f7efd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ddc4c914be86e34b54f70023f45a60fa7f04e929"]},"commit2Childs":{"5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4":["ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["2553b00f699380c64959ccb27991289aae87be2e"],"d99ebe8731bf50d5cb230be452816572bdfd7037":["2553b00f699380c64959ccb27991289aae87be2e","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["dd04845a7e675e6eda07c4475e3f5ec15d5a2f94"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"2553b00f699380c64959ccb27991289aae87be2e":["5d004d0e0b3f65bb40da76d476d659d7888270e8"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","d99ebe8731bf50d5cb230be452816572bdfd7037","639c36565ce03aed5b0fce7c9e4448e53a1f7efd"],"11352ebb2f3f885d30324a3f4684be92642a25ee":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4","a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","ab5cb6a74aefb78aa0569857970b9151dfe2e787","2e8d7ba2175f47e280231533f7d3016249cea88b"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"dd04845a7e675e6eda07c4475e3f5ec15d5a2f94":["11352ebb2f3f885d30324a3f4684be92642a25ee"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}