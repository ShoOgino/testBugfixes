{"path":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#[T]_checkIterator(Iterator[T]).mjava","commits":[{"id":"0936055c0eed56be3e4ae5c9db5b0e355390736a","date":1410874015,"type":2,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#[T]_checkIterator(Iterator[T]).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingDocValuesFormat#[T]_checkIterator(Iterator[T],long,boolean).mjava","sourceNew":"  /** \n   * Checks that the provided iterator is well-formed.\n   * <ul>\n   *   <li>is read-only: does not allow {@code remove}\n   *   <li>does not return null elements.\n   *   <li>throws NoSuchElementException if {@code next} is called\n   *       after {@code hasNext} returns false. \n   * </ul>\n   */\n  public static <T> void checkIterator(Iterator<T> iterator) {\n    while (iterator.hasNext()) {\n      T v = iterator.next();\n      assert v != null;\n      try {\n        iterator.remove();\n        throw new AssertionError(\"broken iterator (supports remove): \" + iterator);\n      } catch (UnsupportedOperationException expected) {\n        // ok\n      }\n    }\n    try {\n      iterator.next();\n      throw new AssertionError(\"broken iterator (allows next() when hasNext==false) \" + iterator);\n    } catch (NoSuchElementException expected) {\n      // ok\n    }\n  }\n\n","sourceOld":"  static <T> void checkIterator(Iterator<T> iterator, long expectedSize, boolean allowNull) {\n    for (long i = 0; i < expectedSize; i++) {\n      boolean hasNext = iterator.hasNext();\n      assert hasNext;\n      T v = iterator.next();\n      assert allowNull || v != null;\n      try {\n        iterator.remove();\n        throw new AssertionError(\"broken iterator (supports remove): \" + iterator);\n      } catch (UnsupportedOperationException expected) {\n        // ok\n      }\n    }\n    assert !iterator.hasNext();\n    try {\n      iterator.next();\n      throw new AssertionError(\"broken iterator (allows next() when hasNext==false) \" + iterator);\n    } catch (NoSuchElementException expected) {\n      // ok\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0936055c0eed56be3e4ae5c9db5b0e355390736a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0936055c0eed56be3e4ae5c9db5b0e355390736a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0936055c0eed56be3e4ae5c9db5b0e355390736a"],"0936055c0eed56be3e4ae5c9db5b0e355390736a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}