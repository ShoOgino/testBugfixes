{"path":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","pathOld":"modules/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseDV = !\"Lucene3x\".equals(w.w.getConfig().getCodec().getName());\n    boolean useDv = canUseDV && random().nextBoolean();\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"dus\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    AbstractGroupFacetCollector groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(3, airportResult.getTotalCount());\n    assertEquals(0, airportResult.getTotalMissingCount());\n\n    List<TermGroupFacetCollector.FacetEntry> entries = airportResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n    assertEquals(1, entries.get(1).getCount());\n\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"15\", canUseDV);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, true, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    assertEquals(5, airportResult.getTotalCount());\n    assertEquals(1, airportResult.getTotalMissingCount());\n\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n    assertEquals(1, entries.get(1).getCount());\n\n    groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"15\", canUseDV);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", canUseDV);\n    addField(doc, \"airport\", \"dus\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(7, airportResult.getTotalCount());\n    assertEquals(1, airportResult.getTotalMissingCount());\n\n    entries = airportResult.getFacetEntries(0, 10);\n    assertEquals(3, entries.size());\n    assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n    assertEquals(3, entries.get(1).getCount());\n    assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n    assertEquals(2, entries.get(2).getCount());\n\n    groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", \"1\", false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseDV = !\"Lucene3x\".equals(w.w.getConfig().getCodec().getName());\n    boolean useDv = canUseDV && random().nextBoolean();\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"dus\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    AbstractGroupFacetCollector groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(3, airportResult.getTotalCount());\n    assertEquals(0, airportResult.getTotalMissingCount());\n\n    List<TermGroupFacetCollector.FacetEntry> entries = airportResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n    assertEquals(1, entries.get(1).getCount());\n\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"15\", canUseDV);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, true, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    assertEquals(5, airportResult.getTotalCount());\n    assertEquals(1, airportResult.getTotalMissingCount());\n\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n    assertEquals(1, entries.get(1).getCount());\n\n    groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"15\", canUseDV);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", canUseDV);\n    addField(doc, \"airport\", \"dus\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(7, airportResult.getTotalCount());\n    assertEquals(1, airportResult.getTotalMissingCount());\n\n    entries = airportResult.getFacetEntries(0, 10);\n    assertEquals(3, entries.size());\n    assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n    assertEquals(3, entries.get(1).getCount());\n    assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n    assertEquals(2, entries.get(2).getCount());\n\n    groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", \"1\", false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57ae3024996ccdb3c36c42cb890e1efb37df4ce8","date":1338343651,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseDV = true;\n    boolean useDv = canUseDV && random().nextBoolean();\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"dus\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    AbstractGroupFacetCollector groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(3, airportResult.getTotalCount());\n    assertEquals(0, airportResult.getTotalMissingCount());\n\n    List<TermGroupFacetCollector.FacetEntry> entries = airportResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n    assertEquals(1, entries.get(1).getCount());\n\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"15\", canUseDV);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, true, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    assertEquals(5, airportResult.getTotalCount());\n    assertEquals(1, airportResult.getTotalMissingCount());\n\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n    assertEquals(1, entries.get(1).getCount());\n\n    groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"15\", canUseDV);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", canUseDV);\n    addField(doc, \"airport\", \"dus\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(7, airportResult.getTotalCount());\n    assertEquals(1, airportResult.getTotalMissingCount());\n\n    entries = airportResult.getFacetEntries(0, 10);\n    assertEquals(3, entries.size());\n    assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n    assertEquals(3, entries.get(1).getCount());\n    assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n    assertEquals(2, entries.get(2).getCount());\n\n    groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", \"1\", false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseDV = !\"Lucene3x\".equals(w.w.getConfig().getCodec().getName());\n    boolean useDv = canUseDV && random().nextBoolean();\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"dus\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    AbstractGroupFacetCollector groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(3, airportResult.getTotalCount());\n    assertEquals(0, airportResult.getTotalMissingCount());\n\n    List<TermGroupFacetCollector.FacetEntry> entries = airportResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n    assertEquals(1, entries.get(1).getCount());\n\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"15\", canUseDV);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, true, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    assertEquals(5, airportResult.getTotalCount());\n    assertEquals(1, airportResult.getTotalMissingCount());\n\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n    assertEquals(1, entries.get(1).getCount());\n\n    groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"15\", canUseDV);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", canUseDV);\n    addField(doc, \"airport\", \"dus\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(7, airportResult.getTotalCount());\n    assertEquals(1, airportResult.getTotalMissingCount());\n\n    entries = airportResult.getFacetEntries(0, 10);\n    assertEquals(3, entries.size());\n    assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n    assertEquals(3, entries.get(1).getCount());\n    assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n    assertEquals(2, entries.get(2).getCount());\n\n    groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", \"1\", false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"854f97cd3613b9579fba83755c80b697e2f3993f","date":1353527621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseDV = true;\n    boolean useDv = canUseDV && random().nextBoolean();\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    AbstractGroupFacetCollector groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(3, airportResult.getTotalCount());\n    assertEquals(0, airportResult.getTotalMissingCount());\n\n    List<TermGroupFacetCollector.FacetEntry> entries = airportResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n    assertEquals(1, entries.get(1).getCount());\n\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, true, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    assertEquals(5, airportResult.getTotalCount());\n    assertEquals(1, airportResult.getTotalMissingCount());\n\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n    assertEquals(1, entries.get(1).getCount());\n\n    groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(7, airportResult.getTotalCount());\n    assertEquals(1, airportResult.getTotalMissingCount());\n\n    entries = airportResult.getFacetEntries(0, 10);\n    assertEquals(3, entries.size());\n    assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n    assertEquals(3, entries.get(1).getCount());\n    assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n    assertEquals(2, entries.get(2).getCount());\n\n    groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", \"1\", false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseDV = true;\n    boolean useDv = canUseDV && random().nextBoolean();\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"dus\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    AbstractGroupFacetCollector groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(3, airportResult.getTotalCount());\n    assertEquals(0, airportResult.getTotalMissingCount());\n\n    List<TermGroupFacetCollector.FacetEntry> entries = airportResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n    assertEquals(1, entries.get(1).getCount());\n\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"15\", canUseDV);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, true, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    assertEquals(5, airportResult.getTotalCount());\n    assertEquals(1, airportResult.getTotalMissingCount());\n\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n    assertEquals(1, entries.get(1).getCount());\n\n    groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"15\", canUseDV);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", canUseDV);\n    addField(doc, \"airport\", \"dus\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(7, airportResult.getTotalCount());\n    assertEquals(1, airportResult.getTotalMissingCount());\n\n    entries = airportResult.getFacetEntries(0, 10);\n    assertEquals(3, entries.size());\n    assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n    assertEquals(3, entries.get(1).getCount());\n    assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n    assertEquals(2, entries.get(2).getCount());\n\n    groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", \"1\", false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"46bf1a48fd33bf34430ade646b7dd67b984be2a8","date":1358725746,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseDV = true;\n    boolean useDv = canUseDV && random().nextBoolean();\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    AbstractGroupFacetCollector groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(3, airportResult.getTotalCount());\n    assertEquals(0, airportResult.getTotalMissingCount());\n\n    List<TermGroupFacetCollector.FacetEntry> entries = airportResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n    assertEquals(1, entries.get(1).getCount());\n\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    // missing airport\n    if (useDv) {\n      addField(doc, \"airport\", \"\", useDv);\n    }\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, !useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    if (useDv) {\n      assertEquals(6, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    } else {\n      assertEquals(5, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    entries = airportResult.getFacetEntries(0, 10);\n    if (useDv) {\n      assertEquals(8, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(4, entries.size());\n      assertEquals(\"\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n      assertEquals(\"ams\", entries.get(1).getValue().utf8ToString());\n      assertEquals(2, entries.get(1).getCount());\n      assertEquals(\"bru\", entries.get(2).getValue().utf8ToString());\n      assertEquals(3, entries.get(2).getCount());\n      assertEquals(\"dus\", entries.get(3).getValue().utf8ToString());\n      assertEquals(2, entries.get(3).getCount());\n    } else {\n      assertEquals(7, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(3, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n      assertEquals(3, entries.get(1).getCount());\n      assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n      assertEquals(2, entries.get(2).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", \"1\", false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseDV = true;\n    boolean useDv = canUseDV && random().nextBoolean();\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    AbstractGroupFacetCollector groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(3, airportResult.getTotalCount());\n    assertEquals(0, airportResult.getTotalMissingCount());\n\n    List<TermGroupFacetCollector.FacetEntry> entries = airportResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n    assertEquals(1, entries.get(1).getCount());\n\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, true, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    assertEquals(5, airportResult.getTotalCount());\n    assertEquals(1, airportResult.getTotalMissingCount());\n\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n    assertEquals(1, entries.get(1).getCount());\n\n    groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(7, airportResult.getTotalCount());\n    assertEquals(1, airportResult.getTotalMissingCount());\n\n    entries = airportResult.getFacetEntries(0, 10);\n    assertEquals(3, entries.size());\n    assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n    assertEquals(3, entries.get(1).getCount());\n    assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n    assertEquals(2, entries.get(2).getCount());\n\n    groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", \"1\", false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["3685dcafc9195b0631414aa4d422f788479e62b7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseDV = true;\n    boolean useDv = canUseDV && random().nextBoolean();\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    AbstractGroupFacetCollector groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(3, airportResult.getTotalCount());\n    assertEquals(0, airportResult.getTotalMissingCount());\n\n    List<TermGroupFacetCollector.FacetEntry> entries = airportResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n    assertEquals(1, entries.get(1).getCount());\n\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    // missing airport\n    if (useDv) {\n      addField(doc, \"airport\", \"\", useDv);\n    }\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, !useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    if (useDv) {\n      assertEquals(6, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    } else {\n      assertEquals(5, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    entries = airportResult.getFacetEntries(0, 10);\n    if (useDv) {\n      assertEquals(8, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(4, entries.size());\n      assertEquals(\"\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n      assertEquals(\"ams\", entries.get(1).getValue().utf8ToString());\n      assertEquals(2, entries.get(1).getCount());\n      assertEquals(\"bru\", entries.get(2).getValue().utf8ToString());\n      assertEquals(3, entries.get(2).getCount());\n      assertEquals(\"dus\", entries.get(3).getValue().utf8ToString());\n      assertEquals(2, entries.get(3).getCount());\n    } else {\n      assertEquals(7, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(3, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n      assertEquals(3, entries.get(1).getCount());\n      assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n      assertEquals(2, entries.get(2).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", \"1\", false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseDV = true;\n    boolean useDv = canUseDV && random().nextBoolean();\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"dus\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    AbstractGroupFacetCollector groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(3, airportResult.getTotalCount());\n    assertEquals(0, airportResult.getTotalMissingCount());\n\n    List<TermGroupFacetCollector.FacetEntry> entries = airportResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n    assertEquals(1, entries.get(1).getCount());\n\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"15\", canUseDV);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, true, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    assertEquals(5, airportResult.getTotalCount());\n    assertEquals(1, airportResult.getTotalMissingCount());\n\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n    assertEquals(1, entries.get(1).getCount());\n\n    groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"15\", canUseDV);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", canUseDV);\n    addField(doc, \"airport\", \"dus\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(7, airportResult.getTotalCount());\n    assertEquals(1, airportResult.getTotalMissingCount());\n\n    entries = airportResult.getFacetEntries(0, 10);\n    assertEquals(3, entries.size());\n    assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n    assertEquals(3, entries.get(1).getCount());\n    assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n    assertEquals(2, entries.get(2).getCount());\n\n    groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", \"1\", false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":["8b89f8e2c44ce7efaf10978b9e5c6b95a31706b2","369f44b665973d5aa5fc7d0f2a75ffad475d21ee"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3685dcafc9195b0631414aa4d422f788479e62b7","date":1364492243,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseDV = true;\n    boolean useDv = canUseDV && random().nextBoolean();\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n\n    List<TermGroupFacetCollector.FacetEntry> entries = null;\n    AbstractGroupFacetCollector groupedAirportFacetCollector = null; \n    TermGroupFacetCollector.GroupedFacetResult airportResult = null;\n    \n    for (int limit : new int[] { 2, 10, 100, Integer.MAX_VALUE }) {\n      // any of these limits is plenty for the data we have\n\n      groupedAirportFacetCollector = createRandomCollector\n        (useDv ? \"hotel_dv\" : \"hotel\", \n         useDv ? \"airport_dv\" : \"airport\", null, false);\n      indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n      int maxOffset = 5;\n      airportResult = groupedAirportFacetCollector.mergeSegmentResults\n        (Integer.MAX_VALUE == limit ? limit : maxOffset + limit, 0, false);\n      \n      assertEquals(3, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n\n      entries = airportResult.getFacetEntries(maxOffset, limit);\n      assertEquals(0, entries.size());\n\n      entries = airportResult.getFacetEntries(0, limit);\n      assertEquals(2, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n\n      entries = airportResult.getFacetEntries(1, limit);\n      assertEquals(1, entries.size());\n      assertEquals(\"dus\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n    }\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    // missing airport\n    if (useDv) {\n      addField(doc, \"airport\", \"\", useDv);\n    }\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, !useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    if (useDv) {\n      assertEquals(6, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    } else {\n      assertEquals(5, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    entries = airportResult.getFacetEntries(0, 10);\n    if (useDv) {\n      assertEquals(8, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(4, entries.size());\n      assertEquals(\"\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n      assertEquals(\"ams\", entries.get(1).getValue().utf8ToString());\n      assertEquals(2, entries.get(1).getCount());\n      assertEquals(\"bru\", entries.get(2).getValue().utf8ToString());\n      assertEquals(3, entries.get(2).getCount());\n      assertEquals(\"dus\", entries.get(3).getValue().utf8ToString());\n      assertEquals(2, entries.get(3).getCount());\n    } else {\n      assertEquals(7, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(3, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n      assertEquals(3, entries.get(1).getCount());\n      assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n      assertEquals(2, entries.get(2).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", \"1\", false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseDV = true;\n    boolean useDv = canUseDV && random().nextBoolean();\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    AbstractGroupFacetCollector groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(3, airportResult.getTotalCount());\n    assertEquals(0, airportResult.getTotalMissingCount());\n\n    List<TermGroupFacetCollector.FacetEntry> entries = airportResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n    assertEquals(1, entries.get(1).getCount());\n\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    // missing airport\n    if (useDv) {\n      addField(doc, \"airport\", \"\", useDv);\n    }\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, !useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    if (useDv) {\n      assertEquals(6, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    } else {\n      assertEquals(5, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    entries = airportResult.getFacetEntries(0, 10);\n    if (useDv) {\n      assertEquals(8, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(4, entries.size());\n      assertEquals(\"\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n      assertEquals(\"ams\", entries.get(1).getValue().utf8ToString());\n      assertEquals(2, entries.get(1).getCount());\n      assertEquals(\"bru\", entries.get(2).getValue().utf8ToString());\n      assertEquals(3, entries.get(2).getCount());\n      assertEquals(\"dus\", entries.get(3).getValue().utf8ToString());\n      assertEquals(2, entries.get(3).getCount());\n    } else {\n      assertEquals(7, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(3, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n      assertEquals(3, entries.get(1).getCount());\n      assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n      assertEquals(2, entries.get(2).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", \"1\", false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":["46bf1a48fd33bf34430ade646b7dd67b984be2a8","369f44b665973d5aa5fc7d0f2a75ffad475d21ee"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97d4692d0c601ff773f0a2231967312428a904e4","date":1366026608,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean useDv = random().nextBoolean();\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n\n    List<TermGroupFacetCollector.FacetEntry> entries;\n    AbstractGroupFacetCollector groupedAirportFacetCollector;\n    TermGroupFacetCollector.GroupedFacetResult airportResult;\n    \n    for (int limit : new int[] { 2, 10, 100, Integer.MAX_VALUE }) {\n      // any of these limits is plenty for the data we have\n\n      groupedAirportFacetCollector = createRandomCollector\n        (useDv ? \"hotel_dv\" : \"hotel\", \n         useDv ? \"airport_dv\" : \"airport\", null, false);\n      indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n      int maxOffset = 5;\n      airportResult = groupedAirportFacetCollector.mergeSegmentResults\n        (Integer.MAX_VALUE == limit ? limit : maxOffset + limit, 0, false);\n      \n      assertEquals(3, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n\n      entries = airportResult.getFacetEntries(maxOffset, limit);\n      assertEquals(0, entries.size());\n\n      entries = airportResult.getFacetEntries(0, limit);\n      assertEquals(2, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n\n      entries = airportResult.getFacetEntries(1, limit);\n      assertEquals(1, entries.size());\n      assertEquals(\"dus\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n    }\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    // missing airport\n    if (useDv) {\n      addField(doc, \"airport\", \"\", useDv);\n    }\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, !useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    if (useDv) {\n      assertEquals(6, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    } else {\n      assertEquals(5, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    entries = airportResult.getFacetEntries(0, 10);\n    if (useDv) {\n      assertEquals(8, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(4, entries.size());\n      assertEquals(\"\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n      assertEquals(\"ams\", entries.get(1).getValue().utf8ToString());\n      assertEquals(2, entries.get(1).getCount());\n      assertEquals(\"bru\", entries.get(2).getValue().utf8ToString());\n      assertEquals(3, entries.get(2).getCount());\n      assertEquals(\"dus\", entries.get(3).getValue().utf8ToString());\n      assertEquals(2, entries.get(3).getCount());\n    } else {\n      assertEquals(7, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(3, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n      assertEquals(3, entries.get(1).getCount());\n      assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n      assertEquals(2, entries.get(2).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", \"1\", false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseDV = true;\n    boolean useDv = canUseDV && random().nextBoolean();\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n\n    List<TermGroupFacetCollector.FacetEntry> entries = null;\n    AbstractGroupFacetCollector groupedAirportFacetCollector = null; \n    TermGroupFacetCollector.GroupedFacetResult airportResult = null;\n    \n    for (int limit : new int[] { 2, 10, 100, Integer.MAX_VALUE }) {\n      // any of these limits is plenty for the data we have\n\n      groupedAirportFacetCollector = createRandomCollector\n        (useDv ? \"hotel_dv\" : \"hotel\", \n         useDv ? \"airport_dv\" : \"airport\", null, false);\n      indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n      int maxOffset = 5;\n      airportResult = groupedAirportFacetCollector.mergeSegmentResults\n        (Integer.MAX_VALUE == limit ? limit : maxOffset + limit, 0, false);\n      \n      assertEquals(3, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n\n      entries = airportResult.getFacetEntries(maxOffset, limit);\n      assertEquals(0, entries.size());\n\n      entries = airportResult.getFacetEntries(0, limit);\n      assertEquals(2, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n\n      entries = airportResult.getFacetEntries(1, limit);\n      assertEquals(1, entries.size());\n      assertEquals(\"dus\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n    }\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    // missing airport\n    if (useDv) {\n      addField(doc, \"airport\", \"\", useDv);\n    }\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, !useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    if (useDv) {\n      assertEquals(6, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    } else {\n      assertEquals(5, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    entries = airportResult.getFacetEntries(0, 10);\n    if (useDv) {\n      assertEquals(8, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(4, entries.size());\n      assertEquals(\"\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n      assertEquals(\"ams\", entries.get(1).getValue().utf8ToString());\n      assertEquals(2, entries.get(1).getCount());\n      assertEquals(\"bru\", entries.get(2).getValue().utf8ToString());\n      assertEquals(3, entries.get(2).getCount());\n      assertEquals(\"dus\", entries.get(3).getValue().utf8ToString());\n      assertEquals(2, entries.get(3).getCount());\n    } else {\n      assertEquals(7, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(3, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n      assertEquals(3, entries.get(1).getCount());\n      assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n      assertEquals(2, entries.get(2).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", \"1\", false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc","date":1366056945,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean useDv = random().nextBoolean();\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = newSearcher(w.getReader());\n\n    List<TermGroupFacetCollector.FacetEntry> entries;\n    AbstractGroupFacetCollector groupedAirportFacetCollector;\n    TermGroupFacetCollector.GroupedFacetResult airportResult;\n    \n    for (int limit : new int[] { 2, 10, 100, Integer.MAX_VALUE }) {\n      // any of these limits is plenty for the data we have\n\n      groupedAirportFacetCollector = createRandomCollector\n        (useDv ? \"hotel_dv\" : \"hotel\", \n         useDv ? \"airport_dv\" : \"airport\", null, false);\n      indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n      int maxOffset = 5;\n      airportResult = groupedAirportFacetCollector.mergeSegmentResults\n        (Integer.MAX_VALUE == limit ? limit : maxOffset + limit, 0, false);\n      \n      assertEquals(3, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n\n      entries = airportResult.getFacetEntries(maxOffset, limit);\n      assertEquals(0, entries.size());\n\n      entries = airportResult.getFacetEntries(0, limit);\n      assertEquals(2, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n\n      entries = airportResult.getFacetEntries(1, limit);\n      assertEquals(1, entries.size());\n      assertEquals(\"dus\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n    }\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    // missing airport\n    if (useDv) {\n      addField(doc, \"airport\", \"\", useDv);\n    }\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, !useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    if (useDv) {\n      assertEquals(6, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    } else {\n      assertEquals(5, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    entries = airportResult.getFacetEntries(0, 10);\n    if (useDv) {\n      assertEquals(8, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(4, entries.size());\n      assertEquals(\"\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n      assertEquals(\"ams\", entries.get(1).getValue().utf8ToString());\n      assertEquals(2, entries.get(1).getCount());\n      assertEquals(\"bru\", entries.get(2).getValue().utf8ToString());\n      assertEquals(3, entries.get(2).getCount());\n      assertEquals(\"dus\", entries.get(3).getValue().utf8ToString());\n      assertEquals(2, entries.get(3).getCount());\n    } else {\n      assertEquals(7, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(3, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n      assertEquals(3, entries.get(1).getCount());\n      assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n      assertEquals(2, entries.get(2).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", \"1\", false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean useDv = random().nextBoolean();\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n\n    List<TermGroupFacetCollector.FacetEntry> entries;\n    AbstractGroupFacetCollector groupedAirportFacetCollector;\n    TermGroupFacetCollector.GroupedFacetResult airportResult;\n    \n    for (int limit : new int[] { 2, 10, 100, Integer.MAX_VALUE }) {\n      // any of these limits is plenty for the data we have\n\n      groupedAirportFacetCollector = createRandomCollector\n        (useDv ? \"hotel_dv\" : \"hotel\", \n         useDv ? \"airport_dv\" : \"airport\", null, false);\n      indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n      int maxOffset = 5;\n      airportResult = groupedAirportFacetCollector.mergeSegmentResults\n        (Integer.MAX_VALUE == limit ? limit : maxOffset + limit, 0, false);\n      \n      assertEquals(3, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n\n      entries = airportResult.getFacetEntries(maxOffset, limit);\n      assertEquals(0, entries.size());\n\n      entries = airportResult.getFacetEntries(0, limit);\n      assertEquals(2, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n\n      entries = airportResult.getFacetEntries(1, limit);\n      assertEquals(1, entries.size());\n      assertEquals(\"dus\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n    }\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    // missing airport\n    if (useDv) {\n      addField(doc, \"airport\", \"\", useDv);\n    }\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, !useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    if (useDv) {\n      assertEquals(6, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    } else {\n      assertEquals(5, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    entries = airportResult.getFacetEntries(0, 10);\n    if (useDv) {\n      assertEquals(8, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(4, entries.size());\n      assertEquals(\"\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n      assertEquals(\"ams\", entries.get(1).getValue().utf8ToString());\n      assertEquals(2, entries.get(1).getCount());\n      assertEquals(\"bru\", entries.get(2).getValue().utf8ToString());\n      assertEquals(3, entries.get(2).getCount());\n      assertEquals(\"dus\", entries.get(3).getValue().utf8ToString());\n      assertEquals(2, entries.get(3).getCount());\n    } else {\n      assertEquals(7, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(3, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n      assertEquals(3, entries.get(1).getCount());\n      assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n      assertEquals(2, entries.get(2).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", \"1\", false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean useDv = random().nextBoolean();\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = newSearcher(w.getReader());\n\n    List<TermGroupFacetCollector.FacetEntry> entries;\n    AbstractGroupFacetCollector groupedAirportFacetCollector;\n    TermGroupFacetCollector.GroupedFacetResult airportResult;\n    \n    for (int limit : new int[] { 2, 10, 100, Integer.MAX_VALUE }) {\n      // any of these limits is plenty for the data we have\n\n      groupedAirportFacetCollector = createRandomCollector\n        (useDv ? \"hotel_dv\" : \"hotel\", \n         useDv ? \"airport_dv\" : \"airport\", null, false);\n      indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n      int maxOffset = 5;\n      airportResult = groupedAirportFacetCollector.mergeSegmentResults\n        (Integer.MAX_VALUE == limit ? limit : maxOffset + limit, 0, false);\n      \n      assertEquals(3, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n\n      entries = airportResult.getFacetEntries(maxOffset, limit);\n      assertEquals(0, entries.size());\n\n      entries = airportResult.getFacetEntries(0, limit);\n      assertEquals(2, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n\n      entries = airportResult.getFacetEntries(1, limit);\n      assertEquals(1, entries.size());\n      assertEquals(\"dus\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n    }\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    // missing airport\n    if (useDv) {\n      addField(doc, \"airport\", \"\", useDv);\n    }\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, !useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    if (useDv) {\n      assertEquals(6, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    } else {\n      assertEquals(5, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    entries = airportResult.getFacetEntries(0, 10);\n    if (useDv) {\n      assertEquals(8, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(4, entries.size());\n      assertEquals(\"\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n      assertEquals(\"ams\", entries.get(1).getValue().utf8ToString());\n      assertEquals(2, entries.get(1).getCount());\n      assertEquals(\"bru\", entries.get(2).getValue().utf8ToString());\n      assertEquals(3, entries.get(2).getCount());\n      assertEquals(\"dus\", entries.get(3).getValue().utf8ToString());\n      assertEquals(2, entries.get(3).getCount());\n    } else {\n      assertEquals(7, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(3, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n      assertEquals(3, entries.get(1).getCount());\n      assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n      assertEquals(2, entries.get(2).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", \"1\", false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.shutdown();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean useDv = random().nextBoolean();\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = newSearcher(w.getReader());\n\n    List<TermGroupFacetCollector.FacetEntry> entries;\n    AbstractGroupFacetCollector groupedAirportFacetCollector;\n    TermGroupFacetCollector.GroupedFacetResult airportResult;\n    \n    for (int limit : new int[] { 2, 10, 100, Integer.MAX_VALUE }) {\n      // any of these limits is plenty for the data we have\n\n      groupedAirportFacetCollector = createRandomCollector\n        (useDv ? \"hotel_dv\" : \"hotel\", \n         useDv ? \"airport_dv\" : \"airport\", null, false);\n      indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n      int maxOffset = 5;\n      airportResult = groupedAirportFacetCollector.mergeSegmentResults\n        (Integer.MAX_VALUE == limit ? limit : maxOffset + limit, 0, false);\n      \n      assertEquals(3, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n\n      entries = airportResult.getFacetEntries(maxOffset, limit);\n      assertEquals(0, entries.size());\n\n      entries = airportResult.getFacetEntries(0, limit);\n      assertEquals(2, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n\n      entries = airportResult.getFacetEntries(1, limit);\n      assertEquals(1, entries.size());\n      assertEquals(\"dus\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n    }\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    // missing airport\n    if (useDv) {\n      addField(doc, \"airport\", \"\", useDv);\n    }\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, !useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    if (useDv) {\n      assertEquals(6, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    } else {\n      assertEquals(5, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    entries = airportResult.getFacetEntries(0, 10);\n    if (useDv) {\n      assertEquals(8, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(4, entries.size());\n      assertEquals(\"\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n      assertEquals(\"ams\", entries.get(1).getValue().utf8ToString());\n      assertEquals(2, entries.get(1).getCount());\n      assertEquals(\"bru\", entries.get(2).getValue().utf8ToString());\n      assertEquals(3, entries.get(2).getCount());\n      assertEquals(\"dus\", entries.get(3).getValue().utf8ToString());\n      assertEquals(2, entries.get(3).getCount());\n    } else {\n      assertEquals(7, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(3, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n      assertEquals(3, entries.get(1).getCount());\n      assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n      assertEquals(2, entries.get(2).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", \"1\", false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"505dfd7dfae7faacd62d5e532edbdc7bf856b56e","date":1399828832,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean useDv = true;\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = newSearcher(w.getReader());\n\n    List<TermGroupFacetCollector.FacetEntry> entries;\n    AbstractGroupFacetCollector groupedAirportFacetCollector;\n    TermGroupFacetCollector.GroupedFacetResult airportResult;\n    \n    for (int limit : new int[] { 2, 10, 100, Integer.MAX_VALUE }) {\n      // any of these limits is plenty for the data we have\n\n      groupedAirportFacetCollector = createRandomCollector\n        (useDv ? \"hotel_dv\" : \"hotel\", \n         useDv ? \"airport_dv\" : \"airport\", null, false);\n      indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n      int maxOffset = 5;\n      airportResult = groupedAirportFacetCollector.mergeSegmentResults\n        (Integer.MAX_VALUE == limit ? limit : maxOffset + limit, 0, false);\n      \n      assertEquals(3, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n\n      entries = airportResult.getFacetEntries(maxOffset, limit);\n      assertEquals(0, entries.size());\n\n      entries = airportResult.getFacetEntries(0, limit);\n      assertEquals(2, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n\n      entries = airportResult.getFacetEntries(1, limit);\n      assertEquals(1, entries.size());\n      assertEquals(\"dus\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n    }\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    // missing airport\n    if (useDv) {\n      addField(doc, \"airport\", \"\", useDv);\n    }\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, !useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    if (useDv) {\n      assertEquals(6, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    } else {\n      assertEquals(5, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    entries = airportResult.getFacetEntries(0, 10);\n    if (useDv) {\n      assertEquals(8, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(4, entries.size());\n      assertEquals(\"\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n      assertEquals(\"ams\", entries.get(1).getValue().utf8ToString());\n      assertEquals(2, entries.get(1).getCount());\n      assertEquals(\"bru\", entries.get(2).getValue().utf8ToString());\n      assertEquals(3, entries.get(2).getCount());\n      assertEquals(\"dus\", entries.get(3).getValue().utf8ToString());\n      assertEquals(2, entries.get(3).getCount());\n    } else {\n      assertEquals(7, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(3, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n      assertEquals(3, entries.get(1).getCount());\n      assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n      assertEquals(2, entries.get(2).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", \"1\", false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.shutdown();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean useDv = random().nextBoolean();\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = newSearcher(w.getReader());\n\n    List<TermGroupFacetCollector.FacetEntry> entries;\n    AbstractGroupFacetCollector groupedAirportFacetCollector;\n    TermGroupFacetCollector.GroupedFacetResult airportResult;\n    \n    for (int limit : new int[] { 2, 10, 100, Integer.MAX_VALUE }) {\n      // any of these limits is plenty for the data we have\n\n      groupedAirportFacetCollector = createRandomCollector\n        (useDv ? \"hotel_dv\" : \"hotel\", \n         useDv ? \"airport_dv\" : \"airport\", null, false);\n      indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n      int maxOffset = 5;\n      airportResult = groupedAirportFacetCollector.mergeSegmentResults\n        (Integer.MAX_VALUE == limit ? limit : maxOffset + limit, 0, false);\n      \n      assertEquals(3, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n\n      entries = airportResult.getFacetEntries(maxOffset, limit);\n      assertEquals(0, entries.size());\n\n      entries = airportResult.getFacetEntries(0, limit);\n      assertEquals(2, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n\n      entries = airportResult.getFacetEntries(1, limit);\n      assertEquals(1, entries.size());\n      assertEquals(\"dus\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n    }\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    // missing airport\n    if (useDv) {\n      addField(doc, \"airport\", \"\", useDv);\n    }\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, !useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    if (useDv) {\n      assertEquals(6, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    } else {\n      assertEquals(5, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    entries = airportResult.getFacetEntries(0, 10);\n    if (useDv) {\n      assertEquals(8, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(4, entries.size());\n      assertEquals(\"\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n      assertEquals(\"ams\", entries.get(1).getValue().utf8ToString());\n      assertEquals(2, entries.get(1).getCount());\n      assertEquals(\"bru\", entries.get(2).getValue().utf8ToString());\n      assertEquals(3, entries.get(2).getCount());\n      assertEquals(\"dus\", entries.get(3).getValue().utf8ToString());\n      assertEquals(2, entries.get(3).getCount());\n    } else {\n      assertEquals(7, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(3, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n      assertEquals(3, entries.get(1).getCount());\n      assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n      assertEquals(2, entries.get(2).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", \"1\", false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.shutdown();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean useDv = true;\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = newSearcher(w.getReader());\n\n    List<TermGroupFacetCollector.FacetEntry> entries;\n    AbstractGroupFacetCollector groupedAirportFacetCollector;\n    TermGroupFacetCollector.GroupedFacetResult airportResult;\n    \n    for (int limit : new int[] { 2, 10, 100, Integer.MAX_VALUE }) {\n      // any of these limits is plenty for the data we have\n\n      groupedAirportFacetCollector = createRandomCollector\n        (useDv ? \"hotel_dv\" : \"hotel\", \n         useDv ? \"airport_dv\" : \"airport\", null, false);\n      indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n      int maxOffset = 5;\n      airportResult = groupedAirportFacetCollector.mergeSegmentResults\n        (Integer.MAX_VALUE == limit ? limit : maxOffset + limit, 0, false);\n      \n      assertEquals(3, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n\n      entries = airportResult.getFacetEntries(maxOffset, limit);\n      assertEquals(0, entries.size());\n\n      entries = airportResult.getFacetEntries(0, limit);\n      assertEquals(2, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n\n      entries = airportResult.getFacetEntries(1, limit);\n      assertEquals(1, entries.size());\n      assertEquals(\"dus\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n    }\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    // missing airport\n    if (useDv) {\n      addField(doc, \"airport\", \"\", useDv);\n    }\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, !useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    if (useDv) {\n      assertEquals(6, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    } else {\n      assertEquals(5, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    entries = airportResult.getFacetEntries(0, 10);\n    if (useDv) {\n      assertEquals(8, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(4, entries.size());\n      assertEquals(\"\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n      assertEquals(\"ams\", entries.get(1).getValue().utf8ToString());\n      assertEquals(2, entries.get(1).getCount());\n      assertEquals(\"bru\", entries.get(2).getValue().utf8ToString());\n      assertEquals(3, entries.get(2).getCount());\n      assertEquals(\"dus\", entries.get(3).getValue().utf8ToString());\n      assertEquals(2, entries.get(3).getCount());\n    } else {\n      assertEquals(7, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(3, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n      assertEquals(3, entries.get(1).getCount());\n      assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n      assertEquals(2, entries.get(2).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", \"1\", false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.shutdown();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean useDv = random().nextBoolean();\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = newSearcher(w.getReader());\n\n    List<TermGroupFacetCollector.FacetEntry> entries;\n    AbstractGroupFacetCollector groupedAirportFacetCollector;\n    TermGroupFacetCollector.GroupedFacetResult airportResult;\n    \n    for (int limit : new int[] { 2, 10, 100, Integer.MAX_VALUE }) {\n      // any of these limits is plenty for the data we have\n\n      groupedAirportFacetCollector = createRandomCollector\n        (useDv ? \"hotel_dv\" : \"hotel\", \n         useDv ? \"airport_dv\" : \"airport\", null, false);\n      indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n      int maxOffset = 5;\n      airportResult = groupedAirportFacetCollector.mergeSegmentResults\n        (Integer.MAX_VALUE == limit ? limit : maxOffset + limit, 0, false);\n      \n      assertEquals(3, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n\n      entries = airportResult.getFacetEntries(maxOffset, limit);\n      assertEquals(0, entries.size());\n\n      entries = airportResult.getFacetEntries(0, limit);\n      assertEquals(2, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n\n      entries = airportResult.getFacetEntries(1, limit);\n      assertEquals(1, entries.size());\n      assertEquals(\"dus\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n    }\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    // missing airport\n    if (useDv) {\n      addField(doc, \"airport\", \"\", useDv);\n    }\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, !useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    if (useDv) {\n      assertEquals(6, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    } else {\n      assertEquals(5, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    entries = airportResult.getFacetEntries(0, 10);\n    if (useDv) {\n      assertEquals(8, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(4, entries.size());\n      assertEquals(\"\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n      assertEquals(\"ams\", entries.get(1).getValue().utf8ToString());\n      assertEquals(2, entries.get(1).getCount());\n      assertEquals(\"bru\", entries.get(2).getValue().utf8ToString());\n      assertEquals(3, entries.get(2).getCount());\n      assertEquals(\"dus\", entries.get(3).getValue().utf8ToString());\n      assertEquals(2, entries.get(3).getCount());\n    } else {\n      assertEquals(7, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(3, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n      assertEquals(3, entries.get(1).getCount());\n      assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n      assertEquals(2, entries.get(2).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", \"1\", false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.shutdown();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean useDv = true;\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = newSearcher(w.getReader());\n\n    List<TermGroupFacetCollector.FacetEntry> entries;\n    AbstractGroupFacetCollector groupedAirportFacetCollector;\n    TermGroupFacetCollector.GroupedFacetResult airportResult;\n    \n    for (int limit : new int[] { 2, 10, 100, Integer.MAX_VALUE }) {\n      // any of these limits is plenty for the data we have\n\n      groupedAirportFacetCollector = createRandomCollector\n        (useDv ? \"hotel_dv\" : \"hotel\", \n         useDv ? \"airport_dv\" : \"airport\", null, false);\n      indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n      int maxOffset = 5;\n      airportResult = groupedAirportFacetCollector.mergeSegmentResults\n        (Integer.MAX_VALUE == limit ? limit : maxOffset + limit, 0, false);\n      \n      assertEquals(3, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n\n      entries = airportResult.getFacetEntries(maxOffset, limit);\n      assertEquals(0, entries.size());\n\n      entries = airportResult.getFacetEntries(0, limit);\n      assertEquals(2, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n\n      entries = airportResult.getFacetEntries(1, limit);\n      assertEquals(1, entries.size());\n      assertEquals(\"dus\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n    }\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    // missing airport\n    if (useDv) {\n      addField(doc, \"airport\", \"\", useDv);\n    }\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, !useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    if (useDv) {\n      assertEquals(6, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    } else {\n      assertEquals(5, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    entries = airportResult.getFacetEntries(0, 10);\n    if (useDv) {\n      assertEquals(8, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(4, entries.size());\n      assertEquals(\"\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n      assertEquals(\"ams\", entries.get(1).getValue().utf8ToString());\n      assertEquals(2, entries.get(1).getCount());\n      assertEquals(\"bru\", entries.get(2).getValue().utf8ToString());\n      assertEquals(3, entries.get(2).getCount());\n      assertEquals(\"dus\", entries.get(3).getValue().utf8ToString());\n      assertEquals(2, entries.get(3).getCount());\n    } else {\n      assertEquals(7, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(3, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n      assertEquals(3, entries.get(1).getCount());\n      assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n      assertEquals(2, entries.get(2).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", \"1\", false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.shutdown();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean useDv = random().nextBoolean();\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = newSearcher(w.getReader());\n\n    List<TermGroupFacetCollector.FacetEntry> entries;\n    AbstractGroupFacetCollector groupedAirportFacetCollector;\n    TermGroupFacetCollector.GroupedFacetResult airportResult;\n    \n    for (int limit : new int[] { 2, 10, 100, Integer.MAX_VALUE }) {\n      // any of these limits is plenty for the data we have\n\n      groupedAirportFacetCollector = createRandomCollector\n        (useDv ? \"hotel_dv\" : \"hotel\", \n         useDv ? \"airport_dv\" : \"airport\", null, false);\n      indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n      int maxOffset = 5;\n      airportResult = groupedAirportFacetCollector.mergeSegmentResults\n        (Integer.MAX_VALUE == limit ? limit : maxOffset + limit, 0, false);\n      \n      assertEquals(3, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n\n      entries = airportResult.getFacetEntries(maxOffset, limit);\n      assertEquals(0, entries.size());\n\n      entries = airportResult.getFacetEntries(0, limit);\n      assertEquals(2, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n\n      entries = airportResult.getFacetEntries(1, limit);\n      assertEquals(1, entries.size());\n      assertEquals(\"dus\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n    }\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    // missing airport\n    if (useDv) {\n      addField(doc, \"airport\", \"\", useDv);\n    }\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, !useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    if (useDv) {\n      assertEquals(6, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    } else {\n      assertEquals(5, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    entries = airportResult.getFacetEntries(0, 10);\n    if (useDv) {\n      assertEquals(8, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(4, entries.size());\n      assertEquals(\"\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n      assertEquals(\"ams\", entries.get(1).getValue().utf8ToString());\n      assertEquals(2, entries.get(1).getCount());\n      assertEquals(\"bru\", entries.get(2).getValue().utf8ToString());\n      assertEquals(3, entries.get(2).getCount());\n      assertEquals(\"dus\", entries.get(3).getValue().utf8ToString());\n      assertEquals(2, entries.get(3).getCount());\n    } else {\n      assertEquals(7, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(3, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n      assertEquals(3, entries.get(1).getCount());\n      assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n      assertEquals(2, entries.get(2).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", \"1\", false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.shutdown();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean useDv = true;\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = newSearcher(w.getReader());\n\n    List<TermGroupFacetCollector.FacetEntry> entries;\n    AbstractGroupFacetCollector groupedAirportFacetCollector;\n    TermGroupFacetCollector.GroupedFacetResult airportResult;\n    \n    for (int limit : new int[] { 2, 10, 100, Integer.MAX_VALUE }) {\n      // any of these limits is plenty for the data we have\n\n      groupedAirportFacetCollector = createRandomCollector\n        (useDv ? \"hotel_dv\" : \"hotel\", \n         useDv ? \"airport_dv\" : \"airport\", null, false);\n      indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n      int maxOffset = 5;\n      airportResult = groupedAirportFacetCollector.mergeSegmentResults\n        (Integer.MAX_VALUE == limit ? limit : maxOffset + limit, 0, false);\n      \n      assertEquals(3, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n\n      entries = airportResult.getFacetEntries(maxOffset, limit);\n      assertEquals(0, entries.size());\n\n      entries = airportResult.getFacetEntries(0, limit);\n      assertEquals(2, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n\n      entries = airportResult.getFacetEntries(1, limit);\n      assertEquals(1, entries.size());\n      assertEquals(\"dus\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n    }\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    // missing airport\n    if (useDv) {\n      addField(doc, \"airport\", \"\", useDv);\n    }\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, !useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    if (useDv) {\n      assertEquals(6, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    } else {\n      assertEquals(5, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    entries = airportResult.getFacetEntries(0, 10);\n    if (useDv) {\n      assertEquals(8, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(4, entries.size());\n      assertEquals(\"\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n      assertEquals(\"ams\", entries.get(1).getValue().utf8ToString());\n      assertEquals(2, entries.get(1).getCount());\n      assertEquals(\"bru\", entries.get(2).getValue().utf8ToString());\n      assertEquals(3, entries.get(2).getCount());\n      assertEquals(\"dus\", entries.get(3).getValue().utf8ToString());\n      assertEquals(2, entries.get(3).getCount());\n    } else {\n      assertEquals(7, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(3, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n      assertEquals(3, entries.get(1).getCount());\n      assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n      assertEquals(2, entries.get(2).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", \"1\", false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.shutdown();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean useDv = true;\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = newSearcher(w.getReader());\n\n    List<TermGroupFacetCollector.FacetEntry> entries;\n    AbstractGroupFacetCollector groupedAirportFacetCollector;\n    TermGroupFacetCollector.GroupedFacetResult airportResult;\n    \n    for (int limit : new int[] { 2, 10, 100, Integer.MAX_VALUE }) {\n      // any of these limits is plenty for the data we have\n\n      groupedAirportFacetCollector = createRandomCollector\n        (useDv ? \"hotel_dv\" : \"hotel\", \n         useDv ? \"airport_dv\" : \"airport\", null, false);\n      indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n      int maxOffset = 5;\n      airportResult = groupedAirportFacetCollector.mergeSegmentResults\n        (Integer.MAX_VALUE == limit ? limit : maxOffset + limit, 0, false);\n      \n      assertEquals(3, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n\n      entries = airportResult.getFacetEntries(maxOffset, limit);\n      assertEquals(0, entries.size());\n\n      entries = airportResult.getFacetEntries(0, limit);\n      assertEquals(2, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n\n      entries = airportResult.getFacetEntries(1, limit);\n      assertEquals(1, entries.size());\n      assertEquals(\"dus\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n    }\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    // missing airport\n    if (useDv) {\n      addField(doc, \"airport\", \"\", useDv);\n    }\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, !useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    if (useDv) {\n      assertEquals(6, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    } else {\n      assertEquals(5, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    entries = airportResult.getFacetEntries(0, 10);\n    if (useDv) {\n      assertEquals(8, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(4, entries.size());\n      assertEquals(\"\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n      assertEquals(\"ams\", entries.get(1).getValue().utf8ToString());\n      assertEquals(2, entries.get(1).getCount());\n      assertEquals(\"bru\", entries.get(2).getValue().utf8ToString());\n      assertEquals(3, entries.get(2).getCount());\n      assertEquals(\"dus\", entries.get(3).getValue().utf8ToString());\n      assertEquals(2, entries.get(3).getCount());\n    } else {\n      assertEquals(7, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(3, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n      assertEquals(3, entries.get(1).getCount());\n      assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n      assertEquals(2, entries.get(2).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", \"1\", false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.shutdown();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean useDv = true;\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = newSearcher(w.getReader());\n\n    List<TermGroupFacetCollector.FacetEntry> entries;\n    AbstractGroupFacetCollector groupedAirportFacetCollector;\n    TermGroupFacetCollector.GroupedFacetResult airportResult;\n    \n    for (int limit : new int[] { 2, 10, 100, Integer.MAX_VALUE }) {\n      // any of these limits is plenty for the data we have\n\n      groupedAirportFacetCollector = createRandomCollector\n        (useDv ? \"hotel_dv\" : \"hotel\", \n         useDv ? \"airport_dv\" : \"airport\", null, false);\n      indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n      int maxOffset = 5;\n      airportResult = groupedAirportFacetCollector.mergeSegmentResults\n        (Integer.MAX_VALUE == limit ? limit : maxOffset + limit, 0, false);\n      \n      assertEquals(3, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n\n      entries = airportResult.getFacetEntries(maxOffset, limit);\n      assertEquals(0, entries.size());\n\n      entries = airportResult.getFacetEntries(0, limit);\n      assertEquals(2, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n\n      entries = airportResult.getFacetEntries(1, limit);\n      assertEquals(1, entries.size());\n      assertEquals(\"dus\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n    }\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    // missing airport\n    if (useDv) {\n      addField(doc, \"airport\", \"\", useDv);\n    }\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, !useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    if (useDv) {\n      assertEquals(6, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    } else {\n      assertEquals(5, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    entries = airportResult.getFacetEntries(0, 10);\n    if (useDv) {\n      assertEquals(8, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(4, entries.size());\n      assertEquals(\"\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n      assertEquals(\"ams\", entries.get(1).getValue().utf8ToString());\n      assertEquals(2, entries.get(1).getCount());\n      assertEquals(\"bru\", entries.get(2).getValue().utf8ToString());\n      assertEquals(3, entries.get(2).getCount());\n      assertEquals(\"dus\", entries.get(3).getValue().utf8ToString());\n      assertEquals(2, entries.get(3).getCount());\n    } else {\n      assertEquals(7, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(3, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n      assertEquals(3, entries.get(1).getCount());\n      assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n      assertEquals(2, entries.get(2).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", \"1\", false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean useDv = true;\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = newSearcher(w.getReader());\n\n    List<TermGroupFacetCollector.FacetEntry> entries;\n    AbstractGroupFacetCollector groupedAirportFacetCollector;\n    TermGroupFacetCollector.GroupedFacetResult airportResult;\n    \n    for (int limit : new int[] { 2, 10, 100, Integer.MAX_VALUE }) {\n      // any of these limits is plenty for the data we have\n\n      groupedAirportFacetCollector = createRandomCollector\n        (useDv ? \"hotel_dv\" : \"hotel\", \n         useDv ? \"airport_dv\" : \"airport\", null, false);\n      indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n      int maxOffset = 5;\n      airportResult = groupedAirportFacetCollector.mergeSegmentResults\n        (Integer.MAX_VALUE == limit ? limit : maxOffset + limit, 0, false);\n      \n      assertEquals(3, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n\n      entries = airportResult.getFacetEntries(maxOffset, limit);\n      assertEquals(0, entries.size());\n\n      entries = airportResult.getFacetEntries(0, limit);\n      assertEquals(2, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n\n      entries = airportResult.getFacetEntries(1, limit);\n      assertEquals(1, entries.size());\n      assertEquals(\"dus\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n    }\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    // missing airport\n    if (useDv) {\n      addField(doc, \"airport\", \"\", useDv);\n    }\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, !useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    if (useDv) {\n      assertEquals(6, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    } else {\n      assertEquals(5, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    entries = airportResult.getFacetEntries(0, 10);\n    if (useDv) {\n      assertEquals(8, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(4, entries.size());\n      assertEquals(\"\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n      assertEquals(\"ams\", entries.get(1).getValue().utf8ToString());\n      assertEquals(2, entries.get(1).getCount());\n      assertEquals(\"bru\", entries.get(2).getValue().utf8ToString());\n      assertEquals(3, entries.get(2).getCount());\n      assertEquals(\"dus\", entries.get(3).getValue().utf8ToString());\n      assertEquals(2, entries.get(3).getCount());\n    } else {\n      assertEquals(7, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(3, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n      assertEquals(3, entries.get(1).getCount());\n      assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n      assertEquals(2, entries.get(2).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", \"1\", false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.shutdown();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20e94e61fe5291647346b70437617e6b6c370408","date":1483783127,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean useDv = true;\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = newSearcher(w.getReader());\n\n    List<TermGroupFacetCollector.FacetEntry> entries;\n    GroupFacetCollector groupedAirportFacetCollector;\n    TermGroupFacetCollector.GroupedFacetResult airportResult;\n    \n    for (int limit : new int[] { 2, 10, 100, Integer.MAX_VALUE }) {\n      // any of these limits is plenty for the data we have\n\n      groupedAirportFacetCollector = createRandomCollector\n        (useDv ? \"hotel_dv\" : \"hotel\", \n         useDv ? \"airport_dv\" : \"airport\", null, false);\n      indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n      int maxOffset = 5;\n      airportResult = groupedAirportFacetCollector.mergeSegmentResults\n        (Integer.MAX_VALUE == limit ? limit : maxOffset + limit, 0, false);\n      \n      assertEquals(3, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n\n      entries = airportResult.getFacetEntries(maxOffset, limit);\n      assertEquals(0, entries.size());\n\n      entries = airportResult.getFacetEntries(0, limit);\n      assertEquals(2, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n\n      entries = airportResult.getFacetEntries(1, limit);\n      assertEquals(1, entries.size());\n      assertEquals(\"dus\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n    }\n\n    GroupFacetCollector groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    // missing airport\n    if (useDv) {\n      addField(doc, \"airport\", \"\", useDv);\n    }\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, !useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    if (useDv) {\n      assertEquals(6, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    } else {\n      assertEquals(5, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    entries = airportResult.getFacetEntries(0, 10);\n    if (useDv) {\n      assertEquals(8, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(4, entries.size());\n      assertEquals(\"\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n      assertEquals(\"ams\", entries.get(1).getValue().utf8ToString());\n      assertEquals(2, entries.get(1).getCount());\n      assertEquals(\"bru\", entries.get(2).getValue().utf8ToString());\n      assertEquals(3, entries.get(2).getCount());\n      assertEquals(\"dus\", entries.get(3).getValue().utf8ToString());\n      assertEquals(2, entries.get(3).getCount());\n    } else {\n      assertEquals(7, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(3, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n      assertEquals(3, entries.get(1).getCount());\n      assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n      assertEquals(2, entries.get(2).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", \"1\", false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean useDv = true;\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = newSearcher(w.getReader());\n\n    List<TermGroupFacetCollector.FacetEntry> entries;\n    AbstractGroupFacetCollector groupedAirportFacetCollector;\n    TermGroupFacetCollector.GroupedFacetResult airportResult;\n    \n    for (int limit : new int[] { 2, 10, 100, Integer.MAX_VALUE }) {\n      // any of these limits is plenty for the data we have\n\n      groupedAirportFacetCollector = createRandomCollector\n        (useDv ? \"hotel_dv\" : \"hotel\", \n         useDv ? \"airport_dv\" : \"airport\", null, false);\n      indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n      int maxOffset = 5;\n      airportResult = groupedAirportFacetCollector.mergeSegmentResults\n        (Integer.MAX_VALUE == limit ? limit : maxOffset + limit, 0, false);\n      \n      assertEquals(3, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n\n      entries = airportResult.getFacetEntries(maxOffset, limit);\n      assertEquals(0, entries.size());\n\n      entries = airportResult.getFacetEntries(0, limit);\n      assertEquals(2, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n\n      entries = airportResult.getFacetEntries(1, limit);\n      assertEquals(1, entries.size());\n      assertEquals(\"dus\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n    }\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    // missing airport\n    if (useDv) {\n      addField(doc, \"airport\", \"\", useDv);\n    }\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, !useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    if (useDv) {\n      assertEquals(6, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    } else {\n      assertEquals(5, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    entries = airportResult.getFacetEntries(0, 10);\n    if (useDv) {\n      assertEquals(8, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(4, entries.size());\n      assertEquals(\"\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n      assertEquals(\"ams\", entries.get(1).getValue().utf8ToString());\n      assertEquals(2, entries.get(1).getCount());\n      assertEquals(\"bru\", entries.get(2).getValue().utf8ToString());\n      assertEquals(3, entries.get(2).getCount());\n      assertEquals(\"dus\", entries.get(3).getValue().utf8ToString());\n      assertEquals(2, entries.get(3).getCount());\n    } else {\n      assertEquals(7, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(3, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n      assertEquals(3, entries.get(1).getCount());\n      assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n      assertEquals(2, entries.get(2).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", \"1\", false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean useDv = true;\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = newSearcher(w.getReader());\n\n    List<TermGroupFacetCollector.FacetEntry> entries;\n    GroupFacetCollector groupedAirportFacetCollector;\n    TermGroupFacetCollector.GroupedFacetResult airportResult;\n    \n    for (int limit : new int[] { 2, 10, 100, Integer.MAX_VALUE }) {\n      // any of these limits is plenty for the data we have\n\n      groupedAirportFacetCollector = createRandomCollector\n        (useDv ? \"hotel_dv\" : \"hotel\", \n         useDv ? \"airport_dv\" : \"airport\", null, false);\n      indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n      int maxOffset = 5;\n      airportResult = groupedAirportFacetCollector.mergeSegmentResults\n        (Integer.MAX_VALUE == limit ? limit : maxOffset + limit, 0, false);\n      \n      assertEquals(3, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n\n      entries = airportResult.getFacetEntries(maxOffset, limit);\n      assertEquals(0, entries.size());\n\n      entries = airportResult.getFacetEntries(0, limit);\n      assertEquals(2, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n\n      entries = airportResult.getFacetEntries(1, limit);\n      assertEquals(1, entries.size());\n      assertEquals(\"dus\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n    }\n\n    GroupFacetCollector groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    // missing airport\n    if (useDv) {\n      addField(doc, \"airport\", \"\", useDv);\n    }\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, !useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    if (useDv) {\n      assertEquals(6, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    } else {\n      assertEquals(5, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    entries = airportResult.getFacetEntries(0, 10);\n    if (useDv) {\n      assertEquals(8, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(4, entries.size());\n      assertEquals(\"\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n      assertEquals(\"ams\", entries.get(1).getValue().utf8ToString());\n      assertEquals(2, entries.get(1).getCount());\n      assertEquals(\"bru\", entries.get(2).getValue().utf8ToString());\n      assertEquals(3, entries.get(2).getCount());\n      assertEquals(\"dus\", entries.get(3).getValue().utf8ToString());\n      assertEquals(2, entries.get(3).getCount());\n    } else {\n      assertEquals(7, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(3, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n      assertEquals(3, entries.get(1).getCount());\n      assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n      assertEquals(2, entries.get(2).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", \"1\", false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean useDv = true;\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"ams\", useDv);\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = newSearcher(w.getReader());\n\n    List<TermGroupFacetCollector.FacetEntry> entries;\n    AbstractGroupFacetCollector groupedAirportFacetCollector;\n    TermGroupFacetCollector.GroupedFacetResult airportResult;\n    \n    for (int limit : new int[] { 2, 10, 100, Integer.MAX_VALUE }) {\n      // any of these limits is plenty for the data we have\n\n      groupedAirportFacetCollector = createRandomCollector\n        (useDv ? \"hotel_dv\" : \"hotel\", \n         useDv ? \"airport_dv\" : \"airport\", null, false);\n      indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n      int maxOffset = 5;\n      airportResult = groupedAirportFacetCollector.mergeSegmentResults\n        (Integer.MAX_VALUE == limit ? limit : maxOffset + limit, 0, false);\n      \n      assertEquals(3, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n\n      entries = airportResult.getFacetEntries(maxOffset, limit);\n      assertEquals(0, entries.size());\n\n      entries = airportResult.getFacetEntries(0, limit);\n      assertEquals(2, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n\n      entries = airportResult.getFacetEntries(1, limit);\n      assertEquals(1, entries.size());\n      assertEquals(\"dus\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n    }\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    // missing airport\n    if (useDv) {\n      addField(doc, \"airport\", \"\", useDv);\n    }\n    addField(doc, \"duration\", \"5\", useDv);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, !useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    if (useDv) {\n      assertEquals(6, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    } else {\n      assertEquals(5, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n      assertEquals(1, entries.get(1).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"bru\", useDv);\n    addField(doc, \"duration\", \"15\", useDv);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", useDv);\n    addField(doc, \"airport\", \"dus\", useDv);\n    addField(doc, \"duration\", \"10\", useDv);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = newSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"airport_dv\" : \"airport\", null, false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    entries = airportResult.getFacetEntries(0, 10);\n    if (useDv) {\n      assertEquals(8, airportResult.getTotalCount());\n      assertEquals(0, airportResult.getTotalMissingCount());\n      assertEquals(4, entries.size());\n      assertEquals(\"\", entries.get(0).getValue().utf8ToString());\n      assertEquals(1, entries.get(0).getCount());\n      assertEquals(\"ams\", entries.get(1).getValue().utf8ToString());\n      assertEquals(2, entries.get(1).getCount());\n      assertEquals(\"bru\", entries.get(2).getValue().utf8ToString());\n      assertEquals(3, entries.get(2).getCount());\n      assertEquals(\"dus\", entries.get(3).getValue().utf8ToString());\n      assertEquals(2, entries.get(3).getCount());\n    } else {\n      assertEquals(7, airportResult.getTotalCount());\n      assertEquals(1, airportResult.getTotalMissingCount());\n      assertEquals(3, entries.size());\n      assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n      assertEquals(2, entries.get(0).getCount());\n      assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n      assertEquals(3, entries.get(1).getCount());\n      assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n      assertEquals(2, entries.get(2).getCount());\n    }\n\n    groupedDurationFacetCollector = createRandomCollector(useDv ? \"hotel_dv\" : \"hotel\", useDv ? \"duration_dv\" : \"duration\", \"1\", false);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"20e94e61fe5291647346b70437617e6b6c370408":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"505dfd7dfae7faacd62d5e532edbdc7bf856b56e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["d0ef034a4f10871667ae75181537775ddcf8ade4","20e94e61fe5291647346b70437617e6b6c370408"],"56572ec06f1407c066d6b7399413178b33176cd8":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a","93dd449115a9247533e44bab47e8429e5dccbc6d"],"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"46bf1a48fd33bf34430ade646b7dd67b984be2a8":["854f97cd3613b9579fba83755c80b697e2f3993f"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8","46bf1a48fd33bf34430ade646b7dd67b984be2a8"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a","505dfd7dfae7faacd62d5e532edbdc7bf856b56e"],"97d4692d0c601ff773f0a2231967312428a904e4":["3685dcafc9195b0631414aa4d422f788479e62b7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc"],"854f97cd3613b9579fba83755c80b697e2f3993f":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"],"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc":["97d4692d0c601ff773f0a2231967312428a904e4"],"3685dcafc9195b0631414aa4d422f788479e62b7":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["20e94e61fe5291647346b70437617e6b6c370408"]},"commit2Childs":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"20e94e61fe5291647346b70437617e6b6c370408":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"505dfd7dfae7faacd62d5e532edbdc7bf856b56e":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"56572ec06f1407c066d6b7399413178b33176cd8":[],"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["d4d69c535930b5cce125cff868d40f6373dc27d4","854f97cd3613b9579fba83755c80b697e2f3993f"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"],"46bf1a48fd33bf34430ade646b7dd67b984be2a8":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["3685dcafc9195b0631414aa4d422f788479e62b7"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","56572ec06f1407c066d6b7399413178b33176cd8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"97d4692d0c601ff773f0a2231967312428a904e4":["ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["20e94e61fe5291647346b70437617e6b6c370408","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["505dfd7dfae7faacd62d5e532edbdc7bf856b56e","56572ec06f1407c066d6b7399413178b33176cd8","93dd449115a9247533e44bab47e8429e5dccbc6d"],"854f97cd3613b9579fba83755c80b697e2f3993f":["46bf1a48fd33bf34430ade646b7dd67b984be2a8"],"3685dcafc9195b0631414aa4d422f788479e62b7":["97d4692d0c601ff773f0a2231967312428a904e4"],"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}