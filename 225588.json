{"path":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testSearchPhraseSlop().mjava","commits":[{"id":"36f91bf9cfc9d0c3155edab43359e7670ea8a5af","date":1269580873,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testSearchPhraseSlop().mjava","pathOld":"lucene/contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testSearchPhraseSlop().mjava","sourceNew":"  public void testSearchPhraseSlop() throws Exception {\n    // \"a b c\"~0\n    Query query = pqF( \"a\", \"b\", \"c\" );\n\n    // phraseHighlight = true, fieldMatch = true\n    FieldQuery fq = new FieldQuery( query, true, true );\n    \n    // \"a b c\" w/ position-gap = 2\n    List<TermInfo> phraseCandidate = new ArrayList<TermInfo>();\n    phraseCandidate.add( new TermInfo( \"a\", 0, 1, 0 ) );\n    phraseCandidate.add( new TermInfo( \"b\", 2, 3, 2 ) );\n    phraseCandidate.add( new TermInfo( \"c\", 4, 5, 4 ) );\n    assertNull( fq.searchPhrase( F, phraseCandidate ) );\n\n    // \"a b c\"~1\n    query = pqF( 1F, 1, \"a\", \"b\", \"c\" );\n\n    // phraseHighlight = true, fieldMatch = true\n    fq = new FieldQuery( query, true, true );\n    \n    // \"a b c\" w/ position-gap = 2\n    assertNotNull( fq.searchPhrase( F, phraseCandidate ) );\n    \n    // \"a b c\" w/ position-gap = 3\n    phraseCandidate.clear();\n    phraseCandidate.add( new TermInfo( \"a\", 0, 1, 0 ) );\n    phraseCandidate.add( new TermInfo( \"b\", 2, 3, 3 ) );\n    phraseCandidate.add( new TermInfo( \"c\", 4, 5, 6 ) );\n    assertNull( fq.searchPhrase( F, phraseCandidate ) );\n  }\n\n","sourceOld":"  public void testSearchPhraseSlop() throws Exception {\n    // \"a b c\"~0\n    Query query = pqF( \"a\", \"b\", \"c\" );\n\n    // phraseHighlight = true, fieldMatch = true\n    FieldQuery fq = new FieldQuery( query, true, true );\n    \n    // \"a b c\" w/ position-gap = 2\n    List<TermInfo> phraseCandidate = new ArrayList<TermInfo>();\n    phraseCandidate.add( new TermInfo( \"a\", 0, 1, 0 ) );\n    phraseCandidate.add( new TermInfo( \"b\", 2, 3, 2 ) );\n    phraseCandidate.add( new TermInfo( \"c\", 4, 5, 4 ) );\n    assertNull( fq.searchPhrase( F, phraseCandidate ) );\n\n    // \"a b c\"~1\n    query = pqF( 1F, 1, \"a\", \"b\", \"c\" );\n\n    // phraseHighlight = true, fieldMatch = true\n    fq = new FieldQuery( query, true, true );\n    \n    // \"a b c\" w/ position-gap = 2\n    assertNotNull( fq.searchPhrase( F, phraseCandidate ) );\n    \n    // \"a b c\" w/ position-gap = 3\n    phraseCandidate.clear();\n    phraseCandidate.add( new TermInfo( \"a\", 0, 1, 0 ) );\n    phraseCandidate.add( new TermInfo( \"b\", 2, 3, 3 ) );\n    phraseCandidate.add( new TermInfo( \"c\", 4, 5, 6 ) );\n    assertNull( fq.searchPhrase( F, phraseCandidate ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testSearchPhraseSlop().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldQueryTest#testSearchPhraseSlop().mjava","sourceNew":"  public void testSearchPhraseSlop() throws Exception {\n    // \"a b c\"~0\n    Query query = pqF( \"a\", \"b\", \"c\" );\n\n    // phraseHighlight = true, fieldMatch = true\n    FieldQuery fq = new FieldQuery( query, true, true );\n    \n    // \"a b c\" w/ position-gap = 2\n    List<TermInfo> phraseCandidate = new ArrayList<TermInfo>();\n    phraseCandidate.add( new TermInfo( \"a\", 0, 1, 0 ) );\n    phraseCandidate.add( new TermInfo( \"b\", 2, 3, 2 ) );\n    phraseCandidate.add( new TermInfo( \"c\", 4, 5, 4 ) );\n    assertNull( fq.searchPhrase( F, phraseCandidate ) );\n\n    // \"a b c\"~1\n    query = pqF( 1F, 1, \"a\", \"b\", \"c\" );\n\n    // phraseHighlight = true, fieldMatch = true\n    fq = new FieldQuery( query, true, true );\n    \n    // \"a b c\" w/ position-gap = 2\n    assertNotNull( fq.searchPhrase( F, phraseCandidate ) );\n    \n    // \"a b c\" w/ position-gap = 3\n    phraseCandidate.clear();\n    phraseCandidate.add( new TermInfo( \"a\", 0, 1, 0 ) );\n    phraseCandidate.add( new TermInfo( \"b\", 2, 3, 3 ) );\n    phraseCandidate.add( new TermInfo( \"c\", 4, 5, 6 ) );\n    assertNull( fq.searchPhrase( F, phraseCandidate ) );\n  }\n\n","sourceOld":"  public void testSearchPhraseSlop() throws Exception {\n    // \"a b c\"~0\n    Query query = pqF( \"a\", \"b\", \"c\" );\n\n    // phraseHighlight = true, fieldMatch = true\n    FieldQuery fq = new FieldQuery( query, true, true );\n    \n    // \"a b c\" w/ position-gap = 2\n    List<TermInfo> phraseCandidate = new ArrayList<TermInfo>();\n    phraseCandidate.add( new TermInfo( \"a\", 0, 1, 0 ) );\n    phraseCandidate.add( new TermInfo( \"b\", 2, 3, 2 ) );\n    phraseCandidate.add( new TermInfo( \"c\", 4, 5, 4 ) );\n    assertNull( fq.searchPhrase( F, phraseCandidate ) );\n\n    // \"a b c\"~1\n    query = pqF( 1F, 1, \"a\", \"b\", \"c\" );\n\n    // phraseHighlight = true, fieldMatch = true\n    fq = new FieldQuery( query, true, true );\n    \n    // \"a b c\" w/ position-gap = 2\n    assertNotNull( fq.searchPhrase( F, phraseCandidate ) );\n    \n    // \"a b c\" w/ position-gap = 3\n    phraseCandidate.clear();\n    phraseCandidate.add( new TermInfo( \"a\", 0, 1, 0 ) );\n    phraseCandidate.add( new TermInfo( \"b\", 2, 3, 3 ) );\n    phraseCandidate.add( new TermInfo( \"c\", 4, 5, 6 ) );\n    assertNull( fq.searchPhrase( F, phraseCandidate ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}