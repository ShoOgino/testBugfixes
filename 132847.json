{"path":"solr/core/src/test/org/apache/solr/cloud/CloudExitableDirectoryReaderTest#testWhitebox().mjava","commits":[{"id":"a3584d3db8b472772e3329d9d95d584b68ae997e","date":1551710517,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CloudExitableDirectoryReaderTest#testWhitebox().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testWhitebox() throws Exception {\n    \n    try (Trap catchIds = catchTrace(\n        new CheckMethodName(\"doProcessSearchByIds\"), () -> {})) {\n      assertPartialResults(params(\"q\", \"{!cache=false}name:a*\", \"sort\", \"query($q,1) asc\"),\n          () -> assertTrue(catchIds.hasCaught()));\n    } catch (AssertionError ae) {\n      Trap.dumpLastStackTraces(log);\n      throw ae;\n    }\n\n    // the point is to catch sort_values (fsv) timeout, between search and facet\n    // I haven't find a way to encourage fsv to read index\n    try (Trap catchFSV = catchTrace(\n        new CheckMethodName(\"doFieldSortValues\"), () -> {})) {\n      assertPartialResults(params(\"q\", \"{!cache=false}name:a*\", \"sort\", \"query($q,1) asc\"),\n          () -> assertTrue(catchFSV.hasCaught()));\n    } catch (AssertionError ae) {\n      Trap.dumpLastStackTraces(log);\n      throw ae;\n    }\n    \n    try (Trap catchClass = catchClass(\n        QueryComponent.class.getSimpleName(), () -> {  })) {\n      assertPartialResults(params(\"q\", \"{!cache=false}name:a*\"),\n          ()->assertTrue(catchClass.hasCaught()));\n    }catch(AssertionError ae) {\n      Trap.dumpLastStackTraces(log);\n      throw ae;\n    }\n    try(Trap catchClass = catchClass(FacetComponent.class.getSimpleName())){\n      assertPartialResults(params(\"q\", \"{!cache=false}name:a*\", \"facet\",\"true\", \"facet.method\", \"enum\", \n          \"facet.field\", \"id\"),\n          ()->assertTrue(catchClass.hasCaught()));\n    }catch(AssertionError ae) {\n      Trap.dumpLastStackTraces(log);\n      throw ae;\n    }\n\n    try (Trap catchClass = catchClass(FacetModule.class.getSimpleName())) {\n      assertPartialResults(params(\"q\", \"{!cache=false}name:a*\", \"json.facet\", \"{ ids: {\"\n          + \" type: range, field : num, start : 0, end : 100, gap : 10 }}\"),\n          () -> assertTrue(catchClass.hasCaught()));\n    } catch (AssertionError ae) {\n      Trap.dumpLastStackTraces(log);\n      throw ae;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3584d3db8b472772e3329d9d95d584b68ae997e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a3584d3db8b472772e3329d9d95d584b68ae997e"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a3584d3db8b472772e3329d9d95d584b68ae997e"],"a3584d3db8b472772e3329d9d95d584b68ae997e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}