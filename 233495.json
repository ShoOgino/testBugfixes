{"path":"solr/core/src/java/org/apache/solr/handler/component/RangeFacetRequest.DistribRangeFacet#mergeFacetRangesFromShardResponse(LinkedHashMap[String,DistribRangeFacet],SimpleOrderedMap[SimpleOrderedMap[Object]]).mjava","commits":[{"id":"22d0a81a05eba47d5e18976f17d88306b218cc22","date":1436341569,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/RangeFacetRequest.DistribRangeFacet#mergeFacetRangesFromShardResponse(LinkedHashMap[String,DistribRangeFacet],SimpleOrderedMap[SimpleOrderedMap[Object]]).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Helper method to merge range facet values from a shard's response to already accumulated\n     * values for each range.\n     *\n     * @param rangeCounts a {@link LinkedHashMap} containing the accumulated values for each range\n     *                    keyed by the 'key' of the facet.range. Must not be null.\n     * @param shardRanges the facet_ranges response from a shard. Must not be null.\n     */\n    public static void mergeFacetRangesFromShardResponse(LinkedHashMap<String, DistribRangeFacet> rangeCounts,\n                                                         SimpleOrderedMap<SimpleOrderedMap<Object>> shardRanges) {\n      assert shardRanges != null;\n      assert rangeCounts != null;\n      for (Map.Entry<String, SimpleOrderedMap<Object>> entry : shardRanges) {\n        String rangeKey = entry.getKey();\n\n        RangeFacetRequest.DistribRangeFacet existing = rangeCounts.get(rangeKey);\n        if (existing == null) {\n          rangeCounts.put(rangeKey, new RangeFacetRequest.DistribRangeFacet(entry.getValue()));\n        } else {\n          existing.mergeContributionFromShard(entry.getValue());\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"22d0a81a05eba47d5e18976f17d88306b218cc22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["22d0a81a05eba47d5e18976f17d88306b218cc22"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["22d0a81a05eba47d5e18976f17d88306b218cc22"],"22d0a81a05eba47d5e18976f17d88306b218cc22":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}