{"path":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkOutOfOrderScorer#flush(int[],float[],int[],int,FakeScorer,Collector).mjava","commits":[{"id":"a58bbbe1c866963764d3f15d3a26a6a85f6c6af4","date":1394564625,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkOutOfOrderScorer#flush(int[],float[],int[],int,FakeScorer,Collector).mjava","pathOld":"/dev/null","sourceNew":"  private static void flush(int[] docIDs, float[] scores, int[] freqs, int size,\n      FakeScorer scorer, Collector collector) throws IOException {\n    for (int i = 0; i < size; ++i) {\n      scorer.doc = docIDs[i];\n      scorer.freq = freqs[i];\n      scorer.score = scores[i];\n      collector.collect(scorer.doc);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acf00221f44c5f08ccea014f2492b53af15ecd66","date":1394568293,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkOutOfOrderScorer#flush(int[],float[],int[],int,FakeScorer,Collector).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#flush(int[],float[],int[],int,FakeScorer,Collector).mjava","sourceNew":"  private static void flush(int[] docIDs, float[] scores, int[] freqs, int size,\n      FakeScorer scorer, Collector collector) throws IOException {\n    for (int i = 0; i < size; ++i) {\n      scorer.doc = docIDs[i];\n      scorer.freq = freqs[i];\n      scorer.score = scores[i];\n      collector.collect(scorer.doc);\n    }\n  }\n\n","sourceOld":"  private static void flush(int[] docIDs, float[] scores, int[] freqs, int size,\n      FakeScorer scorer, Collector collector) throws IOException {\n    for (int i = 0; i < size; ++i) {\n      scorer.doc = docIDs[i];\n      scorer.freq = freqs[i];\n      scorer.score = scores[i];\n      collector.collect(scorer.doc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae73da626f97850c922c42736f808d0378e165f0","date":1396625460,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkOutOfOrderScorer#flush(int[],float[],int[],int,FakeScorer,LeafCollector).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkOutOfOrderScorer#flush(int[],float[],int[],int,FakeScorer,Collector).mjava","sourceNew":"  private static void flush(int[] docIDs, float[] scores, int[] freqs, int size,\n      FakeScorer scorer, LeafCollector collector) throws IOException {\n    for (int i = 0; i < size; ++i) {\n      scorer.doc = docIDs[i];\n      scorer.freq = freqs[i];\n      scorer.score = scores[i];\n      collector.collect(scorer.doc);\n    }\n  }\n\n","sourceOld":"  private static void flush(int[] docIDs, float[] scores, int[] freqs, int size,\n      FakeScorer scorer, Collector collector) throws IOException {\n    for (int i = 0; i < size; ++i) {\n      scorer.doc = docIDs[i];\n      scorer.freq = freqs[i];\n      scorer.score = scores[i];\n      collector.collect(scorer.doc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15e323346eac5e4685c0a9f2df85eb96b4239bbb","date":1396688577,"type":4,"author":"Dawid Weiss","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkOutOfOrderScorer#flush(int[],float[],int[],int,FakeScorer,Collector).mjava","sourceNew":null,"sourceOld":"  private static void flush(int[] docIDs, float[] scores, int[] freqs, int size,\n      FakeScorer scorer, Collector collector) throws IOException {\n    for (int i = 0; i < size; ++i) {\n      scorer.doc = docIDs[i];\n      scorer.freq = freqs[i];\n      scorer.score = scores[i];\n      collector.collect(scorer.doc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a58bbbe1c866963764d3f15d3a26a6a85f6c6af4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":["acf00221f44c5f08ccea014f2492b53af15ecd66","ae73da626f97850c922c42736f808d0378e165f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ae73da626f97850c922c42736f808d0378e165f0":["acf00221f44c5f08ccea014f2492b53af15ecd66"],"acf00221f44c5f08ccea014f2492b53af15ecd66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a58bbbe1c866963764d3f15d3a26a6a85f6c6af4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ae73da626f97850c922c42736f808d0378e165f0"]},"commit2Childs":{"a58bbbe1c866963764d3f15d3a26a6a85f6c6af4":["acf00221f44c5f08ccea014f2492b53af15ecd66"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a58bbbe1c866963764d3f15d3a26a6a85f6c6af4","acf00221f44c5f08ccea014f2492b53af15ecd66"],"ae73da626f97850c922c42736f808d0378e165f0":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"acf00221f44c5f08ccea014f2492b53af15ecd66":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","ae73da626f97850c922c42736f808d0378e165f0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}