{"path":"lucene/core/src/test/org/apache/lucene/index/TestCheckIndex#testLuceneConstantVersion().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCheckIndex#testLuceneConstantVersion().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCheckIndex#testLuceneConstantVersion().mjava","sourceNew":"  public void testLuceneConstantVersion() throws IOException {\n    // common-build.xml sets lucene.version\n    final String version = System.getProperty(\"lucene.version\");\n    assertNotNull( \"null version\", version);\n    assertTrue(\"Invalid version: \"+version,\n               version.equals(Constants.LUCENE_MAIN_VERSION+\"-SNAPSHOT\") ||\n               version.equals(Constants.LUCENE_MAIN_VERSION));\n    assertTrue(version + \" should start with: \"+Constants.LUCENE_VERSION,\n               Constants.LUCENE_VERSION.startsWith(version));\n  }\n\n","sourceOld":"  public void testLuceneConstantVersion() throws IOException {\n    // common-build.xml sets lucene.version\n    final String version = System.getProperty(\"lucene.version\");\n    assertNotNull( \"null version\", version);\n    assertTrue(\"Invalid version: \"+version,\n               version.equals(Constants.LUCENE_MAIN_VERSION+\"-SNAPSHOT\") ||\n               version.equals(Constants.LUCENE_MAIN_VERSION));\n    assertTrue(version + \" should start with: \"+Constants.LUCENE_VERSION,\n               Constants.LUCENE_VERSION.startsWith(version));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a74951ac6a1fc21c271cf50fe93afedfa9353372","date":1339197785,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCheckIndex#testLuceneConstantVersion().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCheckIndex#testLuceneConstantVersion().mjava","sourceNew":"  public void testLuceneConstantVersion() throws IOException {\n    // common-build.xml sets lucene.version\n    final String version = System.getProperty(\"lucene.version\");\n    assertNotNull( \"null version\", version);\n    assertTrue(\"Invalid version: \"+version,\n               version.equals(Constants.LUCENE_MAIN_VERSION+\"-SNAPSHOT\") ||\n               version.equals(Constants.LUCENE_MAIN_VERSION));\n    assertTrue(Constants.LUCENE_VERSION + \" should start with: \"+version,\n               Constants.LUCENE_VERSION.startsWith(version));\n  }\n\n","sourceOld":"  public void testLuceneConstantVersion() throws IOException {\n    // common-build.xml sets lucene.version\n    final String version = System.getProperty(\"lucene.version\");\n    assertNotNull( \"null version\", version);\n    assertTrue(\"Invalid version: \"+version,\n               version.equals(Constants.LUCENE_MAIN_VERSION+\"-SNAPSHOT\") ||\n               version.equals(Constants.LUCENE_MAIN_VERSION));\n    assertTrue(version + \" should start with: \"+Constants.LUCENE_VERSION,\n               Constants.LUCENE_VERSION.startsWith(version));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d0fdaa46b4b00b5d1d8b58b0c56ce04f5530511","date":1342402690,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCheckIndex#testLuceneConstantVersion().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCheckIndex#testLuceneConstantVersion().mjava","sourceNew":"  public void testLuceneConstantVersion() throws IOException {\n    // common-build.xml sets lucene.version\n    final String version = System.getProperty(\"lucene.version\");\n    assertNotNull( \"null version\", version);\n    final String constantVersion;\n    String parts[] = Constants.LUCENE_MAIN_VERSION.split(\"\\\\.\");\n    if (parts.length == 4) {\n      // alpha/beta version: pull the real portion\n      assert parts[2].equals(\"0\");\n      constantVersion = parts[0] + \".\" + parts[1];\n    } else {\n      // normal version\n      constantVersion = Constants.LUCENE_MAIN_VERSION;\n    }\n    assertTrue(\"Invalid version: \"+version,\n               version.equals(constantVersion+\"-SNAPSHOT\") ||\n               version.equals(constantVersion));\n    assertTrue(Constants.LUCENE_VERSION + \" should start with: \"+version,\n               Constants.LUCENE_VERSION.startsWith(version));\n  }\n\n","sourceOld":"  public void testLuceneConstantVersion() throws IOException {\n    // common-build.xml sets lucene.version\n    final String version = System.getProperty(\"lucene.version\");\n    assertNotNull( \"null version\", version);\n    assertTrue(\"Invalid version: \"+version,\n               version.equals(Constants.LUCENE_MAIN_VERSION+\"-SNAPSHOT\") ||\n               version.equals(Constants.LUCENE_MAIN_VERSION));\n    assertTrue(Constants.LUCENE_VERSION + \" should start with: \"+version,\n               Constants.LUCENE_VERSION.startsWith(version));\n  }\n\n","bugFix":null,"bugIntro":["efcbbe53bd08dda5313a5d963f3ed83bdd318f75"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCheckIndex#testLuceneConstantVersion().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCheckIndex#testLuceneConstantVersion().mjava","sourceNew":"  public void testLuceneConstantVersion() throws IOException {\n    // common-build.xml sets lucene.version\n    final String version = System.getProperty(\"lucene.version\");\n    assertNotNull( \"null version\", version);\n    final String constantVersion;\n    String parts[] = Constants.LUCENE_MAIN_VERSION.split(\"\\\\.\");\n    if (parts.length == 4) {\n      // alpha/beta version: pull the real portion\n      assert parts[2].equals(\"0\");\n      constantVersion = parts[0] + \".\" + parts[1];\n    } else {\n      // normal version\n      constantVersion = Constants.LUCENE_MAIN_VERSION;\n    }\n    assertTrue(\"Invalid version: \"+version,\n               version.equals(constantVersion+\"-SNAPSHOT\") ||\n               version.equals(constantVersion));\n    assertTrue(Constants.LUCENE_VERSION + \" should start with: \"+version,\n               Constants.LUCENE_VERSION.startsWith(version));\n  }\n\n","sourceOld":"  public void testLuceneConstantVersion() throws IOException {\n    // common-build.xml sets lucene.version\n    final String version = System.getProperty(\"lucene.version\");\n    assertNotNull( \"null version\", version);\n    assertTrue(\"Invalid version: \"+version,\n               version.equals(Constants.LUCENE_MAIN_VERSION+\"-SNAPSHOT\") ||\n               version.equals(Constants.LUCENE_MAIN_VERSION));\n    assertTrue(Constants.LUCENE_VERSION + \" should start with: \"+version,\n               Constants.LUCENE_VERSION.startsWith(version));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCheckIndex#testLuceneConstantVersion().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCheckIndex#testLuceneConstantVersion().mjava","sourceNew":"  public void testLuceneConstantVersion() throws IOException {\n    // common-build.xml sets lucene.version\n    final String version = System.getProperty(\"lucene.version\");\n    assertNotNull( \"null version\", version);\n    final String constantVersion;\n    String parts[] = Constants.LUCENE_MAIN_VERSION.split(\"\\\\.\");\n    if (parts.length == 4) {\n      // alpha/beta version: pull the real portion\n      assert parts[2].equals(\"0\");\n      constantVersion = parts[0] + \".\" + parts[1];\n    } else {\n      // normal version\n      constantVersion = Constants.LUCENE_MAIN_VERSION;\n    }\n    assertTrue(\"Invalid version: \"+version,\n               version.equals(constantVersion+\"-SNAPSHOT\") ||\n               version.equals(constantVersion));\n    assertTrue(Constants.LUCENE_VERSION + \" should start with: \"+version,\n               Constants.LUCENE_VERSION.startsWith(version));\n  }\n\n","sourceOld":"  public void testLuceneConstantVersion() throws IOException {\n    // common-build.xml sets lucene.version\n    final String version = System.getProperty(\"lucene.version\");\n    assertNotNull( \"null version\", version);\n    assertTrue(\"Invalid version: \"+version,\n               version.equals(Constants.LUCENE_MAIN_VERSION+\"-SNAPSHOT\") ||\n               version.equals(Constants.LUCENE_MAIN_VERSION));\n    assertTrue(Constants.LUCENE_VERSION + \" should start with: \"+version,\n               Constants.LUCENE_VERSION.startsWith(version));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"efcbbe53bd08dda5313a5d963f3ed83bdd318f75","date":1377721218,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCheckIndex#testLuceneConstantVersion().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCheckIndex#testLuceneConstantVersion().mjava","sourceNew":"  public void testLuceneConstantVersion() throws IOException {\n    // common-build.xml sets lucene.version\n    String version = System.getProperty(\"lucene.version\");\n    assertNotNull( \"null version\", version);\n    // remove anything after a \"-\" from the version string:\n    version = version.replaceAll(\"-.*$\", \"\");\n    final String constantVersion;\n    String parts[] = Constants.LUCENE_MAIN_VERSION.split(\"\\\\.\");\n    if (parts.length == 4) {\n      // alpha/beta version: pull the real portion\n      assert parts[2].equals(\"0\");\n      constantVersion = parts[0] + \".\" + parts[1];\n    } else {\n      // normal version\n      constantVersion = Constants.LUCENE_MAIN_VERSION;\n    }\n    assertTrue(\"Invalid version: \"+version,\n               version.equals(constantVersion));\n    assertTrue(Constants.LUCENE_VERSION + \" should start with: \"+version,\n               Constants.LUCENE_VERSION.startsWith(version));\n  }\n\n","sourceOld":"  public void testLuceneConstantVersion() throws IOException {\n    // common-build.xml sets lucene.version\n    final String version = System.getProperty(\"lucene.version\");\n    assertNotNull( \"null version\", version);\n    final String constantVersion;\n    String parts[] = Constants.LUCENE_MAIN_VERSION.split(\"\\\\.\");\n    if (parts.length == 4) {\n      // alpha/beta version: pull the real portion\n      assert parts[2].equals(\"0\");\n      constantVersion = parts[0] + \".\" + parts[1];\n    } else {\n      // normal version\n      constantVersion = Constants.LUCENE_MAIN_VERSION;\n    }\n    assertTrue(\"Invalid version: \"+version,\n               version.equals(constantVersion+\"-SNAPSHOT\") ||\n               version.equals(constantVersion));\n    assertTrue(Constants.LUCENE_VERSION + \" should start with: \"+version,\n               Constants.LUCENE_VERSION.startsWith(version));\n  }\n\n","bugFix":["696ca209a0ed0a3f321e7f625798b22cd5d96d2d","4d0fdaa46b4b00b5d1d8b58b0c56ce04f5530511"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCheckIndex#testLuceneConstantVersion().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCheckIndex#testLuceneConstantVersion().mjava","sourceNew":"  public void testLuceneConstantVersion() throws IOException {\n    // common-build.xml sets lucene.version\n    String version = System.getProperty(\"lucene.version\");\n    assertNotNull( \"null version\", version);\n    // remove anything after a \"-\" from the version string:\n    version = version.replaceAll(\"-.*$\", \"\");\n    final String constantVersion;\n    String parts[] = Constants.LUCENE_MAIN_VERSION.split(\"\\\\.\");\n    if (parts.length == 4) {\n      // alpha/beta version: pull the real portion\n      assert parts[2].equals(\"0\");\n      constantVersion = parts[0] + \".\" + parts[1];\n    } else {\n      // normal version\n      constantVersion = Constants.LUCENE_MAIN_VERSION;\n    }\n    assertTrue(\"Invalid version: \"+version,\n               version.equals(constantVersion));\n    assertTrue(Constants.LUCENE_VERSION + \" should start with: \"+version,\n               Constants.LUCENE_VERSION.startsWith(version));\n  }\n\n","sourceOld":"  public void testLuceneConstantVersion() throws IOException {\n    // common-build.xml sets lucene.version\n    final String version = System.getProperty(\"lucene.version\");\n    assertNotNull( \"null version\", version);\n    final String constantVersion;\n    String parts[] = Constants.LUCENE_MAIN_VERSION.split(\"\\\\.\");\n    if (parts.length == 4) {\n      // alpha/beta version: pull the real portion\n      assert parts[2].equals(\"0\");\n      constantVersion = parts[0] + \".\" + parts[1];\n    } else {\n      // normal version\n      constantVersion = Constants.LUCENE_MAIN_VERSION;\n    }\n    assertTrue(\"Invalid version: \"+version,\n               version.equals(constantVersion+\"-SNAPSHOT\") ||\n               version.equals(constantVersion));\n    assertTrue(Constants.LUCENE_VERSION + \" should start with: \"+version,\n               Constants.LUCENE_VERSION.startsWith(version));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2cb8b1e5c1326b23fa8468d93487e4a9b06ccf9c","date":1395153676,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCheckIndex#testLuceneConstantVersion().mjava","sourceNew":null,"sourceOld":"  public void testLuceneConstantVersion() throws IOException {\n    // common-build.xml sets lucene.version\n    String version = System.getProperty(\"lucene.version\");\n    assertNotNull( \"null version\", version);\n    // remove anything after a \"-\" from the version string:\n    version = version.replaceAll(\"-.*$\", \"\");\n    final String constantVersion;\n    String parts[] = Constants.LUCENE_MAIN_VERSION.split(\"\\\\.\");\n    if (parts.length == 4) {\n      // alpha/beta version: pull the real portion\n      assert parts[2].equals(\"0\");\n      constantVersion = parts[0] + \".\" + parts[1];\n    } else {\n      // normal version\n      constantVersion = Constants.LUCENE_MAIN_VERSION;\n    }\n    assertTrue(\"Invalid version: \"+version,\n               version.equals(constantVersion));\n    assertTrue(Constants.LUCENE_VERSION + \" should start with: \"+version,\n               Constants.LUCENE_VERSION.startsWith(version));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aba371508186796cc6151d8223a5b4e16d02e26e":["a74951ac6a1fc21c271cf50fe93afedfa9353372","4d0fdaa46b4b00b5d1d8b58b0c56ce04f5530511"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["4d0fdaa46b4b00b5d1d8b58b0c56ce04f5530511","efcbbe53bd08dda5313a5d963f3ed83bdd318f75"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a74951ac6a1fc21c271cf50fe93afedfa9353372","4d0fdaa46b4b00b5d1d8b58b0c56ce04f5530511"],"2cb8b1e5c1326b23fa8468d93487e4a9b06ccf9c":["efcbbe53bd08dda5313a5d963f3ed83bdd318f75"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"efcbbe53bd08dda5313a5d963f3ed83bdd318f75":["4d0fdaa46b4b00b5d1d8b58b0c56ce04f5530511"],"a74951ac6a1fc21c271cf50fe93afedfa9353372":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2cb8b1e5c1326b23fa8468d93487e4a9b06ccf9c"],"4d0fdaa46b4b00b5d1d8b58b0c56ce04f5530511":["a74951ac6a1fc21c271cf50fe93afedfa9353372"]},"commit2Childs":{"aba371508186796cc6151d8223a5b4e16d02e26e":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a74951ac6a1fc21c271cf50fe93afedfa9353372"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2cb8b1e5c1326b23fa8468d93487e4a9b06ccf9c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"efcbbe53bd08dda5313a5d963f3ed83bdd318f75":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","2cb8b1e5c1326b23fa8468d93487e4a9b06ccf9c"],"a74951ac6a1fc21c271cf50fe93afedfa9353372":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","4d0fdaa46b4b00b5d1d8b58b0c56ce04f5530511"],"4d0fdaa46b4b00b5d1d8b58b0c56ce04f5530511":["aba371508186796cc6151d8223a5b4e16d02e26e","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","fe33227f6805edab2036cbb80645cc4e2d1fa424","efcbbe53bd08dda5313a5d963f3ed83bdd318f75"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}