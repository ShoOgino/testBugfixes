{"path":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T],boolean,float,boolean).mjava","commits":[{"id":"fb8af2aec0a8574cf50cad6939d4475179595eca","date":1357675799,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T],boolean,float,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T],boolean,float).mjava","sourceNew":"  // make a new empty FST, for building; Builder invokes\n  // this ctor\n  FST(INPUT_TYPE inputType, Outputs<T> outputs, boolean willPackFST, float acceptableOverheadRatio, boolean allowArrayArcs) {\n    this.inputType = inputType;\n    this.outputs = outputs;\n    this.allowArrayArcs = allowArrayArcs;\n    bytes = new byte[128];\n    NO_OUTPUT = outputs.getNoOutput();\n    if (willPackFST) {\n      nodeAddress = new GrowableWriter(PackedInts.bitsRequired(bytes.length - 1), 8, acceptableOverheadRatio);\n      inCounts = new GrowableWriter(1, 8, acceptableOverheadRatio);\n    } else {\n      nodeAddress = null;\n      inCounts = null;\n    }\n    \n    writer = new DefaultBytesWriter();\n\n    emptyOutput = null;\n    packed = false;\n    nodeRefToAddress = null;\n  }\n\n","sourceOld":"  // make a new empty FST, for building; Builder invokes\n  // this ctor\n  FST(INPUT_TYPE inputType, Outputs<T> outputs, boolean willPackFST, float acceptableOverheadRatio) {\n    this.inputType = inputType;\n    this.outputs = outputs;\n    bytes = new byte[128];\n    NO_OUTPUT = outputs.getNoOutput();\n    if (willPackFST) {\n      nodeAddress = new GrowableWriter(PackedInts.bitsRequired(bytes.length - 1), 8, acceptableOverheadRatio);\n      inCounts = new GrowableWriter(1, 8, acceptableOverheadRatio);\n    } else {\n      nodeAddress = null;\n      inCounts = null;\n    }\n    \n    writer = new DefaultBytesWriter();\n\n    emptyOutput = null;\n    packed = false;\n    nodeRefToAddress = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e6354dd7c71fe122926fc53d7d29f715b1283db","date":1357915185,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T],boolean,float,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T],boolean,float).mjava","sourceNew":"  // make a new empty FST, for building; Builder invokes\n  // this ctor\n  FST(INPUT_TYPE inputType, Outputs<T> outputs, boolean willPackFST, float acceptableOverheadRatio, boolean allowArrayArcs) {\n    this.inputType = inputType;\n    this.outputs = outputs;\n    this.allowArrayArcs = allowArrayArcs;\n    bytes = new byte[128];\n    NO_OUTPUT = outputs.getNoOutput();\n    if (willPackFST) {\n      nodeAddress = new GrowableWriter(PackedInts.bitsRequired(bytes.length - 1), 8, acceptableOverheadRatio);\n      inCounts = new GrowableWriter(1, 8, acceptableOverheadRatio);\n    } else {\n      nodeAddress = null;\n      inCounts = null;\n    }\n    \n    writer = new DefaultBytesWriter();\n\n    emptyOutput = null;\n    packed = false;\n    nodeRefToAddress = null;\n  }\n\n","sourceOld":"  // make a new empty FST, for building; Builder invokes\n  // this ctor\n  FST(INPUT_TYPE inputType, Outputs<T> outputs, boolean willPackFST, float acceptableOverheadRatio) {\n    this.inputType = inputType;\n    this.outputs = outputs;\n    bytes = new byte[128];\n    NO_OUTPUT = outputs.getNoOutput();\n    if (willPackFST) {\n      nodeAddress = new GrowableWriter(PackedInts.bitsRequired(bytes.length - 1), 8, acceptableOverheadRatio);\n      inCounts = new GrowableWriter(1, 8, acceptableOverheadRatio);\n    } else {\n      nodeAddress = null;\n      inCounts = null;\n    }\n    \n    writer = new DefaultBytesWriter();\n\n    emptyOutput = null;\n    packed = false;\n    nodeRefToAddress = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"87e78f3c129251e74ecc2ff73a32de0f27cf09d5","date":1358006150,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T],boolean,float,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T],boolean,float,boolean).mjava","sourceNew":"  // make a new empty FST, for building; Builder invokes\n  // this ctor\n  FST(INPUT_TYPE inputType, Outputs<T> outputs, boolean willPackFST, float acceptableOverheadRatio, boolean allowArrayArcs) {\n    this.inputType = inputType;\n    this.outputs = outputs;\n    this.allowArrayArcs = allowArrayArcs;\n    // 32 KB blocks:\n    bytes = new BytesStore(15);\n    // pad: ensure no node gets address 0 which is reserved to mean\n    // the stop state w/ no arcs\n    bytes.writeByte((byte) 0);\n    NO_OUTPUT = outputs.getNoOutput();\n    if (willPackFST) {\n      nodeAddress = new GrowableWriter(15, 8, acceptableOverheadRatio);\n      inCounts = new GrowableWriter(1, 8, acceptableOverheadRatio);\n    } else {\n      nodeAddress = null;\n      inCounts = null;\n    }\n\n    emptyOutput = null;\n    packed = false;\n    nodeRefToAddress = null;\n  }\n\n","sourceOld":"  // make a new empty FST, for building; Builder invokes\n  // this ctor\n  FST(INPUT_TYPE inputType, Outputs<T> outputs, boolean willPackFST, float acceptableOverheadRatio, boolean allowArrayArcs) {\n    this.inputType = inputType;\n    this.outputs = outputs;\n    this.allowArrayArcs = allowArrayArcs;\n    bytes = new byte[128];\n    NO_OUTPUT = outputs.getNoOutput();\n    if (willPackFST) {\n      nodeAddress = new GrowableWriter(PackedInts.bitsRequired(bytes.length - 1), 8, acceptableOverheadRatio);\n      inCounts = new GrowableWriter(1, 8, acceptableOverheadRatio);\n    } else {\n      nodeAddress = null;\n      inCounts = null;\n    }\n    \n    writer = new DefaultBytesWriter();\n\n    emptyOutput = null;\n    packed = false;\n    nodeRefToAddress = null;\n  }\n\n","bugFix":null,"bugIntro":["651a27b35167c2ea81f87f4749722e52b7d5b750","651a27b35167c2ea81f87f4749722e52b7d5b750"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"556c8202987f72dd8458e25e21a82d98fc274979","date":1358008288,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T],boolean,float,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T],boolean,float,boolean).mjava","sourceNew":"  // make a new empty FST, for building; Builder invokes\n  // this ctor\n  FST(INPUT_TYPE inputType, Outputs<T> outputs, boolean willPackFST, float acceptableOverheadRatio, boolean allowArrayArcs) {\n    this.inputType = inputType;\n    this.outputs = outputs;\n    this.allowArrayArcs = allowArrayArcs;\n    version = VERSION_CURRENT;\n    // 32 KB blocks:\n    bytes = new BytesStore(15);\n    // pad: ensure no node gets address 0 which is reserved to mean\n    // the stop state w/ no arcs\n    bytes.writeByte((byte) 0);\n    NO_OUTPUT = outputs.getNoOutput();\n    if (willPackFST) {\n      nodeAddress = new GrowableWriter(15, 8, acceptableOverheadRatio);\n      inCounts = new GrowableWriter(1, 8, acceptableOverheadRatio);\n    } else {\n      nodeAddress = null;\n      inCounts = null;\n    }\n\n    emptyOutput = null;\n    packed = false;\n    nodeRefToAddress = null;\n  }\n\n","sourceOld":"  // make a new empty FST, for building; Builder invokes\n  // this ctor\n  FST(INPUT_TYPE inputType, Outputs<T> outputs, boolean willPackFST, float acceptableOverheadRatio, boolean allowArrayArcs) {\n    this.inputType = inputType;\n    this.outputs = outputs;\n    this.allowArrayArcs = allowArrayArcs;\n    // 32 KB blocks:\n    bytes = new BytesStore(15);\n    // pad: ensure no node gets address 0 which is reserved to mean\n    // the stop state w/ no arcs\n    bytes.writeByte((byte) 0);\n    NO_OUTPUT = outputs.getNoOutput();\n    if (willPackFST) {\n      nodeAddress = new GrowableWriter(15, 8, acceptableOverheadRatio);\n      inCounts = new GrowableWriter(1, 8, acceptableOverheadRatio);\n    } else {\n      nodeAddress = null;\n      inCounts = null;\n    }\n\n    emptyOutput = null;\n    packed = false;\n    nodeRefToAddress = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3c397b1515e745d8b12d70edfc0e17cb7eac7f0","date":1358188277,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T],boolean,float,boolean,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T],boolean,float,boolean).mjava","sourceNew":"  // make a new empty FST, for building; Builder invokes\n  // this ctor\n  FST(INPUT_TYPE inputType, Outputs<T> outputs, boolean willPackFST, float acceptableOverheadRatio, boolean allowArrayArcs, int bytesPageBits) {\n    this.inputType = inputType;\n    this.outputs = outputs;\n    this.allowArrayArcs = allowArrayArcs;\n    version = VERSION_CURRENT;\n    // 32 KB blocks:\n    bytes = new BytesStore(bytesPageBits);\n    // pad: ensure no node gets address 0 which is reserved to mean\n    // the stop state w/ no arcs\n    bytes.writeByte((byte) 0);\n    NO_OUTPUT = outputs.getNoOutput();\n    if (willPackFST) {\n      nodeAddress = new GrowableWriter(15, 8, acceptableOverheadRatio);\n      inCounts = new GrowableWriter(1, 8, acceptableOverheadRatio);\n    } else {\n      nodeAddress = null;\n      inCounts = null;\n    }\n\n    emptyOutput = null;\n    packed = false;\n    nodeRefToAddress = null;\n  }\n\n","sourceOld":"  // make a new empty FST, for building; Builder invokes\n  // this ctor\n  FST(INPUT_TYPE inputType, Outputs<T> outputs, boolean willPackFST, float acceptableOverheadRatio, boolean allowArrayArcs) {\n    this.inputType = inputType;\n    this.outputs = outputs;\n    this.allowArrayArcs = allowArrayArcs;\n    version = VERSION_CURRENT;\n    // 32 KB blocks:\n    bytes = new BytesStore(15);\n    // pad: ensure no node gets address 0 which is reserved to mean\n    // the stop state w/ no arcs\n    bytes.writeByte((byte) 0);\n    NO_OUTPUT = outputs.getNoOutput();\n    if (willPackFST) {\n      nodeAddress = new GrowableWriter(15, 8, acceptableOverheadRatio);\n      inCounts = new GrowableWriter(1, 8, acceptableOverheadRatio);\n    } else {\n      nodeAddress = null;\n      inCounts = null;\n    }\n\n    emptyOutput = null;\n    packed = false;\n    nodeRefToAddress = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8917bfede3b4ca30f4305c1e391e9218959cd723","date":1358189662,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T],boolean,float,boolean,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#FST(INPUT_TYPE,Outputs[T],boolean,float,boolean).mjava","sourceNew":"  // make a new empty FST, for building; Builder invokes\n  // this ctor\n  FST(INPUT_TYPE inputType, Outputs<T> outputs, boolean willPackFST, float acceptableOverheadRatio, boolean allowArrayArcs, int bytesPageBits) {\n    this.inputType = inputType;\n    this.outputs = outputs;\n    this.allowArrayArcs = allowArrayArcs;\n    version = VERSION_CURRENT;\n    // 32 KB blocks:\n    bytes = new BytesStore(bytesPageBits);\n    // pad: ensure no node gets address 0 which is reserved to mean\n    // the stop state w/ no arcs\n    bytes.writeByte((byte) 0);\n    NO_OUTPUT = outputs.getNoOutput();\n    if (willPackFST) {\n      nodeAddress = new GrowableWriter(15, 8, acceptableOverheadRatio);\n      inCounts = new GrowableWriter(1, 8, acceptableOverheadRatio);\n    } else {\n      nodeAddress = null;\n      inCounts = null;\n    }\n\n    emptyOutput = null;\n    packed = false;\n    nodeRefToAddress = null;\n  }\n\n","sourceOld":"  // make a new empty FST, for building; Builder invokes\n  // this ctor\n  FST(INPUT_TYPE inputType, Outputs<T> outputs, boolean willPackFST, float acceptableOverheadRatio, boolean allowArrayArcs) {\n    this.inputType = inputType;\n    this.outputs = outputs;\n    this.allowArrayArcs = allowArrayArcs;\n    bytes = new byte[128];\n    NO_OUTPUT = outputs.getNoOutput();\n    if (willPackFST) {\n      nodeAddress = new GrowableWriter(PackedInts.bitsRequired(bytes.length - 1), 8, acceptableOverheadRatio);\n      inCounts = new GrowableWriter(1, 8, acceptableOverheadRatio);\n    } else {\n      nodeAddress = null;\n      inCounts = null;\n    }\n    \n    writer = new DefaultBytesWriter();\n\n    emptyOutput = null;\n    packed = false;\n    nodeRefToAddress = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"d3c397b1515e745d8b12d70edfc0e17cb7eac7f0":["556c8202987f72dd8458e25e21a82d98fc274979"],"8917bfede3b4ca30f4305c1e391e9218959cd723":["4e6354dd7c71fe122926fc53d7d29f715b1283db","d3c397b1515e745d8b12d70edfc0e17cb7eac7f0"],"556c8202987f72dd8458e25e21a82d98fc274979":["87e78f3c129251e74ecc2ff73a32de0f27cf09d5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fb8af2aec0a8574cf50cad6939d4475179595eca":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"87e78f3c129251e74ecc2ff73a32de0f27cf09d5":["fb8af2aec0a8574cf50cad6939d4475179595eca"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fb8af2aec0a8574cf50cad6939d4475179595eca"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d3c397b1515e745d8b12d70edfc0e17cb7eac7f0"]},"commit2Childs":{"d3c397b1515e745d8b12d70edfc0e17cb7eac7f0":["8917bfede3b4ca30f4305c1e391e9218959cd723","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8917bfede3b4ca30f4305c1e391e9218959cd723":[],"556c8202987f72dd8458e25e21a82d98fc274979":["d3c397b1515e745d8b12d70edfc0e17cb7eac7f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fb8af2aec0a8574cf50cad6939d4475179595eca","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"fb8af2aec0a8574cf50cad6939d4475179595eca":["87e78f3c129251e74ecc2ff73a32de0f27cf09d5","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"87e78f3c129251e74ecc2ff73a32de0f27cf09d5":["556c8202987f72dd8458e25e21a82d98fc274979"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["8917bfede3b4ca30f4305c1e391e9218959cd723"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8917bfede3b4ca30f4305c1e391e9218959cd723","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}