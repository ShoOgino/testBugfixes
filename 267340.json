{"path":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/charfilter/MappingCharFilter#read(char[],int,int).mjava","commits":[{"id":"c6744d321d7fd4ced5c99aeff28c036ac61e2314","date":1272929763,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/charfilter/MappingCharFilter#read(char[],int,int).mjava","pathOld":"lucene/backwards/src/java/org/apache/lucene/analysis/MappingCharFilter#read(char[],int,int).mjava","sourceNew":"  @Override\n  public int read(char[] cbuf, int off, int len) throws IOException {\n    char[] tmp = new char[len];\n    int l = input.read(tmp, 0, len);\n    if (l != -1) {\n      for(int i = 0; i < l; i++)\n        pushLastChar(tmp[i]);\n    }\n    l = 0;\n    for(int i = off; i < off + len; i++) {\n      int c = read();\n      if (c == -1) break;\n      cbuf[i] = (char) c;\n      l++;\n    }\n    return l == 0 ? -1 : l;\n  }\n\n","sourceOld":"  @Override\n  public int read(char[] cbuf, int off, int len) throws IOException {\n    char[] tmp = new char[len];\n    int l = input.read(tmp, 0, len);\n    if (l != -1) {\n      for(int i = 0; i < l; i++)\n        pushLastChar(tmp[i]);\n    }\n    l = 0;\n    for(int i = off; i < off + len; i++) {\n      int c = read();\n      if (c == -1) break;\n      cbuf[i] = (char) c;\n      l++;\n    }\n    return l == 0 ? -1 : l;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/MappingCharFilter#read(char[],int,int).mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/charfilter/MappingCharFilter#read(char[],int,int).mjava","sourceNew":"  @Override\n  public int read(char[] cbuf, int off, int len) throws IOException {\n    char[] tmp = new char[len];\n    int l = input.read(tmp, 0, len);\n    if (l != -1) {\n      for(int i = 0; i < l; i++)\n        pushLastChar(tmp[i]);\n    }\n    l = 0;\n    for(int i = off; i < off + len; i++) {\n      int c = read();\n      if (c == -1) break;\n      cbuf[i] = (char) c;\n      l++;\n    }\n    return l == 0 ? -1 : l;\n  }\n\n","sourceOld":"  @Override\n  public int read(char[] cbuf, int off, int len) throws IOException {\n    char[] tmp = new char[len];\n    int l = input.read(tmp, 0, len);\n    if (l != -1) {\n      for(int i = 0; i < l; i++)\n        pushLastChar(tmp[i]);\n    }\n    l = 0;\n    for(int i = off; i < off + len; i++) {\n      int c = read();\n      if (c == -1) break;\n      cbuf[i] = (char) c;\n      l++;\n    }\n    return l == 0 ? -1 : l;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["c6744d321d7fd4ced5c99aeff28c036ac61e2314"],"c6744d321d7fd4ced5c99aeff28c036ac61e2314":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c6744d321d7fd4ced5c99aeff28c036ac61e2314"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c6744d321d7fd4ced5c99aeff28c036ac61e2314":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}