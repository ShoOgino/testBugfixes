{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testFailOnVersionConflicts().mjava","commits":[{"id":"09c68c39b2c63d90387c861e51185c9568c50611","date":1557206402,"type":0,"author":"noble","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testFailOnVersionConflicts().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testFailOnVersionConflicts() throws Exception {\n    SolrClient client = getSolrClient();\n\n    // Empty the database...\n    client.deleteByQuery(\"*:*\");// delete everything!\n    client.commit();\n\n    client.request(new UpdateRequest()\n        .add(\"id\", \"id1\", \"name\", \"doc1.v1\"));\n    client.commit();\n\n    QueryResponse rsp = null;\n    assertResponseValues(client.query(new SolrQuery(\"id:id1\")), \"response[0]/name\", \"doc1.v1\");\n\n    assertResponseValues(client.query(new SolrQuery(\"*:*\").set(\"sort\", \"id asc\")),\n        \"response[0]/name\", \"doc1.v1\"\n    );\n\n    client.request(\n        new UpdateRequest()\n            .add(\"id\", \"id1\", \"name\", \"doc1.v2\")\n            .add(\"id\", \"id2\", \"name\", \"doc2.v1\"));\n    client.commit();\n    assertResponseValues(client.query(new SolrQuery(\"*:*\").set(\"sort\", \"id asc\")),\n        \"response[0]/name\", \"doc1.v2\",\n        \"response[1]/name\", \"doc2.v1\"\n    );\n\n    UpdateRequest add = new UpdateRequest()\n        .add(\"id\", \"id1\", \"name\", \"doc1.v3\")\n        .add(\"id\", \"id3\", \"name\", \"doc3.v1\");\n    add.setParam(CommonParams.FAIL_ON_VERSION_CONFLICTS, \"false\");\n    add.setParam(CommonParams.VERSION_FIELD, \"-1\");\n    client.request(add);\n    client.commit();\n\n    assertResponseValues(client.query(new SolrQuery(\"*:*\").set(\"sort\", \"id asc\")),\n        \"response[0]/name\", \"doc1.v2\" ,\n        \"response[1]/name\", \"doc2.v1\" ,\n        \"response[2]/name\", \"doc3.v1\");\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c68c39b2c63d90387c861e51185c9568c50611":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09c68c39b2c63d90387c861e51185c9568c50611"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09c68c39b2c63d90387c861e51185c9568c50611"],"09c68c39b2c63d90387c861e51185c9568c50611":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}