{"path":"lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/CommitsPanelProvider#selectGeneration().mjava","commits":[{"id":"f554f2d9b5456248ab6467b9d4f6015686797a6c","date":1554891357,"type":0,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/CommitsPanelProvider#selectGeneration().mjava","pathOld":"/dev/null","sourceNew":"  private void selectGeneration() {\n    diagRB.setEnabled(false);\n    attrRB.setEnabled(false);\n    codecRB.setEnabled(false);\n    segDetailList.setModel(new DefaultListModel<>());\n\n    long commitGen = (long) commitGenCombo.getSelectedItem();\n    commitsModel.getCommit(commitGen).ifPresent(commit -> {\n      deletedLbl.setText(String.valueOf(commit.isDeleted()));\n      segCntLbl.setText(String.valueOf(commit.getSegCount()));\n      userDataTA.setText(commit.getUserData());\n    });\n\n    filesTable.setModel(new FilesTableModel(commitsModel.getFiles(commitGen)));\n    filesTable.setShowGrid(true);\n    filesTable.getColumnModel().getColumn(FilesTableModel.Column.FILENAME.getIndex()).setPreferredWidth(FilesTableModel.Column.FILENAME.getColumnWidth());\n\n    segmentsTable.setModel(new SegmentsTableModel(commitsModel.getSegments(commitGen)));\n    segmentsTable.setShowGrid(true);\n    segmentsTable.getColumnModel().getColumn(SegmentsTableModel.Column.NAME.getIndex()).setPreferredWidth(SegmentsTableModel.Column.NAME.getColumnWidth());\n    segmentsTable.getColumnModel().getColumn(SegmentsTableModel.Column.MAXDOCS.getIndex()).setPreferredWidth(SegmentsTableModel.Column.MAXDOCS.getColumnWidth());\n    segmentsTable.getColumnModel().getColumn(SegmentsTableModel.Column.DELS.getIndex()).setPreferredWidth(SegmentsTableModel.Column.DELS.getColumnWidth());\n    segmentsTable.getColumnModel().getColumn(SegmentsTableModel.Column.DELGEN.getIndex()).setPreferredWidth(SegmentsTableModel.Column.DELGEN.getColumnWidth());\n    segmentsTable.getColumnModel().getColumn(SegmentsTableModel.Column.VERSION.getIndex()).setPreferredWidth(SegmentsTableModel.Column.VERSION.getColumnWidth());\n    segmentsTable.getColumnModel().getColumn(SegmentsTableModel.Column.CODEC.getIndex()).setPreferredWidth(SegmentsTableModel.Column.CODEC.getColumnWidth());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f554f2d9b5456248ab6467b9d4f6015686797a6c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f554f2d9b5456248ab6467b9d4f6015686797a6c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f554f2d9b5456248ab6467b9d4f6015686797a6c"],"f554f2d9b5456248ab6467b9d4f6015686797a6c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}