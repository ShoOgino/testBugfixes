{"path":"solr/core/src/java/org/apache/solr/cloud/LeaderInitiatedRecoveryThread#LeaderInitiatedRecoveryThread(ZkController,CoreContainer,String,String,ZkCoreNodeProps,int,CoreDescriptor).mjava","commits":[{"id":"3e0300d1df37d7e9662d491269e91b6f66dca8bd","date":1443011762,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/LeaderInitiatedRecoveryThread#LeaderInitiatedRecoveryThread(ZkController,CoreContainer,String,String,ZkCoreNodeProps,int,CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/LeaderInitiatedRecoveryThread#LeaderInitiatedRecoveryThread(ZkController,CoreContainer,String,String,ZkCoreNodeProps,int,String).mjava","sourceNew":"  public LeaderInitiatedRecoveryThread(ZkController zkController, \n                                       CoreContainer cc, \n                                       String collection, \n                                       String shardId, \n                                       ZkCoreNodeProps nodeProps,\n                                       int maxTries,\n                                       CoreDescriptor leaderCd)\n  {\n    super(\"LeaderInitiatedRecoveryThread-\"+nodeProps.getCoreName());\n    this.zkController = zkController;\n    this.coreContainer = cc;\n    this.collection = collection;\n    this.shardId = shardId;    \n    this.nodeProps = nodeProps;\n    this.maxTries = maxTries;\n    this.leaderCd = leaderCd;\n    setDaemon(true);\n  }\n\n","sourceOld":"  public LeaderInitiatedRecoveryThread(ZkController zkController, \n                                       CoreContainer cc, \n                                       String collection, \n                                       String shardId, \n                                       ZkCoreNodeProps nodeProps,\n                                       int maxTries,\n                                       String leaderCoreNodeName)\n  {\n    super(\"LeaderInitiatedRecoveryThread-\"+nodeProps.getCoreName());\n    this.zkController = zkController;\n    this.coreContainer = cc;\n    this.collection = collection;\n    this.shardId = shardId;    \n    this.nodeProps = nodeProps;\n    this.maxTries = maxTries;\n    this.leaderCoreNodeName = leaderCoreNodeName;\n    \n    setDaemon(true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6d72c72ee67b4aa8bc8bdd91bae9069b04fc180","date":1539076849,"type":4,"author":"Cao Manh Dat","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/LeaderInitiatedRecoveryThread#LeaderInitiatedRecoveryThread(ZkController,CoreContainer,String,String,ZkCoreNodeProps,int,CoreDescriptor).mjava","sourceNew":null,"sourceOld":"  public LeaderInitiatedRecoveryThread(ZkController zkController, \n                                       CoreContainer cc, \n                                       String collection, \n                                       String shardId, \n                                       ZkCoreNodeProps nodeProps,\n                                       int maxTries,\n                                       CoreDescriptor leaderCd)\n  {\n    super(\"LeaderInitiatedRecoveryThread-\"+nodeProps.getCoreName());\n    this.zkController = zkController;\n    this.coreContainer = cc;\n    this.collection = collection;\n    this.shardId = shardId;    \n    this.nodeProps = nodeProps;\n    this.maxTries = maxTries;\n    this.leaderCd = leaderCd;\n    setDaemon(true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3e0300d1df37d7e9662d491269e91b6f66dca8bd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b6d72c72ee67b4aa8bc8bdd91bae9069b04fc180":["3e0300d1df37d7e9662d491269e91b6f66dca8bd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b6d72c72ee67b4aa8bc8bdd91bae9069b04fc180"]},"commit2Childs":{"3e0300d1df37d7e9662d491269e91b6f66dca8bd":["b6d72c72ee67b4aa8bc8bdd91bae9069b04fc180"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e0300d1df37d7e9662d491269e91b6f66dca8bd"],"b6d72c72ee67b4aa8bc8bdd91bae9069b04fc180":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}