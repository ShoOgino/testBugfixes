{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = new Lucene40PostingsReader(state.dir, state.segmentInfo, state.context, state.segmentSuffix);\n    PostingsReaderBase pulsingReaderInner = new PulsingPostingsReader(docsReader);\n    PostingsReaderBase pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n    boolean success = false;\n    try {\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo.name,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        pulsingReader.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = new Lucene40PostingsReader(state.dir, state.segmentInfo, state.context, state.segmentSuffix);\n    PostingsReaderBase pulsingReaderInner = new PulsingPostingsReader(docsReader);\n    PostingsReaderBase pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n    boolean success = false;\n    try {\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo.name,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        pulsingReader.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d08eba3d52b63561ebf936481ce73e6b6a14aa03","date":1333879759,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public InvertedFieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = new Lucene40PostingsReader(state.dir, state.segmentInfo, state.context, state.segmentSuffix);\n    PostingsReaderBase pulsingReaderInner = new PulsingPostingsReader(docsReader);\n    PostingsReaderBase pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n    boolean success = false;\n    try {\n      InvertedFieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo.name,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        pulsingReader.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = new Lucene40PostingsReader(state.dir, state.segmentInfo, state.context, state.segmentSuffix);\n    PostingsReaderBase pulsingReaderInner = new PulsingPostingsReader(docsReader);\n    PostingsReaderBase pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n    boolean success = false;\n    try {\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo.name,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        pulsingReader.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf","date":1333892281,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = new Lucene40PostingsReader(state.dir, state.segmentInfo, state.context, state.segmentSuffix);\n    PostingsReaderBase pulsingReaderInner = new PulsingPostingsReader(docsReader);\n    PostingsReaderBase pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n    boolean success = false;\n    try {\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo.name,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        pulsingReader.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public InvertedFieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = new Lucene40PostingsReader(state.dir, state.segmentInfo, state.context, state.segmentSuffix);\n    PostingsReaderBase pulsingReaderInner = new PulsingPostingsReader(docsReader);\n    PostingsReaderBase pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n    boolean success = false;\n    try {\n      InvertedFieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo.name,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        pulsingReader.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"dc97c61094c5498702b29cc2e8309beac50c23dc","date":1337293692,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = new Lucene40PostingsReader(state.dir, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n    PostingsReaderBase pulsingReaderInner = new PulsingPostingsReader(docsReader);\n    PostingsReaderBase pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n    boolean success = false;\n    try {\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo.name,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        pulsingReader.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = new Lucene40PostingsReader(state.dir, state.segmentInfo, state.context, state.segmentSuffix);\n    PostingsReaderBase pulsingReaderInner = new PulsingPostingsReader(docsReader);\n    PostingsReaderBase pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n    boolean success = false;\n    try {\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo.name,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        pulsingReader.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["dd5dd283c3d9f22e186699bf823c9d1e67f49152"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = new Lucene40PostingsReader(state.dir, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n    PostingsReaderBase pulsingReaderInner = new PulsingPostingsReader(docsReader);\n    PostingsReaderBase pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n    boolean success = false;\n    try {\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo.name,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        pulsingReader.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = new Lucene40PostingsReader(state.dir, state.segmentInfo, state.context, state.segmentSuffix);\n    PostingsReaderBase pulsingReaderInner = new PulsingPostingsReader(docsReader);\n    PostingsReaderBase pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n    boolean success = false;\n    try {\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo.name,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        pulsingReader.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"dd5dd283c3d9f22e186699bf823c9d1e67f49152","date":1339431132,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReaderInner = null;\n    PostingsReaderBase pulsingReader = null;\n    boolean success = false;\n    try {\n      docsReader = new Lucene40PostingsReader(state.dir, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n      pulsingReaderInner = new PulsingPostingsReader(docsReader);\n      pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo.name,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReaderInner, pulsingReader);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = new Lucene40PostingsReader(state.dir, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n    PostingsReaderBase pulsingReaderInner = new PulsingPostingsReader(docsReader);\n    PostingsReaderBase pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n    boolean success = false;\n    try {\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo.name,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        pulsingReader.close();\n      }\n    }\n  }\n\n","bugFix":["dc97c61094c5498702b29cc2e8309beac50c23dc","7b91922b55d15444d554721b352861d028eb8278"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e5adcbe5a27941451fdb6194bcbff96c8630e14","date":1346419102,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReaderInner = null;\n    PostingsReaderBase pulsingReader = null;\n    boolean success = false;\n    try {\n      docsReader = new Lucene40PostingsReader(state.dir, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n      pulsingReaderInner = new PulsingPostingsReader(docsReader);\n      pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReaderInner, pulsingReader);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReaderInner = null;\n    PostingsReaderBase pulsingReader = null;\n    boolean success = false;\n    try {\n      docsReader = new Lucene40PostingsReader(state.dir, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n      pulsingReaderInner = new PulsingPostingsReader(docsReader);\n      pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo.name,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReaderInner, pulsingReader);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0d1f90e969803cc84174589b5e4a39b7935fecd","date":1346584861,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReaderInner = null;\n    PostingsReaderBase pulsingReader = null;\n    boolean success = false;\n    try {\n      docsReader = new Lucene40PostingsReader(state.dir, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n      pulsingReaderInner = new PulsingPostingsReader(docsReader);\n      pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReaderInner, pulsingReader);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReaderInner = null;\n    PostingsReaderBase pulsingReader = null;\n    boolean success = false;\n    try {\n      docsReader = new Lucene40PostingsReader(state.dir, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n      pulsingReaderInner = new PulsingPostingsReader(docsReader);\n      pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo.name,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReaderInner, pulsingReader);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"879f5e74b68e6faa45251db337bb1e1a9e9be647","date":1350008268,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReaderInner = null;\n    PostingsReaderBase pulsingReader = null;\n    boolean success = false;\n    try {\n      docsReader = new Lucene41PostingsReader(state.dir, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n      pulsingReaderInner = new PulsingPostingsReader(docsReader);\n      pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReaderInner, pulsingReader);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReaderInner = null;\n    PostingsReaderBase pulsingReader = null;\n    boolean success = false;\n    try {\n      docsReader = new Lucene40PostingsReader(state.dir, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n      pulsingReaderInner = new PulsingPostingsReader(docsReader);\n      pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReaderInner, pulsingReader);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c7492bcb52be51e55d596134b95b2e53cc4ffb91","date":1350223278,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReaderInner = null;\n    PostingsReaderBase pulsingReader = null;\n    boolean success = false;\n    try {\n      docsReader = new Lucene41PostingsReader(state.dir, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n      pulsingReaderInner = new PulsingPostingsReader(docsReader);\n      pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReaderInner, pulsingReader);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReaderInner = null;\n    PostingsReaderBase pulsingReader = null;\n    boolean success = false;\n    try {\n      docsReader = new Lucene40PostingsReader(state.dir, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n      pulsingReaderInner = new PulsingPostingsReader(docsReader);\n      pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReaderInner, pulsingReader);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"db4fdbf3d262768eabc027cd8321edca0cd11fa8","date":1350574784,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReaderInner = null;\n    PostingsReaderBase pulsingReader = null;\n    boolean success = false;\n    try {\n      docsReader = new Lucene41PostingsReader(state.dir, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n      pulsingReaderInner = new PulsingPostingsReader(docsReader);\n      pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReaderInner, pulsingReader);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReaderInner = null;\n    PostingsReaderBase pulsingReader = null;\n    boolean success = false;\n    try {\n      docsReader = new Lucene40PostingsReader(state.dir, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n      pulsingReaderInner = new PulsingPostingsReader(docsReader);\n      pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReaderInner, pulsingReader);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ede45a461a2dcb573505ed9b6a5182dfebd3688f","date":1353338494,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReaderInner = null;\n    PostingsReaderBase pulsingReader = null;\n    boolean success = false;\n    try {\n      docsReader = new Lucene41PostingsReader(state.directory, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n      pulsingReaderInner = new PulsingPostingsReader(docsReader);\n      pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.directory, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReaderInner, pulsingReader);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReaderInner = null;\n    PostingsReaderBase pulsingReader = null;\n    boolean success = false;\n    try {\n      docsReader = new Lucene41PostingsReader(state.dir, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n      pulsingReaderInner = new PulsingPostingsReader(docsReader);\n      pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReaderInner, pulsingReader);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReaderInner = null;\n    PostingsReaderBase pulsingReader = null;\n    boolean success = false;\n    try {\n      docsReader = new Lucene41PostingsReader(state.directory, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n      pulsingReaderInner = new PulsingPostingsReader(docsReader);\n      pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.directory, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReaderInner, pulsingReader);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReaderInner = null;\n    PostingsReaderBase pulsingReader = null;\n    boolean success = false;\n    try {\n      docsReader = new Lucene41PostingsReader(state.dir, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n      pulsingReaderInner = new PulsingPostingsReader(docsReader);\n      pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReaderInner, pulsingReader);\n      }\n    }\n  }\n\n","bugFix":["6e5adcbe5a27941451fdb6194bcbff96c8630e14","879f5e74b68e6faa45251db337bb1e1a9e9be647"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a45bec74b98f6fc05f52770cfb425739e6563960","date":1375119292,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReaderInner = null;\n    PostingsReaderBase pulsingReader = null;\n    boolean success = false;\n    try {\n      docsReader = new Lucene41PostingsReader(state.directory, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n      pulsingReaderInner = new PulsingPostingsReader(docsReader);\n      pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.directory, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReaderInner, pulsingReader);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReaderInner = null;\n    PostingsReaderBase pulsingReader = null;\n    boolean success = false;\n    try {\n      docsReader = new Lucene41PostingsReader(state.directory, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n      pulsingReaderInner = new PulsingPostingsReader(docsReader);\n      pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.directory, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReaderInner, pulsingReader);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReaderInner = null;\n    PostingsReaderBase pulsingReader = null;\n    boolean success = false;\n    try {\n      docsReader = new Lucene41PostingsReader(state.directory, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n      pulsingReaderInner = new PulsingPostingsReader(docsReader);\n      pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.directory, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReaderInner, pulsingReader);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReaderInner = null;\n    PostingsReaderBase pulsingReader = null;\n    boolean success = false;\n    try {\n      docsReader = new Lucene41PostingsReader(state.directory, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n      pulsingReaderInner = new PulsingPostingsReader(docsReader);\n      pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.directory, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReaderInner, pulsingReader);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98","date":1377268487,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReaderInner = null;\n    PostingsReaderBase pulsingReader = null;\n    boolean success = false;\n    try {\n      docsReader = new Lucene41PostingsReader(state.directory, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n      pulsingReaderInner = new PulsingPostingsReader(state, docsReader);\n      pulsingReader = new PulsingPostingsReader(state, pulsingReaderInner);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.directory, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReaderInner, pulsingReader);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReaderInner = null;\n    PostingsReaderBase pulsingReader = null;\n    boolean success = false;\n    try {\n      docsReader = new Lucene41PostingsReader(state.directory, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n      pulsingReaderInner = new PulsingPostingsReader(docsReader);\n      pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.directory, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReaderInner, pulsingReader);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f948dd442d23baa6cbb28daf77c8db78b351329","date":1378742876,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReaderInner = null;\n    PostingsReaderBase pulsingReader = null;\n    boolean success = false;\n    try {\n      docsReader = new Lucene41PostingsReader(state.directory, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n      pulsingReaderInner = new PulsingPostingsReader(state, docsReader);\n      pulsingReader = new PulsingPostingsReader(state, pulsingReaderInner);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.directory, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReaderInner, pulsingReader);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReaderInner = null;\n    PostingsReaderBase pulsingReader = null;\n    boolean success = false;\n    try {\n      docsReader = new Lucene41PostingsReader(state.directory, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n      pulsingReaderInner = new PulsingPostingsReader(docsReader);\n      pulsingReader = new PulsingPostingsReader(pulsingReaderInner);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.directory, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReaderInner, pulsingReader);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fbaae1c00d39df2c872bbe043af26d02d3818313","date":1409657064,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/nestedpulsing/NestedPulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":null,"sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReaderInner = null;\n    PostingsReaderBase pulsingReader = null;\n    boolean success = false;\n    try {\n      docsReader = new Lucene41PostingsReader(state.directory, state.fieldInfos, state.segmentInfo, state.context, state.segmentSuffix);\n      pulsingReaderInner = new PulsingPostingsReader(state, docsReader);\n      pulsingReader = new PulsingPostingsReader(state, pulsingReaderInner);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.directory, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReaderInner, pulsingReader);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ede45a461a2dcb573505ed9b6a5182dfebd3688f":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"a45bec74b98f6fc05f52770cfb425739e6563960":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":["6e5adcbe5a27941451fdb6194bcbff96c8630e14","c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"dc97c61094c5498702b29cc2e8309beac50c23dc":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf"],"d08eba3d52b63561ebf936481ce73e6b6a14aa03":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"dd5dd283c3d9f22e186699bf823c9d1e67f49152":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"879f5e74b68e6faa45251db337bb1e1a9e9be647":["6e5adcbe5a27941451fdb6194bcbff96c8630e14"],"1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"d0d1f90e969803cc84174589b5e4a39b7935fecd":["dd5dd283c3d9f22e186699bf823c9d1e67f49152","6e5adcbe5a27941451fdb6194bcbff96c8630e14"],"fbaae1c00d39df2c872bbe043af26d02d3818313":["2f948dd442d23baa6cbb28daf77c8db78b351329"],"c7492bcb52be51e55d596134b95b2e53cc4ffb91":["6e5adcbe5a27941451fdb6194bcbff96c8630e14","879f5e74b68e6faa45251db337bb1e1a9e9be647"],"6e5adcbe5a27941451fdb6194bcbff96c8630e14":["dd5dd283c3d9f22e186699bf823c9d1e67f49152"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf","dc97c61094c5498702b29cc2e8309beac50c23dc"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["c7492bcb52be51e55d596134b95b2e53cc4ffb91","ede45a461a2dcb573505ed9b6a5182dfebd3688f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf":["d08eba3d52b63561ebf936481ce73e6b6a14aa03"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"2f948dd442d23baa6cbb28daf77c8db78b351329":["a45bec74b98f6fc05f52770cfb425739e6563960","1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fbaae1c00d39df2c872bbe043af26d02d3818313"]},"commit2Childs":{"ede45a461a2dcb573505ed9b6a5182dfebd3688f":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"a45bec74b98f6fc05f52770cfb425739e6563960":["2f948dd442d23baa6cbb28daf77c8db78b351329"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d08eba3d52b63561ebf936481ce73e6b6a14aa03"],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":[],"dc97c61094c5498702b29cc2e8309beac50c23dc":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"d08eba3d52b63561ebf936481ce73e6b6a14aa03":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf"],"dd5dd283c3d9f22e186699bf823c9d1e67f49152":["d0d1f90e969803cc84174589b5e4a39b7935fecd","6e5adcbe5a27941451fdb6194bcbff96c8630e14"],"879f5e74b68e6faa45251db337bb1e1a9e9be647":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98":["2f948dd442d23baa6cbb28daf77c8db78b351329"],"d0d1f90e969803cc84174589b5e4a39b7935fecd":[],"c7492bcb52be51e55d596134b95b2e53cc4ffb91":["ede45a461a2dcb573505ed9b6a5182dfebd3688f","db4fdbf3d262768eabc027cd8321edca0cd11fa8","d4d69c535930b5cce125cff868d40f6373dc27d4"],"fbaae1c00d39df2c872bbe043af26d02d3818313":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6e5adcbe5a27941451fdb6194bcbff96c8630e14":["db4fdbf3d262768eabc027cd8321edca0cd11fa8","879f5e74b68e6faa45251db337bb1e1a9e9be647","d0d1f90e969803cc84174589b5e4a39b7935fecd","c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["dd5dd283c3d9f22e186699bf823c9d1e67f49152"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a45bec74b98f6fc05f52770cfb425739e6563960","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf":["dc97c61094c5498702b29cc2e8309beac50c23dc","615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98"],"2f948dd442d23baa6cbb28daf77c8db78b351329":["fbaae1c00d39df2c872bbe043af26d02d3818313"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["db4fdbf3d262768eabc027cd8321edca0cd11fa8","d0d1f90e969803cc84174589b5e4a39b7935fecd","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}