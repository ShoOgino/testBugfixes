{"path":"lucene/src/java/org/apache/lucene/util/fst/PairOutputs#valid(Pair[A,B]).mjava","commits":[{"id":"b3be20ca1091c0b7cdb2308b9023606a5e451cec","date":1327877325,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/PairOutputs#valid(Pair[A,B]).mjava","pathOld":"/dev/null","sourceNew":"  // for assert\n  private boolean valid(Pair<A,B> pair) {\n    final boolean noOutput1 = pair.output1.equals(outputs1.getNoOutput());\n    final boolean noOutput2 = pair.output2.equals(outputs2.getNoOutput());\n\n    if (noOutput1 && pair.output1 != outputs1.getNoOutput()) {\n      System.out.println(\"invalid0\");\n      return false;\n    }\n\n    if (noOutput2 && pair.output2 != outputs2.getNoOutput()) {\n      System.out.println(\"invalid1\");\n      return false;\n    }\n\n    if (noOutput1 && noOutput2) {\n      if (pair != NO_OUTPUT) {\n        System.out.println(\"invalid2\");\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      return true;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817882884229bace7dc5d1b75f6b0e4aa1e47122","date":1327879145,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/PairOutputs#valid(Pair[A,B]).mjava","pathOld":"/dev/null","sourceNew":"  // for assert\n  private boolean valid(Pair<A,B> pair) {\n    final boolean noOutput1 = pair.output1.equals(outputs1.getNoOutput());\n    final boolean noOutput2 = pair.output2.equals(outputs2.getNoOutput());\n\n    if (noOutput1 && pair.output1 != outputs1.getNoOutput()) {\n      System.out.println(\"invalid0\");\n      return false;\n    }\n\n    if (noOutput2 && pair.output2 != outputs2.getNoOutput()) {\n      System.out.println(\"invalid1\");\n      return false;\n    }\n\n    if (noOutput1 && noOutput2) {\n      if (pair != NO_OUTPUT) {\n        System.out.println(\"invalid2\");\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      return true;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b6fdfce35d0adb18836cf8711abe487a934df33","date":1327946200,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/PairOutputs#valid(Pair[A,B]).mjava","pathOld":"/dev/null","sourceNew":"  // for assert\n  private boolean valid(Pair<A,B> pair) {\n    final boolean noOutput1 = pair.output1.equals(outputs1.getNoOutput());\n    final boolean noOutput2 = pair.output2.equals(outputs2.getNoOutput());\n\n    if (noOutput1 && pair.output1 != outputs1.getNoOutput()) {\n      System.out.println(\"invalid0\");\n      return false;\n    }\n\n    if (noOutput2 && pair.output2 != outputs2.getNoOutput()) {\n      System.out.println(\"invalid1\");\n      return false;\n    }\n\n    if (noOutput1 && noOutput2) {\n      if (pair != NO_OUTPUT) {\n        System.out.println(\"invalid2\");\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      return true;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/PairOutputs#valid(Pair[A,B]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/fst/PairOutputs#valid(Pair[A,B]).mjava","sourceNew":"  // for assert\n  private boolean valid(Pair<A,B> pair) {\n    final boolean noOutput1 = pair.output1.equals(outputs1.getNoOutput());\n    final boolean noOutput2 = pair.output2.equals(outputs2.getNoOutput());\n\n    if (noOutput1 && pair.output1 != outputs1.getNoOutput()) {\n      System.out.println(\"invalid0\");\n      return false;\n    }\n\n    if (noOutput2 && pair.output2 != outputs2.getNoOutput()) {\n      System.out.println(\"invalid1\");\n      return false;\n    }\n\n    if (noOutput1 && noOutput2) {\n      if (pair != NO_OUTPUT) {\n        System.out.println(\"invalid2\");\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      return true;\n    }\n  }\n\n","sourceOld":"  // for assert\n  private boolean valid(Pair<A,B> pair) {\n    final boolean noOutput1 = pair.output1.equals(outputs1.getNoOutput());\n    final boolean noOutput2 = pair.output2.equals(outputs2.getNoOutput());\n\n    if (noOutput1 && pair.output1 != outputs1.getNoOutput()) {\n      System.out.println(\"invalid0\");\n      return false;\n    }\n\n    if (noOutput2 && pair.output2 != outputs2.getNoOutput()) {\n      System.out.println(\"invalid1\");\n      return false;\n    }\n\n    if (noOutput1 && noOutput2) {\n      if (pair != NO_OUTPUT) {\n        System.out.println(\"invalid2\");\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      return true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b3be20ca1091c0b7cdb2308b9023606a5e451cec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b3be20ca1091c0b7cdb2308b9023606a5e451cec"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["b3be20ca1091c0b7cdb2308b9023606a5e451cec"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5b6fdfce35d0adb18836cf8711abe487a934df33":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b3be20ca1091c0b7cdb2308b9023606a5e451cec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"b3be20ca1091c0b7cdb2308b9023606a5e451cec":["817882884229bace7dc5d1b75f6b0e4aa1e47122","3a119bbc8703c10faa329ec201c654b3a35a1e3e","5b6fdfce35d0adb18836cf8711abe487a934df33"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b3be20ca1091c0b7cdb2308b9023606a5e451cec","817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33"],"5b6fdfce35d0adb18836cf8711abe487a934df33":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}