{"path":"src/test/org/apache/lucene/search/CheckHits#checkHitsQuery(Query,ScoreDoc[],ScoreDoc[],int[]).mjava","commits":[{"id":"5af07783dbc171e26a694c4f7d735e30c2769faa","date":1211569075,"type":1,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/CheckHits#checkHitsQuery(Query,ScoreDoc[],ScoreDoc[],int[]).mjava","pathOld":"src/test/org/apache/lucene/search/CheckHits#checkHitsQuery(Query,Hits,Hits,int[]).mjava","sourceNew":"  /** Tests that two queries have an expected order of documents,\n   * and that the two queries have the same score values.\n   */\n  public static void checkHitsQuery(\n        Query query,\n        ScoreDoc[] hits1,\n        ScoreDoc[] hits2,\n        int[] results)\n          throws IOException {\n\n    checkDocIds(\"hits1\", results, hits1);\n    checkDocIds(\"hits2\", results, hits2);\n    checkEqual(query, hits1, hits2);\n  }\n\n","sourceOld":"  /** Tests that two queries have an expected order of documents,\n   * and that the two queries have the same score values.\n   */\n  public static void checkHitsQuery(\n        Query query,\n        Hits hits1,\n        Hits hits2,\n        int[] results)\n          throws IOException {\n\n    checkDocIds(\"hits1\", results, hits1);\n    checkDocIds(\"hits2\", results, hits2);\n    checkEqual(query, hits1, hits2);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/CheckHits#checkHitsQuery(Query,ScoreDoc[],ScoreDoc[],int[]).mjava","pathOld":"src/test/org/apache/lucene/search/CheckHits#checkHitsQuery(Query,ScoreDoc[],ScoreDoc[],int[]).mjava","sourceNew":"  /** Tests that two queries have an expected order of documents,\n   * and that the two queries have the same score values.\n   */\n  public static void checkHitsQuery(\n        Query query,\n        ScoreDoc[] hits1,\n        ScoreDoc[] hits2,\n        int[] results)\n          throws IOException {\n\n    checkDocIds(\"hits1\", results, hits1);\n    checkDocIds(\"hits2\", results, hits2);\n    checkEqual(query, hits1, hits2);\n  }\n\n","sourceOld":"  /** Tests that two queries have an expected order of documents,\n   * and that the two queries have the same score values.\n   */\n  public static void checkHitsQuery(\n        Query query,\n        ScoreDoc[] hits1,\n        ScoreDoc[] hits2,\n        int[] results)\n          throws IOException {\n\n    checkDocIds(\"hits1\", results, hits1);\n    checkDocIds(\"hits2\", results, hits2);\n    checkEqual(query, hits1, hits2);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5af07783dbc171e26a694c4f7d735e30c2769faa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["5af07783dbc171e26a694c4f7d735e30c2769faa"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5af07783dbc171e26a694c4f7d735e30c2769faa"],"5af07783dbc171e26a694c4f7d735e30c2769faa":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}