{"path":"solr/core/src/java/org/apache/solr/cloud/rule/ReplicaAssigner#permute(int,int[],BitSet,AtomicReference[int[]],int,AtomicInteger).mjava","commits":[{"id":"8c7a6584aa35e033d783e02c6f4eefa6ad21c7fe","date":1430750405,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/rule/ReplicaAssigner#permute(int,int[],BitSet,AtomicReference[int[]],int,AtomicInteger).mjava","pathOld":"/dev/null","sourceNew":"  private static void permute(int level, int[] permuted, BitSet used, AtomicReference<int[]> nthval,\n                              int requestedIdx, AtomicInteger seenSoFar) {\n    if (level == permuted.length) {\n      if (seenSoFar.get() == requestedIdx) nthval.set(permuted);\n      else seenSoFar.incrementAndGet();\n    } else {\n      for (int i = 0; i < permuted.length; i++) {\n        if (!used.get(i)) {\n          used.set(i);\n          permuted[level] = i;\n          permute(level + 1, permuted, used, nthval, requestedIdx, seenSoFar);\n          if (nthval.get() != null) break;\n          used.set(i, false);\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8c7a6584aa35e033d783e02c6f4eefa6ad21c7fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8c7a6584aa35e033d783e02c6f4eefa6ad21c7fe"]},"commit2Childs":{"8c7a6584aa35e033d783e02c6f4eefa6ad21c7fe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8c7a6584aa35e033d783e02c6f4eefa6ad21c7fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}