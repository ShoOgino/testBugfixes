{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/simple/SimpleQueryParser#parse(String).mjava","commits":[{"id":"fdc91c6aee685b616507b9e44fcc69315b8a9e6c","date":1384275771,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/simple/SimpleQueryParser#parse(String).mjava","pathOld":"/dev/null","sourceNew":"  /** Parses the query text and returns parsed query (or null if empty) */\n  public Query parse(String queryText) {\n    char data[] = queryText.toCharArray();\n    char buffer[] = new char[data.length];\n\n    State state = new State(data, buffer, 0, data.length);\n    parseSubQuery(state);\n    return state.top;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["e38eac1e7b9807c89c1768a6d55a6f2e2361ef2b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e38eac1e7b9807c89c1768a6d55a6f2e2361ef2b","date":1424983813,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/simple/SimpleQueryParser#parse(String).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/simple/SimpleQueryParser#parse(String).mjava","sourceNew":"  /** Parses the query text and returns parsed query */\n  public Query parse(String queryText) {\n    char data[] = queryText.toCharArray();\n    char buffer[] = new char[data.length];\n\n    State state = new State(data, buffer, 0, data.length);\n    parseSubQuery(state);\n    if (state.top == null) {\n      return new BooleanQuery();\n    } else {\n      return state.top;\n    }\n  }\n\n","sourceOld":"  /** Parses the query text and returns parsed query (or null if empty) */\n  public Query parse(String queryText) {\n    char data[] = queryText.toCharArray();\n    char buffer[] = new char[data.length];\n\n    State state = new State(data, buffer, 0, data.length);\n    parseSubQuery(state);\n    return state.top;\n  }\n\n","bugFix":["fdc91c6aee685b616507b9e44fcc69315b8a9e6c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2db39cfba90037b809aabf6d1a990d904722175","date":1425461028,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/simple/SimpleQueryParser#parse(String).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/simple/SimpleQueryParser#parse(String).mjava","sourceNew":"  /** Parses the query text and returns parsed query */\n  public Query parse(String queryText) {\n    char data[] = queryText.toCharArray();\n    char buffer[] = new char[data.length];\n\n    State state = new State(data, buffer, 0, data.length);\n    parseSubQuery(state);\n    if (state.top == null) {\n      return new MatchNoDocsQuery();\n    } else {\n      return state.top;\n    }\n  }\n\n","sourceOld":"  /** Parses the query text and returns parsed query */\n  public Query parse(String queryText) {\n    char data[] = queryText.toCharArray();\n    char buffer[] = new char[data.length];\n\n    State state = new State(data, buffer, 0, data.length);\n    parseSubQuery(state);\n    if (state.top == null) {\n      return new BooleanQuery();\n    } else {\n      return state.top;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/simple/SimpleQueryParser#parse(String).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/simple/SimpleQueryParser#parse(String).mjava","sourceNew":"  /** Parses the query text and returns parsed query */\n  public Query parse(String queryText) {\n    char data[] = queryText.toCharArray();\n    char buffer[] = new char[data.length];\n\n    State state = new State(data, buffer, 0, data.length);\n    parseSubQuery(state);\n    if (state.top == null) {\n      return new MatchNoDocsQuery();\n    } else {\n      return state.top;\n    }\n  }\n\n","sourceOld":"  /** Parses the query text and returns parsed query (or null if empty) */\n  public Query parse(String queryText) {\n    char data[] = queryText.toCharArray();\n    char buffer[] = new char[data.length];\n\n    State state = new State(data, buffer, 0, data.length);\n    parseSubQuery(state);\n    return state.top;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4778b794a897685e2f6c62caa1ac04983d1e69f","date":1467997674,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/simple/SimpleQueryParser#parse(String).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/simple/SimpleQueryParser#parse(String).mjava","sourceNew":"  /** Parses the query text and returns parsed query */\n  public Query parse(String queryText) {\n    char data[] = queryText.toCharArray();\n    char buffer[] = new char[data.length];\n\n    State state = new State(data, buffer, 0, data.length);\n    parseSubQuery(state);\n    if (state.top == null) {\n      return new MatchNoDocsQuery(\"empty string passed to query parser\");\n    } else {\n      return state.top;\n    }\n  }\n\n","sourceOld":"  /** Parses the query text and returns parsed query */\n  public Query parse(String queryText) {\n    char data[] = queryText.toCharArray();\n    char buffer[] = new char[data.length];\n\n    State state = new State(data, buffer, 0, data.length);\n    parseSubQuery(state);\n    if (state.top == null) {\n      return new MatchNoDocsQuery();\n    } else {\n      return state.top;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bddb92033ad536f03343a58fe3bc7cbc22e96f96","date":1476293422,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/simple/SimpleQueryParser#parse(String).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/simple/SimpleQueryParser#parse(String).mjava","sourceNew":"  /** Parses the query text and returns parsed query */\n  public Query parse(String queryText) {\n    if (\"*\".equals(queryText.trim())) {\n      return new MatchAllDocsQuery();\n    }\n\n    char data[] = queryText.toCharArray();\n    char buffer[] = new char[data.length];\n\n    State state = new State(data, buffer, 0, data.length);\n    parseSubQuery(state);\n    if (state.top == null) {\n      return new MatchNoDocsQuery(\"empty string passed to query parser\");\n    } else {\n      return state.top;\n    }\n  }\n\n","sourceOld":"  /** Parses the query text and returns parsed query */\n  public Query parse(String queryText) {\n    char data[] = queryText.toCharArray();\n    char buffer[] = new char[data.length];\n\n    State state = new State(data, buffer, 0, data.length);\n    parseSubQuery(state);\n    if (state.top == null) {\n      return new MatchNoDocsQuery(\"empty string passed to query parser\");\n    } else {\n      return state.top;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/simple/SimpleQueryParser#parse(String).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/simple/SimpleQueryParser#parse(String).mjava","sourceNew":"  /** Parses the query text and returns parsed query */\n  public Query parse(String queryText) {\n    if (\"*\".equals(queryText.trim())) {\n      return new MatchAllDocsQuery();\n    }\n\n    char data[] = queryText.toCharArray();\n    char buffer[] = new char[data.length];\n\n    State state = new State(data, buffer, 0, data.length);\n    parseSubQuery(state);\n    if (state.top == null) {\n      return new MatchNoDocsQuery(\"empty string passed to query parser\");\n    } else {\n      return state.top;\n    }\n  }\n\n","sourceOld":"  /** Parses the query text and returns parsed query */\n  public Query parse(String queryText) {\n    char data[] = queryText.toCharArray();\n    char buffer[] = new char[data.length];\n\n    State state = new State(data, buffer, 0, data.length);\n    parseSubQuery(state);\n    if (state.top == null) {\n      return new MatchNoDocsQuery();\n    } else {\n      return state.top;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f2db39cfba90037b809aabf6d1a990d904722175":["e38eac1e7b9807c89c1768a6d55a6f2e2361ef2b"],"bddb92033ad536f03343a58fe3bc7cbc22e96f96":["f4778b794a897685e2f6c62caa1ac04983d1e69f"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["fdc91c6aee685b616507b9e44fcc69315b8a9e6c","f2db39cfba90037b809aabf6d1a990d904722175"],"e38eac1e7b9807c89c1768a6d55a6f2e2361ef2b":["fdc91c6aee685b616507b9e44fcc69315b8a9e6c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f4778b794a897685e2f6c62caa1ac04983d1e69f":["f2db39cfba90037b809aabf6d1a990d904722175"],"fdc91c6aee685b616507b9e44fcc69315b8a9e6c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["f2db39cfba90037b809aabf6d1a990d904722175","bddb92033ad536f03343a58fe3bc7cbc22e96f96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bddb92033ad536f03343a58fe3bc7cbc22e96f96"]},"commit2Childs":{"f2db39cfba90037b809aabf6d1a990d904722175":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","f4778b794a897685e2f6c62caa1ac04983d1e69f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"bddb92033ad536f03343a58fe3bc7cbc22e96f96":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"e38eac1e7b9807c89c1768a6d55a6f2e2361ef2b":["f2db39cfba90037b809aabf6d1a990d904722175"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fdc91c6aee685b616507b9e44fcc69315b8a9e6c"],"f4778b794a897685e2f6c62caa1ac04983d1e69f":["bddb92033ad536f03343a58fe3bc7cbc22e96f96"],"fdc91c6aee685b616507b9e44fcc69315b8a9e6c":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","e38eac1e7b9807c89c1768a6d55a6f2e2361ef2b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}