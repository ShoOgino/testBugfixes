{"path":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersContentSource#getNextDocData(DocData).mjava","commits":[{"id":"ecc11368dc265bfdad90214f8bf5da99016ab1e2","date":1294144090,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersContentSource#getNextDocData(DocData).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersContentSource#getNextDocData(DocData).mjava","sourceNew":"  @Override\n  public DocData getNextDocData(DocData docData) throws NoMoreDataException, IOException {\n    File f = null;\n    String name = null;\n    synchronized (this) {\n      if (nextFile >= inputFiles.size()) {\n        // exhausted files, start a new round, unless forever set to false.\n        if (!forever) {\n          throw new NoMoreDataException();\n        }\n        nextFile = 0;\n        iteration++;\n      }\n      f = inputFiles.get(nextFile++);\n      name = f.getCanonicalPath() + \"_\" + iteration;\n    }\n\n    BufferedReader reader = new BufferedReader(new FileReader(f));\n    try {\n      // First line is the date, 3rd is the title, rest is body\n      String dateStr = reader.readLine();\n      reader.readLine();// skip an empty line\n      String title = reader.readLine();\n      reader.readLine();// skip an empty line\n      StringBuilder bodyBuf = new StringBuilder(1024);\n      String line = null;\n      while ((line = reader.readLine()) != null) {\n        bodyBuf.append(line).append(' ');\n      }\n      reader.close();\n      \n      addBytes(f.length());\n      \n      Date date = parseDate(dateStr.trim());\n      \n      docData.clear();\n      docData.setName(name);\n      docData.setBody(bodyBuf.toString());\n      docData.setTitle(title);\n      docData.setDate(date);\n      return docData;\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  @Override\n  public DocData getNextDocData(DocData docData) throws NoMoreDataException, IOException {\n    File f = null;\n    String name = null;\n    synchronized (this) {\n      if (nextFile >= inputFiles.size()) {\n        // exhausted files, start a new round, unless forever set to false.\n        if (!forever) {\n          throw new NoMoreDataException();\n        }\n        nextFile = 0;\n        iteration++;\n      }\n      f = inputFiles.get(nextFile++);\n      name = f.getCanonicalPath() + \"_\" + iteration;\n    }\n\n    BufferedReader reader = new BufferedReader(new FileReader(f));\n    try {\n      // First line is the date, 3rd is the title, rest is body\n      String dateStr = reader.readLine();\n      reader.readLine();// skip an empty line\n      String title = reader.readLine();\n      reader.readLine();// skip an empty line\n      StringBuilder bodyBuf = new StringBuilder(1024);\n      String line = null;\n      while ((line = reader.readLine()) != null) {\n        bodyBuf.append(line).append(' ');\n      }\n      reader.close();\n      \n      addBytes(f.length());\n      \n      Date date = parseDate(dateStr.trim());\n      \n      docData.clear();\n      docData.setName(name);\n      docData.setBody(bodyBuf.toString());\n      docData.setTitle(title);\n      docData.setDate(date);\n      return docData;\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersContentSource#getNextDocData(DocData).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocData getNextDocData(DocData docData) throws NoMoreDataException, IOException {\n    File f = null;\n    String name = null;\n    synchronized (this) {\n      if (nextFile >= inputFiles.size()) {\n        // exhausted files, start a new round, unless forever set to false.\n        if (!forever) {\n          throw new NoMoreDataException();\n        }\n        nextFile = 0;\n        iteration++;\n      }\n      f = inputFiles.get(nextFile++);\n      name = f.getCanonicalPath() + \"_\" + iteration;\n    }\n\n    BufferedReader reader = new BufferedReader(new FileReader(f));\n    try {\n      // First line is the date, 3rd is the title, rest is body\n      String dateStr = reader.readLine();\n      reader.readLine();// skip an empty line\n      String title = reader.readLine();\n      reader.readLine();// skip an empty line\n      StringBuilder bodyBuf = new StringBuilder(1024);\n      String line = null;\n      while ((line = reader.readLine()) != null) {\n        bodyBuf.append(line).append(' ');\n      }\n      reader.close();\n      \n      addBytes(f.length());\n      \n      Date date = parseDate(dateStr.trim());\n      \n      docData.clear();\n      docData.setName(name);\n      docData.setBody(bodyBuf.toString());\n      docData.setTitle(title);\n      docData.setDate(date);\n      return docData;\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersContentSource#getNextDocData(DocData).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersContentSource#getNextDocData(DocData).mjava","sourceNew":"  @Override\n  public DocData getNextDocData(DocData docData) throws NoMoreDataException, IOException {\n    File f = null;\n    String name = null;\n    synchronized (this) {\n      if (nextFile >= inputFiles.size()) {\n        // exhausted files, start a new round, unless forever set to false.\n        if (!forever) {\n          throw new NoMoreDataException();\n        }\n        nextFile = 0;\n        iteration++;\n      }\n      f = inputFiles.get(nextFile++);\n      name = f.getCanonicalPath() + \"_\" + iteration;\n    }\n\n    BufferedReader reader = new BufferedReader(new FileReader(f));\n    try {\n      // First line is the date, 3rd is the title, rest is body\n      String dateStr = reader.readLine();\n      reader.readLine();// skip an empty line\n      String title = reader.readLine();\n      reader.readLine();// skip an empty line\n      StringBuilder bodyBuf = new StringBuilder(1024);\n      String line = null;\n      while ((line = reader.readLine()) != null) {\n        bodyBuf.append(line).append(' ');\n      }\n      reader.close();\n      \n      addBytes(f.length());\n      \n      Date date = parseDate(dateStr.trim());\n      \n      docData.clear();\n      docData.setName(name);\n      docData.setBody(bodyBuf.toString());\n      docData.setTitle(title);\n      docData.setDate(date);\n      return docData;\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  @Override\n  public DocData getNextDocData(DocData docData) throws NoMoreDataException, IOException {\n    File f = null;\n    String name = null;\n    synchronized (this) {\n      if (nextFile >= inputFiles.size()) {\n        // exhausted files, start a new round, unless forever set to false.\n        if (!forever) {\n          throw new NoMoreDataException();\n        }\n        nextFile = 0;\n        iteration++;\n      }\n      f = inputFiles.get(nextFile++);\n      name = f.getCanonicalPath() + \"_\" + iteration;\n    }\n\n    BufferedReader reader = new BufferedReader(new FileReader(f));\n    try {\n      // First line is the date, 3rd is the title, rest is body\n      String dateStr = reader.readLine();\n      reader.readLine();// skip an empty line\n      String title = reader.readLine();\n      reader.readLine();// skip an empty line\n      StringBuilder bodyBuf = new StringBuilder(1024);\n      String line = null;\n      while ((line = reader.readLine()) != null) {\n        bodyBuf.append(line).append(' ');\n      }\n      reader.close();\n      \n      addBytes(f.length());\n      \n      Date date = parseDate(dateStr.trim());\n      \n      docData.clear();\n      docData.setName(name);\n      docData.setBody(bodyBuf.toString());\n      docData.setTitle(title);\n      docData.setDate(date);\n      return docData;\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersContentSource#getNextDocData(DocData).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersContentSource#getNextDocData(DocData).mjava","sourceNew":"  @Override\n  public DocData getNextDocData(DocData docData) throws NoMoreDataException, IOException {\n    File f = null;\n    String name = null;\n    synchronized (this) {\n      if (nextFile >= inputFiles.size()) {\n        // exhausted files, start a new round, unless forever set to false.\n        if (!forever) {\n          throw new NoMoreDataException();\n        }\n        nextFile = 0;\n        iteration++;\n      }\n      f = inputFiles.get(nextFile++);\n      name = f.getCanonicalPath() + \"_\" + iteration;\n    }\n\n    BufferedReader reader = new BufferedReader(new FileReader(f));\n    try {\n      // First line is the date, 3rd is the title, rest is body\n      String dateStr = reader.readLine();\n      reader.readLine();// skip an empty line\n      String title = reader.readLine();\n      reader.readLine();// skip an empty line\n      StringBuilder bodyBuf = new StringBuilder(1024);\n      String line = null;\n      while ((line = reader.readLine()) != null) {\n        bodyBuf.append(line).append(' ');\n      }\n      reader.close();\n      \n      addBytes(f.length());\n      \n      Date date = parseDate(dateStr.trim());\n      \n      docData.clear();\n      docData.setName(name);\n      docData.setBody(bodyBuf.toString());\n      docData.setTitle(title);\n      docData.setDate(date);\n      return docData;\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  @Override\n  public DocData getNextDocData(DocData docData) throws NoMoreDataException, IOException {\n    File f = null;\n    String name = null;\n    synchronized (this) {\n      if (nextFile >= inputFiles.size()) {\n        // exhausted files, start a new round, unless forever set to false.\n        if (!forever) {\n          throw new NoMoreDataException();\n        }\n        nextFile = 0;\n        iteration++;\n      }\n      f = inputFiles.get(nextFile++);\n      name = f.getCanonicalPath() + \"_\" + iteration;\n    }\n\n    BufferedReader reader = new BufferedReader(new FileReader(f));\n    try {\n      // First line is the date, 3rd is the title, rest is body\n      String dateStr = reader.readLine();\n      reader.readLine();// skip an empty line\n      String title = reader.readLine();\n      reader.readLine();// skip an empty line\n      StringBuilder bodyBuf = new StringBuilder(1024);\n      String line = null;\n      while ((line = reader.readLine()) != null) {\n        bodyBuf.append(line).append(' ');\n      }\n      reader.close();\n      \n      addBytes(f.length());\n      \n      Date date = parseDate(dateStr.trim());\n      \n      docData.clear();\n      docData.setName(name);\n      docData.setBody(bodyBuf.toString());\n      docData.setTitle(title);\n      docData.setDate(date);\n      return docData;\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["70ad682703b8585f5d0a637efec044d57ec05efb","b89678825b68eccaf09e6ab71675fc0b0af1e099","868da859b43505d9d2a023bfeae6dd0c795f5295"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70ad682703b8585f5d0a637efec044d57ec05efb","ecc11368dc265bfdad90214f8bf5da99016ab1e2","868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}