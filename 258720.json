{"path":"lucene/test-framework/src/java/org/apache/lucene/search/RandomSimilarityProvider#get(String).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/RandomSimilarityProvider#get(String).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/search/RandomSimilarityProvider#get(String).mjava","sourceNew":"  @Override\n  public synchronized Similarity get(String field) {\n    assert field != null;\n    Similarity sim = previousMappings.get(field);\n    if (sim == null) {\n      sim = knownSims.get(Math.abs(perFieldSeed ^ field.hashCode()) % knownSims.size());\n      previousMappings.put(field, sim);\n    }\n    return sim;\n  }\n\n","sourceOld":"  @Override\n  public synchronized Similarity get(String field) {\n    assert field != null;\n    Similarity sim = previousMappings.get(field);\n    if (sim == null) {\n      sim = knownSims.get(Math.abs(perFieldSeed ^ field.hashCode()) % knownSims.size());\n      previousMappings.put(field, sim);\n    }\n    return sim;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d3f85658516710bec3fc901acbbc1db0f3b5e8c","date":1386625239,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/RandomSimilarityProvider#get(String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/RandomSimilarityProvider#get(String).mjava","sourceNew":"  @Override\n  public synchronized Similarity get(String field) {\n    assert field != null;\n    Similarity sim = previousMappings.get(field);\n    if (sim == null) {\n      sim = knownSims.get(Math.max(0, Math.abs(perFieldSeed ^ field.hashCode())) % knownSims.size());\n      previousMappings.put(field, sim);\n    }\n    return sim;\n  }\n\n","sourceOld":"  @Override\n  public synchronized Similarity get(String field) {\n    assert field != null;\n    Similarity sim = previousMappings.get(field);\n    if (sim == null) {\n      sim = knownSims.get(Math.abs(perFieldSeed ^ field.hashCode()) % knownSims.size());\n      previousMappings.put(field, sim);\n    }\n    return sim;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/RandomSimilarityProvider#get(String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/RandomSimilarityProvider#get(String).mjava","sourceNew":"  @Override\n  public synchronized Similarity get(String field) {\n    assert field != null;\n    Similarity sim = previousMappings.get(field);\n    if (sim == null) {\n      sim = knownSims.get(Math.max(0, Math.abs(perFieldSeed ^ field.hashCode())) % knownSims.size());\n      previousMappings.put(field, sim);\n    }\n    return sim;\n  }\n\n","sourceOld":"  @Override\n  public synchronized Similarity get(String field) {\n    assert field != null;\n    Similarity sim = previousMappings.get(field);\n    if (sim == null) {\n      sim = knownSims.get(Math.abs(perFieldSeed ^ field.hashCode()) % knownSims.size());\n      previousMappings.put(field, sim);\n    }\n    return sim;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a836deab3a09546740b8ee2f1f776e83062f39e7","date":1453109062,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/similarities/RandomSimilarity#get(String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/RandomSimilarityProvider#get(String).mjava","sourceNew":"  @Override\n  public synchronized Similarity get(String field) {\n    assert field != null;\n    Similarity sim = previousMappings.get(field);\n    if (sim == null) {\n      sim = knownSims.get(Math.max(0, Math.abs(perFieldSeed ^ field.hashCode())) % knownSims.size());\n      previousMappings.put(field, sim);\n    }\n    return sim;\n  }\n\n","sourceOld":"  @Override\n  public synchronized Similarity get(String field) {\n    assert field != null;\n    Similarity sim = previousMappings.get(field);\n    if (sim == null) {\n      sim = knownSims.get(Math.max(0, Math.abs(perFieldSeed ^ field.hashCode())) % knownSims.size());\n      previousMappings.put(field, sim);\n    }\n    return sim;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a836deab3a09546740b8ee2f1f776e83062f39e7":["2d3f85658516710bec3fc901acbbc1db0f3b5e8c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","2d3f85658516710bec3fc901acbbc1db0f3b5e8c"],"2d3f85658516710bec3fc901acbbc1db0f3b5e8c":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a836deab3a09546740b8ee2f1f776e83062f39e7"]},"commit2Childs":{"a836deab3a09546740b8ee2f1f776e83062f39e7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","2d3f85658516710bec3fc901acbbc1db0f3b5e8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"2d3f85658516710bec3fc901acbbc1db0f3b5e8c":["a836deab3a09546740b8ee2f1f776e83062f39e7","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}