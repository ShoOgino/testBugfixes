{"path":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#collectionCmd(ZkNodeProps,ModifiableSolrParams,NamedList,Replica.State,String,Map[String,String]).mjava","commits":[{"id":"3bbb741690cdafda7f1f7549c26351c912917a69","date":1453203134,"type":1,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#collectionCmd(ZkNodeProps,ModifiableSolrParams,NamedList,Replica.State,String,Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#collectionCmd(ClusterState,ZkNodeProps,ModifiableSolrParams,NamedList,Replica.State).mjava","sourceNew":"  private void collectionCmd(ZkNodeProps message, ModifiableSolrParams params,\n                             NamedList results, Replica.State stateMatcher, String asyncId, Map<String, String> requestMap) {\n    log.info(\"Executing Collection Cmd : \" + params);\n    String collectionName = message.getStr(NAME);\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n\n    ClusterState clusterState = zkStateReader.getClusterState();\n    DocCollection coll = clusterState.getCollection(collectionName);\n    \n    for (Slice slice : coll.getSlices()) {\n      sliceCmd(clusterState, params, stateMatcher, slice, shardHandler, asyncId, requestMap);\n    }\n\n    processResponses(results, shardHandler, false, null, asyncId, requestMap);\n\n  }\n\n","sourceOld":"  private void collectionCmd(ClusterState clusterState, ZkNodeProps message, ModifiableSolrParams params, NamedList results, Replica.State stateMatcher) {\n    log.info(\"Executing Collection Cmd : \" + params);\n    String collectionName = message.getStr(NAME);\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    \n    DocCollection coll = clusterState.getCollection(collectionName);\n    \n    for (Map.Entry<String,Slice> entry : coll.getSlicesMap().entrySet()) {\n      Slice slice = entry.getValue();\n      sliceCmd(clusterState, params, stateMatcher, slice, shardHandler);\n    }\n\n    processResponses(results, shardHandler);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9362075f92dff89425ca488b480f70d565d66e7","date":1454985541,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#collectionCmd(ZkNodeProps,ModifiableSolrParams,NamedList,Replica.State,String,Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#collectionCmd(ZkNodeProps,ModifiableSolrParams,NamedList,Replica.State,String,Map[String,String]).mjava","sourceNew":"  private void collectionCmd(ZkNodeProps message, ModifiableSolrParams params,\n                             NamedList results, Replica.State stateMatcher, String asyncId, Map<String, String> requestMap) {\n    collectionCmd( message, params, results, stateMatcher, asyncId, requestMap, Collections.emptySet());\n  }\n\n","sourceOld":"  private void collectionCmd(ZkNodeProps message, ModifiableSolrParams params,\n                             NamedList results, Replica.State stateMatcher, String asyncId, Map<String, String> requestMap) {\n    log.info(\"Executing Collection Cmd : \" + params);\n    String collectionName = message.getStr(NAME);\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n\n    ClusterState clusterState = zkStateReader.getClusterState();\n    DocCollection coll = clusterState.getCollection(collectionName);\n    \n    for (Slice slice : coll.getSlices()) {\n      sliceCmd(clusterState, params, stateMatcher, slice, shardHandler, asyncId, requestMap);\n    }\n\n    processResponses(results, shardHandler, false, null, asyncId, requestMap);\n\n  }\n\n","bugFix":null,"bugIntro":["06263309947a9804c326e35ce627be8768e123a4","06263309947a9804c326e35ce627be8768e123a4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6146c07c0dee1ae1e42926167acd127fed5ef59d","date":1516129420,"type":5,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler#collectionCmd(ZkNodeProps,ModifiableSolrParams,NamedList,Replica.State,String,Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#collectionCmd(ZkNodeProps,ModifiableSolrParams,NamedList,Replica.State,String,Map[String,String]).mjava","sourceNew":"  private void collectionCmd(ZkNodeProps message, ModifiableSolrParams params,\n                             NamedList results, Replica.State stateMatcher, String asyncId, Map<String, String> requestMap) {\n    collectionCmd( message, params, results, stateMatcher, asyncId, requestMap, Collections.emptySet());\n  }\n\n","sourceOld":"  private void collectionCmd(ZkNodeProps message, ModifiableSolrParams params,\n                             NamedList results, Replica.State stateMatcher, String asyncId, Map<String, String> requestMap) {\n    collectionCmd( message, params, results, stateMatcher, asyncId, requestMap, Collections.emptySet());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler#collectionCmd(ZkNodeProps,ModifiableSolrParams,NamedList,Replica.State,String,Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#collectionCmd(ZkNodeProps,ModifiableSolrParams,NamedList,Replica.State,String,Map[String,String]).mjava","sourceNew":"  private void collectionCmd(ZkNodeProps message, ModifiableSolrParams params,\n                             NamedList results, Replica.State stateMatcher, String asyncId, Map<String, String> requestMap) {\n    collectionCmd( message, params, results, stateMatcher, asyncId, requestMap, Collections.emptySet());\n  }\n\n","sourceOld":"  private void collectionCmd(ZkNodeProps message, ModifiableSolrParams params,\n                             NamedList results, Replica.State stateMatcher, String asyncId, Map<String, String> requestMap) {\n    collectionCmd( message, params, results, stateMatcher, asyncId, requestMap, Collections.emptySet());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["f9362075f92dff89425ca488b480f70d565d66e7","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"3bbb741690cdafda7f1f7549c26351c912917a69":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["f9362075f92dff89425ca488b480f70d565d66e7"],"f9362075f92dff89425ca488b480f70d565d66e7":["3bbb741690cdafda7f1f7549c26351c912917a69"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3bbb741690cdafda7f1f7549c26351c912917a69":["f9362075f92dff89425ca488b480f70d565d66e7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3bbb741690cdafda7f1f7549c26351c912917a69"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"f9362075f92dff89425ca488b480f70d565d66e7":["b94236357aaa22b76c10629851fe4e376e0cea82","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}