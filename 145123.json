{"path":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimSolrCloudTestCase#clusterShape(int,int).mjava","commits":[{"id":"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1","date":1513252583,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimSolrCloudTestCase#clusterShape(int,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Return a {@link CollectionStatePredicate} that returns true if a collection has the expected\n   * number of shards and replicas\n   */\n  public static CollectionStatePredicate clusterShape(int expectedShards, int expectedReplicas) {\n    return (liveNodes, collectionState) -> {\n      if (collectionState == null)\n        return false;\n      if (collectionState.getSlices().size() != expectedShards)\n        return false;\n      for (Slice slice : collectionState) {\n        int activeReplicas = 0;\n        for (Replica replica : slice) {\n          if (replica.isActive(liveNodes))\n            activeReplicas++;\n        }\n        if (activeReplicas != expectedReplicas)\n          return false;\n      }\n      return true;\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9c6c0dad4932399aec99b4818086cb1772773916","date":1520515900,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CloudTestUtils#clusterShape(int,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimSolrCloudTestCase#clusterShape(int,int).mjava","sourceNew":"  /**\n   * Return a {@link CollectionStatePredicate} that returns true if a collection has the expected\n   * number of shards and replicas\n   */\n  public static CollectionStatePredicate clusterShape(int expectedShards, int expectedReplicas) {\n    return (liveNodes, collectionState) -> {\n      if (collectionState == null)\n        return false;\n      if (collectionState.getSlices().size() != expectedShards)\n        return false;\n      for (Slice slice : collectionState) {\n        int activeReplicas = 0;\n        for (Replica replica : slice) {\n          if (replica.isActive(liveNodes))\n            activeReplicas++;\n        }\n        if (activeReplicas != expectedReplicas)\n          return false;\n      }\n      return true;\n    };\n  }\n\n","sourceOld":"  /**\n   * Return a {@link CollectionStatePredicate} that returns true if a collection has the expected\n   * number of shards and replicas\n   */\n  public static CollectionStatePredicate clusterShape(int expectedShards, int expectedReplicas) {\n    return (liveNodes, collectionState) -> {\n      if (collectionState == null)\n        return false;\n      if (collectionState.getSlices().size() != expectedShards)\n        return false;\n      for (Slice slice : collectionState) {\n        int activeReplicas = 0;\n        for (Replica replica : slice) {\n          if (replica.isActive(liveNodes))\n            activeReplicas++;\n        }\n        if (activeReplicas != expectedReplicas)\n          return false;\n      }\n      return true;\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9c6c0dad4932399aec99b4818086cb1772773916":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9c6c0dad4932399aec99b4818086cb1772773916"]},"commit2Childs":{"9c6c0dad4932399aec99b4818086cb1772773916":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["9c6c0dad4932399aec99b4818086cb1772773916"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}