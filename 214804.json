{"path":"src/java/org/apache/lucene/analysis/MappingCharFilter#match(NormalizeCharMap).mjava","commits":[{"id":"cd27af5c226d98a7c6378c388a67a3bff7c0b3a2","date":1245784531,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/MappingCharFilter#match(NormalizeCharMap).mjava","pathOld":"/dev/null","sourceNew":"  private NormalizeCharMap match(NormalizeCharMap map) throws IOException {\n    NormalizeCharMap result = null;\n    if (map.submap != null) {\n      int chr = nextChar();\n      if (chr != -1) {\n        NormalizeCharMap subMap = (NormalizeCharMap) map.submap.get(Character.valueOf((char) chr));\n        if (subMap != null) {\n          result = match(subMap);\n        }\n        if (result == null) {\n          pushChar(chr);\n        }\n      }\n    }\n    if (result == null && map.normStr != null) {\n      result = map;\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84851fda840d985baf8ca736613e357a623597e8","date":1246359019,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/MappingCharFilter#match(NormalizeCharMap).mjava","pathOld":"src/java/org/apache/lucene/analysis/MappingCharFilter#match(NormalizeCharMap).mjava","sourceNew":"  private NormalizeCharMap match(NormalizeCharMap map) throws IOException {\n    NormalizeCharMap result = null;\n    if (map.submap != null) {\n      int chr = nextChar();\n      if (chr != -1) {\n        NormalizeCharMap subMap = (NormalizeCharMap) map.submap.get(CharacterCache.valueOf((char) chr));\n        if (subMap != null) {\n          result = match(subMap);\n        }\n        if (result == null) {\n          pushChar(chr);\n        }\n      }\n    }\n    if (result == null && map.normStr != null) {\n      result = map;\n    }\n    return result;\n  }\n\n","sourceOld":"  private NormalizeCharMap match(NormalizeCharMap map) throws IOException {\n    NormalizeCharMap result = null;\n    if (map.submap != null) {\n      int chr = nextChar();\n      if (chr != -1) {\n        NormalizeCharMap subMap = (NormalizeCharMap) map.submap.get(Character.valueOf((char) chr));\n        if (subMap != null) {\n          result = match(subMap);\n        }\n        if (result == null) {\n          pushChar(chr);\n        }\n      }\n    }\n    if (result == null && map.normStr != null) {\n      result = map;\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64af8690a948c97feaa9e2844a0c7051034f153d","date":1255862276,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/MappingCharFilter#match(NormalizeCharMap).mjava","pathOld":"src/java/org/apache/lucene/analysis/MappingCharFilter#match(NormalizeCharMap).mjava","sourceNew":"  private NormalizeCharMap match(NormalizeCharMap map) throws IOException {\n    NormalizeCharMap result = null;\n    if (map.submap != null) {\n      int chr = nextChar();\n      if (chr != -1) {\n        NormalizeCharMap subMap = map.submap.get(Character.valueOf((char) chr));\n        if (subMap != null) {\n          result = match(subMap);\n        }\n        if (result == null) {\n          pushChar(chr);\n        }\n      }\n    }\n    if (result == null && map.normStr != null) {\n      result = map;\n    }\n    return result;\n  }\n\n","sourceOld":"  private NormalizeCharMap match(NormalizeCharMap map) throws IOException {\n    NormalizeCharMap result = null;\n    if (map.submap != null) {\n      int chr = nextChar();\n      if (chr != -1) {\n        NormalizeCharMap subMap = (NormalizeCharMap) map.submap.get(CharacterCache.valueOf((char) chr));\n        if (subMap != null) {\n          result = match(subMap);\n        }\n        if (result == null) {\n          pushChar(chr);\n        }\n      }\n    }\n    if (result == null && map.normStr != null) {\n      result = map;\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/analysis/MappingCharFilter#match(NormalizeCharMap).mjava","sourceNew":null,"sourceOld":"  private NormalizeCharMap match(NormalizeCharMap map) throws IOException {\n    NormalizeCharMap result = null;\n    if (map.submap != null) {\n      int chr = nextChar();\n      if (chr != -1) {\n        NormalizeCharMap subMap = map.submap.get(Character.valueOf((char) chr));\n        if (subMap != null) {\n          result = match(subMap);\n        }\n        if (result == null) {\n          pushChar(chr);\n        }\n      }\n    }\n    if (result == null && map.normStr != null) {\n      result = map;\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"84851fda840d985baf8ca736613e357a623597e8":["cd27af5c226d98a7c6378c388a67a3bff7c0b3a2"],"64af8690a948c97feaa9e2844a0c7051034f153d":["84851fda840d985baf8ca736613e357a623597e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["64af8690a948c97feaa9e2844a0c7051034f153d"],"cd27af5c226d98a7c6378c388a67a3bff7c0b3a2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"84851fda840d985baf8ca736613e357a623597e8":["64af8690a948c97feaa9e2844a0c7051034f153d"],"64af8690a948c97feaa9e2844a0c7051034f153d":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd27af5c226d98a7c6378c388a67a3bff7c0b3a2"],"cd27af5c226d98a7c6378c388a67a3bff7c0b3a2":["84851fda840d985baf8ca736613e357a623597e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}