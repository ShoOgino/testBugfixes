{"path":"lucene/core/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#testTermBooleanQuery().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#testTermBooleanQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#testTermBooleanQuery().mjava","sourceNew":"  public void testTermBooleanQuery() throws Exception {\n    BooleanQuery query = new BooleanQuery();\n    query.add(new TermQuery(new Term(FIELD, \"tangfulin\")),\n              BooleanClause.Occur.SHOULD);\n    query.add(new TermQuery(new Term(FIELD, \"notexistnames\")),\n              BooleanClause.Occur.SHOULD);\n    assertEquals(\"Number of matched documents\", 2,\n                 searcher.search(query, null, 1000).totalHits);\n\n  }\n\n","sourceOld":"  public void testTermBooleanQuery() throws Exception {\n    BooleanQuery query = new BooleanQuery();\n    query.add(new TermQuery(new Term(FIELD, \"tangfulin\")),\n              BooleanClause.Occur.SHOULD);\n    query.add(new TermQuery(new Term(FIELD, \"notexistnames\")),\n              BooleanClause.Occur.SHOULD);\n    assertEquals(\"Number of matched documents\", 2,\n                 searcher.search(query, null, 1000).totalHits);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc","date":1424799790,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#testTermBooleanQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#testTermBooleanQuery().mjava","sourceNew":"  public void testTermBooleanQuery() throws Exception {\n    BooleanQuery query = new BooleanQuery();\n    query.add(new TermQuery(new Term(FIELD, \"tangfulin\")),\n              BooleanClause.Occur.SHOULD);\n    query.add(new TermQuery(new Term(FIELD, \"notexistnames\")),\n              BooleanClause.Occur.SHOULD);\n    assertEquals(\"Number of matched documents\", 2,\n                 searcher.search(query, 1000).totalHits);\n\n  }\n\n","sourceOld":"  public void testTermBooleanQuery() throws Exception {\n    BooleanQuery query = new BooleanQuery();\n    query.add(new TermQuery(new Term(FIELD, \"tangfulin\")),\n              BooleanClause.Occur.SHOULD);\n    query.add(new TermQuery(new Term(FIELD, \"notexistnames\")),\n              BooleanClause.Occur.SHOULD);\n    assertEquals(\"Number of matched documents\", 2,\n                 searcher.search(query, null, 1000).totalHits);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#testTermBooleanQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#testTermBooleanQuery().mjava","sourceNew":"  public void testTermBooleanQuery() throws Exception {\n    BooleanQuery.Builder query = new BooleanQuery.Builder();\n    query.add(new TermQuery(new Term(FIELD, \"tangfulin\")),\n              BooleanClause.Occur.SHOULD);\n    query.add(new TermQuery(new Term(FIELD, \"notexistnames\")),\n              BooleanClause.Occur.SHOULD);\n    assertEquals(\"Number of matched documents\", 2,\n                 searcher.search(query.build(), 1000).totalHits);\n\n  }\n\n","sourceOld":"  public void testTermBooleanQuery() throws Exception {\n    BooleanQuery query = new BooleanQuery();\n    query.add(new TermQuery(new Term(FIELD, \"tangfulin\")),\n              BooleanClause.Occur.SHOULD);\n    query.add(new TermQuery(new Term(FIELD, \"notexistnames\")),\n              BooleanClause.Occur.SHOULD);\n    assertEquals(\"Number of matched documents\", 2,\n                 searcher.search(query, 1000).totalHits);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83788ad129a5154d5c6562c4e8ce3db48793aada","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#testTermBooleanQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#testTermBooleanQuery().mjava","sourceNew":"  public void testTermBooleanQuery() throws Exception {\n    BooleanQuery.Builder query = new BooleanQuery.Builder();\n    query.add(new TermQuery(new Term(FIELD, \"tangfulin\")),\n              BooleanClause.Occur.SHOULD);\n    query.add(new TermQuery(new Term(FIELD, \"notexistnames\")),\n              BooleanClause.Occur.SHOULD);\n    assertEquals(\"Number of matched documents\", 2,\n                 searcher.search(query.build(), 1000).totalHits.value);\n\n  }\n\n","sourceOld":"  public void testTermBooleanQuery() throws Exception {\n    BooleanQuery.Builder query = new BooleanQuery.Builder();\n    query.add(new TermQuery(new Term(FIELD, \"tangfulin\")),\n              BooleanClause.Occur.SHOULD);\n    query.add(new TermQuery(new Term(FIELD, \"notexistnames\")),\n              BooleanClause.Occur.SHOULD);\n    assertEquals(\"Number of matched documents\", 2,\n                 searcher.search(query.build(), 1000).totalHits);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"83788ad129a5154d5c6562c4e8ce3db48793aada":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["83788ad129a5154d5c6562c4e8ce3db48793aada"]},"commit2Childs":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}