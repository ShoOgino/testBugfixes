{"path":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoCompositeAreaShape#getRelationship(GeoShape).mjava","commits":[{"id":"0ca94ad4d6120f10fa13ce40a60a7fd1ede51705","date":1501767131,"type":0,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoCompositeAreaShape#getRelationship(GeoShape).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int getRelationship(GeoShape geoShape) {\n    final int insideGeoAreaShape = isShapeInsideGeoAreaShape(geoShape);\n    if (insideGeoAreaShape == SOME_INSIDE) {\n      return GeoArea.OVERLAPS;\n    }\n\n    final int insideShape = isGeoAreaShapeInsideShape(geoShape);\n    if (insideShape == SOME_INSIDE) {\n      return GeoArea.OVERLAPS;\n    }\n\n    if (insideGeoAreaShape == ALL_INSIDE && insideShape==ALL_INSIDE) {\n      return GeoArea.OVERLAPS;\n    }\n\n    if (intersects(geoShape)){\n      return  GeoArea.OVERLAPS;\n    }\n\n    if (insideGeoAreaShape == ALL_INSIDE) {\n      return GeoArea.WITHIN;\n    }\n\n    if (insideShape==ALL_INSIDE) {\n      return GeoArea.CONTAINS;\n    }\n\n    return GeoArea.DISJOINT;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3212aa8c471e908af7dc95808a8f77018d198dc2","date":1502103679,"type":5,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoBaseCompositeAreaShape#getRelationship(GeoShape).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoCompositeAreaShape#getRelationship(GeoShape).mjava","sourceNew":"  @Override\n  public int getRelationship(GeoShape geoShape) {\n    final int insideGeoAreaShape = isShapeInsideGeoAreaShape(geoShape);\n    if (insideGeoAreaShape == SOME_INSIDE) {\n      return GeoArea.OVERLAPS;\n    }\n\n    final int insideShape = isGeoAreaShapeInsideShape(geoShape);\n    if (insideShape == SOME_INSIDE) {\n      return GeoArea.OVERLAPS;\n    }\n\n    if (insideGeoAreaShape == ALL_INSIDE && insideShape==ALL_INSIDE) {\n      return GeoArea.OVERLAPS;\n    }\n\n    if (intersects(geoShape)){\n      return  GeoArea.OVERLAPS;\n    }\n\n    if (insideGeoAreaShape == ALL_INSIDE) {\n      return GeoArea.WITHIN;\n    }\n\n    if (insideShape==ALL_INSIDE) {\n      return GeoArea.CONTAINS;\n    }\n\n    return GeoArea.DISJOINT;\n  }\n\n","sourceOld":"  @Override\n  public int getRelationship(GeoShape geoShape) {\n    final int insideGeoAreaShape = isShapeInsideGeoAreaShape(geoShape);\n    if (insideGeoAreaShape == SOME_INSIDE) {\n      return GeoArea.OVERLAPS;\n    }\n\n    final int insideShape = isGeoAreaShapeInsideShape(geoShape);\n    if (insideShape == SOME_INSIDE) {\n      return GeoArea.OVERLAPS;\n    }\n\n    if (insideGeoAreaShape == ALL_INSIDE && insideShape==ALL_INSIDE) {\n      return GeoArea.OVERLAPS;\n    }\n\n    if (intersects(geoShape)){\n      return  GeoArea.OVERLAPS;\n    }\n\n    if (insideGeoAreaShape == ALL_INSIDE) {\n      return GeoArea.WITHIN;\n    }\n\n    if (insideShape==ALL_INSIDE) {\n      return GeoArea.CONTAINS;\n    }\n\n    return GeoArea.DISJOINT;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3212aa8c471e908af7dc95808a8f77018d198dc2":["0ca94ad4d6120f10fa13ce40a60a7fd1ede51705"],"0ca94ad4d6120f10fa13ce40a60a7fd1ede51705":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3212aa8c471e908af7dc95808a8f77018d198dc2"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0ca94ad4d6120f10fa13ce40a60a7fd1ede51705"],"3212aa8c471e908af7dc95808a8f77018d198dc2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0ca94ad4d6120f10fa13ce40a60a7fd1ede51705":["3212aa8c471e908af7dc95808a8f77018d198dc2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}