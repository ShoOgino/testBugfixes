{"path":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#GeneralAllGroupHeadsCollector(String,DocValues.Type,Sort,boolean).mjava","commits":[{"id":"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","date":1323449025,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#GeneralAllGroupHeadsCollector(String,DocValues.Type,Sort,boolean).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#GeneralAllGroupHeadsCollector(String,ValueType,Sort,boolean).mjava","sourceNew":"    GeneralAllGroupHeadsCollector(String groupField, DocValues.Type valueType, Sort sortWithinGroup, boolean diskResident) throws IOException {\n      super(groupField, valueType, sortWithinGroup.getSort().length, diskResident);\n      this.sortWithinGroup = sortWithinGroup;\n      groups = new HashMap<Comparable, GroupHead>();\n\n      final SortField[] sortFields = sortWithinGroup.getSort();\n      for (int i = 0; i < sortFields.length; i++) {\n        reversed[i] = sortFields[i].getReverse() ? -1 : 1;\n      }\n    }\n\n","sourceOld":"    GeneralAllGroupHeadsCollector(String groupField, ValueType valueType, Sort sortWithinGroup, boolean diskResident) throws IOException {\n      super(groupField, valueType, sortWithinGroup.getSort().length, diskResident);\n      this.sortWithinGroup = sortWithinGroup;\n      groups = new HashMap<Comparable, GroupHead>();\n\n      final SortField[] sortFields = sortWithinGroup.getSort();\n      for (int i = 0; i < sortFields.length; i++) {\n        reversed[i] = sortFields[i].getReverse() ? -1 : 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#GeneralAllGroupHeadsCollector(String,DocValues.Type,Sort,boolean).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#GeneralAllGroupHeadsCollector(String,ValueType,Sort,boolean).mjava","sourceNew":"    GeneralAllGroupHeadsCollector(String groupField, DocValues.Type valueType, Sort sortWithinGroup, boolean diskResident) throws IOException {\n      super(groupField, valueType, sortWithinGroup.getSort().length, diskResident);\n      this.sortWithinGroup = sortWithinGroup;\n      groups = new HashMap<Comparable, GroupHead>();\n\n      final SortField[] sortFields = sortWithinGroup.getSort();\n      for (int i = 0; i < sortFields.length; i++) {\n        reversed[i] = sortFields[i].getReverse() ? -1 : 1;\n      }\n    }\n\n","sourceOld":"    GeneralAllGroupHeadsCollector(String groupField, ValueType valueType, Sort sortWithinGroup, boolean diskResident) throws IOException {\n      super(groupField, valueType, sortWithinGroup.getSort().length, diskResident);\n      this.sortWithinGroup = sortWithinGroup;\n      groups = new HashMap<Comparable, GroupHead>();\n\n      final SortField[] sortFields = sortWithinGroup.getSort();\n      for (int i = 0; i < sortFields.length; i++) {\n        reversed[i] = sortFields[i].getReverse() ? -1 : 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"10ecbc03c2fc578015d597a26fe35271fe9504d2","date":1331200601,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#GeneralAllGroupHeadsCollector(String,DocValues.Type,Sort,boolean).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#GeneralAllGroupHeadsCollector(String,DocValues.Type,Sort,boolean).mjava","sourceNew":"    GeneralAllGroupHeadsCollector(String groupField, DocValues.Type valueType, Sort sortWithinGroup, boolean diskResident) throws IOException {\n      super(groupField, valueType, sortWithinGroup.getSort().length, diskResident);\n      this.sortWithinGroup = sortWithinGroup;\n      groups = new HashMap<Comparable<?>, GroupHead>();\n\n      final SortField[] sortFields = sortWithinGroup.getSort();\n      for (int i = 0; i < sortFields.length; i++) {\n        reversed[i] = sortFields[i].getReverse() ? -1 : 1;\n      }\n    }\n\n","sourceOld":"    GeneralAllGroupHeadsCollector(String groupField, DocValues.Type valueType, Sort sortWithinGroup, boolean diskResident) throws IOException {\n      super(groupField, valueType, sortWithinGroup.getSort().length, diskResident);\n      this.sortWithinGroup = sortWithinGroup;\n      groups = new HashMap<Comparable, GroupHead>();\n\n      final SortField[] sortFields = sortWithinGroup.getSort();\n      for (int i = 0; i < sortFields.length; i++) {\n        reversed[i] = sortFields[i].getReverse() ? -1 : 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#GeneralAllGroupHeadsCollector(String,DocValues.Type,Sort,boolean).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#GeneralAllGroupHeadsCollector(String,DocValues.Type,Sort,boolean).mjava","sourceNew":"    GeneralAllGroupHeadsCollector(String groupField, DocValues.Type valueType, Sort sortWithinGroup, boolean diskResident) throws IOException {\n      super(groupField, valueType, sortWithinGroup.getSort().length, diskResident);\n      this.sortWithinGroup = sortWithinGroup;\n      groups = new HashMap<Comparable<?>, GroupHead>();\n\n      final SortField[] sortFields = sortWithinGroup.getSort();\n      for (int i = 0; i < sortFields.length; i++) {\n        reversed[i] = sortFields[i].getReverse() ? -1 : 1;\n      }\n    }\n\n","sourceOld":"    GeneralAllGroupHeadsCollector(String groupField, DocValues.Type valueType, Sort sortWithinGroup, boolean diskResident) throws IOException {\n      super(groupField, valueType, sortWithinGroup.getSort().length, diskResident);\n      this.sortWithinGroup = sortWithinGroup;\n      groups = new HashMap<Comparable, GroupHead>();\n\n      final SortField[] sortFields = sortWithinGroup.getSort();\n      for (int i = 0; i < sortFields.length; i++) {\n        reversed[i] = sortFields[i].getReverse() ? -1 : 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#GeneralAllGroupHeadsCollector(String,DocValues.Type,Sort,boolean).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#GeneralAllGroupHeadsCollector(String,DocValues.Type,Sort,boolean).mjava","sourceNew":"    GeneralAllGroupHeadsCollector(String groupField, DocValues.Type valueType, Sort sortWithinGroup, boolean diskResident) throws IOException {\n      super(groupField, valueType, sortWithinGroup.getSort().length, diskResident);\n      this.sortWithinGroup = sortWithinGroup;\n      groups = new HashMap<Comparable<?>, GroupHead>();\n\n      final SortField[] sortFields = sortWithinGroup.getSort();\n      for (int i = 0; i < sortFields.length; i++) {\n        reversed[i] = sortFields[i].getReverse() ? -1 : 1;\n      }\n    }\n\n","sourceOld":"    GeneralAllGroupHeadsCollector(String groupField, DocValues.Type valueType, Sort sortWithinGroup, boolean diskResident) throws IOException {\n      super(groupField, valueType, sortWithinGroup.getSort().length, diskResident);\n      this.sortWithinGroup = sortWithinGroup;\n      groups = new HashMap<Comparable<?>, GroupHead>();\n\n      final SortField[] sortFields = sortWithinGroup.getSort();\n      for (int i = 0; i < sortFields.length; i++) {\n        reversed[i] = sortFields[i].getReverse() ? -1 : 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["d638301ad1cfcae567b681b893bc8781f0ee48a5","10ecbc03c2fc578015d597a26fe35271fe9504d2"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["10ecbc03c2fc578015d597a26fe35271fe9504d2"],"10ecbc03c2fc578015d597a26fe35271fe9504d2":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1e59c344a45b9502f40ec44f5fe4e20ed2291dbe"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"10ecbc03c2fc578015d597a26fe35271fe9504d2":["38e3b736c7ca086d61b7dbb841c905ee115490da","b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","d638301ad1cfcae567b681b893bc8781f0ee48a5"],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["38e3b736c7ca086d61b7dbb841c905ee115490da","10ecbc03c2fc578015d597a26fe35271fe9504d2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}