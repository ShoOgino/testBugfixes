{"path":"lucene/queryparser/src/test/org/apache/lucene/queryparser/simple/TestSimpleQueryParser#testDisableSlop().mjava","commits":[{"id":"bae2070aa7aaff000145c4978276eb085e2ff279","date":1391309822,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/simple/TestSimpleQueryParser#testDisableSlop().mjava","pathOld":"/dev/null","sourceNew":"  public void testDisableSlop() {\n    PhraseQuery expectedPhrase = new PhraseQuery();\n    expectedPhrase.add(new Term(\"field\", \"foo\"));\n    expectedPhrase.add(new Term(\"field\", \"bar\"));\n\n    BooleanQuery expected = new BooleanQuery();\n    expected.add(expectedPhrase, Occur.MUST);\n    expected.add(new TermQuery(new Term(\"field\", \"~2\")), Occur.MUST);\n    assertEquals(expected, parse(\"\\\"foo bar\\\"~2\", ~NEAR_OPERATOR));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9e1499c5d26c936238506df90a3c02c76707722","date":1434449920,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/simple/TestSimpleQueryParser#testDisableSlop().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/simple/TestSimpleQueryParser#testDisableSlop().mjava","sourceNew":"  public void testDisableSlop() {\n    PhraseQuery expectedPhrase = new PhraseQuery(\"field\", \"foo\", \"bar\");\n\n    BooleanQuery expected = new BooleanQuery();\n    expected.add(expectedPhrase, Occur.MUST);\n    expected.add(new TermQuery(new Term(\"field\", \"~2\")), Occur.MUST);\n    assertEquals(expected, parse(\"\\\"foo bar\\\"~2\", ~NEAR_OPERATOR));\n  }\n\n","sourceOld":"  public void testDisableSlop() {\n    PhraseQuery expectedPhrase = new PhraseQuery();\n    expectedPhrase.add(new Term(\"field\", \"foo\"));\n    expectedPhrase.add(new Term(\"field\", \"bar\"));\n\n    BooleanQuery expected = new BooleanQuery();\n    expected.add(expectedPhrase, Occur.MUST);\n    expected.add(new TermQuery(new Term(\"field\", \"~2\")), Occur.MUST);\n    assertEquals(expected, parse(\"\\\"foo bar\\\"~2\", ~NEAR_OPERATOR));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/simple/TestSimpleQueryParser#testDisableSlop().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/simple/TestSimpleQueryParser#testDisableSlop().mjava","sourceNew":"  public void testDisableSlop() {\n    PhraseQuery expectedPhrase = new PhraseQuery(\"field\", \"foo\", \"bar\");\n\n    BooleanQuery.Builder expected = new BooleanQuery.Builder();\n    expected.add(expectedPhrase, Occur.MUST);\n    expected.add(new TermQuery(new Term(\"field\", \"~2\")), Occur.MUST);\n    assertEquals(expected.build(), parse(\"\\\"foo bar\\\"~2\", ~NEAR_OPERATOR));\n  }\n\n","sourceOld":"  public void testDisableSlop() {\n    PhraseQuery expectedPhrase = new PhraseQuery(\"field\", \"foo\", \"bar\");\n\n    BooleanQuery expected = new BooleanQuery();\n    expected.add(expectedPhrase, Occur.MUST);\n    expected.add(new TermQuery(new Term(\"field\", \"~2\")), Occur.MUST);\n    assertEquals(expected, parse(\"\\\"foo bar\\\"~2\", ~NEAR_OPERATOR));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["e9e1499c5d26c936238506df90a3c02c76707722"],"e9e1499c5d26c936238506df90a3c02c76707722":["bae2070aa7aaff000145c4978276eb085e2ff279"],"bae2070aa7aaff000145c4978276eb085e2ff279":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"]},"commit2Childs":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e9e1499c5d26c936238506df90a3c02c76707722":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"bae2070aa7aaff000145c4978276eb085e2ff279":["e9e1499c5d26c936238506df90a3c02c76707722"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bae2070aa7aaff000145c4978276eb085e2ff279"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}