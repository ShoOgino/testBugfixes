{"path":"lucene/src/java/org/apache/lucene/index/TermsHashPerField.PostingsBytesStartArray#init().mjava","commits":[{"id":"5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392","date":1286023472,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermsHashPerField.PostingsBytesStartArray#init().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public int[] init() {\n      if(perField.postingsArray == null) { \n        perField.postingsArray = perField.consumer.createPostingsArray(2);\n        bytesUsed.addAndGet(perField.postingsArray.size * perField.postingsArray.bytesPerPosting());\n      }\n      return perField.postingsArray.textStarts;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TermsHashPerField.PostingsBytesStartArray#init().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public int[] init() {\n      if(perField.postingsArray == null) {\n        perField.postingsArray = perField.consumer.createPostingsArray(2);\n        bytesUsed.addAndGet(perField.postingsArray.size * perField.postingsArray.bytesPerPosting());\n      }\n      return perField.postingsArray.textStarts;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3e06be49006ecac364d39d12b9c9f74882f9b9f","date":1304289513,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TermsHashPerField.PostingsBytesStartArray#init().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermsHashPerField.PostingsBytesStartArray#init().mjava","sourceNew":"    @Override\n    public int[] init() {\n      if(perField.postingsArray == null) {\n        perField.postingsArray = perField.consumer.createPostingsArray(2);\n        bytesUsed.addAndGet(perField.postingsArray.size * perField.postingsArray.bytesPerPosting());\n      }\n      return perField.postingsArray.textStarts;\n    }\n\n","sourceOld":"    @Override\n    public int[] init() {\n      if(perField.postingsArray == null) { \n        perField.postingsArray = perField.consumer.createPostingsArray(2);\n        bytesUsed.addAndGet(perField.postingsArray.size * perField.postingsArray.bytesPerPosting());\n      }\n      return perField.postingsArray.textStarts;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TermsHashPerField.PostingsBytesStartArray#init().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermsHashPerField.PostingsBytesStartArray#init().mjava","sourceNew":"    @Override\n    public int[] init() {\n      if(perField.postingsArray == null) {\n        perField.postingsArray = perField.consumer.createPostingsArray(2);\n        bytesUsed.addAndGet(perField.postingsArray.size * perField.postingsArray.bytesPerPosting());\n      }\n      return perField.postingsArray.textStarts;\n    }\n\n","sourceOld":"    @Override\n    public int[] init() {\n      if(perField.postingsArray == null) { \n        perField.postingsArray = perField.consumer.createPostingsArray(2);\n        bytesUsed.addAndGet(perField.postingsArray.size * perField.postingsArray.bytesPerPosting());\n      }\n      return perField.postingsArray.textStarts;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TermsHashPerField.PostingsBytesStartArray#init().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermsHashPerField.PostingsBytesStartArray#init().mjava","sourceNew":"    @Override\n    public int[] init() {\n      if(perField.postingsArray == null) {\n        perField.postingsArray = perField.consumer.createPostingsArray(2);\n        bytesUsed.addAndGet(perField.postingsArray.size * perField.postingsArray.bytesPerPosting());\n      }\n      return perField.postingsArray.textStarts;\n    }\n\n","sourceOld":"    @Override\n    public int[] init() {\n      if(perField.postingsArray == null) { \n        perField.postingsArray = perField.consumer.createPostingsArray(2);\n        bytesUsed.addAndGet(perField.postingsArray.size * perField.postingsArray.bytesPerPosting());\n      }\n      return perField.postingsArray.textStarts;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31f025ae60076ae95274433f3fe8e6ace2857a87","date":1326669465,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermsHashPerField.PostingsBytesStartArray#init().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermsHashPerField.PostingsBytesStartArray#init().mjava","sourceNew":"    @Override\n    public int[] init() {\n      if (perField.postingsArray == null) {\n        perField.postingsArray = perField.consumer.createPostingsArray(2);\n        bytesUsed.addAndGet(perField.postingsArray.size * perField.postingsArray.bytesPerPosting());\n      }\n      return perField.postingsArray.textStarts;\n    }\n\n","sourceOld":"    @Override\n    public int[] init() {\n      if(perField.postingsArray == null) {\n        perField.postingsArray = perField.consumer.createPostingsArray(2);\n        bytesUsed.addAndGet(perField.postingsArray.size * perField.postingsArray.bytesPerPosting());\n      }\n      return perField.postingsArray.textStarts;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField.PostingsBytesStartArray#init().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermsHashPerField.PostingsBytesStartArray#init().mjava","sourceNew":"    @Override\n    public int[] init() {\n      if (perField.postingsArray == null) {\n        perField.postingsArray = perField.consumer.createPostingsArray(2);\n        bytesUsed.addAndGet(perField.postingsArray.size * perField.postingsArray.bytesPerPosting());\n      }\n      return perField.postingsArray.textStarts;\n    }\n\n","sourceOld":"    @Override\n    public int[] init() {\n      if (perField.postingsArray == null) {\n        perField.postingsArray = perField.consumer.createPostingsArray(2);\n        bytesUsed.addAndGet(perField.postingsArray.size * perField.postingsArray.bytesPerPosting());\n      }\n      return perField.postingsArray.textStarts;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"a3776dccca01c11e7046323cfad46a3b4a471233":["5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"31f025ae60076ae95274433f3fe8e6ace2857a87":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"]},"commit2Childs":{"5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","b3e06be49006ecac364d39d12b9c9f74882f9b9f","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","31f025ae60076ae95274433f3fe8e6ace2857a87"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"31f025ae60076ae95274433f3fe8e6ace2857a87":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}