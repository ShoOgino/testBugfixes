{"path":"solr/core/src/java/org/apache/solr/handler/IndexFetcher.FileFetcher#readInt(byte[]).mjava","commits":[{"id":"20f6b7cff3771384f27af0f059795d7e64aff6b9","date":1425498309,"type":1,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/IndexFetcher.FileFetcher#readInt(byte[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller.FileFetcher#readInt(byte[]).mjava","sourceNew":"    /**\n     * The webcontainer flushes the data only after it fills the buffer size. So, all data has to be read as readFully()\n     * other wise it fails. So read everything as bytes and then extract an integer out of it\n     */\n    private int readInt(byte[] b) {\n      return (((b[0] & 0xff) << 24) | ((b[1] & 0xff) << 16)\n          | ((b[2] & 0xff) << 8) | (b[3] & 0xff));\n\n    }\n\n","sourceOld":"    /**\n     * The webcontainer flushes the data only after it fills the buffer size. So, all data has to be read as readFully()\n     * other wise it fails. So read everything as bytes and then extract an integer out of it\n     */\n    private int readInt(byte[] b) {\n      return (((b[0] & 0xff) << 24) | ((b[1] & 0xff) << 16)\n          | ((b[2] & 0xff) << 8) | (b[3] & 0xff));\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":1,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/IndexFetcher.FileFetcher#readInt(byte[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller.FileFetcher#readInt(byte[]).mjava","sourceNew":"    /**\n     * The webcontainer flushes the data only after it fills the buffer size. So, all data has to be read as readFully()\n     * other wise it fails. So read everything as bytes and then extract an integer out of it\n     */\n    private int readInt(byte[] b) {\n      return (((b[0] & 0xff) << 24) | ((b[1] & 0xff) << 16)\n          | ((b[2] & 0xff) << 8) | (b[3] & 0xff));\n\n    }\n\n","sourceOld":"    /**\n     * The webcontainer flushes the data only after it fills the buffer size. So, all data has to be read as readFully()\n     * other wise it fails. So read everything as bytes and then extract an integer out of it\n     */\n    private int readInt(byte[] b) {\n      return (((b[0] & 0xff) << 24) | ((b[1] & 0xff) << 16)\n          | ((b[2] & 0xff) << 8) | (b[3] & 0xff));\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","20f6b7cff3771384f27af0f059795d7e64aff6b9"],"20f6b7cff3771384f27af0f059795d7e64aff6b9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["20f6b7cff3771384f27af0f059795d7e64aff6b9"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"20f6b7cff3771384f27af0f059795d7e64aff6b9":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","20f6b7cff3771384f27af0f059795d7e64aff6b9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}