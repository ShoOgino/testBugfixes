{"path":"src/java/org/apache/solr/handler/component/QueryElevationComponent#getElevationMap(IndexReader,SolrCore).mjava","commits":[{"id":"5391288921372c32bf6096df320497ad2d05757f","date":1200634221,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/component/QueryElevationComponent#getElevationMap(IndexReader,SolrCore).mjava","pathOld":"/dev/null","sourceNew":"  Map<String, ElevationObj> getElevationMap( IndexReader reader, SolrCore core ) throws Exception\n  {\n    synchronized( elevationCache ) {\n      Map<String, ElevationObj> map = elevationCache.get( null );\n      if (map != null) return map;\n\n      map = elevationCache.get( reader );\n      if( map == null ) {\n        String f = initArgs.get( CONFIG_FILE );\n        if( f == null ) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n                  \"QueryElevationComponent must specify argument: \"+CONFIG_FILE );\n        }\n        log.info( \"Loading QueryElevation from data dir: \"+f );\n\n        InputStream is = VersionedFile.getLatestFile( core.getDataDir(), f );\n        Config cfg = new Config( core.getResourceLoader(), f, is, null );\n        map = loadElevationMap( cfg );\n        elevationCache.put( reader, map );\n      }\n      return map;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/component/QueryElevationComponent#getElevationMap(IndexReader,SolrCore).mjava","pathOld":"src/java/org/apache/solr/handler/component/QueryElevationComponent#getElevationMap(IndexReader,SolrCore).mjava","sourceNew":"  Map<String, ElevationObj> getElevationMap( IndexReader reader, SolrCore core ) throws Exception\n  {\n    synchronized( elevationCache ) {\n      Map<String, ElevationObj> map = elevationCache.get( null );\n      if (map != null) return map;\n\n      map = elevationCache.get( reader );\n      if( map == null ) {\n        String f = initArgs.get( CONFIG_FILE );\n        if( f == null ) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n                  \"QueryElevationComponent must specify argument: \"+CONFIG_FILE );\n        }\n        log.info( \"Loading QueryElevation from data dir: \"+f );\n\n        InputStream is = VersionedFile.getLatestFile( core.getDataDir(), f );\n        Config cfg = new Config( core.getResourceLoader(), f, is, null );\n        map = loadElevationMap( cfg );\n        elevationCache.put( reader, map );\n      }\n      return map;\n    }\n  }\n\n","sourceOld":"  Map<String, ElevationObj> getElevationMap( IndexReader reader, SolrCore core ) throws Exception\n  {\n    synchronized( elevationCache ) {\n      Map<String, ElevationObj> map = elevationCache.get( null );\n      if (map != null) return map;\n\n      map = elevationCache.get( reader );\n      if( map == null ) {\n        String f = initArgs.get( CONFIG_FILE );\n        if( f == null ) {\n          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n                  \"QueryElevationComponent must specify argument: \"+CONFIG_FILE );\n        }\n        log.info( \"Loading QueryElevation from data dir: \"+f );\n\n        InputStream is = VersionedFile.getLatestFile( core.getDataDir(), f );\n        Config cfg = new Config( core.getResourceLoader(), f, is, null );\n        map = loadElevationMap( cfg );\n        elevationCache.put( reader, map );\n      }\n      return map;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5391288921372c32bf6096df320497ad2d05757f":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["5391288921372c32bf6096df320497ad2d05757f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"5391288921372c32bf6096df320497ad2d05757f":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["5391288921372c32bf6096df320497ad2d05757f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}