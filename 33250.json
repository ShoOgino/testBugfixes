{"path":"src/java/org/apache/lucene/document/DateTools#dateToString(Date,Resolution).mjava","commits":[{"id":"f0c7cf7c5321e0d685b7ac1fce06922d12b16203","date":1094419649,"type":0,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/DateTools#dateToString(Date,Resolution).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Converts a Date to a string suitable for indexing.\n   * \n   * @param date the date to be converted\n   * @param resolution the desired resolution, see\n   *  {@link #round(Date, DateTools.Resolution)}\n   * @return a string in format <code>yyyyMMddHHmmssSSS</code> or shorter,\n   *  depeding on <code>resolution</code>\n   */\n  public static String dateToString(Date date, Resolution resolution) {\n    return timeToString(date.getTime(), resolution);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["87236df7b0a6d20724a5a1e1a4d8f4d0f0615cf0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"87236df7b0a6d20724a5a1e1a4d8f4d0f0615cf0","date":1139163422,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/DateTools#dateToString(Date,Resolution).mjava","pathOld":"src/java/org/apache/lucene/document/DateTools#dateToString(Date,Resolution).mjava","sourceNew":"  /**\n   * Converts a Date to a string suitable for indexing.\n   * \n   * @param date the date to be converted\n   * @param resolution the desired resolution, see\n   *  {@link #round(Date, DateTools.Resolution)}\n   * @return a string in format <code>yyyyMMddHHmmssSSS</code> or shorter,\n   *  depeding on <code>resolution</code>; using UTC as timezone \n   */\n  public static String dateToString(Date date, Resolution resolution) {\n    return timeToString(date.getTime(), resolution);\n  }\n\n","sourceOld":"  /**\n   * Converts a Date to a string suitable for indexing.\n   * \n   * @param date the date to be converted\n   * @param resolution the desired resolution, see\n   *  {@link #round(Date, DateTools.Resolution)}\n   * @return a string in format <code>yyyyMMddHHmmssSSS</code> or shorter,\n   *  depeding on <code>resolution</code>\n   */\n  public static String dateToString(Date date, Resolution resolution) {\n    return timeToString(date.getTime(), resolution);\n  }\n\n","bugFix":["f0c7cf7c5321e0d685b7ac1fce06922d12b16203"],"bugIntro":["f6786d2653a8132c098ce0726e0a62fc0110dbf1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f6786d2653a8132c098ce0726e0a62fc0110dbf1","date":1201639593,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/DateTools#dateToString(Date,Resolution).mjava","pathOld":"src/java/org/apache/lucene/document/DateTools#dateToString(Date,Resolution).mjava","sourceNew":"  /**\n   * Converts a Date to a string suitable for indexing.\n   * \n   * @param date the date to be converted\n   * @param resolution the desired resolution, see\n   *  {@link #round(Date, DateTools.Resolution)}\n   * @return a string in format <code>yyyyMMddHHmmssSSS</code> or shorter,\n   *  depeding on <code>resolution</code>; using GMT as timezone \n   */\n  public static String dateToString(Date date, Resolution resolution) {\n    return timeToString(date.getTime(), resolution);\n  }\n\n","sourceOld":"  /**\n   * Converts a Date to a string suitable for indexing.\n   * \n   * @param date the date to be converted\n   * @param resolution the desired resolution, see\n   *  {@link #round(Date, DateTools.Resolution)}\n   * @return a string in format <code>yyyyMMddHHmmssSSS</code> or shorter,\n   *  depeding on <code>resolution</code>; using UTC as timezone \n   */\n  public static String dateToString(Date date, Resolution resolution) {\n    return timeToString(date.getTime(), resolution);\n  }\n\n","bugFix":["87236df7b0a6d20724a5a1e1a4d8f4d0f0615cf0"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ea5e8d049564c69ae93ebb291c320fb586c02733","date":1243512095,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/DateTools#dateToString(Date,Resolution).mjava","pathOld":"src/java/org/apache/lucene/document/DateTools#dateToString(Date,Resolution).mjava","sourceNew":"  /**\n   * Converts a Date to a string suitable for indexing.\n   * \n   * @param date the date to be converted\n   * @param resolution the desired resolution, see\n   *  {@link #round(Date, DateTools.Resolution)}\n   * @return a string in format <code>yyyyMMddHHmmssSSS</code> or shorter,\n   *  depeding on <code>resolution</code>; using GMT as timezone \n   */\n  public static synchronized String dateToString(Date date, Resolution resolution) {\n    return timeToString(date.getTime(), resolution);\n  }\n\n","sourceOld":"  /**\n   * Converts a Date to a string suitable for indexing.\n   * \n   * @param date the date to be converted\n   * @param resolution the desired resolution, see\n   *  {@link #round(Date, DateTools.Resolution)}\n   * @return a string in format <code>yyyyMMddHHmmssSSS</code> or shorter,\n   *  depeding on <code>resolution</code>; using GMT as timezone \n   */\n  public static String dateToString(Date date, Resolution resolution) {\n    return timeToString(date.getTime(), resolution);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"add7d922e63099fbce8f0a1b31216df7ef5067f1","date":1252002701,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/DateTools#dateToString(Date,Resolution).mjava","pathOld":"src/java/org/apache/lucene/document/DateTools#dateToString(Date,Resolution).mjava","sourceNew":"  /**\n   * Converts a Date to a string suitable for indexing.\n   * \n   * @param date the date to be converted\n   * @param resolution the desired resolution, see\n   *  {@link #round(Date, DateTools.Resolution)}\n   * @return a string in format <code>yyyyMMddHHmmssSSS</code> or shorter,\n   *  depending on <code>resolution</code>; using GMT as timezone \n   */\n  public static synchronized String dateToString(Date date, Resolution resolution) {\n    return timeToString(date.getTime(), resolution);\n  }\n\n","sourceOld":"  /**\n   * Converts a Date to a string suitable for indexing.\n   * \n   * @param date the date to be converted\n   * @param resolution the desired resolution, see\n   *  {@link #round(Date, DateTools.Resolution)}\n   * @return a string in format <code>yyyyMMddHHmmssSSS</code> or shorter,\n   *  depeding on <code>resolution</code>; using GMT as timezone \n   */\n  public static synchronized String dateToString(Date date, Resolution resolution) {\n    return timeToString(date.getTime(), resolution);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/document/DateTools#dateToString(Date,Resolution).mjava","sourceNew":null,"sourceOld":"  /**\n   * Converts a Date to a string suitable for indexing.\n   * \n   * @param date the date to be converted\n   * @param resolution the desired resolution, see\n   *  {@link #round(Date, DateTools.Resolution)}\n   * @return a string in format <code>yyyyMMddHHmmssSSS</code> or shorter,\n   *  depending on <code>resolution</code>; using GMT as timezone \n   */\n  public static synchronized String dateToString(Date date, Resolution resolution) {\n    return timeToString(date.getTime(), resolution);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f0c7cf7c5321e0d685b7ac1fce06922d12b16203":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f6786d2653a8132c098ce0726e0a62fc0110dbf1":["87236df7b0a6d20724a5a1e1a4d8f4d0f0615cf0"],"add7d922e63099fbce8f0a1b31216df7ef5067f1":["ea5e8d049564c69ae93ebb291c320fb586c02733"],"ea5e8d049564c69ae93ebb291c320fb586c02733":["f6786d2653a8132c098ce0726e0a62fc0110dbf1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["add7d922e63099fbce8f0a1b31216df7ef5067f1"],"87236df7b0a6d20724a5a1e1a4d8f4d0f0615cf0":["f0c7cf7c5321e0d685b7ac1fce06922d12b16203"]},"commit2Childs":{"f0c7cf7c5321e0d685b7ac1fce06922d12b16203":["87236df7b0a6d20724a5a1e1a4d8f4d0f0615cf0"],"f6786d2653a8132c098ce0726e0a62fc0110dbf1":["ea5e8d049564c69ae93ebb291c320fb586c02733"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f0c7cf7c5321e0d685b7ac1fce06922d12b16203"],"add7d922e63099fbce8f0a1b31216df7ef5067f1":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ea5e8d049564c69ae93ebb291c320fb586c02733":["add7d922e63099fbce8f0a1b31216df7ef5067f1"],"87236df7b0a6d20724a5a1e1a4d8f4d0f0615cf0":["f6786d2653a8132c098ce0726e0a62fc0110dbf1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}