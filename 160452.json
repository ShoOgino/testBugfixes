{"path":"lucene/src/java/org/apache/lucene/search/TimeLimitingCollector.TimerThread#setResolution(long).mjava","commits":[{"id":"23550189554f52bad1625fceab84a71d20a4df3f","date":1321064526,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/TimeLimitingCollector.TimerThread#setResolution(long).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Set the timer resolution.\n     * The default timer resolution is 20 milliseconds. \n     * This means that a search required to take no longer than \n     * 800 milliseconds may be stopped after 780 to 820 milliseconds.\n     * <br>Note that: \n     * <ul>\n     * <li>Finer (smaller) resolution is more accurate but less efficient.</li>\n     * <li>Setting resolution to less than 5 milliseconds will be silently modified to 5 milliseconds.</li>\n     * <li>Setting resolution smaller than current resolution might take effect only after current \n     * resolution. (Assume current resolution of 20 milliseconds is modified to 5 milliseconds, \n     * then it can take up to 20 milliseconds for the change to have effect.</li>\n     * </ul>      \n     */\n    public void setResolution(long resolution) {\n      this.resolution = Math.max(resolution, 5); // 5 milliseconds is about the minimum reasonable time for a Object.wait(long) call.\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TimeLimitingCollector.TimerThread#setResolution(long).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/TimeLimitingCollector.TimerThread#setResolution(long).mjava","sourceNew":"    /**\n     * Set the timer resolution.\n     * The default timer resolution is 20 milliseconds. \n     * This means that a search required to take no longer than \n     * 800 milliseconds may be stopped after 780 to 820 milliseconds.\n     * <br>Note that: \n     * <ul>\n     * <li>Finer (smaller) resolution is more accurate but less efficient.</li>\n     * <li>Setting resolution to less than 5 milliseconds will be silently modified to 5 milliseconds.</li>\n     * <li>Setting resolution smaller than current resolution might take effect only after current \n     * resolution. (Assume current resolution of 20 milliseconds is modified to 5 milliseconds, \n     * then it can take up to 20 milliseconds for the change to have effect.</li>\n     * </ul>      \n     */\n    public void setResolution(long resolution) {\n      this.resolution = Math.max(resolution, 5); // 5 milliseconds is about the minimum reasonable time for a Object.wait(long) call.\n    }\n\n","sourceOld":"    /**\n     * Set the timer resolution.\n     * The default timer resolution is 20 milliseconds. \n     * This means that a search required to take no longer than \n     * 800 milliseconds may be stopped after 780 to 820 milliseconds.\n     * <br>Note that: \n     * <ul>\n     * <li>Finer (smaller) resolution is more accurate but less efficient.</li>\n     * <li>Setting resolution to less than 5 milliseconds will be silently modified to 5 milliseconds.</li>\n     * <li>Setting resolution smaller than current resolution might take effect only after current \n     * resolution. (Assume current resolution of 20 milliseconds is modified to 5 milliseconds, \n     * then it can take up to 20 milliseconds for the change to have effect.</li>\n     * </ul>      \n     */\n    public void setResolution(long resolution) {\n      this.resolution = Math.max(resolution, 5); // 5 milliseconds is about the minimum reasonable time for a Object.wait(long) call.\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["23550189554f52bad1625fceab84a71d20a4df3f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"23550189554f52bad1625fceab84a71d20a4df3f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["23550189554f52bad1625fceab84a71d20a4df3f"],"23550189554f52bad1625fceab84a71d20a4df3f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}