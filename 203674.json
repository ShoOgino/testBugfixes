{"path":"lucene/core/src/test/org/apache/lucene/search/TestMultiCollector#collector(ScoreMode,Class[#]).mjava","commits":[{"id":"d488a38bddbdcc0d425b27beb126f54df6dd82a4","date":1598268476,"type":1,"author":"Christine Poerschke","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMultiCollector#collector(ScoreMode,Class[#]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/MultiCollectorTest#collector(ScoreMode,Class[#]).mjava","sourceNew":"  private static Collector collector(ScoreMode scoreMode, Class<?> expectedScorer) {\n    return new Collector() {\n\n      @Override\n      public LeafCollector getLeafCollector(LeafReaderContext context) throws IOException {\n        return new LeafCollector() {\n\n          @Override\n          public void setScorer(Scorable scorer) throws IOException {\n            while (expectedScorer.equals(scorer.getClass()) == false && scorer instanceof FilterScorable) {\n              scorer = ((FilterScorable) scorer).in;\n            }\n            assertEquals(expectedScorer, scorer.getClass());\n          }\n\n          @Override\n          public void collect(int doc) throws IOException {}\n          \n        };\n      }\n\n      @Override\n      public ScoreMode scoreMode() {\n        return scoreMode;\n      }\n      \n    };\n  }\n\n","sourceOld":"  private static Collector collector(ScoreMode scoreMode, Class<?> expectedScorer) {\n    return new Collector() {\n\n      @Override\n      public LeafCollector getLeafCollector(LeafReaderContext context) throws IOException {\n        return new LeafCollector() {\n\n          @Override\n          public void setScorer(Scorable scorer) throws IOException {\n            while (expectedScorer.equals(scorer.getClass()) == false && scorer instanceof FilterScorable) {\n              scorer = ((FilterScorable) scorer).in;\n            }\n            assertEquals(expectedScorer, scorer.getClass());\n          }\n\n          @Override\n          public void collect(int doc) throws IOException {}\n          \n        };\n      }\n\n      @Override\n      public ScoreMode scoreMode() {\n        return scoreMode;\n      }\n      \n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d488a38bddbdcc0d425b27beb126f54df6dd82a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d488a38bddbdcc0d425b27beb126f54df6dd82a4"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d488a38bddbdcc0d425b27beb126f54df6dd82a4"],"d488a38bddbdcc0d425b27beb126f54df6dd82a4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}