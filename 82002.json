{"path":"solr/core/src/test/org/apache/solr/cloud/autoscaling/ComputePlanActionTest.AssertingTriggerAction#process(TriggerEvent,ActionContext).mjava","commits":[{"id":"1f6b20dc453cee198956989b90aa24bef0232bcf","date":1498221066,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/ComputePlanActionTest.AssertingTriggerAction#process(TriggerEvent,ActionContext).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void process(TriggerEvent event, ActionContext context) {\n      if (fired.compareAndSet(false, true)) {\n        eventContextRef.set(context.getProperties());\n        triggerFiredLatch.countDown();\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"face217c60f59b356129804dd0f7508779078fe3","date":1498692025,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/ComputePlanActionTest.AssertingTriggerAction#process(TriggerEvent,ActionContext).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/ComputePlanActionTest.AssertingTriggerAction#process(TriggerEvent,ActionContext).mjava","sourceNew":"    @Override\n    public void process(TriggerEvent event, ActionContext context) {\n      if (fired.compareAndSet(false, true)) {\n        eventRef.set(event);\n        actionContextPropsRef.set(context.getProperties());\n        triggerFiredLatch.countDown();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void process(TriggerEvent event, ActionContext context) {\n      if (fired.compareAndSet(false, true)) {\n        eventContextRef.set(context.getProperties());\n        triggerFiredLatch.countDown();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c304e97e7c1d472bc70e801b35ee78583916c6cd","date":1507105431,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/ComputePlanActionTest.AssertingTriggerAction#process(TriggerEvent,ActionContext).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void process(TriggerEvent event, ActionContext context) {\n      if (fired.compareAndSet(false, true)) {\n        eventRef.set(event);\n        actionContextPropsRef.set(context.getProperties());\n        triggerFiredLatch.countDown();\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"560c18d71dad43d675158783c3840f8c80d6d39c","date":1507105532,"type":0,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/ComputePlanActionTest.AssertingTriggerAction#process(TriggerEvent,ActionContext).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void process(TriggerEvent event, ActionContext context) {\n      if (fired.compareAndSet(false, true)) {\n        eventRef.set(event);\n        actionContextPropsRef.set(context.getProperties());\n        triggerFiredLatch.countDown();\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"101645ef3f7b3be12940241226f9e1636541aadc","date":1507815822,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/ComputePlanActionTest.AssertingTriggerAction#process(TriggerEvent,ActionContext).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/ComputePlanActionTest.AssertingTriggerAction#process(TriggerEvent,ActionContext).mjava","sourceNew":"    @Override\n    public void process(TriggerEvent event, ActionContext context) {\n      if (expectedNode != null) {\n        Collection nodes = (Collection) event.getProperty(TriggerEvent.NODE_NAMES);\n        if (nodes == null || !nodes.contains(expectedNode)) return;//this is not the event we are looking for\n      }\n      if (fired.compareAndSet(false, true)) {\n        eventRef.set(event);\n        actionContextPropsRef.set(context.getProperties());\n        triggerFiredLatch.countDown();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void process(TriggerEvent event, ActionContext context) {\n      if (fired.compareAndSet(false, true)) {\n        eventRef.set(event);\n        actionContextPropsRef.set(context.getProperties());\n        triggerFiredLatch.countDown();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa2585c33d5d66a1c837c312221eb55ddb3c4300","date":1592493170,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/ComputePlanActionTest.AssertingTriggerAction#process(TriggerEvent,ActionContext).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/ComputePlanActionTest.AssertingTriggerAction#process(TriggerEvent,ActionContext).mjava","sourceNew":"    @Override\n    public void process(TriggerEvent event, ActionContext context) {\n      if (expectedNode != null) {\n        @SuppressWarnings({\"rawtypes\"})\n        Collection nodes = (Collection) event.getProperty(TriggerEvent.NODE_NAMES);\n        if (nodes == null || !nodes.contains(expectedNode)) return;//this is not the event we are looking for\n      }\n      if (fired.compareAndSet(false, true)) {\n        eventRef.set(event);\n        actionContextPropsRef.set(context.getProperties());\n        triggerFiredLatch.countDown();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void process(TriggerEvent event, ActionContext context) {\n      if (expectedNode != null) {\n        Collection nodes = (Collection) event.getProperty(TriggerEvent.NODE_NAMES);\n        if (nodes == null || !nodes.contains(expectedNode)) return;//this is not the event we are looking for\n      }\n      if (fired.compareAndSet(false, true)) {\n        eventRef.set(event);\n        actionContextPropsRef.set(context.getProperties());\n        triggerFiredLatch.countDown();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/ComputePlanActionTest.AssertingTriggerAction#process(TriggerEvent,ActionContext).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void process(TriggerEvent event, ActionContext context) {\n      if (expectedNode != null) {\n        @SuppressWarnings({\"rawtypes\"})\n        Collection nodes = (Collection) event.getProperty(TriggerEvent.NODE_NAMES);\n        if (nodes == null || !nodes.contains(expectedNode)) return;//this is not the event we are looking for\n      }\n      if (fired.compareAndSet(false, true)) {\n        eventRef.set(event);\n        actionContextPropsRef.set(context.getProperties());\n        triggerFiredLatch.countDown();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c304e97e7c1d472bc70e801b35ee78583916c6cd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","face217c60f59b356129804dd0f7508779078fe3"],"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["101645ef3f7b3be12940241226f9e1636541aadc"],"3f504512a03d978990cbff30db0522b354e846db":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"face217c60f59b356129804dd0f7508779078fe3":["1f6b20dc453cee198956989b90aa24bef0232bcf"],"560c18d71dad43d675158783c3840f8c80d6d39c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c304e97e7c1d472bc70e801b35ee78583916c6cd"],"1f6b20dc453cee198956989b90aa24bef0232bcf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"101645ef3f7b3be12940241226f9e1636541aadc":["560c18d71dad43d675158783c3840f8c80d6d39c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"c304e97e7c1d472bc70e801b35ee78583916c6cd":["560c18d71dad43d675158783c3840f8c80d6d39c"],"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["3f504512a03d978990cbff30db0522b354e846db"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c304e97e7c1d472bc70e801b35ee78583916c6cd","560c18d71dad43d675158783c3840f8c80d6d39c","1f6b20dc453cee198956989b90aa24bef0232bcf"],"face217c60f59b356129804dd0f7508779078fe3":["c304e97e7c1d472bc70e801b35ee78583916c6cd"],"1f6b20dc453cee198956989b90aa24bef0232bcf":["face217c60f59b356129804dd0f7508779078fe3"],"560c18d71dad43d675158783c3840f8c80d6d39c":["101645ef3f7b3be12940241226f9e1636541aadc"],"101645ef3f7b3be12940241226f9e1636541aadc":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}