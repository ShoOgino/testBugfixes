{"path":"lucene/core/src/java/org/apache/lucene/util/fst/FST#finish(int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#finish(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/fst/FST#finish(int).mjava","sourceNew":"  void finish(int startNode) throws IOException {\n    if (startNode == FINAL_END_NODE && emptyOutput != null) {\n      startNode = 0;\n    }\n    if (this.startNode != -1) {\n      throw new IllegalStateException(\"already finished\");\n    }\n    byte[] finalBytes = new byte[writer.posWrite];\n    System.arraycopy(bytes, 0, finalBytes, 0, writer.posWrite);\n    bytes = finalBytes;\n    this.startNode = startNode;\n\n    cacheRootArcs();\n  }\n\n","sourceOld":"  void finish(int startNode) throws IOException {\n    if (startNode == FINAL_END_NODE && emptyOutput != null) {\n      startNode = 0;\n    }\n    if (this.startNode != -1) {\n      throw new IllegalStateException(\"already finished\");\n    }\n    byte[] finalBytes = new byte[writer.posWrite];\n    System.arraycopy(bytes, 0, finalBytes, 0, writer.posWrite);\n    bytes = finalBytes;\n    this.startNode = startNode;\n\n    cacheRootArcs();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb27634f76319b68d6d8fd11a7104d20294722c5","date":1355210077,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#finish(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#finish(int).mjava","sourceNew":"  void finish(int startNode) throws IOException {\n    if (startNode == FINAL_END_NODE && emptyOutput != null) {\n      startNode = 0;\n    }\n    if (this.startNode != -1) {\n      throw new IllegalStateException(\"already finished\");\n    }\n    byte[] finalBytes = new byte[writer.getPosition()];\n    System.arraycopy(bytes, 0, finalBytes, 0, writer.getPosition());\n    bytes = finalBytes;\n    this.startNode = startNode;\n\n    cacheRootArcs();\n  }\n\n","sourceOld":"  void finish(int startNode) throws IOException {\n    if (startNode == FINAL_END_NODE && emptyOutput != null) {\n      startNode = 0;\n    }\n    if (this.startNode != -1) {\n      throw new IllegalStateException(\"already finished\");\n    }\n    byte[] finalBytes = new byte[writer.posWrite];\n    System.arraycopy(bytes, 0, finalBytes, 0, writer.posWrite);\n    bytes = finalBytes;\n    this.startNode = startNode;\n\n    cacheRootArcs();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#finish(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#finish(int).mjava","sourceNew":"  void finish(int startNode) throws IOException {\n    if (startNode == FINAL_END_NODE && emptyOutput != null) {\n      startNode = 0;\n    }\n    if (this.startNode != -1) {\n      throw new IllegalStateException(\"already finished\");\n    }\n    byte[] finalBytes = new byte[writer.getPosition()];\n    System.arraycopy(bytes, 0, finalBytes, 0, writer.getPosition());\n    bytes = finalBytes;\n    this.startNode = startNode;\n\n    cacheRootArcs();\n  }\n\n","sourceOld":"  void finish(int startNode) throws IOException {\n    if (startNode == FINAL_END_NODE && emptyOutput != null) {\n      startNode = 0;\n    }\n    if (this.startNode != -1) {\n      throw new IllegalStateException(\"already finished\");\n    }\n    byte[] finalBytes = new byte[writer.posWrite];\n    System.arraycopy(bytes, 0, finalBytes, 0, writer.posWrite);\n    bytes = finalBytes;\n    this.startNode = startNode;\n\n    cacheRootArcs();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"87e78f3c129251e74ecc2ff73a32de0f27cf09d5","date":1358006150,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#finish(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#finish(int).mjava","sourceNew":"  void finish(int startNode) throws IOException {\n    if (startNode == FINAL_END_NODE && emptyOutput != null) {\n      startNode = 0;\n    }\n    if (this.startNode != -1) {\n      throw new IllegalStateException(\"already finished\");\n    }\n    this.startNode = startNode;\n    bytes.finish();\n\n    cacheRootArcs();\n  }\n\n","sourceOld":"  void finish(int startNode) throws IOException {\n    if (startNode == FINAL_END_NODE && emptyOutput != null) {\n      startNode = 0;\n    }\n    if (this.startNode != -1) {\n      throw new IllegalStateException(\"already finished\");\n    }\n    byte[] finalBytes = new byte[writer.getPosition()];\n    System.arraycopy(bytes, 0, finalBytes, 0, writer.getPosition());\n    bytes = finalBytes;\n    this.startNode = startNode;\n\n    cacheRootArcs();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3c397b1515e745d8b12d70edfc0e17cb7eac7f0","date":1358188277,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#finish(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#finish(int).mjava","sourceNew":"  void finish(long startNode) throws IOException {\n    if (this.startNode != -1) {\n      throw new IllegalStateException(\"already finished\");\n    }\n    if (startNode == FINAL_END_NODE && emptyOutput != null) {\n      startNode = 0;\n    }\n    this.startNode = startNode;\n    bytes.finish();\n\n    cacheRootArcs();\n  }\n\n","sourceOld":"  void finish(int startNode) throws IOException {\n    if (startNode == FINAL_END_NODE && emptyOutput != null) {\n      startNode = 0;\n    }\n    if (this.startNode != -1) {\n      throw new IllegalStateException(\"already finished\");\n    }\n    this.startNode = startNode;\n    bytes.finish();\n\n    cacheRootArcs();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8917bfede3b4ca30f4305c1e391e9218959cd723","date":1358189662,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#finish(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#finish(int).mjava","sourceNew":"  void finish(long startNode) throws IOException {\n    if (this.startNode != -1) {\n      throw new IllegalStateException(\"already finished\");\n    }\n    if (startNode == FINAL_END_NODE && emptyOutput != null) {\n      startNode = 0;\n    }\n    this.startNode = startNode;\n    bytes.finish();\n\n    cacheRootArcs();\n  }\n\n","sourceOld":"  void finish(int startNode) throws IOException {\n    if (startNode == FINAL_END_NODE && emptyOutput != null) {\n      startNode = 0;\n    }\n    if (this.startNode != -1) {\n      throw new IllegalStateException(\"already finished\");\n    }\n    byte[] finalBytes = new byte[writer.getPosition()];\n    System.arraycopy(bytes, 0, finalBytes, 0, writer.getPosition());\n    bytes = finalBytes;\n    this.startNode = startNode;\n\n    cacheRootArcs();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","cb27634f76319b68d6d8fd11a7104d20294722c5"],"d3c397b1515e745d8b12d70edfc0e17cb7eac7f0":["87e78f3c129251e74ecc2ff73a32de0f27cf09d5"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8917bfede3b4ca30f4305c1e391e9218959cd723":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d3c397b1515e745d8b12d70edfc0e17cb7eac7f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"87e78f3c129251e74ecc2ff73a32de0f27cf09d5":["cb27634f76319b68d6d8fd11a7104d20294722c5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d3c397b1515e745d8b12d70edfc0e17cb7eac7f0"],"cb27634f76319b68d6d8fd11a7104d20294722c5":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["8917bfede3b4ca30f4305c1e391e9218959cd723"],"d3c397b1515e745d8b12d70edfc0e17cb7eac7f0":["8917bfede3b4ca30f4305c1e391e9218959cd723","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cb27634f76319b68d6d8fd11a7104d20294722c5"],"8917bfede3b4ca30f4305c1e391e9218959cd723":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"87e78f3c129251e74ecc2ff73a32de0f27cf09d5":["d3c397b1515e745d8b12d70edfc0e17cb7eac7f0"],"cb27634f76319b68d6d8fd11a7104d20294722c5":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","87e78f3c129251e74ecc2ff73a32de0f27cf09d5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8917bfede3b4ca30f4305c1e391e9218959cd723","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}