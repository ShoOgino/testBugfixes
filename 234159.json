{"path":"solr/core/src/java/org/apache/solr/util/ExportTool.JsonSink#start().mjava","commits":[{"id":"b26d91db0d1d754936add788fa3a21acaadc9685","date":1565418863,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/ExportTool.JsonSink#start().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void start() throws IOException {\n      fos = new FileOutputStream(info.out);\n      writer = FastWriter.wrap(new OutputStreamWriter(fos));\n      jsonw = new SolrJSONWriter(writer);\n      jsonw.setIndent(false);\n\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["b373db031e25f03ad6783efcfb77809dcd963565"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7d383e3d651e589111e224f1cde89017eedb32ad","date":1565421677,"type":3,"author":"noble","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/ExportTool.JsonSink#start().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/ExportTool.JsonSink#start().mjava","sourceNew":"    @Override\n    public void start() throws IOException {\n      fos = new FileOutputStream(info.out);\n      writer = FastWriter.wrap(new OutputStreamWriter(fos, StandardCharsets.UTF_8));\n      jsonw = new SolrJSONWriter(writer);\n      jsonw.setIndent(false);\n\n    }\n\n","sourceOld":"    @Override\n    public void start() throws IOException {\n      fos = new FileOutputStream(info.out);\n      writer = FastWriter.wrap(new OutputStreamWriter(fos));\n      jsonw = new SolrJSONWriter(writer);\n      jsonw.setIndent(false);\n\n    }\n\n","bugFix":null,"bugIntro":["b373db031e25f03ad6783efcfb77809dcd963565"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b373db031e25f03ad6783efcfb77809dcd963565","date":1565686445,"type":3,"author":"noble","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/ExportTool.JsonSink#start().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/ExportTool.JsonSink#start().mjava","sourceNew":"    @Override\n    public void start() throws IOException {\n      fos = new FileOutputStream(info.out);\n      if (info.bufferSize > 0) {\n        fos = new BufferedOutputStream(fos, info.bufferSize);\n      }\n      writer = new OutputStreamWriter(fos, StandardCharsets.UTF_8);\n\n    }\n\n","sourceOld":"    @Override\n    public void start() throws IOException {\n      fos = new FileOutputStream(info.out);\n      writer = FastWriter.wrap(new OutputStreamWriter(fos, StandardCharsets.UTF_8));\n      jsonw = new SolrJSONWriter(writer);\n      jsonw.setIndent(false);\n\n    }\n\n","bugFix":["b26d91db0d1d754936add788fa3a21acaadc9685","7d383e3d651e589111e224f1cde89017eedb32ad"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"161e330a2c1ea9c6baa3615ab380472a4ae80749","date":1582252910,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/ExportTool.JsonSink#start().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/ExportTool.JsonSink#start().mjava","sourceNew":"    @Override\n    public void start() throws IOException {\n      fos = new FileOutputStream(info.out);\n      if(info.out.endsWith(\".json.gz\") || info.out.endsWith(\".json.\")) fos = new GZIPOutputStream(fos);\n      if (info.bufferSize > 0) {\n        fos = new BufferedOutputStream(fos, info.bufferSize);\n      }\n      writer = new OutputStreamWriter(fos, StandardCharsets.UTF_8);\n\n    }\n\n","sourceOld":"    @Override\n    public void start() throws IOException {\n      fos = new FileOutputStream(info.out);\n      if (info.bufferSize > 0) {\n        fos = new BufferedOutputStream(fos, info.bufferSize);\n      }\n      writer = new OutputStreamWriter(fos, StandardCharsets.UTF_8);\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b373db031e25f03ad6783efcfb77809dcd963565":["7d383e3d651e589111e224f1cde89017eedb32ad"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7d383e3d651e589111e224f1cde89017eedb32ad":["b26d91db0d1d754936add788fa3a21acaadc9685"],"161e330a2c1ea9c6baa3615ab380472a4ae80749":["b373db031e25f03ad6783efcfb77809dcd963565"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["161e330a2c1ea9c6baa3615ab380472a4ae80749"],"b26d91db0d1d754936add788fa3a21acaadc9685":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b373db031e25f03ad6783efcfb77809dcd963565":["161e330a2c1ea9c6baa3615ab380472a4ae80749"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b26d91db0d1d754936add788fa3a21acaadc9685"],"7d383e3d651e589111e224f1cde89017eedb32ad":["b373db031e25f03ad6783efcfb77809dcd963565"],"161e330a2c1ea9c6baa3615ab380472a4ae80749":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b26d91db0d1d754936add788fa3a21acaadc9685":["7d383e3d651e589111e224f1cde89017eedb32ad"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}