{"path":"solr/core/src/java/org/apache/solr/cloud/ZkController#doGetShardIdAndNodeNameProcess(CoreDescriptor).mjava","commits":[{"id":"849494cf2f3a96af5c8c84995108ddd8456fcd04","date":1372277913,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#doGetShardIdAndNodeNameProcess(CoreDescriptor).mjava","pathOld":"/dev/null","sourceNew":"  private void doGetShardIdAndNodeNameProcess(CoreDescriptor cd) {\n    final String coreNodeName = cd.getCloudDescriptor().getCoreNodeName();\n\n    if (coreNodeName != null) {\n      waitForShardId(cd);\n    } else {\n      // if no explicit coreNodeName, we want to match by base url and core name\n      waitForCoreNodeName(cd);\n      waitForShardId(cd);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#doGetShardIdAndNodeNameProcess(CoreDescriptor).mjava","pathOld":"/dev/null","sourceNew":"  private void doGetShardIdAndNodeNameProcess(CoreDescriptor cd) {\n    final String coreNodeName = cd.getCloudDescriptor().getCoreNodeName();\n\n    if (coreNodeName != null) {\n      waitForShardId(cd);\n    } else {\n      // if no explicit coreNodeName, we want to match by base url and core name\n      waitForCoreNodeName(cd);\n      waitForShardId(cd);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20c56b78a24b25c89b1deb0a1331f7ee7af8ac7e","date":1464965423,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#doGetShardIdAndNodeNameProcess(CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController#doGetShardIdAndNodeNameProcess(CoreDescriptor).mjava","sourceNew":"  private void doGetShardIdAndNodeNameProcess(CoreDescriptor cd) throws InterruptedException {\n    final String coreNodeName = cd.getCloudDescriptor().getCoreNodeName();\n\n    if (coreNodeName != null) {\n      waitForShardId(cd);\n    } else {\n      // if no explicit coreNodeName, we want to match by base url and core name\n      waitForCoreNodeName(cd);\n      waitForShardId(cd);\n    }\n  }\n\n","sourceOld":"  private void doGetShardIdAndNodeNameProcess(CoreDescriptor cd) {\n    final String coreNodeName = cd.getCloudDescriptor().getCoreNodeName();\n\n    if (coreNodeName != null) {\n      waitForShardId(cd);\n    } else {\n      // if no explicit coreNodeName, we want to match by base url and core name\n      waitForCoreNodeName(cd);\n      waitForShardId(cd);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"650d17e953fb1d54e644f9928e3202e68b88eeb1","date":1465215234,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#doGetShardIdAndNodeNameProcess(CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController#doGetShardIdAndNodeNameProcess(CoreDescriptor).mjava","sourceNew":"  private void doGetShardIdAndNodeNameProcess(CoreDescriptor cd) {\n    final String coreNodeName = cd.getCloudDescriptor().getCoreNodeName();\n\n    if (coreNodeName != null) {\n      waitForShardId(cd);\n    } else {\n      // if no explicit coreNodeName, we want to match by base url and core name\n      waitForCoreNodeName(cd);\n      waitForShardId(cd);\n    }\n  }\n\n","sourceOld":"  private void doGetShardIdAndNodeNameProcess(CoreDescriptor cd) throws InterruptedException {\n    final String coreNodeName = cd.getCloudDescriptor().getCoreNodeName();\n\n    if (coreNodeName != null) {\n      waitForShardId(cd);\n    } else {\n      // if no explicit coreNodeName, we want to match by base url and core name\n      waitForCoreNodeName(cd);\n      waitForShardId(cd);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"191128ac5b85671b1671e2c857437694283b6ebf","date":1465297861,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#doGetShardIdAndNodeNameProcess(CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController#doGetShardIdAndNodeNameProcess(CoreDescriptor).mjava","sourceNew":"  private void doGetShardIdAndNodeNameProcess(CoreDescriptor cd) {\n    final String coreNodeName = cd.getCloudDescriptor().getCoreNodeName();\n\n    if (coreNodeName != null) {\n      waitForShardId(cd);\n    } else {\n      // if no explicit coreNodeName, we want to match by base url and core name\n      waitForCoreNodeName(cd);\n      waitForShardId(cd);\n    }\n  }\n\n","sourceOld":"  private void doGetShardIdAndNodeNameProcess(CoreDescriptor cd) throws InterruptedException {\n    final String coreNodeName = cd.getCloudDescriptor().getCoreNodeName();\n\n    if (coreNodeName != null) {\n      waitForShardId(cd);\n    } else {\n      // if no explicit coreNodeName, we want to match by base url and core name\n      waitForCoreNodeName(cd);\n      waitForShardId(cd);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"20c56b78a24b25c89b1deb0a1331f7ee7af8ac7e":["849494cf2f3a96af5c8c84995108ddd8456fcd04"],"849494cf2f3a96af5c8c84995108ddd8456fcd04":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","849494cf2f3a96af5c8c84995108ddd8456fcd04"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"650d17e953fb1d54e644f9928e3202e68b88eeb1":["20c56b78a24b25c89b1deb0a1331f7ee7af8ac7e"],"191128ac5b85671b1671e2c857437694283b6ebf":["20c56b78a24b25c89b1deb0a1331f7ee7af8ac7e","650d17e953fb1d54e644f9928e3202e68b88eeb1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["191128ac5b85671b1671e2c857437694283b6ebf"]},"commit2Childs":{"20c56b78a24b25c89b1deb0a1331f7ee7af8ac7e":["650d17e953fb1d54e644f9928e3202e68b88eeb1","191128ac5b85671b1671e2c857437694283b6ebf"],"849494cf2f3a96af5c8c84995108ddd8456fcd04":["20c56b78a24b25c89b1deb0a1331f7ee7af8ac7e","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["849494cf2f3a96af5c8c84995108ddd8456fcd04","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"650d17e953fb1d54e644f9928e3202e68b88eeb1":["191128ac5b85671b1671e2c857437694283b6ebf"],"191128ac5b85671b1671e2c857437694283b6ebf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}