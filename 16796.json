{"path":"lucene/core/src/java/org/apache/lucene/document/IntPoint#encode(int[]).mjava","commits":[{"id":"1800b996d8677670482a071dcb7a48b08c423ace","date":1456955558,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/IntPoint#encode(int[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/IntPoint#encode(Integer[]).mjava","sourceNew":"  /** Encode n-dimensional integer values into binary encoding */\n  private static byte[][] encode(int value[]) {\n    byte[][] encoded = new byte[value.length][];\n    for (int i = 0; i < value.length; i++) {\n      encoded[i] = new byte[Integer.BYTES];\n      encodeDimension(value[i], encoded[i], 0);\n    }\n    return encoded;\n  }\n\n","sourceOld":"  /** Encode n-dimensional integer values into binary encoding */\n  private static byte[][] encode(Integer value[]) {\n    byte[][] encoded = new byte[value.length][];\n    for (int i = 0; i < value.length; i++) {\n      if (value[i] != null) {\n        encoded[i] = new byte[Integer.BYTES];\n        encodeDimension(value[i], encoded[i], 0);\n      }\n    }\n    return encoded;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c422e924212367b334b4938f1fd3e44438e88c40","date":1456962933,"type":1,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/document/IntPoint#encode(int[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/IntPoint#encode(Integer[]).mjava","sourceNew":"  /** Encode n-dimensional integer values into binary encoding */\n  private static byte[][] encode(int value[]) {\n    byte[][] encoded = new byte[value.length][];\n    for (int i = 0; i < value.length; i++) {\n      encoded[i] = new byte[Integer.BYTES];\n      encodeDimension(value[i], encoded[i], 0);\n    }\n    return encoded;\n  }\n\n","sourceOld":"  /** Encode n-dimensional integer values into binary encoding */\n  private static byte[][] encode(Integer value[]) {\n    byte[][] encoded = new byte[value.length][];\n    for (int i = 0; i < value.length; i++) {\n      if (value[i] != null) {\n        encoded[i] = new byte[Integer.BYTES];\n        encodeDimension(value[i], encoded[i], 0);\n      }\n    }\n    return encoded;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/document/IntPoint#encode(int[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/IntPoint#encode(Integer[]).mjava","sourceNew":"  /** Encode n-dimensional integer values into binary encoding */\n  private static byte[][] encode(int value[]) {\n    byte[][] encoded = new byte[value.length][];\n    for (int i = 0; i < value.length; i++) {\n      encoded[i] = new byte[Integer.BYTES];\n      encodeDimension(value[i], encoded[i], 0);\n    }\n    return encoded;\n  }\n\n","sourceOld":"  /** Encode n-dimensional integer values into binary encoding */\n  private static byte[][] encode(Integer value[]) {\n    byte[][] encoded = new byte[value.length][];\n    for (int i = 0; i < value.length; i++) {\n      if (value[i] != null) {\n        encoded[i] = new byte[Integer.BYTES];\n        encodeDimension(value[i], encoded[i], 0);\n      }\n    }\n    return encoded;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"606ea169579957651185909e7264798e99e714f9","date":1458504317,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/document/IntPoint#encode(int[]).mjava","sourceNew":null,"sourceOld":"  /** Encode n-dimensional integer values into binary encoding */\n  private static byte[][] encode(int value[]) {\n    byte[][] encoded = new byte[value.length][];\n    for (int i = 0; i < value.length; i++) {\n      encoded[i] = new byte[Integer.BYTES];\n      encodeDimension(value[i], encoded[i], 0);\n    }\n    return encoded;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c422e924212367b334b4938f1fd3e44438e88c40"],"606ea169579957651185909e7264798e99e714f9":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"c422e924212367b334b4938f1fd3e44438e88c40":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1800b996d8677670482a071dcb7a48b08c423ace"],"1800b996d8677670482a071dcb7a48b08c423ace":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["606ea169579957651185909e7264798e99e714f9"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273","c422e924212367b334b4938f1fd3e44438e88c40","1800b996d8677670482a071dcb7a48b08c423ace"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["606ea169579957651185909e7264798e99e714f9"],"606ea169579957651185909e7264798e99e714f9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c422e924212367b334b4938f1fd3e44438e88c40":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"1800b996d8677670482a071dcb7a48b08c423ace":["c422e924212367b334b4938f1fd3e44438e88c40"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}