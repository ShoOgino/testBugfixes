{"path":"lucene/src/java/org/apache/lucene/index/IndexWriter#getCurrentFieldInfos().mjava","commits":[{"id":"385cc8c7649bbc88df61ace8ef058a7b9376e95f","date":1291200406,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#getCurrentFieldInfos().mjava","pathOld":"/dev/null","sourceNew":"  private FieldInfos getCurrentFieldInfos() throws IOException {\n    final FieldInfos fieldInfos;\n    if (segmentInfos.size() > 0) {\n      SegmentInfo info = segmentInfos.info(segmentInfos.size()-1);\n      Directory cfsDir;\n      if (info.getUseCompoundFile()) {\n        cfsDir = new CompoundFileReader(directory, IndexFileNames.segmentFileName(info.name, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION));\n      } else {\n        cfsDir = directory;\n      }\n      fieldInfos = new FieldInfos(cfsDir, IndexFileNames.segmentFileName(info.name, \"\", IndexFileNames.FIELD_INFOS_EXTENSION));\n      if (info.getUseCompoundFile()) {\n        cfsDir.close();\n      }\n    } else {\n      fieldInfos = new FieldInfos();\n    }\n    return fieldInfos;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#getCurrentFieldInfos().mjava","pathOld":"/dev/null","sourceNew":"  private FieldInfos getCurrentFieldInfos() throws IOException {\n    final FieldInfos fieldInfos;\n    if (segmentInfos.size() > 0) {\n      SegmentInfo info = segmentInfos.info(segmentInfos.size()-1);\n      Directory cfsDir;\n      if (info.getUseCompoundFile()) {\n        cfsDir = new CompoundFileReader(directory, IndexFileNames.segmentFileName(info.name, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION));\n      } else {\n        cfsDir = directory;\n      }\n      fieldInfos = new FieldInfos(cfsDir, IndexFileNames.segmentFileName(info.name, \"\", IndexFileNames.FIELD_INFOS_EXTENSION));\n      if (info.getUseCompoundFile()) {\n        cfsDir.close();\n      }\n    } else {\n      fieldInfos = new FieldInfos();\n    }\n    return fieldInfos;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"94cb8b3ec0439dfd8e179637ee4191cd9c6227e5","date":1292711882,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#getCurrentFieldInfos().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#getCurrentFieldInfos().mjava","sourceNew":"  private FieldInfos getCurrentFieldInfos() throws IOException {\n    final FieldInfos fieldInfos;\n    if (segmentInfos.size() > 0) {\n      if (segmentInfos.getFormat() > DefaultSegmentInfosWriter.FORMAT_4_0) {\n        // Pre-4.0 index.  In this case we sweep all\n        // segments, merging their FieldInfos:\n        fieldInfos = new FieldInfos();\n        for(SegmentInfo info : segmentInfos) {\n          final FieldInfos segFieldInfos = getFieldInfos(info);\n          final int fieldCount = segFieldInfos.size();\n          for(int fieldNumber=0;fieldNumber<fieldCount;fieldNumber++) {\n            fieldInfos.add(segFieldInfos.fieldInfo(fieldNumber));\n          }\n        }\n      } else {\n        // Already a 4.0 index; just seed the FieldInfos\n        // from the last segment\n        fieldInfos = getFieldInfos(segmentInfos.info(segmentInfos.size()-1));\n      }\n    } else {\n      fieldInfos = new FieldInfos();\n    }\n    return fieldInfos;\n  }\n\n","sourceOld":"  private FieldInfos getCurrentFieldInfos() throws IOException {\n    final FieldInfos fieldInfos;\n    if (segmentInfos.size() > 0) {\n      SegmentInfo info = segmentInfos.info(segmentInfos.size()-1);\n      Directory cfsDir;\n      if (info.getUseCompoundFile()) {\n        cfsDir = new CompoundFileReader(directory, IndexFileNames.segmentFileName(info.name, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION));\n      } else {\n        cfsDir = directory;\n      }\n      fieldInfos = new FieldInfos(cfsDir, IndexFileNames.segmentFileName(info.name, \"\", IndexFileNames.FIELD_INFOS_EXTENSION));\n      if (info.getUseCompoundFile()) {\n        cfsDir.close();\n      }\n    } else {\n      fieldInfos = new FieldInfos();\n    }\n    return fieldInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"299eb6ba23bf115afd604b3bb0b38955f14a5e94","date":1292753870,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#getCurrentFieldInfos().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#getCurrentFieldInfos().mjava","sourceNew":"  private FieldInfos getCurrentFieldInfos() throws IOException {\n    final FieldInfos fieldInfos;\n    if (segmentInfos.size() > 0) {\n      if (segmentInfos.getFormat() > DefaultSegmentInfosWriter.FORMAT_HAS_VECTORS) {\n        // Pre-4.0 index.  In this case we sweep all\n        // segments, merging their FieldInfos:\n        fieldInfos = new FieldInfos();\n        for(SegmentInfo info : segmentInfos) {\n          final FieldInfos segFieldInfos = getFieldInfos(info);\n          final int fieldCount = segFieldInfos.size();\n          for(int fieldNumber=0;fieldNumber<fieldCount;fieldNumber++) {\n            fieldInfos.add(segFieldInfos.fieldInfo(fieldNumber));\n          }\n        }\n      } else {\n        // Already a 4.0 index; just seed the FieldInfos\n        // from the last segment\n        fieldInfos = getFieldInfos(segmentInfos.info(segmentInfos.size()-1));\n      }\n    } else {\n      fieldInfos = new FieldInfos();\n    }\n    return fieldInfos;\n  }\n\n","sourceOld":"  private FieldInfos getCurrentFieldInfos() throws IOException {\n    final FieldInfos fieldInfos;\n    if (segmentInfos.size() > 0) {\n      if (segmentInfos.getFormat() > DefaultSegmentInfosWriter.FORMAT_4_0) {\n        // Pre-4.0 index.  In this case we sweep all\n        // segments, merging their FieldInfos:\n        fieldInfos = new FieldInfos();\n        for(SegmentInfo info : segmentInfos) {\n          final FieldInfos segFieldInfos = getFieldInfos(info);\n          final int fieldCount = segFieldInfos.size();\n          for(int fieldNumber=0;fieldNumber<fieldCount;fieldNumber++) {\n            fieldInfos.add(segFieldInfos.fieldInfo(fieldNumber));\n          }\n        }\n      } else {\n        // Already a 4.0 index; just seed the FieldInfos\n        // from the last segment\n        fieldInfos = getFieldInfos(segmentInfos.info(segmentInfos.size()-1));\n      }\n    } else {\n      fieldInfos = new FieldInfos();\n    }\n    return fieldInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#getCurrentFieldInfos().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#getCurrentFieldInfos().mjava","sourceNew":"  private FieldInfos getCurrentFieldInfos() throws IOException {\n    final FieldInfos fieldInfos;\n    if (segmentInfos.size() > 0) {\n      if (segmentInfos.getFormat() > DefaultSegmentInfosWriter.FORMAT_HAS_VECTORS) {\n        // Pre-4.0 index.  In this case we sweep all\n        // segments, merging their FieldInfos:\n        fieldInfos = new FieldInfos();\n        for(SegmentInfo info : segmentInfos) {\n          final FieldInfos segFieldInfos = getFieldInfos(info);\n          final int fieldCount = segFieldInfos.size();\n          for(int fieldNumber=0;fieldNumber<fieldCount;fieldNumber++) {\n            fieldInfos.add(segFieldInfos.fieldInfo(fieldNumber));\n          }\n        }\n      } else {\n        // Already a 4.0 index; just seed the FieldInfos\n        // from the last segment\n        fieldInfos = getFieldInfos(segmentInfos.info(segmentInfos.size()-1));\n      }\n    } else {\n      fieldInfos = new FieldInfos();\n    }\n    return fieldInfos;\n  }\n\n","sourceOld":"  private FieldInfos getCurrentFieldInfos() throws IOException {\n    final FieldInfos fieldInfos;\n    if (segmentInfos.size() > 0) {\n      SegmentInfo info = segmentInfos.info(segmentInfos.size()-1);\n      Directory cfsDir;\n      if (info.getUseCompoundFile()) {\n        cfsDir = new CompoundFileReader(directory, IndexFileNames.segmentFileName(info.name, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION));\n      } else {\n        cfsDir = directory;\n      }\n      fieldInfos = new FieldInfos(cfsDir, IndexFileNames.segmentFileName(info.name, \"\", IndexFileNames.FIELD_INFOS_EXTENSION));\n      if (info.getUseCompoundFile()) {\n        cfsDir.close();\n      }\n    } else {\n      fieldInfos = new FieldInfos();\n    }\n    return fieldInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#getCurrentFieldInfos().mjava","pathOld":"/dev/null","sourceNew":"  private FieldInfos getCurrentFieldInfos() throws IOException {\n    final FieldInfos fieldInfos;\n    if (segmentInfos.size() > 0) {\n      if (segmentInfos.getFormat() > DefaultSegmentInfosWriter.FORMAT_HAS_VECTORS) {\n        // Pre-4.0 index.  In this case we sweep all\n        // segments, merging their FieldInfos:\n        fieldInfos = new FieldInfos();\n        for(SegmentInfo info : segmentInfos) {\n          final FieldInfos segFieldInfos = getFieldInfos(info);\n          final int fieldCount = segFieldInfos.size();\n          for(int fieldNumber=0;fieldNumber<fieldCount;fieldNumber++) {\n            fieldInfos.add(segFieldInfos.fieldInfo(fieldNumber));\n          }\n        }\n      } else {\n        // Already a 4.0 index; just seed the FieldInfos\n        // from the last segment\n        fieldInfos = getFieldInfos(segmentInfos.info(segmentInfos.size()-1));\n      }\n    } else {\n      fieldInfos = new FieldInfos();\n    }\n    return fieldInfos;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0c7a8f7304b75b1528814c5820fa23a96816c27","date":1298314239,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#getCurrentFieldInfos().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#getCurrentFieldInfos().mjava","sourceNew":"  private FieldInfos getCurrentFieldInfos() throws IOException {\n    final FieldInfos fieldInfos;\n    if (segmentInfos.size() > 0) {\n        fieldInfos = new FieldInfos();\n        for(SegmentInfo info : segmentInfos) {\n          final FieldInfos segFieldInfos = getFieldInfos(info);\n        for (FieldInfo fi : segFieldInfos) {\n          fieldInfos.add(fi);\n          }\n        }\n      } else {\n      fieldInfos = new FieldInfos();\n    }\n    return fieldInfos;\n  }\n\n","sourceOld":"  private FieldInfos getCurrentFieldInfos() throws IOException {\n    final FieldInfos fieldInfos;\n    if (segmentInfos.size() > 0) {\n      if (segmentInfos.getFormat() > DefaultSegmentInfosWriter.FORMAT_HAS_VECTORS) {\n        // Pre-4.0 index.  In this case we sweep all\n        // segments, merging their FieldInfos:\n        fieldInfos = new FieldInfos();\n        for(SegmentInfo info : segmentInfos) {\n          final FieldInfos segFieldInfos = getFieldInfos(info);\n          final int fieldCount = segFieldInfos.size();\n          for(int fieldNumber=0;fieldNumber<fieldCount;fieldNumber++) {\n            fieldInfos.add(segFieldInfos.fieldInfo(fieldNumber));\n          }\n        }\n      } else {\n        // Already a 4.0 index; just seed the FieldInfos\n        // from the last segment\n        fieldInfos = getFieldInfos(segmentInfos.info(segmentInfos.size()-1));\n      }\n    } else {\n      fieldInfos = new FieldInfos();\n    }\n    return fieldInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#getCurrentFieldInfos().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#getCurrentFieldInfos().mjava","sourceNew":"  private FieldInfos getCurrentFieldInfos() throws IOException {\n    final FieldInfos fieldInfos;\n    if (segmentInfos.size() > 0) {\n        fieldInfos = new FieldInfos();\n        for(SegmentInfo info : segmentInfos) {\n          final FieldInfos segFieldInfos = getFieldInfos(info);\n          for (FieldInfo fi : segFieldInfos) {\n            fieldInfos.add(fi);\n          }\n        }\n      } else {\n      fieldInfos = new FieldInfos();\n    }\n    return fieldInfos;\n  }\n\n","sourceOld":"  private FieldInfos getCurrentFieldInfos() throws IOException {\n    final FieldInfos fieldInfos;\n    if (segmentInfos.size() > 0) {\n      if (segmentInfos.getFormat() > DefaultSegmentInfosWriter.FORMAT_HAS_VECTORS) {\n        // Pre-4.0 index.  In this case we sweep all\n        // segments, merging their FieldInfos:\n        fieldInfos = new FieldInfos();\n        for(SegmentInfo info : segmentInfos) {\n          final FieldInfos segFieldInfos = getFieldInfos(info);\n          final int fieldCount = segFieldInfos.size();\n          for(int fieldNumber=0;fieldNumber<fieldCount;fieldNumber++) {\n            fieldInfos.add(segFieldInfos.fieldInfo(fieldNumber));\n          }\n        }\n      } else {\n        // Already a 4.0 index; just seed the FieldInfos\n        // from the last segment\n        fieldInfos = getFieldInfos(segmentInfos.info(segmentInfos.size()-1));\n      }\n    } else {\n      fieldInfos = new FieldInfos();\n    }\n    return fieldInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b557198058275e3f7a063a47d60c1f94426bc5e","date":1298804526,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#getCurrentFieldInfos().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#getCurrentFieldInfos().mjava","sourceNew":"  private FieldInfos getCurrentFieldInfos() throws IOException {\n    final FieldInfos fieldInfos;\n    if (segmentInfos.size() > 0) {\n      fieldInfos = new FieldInfos();\n      for(SegmentInfo info : segmentInfos) {\n        final FieldInfos segFieldInfos = getFieldInfos(info);\n        for (FieldInfo fi : segFieldInfos) {\n          fieldInfos.add(fi);\n        }\n      }\n    } else {\n      fieldInfos = new FieldInfos();\n    }\n    return fieldInfos;\n  }\n\n","sourceOld":"  private FieldInfos getCurrentFieldInfos() throws IOException {\n    final FieldInfos fieldInfos;\n    if (segmentInfos.size() > 0) {\n        fieldInfos = new FieldInfos();\n        for(SegmentInfo info : segmentInfos) {\n          final FieldInfos segFieldInfos = getFieldInfos(info);\n        for (FieldInfo fi : segFieldInfos) {\n          fieldInfos.add(fi);\n          }\n        }\n      } else {\n      fieldInfos = new FieldInfos();\n    }\n    return fieldInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"14ec33385f6fbb6ce172882d14605790418a5d31","date":1298910796,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#getCurrentFieldInfos().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#getCurrentFieldInfos().mjava","sourceNew":"  private FieldInfos getCurrentFieldInfos() throws IOException {\n    final FieldInfos fieldInfos;\n    if (segmentInfos.size() > 0) {\n      if (segmentInfos.getFormat() > DefaultSegmentInfosWriter.FORMAT_HAS_VECTORS) {\n        // Pre-4.0 index.  In this case we sweep all\n        // segments, merging their FieldInfos:\n        fieldInfos = new FieldInfos();\n        for(SegmentInfo info : segmentInfos) {\n          final FieldInfos segFieldInfos = getFieldInfos(info);\n          final int fieldCount = segFieldInfos.size();\n          for(int fieldNumber=0;fieldNumber<fieldCount;fieldNumber++) {\n            fieldInfos.add(segFieldInfos.fieldInfo(fieldNumber));\n        }\n      }\n    } else {\n        // Already a 4.0 index; just seed the FieldInfos\n        // from the last segment\n        fieldInfos = getFieldInfos(segmentInfos.info(segmentInfos.size()-1));\n      }\n    } else {\n      fieldInfos = new FieldInfos();\n    }\n    return fieldInfos;\n  }\n\n","sourceOld":"  private FieldInfos getCurrentFieldInfos() throws IOException {\n    final FieldInfos fieldInfos;\n    if (segmentInfos.size() > 0) {\n      fieldInfos = new FieldInfos();\n      for(SegmentInfo info : segmentInfos) {\n        final FieldInfos segFieldInfos = getFieldInfos(info);\n        for (FieldInfo fi : segFieldInfos) {\n          fieldInfos.add(fi);\n        }\n      }\n    } else {\n      fieldInfos = new FieldInfos();\n    }\n    return fieldInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1224a4027481acce15495b03bce9b48b93b42722","date":1300792329,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#getCurrentFieldInfos().mjava","sourceNew":null,"sourceOld":"  private FieldInfos getCurrentFieldInfos() throws IOException {\n    final FieldInfos fieldInfos;\n    if (segmentInfos.size() > 0) {\n      if (segmentInfos.getFormat() > DefaultSegmentInfosWriter.FORMAT_HAS_VECTORS) {\n        // Pre-4.0 index.  In this case we sweep all\n        // segments, merging their FieldInfos:\n        fieldInfos = new FieldInfos();\n        for(SegmentInfo info : segmentInfos) {\n          final FieldInfos segFieldInfos = getFieldInfos(info);\n          final int fieldCount = segFieldInfos.size();\n          for(int fieldNumber=0;fieldNumber<fieldCount;fieldNumber++) {\n            fieldInfos.add(segFieldInfos.fieldInfo(fieldNumber));\n        }\n      }\n    } else {\n        // Already a 4.0 index; just seed the FieldInfos\n        // from the last segment\n        fieldInfos = getFieldInfos(segmentInfos.info(segmentInfos.size()-1));\n      }\n    } else {\n      fieldInfos = new FieldInfos();\n    }\n    return fieldInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#getCurrentFieldInfos().mjava","sourceNew":null,"sourceOld":"  private FieldInfos getCurrentFieldInfos() throws IOException {\n    final FieldInfos fieldInfos;\n    if (segmentInfos.size() > 0) {\n      if (segmentInfos.getFormat() > DefaultSegmentInfosWriter.FORMAT_HAS_VECTORS) {\n        // Pre-4.0 index.  In this case we sweep all\n        // segments, merging their FieldInfos:\n        fieldInfos = new FieldInfos();\n        for(SegmentInfo info : segmentInfos) {\n          final FieldInfos segFieldInfos = getFieldInfos(info);\n          final int fieldCount = segFieldInfos.size();\n          for(int fieldNumber=0;fieldNumber<fieldCount;fieldNumber++) {\n            fieldInfos.add(segFieldInfos.fieldInfo(fieldNumber));\n          }\n        }\n      } else {\n        // Already a 4.0 index; just seed the FieldInfos\n        // from the last segment\n        fieldInfos = getFieldInfos(segmentInfos.info(segmentInfos.size()-1));\n      }\n    } else {\n      fieldInfos = new FieldInfos();\n    }\n    return fieldInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#getCurrentFieldInfos().mjava","sourceNew":null,"sourceOld":"  private FieldInfos getCurrentFieldInfos() throws IOException {\n    final FieldInfos fieldInfos;\n    if (segmentInfos.size() > 0) {\n        fieldInfos = new FieldInfos();\n        for(SegmentInfo info : segmentInfos) {\n          final FieldInfos segFieldInfos = getFieldInfos(info);\n          for (FieldInfo fi : segFieldInfos) {\n            fieldInfos.add(fi);\n          }\n        }\n      } else {\n      fieldInfos = new FieldInfos();\n    }\n    return fieldInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["3bb13258feba31ab676502787ab2e1779f129b7a","299eb6ba23bf115afd604b3bb0b38955f14a5e94"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","299eb6ba23bf115afd604b3bb0b38955f14a5e94"],"385cc8c7649bbc88df61ace8ef058a7b9376e95f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["bde51b089eb7f86171eb3406e38a274743f9b7ac","1224a4027481acce15495b03bce9b48b93b42722"],"14ec33385f6fbb6ce172882d14605790418a5d31":["4b557198058275e3f7a063a47d60c1f94426bc5e"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","1224a4027481acce15495b03bce9b48b93b42722"],"b0c7a8f7304b75b1528814c5820fa23a96816c27":["299eb6ba23bf115afd604b3bb0b38955f14a5e94"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"299eb6ba23bf115afd604b3bb0b38955f14a5e94":["94cb8b3ec0439dfd8e179637ee4191cd9c6227e5"],"94cb8b3ec0439dfd8e179637ee4191cd9c6227e5":["385cc8c7649bbc88df61ace8ef058a7b9376e95f"],"4b557198058275e3f7a063a47d60c1f94426bc5e":["b0c7a8f7304b75b1528814c5820fa23a96816c27"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b0c7a8f7304b75b1528814c5820fa23a96816c27"],"3bb13258feba31ab676502787ab2e1779f129b7a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","385cc8c7649bbc88df61ace8ef058a7b9376e95f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1224a4027481acce15495b03bce9b48b93b42722"],"1224a4027481acce15495b03bce9b48b93b42722":["14ec33385f6fbb6ce172882d14605790418a5d31"]},"commit2Childs":{"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"385cc8c7649bbc88df61ace8ef058a7b9376e95f":["94cb8b3ec0439dfd8e179637ee4191cd9c6227e5","3bb13258feba31ab676502787ab2e1779f129b7a"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"14ec33385f6fbb6ce172882d14605790418a5d31":["1224a4027481acce15495b03bce9b48b93b42722"],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"b0c7a8f7304b75b1528814c5820fa23a96816c27":["4b557198058275e3f7a063a47d60c1f94426bc5e","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","385cc8c7649bbc88df61ace8ef058a7b9376e95f","3bb13258feba31ab676502787ab2e1779f129b7a"],"299eb6ba23bf115afd604b3bb0b38955f14a5e94":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b0c7a8f7304b75b1528814c5820fa23a96816c27"],"94cb8b3ec0439dfd8e179637ee4191cd9c6227e5":["299eb6ba23bf115afd604b3bb0b38955f14a5e94"],"4b557198058275e3f7a063a47d60c1f94426bc5e":["14ec33385f6fbb6ce172882d14605790418a5d31"],"3bb13258feba31ab676502787ab2e1779f129b7a":["ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"1224a4027481acce15495b03bce9b48b93b42722":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}