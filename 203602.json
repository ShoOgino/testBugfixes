{"path":"solr/core/src/java/org/apache/solr/search/join/BlockJoinFacetAccsHolder#incrementFacets(int).mjava","commits":[{"id":"c7368def5a7dda562981cf936054217291690b88","date":1471606585,"type":1,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/BlockJoinFacetAccsHolder#incrementFacets(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/BlockJoinFacetCollector#incrementFacets(int).mjava","sourceNew":"  protected void incrementFacets(int parent) throws IOException {\n    final int[] docNums = blockJoinScorer.swapChildDocs(childDocs);\n    // now we don't\n    //includeParentDoc(parent);\n    //final int childCountPlusParent = childTracking.getChildCount()+1;\n    final int childCountNoParent = blockJoinScorer.getChildCount();\n    final SortedIntsAggDocIterator iter = new SortedIntsAggDocIterator(docNums, childCountNoParent, parent);\n    countFacets(iter);\n  }\n\n","sourceOld":"  protected void incrementFacets(int parent) throws IOException {\n    final int[] docNums = blockJoinScorer.swapChildDocs(childDocs);\n    // now we don't\n    //includeParentDoc(parent);\n    //final int childCountPlusParent = childTracking.getChildCount()+1;\n    final int childCountNoParent = blockJoinScorer.getChildCount();\n    final SortedIntsAggDocIterator iter = new SortedIntsAggDocIterator(docNums, childCountNoParent, parent);\n    countFacets(iter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/join/BlockJoinFacetAccsHolder#incrementFacets(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/BlockJoinFacetCollector#incrementFacets(int).mjava","sourceNew":"  protected void incrementFacets(int parent) throws IOException {\n    final int[] docNums = blockJoinScorer.swapChildDocs(childDocs);\n    // now we don't\n    //includeParentDoc(parent);\n    //final int childCountPlusParent = childTracking.getChildCount()+1;\n    final int childCountNoParent = blockJoinScorer.getChildCount();\n    final SortedIntsAggDocIterator iter = new SortedIntsAggDocIterator(docNums, childCountNoParent, parent);\n    countFacets(iter);\n  }\n\n","sourceOld":"  protected void incrementFacets(int parent) throws IOException {\n    final int[] docNums = blockJoinScorer.swapChildDocs(childDocs);\n    // now we don't\n    //includeParentDoc(parent);\n    //final int childCountPlusParent = childTracking.getChildCount()+1;\n    final int childCountNoParent = blockJoinScorer.getChildCount();\n    final SortedIntsAggDocIterator iter = new SortedIntsAggDocIterator(docNums, childCountNoParent, parent);\n    countFacets(iter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/join/BlockJoinFacetAccsHolder#incrementFacets(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/BlockJoinFacetCollector#incrementFacets(int).mjava","sourceNew":"  protected void incrementFacets(int parent) throws IOException {\n    final int[] docNums = blockJoinScorer.swapChildDocs(childDocs);\n    // now we don't\n    //includeParentDoc(parent);\n    //final int childCountPlusParent = childTracking.getChildCount()+1;\n    final int childCountNoParent = blockJoinScorer.getChildCount();\n    final SortedIntsAggDocIterator iter = new SortedIntsAggDocIterator(docNums, childCountNoParent, parent);\n    countFacets(iter);\n  }\n\n","sourceOld":"  protected void incrementFacets(int parent) throws IOException {\n    final int[] docNums = blockJoinScorer.swapChildDocs(childDocs);\n    // now we don't\n    //includeParentDoc(parent);\n    //final int childCountPlusParent = childTracking.getChildCount()+1;\n    final int childCountNoParent = blockJoinScorer.getChildCount();\n    final SortedIntsAggDocIterator iter = new SortedIntsAggDocIterator(docNums, childCountNoParent, parent);\n    countFacets(iter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d9452e13e015fa1187b0b1bed1a1d08b9c96241","date":1485723373,"type":4,"author":"Martijn van Groningen","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/join/BlockJoinFacetAccsHolder#incrementFacets(int).mjava","sourceNew":null,"sourceOld":"  protected void incrementFacets(int parent) throws IOException {\n    final int[] docNums = blockJoinScorer.swapChildDocs(childDocs);\n    // now we don't\n    //includeParentDoc(parent);\n    //final int childCountPlusParent = childTracking.getChildCount()+1;\n    final int childCountNoParent = blockJoinScorer.getChildCount();\n    final SortedIntsAggDocIterator iter = new SortedIntsAggDocIterator(docNums, childCountNoParent, parent);\n    countFacets(iter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c3523a0ab04c3002eee3896c75ea5f10f388bcc","date":1485968422,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/join/BlockJoinFacetAccsHolder#incrementFacets(int).mjava","sourceNew":null,"sourceOld":"  protected void incrementFacets(int parent) throws IOException {\n    final int[] docNums = blockJoinScorer.swapChildDocs(childDocs);\n    // now we don't\n    //includeParentDoc(parent);\n    //final int childCountPlusParent = childTracking.getChildCount()+1;\n    final int childCountNoParent = blockJoinScorer.getChildCount();\n    final SortedIntsAggDocIterator iter = new SortedIntsAggDocIterator(docNums, childCountNoParent, parent);\n    countFacets(iter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"403d05f7f8d69b65659157eff1bc1d2717f04c66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c7368def5a7dda562981cf936054217291690b88"],"c7368def5a7dda562981cf936054217291690b88":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","9d9452e13e015fa1187b0b1bed1a1d08b9c96241"],"9d9452e13e015fa1187b0b1bed1a1d08b9c96241":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","403d05f7f8d69b65659157eff1bc1d2717f04c66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9d9452e13e015fa1187b0b1bed1a1d08b9c96241"]},"commit2Childs":{"403d05f7f8d69b65659157eff1bc1d2717f04c66":["9d9452e13e015fa1187b0b1bed1a1d08b9c96241","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"c7368def5a7dda562981cf936054217291690b88":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["403d05f7f8d69b65659157eff1bc1d2717f04c66","c7368def5a7dda562981cf936054217291690b88","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":[],"9d9452e13e015fa1187b0b1bed1a1d08b9c96241":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}