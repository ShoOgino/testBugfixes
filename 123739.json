{"path":"solr/core/src/test/org/apache/solr/schema/IndexSchemaTest#testSimilarityProviderFactory().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/IndexSchemaTest#testSimilarityProviderFactory().mjava","pathOld":"solr/src/test/org/apache/solr/schema/IndexSchemaTest#testSimilarityProviderFactory().mjava","sourceNew":"  @Test\n  public void testSimilarityProviderFactory() {\n    SolrCore core = h.getCore();\n    SimilarityProvider similarityProvider = core.getSchema().getSimilarityProvider();\n    assertTrue(\"wrong class\", similarityProvider instanceof MockConfigurableSimilarityProvider);\n    assertEquals(\"is there an echo?\", ((MockConfigurableSimilarityProvider)similarityProvider).getPassthrough());\n  }\n\n","sourceOld":"  @Test\n  public void testSimilarityProviderFactory() {\n    SolrCore core = h.getCore();\n    SimilarityProvider similarityProvider = core.getSchema().getSimilarityProvider();\n    assertTrue(\"wrong class\", similarityProvider instanceof MockConfigurableSimilarityProvider);\n    assertEquals(\"is there an echo?\", ((MockConfigurableSimilarityProvider)similarityProvider).getPassthrough());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/IndexSchemaTest#testSimilarityProviderFactory().mjava","pathOld":"solr/src/test/org/apache/solr/schema/IndexSchemaTest#testSimilarityProviderFactory().mjava","sourceNew":"  @Test\n  public void testSimilarityProviderFactory() {\n    SolrCore core = h.getCore();\n    SimilarityProvider similarityProvider = core.getSchema().getSimilarityProvider();\n    assertTrue(\"wrong class\", similarityProvider instanceof MockConfigurableSimilarityProvider);\n    assertEquals(\"is there an echo?\", ((MockConfigurableSimilarityProvider)similarityProvider).getPassthrough());\n  }\n\n","sourceOld":"  @Test\n  public void testSimilarityProviderFactory() {\n    SolrCore core = h.getCore();\n    SimilarityProvider similarityProvider = core.getSchema().getSimilarityProvider();\n    assertTrue(\"wrong class\", similarityProvider instanceof MockConfigurableSimilarityProvider);\n    assertEquals(\"is there an echo?\", ((MockConfigurableSimilarityProvider)similarityProvider).getPassthrough());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/IndexSchemaTest#testSimilarityProviderFactory().mjava","pathOld":"solr/src/test/org/apache/solr/schema/IndexSchemaTest#testSimilarityProviderFactory().mjava","sourceNew":"  @Test\n  public void testSimilarityProviderFactory() {\n    SolrCore core = h.getCore();\n    SimilarityProvider similarityProvider = core.getSchema().getSimilarityProvider();\n    assertTrue(\"wrong class\", similarityProvider instanceof MockConfigurableSimilarityProvider);\n    assertEquals(\"is there an echo?\", ((MockConfigurableSimilarityProvider)similarityProvider).getPassthrough());\n  }\n\n","sourceOld":"  @Test\n  public void testSimilarityProviderFactory() {\n    SolrCore core = h.getCore();\n    SimilarityProvider similarityProvider = core.getSchema().getSimilarityProvider();\n    assertTrue(\"wrong class\", similarityProvider instanceof MockConfigurableSimilarityProvider);\n    assertEquals(\"is there an echo?\", ((MockConfigurableSimilarityProvider)similarityProvider).getPassthrough());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa6d0ca44ce171ad041951fa8fb94731b7d778d9","date":1316629244,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/similarities/TestPerFieldSimilarity#testSimilarityProviderFactory().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/IndexSchemaTest#testSimilarityProviderFactory().mjava","sourceNew":"  @Test\n  public void testSimilarityProviderFactory() {\n    SolrCore core = h.getCore();\n    SimilarityProvider similarityProvider = core.getSchema().getSimilarityProvider();\n    assertTrue(\"wrong class\", similarityProvider instanceof MockConfigurableSimilarityProvider);\n    assertEquals(\"is there an echo?\", ((MockConfigurableSimilarityProvider)similarityProvider).getPassthrough());\n  }\n\n","sourceOld":"  @Test\n  public void testSimilarityProviderFactory() {\n    SolrCore core = h.getCore();\n    SimilarityProvider similarityProvider = core.getSchema().getSimilarityProvider();\n    assertTrue(\"wrong class\", similarityProvider instanceof MockConfigurableSimilarityProvider);\n    assertEquals(\"is there an echo?\", ((MockConfigurableSimilarityProvider)similarityProvider).getPassthrough());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f49143da0a5d278a72f741432047fcfa6da996e","date":1316927425,"type":0,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/IndexSchemaTest#testSimilarityProviderFactory().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSimilarityProviderFactory() {\n    SolrCore core = h.getCore();\n    SimilarityProvider similarityProvider = core.getSchema().getSimilarityProvider();\n    assertTrue(\"wrong class\", similarityProvider instanceof MockConfigurableSimilarityProvider);\n    assertEquals(\"is there an echo?\", ((MockConfigurableSimilarityProvider)similarityProvider).getPassthrough());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b","date":1328532481,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/schema/IndexSchemaTest#testSimilarityProviderFactory().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testSimilarityProviderFactory() {\n    SolrCore core = h.getCore();\n    SimilarityProvider similarityProvider = core.getSchema().getSimilarityProvider();\n    assertTrue(\"wrong class\", similarityProvider instanceof MockConfigurableSimilarityProvider);\n    assertEquals(\"is there an echo?\", ((MockConfigurableSimilarityProvider)similarityProvider).getPassthrough());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aa6d0ca44ce171ad041951fa8fb94731b7d778d9":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2f49143da0a5d278a72f741432047fcfa6da996e":["aa6d0ca44ce171ad041951fa8fb94731b7d778d9"],"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b":["2f49143da0a5d278a72f741432047fcfa6da996e"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"aa6d0ca44ce171ad041951fa8fb94731b7d778d9":["2f49143da0a5d278a72f741432047fcfa6da996e"],"c26f00b574427b55127e869b935845554afde1fa":["aa6d0ca44ce171ad041951fa8fb94731b7d778d9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"2f49143da0a5d278a72f741432047fcfa6da996e":["1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b"],"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}