{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testPutNullTest().mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testPutNullTest().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#testPutNullTest().mjava","sourceNew":"  @Test\n  public void testPutNullTest(){\n    String xml = \"<root>\\n\" +\n            \"  <i>\\n\" +\n            \"    <x>\\n\" +\n            \"      <a>A.1.1</a>\\n\" +\n            \"      <b>B.1.1</b>\\n\" +\n            \"    </x>\\n\" +\n            \"    <x>\\n\" +\n            \"      <b>B.1.2</b>\\n\" +\n            \"      <c>C.1.2</c>\\n\" +\n            \"    </x>\\n\" +\n            \"  </i>\\n\" +\n            \"  <i>\\n\" +\n            \"    <x>\\n\" +\n            \"      <a>A.2.1</a>\\n\" +\n            \"      <c>C.2.1</c>\\n\" +\n            \"    </x>\\n\" +\n            \"    <x>\\n\" +\n            \"      <b>B.2.2</b>\\n\" +\n            \"      <c>C.2.2</c>\\n\" +\n            \"    </x>\\n\" +\n            \"  </i>\\n\" +\n            \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/i\");\n    rr.addField(\"a\", \"/root/i/x/a\", true);\n    rr.addField(\"b\", \"/root/i/x/b\", true);\n    rr.addField(\"c\", \"/root/i/x/c\", true);\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    Map<String, Object> map = l.get(0);\n    List<String> a = (List<String>) map.get(\"a\");\n    List<String> b = (List<String>) map.get(\"b\");\n    List<String> c = (List<String>) map.get(\"c\");\n\n    assertEquals(\"A.1.1\",a.get(0));\n    assertEquals(\"B.1.1\",b.get(0));\n    assertNull(c.get(0));\n\n    assertNull(a.get(1));\n    assertEquals(\"B.1.2\",b.get(1));\n    assertEquals(\"C.1.2\",c.get(1));\n\n    map = l.get(1);\n    a = (List<String>) map.get(\"a\");\n    b = (List<String>) map.get(\"b\");\n    c = (List<String>) map.get(\"c\");\n    assertEquals(\"A.2.1\",a.get(0));\n    assertNull(b.get(0));\n    assertEquals(\"C.2.1\",c.get(0));\n\n    assertNull(a.get(1));\n    assertEquals(\"B.2.2\",b.get(1));\n    assertEquals(\"C.2.2\",c.get(1));\n  }\n\n","sourceOld":"  @Test\n  public void testPutNullTest(){\n    String xml = \"<root>\\n\" +\n            \"  <i>\\n\" +\n            \"    <x>\\n\" +\n            \"      <a>A.1.1</a>\\n\" +\n            \"      <b>B.1.1</b>\\n\" +\n            \"    </x>\\n\" +\n            \"    <x>\\n\" +\n            \"      <b>B.1.2</b>\\n\" +\n            \"      <c>C.1.2</c>\\n\" +\n            \"    </x>\\n\" +\n            \"  </i>\\n\" +\n            \"  <i>\\n\" +\n            \"    <x>\\n\" +\n            \"      <a>A.2.1</a>\\n\" +\n            \"      <c>C.2.1</c>\\n\" +\n            \"    </x>\\n\" +\n            \"    <x>\\n\" +\n            \"      <b>B.2.2</b>\\n\" +\n            \"      <c>C.2.2</c>\\n\" +\n            \"    </x>\\n\" +\n            \"  </i>\\n\" +\n            \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/i\");\n    rr.addField(\"a\", \"/root/i/x/a\", true);\n    rr.addField(\"b\", \"/root/i/x/b\", true);\n    rr.addField(\"c\", \"/root/i/x/c\", true);\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    Map<String, Object> map = l.get(0);\n    List<String> a = (List<String>) map.get(\"a\");\n    List<String> b = (List<String>) map.get(\"b\");\n    List<String> c = (List<String>) map.get(\"c\");\n\n    assertEquals(\"A.1.1\",a.get(0));\n    assertEquals(\"B.1.1\",b.get(0));\n    assertNull(c.get(0));\n\n    assertNull(a.get(1));\n    assertEquals(\"B.1.2\",b.get(1));\n    assertEquals(\"C.1.2\",c.get(1));\n\n    map = l.get(1);\n    a = (List<String>) map.get(\"a\");\n    b = (List<String>) map.get(\"b\");\n    c = (List<String>) map.get(\"c\");\n    assertEquals(\"A.2.1\",a.get(0));\n    assertNull(b.get(0));\n    assertEquals(\"C.2.1\",c.get(0));\n\n    assertNull(a.get(1));\n    assertEquals(\"B.2.2\",b.get(1));\n    assertEquals(\"C.2.2\",c.get(1));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testPutNullTest().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#testPutNullTest().mjava","sourceNew":"  @Test\n  public void testPutNullTest(){\n    String xml = \"<root>\\n\" +\n            \"  <i>\\n\" +\n            \"    <x>\\n\" +\n            \"      <a>A.1.1</a>\\n\" +\n            \"      <b>B.1.1</b>\\n\" +\n            \"    </x>\\n\" +\n            \"    <x>\\n\" +\n            \"      <b>B.1.2</b>\\n\" +\n            \"      <c>C.1.2</c>\\n\" +\n            \"    </x>\\n\" +\n            \"  </i>\\n\" +\n            \"  <i>\\n\" +\n            \"    <x>\\n\" +\n            \"      <a>A.2.1</a>\\n\" +\n            \"      <c>C.2.1</c>\\n\" +\n            \"    </x>\\n\" +\n            \"    <x>\\n\" +\n            \"      <b>B.2.2</b>\\n\" +\n            \"      <c>C.2.2</c>\\n\" +\n            \"    </x>\\n\" +\n            \"  </i>\\n\" +\n            \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/i\");\n    rr.addField(\"a\", \"/root/i/x/a\", true);\n    rr.addField(\"b\", \"/root/i/x/b\", true);\n    rr.addField(\"c\", \"/root/i/x/c\", true);\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    Map<String, Object> map = l.get(0);\n    List<String> a = (List<String>) map.get(\"a\");\n    List<String> b = (List<String>) map.get(\"b\");\n    List<String> c = (List<String>) map.get(\"c\");\n\n    assertEquals(\"A.1.1\",a.get(0));\n    assertEquals(\"B.1.1\",b.get(0));\n    assertNull(c.get(0));\n\n    assertNull(a.get(1));\n    assertEquals(\"B.1.2\",b.get(1));\n    assertEquals(\"C.1.2\",c.get(1));\n\n    map = l.get(1);\n    a = (List<String>) map.get(\"a\");\n    b = (List<String>) map.get(\"b\");\n    c = (List<String>) map.get(\"c\");\n    assertEquals(\"A.2.1\",a.get(0));\n    assertNull(b.get(0));\n    assertEquals(\"C.2.1\",c.get(0));\n\n    assertNull(a.get(1));\n    assertEquals(\"B.2.2\",b.get(1));\n    assertEquals(\"C.2.2\",c.get(1));\n  }\n\n","sourceOld":"  @Test\n  public void testPutNullTest(){\n    String xml = \"<root>\\n\" +\n            \"  <i>\\n\" +\n            \"    <x>\\n\" +\n            \"      <a>A.1.1</a>\\n\" +\n            \"      <b>B.1.1</b>\\n\" +\n            \"    </x>\\n\" +\n            \"    <x>\\n\" +\n            \"      <b>B.1.2</b>\\n\" +\n            \"      <c>C.1.2</c>\\n\" +\n            \"    </x>\\n\" +\n            \"  </i>\\n\" +\n            \"  <i>\\n\" +\n            \"    <x>\\n\" +\n            \"      <a>A.2.1</a>\\n\" +\n            \"      <c>C.2.1</c>\\n\" +\n            \"    </x>\\n\" +\n            \"    <x>\\n\" +\n            \"      <b>B.2.2</b>\\n\" +\n            \"      <c>C.2.2</c>\\n\" +\n            \"    </x>\\n\" +\n            \"  </i>\\n\" +\n            \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/i\");\n    rr.addField(\"a\", \"/root/i/x/a\", true);\n    rr.addField(\"b\", \"/root/i/x/b\", true);\n    rr.addField(\"c\", \"/root/i/x/c\", true);\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    Map<String, Object> map = l.get(0);\n    List<String> a = (List<String>) map.get(\"a\");\n    List<String> b = (List<String>) map.get(\"b\");\n    List<String> c = (List<String>) map.get(\"c\");\n\n    assertEquals(\"A.1.1\",a.get(0));\n    assertEquals(\"B.1.1\",b.get(0));\n    assertNull(c.get(0));\n\n    assertNull(a.get(1));\n    assertEquals(\"B.1.2\",b.get(1));\n    assertEquals(\"C.1.2\",c.get(1));\n\n    map = l.get(1);\n    a = (List<String>) map.get(\"a\");\n    b = (List<String>) map.get(\"b\");\n    c = (List<String>) map.get(\"c\");\n    assertEquals(\"A.2.1\",a.get(0));\n    assertNull(b.get(0));\n    assertEquals(\"C.2.1\",c.get(0));\n\n    assertNull(a.get(1));\n    assertEquals(\"B.2.2\",b.get(1));\n    assertEquals(\"C.2.2\",c.get(1));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"024e13388acbf5562fcbb77a129620982a5e2d79","date":1591531835,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testPutNullTest().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testPutNullTest().mjava","sourceNew":"  @Test\n  @SuppressWarnings({\"unchecked\"})\n  public void testPutNullTest(){\n    String xml = \"<root>\\n\" +\n            \"  <i>\\n\" +\n            \"    <x>\\n\" +\n            \"      <a>A.1.1</a>\\n\" +\n            \"      <b>B.1.1</b>\\n\" +\n            \"    </x>\\n\" +\n            \"    <x>\\n\" +\n            \"      <b>B.1.2</b>\\n\" +\n            \"      <c>C.1.2</c>\\n\" +\n            \"    </x>\\n\" +\n            \"  </i>\\n\" +\n            \"  <i>\\n\" +\n            \"    <x>\\n\" +\n            \"      <a>A.2.1</a>\\n\" +\n            \"      <c>C.2.1</c>\\n\" +\n            \"    </x>\\n\" +\n            \"    <x>\\n\" +\n            \"      <b>B.2.2</b>\\n\" +\n            \"      <c>C.2.2</c>\\n\" +\n            \"    </x>\\n\" +\n            \"  </i>\\n\" +\n            \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/i\");\n    rr.addField(\"a\", \"/root/i/x/a\", true);\n    rr.addField(\"b\", \"/root/i/x/b\", true);\n    rr.addField(\"c\", \"/root/i/x/c\", true);\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    Map<String, Object> map = l.get(0);\n    List<String> a = (List<String>) map.get(\"a\");\n    List<String> b = (List<String>) map.get(\"b\");\n    List<String> c = (List<String>) map.get(\"c\");\n\n    assertEquals(\"A.1.1\",a.get(0));\n    assertEquals(\"B.1.1\",b.get(0));\n    assertNull(c.get(0));\n\n    assertNull(a.get(1));\n    assertEquals(\"B.1.2\",b.get(1));\n    assertEquals(\"C.1.2\",c.get(1));\n\n    map = l.get(1);\n    a = (List<String>) map.get(\"a\");\n    b = (List<String>) map.get(\"b\");\n    c = (List<String>) map.get(\"c\");\n    assertEquals(\"A.2.1\",a.get(0));\n    assertNull(b.get(0));\n    assertEquals(\"C.2.1\",c.get(0));\n\n    assertNull(a.get(1));\n    assertEquals(\"B.2.2\",b.get(1));\n    assertEquals(\"C.2.2\",c.get(1));\n  }\n\n","sourceOld":"  @Test\n  public void testPutNullTest(){\n    String xml = \"<root>\\n\" +\n            \"  <i>\\n\" +\n            \"    <x>\\n\" +\n            \"      <a>A.1.1</a>\\n\" +\n            \"      <b>B.1.1</b>\\n\" +\n            \"    </x>\\n\" +\n            \"    <x>\\n\" +\n            \"      <b>B.1.2</b>\\n\" +\n            \"      <c>C.1.2</c>\\n\" +\n            \"    </x>\\n\" +\n            \"  </i>\\n\" +\n            \"  <i>\\n\" +\n            \"    <x>\\n\" +\n            \"      <a>A.2.1</a>\\n\" +\n            \"      <c>C.2.1</c>\\n\" +\n            \"    </x>\\n\" +\n            \"    <x>\\n\" +\n            \"      <b>B.2.2</b>\\n\" +\n            \"      <c>C.2.2</c>\\n\" +\n            \"    </x>\\n\" +\n            \"  </i>\\n\" +\n            \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/i\");\n    rr.addField(\"a\", \"/root/i/x/a\", true);\n    rr.addField(\"b\", \"/root/i/x/b\", true);\n    rr.addField(\"c\", \"/root/i/x/c\", true);\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    Map<String, Object> map = l.get(0);\n    List<String> a = (List<String>) map.get(\"a\");\n    List<String> b = (List<String>) map.get(\"b\");\n    List<String> c = (List<String>) map.get(\"c\");\n\n    assertEquals(\"A.1.1\",a.get(0));\n    assertEquals(\"B.1.1\",b.get(0));\n    assertNull(c.get(0));\n\n    assertNull(a.get(1));\n    assertEquals(\"B.1.2\",b.get(1));\n    assertEquals(\"C.1.2\",c.get(1));\n\n    map = l.get(1);\n    a = (List<String>) map.get(\"a\");\n    b = (List<String>) map.get(\"b\");\n    c = (List<String>) map.get(\"c\");\n    assertEquals(\"A.2.1\",a.get(0));\n    assertNull(b.get(0));\n    assertEquals(\"C.2.1\",c.get(0));\n\n    assertNull(a.get(1));\n    assertEquals(\"B.2.2\",b.get(1));\n    assertEquals(\"C.2.2\",c.get(1));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testPutNullTest().mjava","sourceNew":null,"sourceOld":"  @Test\n  @SuppressWarnings({\"unchecked\"})\n  public void testPutNullTest(){\n    String xml = \"<root>\\n\" +\n            \"  <i>\\n\" +\n            \"    <x>\\n\" +\n            \"      <a>A.1.1</a>\\n\" +\n            \"      <b>B.1.1</b>\\n\" +\n            \"    </x>\\n\" +\n            \"    <x>\\n\" +\n            \"      <b>B.1.2</b>\\n\" +\n            \"      <c>C.1.2</c>\\n\" +\n            \"    </x>\\n\" +\n            \"  </i>\\n\" +\n            \"  <i>\\n\" +\n            \"    <x>\\n\" +\n            \"      <a>A.2.1</a>\\n\" +\n            \"      <c>C.2.1</c>\\n\" +\n            \"    </x>\\n\" +\n            \"    <x>\\n\" +\n            \"      <b>B.2.2</b>\\n\" +\n            \"      <c>C.2.2</c>\\n\" +\n            \"    </x>\\n\" +\n            \"  </i>\\n\" +\n            \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/i\");\n    rr.addField(\"a\", \"/root/i/x/a\", true);\n    rr.addField(\"b\", \"/root/i/x/b\", true);\n    rr.addField(\"c\", \"/root/i/x/c\", true);\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    Map<String, Object> map = l.get(0);\n    List<String> a = (List<String>) map.get(\"a\");\n    List<String> b = (List<String>) map.get(\"b\");\n    List<String> c = (List<String>) map.get(\"c\");\n\n    assertEquals(\"A.1.1\",a.get(0));\n    assertEquals(\"B.1.1\",b.get(0));\n    assertNull(c.get(0));\n\n    assertNull(a.get(1));\n    assertEquals(\"B.1.2\",b.get(1));\n    assertEquals(\"C.1.2\",c.get(1));\n\n    map = l.get(1);\n    a = (List<String>) map.get(\"a\");\n    b = (List<String>) map.get(\"b\");\n    c = (List<String>) map.get(\"c\");\n    assertEquals(\"A.2.1\",a.get(0));\n    assertNull(b.get(0));\n    assertEquals(\"C.2.1\",c.get(0));\n\n    assertNull(a.get(1));\n    assertEquals(\"B.2.2\",b.get(1));\n    assertEquals(\"C.2.2\",c.get(1));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["024e13388acbf5562fcbb77a129620982a5e2d79"],"024e13388acbf5562fcbb77a129620982a5e2d79":["c26f00b574427b55127e869b935845554afde1fa"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"024e13388acbf5562fcbb77a129620982a5e2d79":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["024e13388acbf5562fcbb77a129620982a5e2d79"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}