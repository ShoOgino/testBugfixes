{"path":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataEntityBuilder#buildFeed(GDataRequest).mjava","commits":[{"id":"5d43e216d757e2276d180eba8a192e300c4bfadb","date":1149717385,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataEntityBuilder#buildFeed(GDataRequest).mjava","pathOld":"/dev/null","sourceNew":"    /** \n     * Builds a {@link BaseFeed} instance from the {@link Reader} provided by \n     * the {@link GDataRequest} \n     *  \n     * @param request - \n     *            the request to build the instance from \n     * @return - a BaseFeed instance \n     * @throws FeedNotFoundException - \n     *             if the feed is not registered \n     * @throws IOException - \n     *             if an I/O Exception occures on the provided reader \n     * @throws ParseException - \n     *             if the feed could not be parsed \n     */ \n    public static BaseFeed buildFeed(final GDataRequest request) \n            throws FeedNotFoundException, IOException, ParseException { \n        if (request == null) \n            throw new IllegalArgumentException(\"request must not be null\"); \n        return buildFeed(request.getFeedId(), request.getReader(),request.getExtensionProfile()); \n    } \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52754a40a1550056d5637c8992b4076b5ed77328","date":1151345693,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataEntityBuilder#buildFeed(GDataRequest).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataEntityBuilder#buildFeed(GDataRequest).mjava","sourceNew":"    /**\n     * Builds a {@link BaseFeed} instance from the {@link Reader} provided by\n     * the {@link GDataRequest}\n     * \n     * @param request -\n     *            the request to build the instance from\n     * @return - a BaseFeed instance\n     * \n     * @throws IOException -\n     *             if an I/O Exception occures on the provided reader\n     * @throws ParseException -\n     *             if the feed could not be parsed\n     */\n    public static BaseFeed buildFeed(final GDataRequest request)\n            throws IOException, ParseException {\n        if (request == null)\n            throw new IllegalArgumentException(\"request must not be null\");\n        ProvidedService config = request.getConfigurator();\n        return buildFeed(request.getReader(), config);\n    }\n\n","sourceOld":"    /** \n     * Builds a {@link BaseFeed} instance from the {@link Reader} provided by \n     * the {@link GDataRequest} \n     *  \n     * @param request - \n     *            the request to build the instance from \n     * @return - a BaseFeed instance \n     * @throws FeedNotFoundException - \n     *             if the feed is not registered \n     * @throws IOException - \n     *             if an I/O Exception occures on the provided reader \n     * @throws ParseException - \n     *             if the feed could not be parsed \n     */ \n    public static BaseFeed buildFeed(final GDataRequest request) \n            throws FeedNotFoundException, IOException, ParseException { \n        if (request == null) \n            throw new IllegalArgumentException(\"request must not be null\"); \n        return buildFeed(request.getFeedId(), request.getReader(),request.getExtensionProfile()); \n    } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/server/GDataEntityBuilder#buildFeed(GDataRequest).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataEntityBuilder#buildFeed(GDataRequest).mjava","sourceNew":"    /**\n     * Builds a {@link BaseFeed} instance from the {@link Reader} provided by\n     * the {@link GDataRequest}\n     * \n     * @param request -\n     *            the request to build the instance from\n     * @return - a BaseFeed instance\n     * \n     * @throws IOException -\n     *             if an I/O Exception occures on the provided reader\n     * @throws ParseException -\n     *             if the feed could not be parsed\n     */\n    public static BaseFeed buildFeed(final GDataRequest request)\n            throws IOException, ParseException {\n        if (request == null)\n            throw new IllegalArgumentException(\"request must not be null\");\n        ProvidedService config = request.getConfigurator();\n        return buildFeed(request.getReader(), config);\n    }\n\n","sourceOld":"    /**\n     * Builds a {@link BaseFeed} instance from the {@link Reader} provided by\n     * the {@link GDataRequest}\n     * \n     * @param request -\n     *            the request to build the instance from\n     * @return - a BaseFeed instance\n     * \n     * @throws IOException -\n     *             if an I/O Exception occures on the provided reader\n     * @throws ParseException -\n     *             if the feed could not be parsed\n     */\n    public static BaseFeed buildFeed(final GDataRequest request)\n            throws IOException, ParseException {\n        if (request == null)\n            throw new IllegalArgumentException(\"request must not be null\");\n        ProvidedService config = request.getConfigurator();\n        return buildFeed(request.getReader(), config);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["52754a40a1550056d5637c8992b4076b5ed77328"],"5d43e216d757e2276d180eba8a192e300c4bfadb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"52754a40a1550056d5637c8992b4076b5ed77328":["5d43e216d757e2276d180eba8a192e300c4bfadb"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5d43e216d757e2276d180eba8a192e300c4bfadb"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5d43e216d757e2276d180eba8a192e300c4bfadb":["52754a40a1550056d5637c8992b4076b5ed77328"],"52754a40a1550056d5637c8992b4076b5ed77328":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}