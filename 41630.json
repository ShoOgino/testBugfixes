{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader#streamRecords(Reader,Handler).mjava","commits":[{"id":"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103","date":1217446558,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader#streamRecords(Reader,Handler).mjava","pathOld":"/dev/null","sourceNew":"  public void streamRecords(Reader r, Handler handler) {\n    try {\n      XMLStreamReader parser = factory.createXMLStreamReader(r);\n      rootNode.parse(parser, handler, new HashMap<String, Object>(),\n              new Stack<Set<String>>(), false);\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb5bb8a93dd58a4cde932f3e3ee4e13dc6832949","date":1252931993,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader#streamRecords(Reader,Handler).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader#streamRecords(Reader,Handler).mjava","sourceNew":"  /** Stream records as and when they are colected\n   * @param r The reader\n   * @param handler The callback instance\n   */\n  public void streamRecords(Reader r, Handler handler) {\n    try {\n      XMLStreamReader parser = factory.createXMLStreamReader(r);\n      rootNode.parse(parser, handler, new HashMap<String, Object>(),\n              new Stack<Set<String>>(), false);\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  public void streamRecords(Reader r, Handler handler) {\n    try {\n      XMLStreamReader parser = factory.createXMLStreamReader(r);\n      rootNode.parse(parser, handler, new HashMap<String, Object>(),\n              new Stack<Set<String>>(), false);\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b14ccda0bdb398cf86bc3804e1c136a615dbd89b","date":1253269935,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader#streamRecords(Reader,Handler).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader#streamRecords(Reader,Handler).mjava","sourceNew":"  /** \n   * Creates an XML stream reader on top of whatever reader has been\n   * configured. Then calls parse() with a handler which is\n   * invoked forEach record emitted.\n   *\n   * @param r the stream reader\n   * @param handler The callback instance\n   */\n  public void streamRecords(Reader r, Handler handler) {\n    try {\n      XMLStreamReader parser = factory.createXMLStreamReader(r);\n      rootNode.parse(parser, handler, new HashMap<String, Object>(),\n              new Stack<Set<String>>(), false);\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  /** Stream records as and when they are colected\n   * @param r The reader\n   * @param handler The callback instance\n   */\n  public void streamRecords(Reader r, Handler handler) {\n    try {\n      XMLStreamReader parser = factory.createXMLStreamReader(r);\n      rootNode.parse(parser, handler, new HashMap<String, Object>(),\n              new Stack<Set<String>>(), false);\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader#streamRecords(Reader,Handler).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader#streamRecords(Reader,Handler).mjava","sourceNew":"  /** \n   * Creates an XML stream reader on top of whatever reader has been\n   * configured. Then calls parse() with a handler which is\n   * invoked forEach record emitted.\n   *\n   * @param r the stream reader\n   * @param handler The callback instance\n   */\n  public void streamRecords(Reader r, Handler handler) {\n    try {\n      XMLStreamReader parser = factory.createXMLStreamReader(r);\n      rootNode.parse(parser, handler, new HashMap<String, Object>(),\n              new Stack<Set<String>>(), false);\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  /** \n   * Creates an XML stream reader on top of whatever reader has been\n   * configured. Then calls parse() with a handler which is\n   * invoked forEach record emitted.\n   *\n   * @param r the stream reader\n   * @param handler The callback instance\n   */\n  public void streamRecords(Reader r, Handler handler) {\n    try {\n      XMLStreamReader parser = factory.createXMLStreamReader(r);\n      rootNode.parse(parser, handler, new HashMap<String, Object>(),\n              new Stack<Set<String>>(), false);\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cb5bb8a93dd58a4cde932f3e3ee4e13dc6832949":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["b14ccda0bdb398cf86bc3804e1c136a615dbd89b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b14ccda0bdb398cf86bc3804e1c136a615dbd89b":["cb5bb8a93dd58a4cde932f3e3ee4e13dc6832949"]},"commit2Childs":{"cb5bb8a93dd58a4cde932f3e3ee4e13dc6832949":["b14ccda0bdb398cf86bc3804e1c136a615dbd89b"],"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["cb5bb8a93dd58a4cde932f3e3ee4e13dc6832949"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"b14ccda0bdb398cf86bc3804e1c136a615dbd89b":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}