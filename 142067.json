{"path":"solr/core/src/test/org/apache/solr/cloud/hdfs/HdfsThreadLeakTest#testBasic().mjava","commits":[{"id":"2fadc59d34e6c9170e6dc932b507f363fb6034f6","date":1427163373,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/hdfs/HdfsThreadLeakTest#testBasic().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testBasic() throws IOException {\n    URI uri = dfsCluster.getURI();\n    Path path = new Path(uri.toString());\n    Configuration conf = new Configuration();\n    conf.setBoolean(\"fs.hdfs.impl.disable.cache\", true);\n    FileSystem fs = FileSystem.get(path.toUri(), conf);\n    Path testFile = new Path(uri.toString() + \"/testfile\");\n    FSDataOutputStream out = fs.create(testFile);\n    \n    out.write(5);\n    out.hflush();\n    out.close();\n\n    ((DistributedFileSystem) fs).recoverLease(testFile);\n\n    \n    fs.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["add53de9835b2cd1a7a80b4e0036afee171c9fdf"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/hdfs/HdfsThreadLeakTest#testBasic().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testBasic() throws IOException {\n    URI uri = dfsCluster.getURI();\n    Path path = new Path(uri.toString());\n    Configuration conf = new Configuration();\n    conf.setBoolean(\"fs.hdfs.impl.disable.cache\", true);\n    FileSystem fs = FileSystem.get(path.toUri(), conf);\n    Path testFile = new Path(uri.toString() + \"/testfile\");\n    FSDataOutputStream out = fs.create(testFile);\n    \n    out.write(5);\n    out.hflush();\n    out.close();\n\n    ((DistributedFileSystem) fs).recoverLease(testFile);\n\n    \n    fs.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3def6e0e7b7566dd7f04a3514e77ee97a40fc78a","date":1429888091,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/hdfs/HdfsThreadLeakTest#testBasic().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/hdfs/HdfsThreadLeakTest#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() throws IOException {\n    String uri = HdfsTestUtil.getURI(dfsCluster);\n    Path path = new Path(uri);\n    Configuration conf = new Configuration();\n    conf.setBoolean(\"fs.hdfs.impl.disable.cache\", true);\n    FileSystem fs = FileSystem.get(path.toUri(), conf);\n    Path testFile = new Path(uri.toString() + \"/testfile\");\n    FSDataOutputStream out = fs.create(testFile);\n    \n    out.write(5);\n    out.hflush();\n    out.close();\n\n    ((DistributedFileSystem) fs).recoverLease(testFile);\n\n    \n    fs.close();\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() throws IOException {\n    URI uri = dfsCluster.getURI();\n    Path path = new Path(uri.toString());\n    Configuration conf = new Configuration();\n    conf.setBoolean(\"fs.hdfs.impl.disable.cache\", true);\n    FileSystem fs = FileSystem.get(path.toUri(), conf);\n    Path testFile = new Path(uri.toString() + \"/testfile\");\n    FSDataOutputStream out = fs.create(testFile);\n    \n    out.write(5);\n    out.hflush();\n    out.close();\n\n    ((DistributedFileSystem) fs).recoverLease(testFile);\n\n    \n    fs.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"add53de9835b2cd1a7a80b4e0036afee171c9fdf","date":1552937136,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/hdfs/HdfsThreadLeakTest#testBasic().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/hdfs/HdfsThreadLeakTest#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() throws IOException {\n    String uri = HdfsTestUtil.getURI(dfsCluster);\n    Path path = new Path(uri);\n    Configuration conf = HdfsTestUtil.getClientConfiguration(dfsCluster);\n    try(FileSystem fs = FileSystem.get(path.toUri(), conf)) {\n      Path testFile = new Path(uri + \"/testfile\");\n      try(FSDataOutputStream out = fs.create(testFile)) {\n        out.write(5);\n        out.hflush();\n      }\n\n      ((DistributedFileSystem) fs).recoverLease(testFile);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() throws IOException {\n    String uri = HdfsTestUtil.getURI(dfsCluster);\n    Path path = new Path(uri);\n    Configuration conf = new Configuration();\n    conf.setBoolean(\"fs.hdfs.impl.disable.cache\", true);\n    FileSystem fs = FileSystem.get(path.toUri(), conf);\n    Path testFile = new Path(uri.toString() + \"/testfile\");\n    FSDataOutputStream out = fs.create(testFile);\n    \n    out.write(5);\n    out.hflush();\n    out.close();\n\n    ((DistributedFileSystem) fs).recoverLease(testFile);\n\n    \n    fs.close();\n  }\n\n","bugFix":["2fadc59d34e6c9170e6dc932b507f363fb6034f6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2fadc59d34e6c9170e6dc932b507f363fb6034f6"],"2fadc59d34e6c9170e6dc932b507f363fb6034f6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["add53de9835b2cd1a7a80b4e0036afee171c9fdf"],"add53de9835b2cd1a7a80b4e0036afee171c9fdf":["3def6e0e7b7566dd7f04a3514e77ee97a40fc78a"],"3def6e0e7b7566dd7f04a3514e77ee97a40fc78a":["2fadc59d34e6c9170e6dc932b507f363fb6034f6"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"2fadc59d34e6c9170e6dc932b507f363fb6034f6":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","3def6e0e7b7566dd7f04a3514e77ee97a40fc78a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","2fadc59d34e6c9170e6dc932b507f363fb6034f6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"add53de9835b2cd1a7a80b4e0036afee171c9fdf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3def6e0e7b7566dd7f04a3514e77ee97a40fc78a":["add53de9835b2cd1a7a80b4e0036afee171c9fdf"]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}