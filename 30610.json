{"path":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenizer#readCodePoint().mjava","commits":[{"id":"1d6179f9c4237a7e5d423f4e4b439a94e967efc9","date":1304382587,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenizer#readCodePoint().mjava","pathOld":"/dev/null","sourceNew":"  protected int readCodePoint() throws IOException {\n    int ch = input.read();\n    if (ch < 0) {\n      return ch;\n    } else {\n      assert !Character.isLowSurrogate((char) ch);\n      off++;\n      if (Character.isHighSurrogate((char) ch)) {\n        int ch2 = input.read();\n        if (ch2 >= 0) {\n          off++;\n          assert Character.isLowSurrogate((char) ch2);\n          return Character.toCodePoint((char) ch, (char) ch2);\n        }\n      }\n      return ch;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["07904fa7a96affc72ebc1658bdbbe4c227843a11"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c700f8d0842d3e52bb2bdfbfdc046a137e836edb","date":1305285499,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenizer#readCodePoint().mjava","pathOld":"/dev/null","sourceNew":"  protected int readCodePoint() throws IOException {\n    int ch = input.read();\n    if (ch < 0) {\n      return ch;\n    } else {\n      assert !Character.isLowSurrogate((char) ch);\n      off++;\n      if (Character.isHighSurrogate((char) ch)) {\n        int ch2 = input.read();\n        if (ch2 >= 0) {\n          off++;\n          assert Character.isLowSurrogate((char) ch2);\n          return Character.toCodePoint((char) ch, (char) ch2);\n        }\n      }\n      return ch;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenizer#readCodePoint().mjava","pathOld":"/dev/null","sourceNew":"  protected int readCodePoint() throws IOException {\n    int ch = input.read();\n    if (ch < 0) {\n      return ch;\n    } else {\n      assert !Character.isLowSurrogate((char) ch);\n      off++;\n      if (Character.isHighSurrogate((char) ch)) {\n        int ch2 = input.read();\n        if (ch2 >= 0) {\n          off++;\n          assert Character.isLowSurrogate((char) ch2);\n          return Character.toCodePoint((char) ch, (char) ch2);\n        }\n      }\n      return ch;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/analysis/MockTokenizer#readCodePoint().mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenizer#readCodePoint().mjava","sourceNew":"  protected int readCodePoint() throws IOException {\n    int ch = input.read();\n    if (ch < 0) {\n      return ch;\n    } else {\n      assert !Character.isLowSurrogate((char) ch);\n      off++;\n      if (Character.isHighSurrogate((char) ch)) {\n        int ch2 = input.read();\n        if (ch2 >= 0) {\n          off++;\n          assert Character.isLowSurrogate((char) ch2);\n          return Character.toCodePoint((char) ch, (char) ch2);\n        }\n      }\n      return ch;\n    }\n  }\n\n","sourceOld":"  protected int readCodePoint() throws IOException {\n    int ch = input.read();\n    if (ch < 0) {\n      return ch;\n    } else {\n      assert !Character.isLowSurrogate((char) ch);\n      off++;\n      if (Character.isHighSurrogate((char) ch)) {\n        int ch2 = input.read();\n        if (ch2 >= 0) {\n          off++;\n          assert Character.isLowSurrogate((char) ch2);\n          return Character.toCodePoint((char) ch, (char) ch2);\n        }\n      }\n      return ch;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["1d6179f9c4237a7e5d423f4e4b439a94e967efc9"],"1d6179f9c4237a7e5d423f4e4b439a94e967efc9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1d6179f9c4237a7e5d423f4e4b439a94e967efc9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1d6179f9c4237a7e5d423f4e4b439a94e967efc9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1d6179f9c4237a7e5d423f4e4b439a94e967efc9":["7b91922b55d15444d554721b352861d028eb8278","a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1d6179f9c4237a7e5d423f4e4b439a94e967efc9","a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}