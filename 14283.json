{"path":"lucene/src/java/org/apache/lucene/search/NRTManager#NRTManager(IndexWriter,ExecutorService,SearcherWarmer).mjava","commits":[{"id":"df16fc2e9b615e0138edac46655ae628f5d098ad","date":1320876869,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/NRTManager#NRTManager(IndexWriter,ExecutorService,SearcherWarmer).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/NRTManager#NRTManager(IndexWriter,ExecutorService,SearcherWarmer).mjava","sourceNew":"  /**\n   * Create new NRTManager.\n   * \n   *  @param writer IndexWriter to open near-real-time\n   *         readers\n   *  @param es optional ExecutorService so different segments can\n   *         be searched concurrently (see {@link IndexSearcher#IndexSearcher(IndexReader, ExecutorService)}.\n   *         Pass <code>null</code> to search segments sequentially.\n   *  @param warmer optional {@link SearcherWarmer}.  Pass\n   *         null if you don't require the searcher to warmed\n   *         before going live.  If this is non-null then a\n   *         merged segment warmer is installed on the\n   *         provided IndexWriter's config.\n   *\n   *  <p><b>NOTE</b>: the provided {@link SearcherWarmer} is\n   *  not invoked for the initial searcher; you should\n   *  warm it yourself if necessary.\n   */\n  public NRTManager(IndexWriter writer, ExecutorService es,\n      SearcherWarmer warmer) throws IOException {\n    this(writer, es, warmer, true);\n  }\n\n","sourceOld":"  /**\n   * Create new NRTManager.\n   * \n   *  @param writer IndexWriter to open near-real-time\n   *         readers\n   *  @param es optional ExecutorService so different segments can\n   *         be searched concurrently (see {@link IndexSearcher#IndexSearcher(IndexReader, ExecutorService)}.\n   *         Pass <code>null</code> to search segments sequentially.\n   *  @param warmer optional {@link SearcherWarmer}.  Pass\n   *         null if you don't require the searcher to warmed\n   *         before going live.  If this is non-null then a\n   *         merged segment warmer is installed on the\n   *         provided IndexWriter's config.\n   *\n   *  <p><b>NOTE</b>: the provided {@link SearcherWarmer} is\n   *  not invoked for the initial searcher; you should\n   *  warm it yourself if necessary.\n   */\n  public NRTManager(IndexWriter writer, ExecutorService es,\n      SearcherWarmer warmer) throws IOException {\n    this(writer, es, warmer, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"568cba246a11f491637ba492f881589c2142667c","date":1323623267,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/NRTManager#NRTManager(IndexWriter,ExecutorService,SearcherWarmer).mjava","sourceNew":null,"sourceOld":"  /**\n   * Create new NRTManager.\n   * \n   *  @param writer IndexWriter to open near-real-time\n   *         readers\n   *  @param es optional ExecutorService so different segments can\n   *         be searched concurrently (see {@link IndexSearcher#IndexSearcher(IndexReader, ExecutorService)}.\n   *         Pass <code>null</code> to search segments sequentially.\n   *  @param warmer optional {@link SearcherWarmer}.  Pass\n   *         null if you don't require the searcher to warmed\n   *         before going live.  If this is non-null then a\n   *         merged segment warmer is installed on the\n   *         provided IndexWriter's config.\n   *\n   *  <p><b>NOTE</b>: the provided {@link SearcherWarmer} is\n   *  not invoked for the initial searcher; you should\n   *  warm it yourself if necessary.\n   */\n  public NRTManager(IndexWriter writer, ExecutorService es,\n      SearcherWarmer warmer) throws IOException {\n    this(writer, es, warmer, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","date":1323720782,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/NRTManager#NRTManager(IndexWriter,ExecutorService,SearcherWarmer).mjava","sourceNew":null,"sourceOld":"  /**\n   * Create new NRTManager.\n   * \n   *  @param writer IndexWriter to open near-real-time\n   *         readers\n   *  @param es optional ExecutorService so different segments can\n   *         be searched concurrently (see {@link IndexSearcher#IndexSearcher(IndexReader, ExecutorService)}.\n   *         Pass <code>null</code> to search segments sequentially.\n   *  @param warmer optional {@link SearcherWarmer}.  Pass\n   *         null if you don't require the searcher to warmed\n   *         before going live.  If this is non-null then a\n   *         merged segment warmer is installed on the\n   *         provided IndexWriter's config.\n   *\n   *  <p><b>NOTE</b>: the provided {@link SearcherWarmer} is\n   *  not invoked for the initial searcher; you should\n   *  warm it yourself if necessary.\n   */\n  public NRTManager(IndexWriter writer, ExecutorService es,\n      SearcherWarmer warmer) throws IOException {\n    this(writer, es, warmer, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"568cba246a11f491637ba492f881589c2142667c":["df16fc2e9b615e0138edac46655ae628f5d098ad"],"df16fc2e9b615e0138edac46655ae628f5d098ad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":["df16fc2e9b615e0138edac46655ae628f5d098ad","568cba246a11f491637ba492f881589c2142667c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["568cba246a11f491637ba492f881589c2142667c"]},"commit2Childs":{"568cba246a11f491637ba492f881589c2142667c":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"df16fc2e9b615e0138edac46655ae628f5d098ad":["568cba246a11f491637ba492f881589c2142667c","93ccd971aca7fb61b7f1b946e44714cfc80bfc7c"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["df16fc2e9b615e0138edac46655ae628f5d098ad"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}