{"path":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/registry/RegistryBuilder#buildFromConfiguration(Digester,GDataServerRegistry,String).mjava","commits":[{"id":"09fe963da2613c724ffe82353b4ca2364a1f93c6","date":1155249160,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/registry/RegistryBuilder#buildFromConfiguration(Digester,GDataServerRegistry,String).mjava","pathOld":"/dev/null","sourceNew":"    private static void buildFromConfiguration(Digester digester,\n            GDataServerRegistry registry, String schemaURL) throws IOException, SAXException {\n        digester.setValidating(true);\n        digester.setSchema(schemaURL);\n        digester.setErrorHandler(new SimpleSaxErrorHandler());\n        digester.push(registry);\n        /*\n         * register services\n         */\n        digester.addObjectCreate(\"gdata/service\", ProvidedServiceConfig.class);\n        digester.addSetProperties(\"gdata/service\");\n        digester.addSetNext(\"gdata/service\", \"registerService\");\n        digester.addBeanPropertySetter(\"gdata/service/feed-class\", \"feedType\");\n        digester.addBeanPropertySetter(\"gdata/service/entry-class\", \"entryType\");\n        digester.addBeanPropertySetter(\"gdata/service/extension-profile\",\n                \"extensionProfileClass\");\n        addIndexRule(digester);\n        /*\n         * load components and configurations\n         */\n        digester.addCallMethod(\"gdata/server-components/component\",\n                \"registerComponent\", 2, new Class[] { Class.class , ComponentConfiguration.class});\n        digester.addCallParam(\"gdata/server-components/component/class\",0);\n            digester.addObjectCreate(\"gdata/server-components/component/configuration\",ComponentConfiguration.class);\n            digester.addCallMethod(\"gdata/server-components/component/configuration/property\",\"set\",2,new Class[]{String.class,String.class});\n            digester.addCallParam(\"gdata/server-components/component/configuration/property\",0,\"name\");\n            digester.addCallParam(\"gdata/server-components/component/configuration/property\",1);\n        //second parameter on registerComponent -- top of the stack (Component configuration)\n        digester.addCallParam(\"gdata/server-components/component/configuration\",1,0);    \n        digester.parse(RegistryBuilder.class\n                .getResourceAsStream(\"/gdata-config.xml\"));\n        \n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a228247de0686f328301f2d13982b56d78533501","date":1156108808,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/registry/RegistryBuilder#buildFromConfiguration(Digester,GDataServerRegistry,String).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/registry/RegistryBuilder#buildFromConfiguration(Digester,GDataServerRegistry,String).mjava","sourceNew":"    private static void buildFromConfiguration(Digester digester,\n            GDataServerRegistry registry, String schemaURL) throws IOException, SAXException {\n        digester.setValidating(true);\n        digester.setSchema(schemaURL);\n        digester.setErrorHandler(new SimpleSaxErrorHandler());\n        digester.push(registry);\n        /*\n         * register services\n         */\n        digester.addObjectCreate(\"gdata/service\", ProvidedServiceConfig.class);\n        digester.addSetProperties(\"gdata/service\");\n        digester.addSetNext(\"gdata/service\", \"registerService\");\n        digester.addBeanPropertySetter(\"gdata/service/feed-class\", \"feedType\");\n        digester.addBeanPropertySetter(\"gdata/service/entry-class\", \"entryType\");\n        digester.addBeanPropertySetter(\"gdata/service/extension-profile\",\n                \"extensionProfileClass\");\n        digester.addBeanPropertySetter(\"gdata/service/previewStyleSheet\",\"xsltStylesheet\");\n        addIndexRule(digester);\n        /*\n         * load components and configurations\n         */\n        digester.addCallMethod(\"gdata/server-components/component\",\n                \"registerComponent\", 2, new Class[] { Class.class , ComponentConfiguration.class});\n        digester.addCallParam(\"gdata/server-components/component/class\",0);\n            digester.addObjectCreate(\"gdata/server-components/component/configuration\",ComponentConfiguration.class);\n            digester.addCallMethod(\"gdata/server-components/component/configuration/property\",\"set\",2,new Class[]{String.class,String.class});\n            digester.addCallParam(\"gdata/server-components/component/configuration/property\",0,\"name\");\n            digester.addCallParam(\"gdata/server-components/component/configuration/property\",1);\n        //second parameter on registerComponent -- top of the stack (Component configuration)\n        digester.addCallParam(\"gdata/server-components/component/configuration\",1,0);    \n        digester.parse(RegistryBuilder.class\n                .getResourceAsStream(\"/gdata-config.xml\"));\n        \n    }\n\n","sourceOld":"    private static void buildFromConfiguration(Digester digester,\n            GDataServerRegistry registry, String schemaURL) throws IOException, SAXException {\n        digester.setValidating(true);\n        digester.setSchema(schemaURL);\n        digester.setErrorHandler(new SimpleSaxErrorHandler());\n        digester.push(registry);\n        /*\n         * register services\n         */\n        digester.addObjectCreate(\"gdata/service\", ProvidedServiceConfig.class);\n        digester.addSetProperties(\"gdata/service\");\n        digester.addSetNext(\"gdata/service\", \"registerService\");\n        digester.addBeanPropertySetter(\"gdata/service/feed-class\", \"feedType\");\n        digester.addBeanPropertySetter(\"gdata/service/entry-class\", \"entryType\");\n        digester.addBeanPropertySetter(\"gdata/service/extension-profile\",\n                \"extensionProfileClass\");\n        addIndexRule(digester);\n        /*\n         * load components and configurations\n         */\n        digester.addCallMethod(\"gdata/server-components/component\",\n                \"registerComponent\", 2, new Class[] { Class.class , ComponentConfiguration.class});\n        digester.addCallParam(\"gdata/server-components/component/class\",0);\n            digester.addObjectCreate(\"gdata/server-components/component/configuration\",ComponentConfiguration.class);\n            digester.addCallMethod(\"gdata/server-components/component/configuration/property\",\"set\",2,new Class[]{String.class,String.class});\n            digester.addCallParam(\"gdata/server-components/component/configuration/property\",0,\"name\");\n            digester.addCallParam(\"gdata/server-components/component/configuration/property\",1);\n        //second parameter on registerComponent -- top of the stack (Component configuration)\n        digester.addCallParam(\"gdata/server-components/component/configuration\",1,0);    \n        digester.parse(RegistryBuilder.class\n                .getResourceAsStream(\"/gdata-config.xml\"));\n        \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/server/registry/RegistryBuilder#buildFromConfiguration(Digester,GDataServerRegistry,String).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/registry/RegistryBuilder#buildFromConfiguration(Digester,GDataServerRegistry,String).mjava","sourceNew":"    private static void buildFromConfiguration(Digester digester,\n            GDataServerRegistry registry, String schemaURL) throws IOException, SAXException {\n        digester.setValidating(true);\n        digester.setSchema(schemaURL);\n        digester.setErrorHandler(new SimpleSaxErrorHandler());\n        digester.push(registry);\n        /*\n         * register services\n         */\n        digester.addObjectCreate(\"gdata/service\", ProvidedServiceConfig.class);\n        digester.addSetProperties(\"gdata/service\");\n        digester.addSetNext(\"gdata/service\", \"registerService\");\n        digester.addBeanPropertySetter(\"gdata/service/feed-class\", \"feedType\");\n        digester.addBeanPropertySetter(\"gdata/service/entry-class\", \"entryType\");\n        digester.addBeanPropertySetter(\"gdata/service/extension-profile\",\n                \"extensionProfileClass\");\n        digester.addBeanPropertySetter(\"gdata/service/previewStyleSheet\",\"xsltStylesheet\");\n        addIndexRule(digester);\n        /*\n         * load components and configurations\n         */\n        digester.addCallMethod(\"gdata/server-components/component\",\n                \"registerComponent\", 2, new Class[] { Class.class , ComponentConfiguration.class});\n        digester.addCallParam(\"gdata/server-components/component/class\",0);\n            digester.addObjectCreate(\"gdata/server-components/component/configuration\",ComponentConfiguration.class);\n            digester.addCallMethod(\"gdata/server-components/component/configuration/property\",\"set\",2,new Class[]{String.class,String.class});\n            digester.addCallParam(\"gdata/server-components/component/configuration/property\",0,\"name\");\n            digester.addCallParam(\"gdata/server-components/component/configuration/property\",1);\n        //second parameter on registerComponent -- top of the stack (Component configuration)\n        digester.addCallParam(\"gdata/server-components/component/configuration\",1,0);    \n        digester.parse(RegistryBuilder.class\n                .getResourceAsStream(\"/gdata-config.xml\"));\n        \n    }\n\n","sourceOld":"    private static void buildFromConfiguration(Digester digester,\n            GDataServerRegistry registry, String schemaURL) throws IOException, SAXException {\n        digester.setValidating(true);\n        digester.setSchema(schemaURL);\n        digester.setErrorHandler(new SimpleSaxErrorHandler());\n        digester.push(registry);\n        /*\n         * register services\n         */\n        digester.addObjectCreate(\"gdata/service\", ProvidedServiceConfig.class);\n        digester.addSetProperties(\"gdata/service\");\n        digester.addSetNext(\"gdata/service\", \"registerService\");\n        digester.addBeanPropertySetter(\"gdata/service/feed-class\", \"feedType\");\n        digester.addBeanPropertySetter(\"gdata/service/entry-class\", \"entryType\");\n        digester.addBeanPropertySetter(\"gdata/service/extension-profile\",\n                \"extensionProfileClass\");\n        digester.addBeanPropertySetter(\"gdata/service/previewStyleSheet\",\"xsltStylesheet\");\n        addIndexRule(digester);\n        /*\n         * load components and configurations\n         */\n        digester.addCallMethod(\"gdata/server-components/component\",\n                \"registerComponent\", 2, new Class[] { Class.class , ComponentConfiguration.class});\n        digester.addCallParam(\"gdata/server-components/component/class\",0);\n            digester.addObjectCreate(\"gdata/server-components/component/configuration\",ComponentConfiguration.class);\n            digester.addCallMethod(\"gdata/server-components/component/configuration/property\",\"set\",2,new Class[]{String.class,String.class});\n            digester.addCallParam(\"gdata/server-components/component/configuration/property\",0,\"name\");\n            digester.addCallParam(\"gdata/server-components/component/configuration/property\",1);\n        //second parameter on registerComponent -- top of the stack (Component configuration)\n        digester.addCallParam(\"gdata/server-components/component/configuration\",1,0);    \n        digester.parse(RegistryBuilder.class\n                .getResourceAsStream(\"/gdata-config.xml\"));\n        \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"09fe963da2613c724ffe82353b4ca2364a1f93c6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["a228247de0686f328301f2d13982b56d78533501"],"a228247de0686f328301f2d13982b56d78533501":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5824af871ba6863399636aa5989bfc0ef2ea448c"]},"commit2Childs":{"09fe963da2613c724ffe82353b4ca2364a1f93c6":["a228247de0686f328301f2d13982b56d78533501"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a228247de0686f328301f2d13982b56d78533501":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}