{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/StartSolrJetty#main(String[]).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/StartSolrJetty#main(String[]).mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/StartSolrJetty#main(String[]).mjava","sourceNew":"  public static void main( String[] args ) \n  {\n    //System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n\n    Server server = new Server();\n    SocketConnector connector = new SocketConnector();\n    // Set some timeout options to make debugging easier.\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(8080);\n    server.setConnectors(new Connector[] { connector });\n    \n    WebAppContext bb = new WebAppContext();\n    bb.setServer(server);\n    bb.setContextPath(\"/\");\n    bb.setWar(\"src/webapp/web\");\n\n//    // START JMX SERVER\n//    if( true ) {\n//      MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();\n//      MBeanContainer mBeanContainer = new MBeanContainer(mBeanServer);\n//      server.getContainer().addEventListener(mBeanContainer);\n//      mBeanContainer.start();\n//    }\n    \n    server.addHandler(bb);\n\n    try {\n      System.out.println(\">>> STARTING EMBEDDED JETTY SERVER, PRESS ANY KEY TO STOP\");\n      server.start();\n      while (System.in.available() == 0) {\n        Thread.sleep(5000);\n      }\n      server.stop();\n      server.join();\n    } \n    catch (Exception e) {\n      e.printStackTrace();\n      System.exit(100);\n    }\n  }\n\n","sourceOld":"  public static void main( String[] args ) \n  {\n    //System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n\n    Server server = new Server();\n    SocketConnector connector = new SocketConnector();\n    // Set some timeout options to make debugging easier.\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(8080);\n    server.setConnectors(new Connector[] { connector });\n    \n    WebAppContext bb = new WebAppContext();\n    bb.setServer(server);\n    bb.setContextPath(\"/\");\n    bb.setWar(\"src/webapp/web\");\n\n//    // START JMX SERVER\n//    if( true ) {\n//      MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();\n//      MBeanContainer mBeanContainer = new MBeanContainer(mBeanServer);\n//      server.getContainer().addEventListener(mBeanContainer);\n//      mBeanContainer.start();\n//    }\n    \n    server.addHandler(bb);\n\n    try {\n      System.out.println(\">>> STARTING EMBEDDED JETTY SERVER, PRESS ANY KEY TO STOP\");\n      server.start();\n      while (System.in.available() == 0) {\n        Thread.sleep(5000);\n      }\n      server.stop();\n      server.join();\n    } \n    catch (Exception e) {\n      e.printStackTrace();\n      System.exit(100);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/StartSolrJetty#main(String[]).mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/StartSolrJetty#main(String[]).mjava","sourceNew":"  public static void main( String[] args ) \n  {\n    //System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n\n    Server server = new Server();\n    SocketConnector connector = new SocketConnector();\n    // Set some timeout options to make debugging easier.\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(8080);\n    server.setConnectors(new Connector[] { connector });\n    \n    WebAppContext bb = new WebAppContext();\n    bb.setServer(server);\n    bb.setContextPath(\"/\");\n    bb.setWar(\"src/webapp/web\");\n\n//    // START JMX SERVER\n//    if( true ) {\n//      MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();\n//      MBeanContainer mBeanContainer = new MBeanContainer(mBeanServer);\n//      server.getContainer().addEventListener(mBeanContainer);\n//      mBeanContainer.start();\n//    }\n    \n    server.addHandler(bb);\n\n    try {\n      System.out.println(\">>> STARTING EMBEDDED JETTY SERVER, PRESS ANY KEY TO STOP\");\n      server.start();\n      while (System.in.available() == 0) {\n        Thread.sleep(5000);\n      }\n      server.stop();\n      server.join();\n    } \n    catch (Exception e) {\n      e.printStackTrace();\n      System.exit(100);\n    }\n  }\n\n","sourceOld":"  public static void main( String[] args ) \n  {\n    //System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n\n    Server server = new Server();\n    SocketConnector connector = new SocketConnector();\n    // Set some timeout options to make debugging easier.\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(8080);\n    server.setConnectors(new Connector[] { connector });\n    \n    WebAppContext bb = new WebAppContext();\n    bb.setServer(server);\n    bb.setContextPath(\"/\");\n    bb.setWar(\"src/webapp/web\");\n\n//    // START JMX SERVER\n//    if( true ) {\n//      MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();\n//      MBeanContainer mBeanContainer = new MBeanContainer(mBeanServer);\n//      server.getContainer().addEventListener(mBeanContainer);\n//      mBeanContainer.start();\n//    }\n    \n    server.addHandler(bb);\n\n    try {\n      System.out.println(\">>> STARTING EMBEDDED JETTY SERVER, PRESS ANY KEY TO STOP\");\n      server.start();\n      while (System.in.available() == 0) {\n        Thread.sleep(5000);\n      }\n      server.stop();\n      server.join();\n    } \n    catch (Exception e) {\n      e.printStackTrace();\n      System.exit(100);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9507caf22f292ac0e5e59f62db4275adf4511","date":1310107283,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/StartSolrJetty#main(String[]).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/StartSolrJetty#main(String[]).mjava","sourceNew":"  public static void main( String[] args ) \n  {\n    //System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n\n    Server server = new Server();\n    SocketConnector connector = new SocketConnector();\n    // Set some timeout options to make debugging easier.\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(8080);\n    server.setConnectors(new Connector[] { connector });\n    \n    WebAppContext bb = new WebAppContext();\n    bb.setServer(server);\n    bb.setContextPath(\"/\");\n    bb.setWar(\"webapp/web\");\n\n//    // START JMX SERVER\n//    if( true ) {\n//      MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();\n//      MBeanContainer mBeanContainer = new MBeanContainer(mBeanServer);\n//      server.getContainer().addEventListener(mBeanContainer);\n//      mBeanContainer.start();\n//    }\n    \n    server.addHandler(bb);\n\n    try {\n      System.out.println(\">>> STARTING EMBEDDED JETTY SERVER, PRESS ANY KEY TO STOP\");\n      server.start();\n      while (System.in.available() == 0) {\n        Thread.sleep(5000);\n      }\n      server.stop();\n      server.join();\n    } \n    catch (Exception e) {\n      e.printStackTrace();\n      System.exit(100);\n    }\n  }\n\n","sourceOld":"  public static void main( String[] args ) \n  {\n    //System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n\n    Server server = new Server();\n    SocketConnector connector = new SocketConnector();\n    // Set some timeout options to make debugging easier.\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(8080);\n    server.setConnectors(new Connector[] { connector });\n    \n    WebAppContext bb = new WebAppContext();\n    bb.setServer(server);\n    bb.setContextPath(\"/\");\n    bb.setWar(\"src/webapp/web\");\n\n//    // START JMX SERVER\n//    if( true ) {\n//      MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();\n//      MBeanContainer mBeanContainer = new MBeanContainer(mBeanServer);\n//      server.getContainer().addEventListener(mBeanContainer);\n//      mBeanContainer.start();\n//    }\n    \n    server.addHandler(bb);\n\n    try {\n      System.out.println(\">>> STARTING EMBEDDED JETTY SERVER, PRESS ANY KEY TO STOP\");\n      server.start();\n      while (System.in.available() == 0) {\n        Thread.sleep(5000);\n      }\n      server.stop();\n      server.join();\n    } \n    catch (Exception e) {\n      e.printStackTrace();\n      System.exit(100);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/StartSolrJetty#main(String[]).mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/StartSolrJetty#main(String[]).mjava","sourceNew":"  public static void main( String[] args ) \n  {\n    //System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n\n    Server server = new Server();\n    SocketConnector connector = new SocketConnector();\n    // Set some timeout options to make debugging easier.\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(8080);\n    server.setConnectors(new Connector[] { connector });\n    \n    WebAppContext bb = new WebAppContext();\n    bb.setServer(server);\n    bb.setContextPath(\"/\");\n    bb.setWar(\"webapp/web\");\n\n//    // START JMX SERVER\n//    if( true ) {\n//      MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();\n//      MBeanContainer mBeanContainer = new MBeanContainer(mBeanServer);\n//      server.getContainer().addEventListener(mBeanContainer);\n//      mBeanContainer.start();\n//    }\n    \n    server.addHandler(bb);\n\n    try {\n      System.out.println(\">>> STARTING EMBEDDED JETTY SERVER, PRESS ANY KEY TO STOP\");\n      server.start();\n      while (System.in.available() == 0) {\n        Thread.sleep(5000);\n      }\n      server.stop();\n      server.join();\n    } \n    catch (Exception e) {\n      e.printStackTrace();\n      System.exit(100);\n    }\n  }\n\n","sourceOld":"  public static void main( String[] args ) \n  {\n    //System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n\n    Server server = new Server();\n    SocketConnector connector = new SocketConnector();\n    // Set some timeout options to make debugging easier.\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(8080);\n    server.setConnectors(new Connector[] { connector });\n    \n    WebAppContext bb = new WebAppContext();\n    bb.setServer(server);\n    bb.setContextPath(\"/\");\n    bb.setWar(\"src/webapp/web\");\n\n//    // START JMX SERVER\n//    if( true ) {\n//      MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();\n//      MBeanContainer mBeanContainer = new MBeanContainer(mBeanServer);\n//      server.getContainer().addEventListener(mBeanContainer);\n//      mBeanContainer.start();\n//    }\n    \n    server.addHandler(bb);\n\n    try {\n      System.out.println(\">>> STARTING EMBEDDED JETTY SERVER, PRESS ANY KEY TO STOP\");\n      server.start();\n      while (System.in.available() == 0) {\n        Thread.sleep(5000);\n      }\n      server.stop();\n      server.join();\n    } \n    catch (Exception e) {\n      e.printStackTrace();\n      System.exit(100);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eb57e8385192a8db78b9a00d00a1425c3d1977b0","date":1331153368,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/StartSolrJetty#main(String[]).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/StartSolrJetty#main(String[]).mjava","sourceNew":"  public static void main( String[] args ) \n  {\n    //System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n\n    javax.servlet.FilterRegistration xx;\n    \n    \n    Server server = new Server();\n    SocketConnector connector = new SocketConnector();\n    // Set some timeout options to make debugging easier.\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(8080);\n    server.setConnectors(new Connector[] { connector });\n    \n    WebAppContext bb = new WebAppContext();\n    bb.setServer(server);\n    bb.setContextPath(\"/\");\n    bb.setWar(\"webapp/web\");\n\n//    // START JMX SERVER\n//    if( true ) {\n//      MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();\n//      MBeanContainer mBeanContainer = new MBeanContainer(mBeanServer);\n//      server.getContainer().addEventListener(mBeanContainer);\n//      mBeanContainer.start();\n//    }\n    \n    server.setHandler(bb);\n\n    try {\n      System.out.println(\">>> STARTING EMBEDDED JETTY SERVER, PRESS ANY KEY TO STOP\");\n      server.start();\n      while (System.in.available() == 0) {\n        Thread.sleep(5000);\n      }\n      server.stop();\n      server.join();\n    } \n    catch (Exception e) {\n      e.printStackTrace();\n      System.exit(100);\n    }\n  }\n\n","sourceOld":"  public static void main( String[] args ) \n  {\n    //System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n\n    Server server = new Server();\n    SocketConnector connector = new SocketConnector();\n    // Set some timeout options to make debugging easier.\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(8080);\n    server.setConnectors(new Connector[] { connector });\n    \n    WebAppContext bb = new WebAppContext();\n    bb.setServer(server);\n    bb.setContextPath(\"/\");\n    bb.setWar(\"webapp/web\");\n\n//    // START JMX SERVER\n//    if( true ) {\n//      MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();\n//      MBeanContainer mBeanContainer = new MBeanContainer(mBeanServer);\n//      server.getContainer().addEventListener(mBeanContainer);\n//      mBeanContainer.start();\n//    }\n    \n    server.addHandler(bb);\n\n    try {\n      System.out.println(\">>> STARTING EMBEDDED JETTY SERVER, PRESS ANY KEY TO STOP\");\n      server.start();\n      while (System.in.available() == 0) {\n        Thread.sleep(5000);\n      }\n      server.stop();\n      server.join();\n    } \n    catch (Exception e) {\n      e.printStackTrace();\n      System.exit(100);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bdb669e0dcae1188466e95a41329944ae8b4bc2","date":1331234809,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/StartSolrJetty#main(String[]).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/StartSolrJetty#main(String[]).mjava","sourceNew":"  public static void main( String[] args ) \n  {\n    //System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n\n    javax.servlet.FilterRegistration xx;\n    \n    \n    Server server = new Server();\n    SocketConnector connector = new SocketConnector();\n    // Set some timeout options to make debugging easier.\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(8983);\n    server.setConnectors(new Connector[] { connector });\n    \n    WebAppContext bb = new WebAppContext();\n    bb.setServer(server);\n    bb.setContextPath(\"/solr\");\n    bb.setWar(\"webapp/web\");\n\n//    // START JMX SERVER\n//    if( true ) {\n//      MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();\n//      MBeanContainer mBeanContainer = new MBeanContainer(mBeanServer);\n//      server.getContainer().addEventListener(mBeanContainer);\n//      mBeanContainer.start();\n//    }\n    \n    server.setHandler(bb);\n\n    try {\n      System.out.println(\">>> STARTING EMBEDDED JETTY SERVER, PRESS ANY KEY TO STOP\");\n      server.start();\n      while (System.in.available() == 0) {\n        Thread.sleep(5000);\n      }\n      server.stop();\n      server.join();\n    } \n    catch (Exception e) {\n      e.printStackTrace();\n      System.exit(100);\n    }\n  }\n\n","sourceOld":"  public static void main( String[] args ) \n  {\n    //System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n\n    javax.servlet.FilterRegistration xx;\n    \n    \n    Server server = new Server();\n    SocketConnector connector = new SocketConnector();\n    // Set some timeout options to make debugging easier.\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(8080);\n    server.setConnectors(new Connector[] { connector });\n    \n    WebAppContext bb = new WebAppContext();\n    bb.setServer(server);\n    bb.setContextPath(\"/\");\n    bb.setWar(\"webapp/web\");\n\n//    // START JMX SERVER\n//    if( true ) {\n//      MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();\n//      MBeanContainer mBeanContainer = new MBeanContainer(mBeanServer);\n//      server.getContainer().addEventListener(mBeanContainer);\n//      mBeanContainer.start();\n//    }\n    \n    server.setHandler(bb);\n\n    try {\n      System.out.println(\">>> STARTING EMBEDDED JETTY SERVER, PRESS ANY KEY TO STOP\");\n      server.start();\n      while (System.in.available() == 0) {\n        Thread.sleep(5000);\n      }\n      server.stop();\n      server.join();\n    } \n    catch (Exception e) {\n      e.printStackTrace();\n      System.exit(100);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/StartSolrJetty#main(String[]).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/StartSolrJetty#main(String[]).mjava","sourceNew":"  public static void main( String[] args ) \n  {\n    //System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n\n    javax.servlet.FilterRegistration xx;\n    \n    \n    Server server = new Server();\n    SocketConnector connector = new SocketConnector();\n    // Set some timeout options to make debugging easier.\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(8983);\n    server.setConnectors(new Connector[] { connector });\n    \n    WebAppContext bb = new WebAppContext();\n    bb.setServer(server);\n    bb.setContextPath(\"/solr\");\n    bb.setWar(\"webapp/web\");\n\n//    // START JMX SERVER\n//    if( true ) {\n//      MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();\n//      MBeanContainer mBeanContainer = new MBeanContainer(mBeanServer);\n//      server.getContainer().addEventListener(mBeanContainer);\n//      mBeanContainer.start();\n//    }\n    \n    server.setHandler(bb);\n\n    try {\n      System.out.println(\">>> STARTING EMBEDDED JETTY SERVER, PRESS ANY KEY TO STOP\");\n      server.start();\n      while (System.in.available() == 0) {\n        Thread.sleep(5000);\n      }\n      server.stop();\n      server.join();\n    } \n    catch (Exception e) {\n      e.printStackTrace();\n      System.exit(100);\n    }\n  }\n\n","sourceOld":"  public static void main( String[] args ) \n  {\n    //System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n\n    Server server = new Server();\n    SocketConnector connector = new SocketConnector();\n    // Set some timeout options to make debugging easier.\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(8080);\n    server.setConnectors(new Connector[] { connector });\n    \n    WebAppContext bb = new WebAppContext();\n    bb.setServer(server);\n    bb.setContextPath(\"/\");\n    bb.setWar(\"webapp/web\");\n\n//    // START JMX SERVER\n//    if( true ) {\n//      MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();\n//      MBeanContainer mBeanContainer = new MBeanContainer(mBeanServer);\n//      server.getContainer().addEventListener(mBeanContainer);\n//      mBeanContainer.start();\n//    }\n    \n    server.addHandler(bb);\n\n    try {\n      System.out.println(\">>> STARTING EMBEDDED JETTY SERVER, PRESS ANY KEY TO STOP\");\n      server.start();\n      while (System.in.available() == 0) {\n        Thread.sleep(5000);\n      }\n      server.stop();\n      server.join();\n    } \n    catch (Exception e) {\n      e.printStackTrace();\n      System.exit(100);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d6c5c6226ab2177d29ab21112ec81e5afb21e75","date":1335389211,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/StartSolrJetty#main(String[]).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/StartSolrJetty#main(String[]).mjava","sourceNew":"  public static void main( String[] args ) \n  {\n    //System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n\n    Server server = new Server();\n    SocketConnector connector = new SocketConnector();\n    // Set some timeout options to make debugging easier.\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(8983);\n    server.setConnectors(new Connector[] { connector });\n    \n    WebAppContext bb = new WebAppContext();\n    bb.setServer(server);\n    bb.setContextPath(\"/solr\");\n    bb.setWar(\"webapp/web\");\n\n//    // START JMX SERVER\n//    if( true ) {\n//      MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();\n//      MBeanContainer mBeanContainer = new MBeanContainer(mBeanServer);\n//      server.getContainer().addEventListener(mBeanContainer);\n//      mBeanContainer.start();\n//    }\n    \n    server.setHandler(bb);\n\n    try {\n      System.out.println(\">>> STARTING EMBEDDED JETTY SERVER, PRESS ANY KEY TO STOP\");\n      server.start();\n      while (System.in.available() == 0) {\n        Thread.sleep(5000);\n      }\n      server.stop();\n      server.join();\n    } \n    catch (Exception e) {\n      e.printStackTrace();\n      System.exit(100);\n    }\n  }\n\n","sourceOld":"  public static void main( String[] args ) \n  {\n    //System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n\n    javax.servlet.FilterRegistration xx;\n    \n    \n    Server server = new Server();\n    SocketConnector connector = new SocketConnector();\n    // Set some timeout options to make debugging easier.\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(8983);\n    server.setConnectors(new Connector[] { connector });\n    \n    WebAppContext bb = new WebAppContext();\n    bb.setServer(server);\n    bb.setContextPath(\"/solr\");\n    bb.setWar(\"webapp/web\");\n\n//    // START JMX SERVER\n//    if( true ) {\n//      MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();\n//      MBeanContainer mBeanContainer = new MBeanContainer(mBeanServer);\n//      server.getContainer().addEventListener(mBeanContainer);\n//      mBeanContainer.start();\n//    }\n    \n    server.setHandler(bb);\n\n    try {\n      System.out.println(\">>> STARTING EMBEDDED JETTY SERVER, PRESS ANY KEY TO STOP\");\n      server.start();\n      while (System.in.available() == 0) {\n        Thread.sleep(5000);\n      }\n      server.stop();\n      server.join();\n    } \n    catch (Exception e) {\n      e.printStackTrace();\n      System.exit(100);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d5b778829b5b506ab02023b2f4ba58aef5d7f0fd","date":1420472758,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/StartSolrJetty#main(String[]).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/StartSolrJetty#main(String[]).mjava","sourceNew":"  public static void main( String[] args ) \n  {\n    //System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n\n    Server server = new Server();\n    ServerConnector connector = new ServerConnector(server, new HttpConnectionFactory());\n    // Set some timeout options to make debugging easier.\n    connector.setIdleTimeout(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(8983);\n    server.setConnectors(new Connector[] { connector });\n    \n    WebAppContext bb = new WebAppContext();\n    bb.setServer(server);\n    bb.setContextPath(\"/solr\");\n    bb.setWar(\"webapp/web\");\n\n//    // START JMX SERVER\n//    if( true ) {\n//      MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();\n//      MBeanContainer mBeanContainer = new MBeanContainer(mBeanServer);\n//      server.getContainer().addEventListener(mBeanContainer);\n//      mBeanContainer.start();\n//    }\n    \n    server.setHandler(bb);\n\n    try {\n      System.out.println(\">>> STARTING EMBEDDED JETTY SERVER, PRESS ANY KEY TO STOP\");\n      server.start();\n      while (System.in.available() == 0) {\n        Thread.sleep(5000);\n      }\n      server.stop();\n      server.join();\n    } \n    catch (Exception e) {\n      e.printStackTrace();\n      System.exit(100);\n    }\n  }\n\n","sourceOld":"  public static void main( String[] args ) \n  {\n    //System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n\n    Server server = new Server();\n    SocketConnector connector = new SocketConnector();\n    // Set some timeout options to make debugging easier.\n    connector.setMaxIdleTime(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(8983);\n    server.setConnectors(new Connector[] { connector });\n    \n    WebAppContext bb = new WebAppContext();\n    bb.setServer(server);\n    bb.setContextPath(\"/solr\");\n    bb.setWar(\"webapp/web\");\n\n//    // START JMX SERVER\n//    if( true ) {\n//      MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();\n//      MBeanContainer mBeanContainer = new MBeanContainer(mBeanServer);\n//      server.getContainer().addEventListener(mBeanContainer);\n//      mBeanContainer.start();\n//    }\n    \n    server.setHandler(bb);\n\n    try {\n      System.out.println(\">>> STARTING EMBEDDED JETTY SERVER, PRESS ANY KEY TO STOP\");\n      server.start();\n      while (System.in.available() == 0) {\n        Thread.sleep(5000);\n      }\n      server.stop();\n      server.join();\n    } \n    catch (Exception e) {\n      e.printStackTrace();\n      System.exit(100);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d108aa89491a609eab235fa2459dc3ab78b4c838","date":1576707883,"type":3,"author":"Matthias Krueger","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/StartSolrJetty#main(String[]).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/StartSolrJetty#main(String[]).mjava","sourceNew":"  public static void main( String[] args )\n  {\n    //System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n\n    Server server = new Server();\n    ServerConnector connector = new ServerConnector(server, new HttpConnectionFactory());\n    // Set some timeout options to make debugging easier.\n    connector.setIdleTimeout(1000 * 60 * 60);\n    connector.setPort(8983);\n    server.setConnectors(new Connector[] { connector });\n\n    WebAppContext bb = new WebAppContext();\n    bb.setServer(server);\n    bb.setContextPath(\"/solr\");\n    bb.setWar(\"webapp/web\");\n\n//    // START JMX SERVER\n//    if( true ) {\n//      MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();\n//      MBeanContainer mBeanContainer = new MBeanContainer(mBeanServer);\n//      server.getContainer().addEventListener(mBeanContainer);\n//      mBeanContainer.start();\n//    }\n\n    server.setHandler(bb);\n\n    try {\n      System.out.println(\">>> STARTING EMBEDDED JETTY SERVER, PRESS ANY KEY TO STOP\");\n      server.start();\n      while (System.in.available() == 0) {\n        Thread.sleep(5000);\n      }\n      server.stop();\n      server.join();\n    }\n    catch (Exception e) {\n      e.printStackTrace();\n      System.exit(100);\n    }\n  }\n\n","sourceOld":"  public static void main( String[] args ) \n  {\n    //System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n\n    Server server = new Server();\n    ServerConnector connector = new ServerConnector(server, new HttpConnectionFactory());\n    // Set some timeout options to make debugging easier.\n    connector.setIdleTimeout(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(8983);\n    server.setConnectors(new Connector[] { connector });\n    \n    WebAppContext bb = new WebAppContext();\n    bb.setServer(server);\n    bb.setContextPath(\"/solr\");\n    bb.setWar(\"webapp/web\");\n\n//    // START JMX SERVER\n//    if( true ) {\n//      MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();\n//      MBeanContainer mBeanContainer = new MBeanContainer(mBeanServer);\n//      server.getContainer().addEventListener(mBeanContainer);\n//      mBeanContainer.start();\n//    }\n    \n    server.setHandler(bb);\n\n    try {\n      System.out.println(\">>> STARTING EMBEDDED JETTY SERVER, PRESS ANY KEY TO STOP\");\n      server.start();\n      while (System.in.available() == 0) {\n        Thread.sleep(5000);\n      }\n      server.stop();\n      server.join();\n    } \n    catch (Exception e) {\n      e.printStackTrace();\n      System.exit(100);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c66470e527299cc148ad0b3441d08dfb7cb9e03","date":1576859740,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/StartSolrJetty#main(String[]).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/StartSolrJetty#main(String[]).mjava","sourceNew":"  public static void main( String[] args )\n  {\n    //System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n\n    Server server = new Server();\n    ServerConnector connector = new ServerConnector(server, new HttpConnectionFactory());\n    // Set some timeout options to make debugging easier.\n    connector.setIdleTimeout(1000 * 60 * 60);\n    connector.setPort(8983);\n    server.setConnectors(new Connector[] { connector });\n\n    WebAppContext bb = new WebAppContext();\n    bb.setServer(server);\n    bb.setContextPath(\"/solr\");\n    bb.setWar(\"webapp/web\");\n\n//    // START JMX SERVER\n//    if( true ) {\n//      MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();\n//      MBeanContainer mBeanContainer = new MBeanContainer(mBeanServer);\n//      server.getContainer().addEventListener(mBeanContainer);\n//      mBeanContainer.start();\n//    }\n\n    server.setHandler(bb);\n\n    try {\n      System.out.println(\">>> STARTING EMBEDDED JETTY SERVER, PRESS ANY KEY TO STOP\");\n      server.start();\n      while (System.in.available() == 0) {\n        Thread.sleep(5000);\n      }\n      server.stop();\n      server.join();\n    }\n    catch (Exception e) {\n      e.printStackTrace();\n      System.exit(100);\n    }\n  }\n\n","sourceOld":"  public static void main( String[] args ) \n  {\n    //System.setProperty(\"solr.solr.home\", \"../../../example/solr\");\n\n    Server server = new Server();\n    ServerConnector connector = new ServerConnector(server, new HttpConnectionFactory());\n    // Set some timeout options to make debugging easier.\n    connector.setIdleTimeout(1000 * 60 * 60);\n    connector.setSoLingerTime(-1);\n    connector.setPort(8983);\n    server.setConnectors(new Connector[] { connector });\n    \n    WebAppContext bb = new WebAppContext();\n    bb.setServer(server);\n    bb.setContextPath(\"/solr\");\n    bb.setWar(\"webapp/web\");\n\n//    // START JMX SERVER\n//    if( true ) {\n//      MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();\n//      MBeanContainer mBeanContainer = new MBeanContainer(mBeanServer);\n//      server.getContainer().addEventListener(mBeanContainer);\n//      mBeanContainer.start();\n//    }\n    \n    server.setHandler(bb);\n\n    try {\n      System.out.println(\">>> STARTING EMBEDDED JETTY SERVER, PRESS ANY KEY TO STOP\");\n      server.start();\n      while (System.in.available() == 0) {\n        Thread.sleep(5000);\n      }\n      server.stop();\n      server.join();\n    } \n    catch (Exception e) {\n      e.printStackTrace();\n      System.exit(100);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["c26f00b574427b55127e869b935845554afde1fa","5bdb669e0dcae1188466e95a41329944ae8b4bc2"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9507caf22f292ac0e5e59f62db4275adf4511"],"9d6c5c6226ab2177d29ab21112ec81e5afb21e75":["5bdb669e0dcae1188466e95a41329944ae8b4bc2"],"eb57e8385192a8db78b9a00d00a1425c3d1977b0":["c26f00b574427b55127e869b935845554afde1fa"],"4c66470e527299cc148ad0b3441d08dfb7cb9e03":["d5b778829b5b506ab02023b2f4ba58aef5d7f0fd","d108aa89491a609eab235fa2459dc3ab78b4c838"],"d5b778829b5b506ab02023b2f4ba58aef5d7f0fd":["9d6c5c6226ab2177d29ab21112ec81e5afb21e75"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d108aa89491a609eab235fa2459dc3ab78b4c838":["d5b778829b5b506ab02023b2f4ba58aef5d7f0fd"],"5bdb669e0dcae1188466e95a41329944ae8b4bc2":["eb57e8385192a8db78b9a00d00a1425c3d1977b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d108aa89491a609eab235fa2459dc3ab78b4c838"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"c26f00b574427b55127e869b935845554afde1fa":["38e3b736c7ca086d61b7dbb841c905ee115490da","eb57e8385192a8db78b9a00d00a1425c3d1977b0"],"9d6c5c6226ab2177d29ab21112ec81e5afb21e75":["d5b778829b5b506ab02023b2f4ba58aef5d7f0fd"],"eb57e8385192a8db78b9a00d00a1425c3d1977b0":["5bdb669e0dcae1188466e95a41329944ae8b4bc2"],"4c66470e527299cc148ad0b3441d08dfb7cb9e03":[],"d5b778829b5b506ab02023b2f4ba58aef5d7f0fd":["4c66470e527299cc148ad0b3441d08dfb7cb9e03","d108aa89491a609eab235fa2459dc3ab78b4c838"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["f0b9507caf22f292ac0e5e59f62db4275adf4511"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["f0b9507caf22f292ac0e5e59f62db4275adf4511"],"5bdb669e0dcae1188466e95a41329944ae8b4bc2":["38e3b736c7ca086d61b7dbb841c905ee115490da","9d6c5c6226ab2177d29ab21112ec81e5afb21e75"],"d108aa89491a609eab235fa2459dc3ab78b4c838":["4c66470e527299cc148ad0b3441d08dfb7cb9e03","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","4c66470e527299cc148ad0b3441d08dfb7cb9e03","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}