{"path":"lucene/core/src/java/org/apache/lucene/util/NumericUtils#compare(int,byte[],int,byte[],int).mjava","commits":[{"id":"770342641f7b505eaa8dccdc666158bff2419109","date":1449868421,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/NumericUtils#compare(int,byte[],int,byte[],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDUtil#compare(int,byte[],int,byte[],int).mjava","sourceNew":"  /** Returns positive int if a &gt; b, negative int if a &lt; b and 0 if a == b */\n  public static int compare(int bytesPerDim, byte[] a, int aIndex, byte[] b, int bIndex) {\n    assert aIndex >= 0;\n    assert bIndex >= 0;\n    int aOffset = aIndex*bytesPerDim;\n    int bOffset = bIndex*bytesPerDim;\n    for(int i=0;i<bytesPerDim;i++) {\n      int cmp = (a[aOffset+i]&0xff) - (b[bOffset+i]&0xff);\n      if (cmp != 0) {\n        return cmp;\n      }\n    }\n\n    return 0;\n  }\n\n","sourceOld":"  /** Returns positive int if a &gt; b, negative int if a &lt; b and 0 if a == b */\n  public static int compare(int bytesPerDim, byte[] a, int aIndex, byte[] b, int bIndex) {\n    assert aIndex >= 0;\n    assert bIndex >= 0;\n    int aOffset = aIndex*bytesPerDim;\n    int bOffset = bIndex*bytesPerDim;\n    for(int i=0;i<bytesPerDim;i++) {\n      int cmp = (a[aOffset+i]&0xff) - (b[bOffset+i]&0xff);\n      if (cmp != 0) {\n        return cmp;\n      }\n    }\n\n    return 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12bfdc932307442b651432f92845942f9041ace8","date":1456860728,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/NumericUtils#compare(int,byte[],int,byte[],int).mjava","sourceNew":null,"sourceOld":"  /** Returns positive int if a &gt; b, negative int if a &lt; b and 0 if a == b */\n  public static int compare(int bytesPerDim, byte[] a, int aIndex, byte[] b, int bIndex) {\n    assert aIndex >= 0;\n    assert bIndex >= 0;\n    int aOffset = aIndex*bytesPerDim;\n    int bOffset = bIndex*bytesPerDim;\n    for(int i=0;i<bytesPerDim;i++) {\n      int cmp = (a[aOffset+i]&0xff) - (b[bOffset+i]&0xff);\n      if (cmp != 0) {\n        return cmp;\n      }\n    }\n\n    return 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/NumericUtils#compare(int,byte[],int,byte[],int).mjava","sourceNew":null,"sourceOld":"  /** Returns positive int if a &gt; b, negative int if a &lt; b and 0 if a == b */\n  public static int compare(int bytesPerDim, byte[] a, int aIndex, byte[] b, int bIndex) {\n    assert aIndex >= 0;\n    assert bIndex >= 0;\n    int aOffset = aIndex*bytesPerDim;\n    int bOffset = bIndex*bytesPerDim;\n    for(int i=0;i<bytesPerDim;i++) {\n      int cmp = (a[aOffset+i]&0xff) - (b[bOffset+i]&0xff);\n      if (cmp != 0) {\n        return cmp;\n      }\n    }\n\n    return 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"12bfdc932307442b651432f92845942f9041ace8":["770342641f7b505eaa8dccdc666158bff2419109"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["770342641f7b505eaa8dccdc666158bff2419109","12bfdc932307442b651432f92845942f9041ace8"],"770342641f7b505eaa8dccdc666158bff2419109":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"]},"commit2Childs":{"12bfdc932307442b651432f92845942f9041ace8":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["770342641f7b505eaa8dccdc666158bff2419109"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"770342641f7b505eaa8dccdc666158bff2419109":["12bfdc932307442b651432f92845942f9041ace8","cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}