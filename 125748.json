{"path":"lucene/facet/src/test/org/apache/lucene/facet/search/params/MultiIteratorsPerCLParamsTest.PerDimensionCLI#PerDimensionCLI(TaxonomyReader,CategoryListIterator,CategoryPath).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/params/MultiIteratorsPerCLParamsTest.PerDimensionCLI#PerDimensionCLI(TaxonomyReader,CategoryListIterator,CategoryPath).mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/search/params/MultiIteratorsPerCLParamsTest.PerDimensionCLI#PerDimensionCLI(TaxonomyReader,CategoryListIterator,CategoryPath).mjava","sourceNew":"    PerDimensionCLI(TaxonomyReader taxo, CategoryListIterator superCLI,\n        CategoryPath requestedPath) throws IOException {\n      this.superCLI = superCLI;\n      if (requestedPath == null) {\n        parentOrdinal = 0;\n      } else {\n        CategoryPath cp = new CategoryPath(requestedPath.getComponent(0));\n        parentOrdinal = taxo.getOrdinal(cp);\n      }\n      parentArray = taxo.getParentArray();\n    }\n\n","sourceOld":"    PerDimensionCLI(TaxonomyReader taxo, CategoryListIterator superCLI,\n        CategoryPath requestedPath) throws IOException {\n      this.superCLI = superCLI;\n      if (requestedPath == null) {\n        parentOrdinal = 0;\n      } else {\n        CategoryPath cp = new CategoryPath(requestedPath.getComponent(0));\n        parentOrdinal = taxo.getOrdinal(cp);\n      }\n      parentArray = taxo.getParentArray();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d58d08788c3fd51172ba34474cca42499d6391b","date":1354802133,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/params/MultiIteratorsPerCLParamsTest.PerDimensionCLI#PerDimensionCLI(TaxonomyReader,CategoryListIterator,CategoryPath).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/params/MultiIteratorsPerCLParamsTest.PerDimensionCLI#PerDimensionCLI(TaxonomyReader,CategoryListIterator,CategoryPath).mjava","sourceNew":"    PerDimensionCLI(TaxonomyReader taxo, CategoryListIterator superCLI,\n        CategoryPath requestedPath) throws IOException {\n      this.superCLI = superCLI;\n      if (requestedPath == null) {\n        parentOrdinal = 0;\n      } else {\n        CategoryPath cp = new CategoryPath(requestedPath.getComponent(0));\n        parentOrdinal = taxo.getOrdinal(cp);\n      }\n      parentArray = taxo.getParallelTaxonomyArrays().parents();\n    }\n\n","sourceOld":"    PerDimensionCLI(TaxonomyReader taxo, CategoryListIterator superCLI,\n        CategoryPath requestedPath) throws IOException {\n      this.superCLI = superCLI;\n      if (requestedPath == null) {\n        parentOrdinal = 0;\n      } else {\n        CategoryPath cp = new CategoryPath(requestedPath.getComponent(0));\n        parentOrdinal = taxo.getOrdinal(cp);\n      }\n      parentArray = taxo.getParentArray();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/params/MultiIteratorsPerCLParamsTest.PerDimensionCLI#PerDimensionCLI(TaxonomyReader,CategoryListIterator,CategoryPath).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/params/MultiIteratorsPerCLParamsTest.PerDimensionCLI#PerDimensionCLI(TaxonomyReader,CategoryListIterator,CategoryPath).mjava","sourceNew":"    PerDimensionCLI(TaxonomyReader taxo, CategoryListIterator superCLI,\n        CategoryPath requestedPath) throws IOException {\n      this.superCLI = superCLI;\n      if (requestedPath == null) {\n        parentOrdinal = 0;\n      } else {\n        CategoryPath cp = new CategoryPath(requestedPath.getComponent(0));\n        parentOrdinal = taxo.getOrdinal(cp);\n      }\n      parentArray = taxo.getParallelTaxonomyArrays().parents();\n    }\n\n","sourceOld":"    PerDimensionCLI(TaxonomyReader taxo, CategoryListIterator superCLI,\n        CategoryPath requestedPath) throws IOException {\n      this.superCLI = superCLI;\n      if (requestedPath == null) {\n        parentOrdinal = 0;\n      } else {\n        CategoryPath cp = new CategoryPath(requestedPath.getComponent(0));\n        parentOrdinal = taxo.getOrdinal(cp);\n      }\n      parentArray = taxo.getParentArray();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1","date":1357499264,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/params/MultiIteratorsPerCLParamsTest.PerDimensionCLI#PerDimensionCLI(TaxonomyReader,CategoryListIterator,CategoryPath).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/params/MultiIteratorsPerCLParamsTest.PerDimensionCLI#PerDimensionCLI(TaxonomyReader,CategoryListIterator,CategoryPath).mjava","sourceNew":"    PerDimensionCLI(TaxonomyReader taxo, CategoryListIterator superCLI,\n        CategoryPath requestedPath) throws IOException {\n      this.superCLI = superCLI;\n      if (requestedPath == null) {\n        parentOrdinal = 0;\n      } else {\n        CategoryPath cp = new CategoryPath(requestedPath.components[0]);\n        parentOrdinal = taxo.getOrdinal(cp);\n      }\n      parentArray = taxo.getParallelTaxonomyArrays().parents();\n    }\n\n","sourceOld":"    PerDimensionCLI(TaxonomyReader taxo, CategoryListIterator superCLI,\n        CategoryPath requestedPath) throws IOException {\n      this.superCLI = superCLI;\n      if (requestedPath == null) {\n        parentOrdinal = 0;\n      } else {\n        CategoryPath cp = new CategoryPath(requestedPath.getComponent(0));\n        parentOrdinal = taxo.getOrdinal(cp);\n      }\n      parentArray = taxo.getParallelTaxonomyArrays().parents();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/params/MultiIteratorsPerCLParamsTest.PerDimensionCLI#PerDimensionCLI(TaxonomyReader,CategoryListIterator,CategoryPath).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/params/MultiIteratorsPerCLParamsTest.PerDimensionCLI#PerDimensionCLI(TaxonomyReader,CategoryListIterator,CategoryPath).mjava","sourceNew":"    PerDimensionCLI(TaxonomyReader taxo, CategoryListIterator superCLI,\n        CategoryPath requestedPath) throws IOException {\n      this.superCLI = superCLI;\n      if (requestedPath == null) {\n        parentOrdinal = 0;\n      } else {\n        CategoryPath cp = new CategoryPath(requestedPath.components[0]);\n        parentOrdinal = taxo.getOrdinal(cp);\n      }\n      parentArray = taxo.getParallelTaxonomyArrays().parents();\n    }\n\n","sourceOld":"    PerDimensionCLI(TaxonomyReader taxo, CategoryListIterator superCLI,\n        CategoryPath requestedPath) throws IOException {\n      this.superCLI = superCLI;\n      if (requestedPath == null) {\n        parentOrdinal = 0;\n      } else {\n        CategoryPath cp = new CategoryPath(requestedPath.getComponent(0));\n        parentOrdinal = taxo.getOrdinal(cp);\n      }\n      parentArray = taxo.getParallelTaxonomyArrays().parents();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bceb02c33032dd9bbf107cd06d0b74e5db4f110a","date":1357909746,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/params/MultiIteratorsPerCLParamsTest.PerDimensionCLI#PerDimensionCLI(TaxonomyReader,CategoryListIterator,CategoryPath).mjava","sourceNew":null,"sourceOld":"    PerDimensionCLI(TaxonomyReader taxo, CategoryListIterator superCLI,\n        CategoryPath requestedPath) throws IOException {\n      this.superCLI = superCLI;\n      if (requestedPath == null) {\n        parentOrdinal = 0;\n      } else {\n        CategoryPath cp = new CategoryPath(requestedPath.components[0]);\n        parentOrdinal = taxo.getOrdinal(cp);\n      }\n      parentArray = taxo.getParallelTaxonomyArrays().parents();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e6354dd7c71fe122926fc53d7d29f715b1283db","date":1357915185,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/params/MultiIteratorsPerCLParamsTest.PerDimensionCLI#PerDimensionCLI(TaxonomyReader,CategoryListIterator,CategoryPath).mjava","sourceNew":null,"sourceOld":"    PerDimensionCLI(TaxonomyReader taxo, CategoryListIterator superCLI,\n        CategoryPath requestedPath) throws IOException {\n      this.superCLI = superCLI;\n      if (requestedPath == null) {\n        parentOrdinal = 0;\n      } else {\n        CategoryPath cp = new CategoryPath(requestedPath.components[0]);\n        parentOrdinal = taxo.getOrdinal(cp);\n      }\n      parentArray = taxo.getParallelTaxonomyArrays().parents();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["407687e67faf6e1f02a211ca078d8e3eed631027","d90771c07d45c6ad884c5ef9cb3a6eeb257238d1"],"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1":["3d58d08788c3fd51172ba34474cca42499d6391b"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bceb02c33032dd9bbf107cd06d0b74e5db4f110a":["d90771c07d45c6ad884c5ef9cb3a6eeb257238d1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["b89678825b68eccaf09e6ab71675fc0b0af1e099","3d58d08788c3fd51172ba34474cca42499d6391b"],"3d58d08788c3fd51172ba34474cca42499d6391b":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","bceb02c33032dd9bbf107cd06d0b74e5db4f110a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bceb02c33032dd9bbf107cd06d0b74e5db4f110a"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["4e6354dd7c71fe122926fc53d7d29f715b1283db"],"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","bceb02c33032dd9bbf107cd06d0b74e5db4f110a"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["407687e67faf6e1f02a211ca078d8e3eed631027","3d58d08788c3fd51172ba34474cca42499d6391b"],"bceb02c33032dd9bbf107cd06d0b74e5db4f110a":["4e6354dd7c71fe122926fc53d7d29f715b1283db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"407687e67faf6e1f02a211ca078d8e3eed631027":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"3d58d08788c3fd51172ba34474cca42499d6391b":["d90771c07d45c6ad884c5ef9cb3a6eeb257238d1","407687e67faf6e1f02a211ca078d8e3eed631027"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4e6354dd7c71fe122926fc53d7d29f715b1283db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}