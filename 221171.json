{"path":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","commits":[{"id":"0ceb5bb30e401cb218b31197b1a9aa47e77cda17","date":1336330521,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    IndexWriterConfig iwConfig = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\");\n    document.add(idField);\n    Field byteField = new StringField(\"byte\", \"\");\n    document.add(byteField);\n    Field doubleField = new StringField(\"double\", \"\");\n    document.add(doubleField);\n    Field floatField = new StringField(\"float\", \"\");\n    document.add(floatField);\n    Field intField = new StringField(\"int\", \"\");\n    document.add(intField);\n    Field longField = new StringField(\"long\", \"\");\n    document.add(longField);\n    Field shortField = new StringField(\"short\", \"\");\n    document.add(shortField);\n    Field stringField = new StringField(\"string\", \"\");\n    document.add(stringField);\n    Field textField = new TextField(\"text\", \"\");\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      byteField.setStringValue(doc[1]);\n      doubleField.setStringValue(doc[2]);\n      floatField.setStringValue(doc[3]);\n      intField.setStringValue(doc[4]);\n      longField.setStringValue(doc[5]);\n      shortField.setStringValue(doc[6]);\n      stringField.setStringValue(doc[7]);\n      textField.setStringValue(doc[8]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    searcher.setDefaultFieldSortScoring(true, true);\n    iw.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fb02351ae2b114dd41585916d1e35fb2cff98fb0","date":1337171337,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    IndexWriterConfig iwConfig = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\");\n    document.add(idField);\n    Field byteField = new StringField(\"byte\", \"\");\n    document.add(byteField);\n    Field doubleField = new StringField(\"double\", \"\");\n    document.add(doubleField);\n    Field floatField = new StringField(\"float\", \"\");\n    document.add(floatField);\n    Field intField = new StringField(\"int\", \"\");\n    document.add(intField);\n    Field longField = new StringField(\"long\", \"\");\n    document.add(longField);\n    Field shortField = new StringField(\"short\", \"\");\n    document.add(shortField);\n    Field stringField = new StringField(\"string\", \"\");\n    document.add(stringField);\n    Field textField = new TextField(\"text\", \"\");\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      byteField.setStringValue(doc[1]);\n      doubleField.setStringValue(doc[2]);\n      floatField.setStringValue(doc[3]);\n      intField.setStringValue(doc[4]);\n      longField.setStringValue(doc[5]);\n      shortField.setStringValue(doc[6]);\n      stringField.setStringValue(doc[7]);\n      textField.setStringValue(doc[8]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    IndexWriterConfig iwConfig = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\");\n    document.add(idField);\n    Field byteField = new StringField(\"byte\", \"\");\n    document.add(byteField);\n    Field doubleField = new StringField(\"double\", \"\");\n    document.add(doubleField);\n    Field floatField = new StringField(\"float\", \"\");\n    document.add(floatField);\n    Field intField = new StringField(\"int\", \"\");\n    document.add(intField);\n    Field longField = new StringField(\"long\", \"\");\n    document.add(longField);\n    Field shortField = new StringField(\"short\", \"\");\n    document.add(shortField);\n    Field stringField = new StringField(\"string\", \"\");\n    document.add(stringField);\n    Field textField = new TextField(\"text\", \"\");\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      byteField.setStringValue(doc[1]);\n      doubleField.setStringValue(doc[2]);\n      floatField.setStringValue(doc[3]);\n      intField.setStringValue(doc[4]);\n      longField.setStringValue(doc[5]);\n      shortField.setStringValue(doc[6]);\n      stringField.setStringValue(doc[7]);\n      textField.setStringValue(doc[8]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    searcher.setDefaultFieldSortScoring(true, true);\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ef0d8a69209261514c5739c770bba706c2308450","date":1337607597,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    IndexWriterConfig iwConfig = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\");\n    document.add(idField);\n    Field byteField = new StringField(\"byte\", \"\");\n    document.add(byteField);\n    Field doubleField = new StringField(\"double\", \"\");\n    document.add(doubleField);\n    Field floatField = new StringField(\"float\", \"\");\n    document.add(floatField);\n    Field intField = new StringField(\"int\", \"\");\n    document.add(intField);\n    Field longField = new StringField(\"long\", \"\");\n    document.add(longField);\n    Field shortField = new StringField(\"short\", \"\");\n    document.add(shortField);\n    Field stringField = new StringField(\"string\", \"\");\n    document.add(stringField);\n    Field textField = new TextField(\"text\", \"\");\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      byteField.setStringValue(doc[1]);\n      doubleField.setStringValue(doc[2]);\n      floatField.setStringValue(doc[3]);\n      intField.setStringValue(doc[4]);\n      longField.setStringValue(doc[5]);\n      shortField.setStringValue(doc[6]);\n      stringField.setStringValue(doc[7]);\n      textField.setStringValue(doc[8]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    IndexWriterConfig iwConfig = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\");\n    document.add(idField);\n    Field byteField = new StringField(\"byte\", \"\");\n    document.add(byteField);\n    Field doubleField = new StringField(\"double\", \"\");\n    document.add(doubleField);\n    Field floatField = new StringField(\"float\", \"\");\n    document.add(floatField);\n    Field intField = new StringField(\"int\", \"\");\n    document.add(intField);\n    Field longField = new StringField(\"long\", \"\");\n    document.add(longField);\n    Field shortField = new StringField(\"short\", \"\");\n    document.add(shortField);\n    Field stringField = new StringField(\"string\", \"\");\n    document.add(stringField);\n    Field textField = new TextField(\"text\", \"\");\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      byteField.setStringValue(doc[1]);\n      doubleField.setStringValue(doc[2]);\n      floatField.setStringValue(doc[3]);\n      intField.setStringValue(doc[4]);\n      longField.setStringValue(doc[5]);\n      shortField.setStringValue(doc[6]);\n      stringField.setStringValue(doc[7]);\n      textField.setStringValue(doc[8]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    searcher.setDefaultFieldSortScoring(true, true);\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    IndexWriterConfig iwConfig = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\", Field.Store.NO);\n    document.add(idField);\n    Field byteField = new StringField(\"byte\", \"\", Field.Store.NO);\n    document.add(byteField);\n    Field doubleField = new StringField(\"double\", \"\", Field.Store.NO);\n    document.add(doubleField);\n    Field floatField = new StringField(\"float\", \"\", Field.Store.NO);\n    document.add(floatField);\n    Field intField = new StringField(\"int\", \"\", Field.Store.NO);\n    document.add(intField);\n    Field longField = new StringField(\"long\", \"\", Field.Store.NO);\n    document.add(longField);\n    Field shortField = new StringField(\"short\", \"\", Field.Store.NO);\n    document.add(shortField);\n    Field stringField = new StringField(\"string\", \"\", Field.Store.NO);\n    document.add(stringField);\n    Field textField = new TextField(\"text\", \"\", Field.Store.NO);\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      byteField.setStringValue(doc[1]);\n      doubleField.setStringValue(doc[2]);\n      floatField.setStringValue(doc[3]);\n      intField.setStringValue(doc[4]);\n      longField.setStringValue(doc[5]);\n      shortField.setStringValue(doc[6]);\n      stringField.setStringValue(doc[7]);\n      textField.setStringValue(doc[8]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    IndexWriterConfig iwConfig = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\");\n    document.add(idField);\n    Field byteField = new StringField(\"byte\", \"\");\n    document.add(byteField);\n    Field doubleField = new StringField(\"double\", \"\");\n    document.add(doubleField);\n    Field floatField = new StringField(\"float\", \"\");\n    document.add(floatField);\n    Field intField = new StringField(\"int\", \"\");\n    document.add(intField);\n    Field longField = new StringField(\"long\", \"\");\n    document.add(longField);\n    Field shortField = new StringField(\"short\", \"\");\n    document.add(shortField);\n    Field stringField = new StringField(\"string\", \"\");\n    document.add(stringField);\n    Field textField = new TextField(\"text\", \"\");\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      byteField.setStringValue(doc[1]);\n      doubleField.setStringValue(doc[2]);\n      floatField.setStringValue(doc[3]);\n      intField.setStringValue(doc[4]);\n      longField.setStringValue(doc[5]);\n      shortField.setStringValue(doc[6]);\n      stringField.setStringValue(doc[7]);\n      textField.setStringValue(doc[8]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.close();\n  }\n\n","bugFix":["0ceb5bb30e401cb218b31197b1a9aa47e77cda17"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59a0020b413d44dd79d85d7a66ed5004265fb453","date":1371758877,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    IndexWriterConfig iwConfig = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\", Field.Store.NO);\n    document.add(idField);\n    Field doubleField = new DoubleField(\"double\", 0d, Field.Store.NO);\n    document.add(doubleField);\n    Field floatField = new FloatField(\"float\", 0f, Field.Store.NO);\n    document.add(floatField);\n    Field intField = new IntField(\"int\", 0, Field.Store.NO);\n    document.add(intField);\n    Field longField = new LongField(\"long\", 0L, Field.Store.NO);\n    document.add(longField);\n    Field stringField = new StringField(\"string\", \"\", Field.Store.NO);\n    document.add(stringField);\n    Field textField = new TextField(\"text\", \"\", Field.Store.NO);\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      doubleField.setDoubleValue(Double.valueOf(doc[1]));\n      floatField.setFloatValue(Float.valueOf(doc[2]));\n      intField.setIntValue(Integer.valueOf(doc[3]));\n      longField.setLongValue(Long.valueOf(doc[4]));\n      stringField.setStringValue(doc[5]);\n      textField.setStringValue(doc[6]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    IndexWriterConfig iwConfig = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\", Field.Store.NO);\n    document.add(idField);\n    Field byteField = new StringField(\"byte\", \"\", Field.Store.NO);\n    document.add(byteField);\n    Field doubleField = new StringField(\"double\", \"\", Field.Store.NO);\n    document.add(doubleField);\n    Field floatField = new StringField(\"float\", \"\", Field.Store.NO);\n    document.add(floatField);\n    Field intField = new StringField(\"int\", \"\", Field.Store.NO);\n    document.add(intField);\n    Field longField = new StringField(\"long\", \"\", Field.Store.NO);\n    document.add(longField);\n    Field shortField = new StringField(\"short\", \"\", Field.Store.NO);\n    document.add(shortField);\n    Field stringField = new StringField(\"string\", \"\", Field.Store.NO);\n    document.add(stringField);\n    Field textField = new TextField(\"text\", \"\", Field.Store.NO);\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      byteField.setStringValue(doc[1]);\n      doubleField.setStringValue(doc[2]);\n      floatField.setStringValue(doc[3]);\n      intField.setStringValue(doc[4]);\n      longField.setStringValue(doc[5]);\n      shortField.setStringValue(doc[6]);\n      stringField.setStringValue(doc[7]);\n      textField.setStringValue(doc[8]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    IndexWriterConfig iwConfig = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\", Field.Store.NO);\n    document.add(idField);\n    Field doubleField = new DoubleField(\"double\", 0d, Field.Store.NO);\n    document.add(doubleField);\n    Field floatField = new FloatField(\"float\", 0f, Field.Store.NO);\n    document.add(floatField);\n    Field intField = new IntField(\"int\", 0, Field.Store.NO);\n    document.add(intField);\n    Field longField = new LongField(\"long\", 0L, Field.Store.NO);\n    document.add(longField);\n    Field stringField = new StringField(\"string\", \"\", Field.Store.NO);\n    document.add(stringField);\n    Field textField = new TextField(\"text\", \"\", Field.Store.NO);\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      doubleField.setDoubleValue(Double.valueOf(doc[1]));\n      floatField.setFloatValue(Float.valueOf(doc[2]));\n      intField.setIntValue(Integer.valueOf(doc[3]));\n      longField.setLongValue(Long.valueOf(doc[4]));\n      stringField.setStringValue(doc[5]);\n      textField.setStringValue(doc[6]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    IndexWriterConfig iwConfig = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\", Field.Store.NO);\n    document.add(idField);\n    Field byteField = new StringField(\"byte\", \"\", Field.Store.NO);\n    document.add(byteField);\n    Field doubleField = new StringField(\"double\", \"\", Field.Store.NO);\n    document.add(doubleField);\n    Field floatField = new StringField(\"float\", \"\", Field.Store.NO);\n    document.add(floatField);\n    Field intField = new StringField(\"int\", \"\", Field.Store.NO);\n    document.add(intField);\n    Field longField = new StringField(\"long\", \"\", Field.Store.NO);\n    document.add(longField);\n    Field shortField = new StringField(\"short\", \"\", Field.Store.NO);\n    document.add(shortField);\n    Field stringField = new StringField(\"string\", \"\", Field.Store.NO);\n    document.add(stringField);\n    Field textField = new TextField(\"text\", \"\", Field.Store.NO);\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      byteField.setStringValue(doc[1]);\n      doubleField.setStringValue(doc[2]);\n      floatField.setStringValue(doc[3]);\n      intField.setStringValue(doc[4]);\n      longField.setStringValue(doc[5]);\n      shortField.setStringValue(doc[6]);\n      stringField.setStringValue(doc[7]);\n      textField.setStringValue(doc[8]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    IndexWriterConfig iwConfig = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\", Field.Store.NO);\n    document.add(idField);\n    Field doubleField = new DoubleField(\"double\", 0d, Field.Store.NO);\n    document.add(doubleField);\n    Field floatField = new FloatField(\"float\", 0f, Field.Store.NO);\n    document.add(floatField);\n    Field intField = new IntField(\"int\", 0, Field.Store.NO);\n    document.add(intField);\n    Field longField = new LongField(\"long\", 0L, Field.Store.NO);\n    document.add(longField);\n    Field stringField = new StringField(\"string\", \"\", Field.Store.NO);\n    document.add(stringField);\n    Field textField = new TextField(\"text\", \"\", Field.Store.NO);\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      doubleField.setDoubleValue(Double.valueOf(doc[1]));\n      floatField.setFloatValue(Float.valueOf(doc[2]));\n      intField.setIntValue(Integer.valueOf(doc[3]));\n      longField.setLongValue(Long.valueOf(doc[4]));\n      stringField.setStringValue(doc[5]);\n      textField.setStringValue(doc[6]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.shutdown();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    IndexWriterConfig iwConfig = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\", Field.Store.NO);\n    document.add(idField);\n    Field doubleField = new DoubleField(\"double\", 0d, Field.Store.NO);\n    document.add(doubleField);\n    Field floatField = new FloatField(\"float\", 0f, Field.Store.NO);\n    document.add(floatField);\n    Field intField = new IntField(\"int\", 0, Field.Store.NO);\n    document.add(intField);\n    Field longField = new LongField(\"long\", 0L, Field.Store.NO);\n    document.add(longField);\n    Field stringField = new StringField(\"string\", \"\", Field.Store.NO);\n    document.add(stringField);\n    Field textField = new TextField(\"text\", \"\", Field.Store.NO);\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      doubleField.setDoubleValue(Double.valueOf(doc[1]));\n      floatField.setFloatValue(Float.valueOf(doc[2]));\n      intField.setIntValue(Integer.valueOf(doc[3]));\n      longField.setLongValue(Long.valueOf(doc[4]));\n      stringField.setStringValue(doc[5]);\n      textField.setStringValue(doc[6]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","date":1399816179,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    IndexWriterConfig iwConfig = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\", Field.Store.NO);\n    document.add(idField);\n    Field idDVField = new SortedDocValuesField(\"id\", new BytesRef());\n    document.add(idDVField);\n    Field doubleField = new DoubleField(\"double\", 0d, Field.Store.NO);\n    document.add(doubleField);\n    Field doubleDVField = new NumericDocValuesField(\"double\", 0);\n    document.add(doubleDVField);\n    Field floatField = new FloatField(\"float\", 0f, Field.Store.NO);\n    document.add(floatField);\n    Field floatDVField = new NumericDocValuesField(\"float\", 0);\n    document.add(floatDVField);\n    Field intField = new IntField(\"int\", 0, Field.Store.NO);\n    document.add(intField);\n    Field intDVField = new NumericDocValuesField(\"int\", 0);\n    document.add(intDVField);\n    Field longField = new LongField(\"long\", 0L, Field.Store.NO);\n    document.add(longField);\n    Field longDVField = new NumericDocValuesField(\"long\", 0);\n    document.add(longDVField);\n    Field stringField = new StringField(\"string\", \"\", Field.Store.NO);\n    document.add(stringField);\n    Field stringDVField = new SortedDocValuesField(\"string\", new BytesRef());\n    document.add(stringDVField);\n    Field textField = new TextField(\"text\", \"\", Field.Store.NO);\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      idDVField.setBytesValue(new BytesRef(doc[0]));\n      doubleField.setDoubleValue(Double.valueOf(doc[1]));\n      doubleDVField.setLongValue(Double.doubleToRawLongBits(Double.valueOf(doc[1])));\n      floatField.setFloatValue(Float.valueOf(doc[2]));\n      floatDVField.setLongValue(Float.floatToRawIntBits(Float.valueOf(doc[2])));\n      intField.setIntValue(Integer.valueOf(doc[3]));\n      intDVField.setLongValue(Integer.valueOf(doc[3]));\n      longField.setLongValue(Long.valueOf(doc[4]));\n      longDVField.setLongValue(Long.valueOf(doc[4]));\n      stringField.setStringValue(doc[5]);\n      stringDVField.setBytesValue(new BytesRef(doc[5]));\n      textField.setStringValue(doc[6]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.shutdown();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    IndexWriterConfig iwConfig = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\", Field.Store.NO);\n    document.add(idField);\n    Field doubleField = new DoubleField(\"double\", 0d, Field.Store.NO);\n    document.add(doubleField);\n    Field floatField = new FloatField(\"float\", 0f, Field.Store.NO);\n    document.add(floatField);\n    Field intField = new IntField(\"int\", 0, Field.Store.NO);\n    document.add(intField);\n    Field longField = new LongField(\"long\", 0L, Field.Store.NO);\n    document.add(longField);\n    Field stringField = new StringField(\"string\", \"\", Field.Store.NO);\n    document.add(stringField);\n    Field textField = new TextField(\"text\", \"\", Field.Store.NO);\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      doubleField.setDoubleValue(Double.valueOf(doc[1]));\n      floatField.setFloatValue(Float.valueOf(doc[2]));\n      intField.setIntValue(Integer.valueOf(doc[3]));\n      longField.setLongValue(Long.valueOf(doc[4]));\n      stringField.setStringValue(doc[5]);\n      textField.setStringValue(doc[6]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    IndexWriterConfig iwConfig = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\", Field.Store.NO);\n    document.add(idField);\n    Field idDVField = new SortedDocValuesField(\"id\", new BytesRef());\n    document.add(idDVField);\n    Field doubleField = new DoubleField(\"double\", 0d, Field.Store.NO);\n    document.add(doubleField);\n    Field doubleDVField = new NumericDocValuesField(\"double\", 0);\n    document.add(doubleDVField);\n    Field floatField = new FloatField(\"float\", 0f, Field.Store.NO);\n    document.add(floatField);\n    Field floatDVField = new NumericDocValuesField(\"float\", 0);\n    document.add(floatDVField);\n    Field intField = new IntField(\"int\", 0, Field.Store.NO);\n    document.add(intField);\n    Field intDVField = new NumericDocValuesField(\"int\", 0);\n    document.add(intDVField);\n    Field longField = new LongField(\"long\", 0L, Field.Store.NO);\n    document.add(longField);\n    Field longDVField = new NumericDocValuesField(\"long\", 0);\n    document.add(longDVField);\n    Field stringField = new StringField(\"string\", \"\", Field.Store.NO);\n    document.add(stringField);\n    Field stringDVField = new SortedDocValuesField(\"string\", new BytesRef());\n    document.add(stringDVField);\n    Field textField = new TextField(\"text\", \"\", Field.Store.NO);\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      idDVField.setBytesValue(new BytesRef(doc[0]));\n      doubleField.setDoubleValue(Double.valueOf(doc[1]));\n      doubleDVField.setLongValue(Double.doubleToRawLongBits(Double.valueOf(doc[1])));\n      floatField.setFloatValue(Float.valueOf(doc[2]));\n      floatDVField.setLongValue(Float.floatToRawIntBits(Float.valueOf(doc[2])));\n      intField.setIntValue(Integer.valueOf(doc[3]));\n      intDVField.setLongValue(Integer.valueOf(doc[3]));\n      longField.setLongValue(Long.valueOf(doc[4]));\n      longDVField.setLongValue(Long.valueOf(doc[4]));\n      stringField.setStringValue(doc[5]);\n      stringDVField.setBytesValue(new BytesRef(doc[5]));\n      textField.setStringValue(doc[6]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.shutdown();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    IndexWriterConfig iwConfig = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\", Field.Store.NO);\n    document.add(idField);\n    Field doubleField = new DoubleField(\"double\", 0d, Field.Store.NO);\n    document.add(doubleField);\n    Field floatField = new FloatField(\"float\", 0f, Field.Store.NO);\n    document.add(floatField);\n    Field intField = new IntField(\"int\", 0, Field.Store.NO);\n    document.add(intField);\n    Field longField = new LongField(\"long\", 0L, Field.Store.NO);\n    document.add(longField);\n    Field stringField = new StringField(\"string\", \"\", Field.Store.NO);\n    document.add(stringField);\n    Field textField = new TextField(\"text\", \"\", Field.Store.NO);\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      doubleField.setDoubleValue(Double.valueOf(doc[1]));\n      floatField.setFloatValue(Float.valueOf(doc[2]));\n      intField.setIntValue(Integer.valueOf(doc[3]));\n      longField.setLongValue(Long.valueOf(doc[4]));\n      stringField.setStringValue(doc[5]);\n      textField.setStringValue(doc[6]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    IndexWriterConfig iwConfig = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\", Field.Store.NO);\n    document.add(idField);\n    Field idDVField = new SortedDocValuesField(\"id\", new BytesRef());\n    document.add(idDVField);\n    Field doubleField = new DoubleField(\"double\", 0d, Field.Store.NO);\n    document.add(doubleField);\n    Field doubleDVField = new NumericDocValuesField(\"double\", 0);\n    document.add(doubleDVField);\n    Field floatField = new FloatField(\"float\", 0f, Field.Store.NO);\n    document.add(floatField);\n    Field floatDVField = new NumericDocValuesField(\"float\", 0);\n    document.add(floatDVField);\n    Field intField = new IntField(\"int\", 0, Field.Store.NO);\n    document.add(intField);\n    Field intDVField = new NumericDocValuesField(\"int\", 0);\n    document.add(intDVField);\n    Field longField = new LongField(\"long\", 0L, Field.Store.NO);\n    document.add(longField);\n    Field longDVField = new NumericDocValuesField(\"long\", 0);\n    document.add(longDVField);\n    Field stringField = new StringField(\"string\", \"\", Field.Store.NO);\n    document.add(stringField);\n    Field stringDVField = new SortedDocValuesField(\"string\", new BytesRef());\n    document.add(stringDVField);\n    Field textField = new TextField(\"text\", \"\", Field.Store.NO);\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      idDVField.setBytesValue(new BytesRef(doc[0]));\n      doubleField.setDoubleValue(Double.valueOf(doc[1]));\n      doubleDVField.setLongValue(Double.doubleToRawLongBits(Double.valueOf(doc[1])));\n      floatField.setFloatValue(Float.valueOf(doc[2]));\n      floatDVField.setLongValue(Float.floatToRawIntBits(Float.valueOf(doc[2])));\n      intField.setIntValue(Integer.valueOf(doc[3]));\n      intDVField.setLongValue(Integer.valueOf(doc[3]));\n      longField.setLongValue(Long.valueOf(doc[4]));\n      longDVField.setLongValue(Long.valueOf(doc[4]));\n      stringField.setStringValue(doc[5]);\n      stringDVField.setBytesValue(new BytesRef(doc[5]));\n      textField.setStringValue(doc[6]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.shutdown();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    IndexWriterConfig iwConfig = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\", Field.Store.NO);\n    document.add(idField);\n    Field doubleField = new DoubleField(\"double\", 0d, Field.Store.NO);\n    document.add(doubleField);\n    Field floatField = new FloatField(\"float\", 0f, Field.Store.NO);\n    document.add(floatField);\n    Field intField = new IntField(\"int\", 0, Field.Store.NO);\n    document.add(intField);\n    Field longField = new LongField(\"long\", 0L, Field.Store.NO);\n    document.add(longField);\n    Field stringField = new StringField(\"string\", \"\", Field.Store.NO);\n    document.add(stringField);\n    Field textField = new TextField(\"text\", \"\", Field.Store.NO);\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      doubleField.setDoubleValue(Double.valueOf(doc[1]));\n      floatField.setFloatValue(Float.valueOf(doc[2]));\n      intField.setIntValue(Integer.valueOf(doc[3]));\n      longField.setLongValue(Long.valueOf(doc[4]));\n      stringField.setStringValue(doc[5]);\n      textField.setStringValue(doc[6]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    IndexWriterConfig iwConfig = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\", Field.Store.NO);\n    document.add(idField);\n    Field idDVField = new SortedDocValuesField(\"id\", new BytesRef());\n    document.add(idDVField);\n    Field doubleField = new DoubleField(\"double\", 0d, Field.Store.NO);\n    document.add(doubleField);\n    Field doubleDVField = new NumericDocValuesField(\"double\", 0);\n    document.add(doubleDVField);\n    Field floatField = new FloatField(\"float\", 0f, Field.Store.NO);\n    document.add(floatField);\n    Field floatDVField = new NumericDocValuesField(\"float\", 0);\n    document.add(floatDVField);\n    Field intField = new IntField(\"int\", 0, Field.Store.NO);\n    document.add(intField);\n    Field intDVField = new NumericDocValuesField(\"int\", 0);\n    document.add(intDVField);\n    Field longField = new LongField(\"long\", 0L, Field.Store.NO);\n    document.add(longField);\n    Field longDVField = new NumericDocValuesField(\"long\", 0);\n    document.add(longDVField);\n    Field stringField = new StringField(\"string\", \"\", Field.Store.NO);\n    document.add(stringField);\n    Field stringDVField = new SortedDocValuesField(\"string\", new BytesRef());\n    document.add(stringDVField);\n    Field textField = new TextField(\"text\", \"\", Field.Store.NO);\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      idDVField.setBytesValue(new BytesRef(doc[0]));\n      doubleField.setDoubleValue(Double.valueOf(doc[1]));\n      doubleDVField.setLongValue(Double.doubleToRawLongBits(Double.valueOf(doc[1])));\n      floatField.setFloatValue(Float.valueOf(doc[2]));\n      floatDVField.setLongValue(Float.floatToRawIntBits(Float.valueOf(doc[2])));\n      intField.setIntValue(Integer.valueOf(doc[3]));\n      intDVField.setLongValue(Integer.valueOf(doc[3]));\n      longField.setLongValue(Long.valueOf(doc[4]));\n      longDVField.setLongValue(Long.valueOf(doc[4]));\n      stringField.setStringValue(doc[5]);\n      stringDVField.setBytesValue(new BytesRef(doc[5]));\n      textField.setStringValue(doc[6]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.shutdown();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    IndexWriterConfig iwConfig = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\", Field.Store.NO);\n    document.add(idField);\n    Field idDVField = new SortedDocValuesField(\"id\", new BytesRef());\n    document.add(idDVField);\n    Field doubleField = new DoubleField(\"double\", 0d, Field.Store.NO);\n    document.add(doubleField);\n    Field doubleDVField = new NumericDocValuesField(\"double\", 0);\n    document.add(doubleDVField);\n    Field floatField = new FloatField(\"float\", 0f, Field.Store.NO);\n    document.add(floatField);\n    Field floatDVField = new NumericDocValuesField(\"float\", 0);\n    document.add(floatDVField);\n    Field intField = new IntField(\"int\", 0, Field.Store.NO);\n    document.add(intField);\n    Field intDVField = new NumericDocValuesField(\"int\", 0);\n    document.add(intDVField);\n    Field longField = new LongField(\"long\", 0L, Field.Store.NO);\n    document.add(longField);\n    Field longDVField = new NumericDocValuesField(\"long\", 0);\n    document.add(longDVField);\n    Field stringField = new StringField(\"string\", \"\", Field.Store.NO);\n    document.add(stringField);\n    Field stringDVField = new SortedDocValuesField(\"string\", new BytesRef());\n    document.add(stringDVField);\n    Field textField = new TextField(\"text\", \"\", Field.Store.NO);\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      idDVField.setBytesValue(new BytesRef(doc[0]));\n      doubleField.setDoubleValue(Double.valueOf(doc[1]));\n      doubleDVField.setLongValue(Double.doubleToRawLongBits(Double.valueOf(doc[1])));\n      floatField.setFloatValue(Float.valueOf(doc[2]));\n      floatDVField.setLongValue(Float.floatToRawIntBits(Float.valueOf(doc[2])));\n      intField.setIntValue(Integer.valueOf(doc[3]));\n      intDVField.setLongValue(Integer.valueOf(doc[3]));\n      longField.setLongValue(Long.valueOf(doc[4]));\n      longDVField.setLongValue(Long.valueOf(doc[4]));\n      stringField.setStringValue(doc[5]);\n      stringDVField.setBytesValue(new BytesRef(doc[5]));\n      textField.setStringValue(doc[6]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    IndexWriterConfig iwConfig = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\", Field.Store.NO);\n    document.add(idField);\n    Field idDVField = new SortedDocValuesField(\"id\", new BytesRef());\n    document.add(idDVField);\n    Field doubleField = new DoubleField(\"double\", 0d, Field.Store.NO);\n    document.add(doubleField);\n    Field doubleDVField = new NumericDocValuesField(\"double\", 0);\n    document.add(doubleDVField);\n    Field floatField = new FloatField(\"float\", 0f, Field.Store.NO);\n    document.add(floatField);\n    Field floatDVField = new NumericDocValuesField(\"float\", 0);\n    document.add(floatDVField);\n    Field intField = new IntField(\"int\", 0, Field.Store.NO);\n    document.add(intField);\n    Field intDVField = new NumericDocValuesField(\"int\", 0);\n    document.add(intDVField);\n    Field longField = new LongField(\"long\", 0L, Field.Store.NO);\n    document.add(longField);\n    Field longDVField = new NumericDocValuesField(\"long\", 0);\n    document.add(longDVField);\n    Field stringField = new StringField(\"string\", \"\", Field.Store.NO);\n    document.add(stringField);\n    Field stringDVField = new SortedDocValuesField(\"string\", new BytesRef());\n    document.add(stringDVField);\n    Field textField = new TextField(\"text\", \"\", Field.Store.NO);\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      idDVField.setBytesValue(new BytesRef(doc[0]));\n      doubleField.setDoubleValue(Double.valueOf(doc[1]));\n      doubleDVField.setLongValue(Double.doubleToRawLongBits(Double.valueOf(doc[1])));\n      floatField.setFloatValue(Float.valueOf(doc[2]));\n      floatDVField.setLongValue(Float.floatToRawIntBits(Float.valueOf(doc[2])));\n      intField.setIntValue(Integer.valueOf(doc[3]));\n      intDVField.setLongValue(Integer.valueOf(doc[3]));\n      longField.setLongValue(Long.valueOf(doc[4]));\n      longDVField.setLongValue(Long.valueOf(doc[4]));\n      stringField.setStringValue(doc[5]);\n      stringDVField.setBytesValue(new BytesRef(doc[5]));\n      textField.setStringValue(doc[6]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    IndexWriterConfig iwConfig = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\", Field.Store.NO);\n    document.add(idField);\n    Field idDVField = new SortedDocValuesField(\"id\", new BytesRef());\n    document.add(idDVField);\n    Field doubleField = new DoubleField(\"double\", 0d, Field.Store.NO);\n    document.add(doubleField);\n    Field doubleDVField = new NumericDocValuesField(\"double\", 0);\n    document.add(doubleDVField);\n    Field floatField = new FloatField(\"float\", 0f, Field.Store.NO);\n    document.add(floatField);\n    Field floatDVField = new NumericDocValuesField(\"float\", 0);\n    document.add(floatDVField);\n    Field intField = new IntField(\"int\", 0, Field.Store.NO);\n    document.add(intField);\n    Field intDVField = new NumericDocValuesField(\"int\", 0);\n    document.add(intDVField);\n    Field longField = new LongField(\"long\", 0L, Field.Store.NO);\n    document.add(longField);\n    Field longDVField = new NumericDocValuesField(\"long\", 0);\n    document.add(longDVField);\n    Field stringField = new StringField(\"string\", \"\", Field.Store.NO);\n    document.add(stringField);\n    Field stringDVField = new SortedDocValuesField(\"string\", new BytesRef());\n    document.add(stringDVField);\n    Field textField = new TextField(\"text\", \"\", Field.Store.NO);\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      idDVField.setBytesValue(new BytesRef(doc[0]));\n      doubleField.setDoubleValue(Double.valueOf(doc[1]));\n      doubleDVField.setLongValue(Double.doubleToRawLongBits(Double.valueOf(doc[1])));\n      floatField.setFloatValue(Float.valueOf(doc[2]));\n      floatDVField.setLongValue(Float.floatToRawIntBits(Float.valueOf(doc[2])));\n      intField.setIntValue(Integer.valueOf(doc[3]));\n      intDVField.setLongValue(Integer.valueOf(doc[3]));\n      longField.setLongValue(Long.valueOf(doc[4]));\n      longDVField.setLongValue(Long.valueOf(doc[4]));\n      stringField.setStringValue(doc[5]);\n      stringDVField.setBytesValue(new BytesRef(doc[5]));\n      textField.setStringValue(doc[6]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56958d7f71a28824f20031ffbb2e13502a0274e","date":1425573902,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    analyzer = new MockAnalyzer(random());\n    IndexWriterConfig iwConfig = newIndexWriterConfig(analyzer);\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\", Field.Store.NO);\n    document.add(idField);\n    Field idDVField = new SortedDocValuesField(\"id\", new BytesRef());\n    document.add(idDVField);\n    Field doubleField = new DoubleField(\"double\", 0d, Field.Store.NO);\n    document.add(doubleField);\n    Field doubleDVField = new NumericDocValuesField(\"double\", 0);\n    document.add(doubleDVField);\n    Field floatField = new FloatField(\"float\", 0f, Field.Store.NO);\n    document.add(floatField);\n    Field floatDVField = new NumericDocValuesField(\"float\", 0);\n    document.add(floatDVField);\n    Field intField = new IntField(\"int\", 0, Field.Store.NO);\n    document.add(intField);\n    Field intDVField = new NumericDocValuesField(\"int\", 0);\n    document.add(intDVField);\n    Field longField = new LongField(\"long\", 0L, Field.Store.NO);\n    document.add(longField);\n    Field longDVField = new NumericDocValuesField(\"long\", 0);\n    document.add(longDVField);\n    Field stringField = new StringField(\"string\", \"\", Field.Store.NO);\n    document.add(stringField);\n    Field stringDVField = new SortedDocValuesField(\"string\", new BytesRef());\n    document.add(stringDVField);\n    Field textField = new TextField(\"text\", \"\", Field.Store.NO);\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      idDVField.setBytesValue(new BytesRef(doc[0]));\n      doubleField.setDoubleValue(Double.valueOf(doc[1]));\n      doubleDVField.setLongValue(Double.doubleToRawLongBits(Double.valueOf(doc[1])));\n      floatField.setFloatValue(Float.valueOf(doc[2]));\n      floatDVField.setLongValue(Float.floatToRawIntBits(Float.valueOf(doc[2])));\n      intField.setIntValue(Integer.valueOf(doc[3]));\n      intDVField.setLongValue(Integer.valueOf(doc[3]));\n      longField.setLongValue(Long.valueOf(doc[4]));\n      longDVField.setLongValue(Long.valueOf(doc[4]));\n      stringField.setStringValue(doc[5]);\n      stringDVField.setBytesValue(new BytesRef(doc[5]));\n      textField.setStringValue(doc[6]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    IndexWriterConfig iwConfig = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\", Field.Store.NO);\n    document.add(idField);\n    Field idDVField = new SortedDocValuesField(\"id\", new BytesRef());\n    document.add(idDVField);\n    Field doubleField = new DoubleField(\"double\", 0d, Field.Store.NO);\n    document.add(doubleField);\n    Field doubleDVField = new NumericDocValuesField(\"double\", 0);\n    document.add(doubleDVField);\n    Field floatField = new FloatField(\"float\", 0f, Field.Store.NO);\n    document.add(floatField);\n    Field floatDVField = new NumericDocValuesField(\"float\", 0);\n    document.add(floatDVField);\n    Field intField = new IntField(\"int\", 0, Field.Store.NO);\n    document.add(intField);\n    Field intDVField = new NumericDocValuesField(\"int\", 0);\n    document.add(intDVField);\n    Field longField = new LongField(\"long\", 0L, Field.Store.NO);\n    document.add(longField);\n    Field longDVField = new NumericDocValuesField(\"long\", 0);\n    document.add(longDVField);\n    Field stringField = new StringField(\"string\", \"\", Field.Store.NO);\n    document.add(stringField);\n    Field stringDVField = new SortedDocValuesField(\"string\", new BytesRef());\n    document.add(stringDVField);\n    Field textField = new TextField(\"text\", \"\", Field.Store.NO);\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      idDVField.setBytesValue(new BytesRef(doc[0]));\n      doubleField.setDoubleValue(Double.valueOf(doc[1]));\n      doubleDVField.setLongValue(Double.doubleToRawLongBits(Double.valueOf(doc[1])));\n      floatField.setFloatValue(Float.valueOf(doc[2]));\n      floatDVField.setLongValue(Float.floatToRawIntBits(Float.valueOf(doc[2])));\n      intField.setIntValue(Integer.valueOf(doc[3]));\n      intDVField.setLongValue(Integer.valueOf(doc[3]));\n      longField.setLongValue(Long.valueOf(doc[4]));\n      longDVField.setLongValue(Long.valueOf(doc[4]));\n      stringField.setStringValue(doc[5]);\n      stringDVField.setBytesValue(new BytesRef(doc[5]));\n      textField.setStringValue(doc[6]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    analyzer = new MockAnalyzer(random());\n    IndexWriterConfig iwConfig = newIndexWriterConfig(analyzer);\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\", Field.Store.NO);\n    document.add(idField);\n    Field idDVField = new SortedDocValuesField(\"id\", new BytesRef());\n    document.add(idDVField);\n    Field doubleField = new DoubleField(\"double\", 0d, Field.Store.NO);\n    document.add(doubleField);\n    Field doubleDVField = new NumericDocValuesField(\"double\", 0);\n    document.add(doubleDVField);\n    Field floatField = new FloatField(\"float\", 0f, Field.Store.NO);\n    document.add(floatField);\n    Field floatDVField = new NumericDocValuesField(\"float\", 0);\n    document.add(floatDVField);\n    Field intField = new IntField(\"int\", 0, Field.Store.NO);\n    document.add(intField);\n    Field intDVField = new NumericDocValuesField(\"int\", 0);\n    document.add(intDVField);\n    Field longField = new LongField(\"long\", 0L, Field.Store.NO);\n    document.add(longField);\n    Field longDVField = new NumericDocValuesField(\"long\", 0);\n    document.add(longDVField);\n    Field stringField = new StringField(\"string\", \"\", Field.Store.NO);\n    document.add(stringField);\n    Field stringDVField = new SortedDocValuesField(\"string\", new BytesRef());\n    document.add(stringDVField);\n    Field textField = new TextField(\"text\", \"\", Field.Store.NO);\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      idDVField.setBytesValue(new BytesRef(doc[0]));\n      doubleField.setDoubleValue(Double.valueOf(doc[1]));\n      doubleDVField.setLongValue(Double.doubleToRawLongBits(Double.valueOf(doc[1])));\n      floatField.setFloatValue(Float.valueOf(doc[2]));\n      floatDVField.setLongValue(Float.floatToRawIntBits(Float.valueOf(doc[2])));\n      intField.setIntValue(Integer.valueOf(doc[3]));\n      intDVField.setLongValue(Integer.valueOf(doc[3]));\n      longField.setLongValue(Long.valueOf(doc[4]));\n      longDVField.setLongValue(Long.valueOf(doc[4]));\n      stringField.setStringValue(doc[5]);\n      stringDVField.setBytesValue(new BytesRef(doc[5]));\n      textField.setStringValue(doc[6]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    IndexWriterConfig iwConfig = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\", Field.Store.NO);\n    document.add(idField);\n    Field idDVField = new SortedDocValuesField(\"id\", new BytesRef());\n    document.add(idDVField);\n    Field doubleField = new DoubleField(\"double\", 0d, Field.Store.NO);\n    document.add(doubleField);\n    Field doubleDVField = new NumericDocValuesField(\"double\", 0);\n    document.add(doubleDVField);\n    Field floatField = new FloatField(\"float\", 0f, Field.Store.NO);\n    document.add(floatField);\n    Field floatDVField = new NumericDocValuesField(\"float\", 0);\n    document.add(floatDVField);\n    Field intField = new IntField(\"int\", 0, Field.Store.NO);\n    document.add(intField);\n    Field intDVField = new NumericDocValuesField(\"int\", 0);\n    document.add(intDVField);\n    Field longField = new LongField(\"long\", 0L, Field.Store.NO);\n    document.add(longField);\n    Field longDVField = new NumericDocValuesField(\"long\", 0);\n    document.add(longDVField);\n    Field stringField = new StringField(\"string\", \"\", Field.Store.NO);\n    document.add(stringField);\n    Field stringDVField = new SortedDocValuesField(\"string\", new BytesRef());\n    document.add(stringDVField);\n    Field textField = new TextField(\"text\", \"\", Field.Store.NO);\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      idDVField.setBytesValue(new BytesRef(doc[0]));\n      doubleField.setDoubleValue(Double.valueOf(doc[1]));\n      doubleDVField.setLongValue(Double.doubleToRawLongBits(Double.valueOf(doc[1])));\n      floatField.setFloatValue(Float.valueOf(doc[2]));\n      floatDVField.setLongValue(Float.floatToRawIntBits(Float.valueOf(doc[2])));\n      intField.setIntValue(Integer.valueOf(doc[3]));\n      intDVField.setLongValue(Integer.valueOf(doc[3]));\n      longField.setLongValue(Long.valueOf(doc[4]));\n      longDVField.setLongValue(Long.valueOf(doc[4]));\n      stringField.setStringValue(doc[5]);\n      stringDVField.setBytesValue(new BytesRef(doc[5]));\n      textField.setStringValue(doc[6]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"770342641f7b505eaa8dccdc666158bff2419109","date":1449868421,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    analyzer = new MockAnalyzer(random());\n    IndexWriterConfig iwConfig = newIndexWriterConfig(analyzer);\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\", Field.Store.NO);\n    document.add(idField);\n    Field idDVField = new SortedDocValuesField(\"id\", new BytesRef());\n    document.add(idDVField);\n    Field doubleField = new LegacyDoubleField(\"double\", 0d, Field.Store.NO);\n    document.add(doubleField);\n    Field doubleDVField = new NumericDocValuesField(\"double\", 0);\n    document.add(doubleDVField);\n    Field floatField = new LegacyFloatField(\"float\", 0f, Field.Store.NO);\n    document.add(floatField);\n    Field floatDVField = new NumericDocValuesField(\"float\", 0);\n    document.add(floatDVField);\n    Field intField = new LegacyIntField(\"int\", 0, Field.Store.NO);\n    document.add(intField);\n    Field intDVField = new NumericDocValuesField(\"int\", 0);\n    document.add(intDVField);\n    Field longField = new LegacyLongField(\"long\", 0L, Field.Store.NO);\n    document.add(longField);\n    Field longDVField = new NumericDocValuesField(\"long\", 0);\n    document.add(longDVField);\n    Field stringField = new StringField(\"string\", \"\", Field.Store.NO);\n    document.add(stringField);\n    Field stringDVField = new SortedDocValuesField(\"string\", new BytesRef());\n    document.add(stringDVField);\n    Field textField = new TextField(\"text\", \"\", Field.Store.NO);\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      idDVField.setBytesValue(new BytesRef(doc[0]));\n      doubleField.setDoubleValue(Double.valueOf(doc[1]));\n      doubleDVField.setLongValue(Double.doubleToRawLongBits(Double.valueOf(doc[1])));\n      floatField.setFloatValue(Float.valueOf(doc[2]));\n      floatDVField.setLongValue(Float.floatToRawIntBits(Float.valueOf(doc[2])));\n      intField.setIntValue(Integer.valueOf(doc[3]));\n      intDVField.setLongValue(Integer.valueOf(doc[3]));\n      longField.setLongValue(Long.valueOf(doc[4]));\n      longDVField.setLongValue(Long.valueOf(doc[4]));\n      stringField.setStringValue(doc[5]);\n      stringDVField.setBytesValue(new BytesRef(doc[5]));\n      textField.setStringValue(doc[6]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    analyzer = new MockAnalyzer(random());\n    IndexWriterConfig iwConfig = newIndexWriterConfig(analyzer);\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\", Field.Store.NO);\n    document.add(idField);\n    Field idDVField = new SortedDocValuesField(\"id\", new BytesRef());\n    document.add(idDVField);\n    Field doubleField = new DoubleField(\"double\", 0d, Field.Store.NO);\n    document.add(doubleField);\n    Field doubleDVField = new NumericDocValuesField(\"double\", 0);\n    document.add(doubleDVField);\n    Field floatField = new FloatField(\"float\", 0f, Field.Store.NO);\n    document.add(floatField);\n    Field floatDVField = new NumericDocValuesField(\"float\", 0);\n    document.add(floatDVField);\n    Field intField = new IntField(\"int\", 0, Field.Store.NO);\n    document.add(intField);\n    Field intDVField = new NumericDocValuesField(\"int\", 0);\n    document.add(intDVField);\n    Field longField = new LongField(\"long\", 0L, Field.Store.NO);\n    document.add(longField);\n    Field longDVField = new NumericDocValuesField(\"long\", 0);\n    document.add(longDVField);\n    Field stringField = new StringField(\"string\", \"\", Field.Store.NO);\n    document.add(stringField);\n    Field stringDVField = new SortedDocValuesField(\"string\", new BytesRef());\n    document.add(stringDVField);\n    Field textField = new TextField(\"text\", \"\", Field.Store.NO);\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      idDVField.setBytesValue(new BytesRef(doc[0]));\n      doubleField.setDoubleValue(Double.valueOf(doc[1]));\n      doubleDVField.setLongValue(Double.doubleToRawLongBits(Double.valueOf(doc[1])));\n      floatField.setFloatValue(Float.valueOf(doc[2]));\n      floatDVField.setLongValue(Float.floatToRawIntBits(Float.valueOf(doc[2])));\n      intField.setIntValue(Integer.valueOf(doc[3]));\n      intDVField.setLongValue(Integer.valueOf(doc[3]));\n      longField.setLongValue(Long.valueOf(doc[4]));\n      longDVField.setLongValue(Long.valueOf(doc[4]));\n      stringField.setStringValue(doc[5]);\n      stringDVField.setBytesValue(new BytesRef(doc[5]));\n      textField.setStringValue(doc[6]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0858e338cc7ed91cff3bae1cb26df0fba2b4f254","date":1457453832,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    analyzer = new MockAnalyzer(random());\n    IndexWriterConfig iwConfig = newIndexWriterConfig(analyzer);\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\", Field.Store.NO);\n    document.add(idField);\n    Field idDVField = new SortedDocValuesField(\"id\", new BytesRef());\n    document.add(idDVField);\n    Field doubleDVField = new NumericDocValuesField(\"double\", 0);\n    document.add(doubleDVField);\n    Field floatDVField = new NumericDocValuesField(\"float\", 0);\n    document.add(floatDVField);\n    Field intDVField = new NumericDocValuesField(\"int\", 0);\n    document.add(intDVField);\n    Field longDVField = new NumericDocValuesField(\"long\", 0);\n    document.add(longDVField);\n    Field stringField = new StringField(\"string\", \"\", Field.Store.NO);\n    document.add(stringField);\n    Field stringDVField = new SortedDocValuesField(\"string\", new BytesRef());\n    document.add(stringDVField);\n    Field textField = new TextField(\"text\", \"\", Field.Store.NO);\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      idDVField.setBytesValue(new BytesRef(doc[0]));\n      doubleDVField.setLongValue(Double.doubleToRawLongBits(Double.valueOf(doc[1])));\n      floatDVField.setLongValue(Float.floatToRawIntBits(Float.valueOf(doc[2])));\n      intDVField.setLongValue(Integer.valueOf(doc[3]));\n      longDVField.setLongValue(Long.valueOf(doc[4]));\n      stringField.setStringValue(doc[5]);\n      stringDVField.setBytesValue(new BytesRef(doc[5]));\n      textField.setStringValue(doc[6]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    analyzer = new MockAnalyzer(random());\n    IndexWriterConfig iwConfig = newIndexWriterConfig(analyzer);\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\", Field.Store.NO);\n    document.add(idField);\n    Field idDVField = new SortedDocValuesField(\"id\", new BytesRef());\n    document.add(idDVField);\n    Field doubleField = new LegacyDoubleField(\"double\", 0d, Field.Store.NO);\n    document.add(doubleField);\n    Field doubleDVField = new NumericDocValuesField(\"double\", 0);\n    document.add(doubleDVField);\n    Field floatField = new LegacyFloatField(\"float\", 0f, Field.Store.NO);\n    document.add(floatField);\n    Field floatDVField = new NumericDocValuesField(\"float\", 0);\n    document.add(floatDVField);\n    Field intField = new LegacyIntField(\"int\", 0, Field.Store.NO);\n    document.add(intField);\n    Field intDVField = new NumericDocValuesField(\"int\", 0);\n    document.add(intDVField);\n    Field longField = new LegacyLongField(\"long\", 0L, Field.Store.NO);\n    document.add(longField);\n    Field longDVField = new NumericDocValuesField(\"long\", 0);\n    document.add(longDVField);\n    Field stringField = new StringField(\"string\", \"\", Field.Store.NO);\n    document.add(stringField);\n    Field stringDVField = new SortedDocValuesField(\"string\", new BytesRef());\n    document.add(stringDVField);\n    Field textField = new TextField(\"text\", \"\", Field.Store.NO);\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      idDVField.setBytesValue(new BytesRef(doc[0]));\n      doubleField.setDoubleValue(Double.valueOf(doc[1]));\n      doubleDVField.setLongValue(Double.doubleToRawLongBits(Double.valueOf(doc[1])));\n      floatField.setFloatValue(Float.valueOf(doc[2]));\n      floatDVField.setLongValue(Float.floatToRawIntBits(Float.valueOf(doc[2])));\n      intField.setIntValue(Integer.valueOf(doc[3]));\n      intDVField.setLongValue(Integer.valueOf(doc[3]));\n      longField.setLongValue(Long.valueOf(doc[4]));\n      longDVField.setLongValue(Long.valueOf(doc[4]));\n      stringField.setStringValue(doc[5]);\n      stringDVField.setBytesValue(new BytesRef(doc[5]));\n      textField.setStringValue(doc[6]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7cc453cd9f503b2ba830b15afa27d11dc109c6af","date":1486406649,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    analyzer = new MockAnalyzer(random());\n    IndexWriterConfig iwConfig = newIndexWriterConfig(analyzer);\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    for (String [] doc : documents) {\n      Document document = new Document();\n      document.add(new StringField(\"id\", doc[0], Field.Store.NO));\n      document.add(new SortedDocValuesField(\"id\", new BytesRef(doc[0])));\n      document.add(new NumericDocValuesField(\"double\", Double.doubleToRawLongBits(Double.parseDouble(doc[1]))));\n      document.add(new NumericDocValuesField(\"float\", Float.floatToRawIntBits(Float.valueOf(doc[2]))));\n      document.add(new NumericDocValuesField(\"int\", Integer.valueOf(doc[3])));\n      document.add(new NumericDocValuesField(\"long\", Long.valueOf(doc[4])));\n      document.add(new StringField(\"string\", doc[5], Field.Store.NO));\n      document.add(new SortedDocValuesField(\"string\", new BytesRef(doc[5])));\n      document.add(new TextField(\"text\", doc[6], Field.Store.NO));\n      document.add(new SortedNumericDocValuesField(\"floatMv\", NumericUtils.floatToSortableInt(Float.parseFloat(doc[7]))));\n      document.add(new SortedNumericDocValuesField(\"floatMv\", NumericUtils.floatToSortableInt(Float.parseFloat(doc[8]))));\n      document.add(new SortedNumericDocValuesField(\"floatMv\", NumericUtils.floatToSortableInt(Float.parseFloat(doc[9]))));\n      document.add(new SortedNumericDocValuesField(\"doubleMv\", NumericUtils.doubleToSortableLong(Double.parseDouble(doc[7]))));\n      document.add(new SortedNumericDocValuesField(\"doubleMv\", NumericUtils.doubleToSortableLong(Double.parseDouble(doc[8]))));\n      document.add(new SortedNumericDocValuesField(\"doubleMv\", NumericUtils.doubleToSortableLong(Double.parseDouble(doc[9]))));\n      document.add(new SortedNumericDocValuesField(\"intMv\", Long.parseLong(doc[10])));\n      document.add(new SortedNumericDocValuesField(\"intMv\", Long.parseLong(doc[11])));\n      document.add(new SortedNumericDocValuesField(\"intMv\", Long.parseLong(doc[12])));\n      document.add(new SortedNumericDocValuesField(\"longMv\", Long.parseLong(doc[10])));\n      document.add(new SortedNumericDocValuesField(\"longMv\", Long.parseLong(doc[11])));\n      document.add(new SortedNumericDocValuesField(\"longMv\", Long.parseLong(doc[12])));\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    analyzer = new MockAnalyzer(random());\n    IndexWriterConfig iwConfig = newIndexWriterConfig(analyzer);\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    Document document = new Document();\n    Field idField = new StringField(\"id\", \"\", Field.Store.NO);\n    document.add(idField);\n    Field idDVField = new SortedDocValuesField(\"id\", new BytesRef());\n    document.add(idDVField);\n    Field doubleDVField = new NumericDocValuesField(\"double\", 0);\n    document.add(doubleDVField);\n    Field floatDVField = new NumericDocValuesField(\"float\", 0);\n    document.add(floatDVField);\n    Field intDVField = new NumericDocValuesField(\"int\", 0);\n    document.add(intDVField);\n    Field longDVField = new NumericDocValuesField(\"long\", 0);\n    document.add(longDVField);\n    Field stringField = new StringField(\"string\", \"\", Field.Store.NO);\n    document.add(stringField);\n    Field stringDVField = new SortedDocValuesField(\"string\", new BytesRef());\n    document.add(stringDVField);\n    Field textField = new TextField(\"text\", \"\", Field.Store.NO);\n    document.add(textField);\n    \n    for (String [] doc : documents) {\n      idField.setStringValue(doc[0]);\n      idDVField.setBytesValue(new BytesRef(doc[0]));\n      doubleDVField.setLongValue(Double.doubleToRawLongBits(Double.valueOf(doc[1])));\n      floatDVField.setLongValue(Float.floatToRawIntBits(Float.valueOf(doc[2])));\n      intDVField.setLongValue(Integer.valueOf(doc[3]));\n      longDVField.setLongValue(Long.valueOf(doc[4]));\n      stringField.setStringValue(doc[5]);\n      stringDVField.setBytesValue(new BytesRef(doc[5]));\n      textField.setStringValue(doc[6]);\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8","date":1489572490,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    analyzer = new MockAnalyzer(random());\n    IndexWriterConfig iwConfig = newIndexWriterConfig(analyzer);\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    for (String [] doc : documents) {\n      Document document = new Document();\n      document.add(new StringField(\"id\", doc[0], Field.Store.NO));\n      document.add(new SortedDocValuesField(\"id\", new BytesRef(doc[0])));\n      document.add(new NumericDocValuesField(\"double\", Double.doubleToRawLongBits(Double.parseDouble(doc[1]))));\n      document.add(new NumericDocValuesField(\"float\", Float.floatToRawIntBits(Float.parseFloat(doc[2]))));\n      document.add(new NumericDocValuesField(\"int\", Integer.parseInt(doc[3])));\n      document.add(new NumericDocValuesField(\"long\", Long.parseLong(doc[4])));\n      document.add(new StringField(\"string\", doc[5], Field.Store.NO));\n      document.add(new SortedDocValuesField(\"string\", new BytesRef(doc[5])));\n      document.add(new TextField(\"text\", doc[6], Field.Store.NO));\n      document.add(new SortedNumericDocValuesField(\"floatMv\", NumericUtils.floatToSortableInt(Float.parseFloat(doc[7]))));\n      document.add(new SortedNumericDocValuesField(\"floatMv\", NumericUtils.floatToSortableInt(Float.parseFloat(doc[8]))));\n      document.add(new SortedNumericDocValuesField(\"floatMv\", NumericUtils.floatToSortableInt(Float.parseFloat(doc[9]))));\n      document.add(new SortedNumericDocValuesField(\"doubleMv\", NumericUtils.doubleToSortableLong(Double.parseDouble(doc[7]))));\n      document.add(new SortedNumericDocValuesField(\"doubleMv\", NumericUtils.doubleToSortableLong(Double.parseDouble(doc[8]))));\n      document.add(new SortedNumericDocValuesField(\"doubleMv\", NumericUtils.doubleToSortableLong(Double.parseDouble(doc[9]))));\n      document.add(new SortedNumericDocValuesField(\"intMv\", Long.parseLong(doc[10])));\n      document.add(new SortedNumericDocValuesField(\"intMv\", Long.parseLong(doc[11])));\n      document.add(new SortedNumericDocValuesField(\"intMv\", Long.parseLong(doc[12])));\n      document.add(new SortedNumericDocValuesField(\"longMv\", Long.parseLong(doc[10])));\n      document.add(new SortedNumericDocValuesField(\"longMv\", Long.parseLong(doc[11])));\n      document.add(new SortedNumericDocValuesField(\"longMv\", Long.parseLong(doc[12])));\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    analyzer = new MockAnalyzer(random());\n    IndexWriterConfig iwConfig = newIndexWriterConfig(analyzer);\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    for (String [] doc : documents) {\n      Document document = new Document();\n      document.add(new StringField(\"id\", doc[0], Field.Store.NO));\n      document.add(new SortedDocValuesField(\"id\", new BytesRef(doc[0])));\n      document.add(new NumericDocValuesField(\"double\", Double.doubleToRawLongBits(Double.parseDouble(doc[1]))));\n      document.add(new NumericDocValuesField(\"float\", Float.floatToRawIntBits(Float.valueOf(doc[2]))));\n      document.add(new NumericDocValuesField(\"int\", Integer.valueOf(doc[3])));\n      document.add(new NumericDocValuesField(\"long\", Long.valueOf(doc[4])));\n      document.add(new StringField(\"string\", doc[5], Field.Store.NO));\n      document.add(new SortedDocValuesField(\"string\", new BytesRef(doc[5])));\n      document.add(new TextField(\"text\", doc[6], Field.Store.NO));\n      document.add(new SortedNumericDocValuesField(\"floatMv\", NumericUtils.floatToSortableInt(Float.parseFloat(doc[7]))));\n      document.add(new SortedNumericDocValuesField(\"floatMv\", NumericUtils.floatToSortableInt(Float.parseFloat(doc[8]))));\n      document.add(new SortedNumericDocValuesField(\"floatMv\", NumericUtils.floatToSortableInt(Float.parseFloat(doc[9]))));\n      document.add(new SortedNumericDocValuesField(\"doubleMv\", NumericUtils.doubleToSortableLong(Double.parseDouble(doc[7]))));\n      document.add(new SortedNumericDocValuesField(\"doubleMv\", NumericUtils.doubleToSortableLong(Double.parseDouble(doc[8]))));\n      document.add(new SortedNumericDocValuesField(\"doubleMv\", NumericUtils.doubleToSortableLong(Double.parseDouble(doc[9]))));\n      document.add(new SortedNumericDocValuesField(\"intMv\", Long.parseLong(doc[10])));\n      document.add(new SortedNumericDocValuesField(\"intMv\", Long.parseLong(doc[11])));\n      document.add(new SortedNumericDocValuesField(\"intMv\", Long.parseLong(doc[12])));\n      document.add(new SortedNumericDocValuesField(\"longMv\", Long.parseLong(doc[10])));\n      document.add(new SortedNumericDocValuesField(\"longMv\", Long.parseLong(doc[11])));\n      document.add(new SortedNumericDocValuesField(\"longMv\", Long.parseLong(doc[12])));\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55e0b3830b94d1abce4e32e98cfc875d5b14e76f","date":1489651910,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    analyzer = new MockAnalyzer(random());\n    IndexWriterConfig iwConfig = newIndexWriterConfig(analyzer);\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    for (String [] doc : documents) {\n      Document document = new Document();\n      document.add(new StringField(\"id\", doc[0], Field.Store.NO));\n      document.add(new SortedDocValuesField(\"id\", new BytesRef(doc[0])));\n      document.add(new NumericDocValuesField(\"double\", Double.doubleToRawLongBits(Double.parseDouble(doc[1]))));\n      document.add(new NumericDocValuesField(\"float\", Float.floatToRawIntBits(Float.parseFloat(doc[2]))));\n      document.add(new NumericDocValuesField(\"int\", Integer.parseInt(doc[3])));\n      document.add(new NumericDocValuesField(\"long\", Long.parseLong(doc[4])));\n      document.add(new StringField(\"string\", doc[5], Field.Store.NO));\n      document.add(new SortedDocValuesField(\"string\", new BytesRef(doc[5])));\n      document.add(new TextField(\"text\", doc[6], Field.Store.NO));\n      document.add(new SortedNumericDocValuesField(\"floatMv\", NumericUtils.floatToSortableInt(Float.parseFloat(doc[7]))));\n      document.add(new SortedNumericDocValuesField(\"floatMv\", NumericUtils.floatToSortableInt(Float.parseFloat(doc[8]))));\n      document.add(new SortedNumericDocValuesField(\"floatMv\", NumericUtils.floatToSortableInt(Float.parseFloat(doc[9]))));\n      document.add(new SortedNumericDocValuesField(\"doubleMv\", NumericUtils.doubleToSortableLong(Double.parseDouble(doc[7]))));\n      document.add(new SortedNumericDocValuesField(\"doubleMv\", NumericUtils.doubleToSortableLong(Double.parseDouble(doc[8]))));\n      document.add(new SortedNumericDocValuesField(\"doubleMv\", NumericUtils.doubleToSortableLong(Double.parseDouble(doc[9]))));\n      document.add(new SortedNumericDocValuesField(\"intMv\", Long.parseLong(doc[10])));\n      document.add(new SortedNumericDocValuesField(\"intMv\", Long.parseLong(doc[11])));\n      document.add(new SortedNumericDocValuesField(\"intMv\", Long.parseLong(doc[12])));\n      document.add(new SortedNumericDocValuesField(\"longMv\", Long.parseLong(doc[10])));\n      document.add(new SortedNumericDocValuesField(\"longMv\", Long.parseLong(doc[11])));\n      document.add(new SortedNumericDocValuesField(\"longMv\", Long.parseLong(doc[12])));\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    analyzer = new MockAnalyzer(random());\n    IndexWriterConfig iwConfig = newIndexWriterConfig(analyzer);\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    for (String [] doc : documents) {\n      Document document = new Document();\n      document.add(new StringField(\"id\", doc[0], Field.Store.NO));\n      document.add(new SortedDocValuesField(\"id\", new BytesRef(doc[0])));\n      document.add(new NumericDocValuesField(\"double\", Double.doubleToRawLongBits(Double.parseDouble(doc[1]))));\n      document.add(new NumericDocValuesField(\"float\", Float.floatToRawIntBits(Float.valueOf(doc[2]))));\n      document.add(new NumericDocValuesField(\"int\", Integer.valueOf(doc[3])));\n      document.add(new NumericDocValuesField(\"long\", Long.valueOf(doc[4])));\n      document.add(new StringField(\"string\", doc[5], Field.Store.NO));\n      document.add(new SortedDocValuesField(\"string\", new BytesRef(doc[5])));\n      document.add(new TextField(\"text\", doc[6], Field.Store.NO));\n      document.add(new SortedNumericDocValuesField(\"floatMv\", NumericUtils.floatToSortableInt(Float.parseFloat(doc[7]))));\n      document.add(new SortedNumericDocValuesField(\"floatMv\", NumericUtils.floatToSortableInt(Float.parseFloat(doc[8]))));\n      document.add(new SortedNumericDocValuesField(\"floatMv\", NumericUtils.floatToSortableInt(Float.parseFloat(doc[9]))));\n      document.add(new SortedNumericDocValuesField(\"doubleMv\", NumericUtils.doubleToSortableLong(Double.parseDouble(doc[7]))));\n      document.add(new SortedNumericDocValuesField(\"doubleMv\", NumericUtils.doubleToSortableLong(Double.parseDouble(doc[8]))));\n      document.add(new SortedNumericDocValuesField(\"doubleMv\", NumericUtils.doubleToSortableLong(Double.parseDouble(doc[9]))));\n      document.add(new SortedNumericDocValuesField(\"intMv\", Long.parseLong(doc[10])));\n      document.add(new SortedNumericDocValuesField(\"intMv\", Long.parseLong(doc[11])));\n      document.add(new SortedNumericDocValuesField(\"intMv\", Long.parseLong(doc[12])));\n      document.add(new SortedNumericDocValuesField(\"longMv\", Long.parseLong(doc[10])));\n      document.add(new SortedNumericDocValuesField(\"longMv\", Long.parseLong(doc[11])));\n      document.add(new SortedNumericDocValuesField(\"longMv\", Long.parseLong(doc[12])));\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab68488225b6a6c357dda72ed11dedca9914a192","date":1490013111,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    analyzer = new MockAnalyzer(random());\n    IndexWriterConfig iwConfig = newIndexWriterConfig(analyzer);\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    for (String [] doc : documents) {\n      Document document = new Document();\n      document.add(new StringField(\"id\", doc[0], Field.Store.NO));\n      document.add(new SortedDocValuesField(\"id\", new BytesRef(doc[0])));\n      document.add(new NumericDocValuesField(\"double\", Double.doubleToRawLongBits(Double.parseDouble(doc[1]))));\n      document.add(new NumericDocValuesField(\"float\", Float.floatToRawIntBits(Float.parseFloat(doc[2]))));\n      document.add(new NumericDocValuesField(\"int\", Integer.parseInt(doc[3])));\n      document.add(new NumericDocValuesField(\"long\", Long.parseLong(doc[4])));\n      document.add(new StringField(\"string\", doc[5], Field.Store.NO));\n      document.add(new SortedDocValuesField(\"string\", new BytesRef(doc[5])));\n      document.add(new TextField(\"text\", doc[6], Field.Store.NO));\n      document.add(new SortedNumericDocValuesField(\"floatMv\", NumericUtils.floatToSortableInt(Float.parseFloat(doc[7]))));\n      document.add(new SortedNumericDocValuesField(\"floatMv\", NumericUtils.floatToSortableInt(Float.parseFloat(doc[8]))));\n      document.add(new SortedNumericDocValuesField(\"floatMv\", NumericUtils.floatToSortableInt(Float.parseFloat(doc[9]))));\n      document.add(new SortedNumericDocValuesField(\"doubleMv\", NumericUtils.doubleToSortableLong(Double.parseDouble(doc[7]))));\n      document.add(new SortedNumericDocValuesField(\"doubleMv\", NumericUtils.doubleToSortableLong(Double.parseDouble(doc[8]))));\n      document.add(new SortedNumericDocValuesField(\"doubleMv\", NumericUtils.doubleToSortableLong(Double.parseDouble(doc[9]))));\n      document.add(new SortedNumericDocValuesField(\"intMv\", Long.parseLong(doc[10])));\n      document.add(new SortedNumericDocValuesField(\"intMv\", Long.parseLong(doc[11])));\n      document.add(new SortedNumericDocValuesField(\"intMv\", Long.parseLong(doc[12])));\n      document.add(new SortedNumericDocValuesField(\"longMv\", Long.parseLong(doc[10])));\n      document.add(new SortedNumericDocValuesField(\"longMv\", Long.parseLong(doc[11])));\n      document.add(new SortedNumericDocValuesField(\"longMv\", Long.parseLong(doc[12])));\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    analyzer = new MockAnalyzer(random());\n    IndexWriterConfig iwConfig = newIndexWriterConfig(analyzer);\n    iwConfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwConfig);\n    for (String [] doc : documents) {\n      Document document = new Document();\n      document.add(new StringField(\"id\", doc[0], Field.Store.NO));\n      document.add(new SortedDocValuesField(\"id\", new BytesRef(doc[0])));\n      document.add(new NumericDocValuesField(\"double\", Double.doubleToRawLongBits(Double.parseDouble(doc[1]))));\n      document.add(new NumericDocValuesField(\"float\", Float.floatToRawIntBits(Float.valueOf(doc[2]))));\n      document.add(new NumericDocValuesField(\"int\", Integer.valueOf(doc[3])));\n      document.add(new NumericDocValuesField(\"long\", Long.valueOf(doc[4])));\n      document.add(new StringField(\"string\", doc[5], Field.Store.NO));\n      document.add(new SortedDocValuesField(\"string\", new BytesRef(doc[5])));\n      document.add(new TextField(\"text\", doc[6], Field.Store.NO));\n      document.add(new SortedNumericDocValuesField(\"floatMv\", NumericUtils.floatToSortableInt(Float.parseFloat(doc[7]))));\n      document.add(new SortedNumericDocValuesField(\"floatMv\", NumericUtils.floatToSortableInt(Float.parseFloat(doc[8]))));\n      document.add(new SortedNumericDocValuesField(\"floatMv\", NumericUtils.floatToSortableInt(Float.parseFloat(doc[9]))));\n      document.add(new SortedNumericDocValuesField(\"doubleMv\", NumericUtils.doubleToSortableLong(Double.parseDouble(doc[7]))));\n      document.add(new SortedNumericDocValuesField(\"doubleMv\", NumericUtils.doubleToSortableLong(Double.parseDouble(doc[8]))));\n      document.add(new SortedNumericDocValuesField(\"doubleMv\", NumericUtils.doubleToSortableLong(Double.parseDouble(doc[9]))));\n      document.add(new SortedNumericDocValuesField(\"intMv\", Long.parseLong(doc[10])));\n      document.add(new SortedNumericDocValuesField(\"intMv\", Long.parseLong(doc[11])));\n      document.add(new SortedNumericDocValuesField(\"intMv\", Long.parseLong(doc[12])));\n      document.add(new SortedNumericDocValuesField(\"longMv\", Long.parseLong(doc[10])));\n      document.add(new SortedNumericDocValuesField(\"longMv\", Long.parseLong(doc[11])));\n      document.add(new SortedNumericDocValuesField(\"longMv\", Long.parseLong(doc[12])));\n      iw.addDocument(document);\n    }\n    \n    reader = iw.getReader();\n    searcher = newSearcher(reader);\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8":["7cc453cd9f503b2ba830b15afa27d11dc109c6af"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"0ceb5bb30e401cb218b31197b1a9aa47e77cda17":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["04f07771a2a7dd3a395700665ed839c3dae2def2","59a0020b413d44dd79d85d7a66ed5004265fb453"],"0858e338cc7ed91cff3bae1cb26df0fba2b4f254":["770342641f7b505eaa8dccdc666158bff2419109"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"56572ec06f1407c066d6b7399413178b33176cd8":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a","93dd449115a9247533e44bab47e8429e5dccbc6d"],"770342641f7b505eaa8dccdc666158bff2419109":["a56958d7f71a28824f20031ffbb2e13502a0274e"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["fb02351ae2b114dd41585916d1e35fb2cff98fb0"],"fb02351ae2b114dd41585916d1e35fb2cff98fb0":["0ceb5bb30e401cb218b31197b1a9aa47e77cda17"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["d0ef034a4f10871667ae75181537775ddcf8ade4","a56958d7f71a28824f20031ffbb2e13502a0274e"],"7cc453cd9f503b2ba830b15afa27d11dc109c6af":["0858e338cc7ed91cff3bae1cb26df0fba2b4f254"],"55e0b3830b94d1abce4e32e98cfc875d5b14e76f":["7cc453cd9f503b2ba830b15afa27d11dc109c6af"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"59a0020b413d44dd79d85d7a66ed5004265fb453":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["59a0020b413d44dd79d85d7a66ed5004265fb453"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"ab68488225b6a6c357dda72ed11dedca9914a192":["7cc453cd9f503b2ba830b15afa27d11dc109c6af","55e0b3830b94d1abce4e32e98cfc875d5b14e76f"],"ef0d8a69209261514c5739c770bba706c2308450":["0ceb5bb30e401cb218b31197b1a9aa47e77cda17","fb02351ae2b114dd41585916d1e35fb2cff98fb0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6c72a3aa9309c1f5ade9265cf083e565ae8d35b8"]},"commit2Childs":{"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"0ceb5bb30e401cb218b31197b1a9aa47e77cda17":["fb02351ae2b114dd41585916d1e35fb2cff98fb0","ef0d8a69209261514c5739c770bba706c2308450"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"0858e338cc7ed91cff3bae1cb26df0fba2b4f254":["7cc453cd9f503b2ba830b15afa27d11dc109c6af"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"770342641f7b505eaa8dccdc666158bff2419109":["0858e338cc7ed91cff3bae1cb26df0fba2b4f254"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["37a0f60745e53927c4c876cfe5b5a58170f0646c","59a0020b413d44dd79d85d7a66ed5004265fb453"],"fb02351ae2b114dd41585916d1e35fb2cff98fb0":["04f07771a2a7dd3a395700665ed839c3dae2def2","ef0d8a69209261514c5739c770bba706c2308450"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"7cc453cd9f503b2ba830b15afa27d11dc109c6af":["6c72a3aa9309c1f5ade9265cf083e565ae8d35b8","55e0b3830b94d1abce4e32e98cfc875d5b14e76f","ab68488225b6a6c357dda72ed11dedca9914a192"],"55e0b3830b94d1abce4e32e98cfc875d5b14e76f":["ab68488225b6a6c357dda72ed11dedca9914a192"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","56572ec06f1407c066d6b7399413178b33176cd8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0ceb5bb30e401cb218b31197b1a9aa47e77cda17"],"59a0020b413d44dd79d85d7a66ed5004265fb453":["37a0f60745e53927c4c876cfe5b5a58170f0646c","ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a56958d7f71a28824f20031ffbb2e13502a0274e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","56572ec06f1407c066d6b7399413178b33176cd8","93dd449115a9247533e44bab47e8429e5dccbc6d"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["770342641f7b505eaa8dccdc666158bff2419109","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"ab68488225b6a6c357dda72ed11dedca9914a192":[],"ef0d8a69209261514c5739c770bba706c2308450":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","56572ec06f1407c066d6b7399413178b33176cd8","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","ab68488225b6a6c357dda72ed11dedca9914a192","ef0d8a69209261514c5739c770bba706c2308450","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}