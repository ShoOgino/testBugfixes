{"path":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(String,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder).mjava","commits":[{"id":"7af110b00ea8df9429309d83e38e0533d82e144f","date":1376924768,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(String,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(Directory,DocumentsWriter,FieldInfos.Builder,IndexingChain).mjava","sourceNew":"  public DocumentsWriterPerThread(String segmentName, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n      FieldInfos.Builder fieldInfos) {\n    this.directoryOrig = directory;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingDeletes = new BufferedDeletes();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingDeletes.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Constants.LUCENE_MAIN_VERSION, segmentName, -1,\n        false, codec, null, null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(Directory directory, DocumentsWriter parent,\n      FieldInfos.Builder fieldInfos, IndexingChain indexingChain) {\n    this.directoryOrig = directory;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.parent = parent;\n    this.fieldInfos = fieldInfos;\n    this.writer = parent.indexWriter;\n    this.indexWriterConfig = parent.indexWriterConfig;\n    this.infoStream = parent.infoStream;\n    this.codec = parent.codec;\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = parent.indexWriter.getConfig().getSimilarity();\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingDeletes = new BufferedDeletes();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    initialize();\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexingChain.getChain(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31d4861802ca404d78ca1d15f4550eec415b9199","date":1376947894,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(String,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(Directory,DocumentsWriter,FieldInfos.Builder,IndexingChain).mjava","sourceNew":"  public DocumentsWriterPerThread(String segmentName, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n      FieldInfos.Builder fieldInfos) {\n    this.directoryOrig = directory;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingDeletes = new BufferedDeletes();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingDeletes.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Constants.LUCENE_MAIN_VERSION, segmentName, -1,\n        false, codec, null, null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(Directory directory, DocumentsWriter parent,\n      FieldInfos.Builder fieldInfos, IndexingChain indexingChain) {\n    this.directoryOrig = directory;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.parent = parent;\n    this.fieldInfos = fieldInfos;\n    this.writer = parent.indexWriter;\n    this.indexWriterConfig = parent.indexWriterConfig;\n    this.infoStream = parent.infoStream;\n    this.codec = parent.codec;\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = parent.indexWriter.getConfig().getSimilarity();\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingDeletes = new BufferedDeletes();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    initialize();\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexingChain.getChain(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(String,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder).mjava","pathOld":"/dev/null","sourceNew":"  public DocumentsWriterPerThread(String segmentName, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n      FieldInfos.Builder fieldInfos) {\n    this.directoryOrig = directory;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingDeletes = new BufferedDeletes();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingDeletes.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Constants.LUCENE_MAIN_VERSION, segmentName, -1,\n        false, codec, null, null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77f264c55cbf75404f8601ae7290d69157273a56","date":1380484282,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(String,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(String,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder).mjava","sourceNew":"  public DocumentsWriterPerThread(String segmentName, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n      FieldInfos.Builder fieldInfos) {\n    this.directoryOrig = directory;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingDeletes = new BufferedDeletes();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingDeletes.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Constants.LUCENE_MAIN_VERSION, segmentName, -1, false, codec, null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(String segmentName, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n      FieldInfos.Builder fieldInfos) {\n    this.directoryOrig = directory;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingDeletes = new BufferedDeletes();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingDeletes.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Constants.LUCENE_MAIN_VERSION, segmentName, -1,\n        false, codec, null, null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(String,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(String,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder).mjava","sourceNew":"  public DocumentsWriterPerThread(String segmentName, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n      FieldInfos.Builder fieldInfos) {\n    this.directoryOrig = directory;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Constants.LUCENE_MAIN_VERSION, segmentName, -1, false, codec, null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(String segmentName, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n      FieldInfos.Builder fieldInfos) {\n    this.directoryOrig = directory;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingDeletes = new BufferedDeletes();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingDeletes.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Constants.LUCENE_MAIN_VERSION, segmentName, -1, false, codec, null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52c7e49be259508735752fba88085255014a6ecf","date":1398706273,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(String,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(String,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder).mjava","sourceNew":"  public DocumentsWriterPerThread(String segmentName, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n      FieldInfos.Builder fieldInfos) throws IOException {\n    this.directoryOrig = directory;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Constants.LUCENE_MAIN_VERSION, segmentName, -1, false, codec, null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(String segmentName, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n      FieldInfos.Builder fieldInfos) {\n    this.directoryOrig = directory;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Constants.LUCENE_MAIN_VERSION, segmentName, -1, false, codec, null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3394716f52b34ab259ad5247e7595d9f9db6e935","date":1398791921,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(String,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(String,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder).mjava","sourceNew":"  public DocumentsWriterPerThread(String segmentName, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n      FieldInfos.Builder fieldInfos) throws IOException {\n    this.directoryOrig = directory;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Constants.LUCENE_MAIN_VERSION, segmentName, -1, false, codec, null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(String segmentName, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n      FieldInfos.Builder fieldInfos) {\n    this.directoryOrig = directory;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Constants.LUCENE_MAIN_VERSION, segmentName, -1, false, codec, null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","date":1398844771,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(String,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(String,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder).mjava","sourceNew":"  public DocumentsWriterPerThread(String segmentName, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n      FieldInfos.Builder fieldInfos) throws IOException {\n    this.directoryOrig = directory;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Constants.LUCENE_MAIN_VERSION, segmentName, -1, false, codec, null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(String segmentName, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n      FieldInfos.Builder fieldInfos) {\n    this.directoryOrig = directory;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Constants.LUCENE_MAIN_VERSION, segmentName, -1, false, codec, null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6b7c6630218ed9693cdb8643276513f9f0043f4","date":1406648084,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(String,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(String,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder).mjava","sourceNew":"  public DocumentsWriterPerThread(String segmentName, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs) throws IOException {\n    this.directoryOrig = directory;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Constants.LUCENE_MAIN_VERSION, segmentName, -1, false, codec, null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(String segmentName, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n      FieldInfos.Builder fieldInfos) throws IOException {\n    this.directoryOrig = directory;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Constants.LUCENE_MAIN_VERSION, segmentName, -1, false, codec, null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","52c7e49be259508735752fba88085255014a6ecf"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["77f264c55cbf75404f8601ae7290d69157273a56"],"7af110b00ea8df9429309d83e38e0533d82e144f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","3394716f52b34ab259ad5247e7595d9f9db6e935"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7af110b00ea8df9429309d83e38e0533d82e144f"],"31d4861802ca404d78ca1d15f4550eec415b9199":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7af110b00ea8df9429309d83e38e0533d82e144f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6b7c6630218ed9693cdb8643276513f9f0043f4":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"77f264c55cbf75404f8601ae7290d69157273a56":["7af110b00ea8df9429309d83e38e0533d82e144f"],"52c7e49be259508735752fba88085255014a6ecf":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d6b7c6630218ed9693cdb8643276513f9f0043f4"]},"commit2Childs":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","d6b7c6630218ed9693cdb8643276513f9f0043f4"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["3394716f52b34ab259ad5247e7595d9f9db6e935","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","52c7e49be259508735752fba88085255014a6ecf"],"7af110b00ea8df9429309d83e38e0533d82e144f":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","77f264c55cbf75404f8601ae7290d69157273a56"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":[],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"31d4861802ca404d78ca1d15f4550eec415b9199":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7af110b00ea8df9429309d83e38e0533d82e144f","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199"],"d6b7c6630218ed9693cdb8643276513f9f0043f4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"77f264c55cbf75404f8601ae7290d69157273a56":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"52c7e49be259508735752fba88085255014a6ecf":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}