{"path":"lucene/src/test/org/apache/lucene/index/FlexTestUtil#getRandomText(Random,int,int,boolean).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/FlexTestUtil#getRandomText(Random,int,int,boolean).mjava","pathOld":"/dev/null","sourceNew":"  public static String getRandomText(Random rand, int minLen, int maxLen, boolean doUnpairedSurr) {\n    final int len = nextInt(rand, minLen, maxLen);\n    char[] buffer = new char[len];\n    \n    for(int i=0;i<len;i++) {\n      int t = rand.nextInt(doUnpairedSurr ? 6 : 5);\n      if (0 == t && i < len-1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(rand, 0xd800, 0xdc00);\n        // Low surrogate\n        buffer[i] = (char) nextInt(rand, 0xdc00, 0xe000);\n      } else if (t <= 1) {\n        buffer[i] = (char) nextInt(rand, 0x80);\n      } else if (2 == t) {\n        buffer[i] = (char) nextInt(rand, 0x80, 0x800);\n      } else if (3 == t) {\n        buffer[i] = (char) nextInt(rand, 0x800, 0xd800);\n      } else if (4 == t) {\n        buffer[i] = (char) nextInt(rand, 0xe000, 0xffff);\n      } else if (5 == t) {\n        // Illegal unpaired surrogate\n        if (rand.nextBoolean()) {\n          buffer[i] = (char) nextInt(rand, 0xd800, 0xdc00);\n        } else {\n          buffer[i] = (char) nextInt(rand, 0xdc00, 0xe000);\n        }\n      }\n    }\n\n    return new String(buffer);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28427ef110c4c5bf5b4057731b83110bd1e13724","date":1276701452,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/FlexTestUtil#getRandomText(Random,int,int,boolean).mjava","sourceNew":null,"sourceOld":"  public static String getRandomText(Random rand, int minLen, int maxLen, boolean doUnpairedSurr) {\n    final int len = nextInt(rand, minLen, maxLen);\n    char[] buffer = new char[len];\n    \n    for(int i=0;i<len;i++) {\n      int t = rand.nextInt(doUnpairedSurr ? 6 : 5);\n      if (0 == t && i < len-1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(rand, 0xd800, 0xdc00);\n        // Low surrogate\n        buffer[i] = (char) nextInt(rand, 0xdc00, 0xe000);\n      } else if (t <= 1) {\n        buffer[i] = (char) nextInt(rand, 0x80);\n      } else if (2 == t) {\n        buffer[i] = (char) nextInt(rand, 0x80, 0x800);\n      } else if (3 == t) {\n        buffer[i] = (char) nextInt(rand, 0x800, 0xd800);\n      } else if (4 == t) {\n        buffer[i] = (char) nextInt(rand, 0xe000, 0xffff);\n      } else if (5 == t) {\n        // Illegal unpaired surrogate\n        if (rand.nextBoolean()) {\n          buffer[i] = (char) nextInt(rand, 0xd800, 0xdc00);\n        } else {\n          buffer[i] = (char) nextInt(rand, 0xdc00, 0xe000);\n        }\n      }\n    }\n\n    return new String(buffer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/FlexTestUtil#getRandomText(Random,int,int,boolean).mjava","sourceNew":null,"sourceOld":"  public static String getRandomText(Random rand, int minLen, int maxLen, boolean doUnpairedSurr) {\n    final int len = nextInt(rand, minLen, maxLen);\n    char[] buffer = new char[len];\n    \n    for(int i=0;i<len;i++) {\n      int t = rand.nextInt(doUnpairedSurr ? 6 : 5);\n      if (0 == t && i < len-1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(rand, 0xd800, 0xdc00);\n        // Low surrogate\n        buffer[i] = (char) nextInt(rand, 0xdc00, 0xe000);\n      } else if (t <= 1) {\n        buffer[i] = (char) nextInt(rand, 0x80);\n      } else if (2 == t) {\n        buffer[i] = (char) nextInt(rand, 0x80, 0x800);\n      } else if (3 == t) {\n        buffer[i] = (char) nextInt(rand, 0x800, 0xd800);\n      } else if (4 == t) {\n        buffer[i] = (char) nextInt(rand, 0xe000, 0xffff);\n      } else if (5 == t) {\n        // Illegal unpaired surrogate\n        if (rand.nextBoolean()) {\n          buffer[i] = (char) nextInt(rand, 0xd800, 0xdc00);\n        } else {\n          buffer[i] = (char) nextInt(rand, 0xdc00, 0xe000);\n        }\n      }\n    }\n\n    return new String(buffer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"28427ef110c4c5bf5b4057731b83110bd1e13724":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5f4e87790277826a2aea119328600dfb07761f32":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","28427ef110c4c5bf5b4057731b83110bd1e13724"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28427ef110c4c5bf5b4057731b83110bd1e13724"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"28427ef110c4c5bf5b4057731b83110bd1e13724":["5f4e87790277826a2aea119328600dfb07761f32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["28427ef110c4c5bf5b4057731b83110bd1e13724","5f4e87790277826a2aea119328600dfb07761f32"],"5f4e87790277826a2aea119328600dfb07761f32":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5f4e87790277826a2aea119328600dfb07761f32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}