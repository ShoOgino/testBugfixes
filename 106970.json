{"path":"src/java/org/apache/lucene/search/MultiSearcher.CachedDfSource#docFreq(Term).mjava","commits":[{"id":"402061809f3a4629ea0c449e33e9f94a9772f3c3","date":1113967712,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/MultiSearcher.CachedDfSource#docFreq(Term).mjava","pathOld":"/dev/null","sourceNew":"    public int docFreq(Term term) {\n      int df;\n      try {\n        df = ((Integer) dfMap.get(term)).intValue();\n      } catch (NullPointerException e) {\n        throw new IllegalArgumentException(\"df for term \" + term.text()\n            + \" not available\");\n      }\n      return df;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef82ff03e4016c705811b2658e81471a645c0e49","date":1255900293,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/MultiSearcher.CachedDfSource#docFreq(Term).mjava","pathOld":"src/java/org/apache/lucene/search/MultiSearcher.CachedDfSource#docFreq(Term).mjava","sourceNew":"    public int docFreq(Term term) {\n      int df;\n      try {\n        df = dfMap.get(term).intValue();\n      } catch (NullPointerException e) {\n        throw new IllegalArgumentException(\"df for term \" + term.text()\n            + \" not available\");\n      }\n      return df;\n    }\n\n","sourceOld":"    public int docFreq(Term term) {\n      int df;\n      try {\n        df = ((Integer) dfMap.get(term)).intValue();\n      } catch (NullPointerException e) {\n        throw new IllegalArgumentException(\"df for term \" + term.text()\n            + \" not available\");\n      }\n      return df;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/MultiSearcher.CachedDfSource#docFreq(Term).mjava","pathOld":"src/java/org/apache/lucene/search/MultiSearcher.CachedDfSource#docFreq(Term).mjava","sourceNew":"    @Override\n    public int docFreq(Term term) {\n      int df;\n      try {\n        df = dfMap.get(term).intValue();\n      } catch (NullPointerException e) {\n        throw new IllegalArgumentException(\"df for term \" + term.text()\n            + \" not available\");\n      }\n      return df;\n    }\n\n","sourceOld":"    public int docFreq(Term term) {\n      int df;\n      try {\n        df = dfMap.get(term).intValue();\n      } catch (NullPointerException e) {\n        throw new IllegalArgumentException(\"df for term \" + term.text()\n            + \" not available\");\n      }\n      return df;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/MultiSearcher.CachedDfSource#docFreq(Term).mjava","pathOld":"src/java/org/apache/lucene/search/MultiSearcher.CachedDfSource#docFreq(Term).mjava","sourceNew":"    @Override\n    public int docFreq(Term term) {\n      int df;\n      try {\n        df = dfMap.get(term).intValue();\n      } catch (NullPointerException e) {\n        throw new IllegalArgumentException(\"df for term \" + term.text()\n            + \" not available\");\n      }\n      return df;\n    }\n\n","sourceOld":"    @Override\n    public int docFreq(Term term) {\n      int df;\n      try {\n        df = dfMap.get(term).intValue();\n      } catch (NullPointerException e) {\n        throw new IllegalArgumentException(\"df for term \" + term.text()\n            + \" not available\");\n      }\n      return df;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"402061809f3a4629ea0c449e33e9f94a9772f3c3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8a9e385641d717e641408d8fbbc62be8fc766357":["ef82ff03e4016c705811b2658e81471a645c0e49"],"ef82ff03e4016c705811b2658e81471a645c0e49":["402061809f3a4629ea0c449e33e9f94a9772f3c3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"]},"commit2Childs":{"402061809f3a4629ea0c449e33e9f94a9772f3c3":["ef82ff03e4016c705811b2658e81471a645c0e49"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["402061809f3a4629ea0c449e33e9f94a9772f3c3"],"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ef82ff03e4016c705811b2658e81471a645c0e49":["8a9e385641d717e641408d8fbbc62be8fc766357"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}