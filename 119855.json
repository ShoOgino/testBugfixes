{"path":"lucene/core/src/test/org/apache/lucene/index/TestCrash#initIndex(Random,MockDirectoryWrapper,boolean).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCrash#initIndex(Random,MockDirectoryWrapper,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCrash#initIndex(Random,MockDirectoryWrapper,boolean).mjava","sourceNew":"  private IndexWriter initIndex(Random random, MockDirectoryWrapper dir, boolean initialCommit) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(10).setMergeScheduler(new ConcurrentMergeScheduler()));\n    ((ConcurrentMergeScheduler) writer.getConfig().getMergeScheduler()).setSuppressExceptions();\n    if (initialCommit) {\n      writer.commit();\n    }\n    \n    Document doc = new Document();\n    doc.add(newField(\"content\", \"aaa\", TextField.TYPE_UNSTORED));\n    doc.add(newField(\"id\", \"0\", TextField.TYPE_UNSTORED));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","sourceOld":"  private IndexWriter initIndex(Random random, MockDirectoryWrapper dir, boolean initialCommit) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(10).setMergeScheduler(new ConcurrentMergeScheduler()));\n    ((ConcurrentMergeScheduler) writer.getConfig().getMergeScheduler()).setSuppressExceptions();\n    if (initialCommit) {\n      writer.commit();\n    }\n    \n    Document doc = new Document();\n    doc.add(newField(\"content\", \"aaa\", TextField.TYPE_UNSTORED));\n    doc.add(newField(\"id\", \"0\", TextField.TYPE_UNSTORED));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCrash#initIndex(Random,MockDirectoryWrapper,boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCrash#initIndex(Random,MockDirectoryWrapper,boolean).mjava","sourceNew":"  private IndexWriter initIndex(Random random, MockDirectoryWrapper dir, boolean initialCommit) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(10).setMergeScheduler(new ConcurrentMergeScheduler()));\n    ((ConcurrentMergeScheduler) writer.getConfig().getMergeScheduler()).setSuppressExceptions();\n    if (initialCommit) {\n      writer.commit();\n    }\n    \n    Document doc = new Document();\n    doc.add(newTextField(\"content\", \"aaa\", Field.Store.NO));\n    doc.add(newTextField(\"id\", \"0\", Field.Store.NO));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","sourceOld":"  private IndexWriter initIndex(Random random, MockDirectoryWrapper dir, boolean initialCommit) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(10).setMergeScheduler(new ConcurrentMergeScheduler()));\n    ((ConcurrentMergeScheduler) writer.getConfig().getMergeScheduler()).setSuppressExceptions();\n    if (initialCommit) {\n      writer.commit();\n    }\n    \n    Document doc = new Document();\n    doc.add(newField(\"content\", \"aaa\", TextField.TYPE_UNSTORED));\n    doc.add(newField(\"id\", \"0\", TextField.TYPE_UNSTORED));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCrash#initIndex(Random,MockDirectoryWrapper,boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCrash#initIndex(Random,MockDirectoryWrapper,boolean).mjava","sourceNew":"  private IndexWriter initIndex(Random random, MockDirectoryWrapper dir, boolean initialCommit) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random))\n        .setMaxBufferedDocs(10).setMergeScheduler(new ConcurrentMergeScheduler()));\n    ((ConcurrentMergeScheduler) writer.getConfig().getMergeScheduler()).setSuppressExceptions();\n    if (initialCommit) {\n      writer.commit();\n    }\n    \n    Document doc = new Document();\n    doc.add(newTextField(\"content\", \"aaa\", Field.Store.NO));\n    doc.add(newTextField(\"id\", \"0\", Field.Store.NO));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","sourceOld":"  private IndexWriter initIndex(Random random, MockDirectoryWrapper dir, boolean initialCommit) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(10).setMergeScheduler(new ConcurrentMergeScheduler()));\n    ((ConcurrentMergeScheduler) writer.getConfig().getMergeScheduler()).setSuppressExceptions();\n    if (initialCommit) {\n      writer.commit();\n    }\n    \n    Document doc = new Document();\n    doc.add(newTextField(\"content\", \"aaa\", Field.Store.NO));\n    doc.add(newTextField(\"id\", \"0\", Field.Store.NO));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":5,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCrash#initIndex(Random,MockDirectoryWrapper,boolean,boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCrash#initIndex(Random,MockDirectoryWrapper,boolean).mjava","sourceNew":"  private IndexWriter initIndex(Random random, MockDirectoryWrapper dir, boolean initialCommit, boolean commitOnClose) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random))\n        .setMaxBufferedDocs(10).setMergeScheduler(new ConcurrentMergeScheduler()).setCommitOnClose(commitOnClose));\n    ((ConcurrentMergeScheduler) writer.getConfig().getMergeScheduler()).setSuppressExceptions();\n    if (initialCommit) {\n      writer.commit();\n    }\n    \n    Document doc = new Document();\n    doc.add(newTextField(\"content\", \"aaa\", Field.Store.NO));\n    doc.add(newTextField(\"id\", \"0\", Field.Store.NO));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","sourceOld":"  private IndexWriter initIndex(Random random, MockDirectoryWrapper dir, boolean initialCommit) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random))\n        .setMaxBufferedDocs(10).setMergeScheduler(new ConcurrentMergeScheduler()));\n    ((ConcurrentMergeScheduler) writer.getConfig().getMergeScheduler()).setSuppressExceptions();\n    if (initialCommit) {\n      writer.commit();\n    }\n    \n    Document doc = new Document();\n    doc.add(newTextField(\"content\", \"aaa\", Field.Store.NO));\n    doc.add(newTextField(\"id\", \"0\", Field.Store.NO));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}