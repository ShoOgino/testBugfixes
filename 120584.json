{"path":"lucene/facet/src/java/org/apache/lucene/facet/search/params/FacetRequest#createCategoryListIterator(IndexReader,TaxonomyReader,FacetSearchParams,int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/params/FacetRequest#createCategoryListIterator(IndexReader,TaxonomyReader,FacetSearchParams,int).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/search/params/FacetRequest#createCategoryListIterator(IndexReader,TaxonomyReader,FacetSearchParams,int).mjava","sourceNew":"  /**\n   * Create the category list iterator for the specified partition.\n   * If a non null cache is provided which contains the required data, \n   * use it for the iteration.\n   */\n  public CategoryListIterator createCategoryListIterator(IndexReader reader,\n      TaxonomyReader taxo, FacetSearchParams sParams, int partition)\n      throws IOException {\n    CategoryListCache clCache = sParams.getClCache();\n    CategoryListParams clParams = sParams.getFacetIndexingParams().getCategoryListParams(categoryPath);\n    if (clCache!=null) {\n      CategoryListData clData = clCache.get(clParams);\n      if (clData!=null) {\n        return clData.iterator(partition);\n      }\n    }\n    return clParams.createCategoryListIterator(reader, partition);\n  }\n\n","sourceOld":"  /**\n   * Create the category list iterator for the specified partition.\n   * If a non null cache is provided which contains the required data, \n   * use it for the iteration.\n   */\n  public CategoryListIterator createCategoryListIterator(IndexReader reader,\n      TaxonomyReader taxo, FacetSearchParams sParams, int partition)\n      throws IOException {\n    CategoryListCache clCache = sParams.getClCache();\n    CategoryListParams clParams = sParams.getFacetIndexingParams().getCategoryListParams(categoryPath);\n    if (clCache!=null) {\n      CategoryListData clData = clCache.get(clParams);\n      if (clData!=null) {\n        return clData.iterator(partition);\n      }\n    }\n    return clParams.createCategoryListIterator(reader, partition);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4c6c7f3cda7a0595cabd16e5e9107ca29852708","date":1355402234,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/params/FacetRequest#createCategoryListIterator(IndexReader,TaxonomyReader,FacetSearchParams,int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/params/FacetRequest#createCategoryListIterator(IndexReader,TaxonomyReader,FacetSearchParams,int).mjava","sourceNew":"  /**\n   * Create the category list iterator for the specified partition.\n   * If a non null cache is provided which contains the required data, \n   * use it for the iteration.\n   */\n  public CategoryListIterator createCategoryListIterator(IndexReader reader,\n      TaxonomyReader taxo, FacetSearchParams sParams, int partition)\n      throws IOException {\n    CategoryListCache clCache = sParams.getCategoryListCache();\n    CategoryListParams clParams = sParams.getFacetIndexingParams().getCategoryListParams(categoryPath);\n    if (clCache!=null) {\n      CategoryListData clData = clCache.get(clParams);\n      if (clData!=null) {\n        return clData.iterator(partition);\n      }\n    }\n    return clParams.createCategoryListIterator(reader, partition);\n  }\n\n","sourceOld":"  /**\n   * Create the category list iterator for the specified partition.\n   * If a non null cache is provided which contains the required data, \n   * use it for the iteration.\n   */\n  public CategoryListIterator createCategoryListIterator(IndexReader reader,\n      TaxonomyReader taxo, FacetSearchParams sParams, int partition)\n      throws IOException {\n    CategoryListCache clCache = sParams.getClCache();\n    CategoryListParams clParams = sParams.getFacetIndexingParams().getCategoryListParams(categoryPath);\n    if (clCache!=null) {\n      CategoryListData clData = clCache.get(clParams);\n      if (clData!=null) {\n        return clData.iterator(partition);\n      }\n    }\n    return clParams.createCategoryListIterator(reader, partition);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/params/FacetRequest#createCategoryListIterator(IndexReader,TaxonomyReader,FacetSearchParams,int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/params/FacetRequest#createCategoryListIterator(IndexReader,TaxonomyReader,FacetSearchParams,int).mjava","sourceNew":"  /**\n   * Create the category list iterator for the specified partition.\n   * If a non null cache is provided which contains the required data, \n   * use it for the iteration.\n   */\n  public CategoryListIterator createCategoryListIterator(IndexReader reader,\n      TaxonomyReader taxo, FacetSearchParams sParams, int partition)\n      throws IOException {\n    CategoryListCache clCache = sParams.getCategoryListCache();\n    CategoryListParams clParams = sParams.getFacetIndexingParams().getCategoryListParams(categoryPath);\n    if (clCache!=null) {\n      CategoryListData clData = clCache.get(clParams);\n      if (clData!=null) {\n        return clData.iterator(partition);\n      }\n    }\n    return clParams.createCategoryListIterator(reader, partition);\n  }\n\n","sourceOld":"  /**\n   * Create the category list iterator for the specified partition.\n   * If a non null cache is provided which contains the required data, \n   * use it for the iteration.\n   */\n  public CategoryListIterator createCategoryListIterator(IndexReader reader,\n      TaxonomyReader taxo, FacetSearchParams sParams, int partition)\n      throws IOException {\n    CategoryListCache clCache = sParams.getClCache();\n    CategoryListParams clParams = sParams.getFacetIndexingParams().getCategoryListParams(categoryPath);\n    if (clCache!=null) {\n      CategoryListData clData = clCache.get(clParams);\n      if (clData!=null) {\n        return clData.iterator(partition);\n      }\n    }\n    return clParams.createCategoryListIterator(reader, partition);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42f51b3ab4258ff4623227b0db011b8bb83db5c7","date":1358164991,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/params/FacetRequest#createCategoryListIterator(TaxonomyReader,FacetSearchParams,int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/params/FacetRequest#createCategoryListIterator(IndexReader,TaxonomyReader,FacetSearchParams,int).mjava","sourceNew":"  /**\n   * Create the category list iterator for the specified partition. If a non\n   * null cache is provided which contains the required data, use it for the\n   * iteration.\n   */\n  public CategoryListIterator createCategoryListIterator(TaxonomyReader taxo, FacetSearchParams sParams, int partition)\n      throws IOException {\n    CategoryListCache clCache = sParams.getCategoryListCache();\n    CategoryListParams clParams = sParams.getFacetIndexingParams().getCategoryListParams(categoryPath);\n    if (clCache != null) {\n      CategoryListData clData = clCache.get(clParams);\n      if (clData != null) {\n        return clData.iterator(partition);\n      }\n    }\n    return clParams.createCategoryListIterator(partition);\n  }\n\n","sourceOld":"  /**\n   * Create the category list iterator for the specified partition.\n   * If a non null cache is provided which contains the required data, \n   * use it for the iteration.\n   */\n  public CategoryListIterator createCategoryListIterator(IndexReader reader,\n      TaxonomyReader taxo, FacetSearchParams sParams, int partition)\n      throws IOException {\n    CategoryListCache clCache = sParams.getCategoryListCache();\n    CategoryListParams clParams = sParams.getFacetIndexingParams().getCategoryListParams(categoryPath);\n    if (clCache!=null) {\n      CategoryListData clData = clCache.get(clParams);\n      if (clData!=null) {\n        return clData.iterator(partition);\n      }\n    }\n    return clParams.createCategoryListIterator(reader, partition);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8917bfede3b4ca30f4305c1e391e9218959cd723","date":1358189662,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/params/FacetRequest#createCategoryListIterator(TaxonomyReader,FacetSearchParams,int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/params/FacetRequest#createCategoryListIterator(IndexReader,TaxonomyReader,FacetSearchParams,int).mjava","sourceNew":"  /**\n   * Create the category list iterator for the specified partition. If a non\n   * null cache is provided which contains the required data, use it for the\n   * iteration.\n   */\n  public CategoryListIterator createCategoryListIterator(TaxonomyReader taxo, FacetSearchParams sParams, int partition)\n      throws IOException {\n    CategoryListCache clCache = sParams.getCategoryListCache();\n    CategoryListParams clParams = sParams.getFacetIndexingParams().getCategoryListParams(categoryPath);\n    if (clCache != null) {\n      CategoryListData clData = clCache.get(clParams);\n      if (clData != null) {\n        return clData.iterator(partition);\n      }\n    }\n    return clParams.createCategoryListIterator(partition);\n  }\n\n","sourceOld":"  /**\n   * Create the category list iterator for the specified partition.\n   * If a non null cache is provided which contains the required data, \n   * use it for the iteration.\n   */\n  public CategoryListIterator createCategoryListIterator(IndexReader reader,\n      TaxonomyReader taxo, FacetSearchParams sParams, int partition)\n      throws IOException {\n    CategoryListCache clCache = sParams.getCategoryListCache();\n    CategoryListParams clParams = sParams.getFacetIndexingParams().getCategoryListParams(categoryPath);\n    if (clCache!=null) {\n      CategoryListData clData = clCache.get(clParams);\n      if (clData!=null) {\n        return clData.iterator(partition);\n      }\n    }\n    return clParams.createCategoryListIterator(reader, partition);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b89678825b68eccaf09e6ab71675fc0b0af1e099","d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"42f51b3ab4258ff4623227b0db011b8bb83db5c7":["d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"d4c6c7f3cda7a0595cabd16e5e9107ca29852708":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8917bfede3b4ca30f4305c1e391e9218959cd723":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","42f51b3ab4258ff4623227b0db011b8bb83db5c7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["42f51b3ab4258ff4623227b0db011b8bb83db5c7"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["8917bfede3b4ca30f4305c1e391e9218959cd723"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"42f51b3ab4258ff4623227b0db011b8bb83db5c7":["8917bfede3b4ca30f4305c1e391e9218959cd723","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d4c6c7f3cda7a0595cabd16e5e9107ca29852708":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","42f51b3ab4258ff4623227b0db011b8bb83db5c7"],"8917bfede3b4ca30f4305c1e391e9218959cd723":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8917bfede3b4ca30f4305c1e391e9218959cd723","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}