{"path":"lucene/src/java/org/apache/lucene/index/DocumentsWriter.PerDocBuffer#recycle().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter.PerDocBuffer#recycle().mjava","pathOld":"src/java/org/apache/lucene/index/DocumentsWriter.PerDocBuffer#recycle().mjava","sourceNew":"    /**\n     * Recycle the bytes used.\n     */\n    synchronized void recycle() {\n      if (buffers.size() > 0) {\n        setLength(0);\n        \n        // Recycle the blocks\n        final int blockCount = buffers.size();\n        \n        final byte[][] blocks = buffers.toArray( new byte[blockCount][] );\n        perDocAllocator.recycleByteBlocks(blocks, 0, blockCount);\n        buffers.clear();\n        sizeInBytes = 0;\n        \n        assert numBuffers() == 0;\n      }\n    }\n\n","sourceOld":"    /**\n     * Recycle the bytes used.\n     */\n    synchronized void recycle() {\n      if (buffers.size() > 0) {\n        setLength(0);\n        \n        // Recycle the blocks\n        final int blockCount = buffers.size();\n        \n        final byte[][] blocks = buffers.toArray( new byte[blockCount][] );\n        perDocAllocator.recycleByteBlocks(blocks, 0, blockCount);\n        buffers.clear();\n        sizeInBytes = 0;\n        \n        assert numBuffers() == 0;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e2847e2f63e34db01787751b145ed6cdf40697f9","date":1270075384,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter.PerDocBuffer#recycle().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter.PerDocBuffer#recycle().mjava","sourceNew":"    /**\n     * Recycle the bytes used.\n     */\n    synchronized void recycle() {\n      if (buffers.size() > 0) {\n        setLength(0);\n        \n        // Recycle the blocks\n        final int blockCount = buffers.size();\n        \n        perDocAllocator.recycleByteBlocks(buffers);\n        buffers.clear();\n        sizeInBytes = 0;\n        \n        assert numBuffers() == 0;\n      }\n    }\n\n","sourceOld":"    /**\n     * Recycle the bytes used.\n     */\n    synchronized void recycle() {\n      if (buffers.size() > 0) {\n        setLength(0);\n        \n        // Recycle the blocks\n        final int blockCount = buffers.size();\n        \n        final byte[][] blocks = buffers.toArray( new byte[blockCount][] );\n        perDocAllocator.recycleByteBlocks(blocks, 0, blockCount);\n        buffers.clear();\n        sizeInBytes = 0;\n        \n        assert numBuffers() == 0;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f58dd714e47e4b20e7ddf69802a24d8278a50d3d","date":1270583819,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter.PerDocBuffer#recycle().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter.PerDocBuffer#recycle().mjava","sourceNew":"    /**\n     * Recycle the bytes used.\n     */\n    synchronized void recycle() {\n      if (buffers.size() > 0) {\n        setLength(0);\n        \n        // Recycle the blocks\n        perDocAllocator.recycleByteBlocks(buffers);\n        buffers.clear();\n        sizeInBytes = 0;\n        \n        assert numBuffers() == 0;\n      }\n    }\n\n","sourceOld":"    /**\n     * Recycle the bytes used.\n     */\n    synchronized void recycle() {\n      if (buffers.size() > 0) {\n        setLength(0);\n        \n        // Recycle the blocks\n        final int blockCount = buffers.size();\n        \n        perDocAllocator.recycleByteBlocks(buffers);\n        buffers.clear();\n        sizeInBytes = 0;\n        \n        assert numBuffers() == 0;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9b832cbed6eb3d54a8bb9339296bdda8eeb53014","date":1279708040,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter.PerDocBuffer#recycle().mjava","sourceNew":null,"sourceOld":"    /**\n     * Recycle the bytes used.\n     */\n    synchronized void recycle() {\n      if (buffers.size() > 0) {\n        setLength(0);\n        \n        // Recycle the blocks\n        perDocAllocator.recycleByteBlocks(buffers);\n        buffers.clear();\n        sizeInBytes = 0;\n        \n        assert numBuffers() == 0;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"334c1175813aea771a71728cd2c4ee4754fd0603","date":1279710173,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter.PerDocBuffer#recycle().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Recycle the bytes used.\n     */\n    synchronized void recycle() {\n      if (buffers.size() > 0) {\n        setLength(0);\n        \n        // Recycle the blocks\n        perDocAllocator.recycleByteBlocks(buffers);\n        buffers.clear();\n        sizeInBytes = 0;\n        \n        assert numBuffers() == 0;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fe956d65251358d755c56f14fe8380644790e47","date":1279711318,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter.PerDocBuffer#recycle().mjava","sourceNew":null,"sourceOld":"    /**\n     * Recycle the bytes used.\n     */\n    synchronized void recycle() {\n      if (buffers.size() > 0) {\n        setLength(0);\n        \n        // Recycle the blocks\n        perDocAllocator.recycleByteBlocks(buffers);\n        buffers.clear();\n        sizeInBytes = 0;\n        \n        assert numBuffers() == 0;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3e06be49006ecac364d39d12b9c9f74882f9b9f","date":1304289513,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter.PerDocBuffer#recycle().mjava","sourceNew":null,"sourceOld":"    /**\n     * Recycle the bytes used.\n     */\n    synchronized void recycle() {\n      if (buffers.size() > 0) {\n        setLength(0);\n        \n        // Recycle the blocks\n        perDocAllocator.recycleByteBlocks(buffers);\n        buffers.clear();\n        sizeInBytes = 0;\n        \n        assert numBuffers() == 0;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter.PerDocBuffer#recycle().mjava","sourceNew":null,"sourceOld":"    /**\n     * Recycle the bytes used.\n     */\n    synchronized void recycle() {\n      if (buffers.size() > 0) {\n        setLength(0);\n        \n        // Recycle the blocks\n        perDocAllocator.recycleByteBlocks(buffers);\n        buffers.clear();\n        sizeInBytes = 0;\n        \n        assert numBuffers() == 0;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter.PerDocBuffer#recycle().mjava","sourceNew":null,"sourceOld":"    /**\n     * Recycle the bytes used.\n     */\n    synchronized void recycle() {\n      if (buffers.size() > 0) {\n        setLength(0);\n        \n        // Recycle the blocks\n        perDocAllocator.recycleByteBlocks(buffers);\n        buffers.clear();\n        sizeInBytes = 0;\n        \n        assert numBuffers() == 0;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f58dd714e47e4b20e7ddf69802a24d8278a50d3d":["e2847e2f63e34db01787751b145ed6cdf40697f9"],"a3776dccca01c11e7046323cfad46a3b4a471233":["334c1175813aea771a71728cd2c4ee4754fd0603","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["334c1175813aea771a71728cd2c4ee4754fd0603","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"8fe956d65251358d755c56f14fe8380644790e47":["f58dd714e47e4b20e7ddf69802a24d8278a50d3d"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["334c1175813aea771a71728cd2c4ee4754fd0603","8fe956d65251358d755c56f14fe8380644790e47"],"334c1175813aea771a71728cd2c4ee4754fd0603":["9b832cbed6eb3d54a8bb9339296bdda8eeb53014"],"e2847e2f63e34db01787751b145ed6cdf40697f9":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9b832cbed6eb3d54a8bb9339296bdda8eeb53014":["f58dd714e47e4b20e7ddf69802a24d8278a50d3d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"f58dd714e47e4b20e7ddf69802a24d8278a50d3d":["8fe956d65251358d755c56f14fe8380644790e47","9b832cbed6eb3d54a8bb9339296bdda8eeb53014"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"8fe956d65251358d755c56f14fe8380644790e47":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e2847e2f63e34db01787751b145ed6cdf40697f9":["f58dd714e47e4b20e7ddf69802a24d8278a50d3d"],"334c1175813aea771a71728cd2c4ee4754fd0603":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"9b832cbed6eb3d54a8bb9339296bdda8eeb53014":["334c1175813aea771a71728cd2c4ee4754fd0603"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["e2847e2f63e34db01787751b145ed6cdf40697f9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}