{"path":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianStemmer#findAndRemoveEnding(StringBuffer,char[][],char[][]).mjava","commits":[{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianStemmer#findAndRemoveEnding(StringBuffer,char[][],char[][]).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/ru/RussianStemmer#findAndRemoveEnding(StringBuffer,char[][],char[][]).mjava","sourceNew":"    /**\n     * Finds the ending among the given class of endings, then checks if this ending was\n     * preceded by any of given predessors, and if so, removes it from stemming zone.\n     * Creation date: (17/03/2002 8:18:34 PM)\n     */\n    private boolean findAndRemoveEnding(StringBuffer stemmingZone,\n        char[][] theEndingClass, char[][] thePredessors)\n    {\n        int endingLength = findEnding(stemmingZone, theEndingClass);\n        if (endingLength == 0)\n            // not found\n            return false;\n        else\n        {\n            int predessorLength =\n                findEnding(stemmingZone,\n                    stemmingZone.length() - endingLength - 1,\n                    thePredessors);\n            if (predessorLength == 0)\n                return false;\n            else {\n                stemmingZone.setLength(stemmingZone.length() - endingLength);\n                // cut the ending found\n                return true;\n            }\n        }\n\n    }\n\n","sourceOld":"    /**\n     * Finds the ending among the given class of endings, then checks if this ending was\n     * preceded by any of given predessors, and if so, removes it from stemming zone.\n     * Creation date: (17/03/2002 8:18:34 PM)\n     */\n    private boolean findAndRemoveEnding(StringBuffer stemmingZone,\n        char[][] theEndingClass, char[][] thePredessors)\n    {\n        int endingLength = findEnding(stemmingZone, theEndingClass);\n        if (endingLength == 0)\n            // not found\n            return false;\n        else\n        {\n            int predessorLength =\n                findEnding(stemmingZone,\n                    stemmingZone.length() - endingLength - 1,\n                    thePredessors);\n            if (predessorLength == 0)\n                return false;\n            else {\n                stemmingZone.setLength(stemmingZone.length() - endingLength);\n                // cut the ending found\n                return true;\n            }\n        }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"add7d922e63099fbce8f0a1b31216df7ef5067f1","date":1252002701,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianStemmer#findAndRemoveEnding(StringBuffer,char[][],char[][]).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianStemmer#findAndRemoveEnding(StringBuffer,char[][],char[][]).mjava","sourceNew":"    /**\n     * Finds the ending among the given class of endings, then checks if this ending was\n     * preceded by any of given predecessors, and if so, removes it from stemming zone.\n     * Creation date: (17/03/2002 8:18:34 PM)\n     */\n    private boolean findAndRemoveEnding(StringBuffer stemmingZone,\n        char[][] theEndingClass, char[][] thePredessors)\n    {\n        int endingLength = findEnding(stemmingZone, theEndingClass);\n        if (endingLength == 0)\n            // not found\n            return false;\n        else\n        {\n            int predessorLength =\n                findEnding(stemmingZone,\n                    stemmingZone.length() - endingLength - 1,\n                    thePredessors);\n            if (predessorLength == 0)\n                return false;\n            else {\n                stemmingZone.setLength(stemmingZone.length() - endingLength);\n                // cut the ending found\n                return true;\n            }\n        }\n\n    }\n\n","sourceOld":"    /**\n     * Finds the ending among the given class of endings, then checks if this ending was\n     * preceded by any of given predessors, and if so, removes it from stemming zone.\n     * Creation date: (17/03/2002 8:18:34 PM)\n     */\n    private boolean findAndRemoveEnding(StringBuffer stemmingZone,\n        char[][] theEndingClass, char[][] thePredessors)\n    {\n        int endingLength = findEnding(stemmingZone, theEndingClass);\n        if (endingLength == 0)\n            // not found\n            return false;\n        else\n        {\n            int predessorLength =\n                findEnding(stemmingZone,\n                    stemmingZone.length() - endingLength - 1,\n                    thePredessors);\n            if (predessorLength == 0)\n                return false;\n            else {\n                stemmingZone.setLength(stemmingZone.length() - endingLength);\n                // cut the ending found\n                return true;\n            }\n        }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c","date":1254521470,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianStemmer#findAndRemoveEnding(StringBuilder,char[][],char[][]).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianStemmer#findAndRemoveEnding(StringBuffer,char[][],char[][]).mjava","sourceNew":"    /**\n     * Finds the ending among the given class of endings, then checks if this ending was\n     * preceded by any of given predecessors, and if so, removes it from stemming zone.\n     * Creation date: (17/03/2002 8:18:34 PM)\n     */\n    private boolean findAndRemoveEnding(StringBuilder stemmingZone,\n        char[][] theEndingClass, char[][] thePredessors)\n    {\n        int endingLength = findEnding(stemmingZone, theEndingClass);\n        if (endingLength == 0)\n            // not found\n            return false;\n        else\n        {\n            int predessorLength =\n                findEnding(stemmingZone,\n                    stemmingZone.length() - endingLength - 1,\n                    thePredessors);\n            if (predessorLength == 0)\n                return false;\n            else {\n                stemmingZone.setLength(stemmingZone.length() - endingLength);\n                // cut the ending found\n                return true;\n            }\n        }\n\n    }\n\n","sourceOld":"    /**\n     * Finds the ending among the given class of endings, then checks if this ending was\n     * preceded by any of given predecessors, and if so, removes it from stemming zone.\n     * Creation date: (17/03/2002 8:18:34 PM)\n     */\n    private boolean findAndRemoveEnding(StringBuffer stemmingZone,\n        char[][] theEndingClass, char[][] thePredessors)\n    {\n        int endingLength = findEnding(stemmingZone, theEndingClass);\n        if (endingLength == 0)\n            // not found\n            return false;\n        else\n        {\n            int predessorLength =\n                findEnding(stemmingZone,\n                    stemmingZone.length() - endingLength - 1,\n                    thePredessors);\n            if (predessorLength == 0)\n                return false;\n            else {\n                stemmingZone.setLength(stemmingZone.length() - endingLength);\n                // cut the ending found\n                return true;\n            }\n        }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"add7d922e63099fbce8f0a1b31216df7ef5067f1":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c":["add7d922e63099fbce8f0a1b31216df7ef5067f1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4625cb7ffd7c9caaf2d62b206ba9a382d68da82c"]},"commit2Childs":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["add7d922e63099fbce8f0a1b31216df7ef5067f1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"add7d922e63099fbce8f0a1b31216df7ef5067f1":["4625cb7ffd7c9caaf2d62b206ba9a382d68da82c"],"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}