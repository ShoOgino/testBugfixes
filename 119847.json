{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/DatePartEvaluatorTest#testFunctionsOnInstant().mjava","commits":[{"id":"40b789607c421011dabf36a935528a74fb8b2032","date":1492023606,"type":0,"author":"Gethin James","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/DatePartEvaluatorTest#testFunctionsOnInstant().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testFunctionsOnInstant() throws Exception {\n    Calendar calendar = new GregorianCalendar(2017,12,5, 23, 59);\n    calendar.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    Date aDate = calendar.getTime();\n    Instant instant = aDate.toInstant();\n    testFunction(\"year(a)\", instant, calendar.get(Calendar.YEAR));\n    testFunction(\"month(a)\", instant, calendar.get(Calendar.MONTH)+1);\n    testFunction(\"day(a)\", instant, calendar.get(Calendar.DAY_OF_MONTH));\n    testFunction(\"hour(a)\", instant, calendar.get(Calendar.HOUR_OF_DAY));\n    testFunction(\"minute(a)\", instant, calendar.get(Calendar.MINUTE));\n    testFunction(\"epoch(a)\", instant, aDate.getTime());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64ff6b743fd4051da7ebb3d397d1ef80833a741a","date":1492023891,"type":5,"author":"Gethin James","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/TemporalEvaluatorsTest#testFunctionsOnInstant().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/DatePartEvaluatorTest#testFunctionsOnInstant().mjava","sourceNew":"  @Test\n  public void testFunctionsOnInstant() throws Exception {\n    Calendar calendar = new GregorianCalendar(2017,12,5, 23, 59);\n    calendar.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    Date aDate = calendar.getTime();\n    Instant instant = aDate.toInstant();\n    testFunction(\"year(a)\", instant, calendar.get(Calendar.YEAR));\n    testFunction(\"month(a)\", instant, calendar.get(Calendar.MONTH)+1);\n    testFunction(\"day(a)\", instant, calendar.get(Calendar.DAY_OF_MONTH));\n    testFunction(\"hour(a)\", instant, calendar.get(Calendar.HOUR_OF_DAY));\n    testFunction(\"minute(a)\", instant, calendar.get(Calendar.MINUTE));\n    testFunction(\"epoch(a)\", instant, aDate.getTime());\n  }\n\n","sourceOld":"  @Test\n  public void testFunctionsOnInstant() throws Exception {\n    Calendar calendar = new GregorianCalendar(2017,12,5, 23, 59);\n    calendar.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    Date aDate = calendar.getTime();\n    Instant instant = aDate.toInstant();\n    testFunction(\"year(a)\", instant, calendar.get(Calendar.YEAR));\n    testFunction(\"month(a)\", instant, calendar.get(Calendar.MONTH)+1);\n    testFunction(\"day(a)\", instant, calendar.get(Calendar.DAY_OF_MONTH));\n    testFunction(\"hour(a)\", instant, calendar.get(Calendar.HOUR_OF_DAY));\n    testFunction(\"minute(a)\", instant, calendar.get(Calendar.MINUTE));\n    testFunction(\"epoch(a)\", instant, aDate.getTime());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"64ff6b743fd4051da7ebb3d397d1ef80833a741a":["40b789607c421011dabf36a935528a74fb8b2032"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"40b789607c421011dabf36a935528a74fb8b2032":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["64ff6b743fd4051da7ebb3d397d1ef80833a741a"]},"commit2Childs":{"64ff6b743fd4051da7ebb3d397d1ef80833a741a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["40b789607c421011dabf36a935528a74fb8b2032"],"40b789607c421011dabf36a935528a74fb8b2032":["64ff6b743fd4051da7ebb3d397d1ef80833a741a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}