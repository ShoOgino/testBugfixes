{"path":"lucene/core/src/test/org/apache/lucene/store/TestNRTCachingDirectory#testLargeCFS().mjava","commits":[{"id":"a3491d1030513020096bfb21ebca26fd57070ff8","date":1401733016,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestNRTCachingDirectory#testLargeCFS().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-5724\n  public void testLargeCFS() throws IOException {\n    Directory dir = new NRTCachingDirectory(newFSDirectory(createTempDir()), 2.0, 25.0);\n    IOContext context = new IOContext(new FlushInfo(0, 512*1024*1024));\n    IndexOutput out = dir.createOutput(\"big.bin\", context);\n    byte[] bytes = new byte[512];\n    for(int i=0;i<1024*1024;i++) {\n      out.writeBytes(bytes, 0, bytes.length);\n    }\n    out.close();\n\n    Directory cfsDir = new CompoundFileDirectory(dir, \"big.cfs\", context, true);\n    dir.copy(cfsDir, \"big.bin\", \"big.bin\", context);\n    cfsDir.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f382b2e9f4ca7dbe98e2f15da70983ecfc02b171","date":1412231650,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestNRTCachingDirectory#testLargeCFS().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestNRTCachingDirectory#testLargeCFS().mjava","sourceNew":"  // LUCENE-5724\n  public void testLargeCFS() throws IOException {\n    Directory dir = new NRTCachingDirectory(newFSDirectory(createTempDir()), 2.0, 25.0);\n    IOContext context = new IOContext(new FlushInfo(0, 512*1024*1024));\n    IndexOutput out = dir.createOutput(\"big.bin\", context);\n    byte[] bytes = new byte[512];\n    for(int i=0;i<1024*1024;i++) {\n      out.writeBytes(bytes, 0, bytes.length);\n    }\n    out.close();\n\n    Directory cfsDir = new CompoundFileDirectory(StringHelper.randomId(), dir, \"big.cfs\", context, true);\n    dir.copy(cfsDir, \"big.bin\", \"big.bin\", context);\n    cfsDir.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5724\n  public void testLargeCFS() throws IOException {\n    Directory dir = new NRTCachingDirectory(newFSDirectory(createTempDir()), 2.0, 25.0);\n    IOContext context = new IOContext(new FlushInfo(0, 512*1024*1024));\n    IndexOutput out = dir.createOutput(\"big.bin\", context);\n    byte[] bytes = new byte[512];\n    for(int i=0;i<1024*1024;i++) {\n      out.writeBytes(bytes, 0, bytes.length);\n    }\n    out.close();\n\n    Directory cfsDir = new CompoundFileDirectory(dir, \"big.cfs\", context, true);\n    dir.copy(cfsDir, \"big.bin\", \"big.bin\", context);\n    cfsDir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"989d940c4bf402188f4f0ae13736836885227383","date":1412263633,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestNRTCachingDirectory#testLargeCFS().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestNRTCachingDirectory#testLargeCFS().mjava","sourceNew":"  // LUCENE-5724\n  public void testLargeCFS() throws IOException {\n    // nocommit: make a fake .si etc\n    /*\n    Directory dir = new NRTCachingDirectory(newFSDirectory(createTempDir()), 2.0, 25.0);\n    IOContext context = new IOContext(new FlushInfo(0, 512*1024*1024));\n    IndexOutput out = dir.createOutput(\"big.bin\", context);\n    byte[] bytes = new byte[512];\n    for(int i=0;i<1024*1024;i++) {\n      out.writeBytes(bytes, 0, bytes.length);\n    }\n    out.close();\n\n    Directory cfsDir = new CompoundFileDirectory(StringHelper.randomId(), dir, \"big.cfs\", context, true);\n    dir.copy(cfsDir, \"big.bin\", \"big.bin\", context);\n    cfsDir.close();\n    dir.close();\n    */\n  }\n\n","sourceOld":"  // LUCENE-5724\n  public void testLargeCFS() throws IOException {\n    Directory dir = new NRTCachingDirectory(newFSDirectory(createTempDir()), 2.0, 25.0);\n    IOContext context = new IOContext(new FlushInfo(0, 512*1024*1024));\n    IndexOutput out = dir.createOutput(\"big.bin\", context);\n    byte[] bytes = new byte[512];\n    for(int i=0;i<1024*1024;i++) {\n      out.writeBytes(bytes, 0, bytes.length);\n    }\n    out.close();\n\n    Directory cfsDir = new CompoundFileDirectory(StringHelper.randomId(), dir, \"big.cfs\", context, true);\n    dir.copy(cfsDir, \"big.bin\", \"big.bin\", context);\n    cfsDir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04aeacf8a807c3559b1089fdbe6c2c16ac9a07e3","date":1412358952,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testLargeCFS().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestNRTCachingDirectory#testLargeCFS().mjava","sourceNew":"  // LUCENE-5724: actually test we play nice with NRTCachingDir and massive file\n  public void testLargeCFS() throws IOException {   \n    final String testfile = \"_123.test\";\n    IOContext context = new IOContext(new FlushInfo(0, 512*1024*1024));\n\n    Directory dir = new NRTCachingDirectory(newFSDirectory(createTempDir()), 2.0, 25.0);\n\n    IndexOutput out = dir.createOutput(testfile, context);\n    byte[] bytes = new byte[512];\n    for(int i=0;i<1024*1024;i++) {\n      out.writeBytes(bytes, 0, bytes.length);\n    }\n    out.close();\n    \n    final SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.getCodec().compoundFormat().write(dir, si, Collections.singleton(testfile), MergeState.CheckAbort.NONE, context);\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5724\n  public void testLargeCFS() throws IOException {\n    // nocommit: make a fake .si etc\n    /*\n    Directory dir = new NRTCachingDirectory(newFSDirectory(createTempDir()), 2.0, 25.0);\n    IOContext context = new IOContext(new FlushInfo(0, 512*1024*1024));\n    IndexOutput out = dir.createOutput(\"big.bin\", context);\n    byte[] bytes = new byte[512];\n    for(int i=0;i<1024*1024;i++) {\n      out.writeBytes(bytes, 0, bytes.length);\n    }\n    out.close();\n\n    Directory cfsDir = new CompoundFileDirectory(StringHelper.randomId(), dir, \"big.cfs\", context, true);\n    dir.copy(cfsDir, \"big.bin\", \"big.bin\", context);\n    cfsDir.close();\n    dir.close();\n    */\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testLargeCFS().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestNRTCachingDirectory#testLargeCFS().mjava","sourceNew":"  // LUCENE-5724: actually test we play nice with NRTCachingDir and massive file\n  public void testLargeCFS() throws IOException {   \n    final String testfile = \"_123.test\";\n    IOContext context = new IOContext(new FlushInfo(0, 512*1024*1024));\n\n    Directory dir = new NRTCachingDirectory(newFSDirectory(createTempDir()), 2.0, 25.0);\n\n    IndexOutput out = dir.createOutput(testfile, context);\n    byte[] bytes = new byte[512];\n    for(int i=0;i<1024*1024;i++) {\n      out.writeBytes(bytes, 0, bytes.length);\n    }\n    out.close();\n    \n    SegmentInfo si = newSegmentInfo(dir, \"_123\");\n    si.getCodec().compoundFormat().write(dir, si, Collections.singleton(testfile), MergeState.CheckAbort.NONE, context);\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5724\n  public void testLargeCFS() throws IOException {\n    Directory dir = new NRTCachingDirectory(newFSDirectory(createTempDir()), 2.0, 25.0);\n    IOContext context = new IOContext(new FlushInfo(0, 512*1024*1024));\n    IndexOutput out = dir.createOutput(\"big.bin\", context);\n    byte[] bytes = new byte[512];\n    for(int i=0;i<1024*1024;i++) {\n      out.writeBytes(bytes, 0, bytes.length);\n    }\n    out.close();\n\n    Directory cfsDir = new CompoundFileDirectory(dir, \"big.cfs\", context, true);\n    dir.copy(cfsDir, \"big.bin\", \"big.bin\", context);\n    cfsDir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"989d940c4bf402188f4f0ae13736836885227383":["f382b2e9f4ca7dbe98e2f15da70983ecfc02b171"],"f382b2e9f4ca7dbe98e2f15da70983ecfc02b171":["a3491d1030513020096bfb21ebca26fd57070ff8"],"04aeacf8a807c3559b1089fdbe6c2c16ac9a07e3":["989d940c4bf402188f4f0ae13736836885227383"],"9bb9a29a5e71a90295f175df8919802993142c9a":["a3491d1030513020096bfb21ebca26fd57070ff8","04aeacf8a807c3559b1089fdbe6c2c16ac9a07e3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3491d1030513020096bfb21ebca26fd57070ff8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9bb9a29a5e71a90295f175df8919802993142c9a"]},"commit2Childs":{"989d940c4bf402188f4f0ae13736836885227383":["04aeacf8a807c3559b1089fdbe6c2c16ac9a07e3"],"f382b2e9f4ca7dbe98e2f15da70983ecfc02b171":["989d940c4bf402188f4f0ae13736836885227383"],"04aeacf8a807c3559b1089fdbe6c2c16ac9a07e3":["9bb9a29a5e71a90295f175df8919802993142c9a"],"9bb9a29a5e71a90295f175df8919802993142c9a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a3491d1030513020096bfb21ebca26fd57070ff8"],"a3491d1030513020096bfb21ebca26fd57070ff8":["f382b2e9f4ca7dbe98e2f15da70983ecfc02b171","9bb9a29a5e71a90295f175df8919802993142c9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}