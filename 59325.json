{"path":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cn/ChineseTokenizer#flush().mjava","commits":[{"id":"9b5756469957918cac40a831acec9cf01c8c2bb3","date":1249167152,"type":1,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cn/ChineseTokenizer#flush().mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cn/ChineseTokenizer#flush(Token).mjava","sourceNew":"    private final boolean flush() {\n\n        if (length>0) {\n            //System.out.println(new String(buffer, 0,\n            //length));\n          termAtt.setTermBuffer(buffer, 0, length);\n          offsetAtt.setOffset(input.correctOffset(start), input.correctOffset(start+length));\n          return true;\n        }\n        else\n            return false;\n    }\n\n","sourceOld":"    private final Token flush(final Token token) {\n\n        if (length>0) {\n            //System.out.println(new String(buffer, 0,\n            //length));\n          return token.reinit(buffer, 0, length, input.correctOffset(start), input.correctOffset(start+length));\n        }\n        else\n            return null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a82fda1447250ff156ff3b862d94a99bf0a3c23c","date":1252649533,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cn/ChineseTokenizer#flush().mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cn/ChineseTokenizer#flush().mjava","sourceNew":"    private final boolean flush() {\n\n        if (length>0) {\n            //System.out.println(new String(buffer, 0,\n            //length));\n          termAtt.setTermBuffer(buffer, 0, length);\n          offsetAtt.setOffset(correctOffset(start), correctOffset(start+length));\n          return true;\n        }\n        else\n            return false;\n    }\n\n","sourceOld":"    private final boolean flush() {\n\n        if (length>0) {\n            //System.out.println(new String(buffer, 0,\n            //length));\n          termAtt.setTermBuffer(buffer, 0, length);\n          offsetAtt.setOffset(input.correctOffset(start), input.correctOffset(start+length));\n          return true;\n        }\n        else\n            return false;\n    }\n\n","bugFix":["9b5756469957918cac40a831acec9cf01c8c2bb3"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/cn/ChineseTokenizer#flush().mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cn/ChineseTokenizer#flush().mjava","sourceNew":"    private final boolean flush() {\n\n        if (length>0) {\n            //System.out.println(new String(buffer, 0,\n            //length));\n          termAtt.setTermBuffer(buffer, 0, length);\n          offsetAtt.setOffset(correctOffset(start), correctOffset(start+length));\n          return true;\n        }\n        else\n            return false;\n    }\n\n","sourceOld":"    private final boolean flush() {\n\n        if (length>0) {\n            //System.out.println(new String(buffer, 0,\n            //length));\n          termAtt.setTermBuffer(buffer, 0, length);\n          offsetAtt.setOffset(correctOffset(start), correctOffset(start+length));\n          return true;\n        }\n        else\n            return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a82fda1447250ff156ff3b862d94a99bf0a3c23c":["9b5756469957918cac40a831acec9cf01c8c2bb3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9b5756469957918cac40a831acec9cf01c8c2bb3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a82fda1447250ff156ff3b862d94a99bf0a3c23c"]},"commit2Childs":{"a82fda1447250ff156ff3b862d94a99bf0a3c23c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9b5756469957918cac40a831acec9cf01c8c2bb3"],"9b5756469957918cac40a831acec9cf01c8c2bb3":["a82fda1447250ff156ff3b862d94a99bf0a3c23c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}