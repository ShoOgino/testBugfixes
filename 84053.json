{"path":"lucene/core/src/java/org/apache/lucene/search/DisjunctionScorer#iterator().mjava","commits":[{"id":"7dd748bb245633a8195281556bb0e68a6ea97d18","date":1449755030,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DisjunctionScorer#iterator().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocIdSetIterator iterator() {\n    return new DocIdSetIterator() {\n\n      @Override\n      public int docID() {\n        return subScorers.top().doc;\n      }\n\n      @Override\n      public final int nextDoc() throws IOException {\n        topScorers = null;\n        DisiWrapper top = subScorers.top();\n        final int doc = top.doc;\n        do {\n          top.doc = top.iterator.nextDoc();\n          top = subScorers.updateTop();\n        } while (top.doc == doc);\n\n        return top.doc;\n      }\n\n      @Override\n      public final int advance(int target) throws IOException {\n        topScorers = null;\n        DisiWrapper top = subScorers.top();\n        do {\n          top.doc = top.iterator.advance(target);\n          top = subScorers.updateTop();\n        } while (top.doc < target);\n\n        return top.doc;\n      }\n\n      @Override\n      public final long cost() {\n        return cost;\n      }\n\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac8ce4febd838561b4317a75f81313066e6d91c3","date":1449851410,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DisjunctionScorer#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/DisjunctionScorer#iterator().mjava","sourceNew":"  @Override\n  public DocIdSetIterator iterator() {\n    if (twoPhase != null) {\n      return TwoPhaseIterator.asDocIdSetIterator(twoPhase);\n    } else {\n      return approximation;\n    }\n  }\n\n","sourceOld":"  @Override\n  public DocIdSetIterator iterator() {\n    return new DocIdSetIterator() {\n\n      @Override\n      public int docID() {\n        return subScorers.top().doc;\n      }\n\n      @Override\n      public final int nextDoc() throws IOException {\n        topScorers = null;\n        DisiWrapper top = subScorers.top();\n        final int doc = top.doc;\n        do {\n          top.doc = top.iterator.nextDoc();\n          top = subScorers.updateTop();\n        } while (top.doc == doc);\n\n        return top.doc;\n      }\n\n      @Override\n      public final int advance(int target) throws IOException {\n        topScorers = null;\n        DisiWrapper top = subScorers.top();\n        do {\n          top.doc = top.iterator.advance(target);\n          top = subScorers.updateTop();\n        } while (top.doc < target);\n\n        return top.doc;\n      }\n\n      @Override\n      public final long cost() {\n        return cost;\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ac8ce4febd838561b4317a75f81313066e6d91c3":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ac8ce4febd838561b4317a75f81313066e6d91c3"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"ac8ce4febd838561b4317a75f81313066e6d91c3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["ac8ce4febd838561b4317a75f81313066e6d91c3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}