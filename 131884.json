{"path":"lucene/facet/src/java/org/apache/lucene/facet/search/PayloadIterator#init().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/PayloadIterator#init().mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/search/PayloadIterator#init().mjava","sourceNew":"  /**\n   * (re)initialize the iterator. Should be done before the first call to\n   * {@link #setdoc(int)}. Returns false if there is no category list found\n   * (no setdoc() will never return true).\n   */\n  public boolean init() throws IOException {\n    hasMore = tp != null && tp.nextDoc() != DocIdSetIterator.NO_MORE_DOCS;\n    return hasMore;\n  }\n\n","sourceOld":"  /**\n   * (re)initialize the iterator. Should be done before the first call to\n   * {@link #setdoc(int)}. Returns false if there is no category list found\n   * (no setdoc() will never return true).\n   */\n  public boolean init() throws IOException {\n    hasMore = tp != null && tp.nextDoc() != DocIdSetIterator.NO_MORE_DOCS;\n    return hasMore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b65d3e2c837614823b0652e54f44ff76463de22","date":1355144308,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/PayloadIterator#init().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/PayloadIterator#init().mjava","sourceNew":"  /**\n   * Initialize the iterator. Should be done before the first call to\n   * {@link #setdoc(int)}. Returns {@code false} if no category list is found,\n   * or the category list has no documents.\n   */\n  public boolean init() throws IOException {\n    nextSegment();\n    return hasMore;\n  }\n\n","sourceOld":"  /**\n   * (re)initialize the iterator. Should be done before the first call to\n   * {@link #setdoc(int)}. Returns false if there is no category list found\n   * (no setdoc() will never return true).\n   */\n  public boolean init() throws IOException {\n    hasMore = tp != null && tp.nextDoc() != DocIdSetIterator.NO_MORE_DOCS;\n    return hasMore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/PayloadIterator#init().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/PayloadIterator#init().mjava","sourceNew":"  /**\n   * Initialize the iterator. Should be done before the first call to\n   * {@link #setdoc(int)}. Returns {@code false} if no category list is found,\n   * or the category list has no documents.\n   */\n  public boolean init() throws IOException {\n    nextSegment();\n    return hasMore;\n  }\n\n","sourceOld":"  /**\n   * (re)initialize the iterator. Should be done before the first call to\n   * {@link #setdoc(int)}. Returns false if there is no category list found\n   * (no setdoc() will never return true).\n   */\n  public boolean init() throws IOException {\n    hasMore = tp != null && tp.nextDoc() != DocIdSetIterator.NO_MORE_DOCS;\n    return hasMore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bceb02c33032dd9bbf107cd06d0b74e5db4f110a","date":1357909746,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/PayloadIterator#init().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/PayloadIterator#init().mjava","sourceNew":"  /**\n   * Initialize the iterator. Should be done before the first call to\n   * {@link #getPayload(int)}. Returns {@code false} if no category list is\n   * found, or the category list has no documents.\n   */\n  public boolean init() throws IOException {\n    nextSegment();\n    return hasMore;\n  }\n\n","sourceOld":"  /**\n   * Initialize the iterator. Should be done before the first call to\n   * {@link #setdoc(int)}. Returns {@code false} if no category list is found,\n   * or the category list has no documents.\n   */\n  public boolean init() throws IOException {\n    nextSegment();\n    return hasMore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e6354dd7c71fe122926fc53d7d29f715b1283db","date":1357915185,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/PayloadIterator#init().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/PayloadIterator#init().mjava","sourceNew":"  /**\n   * Initialize the iterator. Should be done before the first call to\n   * {@link #getPayload(int)}. Returns {@code false} if no category list is\n   * found, or the category list has no documents.\n   */\n  public boolean init() throws IOException {\n    nextSegment();\n    return hasMore;\n  }\n\n","sourceOld":"  /**\n   * Initialize the iterator. Should be done before the first call to\n   * {@link #setdoc(int)}. Returns {@code false} if no category list is found,\n   * or the category list has no documents.\n   */\n  public boolean init() throws IOException {\n    nextSegment();\n    return hasMore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42f51b3ab4258ff4623227b0db011b8bb83db5c7","date":1358164991,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/PayloadIterator#init().mjava","sourceNew":null,"sourceOld":"  /**\n   * Initialize the iterator. Should be done before the first call to\n   * {@link #getPayload(int)}. Returns {@code false} if no category list is\n   * found, or the category list has no documents.\n   */\n  public boolean init() throws IOException {\n    nextSegment();\n    return hasMore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8917bfede3b4ca30f4305c1e391e9218959cd723","date":1358189662,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/PayloadIterator#init().mjava","sourceNew":null,"sourceOld":"  /**\n   * Initialize the iterator. Should be done before the first call to\n   * {@link #getPayload(int)}. Returns {@code false} if no category list is\n   * found, or the category list has no documents.\n   */\n  public boolean init() throws IOException {\n    nextSegment();\n    return hasMore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"42f51b3ab4258ff4623227b0db011b8bb83db5c7":["bceb02c33032dd9bbf107cd06d0b74e5db4f110a"],"bceb02c33032dd9bbf107cd06d0b74e5db4f110a":["3b65d3e2c837614823b0652e54f44ff76463de22"],"8917bfede3b4ca30f4305c1e391e9218959cd723":["4e6354dd7c71fe122926fc53d7d29f715b1283db","42f51b3ab4258ff4623227b0db011b8bb83db5c7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["b89678825b68eccaf09e6ab71675fc0b0af1e099","3b65d3e2c837614823b0652e54f44ff76463de22"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["407687e67faf6e1f02a211ca078d8e3eed631027","bceb02c33032dd9bbf107cd06d0b74e5db4f110a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["42f51b3ab4258ff4623227b0db011b8bb83db5c7"],"3b65d3e2c837614823b0652e54f44ff76463de22":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["407687e67faf6e1f02a211ca078d8e3eed631027","3b65d3e2c837614823b0652e54f44ff76463de22"],"42f51b3ab4258ff4623227b0db011b8bb83db5c7":["8917bfede3b4ca30f4305c1e391e9218959cd723","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bceb02c33032dd9bbf107cd06d0b74e5db4f110a":["42f51b3ab4258ff4623227b0db011b8bb83db5c7","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"8917bfede3b4ca30f4305c1e391e9218959cd723":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"407687e67faf6e1f02a211ca078d8e3eed631027":["4e6354dd7c71fe122926fc53d7d29f715b1283db"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["8917bfede3b4ca30f4305c1e391e9218959cd723"],"3b65d3e2c837614823b0652e54f44ff76463de22":["bceb02c33032dd9bbf107cd06d0b74e5db4f110a","407687e67faf6e1f02a211ca078d8e3eed631027"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8917bfede3b4ca30f4305c1e391e9218959cd723","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}