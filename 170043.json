{"path":"lucene/core/src/java/org/apache/lucene/util/RamUsageEstimator.IdentityHashSet#iterator().mjava","commits":[{"id":"10cd47aac3c4e8c583740a750335f8aab14555b3","date":1332522358,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/RamUsageEstimator.IdentityHashSet#iterator().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Iterator<KType> iterator() {\n      return new Iterator<KType>() {\n        int pos = -1;\n        Object nextElement = fetchNext();\n\n        @Override\n        public boolean hasNext() {\n          return nextElement != null;\n        }\n\n        @SuppressWarnings(\"unchecked\")\n        @Override\n        public KType next() {\n          Object r = this.nextElement;\n          if (r == null) {\n            throw new NoSuchElementException();\n          }\n          this.nextElement = fetchNext();\n          return (KType) r;\n        }\n\n        private Object fetchNext() {\n          pos++;\n          while (pos < keys.length && keys[pos] == null) {\n            pos++;\n          }\n\n          return (pos >= keys.length ? null : keys[pos]);\n        }\n\n        @Override\n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e1eb6b3ce884c0b9e064e112da158013ec33cd91","date":1402692077,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/RamUsageTester.IdentityHashSet#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/RamUsageEstimator.IdentityHashSet#iterator().mjava","sourceNew":"    @Override\n    public Iterator<KType> iterator() {\n      return new Iterator<KType>() {\n        int pos = -1;\n        Object nextElement = fetchNext();\n\n        @Override\n        public boolean hasNext() {\n          return nextElement != null;\n        }\n\n        @SuppressWarnings(\"unchecked\")\n        @Override\n        public KType next() {\n          Object r = this.nextElement;\n          if (r == null) {\n            throw new NoSuchElementException();\n          }\n          this.nextElement = fetchNext();\n          return (KType) r;\n        }\n\n        private Object fetchNext() {\n          pos++;\n          while (pos < keys.length && keys[pos] == null) {\n            pos++;\n          }\n\n          return (pos >= keys.length ? null : keys[pos]);\n        }\n\n        @Override\n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Iterator<KType> iterator() {\n      return new Iterator<KType>() {\n        int pos = -1;\n        Object nextElement = fetchNext();\n\n        @Override\n        public boolean hasNext() {\n          return nextElement != null;\n        }\n\n        @SuppressWarnings(\"unchecked\")\n        @Override\n        public KType next() {\n          Object r = this.nextElement;\n          if (r == null) {\n            throw new NoSuchElementException();\n          }\n          this.nextElement = fetchNext();\n          return (KType) r;\n        }\n\n        private Object fetchNext() {\n          pos++;\n          while (pos < keys.length && keys[pos] == null) {\n            pos++;\n          }\n\n          return (pos >= keys.length ? null : keys[pos]);\n        }\n\n        @Override\n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6f080a2ab37c464dd98db173f6cbf10dc74f211","date":1402946779,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/RamUsageTester.IdentityHashSet#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/RamUsageEstimator.IdentityHashSet#iterator().mjava","sourceNew":"    @Override\n    public Iterator<KType> iterator() {\n      return new Iterator<KType>() {\n        int pos = -1;\n        Object nextElement = fetchNext();\n\n        @Override\n        public boolean hasNext() {\n          return nextElement != null;\n        }\n\n        @SuppressWarnings(\"unchecked\")\n        @Override\n        public KType next() {\n          Object r = this.nextElement;\n          if (r == null) {\n            throw new NoSuchElementException();\n          }\n          this.nextElement = fetchNext();\n          return (KType) r;\n        }\n\n        private Object fetchNext() {\n          pos++;\n          while (pos < keys.length && keys[pos] == null) {\n            pos++;\n          }\n\n          return (pos >= keys.length ? null : keys[pos]);\n        }\n\n        @Override\n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Iterator<KType> iterator() {\n      return new Iterator<KType>() {\n        int pos = -1;\n        Object nextElement = fetchNext();\n\n        @Override\n        public boolean hasNext() {\n          return nextElement != null;\n        }\n\n        @SuppressWarnings(\"unchecked\")\n        @Override\n        public KType next() {\n          Object r = this.nextElement;\n          if (r == null) {\n            throw new NoSuchElementException();\n          }\n          this.nextElement = fetchNext();\n          return (KType) r;\n        }\n\n        private Object fetchNext() {\n          pos++;\n          while (pos < keys.length && keys[pos] == null) {\n            pos++;\n          }\n\n          return (pos >= keys.length ? null : keys[pos]);\n        }\n\n        @Override\n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":["10cd47aac3c4e8c583740a750335f8aab14555b3","e1eb6b3ce884c0b9e064e112da158013ec33cd91"],"e1eb6b3ce884c0b9e064e112da158013ec33cd91":["10cd47aac3c4e8c583740a750335f8aab14555b3"],"10cd47aac3c4e8c583740a750335f8aab14555b3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e1eb6b3ce884c0b9e064e112da158013ec33cd91"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["10cd47aac3c4e8c583740a750335f8aab14555b3"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":[],"e1eb6b3ce884c0b9e064e112da158013ec33cd91":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"10cd47aac3c4e8c583740a750335f8aab14555b3":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","e1eb6b3ce884c0b9e064e112da158013ec33cd91"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}