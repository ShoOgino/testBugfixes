{"path":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor#doRemoveRegex(SolrInputDocument,SolrInputField,Object).mjava","commits":[{"id":"92cd1849f2fc9035639005768ae063a253af7aae","date":1413758731,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor#doRemoveRegex(SolrInputDocument,SolrInputField,Object).mjava","pathOld":"/dev/null","sourceNew":"  private void doRemoveRegex(SolrInputDocument oldDoc, SolrInputField sif, Object valuePatterns) {\n    final String name = sif.getName();\n    final SolrInputField existingField = oldDoc.get(name);\n    if (existingField != null) {\n      final Collection<Object> valueToRemove = new HashSet<>();\n      final Collection<Object> original = existingField.getValues();\n      final Collection<Pattern> patterns = preparePatterns(valuePatterns);\n      for (Object value : original) {\n        for(Pattern pattern : patterns) {\n          final Matcher m = pattern.matcher(value.toString());\n          if (m.matches()) {\n            valueToRemove.add(value);\n          }\n        }\n      }\n      original.removeAll(valueToRemove);\n      oldDoc.setField(name, original);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a22eafe3f72a4c2945eaad9547e6c78816978f4","date":1413956657,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor#doRemoveRegex(SolrInputDocument,SolrInputField,Object).mjava","pathOld":"/dev/null","sourceNew":"  private void doRemoveRegex(SolrInputDocument oldDoc, SolrInputField sif, Object valuePatterns) {\n    final String name = sif.getName();\n    final SolrInputField existingField = oldDoc.get(name);\n    if (existingField != null) {\n      final Collection<Object> valueToRemove = new HashSet<>();\n      final Collection<Object> original = existingField.getValues();\n      final Collection<Pattern> patterns = preparePatterns(valuePatterns);\n      for (Object value : original) {\n        for(Pattern pattern : patterns) {\n          final Matcher m = pattern.matcher(value.toString());\n          if (m.matches()) {\n            valueToRemove.add(value);\n          }\n        }\n      }\n      original.removeAll(valueToRemove);\n      oldDoc.setField(name, original);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d3b450958a83a29a16e492fbff9d094a9a571b6","date":1421525067,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/AtomicUpdateDocumentMerger#doRemoveRegex(SolrInputDocument,SolrInputField,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor#doRemoveRegex(SolrInputDocument,SolrInputField,Object).mjava","sourceNew":"  protected void doRemoveRegex(SolrInputDocument toDoc, SolrInputField sif, Object valuePatterns) {\n    final String name = sif.getName();\n    final SolrInputField existingField = toDoc.get(name);\n    if (existingField != null) {\n      final Collection<Object> valueToRemove = new HashSet<>();\n      final Collection<Object> original = existingField.getValues();\n      final Collection<Pattern> patterns = preparePatterns(valuePatterns);\n      for (Object value : original) {\n        for(Pattern pattern : patterns) {\n          final Matcher m = pattern.matcher(value.toString());\n          if (m.matches()) {\n            valueToRemove.add(value);\n          }\n        }\n      }\n      original.removeAll(valueToRemove);\n      toDoc.setField(name, original);\n    }\n  }\n\n","sourceOld":"  private void doRemoveRegex(SolrInputDocument oldDoc, SolrInputField sif, Object valuePatterns) {\n    final String name = sif.getName();\n    final SolrInputField existingField = oldDoc.get(name);\n    if (existingField != null) {\n      final Collection<Object> valueToRemove = new HashSet<>();\n      final Collection<Object> original = existingField.getValues();\n      final Collection<Pattern> patterns = preparePatterns(valuePatterns);\n      for (Object value : original) {\n        for(Pattern pattern : patterns) {\n          final Matcher m = pattern.matcher(value.toString());\n          if (m.matches()) {\n            valueToRemove.add(value);\n          }\n        }\n      }\n      original.removeAll(valueToRemove);\n      oldDoc.setField(name, original);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a22eafe3f72a4c2945eaad9547e6c78816978f4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","92cd1849f2fc9035639005768ae063a253af7aae"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2d3b450958a83a29a16e492fbff9d094a9a571b6":["92cd1849f2fc9035639005768ae063a253af7aae"],"92cd1849f2fc9035639005768ae063a253af7aae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2d3b450958a83a29a16e492fbff9d094a9a571b6"]},"commit2Childs":{"0a22eafe3f72a4c2945eaad9547e6c78816978f4":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","92cd1849f2fc9035639005768ae063a253af7aae"],"2d3b450958a83a29a16e492fbff9d094a9a571b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"92cd1849f2fc9035639005768ae063a253af7aae":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","2d3b450958a83a29a16e492fbff9d094a9a571b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}