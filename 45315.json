{"path":"src/java/org/apache/lucene/util/RamUsageEstimator#RamUsageEstimator(MemoryModel,boolean).mjava","commits":[{"id":"e69f59b863731d864bf3047235e718f0f88f8841","date":1250105498,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/RamUsageEstimator#RamUsageEstimator(MemoryModel,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @param memoryModel MemoryModel to use for primitive object sizes.\n   * @param checkInterned check if Strings are interned and don't add to size\n   * if they are. Defaults to true but if you know the objects you are checking\n   * won't likely contain many interned Strings, it will be faster to turn off\n   * intern checking.\n   */\n  public RamUsageEstimator(MemoryModel memoryModel, boolean checkInterned) {\n    this.memoryModel = memoryModel;\n    this.checkInterned = checkInterned;\n    // Use Map rather than Set so that we can use an IdentityHashMap - not\n    // seeing an IdentityHashSet\n    seen = new IdentityHashMap(64);\n    this.refSize = memoryModel.getReferenceSize();\n    this.arraySize = memoryModel.getArraySize();\n    this.classSize = memoryModel.getClassSize();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef82ff03e4016c705811b2658e81471a645c0e49","date":1255900293,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/RamUsageEstimator#RamUsageEstimator(MemoryModel,boolean).mjava","pathOld":"src/java/org/apache/lucene/util/RamUsageEstimator#RamUsageEstimator(MemoryModel,boolean).mjava","sourceNew":"  /**\n   * @param memoryModel MemoryModel to use for primitive object sizes.\n   * @param checkInterned check if Strings are interned and don't add to size\n   * if they are. Defaults to true but if you know the objects you are checking\n   * won't likely contain many interned Strings, it will be faster to turn off\n   * intern checking.\n   */\n  public RamUsageEstimator(MemoryModel memoryModel, boolean checkInterned) {\n    this.memoryModel = memoryModel;\n    this.checkInterned = checkInterned;\n    // Use Map rather than Set so that we can use an IdentityHashMap - not\n    // seeing an IdentityHashSet\n    seen = new IdentityHashMap<Object,Object>(64);\n    this.refSize = memoryModel.getReferenceSize();\n    this.arraySize = memoryModel.getArraySize();\n    this.classSize = memoryModel.getClassSize();\n  }\n\n","sourceOld":"  /**\n   * @param memoryModel MemoryModel to use for primitive object sizes.\n   * @param checkInterned check if Strings are interned and don't add to size\n   * if they are. Defaults to true but if you know the objects you are checking\n   * won't likely contain many interned Strings, it will be faster to turn off\n   * intern checking.\n   */\n  public RamUsageEstimator(MemoryModel memoryModel, boolean checkInterned) {\n    this.memoryModel = memoryModel;\n    this.checkInterned = checkInterned;\n    // Use Map rather than Set so that we can use an IdentityHashMap - not\n    // seeing an IdentityHashSet\n    seen = new IdentityHashMap(64);\n    this.refSize = memoryModel.getReferenceSize();\n    this.arraySize = memoryModel.getArraySize();\n    this.classSize = memoryModel.getClassSize();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/RamUsageEstimator#RamUsageEstimator(MemoryModel,boolean).mjava","pathOld":"src/java/org/apache/lucene/util/RamUsageEstimator#RamUsageEstimator(MemoryModel,boolean).mjava","sourceNew":"  /**\n   * @param memoryModel MemoryModel to use for primitive object sizes.\n   * @param checkInterned check if Strings are interned and don't add to size\n   * if they are. Defaults to true but if you know the objects you are checking\n   * won't likely contain many interned Strings, it will be faster to turn off\n   * intern checking.\n   */\n  public RamUsageEstimator(MemoryModel memoryModel, boolean checkInterned) {\n    this.memoryModel = memoryModel;\n    this.checkInterned = checkInterned;\n    // Use Map rather than Set so that we can use an IdentityHashMap - not\n    // seeing an IdentityHashSet\n    seen = new IdentityHashMap<Object,Object>(64);\n    this.refSize = memoryModel.getReferenceSize();\n    this.arraySize = memoryModel.getArraySize();\n    this.classSize = memoryModel.getClassSize();\n  }\n\n","sourceOld":"  /**\n   * @param memoryModel MemoryModel to use for primitive object sizes.\n   * @param checkInterned check if Strings are interned and don't add to size\n   * if they are. Defaults to true but if you know the objects you are checking\n   * won't likely contain many interned Strings, it will be faster to turn off\n   * intern checking.\n   */\n  public RamUsageEstimator(MemoryModel memoryModel, boolean checkInterned) {\n    this.memoryModel = memoryModel;\n    this.checkInterned = checkInterned;\n    // Use Map rather than Set so that we can use an IdentityHashMap - not\n    // seeing an IdentityHashSet\n    seen = new IdentityHashMap<Object,Object>(64);\n    this.refSize = memoryModel.getReferenceSize();\n    this.arraySize = memoryModel.getArraySize();\n    this.classSize = memoryModel.getClassSize();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ef82ff03e4016c705811b2658e81471a645c0e49":["e69f59b863731d864bf3047235e718f0f88f8841"],"e69f59b863731d864bf3047235e718f0f88f8841":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ef82ff03e4016c705811b2658e81471a645c0e49"]},"commit2Childs":{"ef82ff03e4016c705811b2658e81471a645c0e49":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e69f59b863731d864bf3047235e718f0f88f8841":["ef82ff03e4016c705811b2658e81471a645c0e49"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e69f59b863731d864bf3047235e718f0f88f8841"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}