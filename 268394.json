{"path":"solr/core/src/test/org/apache/solr/cloud/TestRebalanceLeaders#getZkData(CloudSolrServer,String).mjava","commits":[{"id":"4e6b620c271c84c0f14919eec7b90083b292ee51","date":1419461736,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRebalanceLeaders#getZkData(CloudSolrServer,String).mjava","pathOld":"/dev/null","sourceNew":"  byte[] getZkData(CloudSolrServer server, String path) {\n    org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n    long start = System.currentTimeMillis();\n    try {\n      byte[] data = server.getZkStateReader().getZkClient().getData(path, null, stat, true);\n      if (data != null) {\n        return data;\n      }\n    } catch (KeeperException.NoNodeException e) {\n      try {\n        Thread.sleep(1000);\n      } catch (InterruptedException e1) {\n        return null;\n      }\n    } catch (InterruptedException | KeeperException e) {\n      return null;\n    }\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRebalanceLeaders#getZkData(CloudSolrClient,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestRebalanceLeaders#getZkData(CloudSolrServer,String).mjava","sourceNew":"  byte[] getZkData(CloudSolrClient client, String path) {\n    org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n    long start = System.currentTimeMillis();\n    try {\n      byte[] data = client.getZkStateReader().getZkClient().getData(path, null, stat, true);\n      if (data != null) {\n        return data;\n      }\n    } catch (KeeperException.NoNodeException e) {\n      try {\n        Thread.sleep(1000);\n      } catch (InterruptedException e1) {\n        return null;\n      }\n    } catch (InterruptedException | KeeperException e) {\n      return null;\n    }\n    return null;\n  }\n\n","sourceOld":"  byte[] getZkData(CloudSolrServer server, String path) {\n    org.apache.zookeeper.data.Stat stat = new org.apache.zookeeper.data.Stat();\n    long start = System.currentTimeMillis();\n    try {\n      byte[] data = server.getZkStateReader().getZkClient().getData(path, null, stat, true);\n      if (data != null) {\n        return data;\n      }\n    } catch (KeeperException.NoNodeException e) {\n      try {\n        Thread.sleep(1000);\n      } catch (InterruptedException e1) {\n        return null;\n      }\n    } catch (InterruptedException | KeeperException e) {\n      return null;\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["4e6b620c271c84c0f14919eec7b90083b292ee51"],"4e6b620c271c84c0f14919eec7b90083b292ee51":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4e6b620c271c84c0f14919eec7b90083b292ee51"],"bafca15d8e408346a67f4282ad1143b88023893b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4e6b620c271c84c0f14919eec7b90083b292ee51":["bafca15d8e408346a67f4282ad1143b88023893b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}