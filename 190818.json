{"path":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","commits":[{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(File,String[]).mjava","sourceNew":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos();\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.name, info.getDocCount(), \n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics());\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","sourceOld":"  public void split(File destDir, String[] segs) throws IOException {\n    destDir.mkdirs();\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos();\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.name, info.getDocCount(), \n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics());\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        File srcFile = new File(dir, srcName);\n        File destFile = new File(destDir, srcName);\n        copyFile(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c65d2864d936ccf22dc7ec14dd48b4dff7bacceb","date":1411653326,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","sourceNew":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos();\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.name, info.getDocCount(), \n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId());\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","sourceOld":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos();\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.name, info.getDocCount(), \n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics());\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","bugFix":null,"bugIntro":["8521d944f9dfb45692ec28235dbf116d47ef69ba"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5f6bd27530a2846413fe2d00030493c0e2d3a072","date":1411811855,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","sourceNew":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos();\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.name, info.getDocCount(), \n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId());\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","sourceOld":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos();\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.name, info.getDocCount(), \n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics());\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","bugFix":["77f264c55cbf75404f8601ae7290d69157273a56"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8521d944f9dfb45692ec28235dbf116d47ef69ba","date":1417535150,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","sourceNew":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos();\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.name, info.getDocCount(), \n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), new HashMap<>());\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","sourceOld":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos();\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.name, info.getDocCount(), \n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId());\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","bugFix":["c65d2864d936ccf22dc7ec14dd48b4dff7bacceb"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0267c69e2456a3477a1ad785723f2135da3117e","date":1425317087,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","sourceNew":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos();\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.name, info.maxDoc(),\n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), new HashMap<>());\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","sourceOld":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos();\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.name, info.getDocCount(), \n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), new HashMap<>());\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b06445ae1731e049327712db0454e5643ca9b7fe","date":1425329139,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","sourceNew":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos();\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.name, info.maxDoc(),\n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), new HashMap<>());\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","sourceOld":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos();\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.name, info.getDocCount(), \n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), new HashMap<>());\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","sourceNew":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos();\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.name, info.maxDoc(),\n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), new HashMap<>());\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","sourceOld":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos();\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.name, info.getDocCount(), \n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), new HashMap<>());\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ceaef6cfc68c8ab22a684192e469a8280f9e6e70","date":1462354657,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","sourceNew":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos();\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.name, info.maxDoc(),\n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), new HashMap<>(), null);\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","sourceOld":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos();\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.name, info.maxDoc(),\n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), new HashMap<>());\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d33e731a93d4b57e662ff094f64f94a745422d4","date":1463128289,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","sourceNew":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos();\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.name, info.maxDoc(),\n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), new HashMap<>(), null);\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","sourceOld":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos();\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.name, info.maxDoc(),\n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), new HashMap<>());\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","sourceNew":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos();\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.name, info.maxDoc(),\n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), new HashMap<>(), null);\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","sourceOld":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos();\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.name, info.maxDoc(),\n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), new HashMap<>());\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","sourceNew":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos();\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.name, info.maxDoc(),\n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), new HashMap<>(), null);\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","sourceOld":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos();\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.name, info.maxDoc(),\n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), new HashMap<>());\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","sourceNew":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos();\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.name, info.maxDoc(),\n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), new HashMap<>(), null);\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","sourceOld":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos();\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.name, info.maxDoc(),\n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), new HashMap<>());\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d97ba94eef1fc33c5451259a7aa2ac682646c1af","date":1488285427,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","sourceNew":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos(infos.getIndexCreatedVersion());\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.name, info.maxDoc(),\n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), new HashMap<>(), null);\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","sourceOld":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos();\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.name, info.maxDoc(),\n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), new HashMap<>(), null);\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31741cf1390044e38a2ec3127cf302ba841bfd75","date":1491292636,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","sourceNew":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos(infos.getIndexCreatedVersionMajor());\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.getMinVersion(), info.name, info.maxDoc(),\n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), new HashMap<>(), null);\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","sourceOld":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos(infos.getIndexCreatedVersion());\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.name, info.maxDoc(),\n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), new HashMap<>(), null);\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92212fd254551a0b1156aafc3a1a6ed1a43932ad","date":1491296431,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","sourceNew":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos(infos.getIndexCreatedVersionMajor());\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.getMinVersion(), info.name, info.maxDoc(),\n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), new HashMap<>(), null);\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","sourceOld":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos(infos.getIndexCreatedVersion());\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.name, info.maxDoc(),\n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), new HashMap<>(), null);\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f2203cb8ae87188877cfbf6ad170c5738a0aad5","date":1528117512,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","sourceNew":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos(infos.getIndexCreatedVersionMajor());\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.getMinVersion(), info.name, info.maxDoc(),\n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), new HashMap<>(), null);\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(), infoPerCommit.getSoftDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","sourceOld":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos(infos.getIndexCreatedVersionMajor());\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.getMinVersion(), info.name, info.maxDoc(),\n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), new HashMap<>(), null);\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","sourceNew":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos(infos.getIndexCreatedVersionMajor());\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.getMinVersion(), info.name, info.maxDoc(),\n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), new HashMap<>(), null);\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(), infoPerCommit.getSoftDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","sourceOld":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos(infos.getIndexCreatedVersionMajor());\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.getMinVersion(), info.name, info.maxDoc(),\n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), new HashMap<>(), null);\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","sourceNew":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos(infos.getIndexCreatedVersionMajor());\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.getMinVersion(), info.name, info.maxDoc(),\n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), new HashMap<>(), null);\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(), infoPerCommit.getSoftDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","sourceOld":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos(infos.getIndexCreatedVersionMajor());\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.getMinVersion(), info.name, info.maxDoc(),\n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), new HashMap<>(), null);\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68ba24d6f9380e2463dbe5130d27502647f64904","date":1554881362,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","sourceNew":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos(infos.getIndexCreatedVersionMajor());\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.getMinVersion(), info.name, info.maxDoc(),\n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), Collections.emptyMap(), null);\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(), infoPerCommit.getSoftDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","sourceOld":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos(infos.getIndexCreatedVersionMajor());\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.getMinVersion(), info.name, info.maxDoc(),\n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), new HashMap<>(), null);\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(), infoPerCommit.getSoftDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"14654be3f7a82c9a3c52169e365baa55bfe64f66","date":1587212697,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#split(Path,String[]).mjava","sourceNew":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos(infos.getIndexCreatedVersionMajor());\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.getMinVersion(), info.name, info.maxDoc(),\n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), Collections.emptyMap(), null);\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(), infoPerCommit.getSoftDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen(), infoPerCommit.getId()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","sourceOld":"  public void split(Path destDir, String[] segs) throws IOException {\n    Files.createDirectories(destDir);\n    FSDirectory destFSDir = FSDirectory.open(destDir);\n    SegmentInfos destInfos = new SegmentInfos(infos.getIndexCreatedVersionMajor());\n    destInfos.counter = infos.counter;\n    for (String n : segs) {\n      SegmentCommitInfo infoPerCommit = getInfo(n);\n      SegmentInfo info = infoPerCommit.info;\n      // Same info just changing the dir:\n      SegmentInfo newInfo = new SegmentInfo(destFSDir, info.getVersion(), info.getMinVersion(), info.name, info.maxDoc(),\n                                            info.getUseCompoundFile(), info.getCodec(), info.getDiagnostics(), info.getId(), Collections.emptyMap(), null);\n      destInfos.add(new SegmentCommitInfo(newInfo, infoPerCommit.getDelCount(), infoPerCommit.getSoftDelCount(),\n          infoPerCommit.getDelGen(), infoPerCommit.getFieldInfosGen(),\n          infoPerCommit.getDocValuesGen()));\n      // now copy files over\n      Collection<String> files = infoPerCommit.files();\n      for (final String srcName : files) {\n        Path srcFile = dir.resolve(srcName);\n        Path destFile = destDir.resolve(srcName);\n        Files.copy(srcFile, destFile);\n      }\n    }\n    destInfos.changed();\n    destInfos.commit(destFSDir);\n    // System.out.println(\"destDir:\"+destDir.getAbsolutePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b0267c69e2456a3477a1ad785723f2135da3117e":["8521d944f9dfb45692ec28235dbf116d47ef69ba"],"5f6bd27530a2846413fe2d00030493c0e2d3a072":["f4abec28b874149a7223e32cc7a01704c27790de","c65d2864d936ccf22dc7ec14dd48b4dff7bacceb"],"0ad30c6a479e764150a3316e57263319775f1df2":["b0267c69e2456a3477a1ad785723f2135da3117e","3d33e731a93d4b57e662ff094f64f94a745422d4"],"f4abec28b874149a7223e32cc7a01704c27790de":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["b0267c69e2456a3477a1ad785723f2135da3117e","d470c8182e92b264680e34081b75e70a9f2b3c89"],"31741cf1390044e38a2ec3127cf302ba841bfd75":["d97ba94eef1fc33c5451259a7aa2ac682646c1af"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["b0267c69e2456a3477a1ad785723f2135da3117e","0ad30c6a479e764150a3316e57263319775f1df2"],"8521d944f9dfb45692ec28235dbf116d47ef69ba":["5f6bd27530a2846413fe2d00030493c0e2d3a072"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["8521d944f9dfb45692ec28235dbf116d47ef69ba","b0267c69e2456a3477a1ad785723f2135da3117e"],"ceaef6cfc68c8ab22a684192e469a8280f9e6e70":["b0267c69e2456a3477a1ad785723f2135da3117e"],"14654be3f7a82c9a3c52169e365baa55bfe64f66":["68ba24d6f9380e2463dbe5130d27502647f64904"],"b06445ae1731e049327712db0454e5643ca9b7fe":["8521d944f9dfb45692ec28235dbf116d47ef69ba","b0267c69e2456a3477a1ad785723f2135da3117e"],"68ba24d6f9380e2463dbe5130d27502647f64904":["8f2203cb8ae87188877cfbf6ad170c5738a0aad5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["31741cf1390044e38a2ec3127cf302ba841bfd75","8f2203cb8ae87188877cfbf6ad170c5738a0aad5"],"d97ba94eef1fc33c5451259a7aa2ac682646c1af":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"92212fd254551a0b1156aafc3a1a6ed1a43932ad":["d97ba94eef1fc33c5451259a7aa2ac682646c1af"],"8f2203cb8ae87188877cfbf6ad170c5738a0aad5":["31741cf1390044e38a2ec3127cf302ba841bfd75"],"3d33e731a93d4b57e662ff094f64f94a745422d4":["b0267c69e2456a3477a1ad785723f2135da3117e","ceaef6cfc68c8ab22a684192e469a8280f9e6e70"],"f592209545c71895260367152601e9200399776d":["31741cf1390044e38a2ec3127cf302ba841bfd75","8f2203cb8ae87188877cfbf6ad170c5738a0aad5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["14654be3f7a82c9a3c52169e365baa55bfe64f66"],"c65d2864d936ccf22dc7ec14dd48b4dff7bacceb":["f4abec28b874149a7223e32cc7a01704c27790de"]},"commit2Childs":{"b0267c69e2456a3477a1ad785723f2135da3117e":["0ad30c6a479e764150a3316e57263319775f1df2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","ceaef6cfc68c8ab22a684192e469a8280f9e6e70","b06445ae1731e049327712db0454e5643ca9b7fe","3d33e731a93d4b57e662ff094f64f94a745422d4"],"5f6bd27530a2846413fe2d00030493c0e2d3a072":["8521d944f9dfb45692ec28235dbf116d47ef69ba"],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"f4abec28b874149a7223e32cc7a01704c27790de":["5f6bd27530a2846413fe2d00030493c0e2d3a072","c65d2864d936ccf22dc7ec14dd48b4dff7bacceb"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d97ba94eef1fc33c5451259a7aa2ac682646c1af"],"31741cf1390044e38a2ec3127cf302ba841bfd75":["b70042a8a492f7054d480ccdd2be9796510d4327","8f2203cb8ae87188877cfbf6ad170c5738a0aad5","f592209545c71895260367152601e9200399776d"],"8521d944f9dfb45692ec28235dbf116d47ef69ba":["b0267c69e2456a3477a1ad785723f2135da3117e","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b06445ae1731e049327712db0454e5643ca9b7fe"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"ceaef6cfc68c8ab22a684192e469a8280f9e6e70":["3d33e731a93d4b57e662ff094f64f94a745422d4"],"14654be3f7a82c9a3c52169e365baa55bfe64f66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b06445ae1731e049327712db0454e5643ca9b7fe":[],"68ba24d6f9380e2463dbe5130d27502647f64904":["14654be3f7a82c9a3c52169e365baa55bfe64f66"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f4abec28b874149a7223e32cc7a01704c27790de"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"d97ba94eef1fc33c5451259a7aa2ac682646c1af":["31741cf1390044e38a2ec3127cf302ba841bfd75","92212fd254551a0b1156aafc3a1a6ed1a43932ad"],"92212fd254551a0b1156aafc3a1a6ed1a43932ad":[],"3d33e731a93d4b57e662ff094f64f94a745422d4":["0ad30c6a479e764150a3316e57263319775f1df2"],"8f2203cb8ae87188877cfbf6ad170c5738a0aad5":["68ba24d6f9380e2463dbe5130d27502647f64904","b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d"],"f592209545c71895260367152601e9200399776d":[],"c65d2864d936ccf22dc7ec14dd48b4dff7bacceb":["5f6bd27530a2846413fe2d00030493c0e2d3a072"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b06445ae1731e049327712db0454e5643ca9b7fe","b70042a8a492f7054d480ccdd2be9796510d4327","92212fd254551a0b1156aafc3a1a6ed1a43932ad","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}