{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletion#FSTCompletion(FST[Object],boolean,boolean).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletion#FSTCompletion(FST[Object],boolean,boolean).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletion#FSTCompletion(FST[Object],boolean,boolean).mjava","sourceNew":"  /**\n   * @param automaton\n   *          Automaton with completions. See {@link FSTCompletionBuilder}.\n   * @param higherWeightsFirst\n   *          Return most popular suggestions first. This is the default\n   *          behavior for this implementation. Setting it to <code>false</code>\n   *          has no effect (use constant term weights to sort alphabetically\n   *          only).\n   * @param exactFirst\n   *          Find and push an exact match to the first position of the result\n   *          list if found.\n   */\n  @SuppressWarnings(\"unchecked\")\n  public FSTCompletion(FST<Object> automaton, boolean higherWeightsFirst, boolean exactFirst) {\n    this.automaton = automaton;\n    if (automaton != null) {\n      this.rootArcs = cacheRootArcs(automaton);\n    } else {\n      this.rootArcs = new Arc[0];\n    }\n    this.higherWeightsFirst = higherWeightsFirst;\n    this.exactFirst = exactFirst;\n  }\n\n","sourceOld":"  /**\n   * @param automaton\n   *          Automaton with completions. See {@link FSTCompletionBuilder}.\n   * @param higherWeightsFirst\n   *          Return most popular suggestions first. This is the default\n   *          behavior for this implementation. Setting it to <code>false</code>\n   *          has no effect (use constant term weights to sort alphabetically\n   *          only).\n   * @param exactFirst\n   *          Find and push an exact match to the first position of the result\n   *          list if found.\n   */\n  @SuppressWarnings(\"unchecked\")\n  public FSTCompletion(FST<Object> automaton, boolean higherWeightsFirst, boolean exactFirst) {\n    this.automaton = automaton;\n    if (automaton != null) {\n      this.rootArcs = cacheRootArcs(automaton);\n    } else {\n      this.rootArcs = new Arc[0];\n    }\n    this.higherWeightsFirst = higherWeightsFirst;\n    this.exactFirst = exactFirst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d36385b9911b2a5be7b1920f55c058f801417ee4","date":1348192394,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletion#FSTCompletion(FST[Object],boolean,boolean).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletion#FSTCompletion(FST[Object],boolean,boolean).mjava","sourceNew":"  /**\n   * Constructs an FSTCompletion, specifying higherWeightsFirst and exactFirst.\n   * @param automaton\n   *          Automaton with completions. See {@link FSTCompletionBuilder}.\n   * @param higherWeightsFirst\n   *          Return most popular suggestions first. This is the default\n   *          behavior for this implementation. Setting it to <code>false</code>\n   *          has no effect (use constant term weights to sort alphabetically\n   *          only).\n   * @param exactFirst\n   *          Find and push an exact match to the first position of the result\n   *          list if found.\n   */\n  @SuppressWarnings(\"unchecked\")\n  public FSTCompletion(FST<Object> automaton, boolean higherWeightsFirst, boolean exactFirst) {\n    this.automaton = automaton;\n    if (automaton != null) {\n      this.rootArcs = cacheRootArcs(automaton);\n    } else {\n      this.rootArcs = new Arc[0];\n    }\n    this.higherWeightsFirst = higherWeightsFirst;\n    this.exactFirst = exactFirst;\n  }\n\n","sourceOld":"  /**\n   * @param automaton\n   *          Automaton with completions. See {@link FSTCompletionBuilder}.\n   * @param higherWeightsFirst\n   *          Return most popular suggestions first. This is the default\n   *          behavior for this implementation. Setting it to <code>false</code>\n   *          has no effect (use constant term weights to sort alphabetically\n   *          only).\n   * @param exactFirst\n   *          Find and push an exact match to the first position of the result\n   *          list if found.\n   */\n  @SuppressWarnings(\"unchecked\")\n  public FSTCompletion(FST<Object> automaton, boolean higherWeightsFirst, boolean exactFirst) {\n    this.automaton = automaton;\n    if (automaton != null) {\n      this.rootArcs = cacheRootArcs(automaton);\n    } else {\n      this.rootArcs = new Arc[0];\n    }\n    this.higherWeightsFirst = higherWeightsFirst;\n    this.exactFirst = exactFirst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8c2e9514030f533e06823aa8aec716afaf09cced","date":1353602477,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletion#FSTCompletion(FST[Object],boolean,boolean).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletion#FSTCompletion(FST[Object],boolean,boolean).mjava","sourceNew":"  /**\n   * Constructs an FSTCompletion, specifying higherWeightsFirst and exactFirst.\n   * @param automaton\n   *          Automaton with completions. See {@link FSTCompletionBuilder}.\n   * @param higherWeightsFirst\n   *          Return most popular suggestions first. This is the default\n   *          behavior for this implementation. Setting it to <code>false</code>\n   *          has no effect (use constant term weights to sort alphabetically\n   *          only).\n   * @param exactFirst\n   *          Find and push an exact match to the first position of the result\n   *          list if found.\n   */\n  @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n  public FSTCompletion(FST<Object> automaton, boolean higherWeightsFirst, boolean exactFirst) {\n    this.automaton = automaton;\n    if (automaton != null) {\n      this.rootArcs = cacheRootArcs(automaton);\n    } else {\n      this.rootArcs = new Arc[0];\n    }\n    this.higherWeightsFirst = higherWeightsFirst;\n    this.exactFirst = exactFirst;\n  }\n\n","sourceOld":"  /**\n   * Constructs an FSTCompletion, specifying higherWeightsFirst and exactFirst.\n   * @param automaton\n   *          Automaton with completions. See {@link FSTCompletionBuilder}.\n   * @param higherWeightsFirst\n   *          Return most popular suggestions first. This is the default\n   *          behavior for this implementation. Setting it to <code>false</code>\n   *          has no effect (use constant term weights to sort alphabetically\n   *          only).\n   * @param exactFirst\n   *          Find and push an exact match to the first position of the result\n   *          list if found.\n   */\n  @SuppressWarnings(\"unchecked\")\n  public FSTCompletion(FST<Object> automaton, boolean higherWeightsFirst, boolean exactFirst) {\n    this.automaton = automaton;\n    if (automaton != null) {\n      this.rootArcs = cacheRootArcs(automaton);\n    } else {\n      this.rootArcs = new Arc[0];\n    }\n    this.higherWeightsFirst = higherWeightsFirst;\n    this.exactFirst = exactFirst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletion#FSTCompletion(FST[Object],boolean,boolean).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletion#FSTCompletion(FST[Object],boolean,boolean).mjava","sourceNew":"  /**\n   * Constructs an FSTCompletion, specifying higherWeightsFirst and exactFirst.\n   * @param automaton\n   *          Automaton with completions. See {@link FSTCompletionBuilder}.\n   * @param higherWeightsFirst\n   *          Return most popular suggestions first. This is the default\n   *          behavior for this implementation. Setting it to <code>false</code>\n   *          has no effect (use constant term weights to sort alphabetically\n   *          only).\n   * @param exactFirst\n   *          Find and push an exact match to the first position of the result\n   *          list if found.\n   */\n  @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n  public FSTCompletion(FST<Object> automaton, boolean higherWeightsFirst, boolean exactFirst) {\n    this.automaton = automaton;\n    if (automaton != null) {\n      this.rootArcs = cacheRootArcs(automaton);\n    } else {\n      this.rootArcs = new Arc[0];\n    }\n    this.higherWeightsFirst = higherWeightsFirst;\n    this.exactFirst = exactFirst;\n  }\n\n","sourceOld":"  /**\n   * Constructs an FSTCompletion, specifying higherWeightsFirst and exactFirst.\n   * @param automaton\n   *          Automaton with completions. See {@link FSTCompletionBuilder}.\n   * @param higherWeightsFirst\n   *          Return most popular suggestions first. This is the default\n   *          behavior for this implementation. Setting it to <code>false</code>\n   *          has no effect (use constant term weights to sort alphabetically\n   *          only).\n   * @param exactFirst\n   *          Find and push an exact match to the first position of the result\n   *          list if found.\n   */\n  @SuppressWarnings(\"unchecked\")\n  public FSTCompletion(FST<Object> automaton, boolean higherWeightsFirst, boolean exactFirst) {\n    this.automaton = automaton;\n    if (automaton != null) {\n      this.rootArcs = cacheRootArcs(automaton);\n    } else {\n      this.rootArcs = new Arc[0];\n    }\n    this.higherWeightsFirst = higherWeightsFirst;\n    this.exactFirst = exactFirst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d36385b9911b2a5be7b1920f55c058f801417ee4":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["d36385b9911b2a5be7b1920f55c058f801417ee4","8c2e9514030f533e06823aa8aec716afaf09cced"],"8c2e9514030f533e06823aa8aec716afaf09cced":["d36385b9911b2a5be7b1920f55c058f801417ee4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8c2e9514030f533e06823aa8aec716afaf09cced"]},"commit2Childs":{"d36385b9911b2a5be7b1920f55c058f801417ee4":["407687e67faf6e1f02a211ca078d8e3eed631027","8c2e9514030f533e06823aa8aec716afaf09cced"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d36385b9911b2a5be7b1920f55c058f801417ee4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"8c2e9514030f533e06823aa8aec716afaf09cced":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}