{"path":"lucene/expressions/src/test/org/apache/lucene/expressions/js/TestCustomFunctions#testEmpty().mjava","commits":[{"id":"607d8939b7a592a7bfc6b82c648bd96915a13e15","date":1379185943,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/expressions/src/test/org/apache/lucene/expressions/js/TestCustomFunctions#testEmpty().mjava","pathOld":"/dev/null","sourceNew":"  /** empty list of methods */\n  public void testEmpty() throws Exception {\n    Map<String,Method> functions = Collections.emptyMap();\n    try {\n      JavascriptCompiler.compile(\"sqrt(20)\", functions);\n      fail();\n    } catch (IllegalArgumentException e) {\n      assertTrue(e.getMessage().contains(\"Unrecognized method\"));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"96f6862293dd05eceeb03760bbb8ffcb604c6e80","date":1379186543,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/expressions/src/test/org/apache/lucene/expressions/js/TestCustomFunctions#testEmpty().mjava","pathOld":"lucene/expressions/src/test/org/apache/lucene/expressions/js/TestCustomFunctions#testEmpty().mjava","sourceNew":"  /** empty list of methods */\n  public void testEmpty() throws Exception {\n    Map<String,Method> functions = Collections.emptyMap();\n    try {\n      JavascriptCompiler.compile(\"sqrt(20)\", functions, getClass().getClassLoader());\n      fail();\n    } catch (IllegalArgumentException e) {\n      assertTrue(e.getMessage().contains(\"Unrecognized method\"));\n    }\n  }\n\n","sourceOld":"  /** empty list of methods */\n  public void testEmpty() throws Exception {\n    Map<String,Method> functions = Collections.emptyMap();\n    try {\n      JavascriptCompiler.compile(\"sqrt(20)\", functions);\n      fail();\n    } catch (IllegalArgumentException e) {\n      assertTrue(e.getMessage().contains(\"Unrecognized method\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5f0e44787cffbb978aa2182761e3f9b184545a1e","date":1379265303,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/expressions/src/test/org/apache/lucene/expressions/js/TestCustomFunctions#testEmpty().mjava","pathOld":"/dev/null","sourceNew":"  /** empty list of methods */\n  public void testEmpty() throws Exception {\n    Map<String,Method> functions = Collections.emptyMap();\n    try {\n      JavascriptCompiler.compile(\"sqrt(20)\", functions, getClass().getClassLoader());\n      fail();\n    } catch (IllegalArgumentException e) {\n      assertTrue(e.getMessage().contains(\"Unrecognized method\"));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bc8344f9e8b303df6f90068c5dc0bcfaccc0f74a","date":1429899342,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/expressions/src/test/org/apache/lucene/expressions/js/TestCustomFunctions#testEmpty().mjava","pathOld":"lucene/expressions/src/test/org/apache/lucene/expressions/js/TestCustomFunctions#testEmpty().mjava","sourceNew":"  /** empty list of methods */\n  public void testEmpty() throws Exception {\n    Map<String,Method> functions = Collections.emptyMap();\n    try {\n      JavascriptCompiler.compile(\"sqrt(20)\", functions, getClass().getClassLoader());\n      fail();\n    } catch (IllegalArgumentException e) {\n      assertTrue(e.getMessage().contains(\"Unrecognized function\"));\n    }\n  }\n\n","sourceOld":"  /** empty list of methods */\n  public void testEmpty() throws Exception {\n    Map<String,Method> functions = Collections.emptyMap();\n    try {\n      JavascriptCompiler.compile(\"sqrt(20)\", functions, getClass().getClassLoader());\n      fail();\n    } catch (IllegalArgumentException e) {\n      assertTrue(e.getMessage().contains(\"Unrecognized method\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"10fcb49fe038c75fa2e8f8029db57203be947728","date":1452203404,"type":3,"author":"Tomas Eduardo Fernandez Lobbe","isMerge":false,"pathNew":"lucene/expressions/src/test/org/apache/lucene/expressions/js/TestCustomFunctions#testEmpty().mjava","pathOld":"lucene/expressions/src/test/org/apache/lucene/expressions/js/TestCustomFunctions#testEmpty().mjava","sourceNew":"  /** empty list of methods */\n  public void testEmpty() throws Exception {\n    Map<String,Method> functions = Collections.emptyMap();\n    try {\n      JavascriptCompiler.compile(\"sqrt(20)\", functions, getClass().getClassLoader());\n      fail();\n    } catch (ParseException expected) {\n      assertEquals(\"Invalid expression 'sqrt(20)': Unrecognized function call (sqrt).\", expected.getMessage());\n      assertEquals(expected.getErrorOffset(), 0);\n    }\n  }\n\n","sourceOld":"  /** empty list of methods */\n  public void testEmpty() throws Exception {\n    Map<String,Method> functions = Collections.emptyMap();\n    try {\n      JavascriptCompiler.compile(\"sqrt(20)\", functions, getClass().getClassLoader());\n      fail();\n    } catch (IllegalArgumentException e) {\n      assertTrue(e.getMessage().contains(\"Unrecognized function\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/expressions/src/test/org/apache/lucene/expressions/js/TestCustomFunctions#testEmpty().mjava","pathOld":"lucene/expressions/src/test/org/apache/lucene/expressions/js/TestCustomFunctions#testEmpty().mjava","sourceNew":"  /** empty list of methods */\n  public void testEmpty() throws Exception {\n    Map<String,Method> functions = Collections.emptyMap();\n    ParseException expected = expectThrows(ParseException.class, () -> {\n      JavascriptCompiler.compile(\"sqrt(20)\", functions, getClass().getClassLoader());\n    });\n    assertEquals(\"Invalid expression 'sqrt(20)': Unrecognized function call (sqrt).\", expected.getMessage());\n    assertEquals(expected.getErrorOffset(), 0);\n  }\n\n","sourceOld":"  /** empty list of methods */\n  public void testEmpty() throws Exception {\n    Map<String,Method> functions = Collections.emptyMap();\n    try {\n      JavascriptCompiler.compile(\"sqrt(20)\", functions, getClass().getClassLoader());\n      fail();\n    } catch (ParseException expected) {\n      assertEquals(\"Invalid expression 'sqrt(20)': Unrecognized function call (sqrt).\", expected.getMessage());\n      assertEquals(expected.getErrorOffset(), 0);\n    }\n  }\n\n","bugFix":["607d8939b7a592a7bfc6b82c648bd96915a13e15","10fcb49fe038c75fa2e8f8029db57203be947728"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"10fcb49fe038c75fa2e8f8029db57203be947728":["bc8344f9e8b303df6f90068c5dc0bcfaccc0f74a"],"607d8939b7a592a7bfc6b82c648bd96915a13e15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["10fcb49fe038c75fa2e8f8029db57203be947728"],"96f6862293dd05eceeb03760bbb8ffcb604c6e80":["607d8939b7a592a7bfc6b82c648bd96915a13e15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"],"bc8344f9e8b303df6f90068c5dc0bcfaccc0f74a":["5f0e44787cffbb978aa2182761e3f9b184545a1e"],"5f0e44787cffbb978aa2182761e3f9b184545a1e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","96f6862293dd05eceeb03760bbb8ffcb604c6e80"]},"commit2Childs":{"10fcb49fe038c75fa2e8f8029db57203be947728":["05fe562aa248790944d43cdd478f512572835ba0"],"607d8939b7a592a7bfc6b82c648bd96915a13e15":["96f6862293dd05eceeb03760bbb8ffcb604c6e80"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["607d8939b7a592a7bfc6b82c648bd96915a13e15","5f0e44787cffbb978aa2182761e3f9b184545a1e"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"96f6862293dd05eceeb03760bbb8ffcb604c6e80":["5f0e44787cffbb978aa2182761e3f9b184545a1e"],"bc8344f9e8b303df6f90068c5dc0bcfaccc0f74a":["10fcb49fe038c75fa2e8f8029db57203be947728"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"5f0e44787cffbb978aa2182761e3f9b184545a1e":["bc8344f9e8b303df6f90068c5dc0bcfaccc0f74a"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}