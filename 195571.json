{"path":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mDOUBLE_STRING_CHAR().mjava","commits":[{"id":"5b6aa541ae5bb3c0260e1c263d6897a7925fa00c","date":1404947938,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mDOUBLE_STRING_CHAR().mjava","pathOld":"/dev/null","sourceNew":"  // $ANTLR start \"DOUBLE_STRING_CHAR\"\n  public final void mDOUBLE_STRING_CHAR() throws RecognitionException {\n    try {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:369:5: ( '\\\\\\\\\\\"' | '\\\\\\\\\\\\\\\\' |~ ( '\\\\\\\\' | '\\\"' ) )\n      int alt9=3;\n      int LA9_0 = input.LA(1);\n      if ( (LA9_0=='\\\\') ) {\n        int LA9_1 = input.LA(2);\n        if ( (LA9_1=='\\\"') ) {\n          alt9=1;\n        }\n        else if ( (LA9_1=='\\\\') ) {\n          alt9=2;\n        }\n\n        else {\n          int nvaeMark = input.mark();\n          try {\n            input.consume();\n            NoViableAltException nvae =\n              new NoViableAltException(\"\", 9, 1, input);\n            throw nvae;\n          } finally {\n            input.rewind(nvaeMark);\n          }\n        }\n\n      }\n      else if ( ((LA9_0 >= '\\u0000' && LA9_0 <= '!')||(LA9_0 >= '#' && LA9_0 <= '[')||(LA9_0 >= ']' && LA9_0 <= '\\uFFFF')) ) {\n        alt9=3;\n      }\n\n      else {\n        NoViableAltException nvae =\n          new NoViableAltException(\"\", 9, 0, input);\n        throw nvae;\n      }\n\n      switch (alt9) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:369:7: '\\\\\\\\\\\"'\n          {\n          match(\"\\\\\\\"\"); \n\n          }\n          break;\n        case 2 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:370:7: '\\\\\\\\\\\\\\\\'\n          {\n          match(\"\\\\\\\\\"); \n\n          }\n          break;\n        case 3 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:371:7: ~ ( '\\\\\\\\' | '\\\"' )\n          {\n          if ( (input.LA(1) >= '\\u0000' && input.LA(1) <= '!')||(input.LA(1) >= '#' && input.LA(1) <= '[')||(input.LA(1) >= ']' && input.LA(1) <= '\\uFFFF') ) {\n            input.consume();\n          }\n          else {\n            MismatchedSetException mse = new MismatchedSetException(null,input);\n            recover(mse);\n            throw mse;\n          }\n          }\n          break;\n\n      }\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"DOUBLE_STRING_CHAR\"\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d23d4828afa583ebf35b4a541763af6206133458","date":1438931440,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mDOUBLE_STRING_CHAR().mjava","sourceNew":null,"sourceOld":"  // $ANTLR start \"DOUBLE_STRING_CHAR\"\n  public final void mDOUBLE_STRING_CHAR() throws RecognitionException {\n    try {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:369:5: ( '\\\\\\\\\\\"' | '\\\\\\\\\\\\\\\\' |~ ( '\\\\\\\\' | '\\\"' ) )\n      int alt9=3;\n      int LA9_0 = input.LA(1);\n      if ( (LA9_0=='\\\\') ) {\n        int LA9_1 = input.LA(2);\n        if ( (LA9_1=='\\\"') ) {\n          alt9=1;\n        }\n        else if ( (LA9_1=='\\\\') ) {\n          alt9=2;\n        }\n\n        else {\n          int nvaeMark = input.mark();\n          try {\n            input.consume();\n            NoViableAltException nvae =\n              new NoViableAltException(\"\", 9, 1, input);\n            throw nvae;\n          } finally {\n            input.rewind(nvaeMark);\n          }\n        }\n\n      }\n      else if ( ((LA9_0 >= '\\u0000' && LA9_0 <= '!')||(LA9_0 >= '#' && LA9_0 <= '[')||(LA9_0 >= ']' && LA9_0 <= '\\uFFFF')) ) {\n        alt9=3;\n      }\n\n      else {\n        NoViableAltException nvae =\n          new NoViableAltException(\"\", 9, 0, input);\n        throw nvae;\n      }\n\n      switch (alt9) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:369:7: '\\\\\\\\\\\"'\n          {\n          match(\"\\\\\\\"\"); \n\n          }\n          break;\n        case 2 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:370:7: '\\\\\\\\\\\\\\\\'\n          {\n          match(\"\\\\\\\\\"); \n\n          }\n          break;\n        case 3 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:371:7: ~ ( '\\\\\\\\' | '\\\"' )\n          {\n          if ( (input.LA(1) >= '\\u0000' && input.LA(1) <= '!')||(input.LA(1) >= '#' && input.LA(1) <= '[')||(input.LA(1) >= ']' && input.LA(1) <= '\\uFFFF') ) {\n            input.consume();\n          }\n          else {\n            MismatchedSetException mse = new MismatchedSetException(null,input);\n            recover(mse);\n            throw mse;\n          }\n          }\n          break;\n\n      }\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"DOUBLE_STRING_CHAR\"\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d23d4828afa583ebf35b4a541763af6206133458":["5b6aa541ae5bb3c0260e1c263d6897a7925fa00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5b6aa541ae5bb3c0260e1c263d6897a7925fa00c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d23d4828afa583ebf35b4a541763af6206133458"]},"commit2Childs":{"d23d4828afa583ebf35b4a541763af6206133458":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5b6aa541ae5bb3c0260e1c263d6897a7925fa00c"],"5b6aa541ae5bb3c0260e1c263d6897a7925fa00c":["d23d4828afa583ebf35b4a541763af6206133458"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}