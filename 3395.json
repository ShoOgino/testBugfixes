{"path":"src/java/org/apache/lucene/analysis/ASCIIFoldingFilter#next(Token).mjava","commits":[{"id":"4e194a2c4eac8122ef31a202859dcb1c5344020d","date":1228605942,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/ASCIIFoldingFilter#next(Token).mjava","pathOld":"/dev/null","sourceNew":"  public Token next(Token result)\n      throws java.io.IOException\n  {\n    result = input.next(result);\n\n    if (result != null)\n    {\n      final char[] buffer = result.termBuffer();\n      final int length = result.termLength();\n\n      // If no characters actually require rewriting then we\n      // just return token as-is:\n      for(int i = 0 ; i < length ; ++i) {\n        final char c = buffer[i];\n        if (c >= '\\u0080')\n        {\n          foldToASCII(buffer, length);\n          result.setTermBuffer(output, 0, outputPos);\n          break;\n        }\n      }\n      return result;\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec8b5a20a12931b8d7e616c79c5248ae06cc5568","date":1248471948,"type":5,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/ASCIIFoldingFilter#incrementToken().mjava","pathOld":"src/java/org/apache/lucene/analysis/ASCIIFoldingFilter#next(Token).mjava","sourceNew":"  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      final char[] buffer = termAtt.termBuffer();\n      final int length = termAtt.termLength();\n\n      // If no characters actually require rewriting then we\n      // just return token as-is:\n      for(int i = 0 ; i < length ; ++i) {\n        final char c = buffer[i];\n        if (c >= '\\u0080')\n        {\n          foldToASCII(buffer, length);\n          termAtt.setTermBuffer(output, 0, outputPos);\n          break;\n        }\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  public Token next(Token result)\n      throws java.io.IOException\n  {\n    result = input.next(result);\n\n    if (result != null)\n    {\n      final char[] buffer = result.termBuffer();\n      final int length = result.termLength();\n\n      // If no characters actually require rewriting then we\n      // just return token as-is:\n      for(int i = 0 ; i < length ; ++i) {\n        final char c = buffer[i];\n        if (c >= '\\u0080')\n        {\n          foldToASCII(buffer, length);\n          result.setTermBuffer(output, 0, outputPos);\n          break;\n        }\n      }\n      return result;\n    } else {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4e194a2c4eac8122ef31a202859dcb1c5344020d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ec8b5a20a12931b8d7e616c79c5248ae06cc5568"],"ec8b5a20a12931b8d7e616c79c5248ae06cc5568":["4e194a2c4eac8122ef31a202859dcb1c5344020d"]},"commit2Childs":{"4e194a2c4eac8122ef31a202859dcb1c5344020d":["ec8b5a20a12931b8d7e616c79c5248ae06cc5568"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4e194a2c4eac8122ef31a202859dcb1c5344020d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"ec8b5a20a12931b8d7e616c79c5248ae06cc5568":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}