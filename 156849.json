{"path":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(String,boolean,boolean,boolean,boolean,boolean).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(String,boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/FieldInfos#add(String,boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":"    /** If the field is not yet known, adds it. If it is known, checks to make\n   *  sure that the isIndexed flag is the same as was given previously for this\n   *  field. If not - marks it as being indexed.  Same goes for the TermVector\n   * parameters.\n   *\n   * @param name The name of the field\n   * @param isIndexed true if the field is indexed\n   * @param storeTermVector true if the term vector should be stored\n   * @param storePositionWithTermVector true if the term vector with positions should be stored\n   * @param storeOffsetWithTermVector true if the term vector with offsets should be stored\n   * @param omitNorms true if the norms for the indexed field should be omitted\n   */\n  synchronized public void add(String name, boolean isIndexed, boolean storeTermVector,\n                  boolean storePositionWithTermVector, boolean storeOffsetWithTermVector, boolean omitNorms) {\n    add(name, isIndexed, storeTermVector, storePositionWithTermVector,\n        storeOffsetWithTermVector, omitNorms, false, false);\n  }\n\n","sourceOld":"    /** If the field is not yet known, adds it. If it is known, checks to make\n   *  sure that the isIndexed flag is the same as was given previously for this\n   *  field. If not - marks it as being indexed.  Same goes for the TermVector\n   * parameters.\n   *\n   * @param name The name of the field\n   * @param isIndexed true if the field is indexed\n   * @param storeTermVector true if the term vector should be stored\n   * @param storePositionWithTermVector true if the term vector with positions should be stored\n   * @param storeOffsetWithTermVector true if the term vector with offsets should be stored\n   * @param omitNorms true if the norms for the indexed field should be omitted\n   */\n  synchronized public void add(String name, boolean isIndexed, boolean storeTermVector,\n                  boolean storePositionWithTermVector, boolean storeOffsetWithTermVector, boolean omitNorms) {\n    add(name, isIndexed, storeTermVector, storePositionWithTermVector,\n        storeOffsetWithTermVector, omitNorms, false, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(String,boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(String,boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":"    /** If the field is not yet known, adds it. If it is known, checks to make\n   *  sure that the isIndexed flag is the same as was given previously for this\n   *  field. If not - marks it as being indexed.  Same goes for the TermVector\n   * parameters.\n   *\n   * @param name The name of the field\n   * @param isIndexed true if the field is indexed\n   * @param storeTermVector true if the term vector should be stored\n   * @param storePositionWithTermVector true if the term vector with positions should be stored\n   * @param storeOffsetWithTermVector true if the term vector with offsets should be stored\n   * @param omitNorms true if the norms for the indexed field should be omitted\n   */\n  synchronized public void add(String name, boolean isIndexed, boolean storeTermVector,\n                  boolean storePositionWithTermVector, boolean storeOffsetWithTermVector, boolean omitNorms) {\n    add(name, isIndexed, storeTermVector, storePositionWithTermVector,\n        storeOffsetWithTermVector, omitNorms, false, false, null);\n  }\n\n","sourceOld":"    /** If the field is not yet known, adds it. If it is known, checks to make\n   *  sure that the isIndexed flag is the same as was given previously for this\n   *  field. If not - marks it as being indexed.  Same goes for the TermVector\n   * parameters.\n   *\n   * @param name The name of the field\n   * @param isIndexed true if the field is indexed\n   * @param storeTermVector true if the term vector should be stored\n   * @param storePositionWithTermVector true if the term vector with positions should be stored\n   * @param storeOffsetWithTermVector true if the term vector with offsets should be stored\n   * @param omitNorms true if the norms for the indexed field should be omitted\n   */\n  synchronized public void add(String name, boolean isIndexed, boolean storeTermVector,\n                  boolean storePositionWithTermVector, boolean storeOffsetWithTermVector, boolean omitNorms) {\n    add(name, isIndexed, storeTermVector, storePositionWithTermVector,\n        storeOffsetWithTermVector, omitNorms, false, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e92442af786151ee55bc283eb472f629e3c7b52b","date":1301070252,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#addOrUpdate(String,boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(String,boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":"    /** If the field is not yet known, adds it. If it is known, checks to make\n   *  sure that the isIndexed flag is the same as was given previously for this\n   *  field. If not - marks it as being indexed.  Same goes for the TermVector\n   * parameters.\n   *\n   * @param name The name of the field\n   * @param isIndexed true if the field is indexed\n   * @param storeTermVector true if the term vector should be stored\n   * @param storePositionWithTermVector true if the term vector with positions should be stored\n   * @param storeOffsetWithTermVector true if the term vector with offsets should be stored\n   * @param omitNorms true if the norms for the indexed field should be omitted\n   */\n  synchronized public void addOrUpdate(String name, boolean isIndexed, boolean storeTermVector,\n                  boolean storePositionWithTermVector, boolean storeOffsetWithTermVector, boolean omitNorms) {\n    addOrUpdate(name, isIndexed, storeTermVector, storePositionWithTermVector,\n        storeOffsetWithTermVector, omitNorms, false, false);\n  }\n\n","sourceOld":"    /** If the field is not yet known, adds it. If it is known, checks to make\n   *  sure that the isIndexed flag is the same as was given previously for this\n   *  field. If not - marks it as being indexed.  Same goes for the TermVector\n   * parameters.\n   *\n   * @param name The name of the field\n   * @param isIndexed true if the field is indexed\n   * @param storeTermVector true if the term vector should be stored\n   * @param storePositionWithTermVector true if the term vector with positions should be stored\n   * @param storeOffsetWithTermVector true if the term vector with offsets should be stored\n   * @param omitNorms true if the norms for the indexed field should be omitted\n   */\n  synchronized public void add(String name, boolean isIndexed, boolean storeTermVector,\n                  boolean storePositionWithTermVector, boolean storeOffsetWithTermVector, boolean omitNorms) {\n    add(name, isIndexed, storeTermVector, storePositionWithTermVector,\n        storeOffsetWithTermVector, omitNorms, false, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(String,boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":null,"sourceOld":"    /** If the field is not yet known, adds it. If it is known, checks to make\n   *  sure that the isIndexed flag is the same as was given previously for this\n   *  field. If not - marks it as being indexed.  Same goes for the TermVector\n   * parameters.\n   *\n   * @param name The name of the field\n   * @param isIndexed true if the field is indexed\n   * @param storeTermVector true if the term vector should be stored\n   * @param storePositionWithTermVector true if the term vector with positions should be stored\n   * @param storeOffsetWithTermVector true if the term vector with offsets should be stored\n   * @param omitNorms true if the norms for the indexed field should be omitted\n   */\n  synchronized public void add(String name, boolean isIndexed, boolean storeTermVector,\n                  boolean storePositionWithTermVector, boolean storeOffsetWithTermVector, boolean omitNorms) {\n    add(name, isIndexed, storeTermVector, storePositionWithTermVector,\n        storeOffsetWithTermVector, omitNorms, false, false, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(String,boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":null,"sourceOld":"    /** If the field is not yet known, adds it. If it is known, checks to make\n   *  sure that the isIndexed flag is the same as was given previously for this\n   *  field. If not - marks it as being indexed.  Same goes for the TermVector\n   * parameters.\n   *\n   * @param name The name of the field\n   * @param isIndexed true if the field is indexed\n   * @param storeTermVector true if the term vector should be stored\n   * @param storePositionWithTermVector true if the term vector with positions should be stored\n   * @param storeOffsetWithTermVector true if the term vector with offsets should be stored\n   * @param omitNorms true if the norms for the indexed field should be omitted\n   */\n  synchronized public void add(String name, boolean isIndexed, boolean storeTermVector,\n                  boolean storePositionWithTermVector, boolean storeOffsetWithTermVector, boolean omitNorms) {\n    add(name, isIndexed, storeTermVector, storePositionWithTermVector,\n        storeOffsetWithTermVector, omitNorms, false, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e92442af786151ee55bc283eb472f629e3c7b52b":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["9454a6510e2db155fb01faa5c049b06ece95fab9","e92442af786151ee55bc283eb472f629e3c7b52b"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","e92442af786151ee55bc283eb472f629e3c7b52b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["9454a6510e2db155fb01faa5c049b06ece95fab9","9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e92442af786151ee55bc283eb472f629e3c7b52b"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e92442af786151ee55bc283eb472f629e3c7b52b":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["e92442af786151ee55bc283eb472f629e3c7b52b","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}