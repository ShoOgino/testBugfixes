{"path":"lucene/core/src/java/org/apache/lucene/util/fst/FSTEnum#rewindPrefix().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FSTEnum#rewindPrefix().mjava","pathOld":"lucene/src/java/org/apache/lucene/util/fst/FSTEnum#rewindPrefix().mjava","sourceNew":"  /** Rewinds enum state to match the shared prefix between\n   *  current term and target term */\n  protected final void rewindPrefix() throws IOException {\n    if (upto == 0) {\n      //System.out.println(\"  init\");\n      upto = 1;\n      fst.readFirstTargetArc(getArc(0), getArc(1));\n      return;\n    }\n    //System.out.println(\"  rewind upto=\" + upto + \" vs targetLength=\" + targetLength);\n\n    final int currentLimit = upto;\n    upto = 1;\n    while (upto < currentLimit && upto <= targetLength+1) {\n      final int cmp = getCurrentLabel() - getTargetLabel();\n      if (cmp < 0) {\n        // seek forward\n        //System.out.println(\"    seek fwd\");\n        break;\n      } else if (cmp > 0) {\n        // seek backwards -- reset this arc to the first arc\n        final FST.Arc<T> arc = getArc(upto);\n        fst.readFirstTargetArc(getArc(upto-1), arc);\n        //System.out.println(\"    seek first arc\");\n        break;\n      }\n      upto++;\n    }\n    //System.out.println(\"  fall through upto=\" + upto);\n  }\n\n","sourceOld":"  /** Rewinds enum state to match the shared prefix between\n   *  current term and target term */\n  protected final void rewindPrefix() throws IOException {\n    if (upto == 0) {\n      //System.out.println(\"  init\");\n      upto = 1;\n      fst.readFirstTargetArc(getArc(0), getArc(1));\n      return;\n    }\n    //System.out.println(\"  rewind upto=\" + upto + \" vs targetLength=\" + targetLength);\n\n    final int currentLimit = upto;\n    upto = 1;\n    while (upto < currentLimit && upto <= targetLength+1) {\n      final int cmp = getCurrentLabel() - getTargetLabel();\n      if (cmp < 0) {\n        // seek forward\n        //System.out.println(\"    seek fwd\");\n        break;\n      } else if (cmp > 0) {\n        // seek backwards -- reset this arc to the first arc\n        final FST.Arc<T> arc = getArc(upto);\n        fst.readFirstTargetArc(getArc(upto-1), arc);\n        //System.out.println(\"    seek first arc\");\n        break;\n      }\n      upto++;\n    }\n    //System.out.println(\"  fall through upto=\" + upto);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b9fb5afeea0288262bffcc55bdcda8b5fa272c8","date":1339238489,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FSTEnum#rewindPrefix().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FSTEnum#rewindPrefix().mjava","sourceNew":"  /** Rewinds enum state to match the shared prefix between\n   *  current term and target term */\n  protected final void rewindPrefix() throws IOException {\n    if (upto == 0) {\n      //System.out.println(\"  init\");\n      upto = 1;\n      fst.readFirstTargetArc(getArc(0), getArc(1), fstReader);\n      return;\n    }\n    //System.out.println(\"  rewind upto=\" + upto + \" vs targetLength=\" + targetLength);\n\n    final int currentLimit = upto;\n    upto = 1;\n    while (upto < currentLimit && upto <= targetLength+1) {\n      final int cmp = getCurrentLabel() - getTargetLabel();\n      if (cmp < 0) {\n        // seek forward\n        //System.out.println(\"    seek fwd\");\n        break;\n      } else if (cmp > 0) {\n        // seek backwards -- reset this arc to the first arc\n        final FST.Arc<T> arc = getArc(upto);\n        fst.readFirstTargetArc(getArc(upto-1), arc, fstReader);\n        //System.out.println(\"    seek first arc\");\n        break;\n      }\n      upto++;\n    }\n    //System.out.println(\"  fall through upto=\" + upto);\n  }\n\n","sourceOld":"  /** Rewinds enum state to match the shared prefix between\n   *  current term and target term */\n  protected final void rewindPrefix() throws IOException {\n    if (upto == 0) {\n      //System.out.println(\"  init\");\n      upto = 1;\n      fst.readFirstTargetArc(getArc(0), getArc(1));\n      return;\n    }\n    //System.out.println(\"  rewind upto=\" + upto + \" vs targetLength=\" + targetLength);\n\n    final int currentLimit = upto;\n    upto = 1;\n    while (upto < currentLimit && upto <= targetLength+1) {\n      final int cmp = getCurrentLabel() - getTargetLabel();\n      if (cmp < 0) {\n        // seek forward\n        //System.out.println(\"    seek fwd\");\n        break;\n      } else if (cmp > 0) {\n        // seek backwards -- reset this arc to the first arc\n        final FST.Arc<T> arc = getArc(upto);\n        fst.readFirstTargetArc(getArc(upto-1), arc);\n        //System.out.println(\"    seek first arc\");\n        break;\n      }\n      upto++;\n    }\n    //System.out.println(\"  fall through upto=\" + upto);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54204c8a3ca26aeafd273139fc29baf70d0f6786","date":1564170395,"type":3,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FSTEnum#rewindPrefix().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FSTEnum#rewindPrefix().mjava","sourceNew":"  /** Rewinds enum state to match the shared prefix between\n   *  current term and target term */\n  private void rewindPrefix() throws IOException {\n    if (upto == 0) {\n      //System.out.println(\"  init\");\n      upto = 1;\n      fst.readFirstTargetArc(getArc(0), getArc(1), fstReader);\n      return;\n    }\n    //System.out.println(\"  rewind upto=\" + upto + \" vs targetLength=\" + targetLength);\n\n    final int currentLimit = upto;\n    upto = 1;\n    while (upto < currentLimit && upto <= targetLength+1) {\n      final int cmp = getCurrentLabel() - getTargetLabel();\n      if (cmp < 0) {\n        // seek forward\n        //System.out.println(\"    seek fwd\");\n        break;\n      } else if (cmp > 0) {\n        // seek backwards -- reset this arc to the first arc\n        final FST.Arc<T> arc = getArc(upto);\n        fst.readFirstTargetArc(getArc(upto-1), arc, fstReader);\n        //System.out.println(\"    seek first arc\");\n        break;\n      }\n      upto++;\n    }\n    //System.out.println(\"  fall through upto=\" + upto);\n  }\n\n","sourceOld":"  /** Rewinds enum state to match the shared prefix between\n   *  current term and target term */\n  protected final void rewindPrefix() throws IOException {\n    if (upto == 0) {\n      //System.out.println(\"  init\");\n      upto = 1;\n      fst.readFirstTargetArc(getArc(0), getArc(1), fstReader);\n      return;\n    }\n    //System.out.println(\"  rewind upto=\" + upto + \" vs targetLength=\" + targetLength);\n\n    final int currentLimit = upto;\n    upto = 1;\n    while (upto < currentLimit && upto <= targetLength+1) {\n      final int cmp = getCurrentLabel() - getTargetLabel();\n      if (cmp < 0) {\n        // seek forward\n        //System.out.println(\"    seek fwd\");\n        break;\n      } else if (cmp > 0) {\n        // seek backwards -- reset this arc to the first arc\n        final FST.Arc<T> arc = getArc(upto);\n        fst.readFirstTargetArc(getArc(upto-1), arc, fstReader);\n        //System.out.println(\"    seek first arc\");\n        break;\n      }\n      upto++;\n    }\n    //System.out.println(\"  fall through upto=\" + upto);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FSTEnum#rewindPrefix().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FSTEnum#rewindPrefix().mjava","sourceNew":"  /** Rewinds enum state to match the shared prefix between\n   *  current term and target term */\n  private void rewindPrefix() throws IOException {\n    if (upto == 0) {\n      //System.out.println(\"  init\");\n      upto = 1;\n      fst.readFirstTargetArc(getArc(0), getArc(1), fstReader);\n      return;\n    }\n    //System.out.println(\"  rewind upto=\" + upto + \" vs targetLength=\" + targetLength);\n\n    final int currentLimit = upto;\n    upto = 1;\n    while (upto < currentLimit && upto <= targetLength+1) {\n      final int cmp = getCurrentLabel() - getTargetLabel();\n      if (cmp < 0) {\n        // seek forward\n        //System.out.println(\"    seek fwd\");\n        break;\n      } else if (cmp > 0) {\n        // seek backwards -- reset this arc to the first arc\n        final FST.Arc<T> arc = getArc(upto);\n        fst.readFirstTargetArc(getArc(upto-1), arc, fstReader);\n        //System.out.println(\"    seek first arc\");\n        break;\n      }\n      upto++;\n    }\n    //System.out.println(\"  fall through upto=\" + upto);\n  }\n\n","sourceOld":"  /** Rewinds enum state to match the shared prefix between\n   *  current term and target term */\n  protected final void rewindPrefix() throws IOException {\n    if (upto == 0) {\n      //System.out.println(\"  init\");\n      upto = 1;\n      fst.readFirstTargetArc(getArc(0), getArc(1), fstReader);\n      return;\n    }\n    //System.out.println(\"  rewind upto=\" + upto + \" vs targetLength=\" + targetLength);\n\n    final int currentLimit = upto;\n    upto = 1;\n    while (upto < currentLimit && upto <= targetLength+1) {\n      final int cmp = getCurrentLabel() - getTargetLabel();\n      if (cmp < 0) {\n        // seek forward\n        //System.out.println(\"    seek fwd\");\n        break;\n      } else if (cmp > 0) {\n        // seek backwards -- reset this arc to the first arc\n        final FST.Arc<T> arc = getArc(upto);\n        fst.readFirstTargetArc(getArc(upto-1), arc, fstReader);\n        //System.out.println(\"    seek first arc\");\n        break;\n      }\n      upto++;\n    }\n    //System.out.println(\"  fall through upto=\" + upto);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54204c8a3ca26aeafd273139fc29baf70d0f6786":["8b9fb5afeea0288262bffcc55bdcda8b5fa272c8"],"8b9fb5afeea0288262bffcc55bdcda8b5fa272c8":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f8061ddd97f3352007d927dae445884a6f3d857b":["8b9fb5afeea0288262bffcc55bdcda8b5fa272c8","54204c8a3ca26aeafd273139fc29baf70d0f6786"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["54204c8a3ca26aeafd273139fc29baf70d0f6786"]},"commit2Childs":{"54204c8a3ca26aeafd273139fc29baf70d0f6786":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8b9fb5afeea0288262bffcc55bdcda8b5fa272c8":["54204c8a3ca26aeafd273139fc29baf70d0f6786","f8061ddd97f3352007d927dae445884a6f3d857b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["8b9fb5afeea0288262bffcc55bdcda8b5fa272c8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}