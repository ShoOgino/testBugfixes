{"path":"lucene/src/tools/java/org/apache/lucene/validation/DependencyChecker#getLicenseFile(File,Map[String,UpdateableInt]).mjava","commits":[{"id":"f3e6224692d757db33136ebfbea31015f8b60fd0","date":1300817037,"type":1,"author":"Grant Ingersoll","isMerge":false,"pathNew":"lucene/src/tools/java/org/apache/lucene/validation/DependencyChecker#getLicenseFile(File,Map[String,UpdateableInt]).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/validation/DependencyChecker#getLicenseFile(File,Map[String,UpdateableInt]).mjava","sourceNew":"  private static File getLicenseFile(File file, Map<String, UpdateableInt> licenseNames) {\n    File result = null;\n    String filename = file.getName();\n    int length = 0;\n    for (String licName : licenseNames.keySet()) {\n      String prefix = licName.substring(0, licName.indexOf(\"-LICENSE\"));\n      String name = null;\n      //System.out.println(\"prefix: \" + prefix + \" lic name: \" + licName);\n      if (filename.toLowerCase().startsWith(prefix.toLowerCase())) {\n        result = new File(file.getParentFile(), licName);\n        UpdateableInt ui = licenseNames.get(licName);\n        ui.theInt++;\n      } else {\n      }\n\n    }\n    //System.out.println(\"License File: \" + result + \" for file: \" + file);\n\n    return result;\n  }\n\n","sourceOld":"  private static File getLicenseFile(File file, Map<String, UpdateableInt> licenseNames) {\n    File result = null;\n    String filename = file.getName();\n    int length = 0;\n    for (String licName : licenseNames.keySet()) {\n      String prefix = licName.substring(0, licName.indexOf(\"-LICENSE\"));\n      String name = null;\n      //System.out.println(\"prefix: \" + prefix + \" lic name: \" + licName);\n      if (filename.toLowerCase().startsWith(prefix.toLowerCase())) {\n        result = new File(file.getParentFile(), licName);\n        UpdateableInt ui = licenseNames.get(licName);\n        ui.theInt++;\n      } else {\n      }\n\n    }\n    //System.out.println(\"License File: \" + result + \" for file: \" + file);\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/tools/java/org/apache/lucene/validation/DependencyChecker#getLicenseFile(File,Map[String,UpdateableInt]).mjava","pathOld":"/dev/null","sourceNew":"  private static File getLicenseFile(File file, Map<String, UpdateableInt> licenseNames) {\n    File result = null;\n    String filename = file.getName();\n    int length = 0;\n    for (String licName : licenseNames.keySet()) {\n      String prefix = licName.substring(0, licName.indexOf(\"-LICENSE\"));\n      String name = null;\n      //System.out.println(\"prefix: \" + prefix + \" lic name: \" + licName);\n      if (filename.toLowerCase().startsWith(prefix.toLowerCase())) {\n        result = new File(file.getParentFile(), licName);\n        UpdateableInt ui = licenseNames.get(licName);\n        ui.theInt++;\n      } else {\n      }\n\n    }\n    //System.out.println(\"License File: \" + result + \" for file: \" + file);\n\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/tools/java/org/apache/lucene/validation/DependencyChecker#getLicenseFile(File,Map[String,UpdateableInt]).mjava","pathOld":"/dev/null","sourceNew":"  private static File getLicenseFile(File file, Map<String, UpdateableInt> licenseNames) {\n    File result = null;\n    String filename = file.getName();\n    int length = 0;\n    for (String licName : licenseNames.keySet()) {\n      String prefix = licName.substring(0, licName.indexOf(\"-LICENSE\"));\n      String name = null;\n      //System.out.println(\"prefix: \" + prefix + \" lic name: \" + licName);\n      if (filename.toLowerCase().startsWith(prefix.toLowerCase())) {\n        result = new File(file.getParentFile(), licName);\n        UpdateableInt ui = licenseNames.get(licName);\n        ui.theInt++;\n      } else {\n      }\n\n    }\n    //System.out.println(\"License File: \" + result + \" for file: \" + file);\n\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/tools/src/java/org/apache/lucene/validation/DependencyChecker#getLicenseFile(File,Map[String,UpdateableInt]).mjava","pathOld":"lucene/src/tools/java/org/apache/lucene/validation/DependencyChecker#getLicenseFile(File,Map[String,UpdateableInt]).mjava","sourceNew":"  private static File getLicenseFile(File file, Map<String, UpdateableInt> licenseNames) {\n    File result = null;\n    String filename = file.getName();\n    int length = 0;\n    for (String licName : licenseNames.keySet()) {\n      String prefix = licName.substring(0, licName.indexOf(\"-LICENSE\"));\n      String name = null;\n      //System.out.println(\"prefix: \" + prefix + \" lic name: \" + licName);\n      if (filename.toLowerCase().startsWith(prefix.toLowerCase())) {\n        result = new File(file.getParentFile(), licName);\n        UpdateableInt ui = licenseNames.get(licName);\n        ui.theInt++;\n      } else {\n      }\n\n    }\n    //System.out.println(\"License File: \" + result + \" for file: \" + file);\n\n    return result;\n  }\n\n","sourceOld":"  private static File getLicenseFile(File file, Map<String, UpdateableInt> licenseNames) {\n    File result = null;\n    String filename = file.getName();\n    int length = 0;\n    for (String licName : licenseNames.keySet()) {\n      String prefix = licName.substring(0, licName.indexOf(\"-LICENSE\"));\n      String name = null;\n      //System.out.println(\"prefix: \" + prefix + \" lic name: \" + licName);\n      if (filename.toLowerCase().startsWith(prefix.toLowerCase())) {\n        result = new File(file.getParentFile(), licName);\n        UpdateableInt ui = licenseNames.get(licName);\n        ui.theInt++;\n      } else {\n      }\n\n    }\n    //System.out.println(\"License File: \" + result + \" for file: \" + file);\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f3e6224692d757db33136ebfbea31015f8b60fd0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f3e6224692d757db33136ebfbea31015f8b60fd0"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f3e6224692d757db33136ebfbea31015f8b60fd0"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["f3e6224692d757db33136ebfbea31015f8b60fd0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"f3e6224692d757db33136ebfbea31015f8b60fd0":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f3e6224692d757db33136ebfbea31015f8b60fd0","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}