{"path":"solr/core/src/test/org/apache/solr/schema/TestPointFields#dynFieldRegexesForType(Class[#-extends-FieldType]).mjava","commits":[{"id":"79900e89f08cc17c4bcf49789dd61a2236ee7840","date":1492541915,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestPointFields#dynFieldRegexesForType(Class[#-extends-FieldType]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Given a FieldType, return the list of DynamicField 'regexes' for all declared \n   * DynamicFields that use that FieldType.\n   *\n   * @see IndexSchema#getDynamicFields\n   * @see DynamicField#getRegex\n   */\n  private static SortedSet<String> dynFieldRegexesForType(final Class<? extends FieldType> clazz) {\n    SortedSet<String> typesToTest = new TreeSet<>();\n    for (DynamicField dynField : h.getCore().getLatestSchema().getDynamicFields()) {\n      if (clazz.isInstance(dynField.getPrototype().getType())) {\n        typesToTest.add(dynField.getRegex());\n      }\n    }\n    return typesToTest;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestPointFields#dynFieldRegexesForType(Class[#-extends-FieldType]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Given a FieldType, return the list of DynamicField 'regexes' for all declared \n   * DynamicFields that use that FieldType.\n   *\n   * @see IndexSchema#getDynamicFields\n   * @see DynamicField#getRegex\n   */\n  private static SortedSet<String> dynFieldRegexesForType(final Class<? extends FieldType> clazz) {\n    SortedSet<String> typesToTest = new TreeSet<>();\n    for (DynamicField dynField : h.getCore().getLatestSchema().getDynamicFields()) {\n      if (clazz.isInstance(dynField.getPrototype().getType())) {\n        typesToTest.add(dynField.getRegex());\n      }\n    }\n    return typesToTest;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"79900e89f08cc17c4bcf49789dd61a2236ee7840":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["79900e89f08cc17c4bcf49789dd61a2236ee7840"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","79900e89f08cc17c4bcf49789dd61a2236ee7840"],"79900e89f08cc17c4bcf49789dd61a2236ee7840":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}