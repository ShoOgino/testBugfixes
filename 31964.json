{"path":"solr/core/src/test/org/apache/solr/handler/component/TestDistributedStatsComponentCardinality#TestDistributedStatsComponentCardinality().mjava","commits":[{"id":"4a4e2c829188fb99886a64558664d79c9ac0fdf1","date":1431021538,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TestDistributedStatsComponentCardinality#TestDistributedStatsComponentCardinality().mjava","pathOld":"/dev/null","sourceNew":"  public TestDistributedStatsComponentCardinality() {\n    super();\n    // we want some randomness in the shard number, but we don't want multiple iterations\n    fixShardCount(TEST_NIGHTLY ? 7 : random().nextInt(3) + 1);\n\n    handle.put(\"maxScore\", SKIPVAL);\n    NUM_DOCS = TestUtil.nextInt(random(), 10000, 15000);\n    MAX_LONG = TestUtil.nextLong(random(), 0, NUM_DOCS * BIG_PRIME);\n    MIN_LONG = MAX_LONG - (((long)NUM_DOCS-1) * BIG_PRIME);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"351efe6fdecf9af62134d37ec2582e4a0331a4dc","date":1498149096,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TestDistributedStatsComponentCardinality#TestDistributedStatsComponentCardinality().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TestDistributedStatsComponentCardinality#TestDistributedStatsComponentCardinality().mjava","sourceNew":"  public TestDistributedStatsComponentCardinality() {\n    // we need DVs on point fields to compute stats\n    if (Boolean.getBoolean(NUMERIC_POINTS_SYSPROP)) System.setProperty(NUMERIC_DOCVALUES_SYSPROP,\"true\");\n    \n    // we want some randomness in the shard number, but we don't want multiple iterations\n    fixShardCount(TEST_NIGHTLY ? 7 : random().nextInt(3) + 1);\n\n    handle.put(\"maxScore\", SKIPVAL);\n    NUM_DOCS = TestUtil.nextInt(random(), 10000, 15000);\n    MAX_LONG = TestUtil.nextLong(random(), 0, NUM_DOCS * BIG_PRIME);\n    MIN_LONG = MAX_LONG - (((long)NUM_DOCS-1) * BIG_PRIME);\n  }\n\n","sourceOld":"  public TestDistributedStatsComponentCardinality() {\n    super();\n    // we want some randomness in the shard number, but we don't want multiple iterations\n    fixShardCount(TEST_NIGHTLY ? 7 : random().nextInt(3) + 1);\n\n    handle.put(\"maxScore\", SKIPVAL);\n    NUM_DOCS = TestUtil.nextInt(random(), 10000, 15000);\n    MAX_LONG = TestUtil.nextLong(random(), 0, NUM_DOCS * BIG_PRIME);\n    MIN_LONG = MAX_LONG - (((long)NUM_DOCS-1) * BIG_PRIME);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TestDistributedStatsComponentCardinality#TestDistributedStatsComponentCardinality().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TestDistributedStatsComponentCardinality#TestDistributedStatsComponentCardinality().mjava","sourceNew":"  public TestDistributedStatsComponentCardinality() {\n    // we need DVs on point fields to compute stats\n    if (Boolean.getBoolean(NUMERIC_POINTS_SYSPROP)) System.setProperty(NUMERIC_DOCVALUES_SYSPROP,\"true\");\n    \n    // we want some randomness in the shard number, but we don't want multiple iterations\n    fixShardCount(TEST_NIGHTLY ? 7 : random().nextInt(3) + 1);\n\n    handle.put(\"maxScore\", SKIPVAL);\n    NUM_DOCS = TestUtil.nextInt(random(), 10000, 15000);\n    MAX_LONG = TestUtil.nextLong(random(), 0, NUM_DOCS * BIG_PRIME);\n    MIN_LONG = MAX_LONG - (((long)NUM_DOCS-1) * BIG_PRIME);\n  }\n\n","sourceOld":"  public TestDistributedStatsComponentCardinality() {\n    super();\n    // we want some randomness in the shard number, but we don't want multiple iterations\n    fixShardCount(TEST_NIGHTLY ? 7 : random().nextInt(3) + 1);\n\n    handle.put(\"maxScore\", SKIPVAL);\n    NUM_DOCS = TestUtil.nextInt(random(), 10000, 15000);\n    MAX_LONG = TestUtil.nextLong(random(), 0, NUM_DOCS * BIG_PRIME);\n    MIN_LONG = MAX_LONG - (((long)NUM_DOCS-1) * BIG_PRIME);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TestDistributedStatsComponentCardinality#TestDistributedStatsComponentCardinality().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TestDistributedStatsComponentCardinality#TestDistributedStatsComponentCardinality().mjava","sourceNew":"  public TestDistributedStatsComponentCardinality() {\n    // we need DVs on point fields to compute stats\n    if (Boolean.getBoolean(NUMERIC_POINTS_SYSPROP)) System.setProperty(NUMERIC_DOCVALUES_SYSPROP,\"true\");\n    \n    // we want some randomness in the shard number, but we don't want multiple iterations\n    fixShardCount(TEST_NIGHTLY ? 7 : random().nextInt(3) + 1);\n\n    handle.put(\"maxScore\", SKIPVAL);\n    NUM_DOCS = TestUtil.nextInt(random(), 10000, 15000);\n    MAX_LONG = TestUtil.nextLong(random(), 0, NUM_DOCS * BIG_PRIME);\n    MIN_LONG = MAX_LONG - (((long)NUM_DOCS-1) * BIG_PRIME);\n  }\n\n","sourceOld":"  public TestDistributedStatsComponentCardinality() {\n    super();\n    // we want some randomness in the shard number, but we don't want multiple iterations\n    fixShardCount(TEST_NIGHTLY ? 7 : random().nextInt(3) + 1);\n\n    handle.put(\"maxScore\", SKIPVAL);\n    NUM_DOCS = TestUtil.nextInt(random(), 10000, 15000);\n    MAX_LONG = TestUtil.nextLong(random(), 0, NUM_DOCS * BIG_PRIME);\n    MIN_LONG = MAX_LONG - (((long)NUM_DOCS-1) * BIG_PRIME);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"351efe6fdecf9af62134d37ec2582e4a0331a4dc":["4a4e2c829188fb99886a64558664d79c9ac0fdf1"],"4a4e2c829188fb99886a64558664d79c9ac0fdf1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["4a4e2c829188fb99886a64558664d79c9ac0fdf1","351efe6fdecf9af62134d37ec2582e4a0331a4dc"],"28288370235ed02234a64753cdbf0c6ec096304a":["4a4e2c829188fb99886a64558664d79c9ac0fdf1","351efe6fdecf9af62134d37ec2582e4a0331a4dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"351efe6fdecf9af62134d37ec2582e4a0331a4dc":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"4a4e2c829188fb99886a64558664d79c9ac0fdf1":["351efe6fdecf9af62134d37ec2582e4a0331a4dc","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4a4e2c829188fb99886a64558664d79c9ac0fdf1"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}