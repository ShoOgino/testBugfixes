{"path":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser[ExtendedDismaxQParserPlugin].ExtendedSolrQueryParser#newFieldQuery(Analyzer,String,String,boolean).mjava","commits":[{"id":"97a1d065fbe56cbf9eaf80cd3f8d4477203dda70","date":1315971416,"type":0,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser[ExtendedDismaxQParserPlugin].ExtendedSolrQueryParser#newFieldQuery(Analyzer,String,String,boolean).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    protected Query newFieldQuery(Analyzer analyzer, String field, String queryText, boolean quoted) throws ParseException {\n      Analyzer actualAnalyzer;\n      if (removeStopFilter) {\n        if (nonStopFilterAnalyzerPerField == null) {\n          nonStopFilterAnalyzerPerField = new HashMap<String, Analyzer>();\n        }\n        actualAnalyzer = nonStopFilterAnalyzerPerField.get(field);\n        if (actualAnalyzer == null) {\n          actualAnalyzer = noStopwordFilterAnalyzer(field);\n        }\n      } else {\n        actualAnalyzer = parser.getReq().getSchema().getFieldType(field).getQueryAnalyzer();\n      }\n      return super.newFieldQuery(actualAnalyzer, field, queryText, quoted);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cdb67100dc016748799a77218aa409478372d79","date":1353699950,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser[ExtendedDismaxQParserPlugin].ExtendedSolrQueryParser#newFieldQuery(Analyzer,String,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser[ExtendedDismaxQParserPlugin].ExtendedSolrQueryParser#newFieldQuery(Analyzer,String,String,boolean).mjava","sourceNew":"    @Override\n    protected Query newFieldQuery(Analyzer analyzer, String field, String queryText, boolean quoted) throws SyntaxError {\n      Analyzer actualAnalyzer;\n      if (removeStopFilter) {\n        if (nonStopFilterAnalyzerPerField == null) {\n          nonStopFilterAnalyzerPerField = new HashMap<String, Analyzer>();\n        }\n        actualAnalyzer = nonStopFilterAnalyzerPerField.get(field);\n        if (actualAnalyzer == null) {\n          actualAnalyzer = noStopwordFilterAnalyzer(field);\n        }\n      } else {\n        actualAnalyzer = parser.getReq().getSchema().getFieldType(field).getQueryAnalyzer();\n      }\n      return super.newFieldQuery(actualAnalyzer, field, queryText, quoted);\n    }\n\n","sourceOld":"    @Override\n    protected Query newFieldQuery(Analyzer analyzer, String field, String queryText, boolean quoted) throws ParseException {\n      Analyzer actualAnalyzer;\n      if (removeStopFilter) {\n        if (nonStopFilterAnalyzerPerField == null) {\n          nonStopFilterAnalyzerPerField = new HashMap<String, Analyzer>();\n        }\n        actualAnalyzer = nonStopFilterAnalyzerPerField.get(field);\n        if (actualAnalyzer == null) {\n          actualAnalyzer = noStopwordFilterAnalyzer(field);\n        }\n      } else {\n        actualAnalyzer = parser.getReq().getSchema().getFieldType(field).getQueryAnalyzer();\n      }\n      return super.newFieldQuery(actualAnalyzer, field, queryText, quoted);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser[ExtendedDismaxQParserPlugin].ExtendedSolrQueryParser#newFieldQuery(Analyzer,String,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser[ExtendedDismaxQParserPlugin].ExtendedSolrQueryParser#newFieldQuery(Analyzer,String,String,boolean).mjava","sourceNew":"    @Override\n    protected Query newFieldQuery(Analyzer analyzer, String field, String queryText, boolean quoted) throws SyntaxError {\n      Analyzer actualAnalyzer;\n      if (removeStopFilter) {\n        if (nonStopFilterAnalyzerPerField == null) {\n          nonStopFilterAnalyzerPerField = new HashMap<String, Analyzer>();\n        }\n        actualAnalyzer = nonStopFilterAnalyzerPerField.get(field);\n        if (actualAnalyzer == null) {\n          actualAnalyzer = noStopwordFilterAnalyzer(field);\n        }\n      } else {\n        actualAnalyzer = parser.getReq().getSchema().getFieldType(field).getQueryAnalyzer();\n      }\n      return super.newFieldQuery(actualAnalyzer, field, queryText, quoted);\n    }\n\n","sourceOld":"    @Override\n    protected Query newFieldQuery(Analyzer analyzer, String field, String queryText, boolean quoted) throws ParseException {\n      Analyzer actualAnalyzer;\n      if (removeStopFilter) {\n        if (nonStopFilterAnalyzerPerField == null) {\n          nonStopFilterAnalyzerPerField = new HashMap<String, Analyzer>();\n        }\n        actualAnalyzer = nonStopFilterAnalyzerPerField.get(field);\n        if (actualAnalyzer == null) {\n          actualAnalyzer = noStopwordFilterAnalyzer(field);\n        }\n      } else {\n        actualAnalyzer = parser.getReq().getSchema().getFieldType(field).getQueryAnalyzer();\n      }\n      return super.newFieldQuery(actualAnalyzer, field, queryText, quoted);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7e79e31f55cbb444e3023d430a340658755aa31","date":1357666399,"type":5,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser.ExtendedSolrQueryParser#newFieldQuery(Analyzer,String,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser[ExtendedDismaxQParserPlugin].ExtendedSolrQueryParser#newFieldQuery(Analyzer,String,String,boolean).mjava","sourceNew":"    @Override\n    protected Query newFieldQuery(Analyzer analyzer, String field, String queryText, boolean quoted) throws SyntaxError {\n      Analyzer actualAnalyzer;\n      if (removeStopFilter) {\n        if (nonStopFilterAnalyzerPerField == null) {\n          nonStopFilterAnalyzerPerField = new HashMap<String, Analyzer>();\n        }\n        actualAnalyzer = nonStopFilterAnalyzerPerField.get(field);\n        if (actualAnalyzer == null) {\n          actualAnalyzer = noStopwordFilterAnalyzer(field);\n        }\n      } else {\n        actualAnalyzer = parser.getReq().getSchema().getFieldType(field).getQueryAnalyzer();\n      }\n      return super.newFieldQuery(actualAnalyzer, field, queryText, quoted);\n    }\n\n","sourceOld":"    @Override\n    protected Query newFieldQuery(Analyzer analyzer, String field, String queryText, boolean quoted) throws SyntaxError {\n      Analyzer actualAnalyzer;\n      if (removeStopFilter) {\n        if (nonStopFilterAnalyzerPerField == null) {\n          nonStopFilterAnalyzerPerField = new HashMap<String, Analyzer>();\n        }\n        actualAnalyzer = nonStopFilterAnalyzerPerField.get(field);\n        if (actualAnalyzer == null) {\n          actualAnalyzer = noStopwordFilterAnalyzer(field);\n        }\n      } else {\n        actualAnalyzer = parser.getReq().getSchema().getFieldType(field).getQueryAnalyzer();\n      }\n      return super.newFieldQuery(actualAnalyzer, field, queryText, quoted);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e6354dd7c71fe122926fc53d7d29f715b1283db","date":1357915185,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser.ExtendedSolrQueryParser#newFieldQuery(Analyzer,String,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser[ExtendedDismaxQParserPlugin].ExtendedSolrQueryParser#newFieldQuery(Analyzer,String,String,boolean).mjava","sourceNew":"    @Override\n    protected Query newFieldQuery(Analyzer analyzer, String field, String queryText, boolean quoted) throws SyntaxError {\n      Analyzer actualAnalyzer;\n      if (removeStopFilter) {\n        if (nonStopFilterAnalyzerPerField == null) {\n          nonStopFilterAnalyzerPerField = new HashMap<String, Analyzer>();\n        }\n        actualAnalyzer = nonStopFilterAnalyzerPerField.get(field);\n        if (actualAnalyzer == null) {\n          actualAnalyzer = noStopwordFilterAnalyzer(field);\n        }\n      } else {\n        actualAnalyzer = parser.getReq().getSchema().getFieldType(field).getQueryAnalyzer();\n      }\n      return super.newFieldQuery(actualAnalyzer, field, queryText, quoted);\n    }\n\n","sourceOld":"    @Override\n    protected Query newFieldQuery(Analyzer analyzer, String field, String queryText, boolean quoted) throws SyntaxError {\n      Analyzer actualAnalyzer;\n      if (removeStopFilter) {\n        if (nonStopFilterAnalyzerPerField == null) {\n          nonStopFilterAnalyzerPerField = new HashMap<String, Analyzer>();\n        }\n        actualAnalyzer = nonStopFilterAnalyzerPerField.get(field);\n        if (actualAnalyzer == null) {\n          actualAnalyzer = noStopwordFilterAnalyzer(field);\n        }\n      } else {\n        actualAnalyzer = parser.getReq().getSchema().getFieldType(field).getQueryAnalyzer();\n      }\n      return super.newFieldQuery(actualAnalyzer, field, queryText, quoted);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3cdb67100dc016748799a77218aa409478372d79":["97a1d065fbe56cbf9eaf80cd3f8d4477203dda70"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["97a1d065fbe56cbf9eaf80cd3f8d4477203dda70","3cdb67100dc016748799a77218aa409478372d79"],"c7e79e31f55cbb444e3023d430a340658755aa31":["3cdb67100dc016748799a77218aa409478372d79"],"97a1d065fbe56cbf9eaf80cd3f8d4477203dda70":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["407687e67faf6e1f02a211ca078d8e3eed631027","c7e79e31f55cbb444e3023d430a340658755aa31"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c7e79e31f55cbb444e3023d430a340658755aa31"]},"commit2Childs":{"3cdb67100dc016748799a77218aa409478372d79":["407687e67faf6e1f02a211ca078d8e3eed631027","c7e79e31f55cbb444e3023d430a340658755aa31"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["97a1d065fbe56cbf9eaf80cd3f8d4477203dda70"],"407687e67faf6e1f02a211ca078d8e3eed631027":["4e6354dd7c71fe122926fc53d7d29f715b1283db"],"97a1d065fbe56cbf9eaf80cd3f8d4477203dda70":["3cdb67100dc016748799a77218aa409478372d79","407687e67faf6e1f02a211ca078d8e3eed631027"],"c7e79e31f55cbb444e3023d430a340658755aa31":["4e6354dd7c71fe122926fc53d7d29f715b1283db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4e6354dd7c71fe122926fc53d7d29f715b1283db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}