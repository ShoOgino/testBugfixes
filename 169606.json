{"path":"src/solrj/org/apache/solr/client/solrj/request/QueryRequest#process(SolrServer).mjava","commits":[{"id":"e3602d5eab954caecc726ab136ad580ac1ceb917","date":1228676831,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/solrj/org/apache/solr/client/solrj/request/QueryRequest#process(SolrServer).mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/request/QueryRequest#process(SolrServer).mjava","sourceNew":"  @Override\n  public QueryResponse process( SolrServer server ) throws SolrServerException \n  {\n    try \n    {\n      long startTime = System.currentTimeMillis();\n      QueryResponse res = new QueryResponse( server.request( this ), server );\n      res.setElapsedTime( System.currentTimeMillis()-startTime );\n      return res;\n    } \n    catch (Exception e) \n    {\n      throw new SolrServerException(\"Error executing query\", e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public QueryResponse process( SolrServer server ) throws SolrServerException \n  {\n    try \n    {\n      long startTime = System.currentTimeMillis();\n      QueryResponse res = new QueryResponse( server.request( this ), server );\n      res.setElapsedTime( System.currentTimeMillis()-startTime );\n      return res;\n    } \n    catch (Exception e) \n    {\n      throw new SolrServerException(\"Error executing query\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3f15a2f4d425b2343b71b8ace594a23a4c1c59c","date":1245580938,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/solrj/org/apache/solr/client/solrj/request/QueryRequest#process(SolrServer).mjava","pathOld":"src/solrj/org/apache/solr/client/solrj/request/QueryRequest#process(SolrServer).mjava","sourceNew":"  @Override\n  public QueryResponse process( SolrServer server ) throws SolrServerException \n  {\n    try {\n      long startTime = System.currentTimeMillis();\n      QueryResponse res = new QueryResponse( server.request( this ), server );\n      res.setElapsedTime( System.currentTimeMillis()-startTime );\n      return res;\n    } catch (SolrServerException e){\n      throw e;\n    } catch (Exception e) {\n      throw new SolrServerException(\"Error executing query\", e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public QueryResponse process( SolrServer server ) throws SolrServerException \n  {\n    try \n    {\n      long startTime = System.currentTimeMillis();\n      QueryResponse res = new QueryResponse( server.request( this ), server );\n      res.setElapsedTime( System.currentTimeMillis()-startTime );\n      return res;\n    } \n    catch (Exception e) \n    {\n      throw new SolrServerException(\"Error executing query\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/solrj/org/apache/solr/client/solrj/request/QueryRequest#process(SolrServer).mjava","pathOld":"src/solrj/org/apache/solr/client/solrj/request/QueryRequest#process(SolrServer).mjava","sourceNew":"  @Override\n  public QueryResponse process( SolrServer server ) throws SolrServerException \n  {\n    try {\n      long startTime = System.currentTimeMillis();\n      QueryResponse res = new QueryResponse( server.request( this ), server );\n      res.setElapsedTime( System.currentTimeMillis()-startTime );\n      return res;\n    } catch (SolrServerException e){\n      throw e;\n    } catch (Exception e) {\n      throw new SolrServerException(\"Error executing query\", e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public QueryResponse process( SolrServer server ) throws SolrServerException \n  {\n    try {\n      long startTime = System.currentTimeMillis();\n      QueryResponse res = new QueryResponse( server.request( this ), server );\n      res.setElapsedTime( System.currentTimeMillis()-startTime );\n      return res;\n    } catch (SolrServerException e){\n      throw e;\n    } catch (Exception e) {\n      throw new SolrServerException(\"Error executing query\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["a3f15a2f4d425b2343b71b8ace594a23a4c1c59c"],"a3f15a2f4d425b2343b71b8ace594a23a4c1c59c":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["a3f15a2f4d425b2343b71b8ace594a23a4c1c59c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"a3f15a2f4d425b2343b71b8ace594a23a4c1c59c":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}