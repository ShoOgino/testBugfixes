{"path":"solr/src/java/org/apache/solr/util/CharArrayMap.EntrySet#contains(Object).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/CharArrayMap.EntrySet#contains(Object).mjava","pathOld":"/dev/null","sourceNew":"    public boolean contains(Object o) {\n      if (!(o instanceof Map.Entry))\n        return false;\n      Map.Entry e = (Map.Entry)o;\n      Object key = e.getKey();\n      if (key==null) return false;  // we don't support null keys\n      Object val = e.getValue();\n      Object v = get(key);\n      return v==null ? val==null : v.equals(val);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/util/CharArrayMap.EntrySet#contains(Object).mjava","sourceNew":null,"sourceOld":"    public boolean contains(Object o) {\n      if (!(o instanceof Map.Entry))\n        return false;\n      Map.Entry e = (Map.Entry)o;\n      Object key = e.getKey();\n      if (key==null) return false;  // we don't support null keys\n      Object val = e.getValue();\n      Object v = get(key);\n      return v==null ? val==null : v.equals(val);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/CharArrayMap.EntrySet#contains(Object).mjava","pathOld":"src/java/org/apache/solr/util/CharArrayMap.EntrySet#contains(Object).mjava","sourceNew":"    public boolean contains(Object o) {\n      if (!(o instanceof Map.Entry))\n        return false;\n      Map.Entry e = (Map.Entry)o;\n      Object key = e.getKey();\n      if (key==null) return false;  // we don't support null keys\n      Object val = e.getValue();\n      Object v = get(key);\n      return v==null ? val==null : v.equals(val);\n    }\n\n","sourceOld":"    public boolean contains(Object o) {\n      if (!(o instanceof Map.Entry))\n        return false;\n      Map.Entry e = (Map.Entry)o;\n      Object key = e.getKey();\n      if (key==null) return false;  // we don't support null keys\n      Object val = e.getValue();\n      Object v = get(key);\n      return v==null ? val==null : v.equals(val);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/util/CharArrayMap.EntrySet#contains(Object).mjava","pathOld":"/dev/null","sourceNew":"    public boolean contains(Object o) {\n      if (!(o instanceof Map.Entry))\n        return false;\n      Map.Entry e = (Map.Entry)o;\n      Object key = e.getKey();\n      if (key==null) return false;  // we don't support null keys\n      Object val = e.getValue();\n      Object v = get(key);\n      return v==null ? val==null : v.equals(val);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9c8b12bda3f5864b27e3e04df1be4f6736ec067a","date":1270088127,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/util/CharArrayMap.EntrySet#contains(Object).mjava","sourceNew":null,"sourceOld":"    public boolean contains(Object o) {\n      if (!(o instanceof Map.Entry))\n        return false;\n      Map.Entry e = (Map.Entry)o;\n      Object key = e.getKey();\n      if (key==null) return false;  // we don't support null keys\n      Object val = e.getValue();\n      Object v = get(key);\n      return v==null ? val==null : v.equals(val);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9c8b12bda3f5864b27e3e04df1be4f6736ec067a":["1da8d55113b689b06716246649de6f62430f15c0"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9c8b12bda3f5864b27e3e04df1be4f6736ec067a"]},"commit2Childs":{"9c8b12bda3f5864b27e3e04df1be4f6736ec067a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1da8d55113b689b06716246649de6f62430f15c0":["9c8b12bda3f5864b27e3e04df1be4f6736ec067a"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}