{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence#setRepetitions(int).mjava","commits":[{"id":"b2e70b697d9f5a6130848741a4f0cdc08a1fe258","date":1168661303,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence#setRepetitions(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\r\n   * @param repetitions The repetitions to set.\r\n   */\r\n  public void setRepetitions(int repetitions) {\r\n    this.repetitions = repetitions;\r\n    setSequenceName();\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81573e29e6e5db648330b225c60d44b1c3eb388e","date":1174927593,"type":3,"author":"Doron Cohen","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence#setRepetitions(int).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence#setRepetitions(int).mjava","sourceNew":"  /**\r\n   * @param repetitions The repetitions to set.\r\n   * @throws Exception \r\n   */\r\n  public void setRepetitions(int repetitions) throws Exception {\r\n    this.repetitions = repetitions;\r\n    if (repetitions==REPEAT_EXHAUST && isParallel()) {\r\n      throw new Exception(\"REPEAT_EXHAUST is not allowed for parallel tasks\");\r\n    }\r\n    setSequenceName();\r\n  }\r\n\n","sourceOld":"  /**\r\n   * @param repetitions The repetitions to set.\r\n   */\r\n  public void setRepetitions(int repetitions) {\r\n    this.repetitions = repetitions;\r\n    setSequenceName();\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3738fa43eaa87dc7b393fe98b04cde1019e20bac","date":1175557034,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence#setRepetitions(int).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence#setRepetitions(int).mjava","sourceNew":"  /**\n   * @param repetitions The repetitions to set.\n   * @throws Exception \n   */\n  public void setRepetitions(int repetitions) throws Exception {\n    this.repetitions = repetitions;\n    if (repetitions==REPEAT_EXHAUST && isParallel()) {\n      throw new Exception(\"REPEAT_EXHAUST is not allowed for parallel tasks\");\n    }\n    setSequenceName();\n  }\n\n","sourceOld":"  /**\r\n   * @param repetitions The repetitions to set.\r\n   * @throws Exception \r\n   */\r\n  public void setRepetitions(int repetitions) throws Exception {\r\n    this.repetitions = repetitions;\r\n    if (repetitions==REPEAT_EXHAUST && isParallel()) {\r\n      throw new Exception(\"REPEAT_EXHAUST is not allowed for parallel tasks\");\r\n    }\r\n    setSequenceName();\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9b29f7e4255869b50fe9fb21578b4f67a8f108c9","date":1176492603,"type":3,"author":"Doron Cohen","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence#setRepetitions(int).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence#setRepetitions(int).mjava","sourceNew":"  /**\n   * @param repetitions The repetitions to set.\n   * @throws Exception \n   */\n  public void setRepetitions(int repetitions) throws Exception {\n    this.repetitions = repetitions;\n    if (repetitions==REPEAT_EXHAUST) {\n      if (isParallel()) {\n        throw new Exception(\"REPEAT_EXHAUST is not allowed for parallel tasks\");\n      }\n      if (getRunData().getConfig().get(\"doc.maker.forever\",true)) {\n        throw new Exception(\"REPEAT_EXHAUST requires setting doc.maker.forever=false\");\n      }\n    }\n    setSequenceName();\n  }\n\n","sourceOld":"  /**\n   * @param repetitions The repetitions to set.\n   * @throws Exception \n   */\n  public void setRepetitions(int repetitions) throws Exception {\n    this.repetitions = repetitions;\n    if (repetitions==REPEAT_EXHAUST && isParallel()) {\n      throw new Exception(\"REPEAT_EXHAUST is not allowed for parallel tasks\");\n    }\n    setSequenceName();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a1d7886f5b663e876f02df6f9d56b2f5528c4ea1","date":1229762709,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence#setRepetitions(int).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence#setRepetitions(int).mjava","sourceNew":"  /**\n   * @param repetitions The repetitions to set.\n   * @throws Exception \n   */\n  public void setRepetitions(int repetitions) throws Exception {\n    fixedTime = false;\n    this.repetitions = repetitions;\n    if (repetitions==REPEAT_EXHAUST) {\n      if (isParallel()) {\n        throw new Exception(\"REPEAT_EXHAUST is not allowed for parallel tasks\");\n      }\n      if (getRunData().getConfig().get(\"doc.maker.forever\",true)) {\n        throw new Exception(\"REPEAT_EXHAUST requires setting doc.maker.forever=false\");\n      }\n    }\n    setSequenceName();\n  }\n\n","sourceOld":"  /**\n   * @param repetitions The repetitions to set.\n   * @throws Exception \n   */\n  public void setRepetitions(int repetitions) throws Exception {\n    this.repetitions = repetitions;\n    if (repetitions==REPEAT_EXHAUST) {\n      if (isParallel()) {\n        throw new Exception(\"REPEAT_EXHAUST is not allowed for parallel tasks\");\n      }\n      if (getRunData().getConfig().get(\"doc.maker.forever\",true)) {\n        throw new Exception(\"REPEAT_EXHAUST requires setting doc.maker.forever=false\");\n      }\n    }\n    setSequenceName();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b","date":1245355139,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence#setRepetitions(int).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence#setRepetitions(int).mjava","sourceNew":"  /**\n   * @param repetitions The repetitions to set.\n   * @throws Exception \n   */\n  public void setRepetitions(int repetitions) throws Exception {\n    fixedTime = false;\n    this.repetitions = repetitions;\n    if (repetitions==REPEAT_EXHAUST) {\n      if (isParallel()) {\n        throw new Exception(\"REPEAT_EXHAUST is not allowed for parallel tasks\");\n      }\n      if (getRunData().getConfig().get(\"content.source.forever\",true)) {\n        throw new Exception(\"REPEAT_EXHAUST requires setting content.source.forever=false\");\n      }\n    }\n    setSequenceName();\n  }\n\n","sourceOld":"  /**\n   * @param repetitions The repetitions to set.\n   * @throws Exception \n   */\n  public void setRepetitions(int repetitions) throws Exception {\n    fixedTime = false;\n    this.repetitions = repetitions;\n    if (repetitions==REPEAT_EXHAUST) {\n      if (isParallel()) {\n        throw new Exception(\"REPEAT_EXHAUST is not allowed for parallel tasks\");\n      }\n      if (getRunData().getConfig().get(\"doc.maker.forever\",true)) {\n        throw new Exception(\"REPEAT_EXHAUST requires setting doc.maker.forever=false\");\n      }\n    }\n    setSequenceName();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f5ebdc25cde64f1bd2b6337721292bdd1b23f714","date":1258737814,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence#setRepetitions(int).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence#setRepetitions(int).mjava","sourceNew":"  /**\n   * @param repetitions The repetitions to set.\n   * @throws Exception \n   */\n  public void setRepetitions(int repetitions) throws Exception {\n    fixedTime = false;\n    this.repetitions = repetitions;\n    if (repetitions==REPEAT_EXHAUST) {\n      if (isParallel()) {\n        throw new Exception(\"REPEAT_EXHAUST is not allowed for parallel tasks\");\n      }\n    }\n    setSequenceName();\n  }\n\n","sourceOld":"  /**\n   * @param repetitions The repetitions to set.\n   * @throws Exception \n   */\n  public void setRepetitions(int repetitions) throws Exception {\n    fixedTime = false;\n    this.repetitions = repetitions;\n    if (repetitions==REPEAT_EXHAUST) {\n      if (isParallel()) {\n        throw new Exception(\"REPEAT_EXHAUST is not allowed for parallel tasks\");\n      }\n      if (getRunData().getConfig().get(\"content.source.forever\",true)) {\n        throw new Exception(\"REPEAT_EXHAUST requires setting content.source.forever=false\");\n      }\n    }\n    setSequenceName();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence#setRepetitions(int).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence#setRepetitions(int).mjava","sourceNew":"  /**\n   * @param repetitions The repetitions to set.\n   * @throws Exception \n   */\n  public void setRepetitions(int repetitions) throws Exception {\n    fixedTime = false;\n    this.repetitions = repetitions;\n    if (repetitions==REPEAT_EXHAUST) {\n      if (isParallel()) {\n        throw new Exception(\"REPEAT_EXHAUST is not allowed for parallel tasks\");\n      }\n    }\n    setSequenceName();\n  }\n\n","sourceOld":"  /**\n   * @param repetitions The repetitions to set.\n   * @throws Exception \n   */\n  public void setRepetitions(int repetitions) throws Exception {\n    fixedTime = false;\n    this.repetitions = repetitions;\n    if (repetitions==REPEAT_EXHAUST) {\n      if (isParallel()) {\n        throw new Exception(\"REPEAT_EXHAUST is not allowed for parallel tasks\");\n      }\n    }\n    setSequenceName();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b":["a1d7886f5b663e876f02df6f9d56b2f5528c4ea1"],"a1d7886f5b663e876f02df6f9d56b2f5528c4ea1":["9b29f7e4255869b50fe9fb21578b4f67a8f108c9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9b29f7e4255869b50fe9fb21578b4f67a8f108c9":["3738fa43eaa87dc7b393fe98b04cde1019e20bac"],"3738fa43eaa87dc7b393fe98b04cde1019e20bac":["81573e29e6e5db648330b225c60d44b1c3eb388e"],"f5ebdc25cde64f1bd2b6337721292bdd1b23f714":["6944b9fa6d8ef96b83ae2d3a4332d03b3857355b"],"b2e70b697d9f5a6130848741a4f0cdc08a1fe258":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"81573e29e6e5db648330b225c60d44b1c3eb388e":["b2e70b697d9f5a6130848741a4f0cdc08a1fe258"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["f5ebdc25cde64f1bd2b6337721292bdd1b23f714"]},"commit2Childs":{"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b":["f5ebdc25cde64f1bd2b6337721292bdd1b23f714"],"a1d7886f5b663e876f02df6f9d56b2f5528c4ea1":["6944b9fa6d8ef96b83ae2d3a4332d03b3857355b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b2e70b697d9f5a6130848741a4f0cdc08a1fe258"],"9b29f7e4255869b50fe9fb21578b4f67a8f108c9":["a1d7886f5b663e876f02df6f9d56b2f5528c4ea1"],"3738fa43eaa87dc7b393fe98b04cde1019e20bac":["9b29f7e4255869b50fe9fb21578b4f67a8f108c9"],"f5ebdc25cde64f1bd2b6337721292bdd1b23f714":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"b2e70b697d9f5a6130848741a4f0cdc08a1fe258":["81573e29e6e5db648330b225c60d44b1c3eb388e"],"81573e29e6e5db648330b225c60d44b1c3eb388e":["3738fa43eaa87dc7b393fe98b04cde1019e20bac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}