{"path":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/UnifiedHighlighter#extractTerms(Query).mjava","commits":[{"id":"1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2","date":1475611903,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/UnifiedHighlighter#extractTerms(Query).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Calls {@link Weight#extractTerms(Set)} on an empty index for the query.\n   */\n  protected static SortedSet<Term> extractTerms(Query query) throws IOException {\n    SortedSet<Term> queryTerms = new TreeSet<>();\n    EMPTY_INDEXSEARCHER.createNormalizedWeight(query, false).extractTerms(queryTerms);\n    return queryTerms;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/UnifiedHighlighter#extractTerms(Query).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Calls {@link Weight#extractTerms(Set)} on an empty index for the query.\n   */\n  protected static SortedSet<Term> extractTerms(Query query) throws IOException {\n    SortedSet<Term> queryTerms = new TreeSet<>();\n    EMPTY_INDEXSEARCHER.createNormalizedWeight(query, false).extractTerms(queryTerms);\n    return queryTerms;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5675b3bced0b155f0ff8001ce2e1e502be7c92f6","date":1480972317,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/UnifiedHighlighter#extractTerms(Query).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/UnifiedHighlighter#extractTerms(Query).mjava","sourceNew":"  /**\n   * Calls {@link Weight#extractTerms(Set)} on an empty index for the query.\n   */\n  protected static Set<Term> extractTerms(Query query) throws IOException {\n    Set<Term> queryTerms = new HashSet<>();\n    EMPTY_INDEXSEARCHER.createNormalizedWeight(query, false).extractTerms(queryTerms);\n    return queryTerms;\n  }\n\n","sourceOld":"  /**\n   * Calls {@link Weight#extractTerms(Set)} on an empty index for the query.\n   */\n  protected static SortedSet<Term> extractTerms(Query query) throws IOException {\n    SortedSet<Term> queryTerms = new TreeSet<>();\n    EMPTY_INDEXSEARCHER.createNormalizedWeight(query, false).extractTerms(queryTerms);\n    return queryTerms;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee8992dea79b51ba77a3fd1a5c0f94a5f0b8808d","date":1481116359,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/UnifiedHighlighter#extractTerms(Query).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/UnifiedHighlighter#extractTerms(Query).mjava","sourceNew":"  /**\n   * Calls {@link Weight#extractTerms(Set)} on an empty index for the query.\n   */\n  protected static Set<Term> extractTerms(Query query) throws IOException {\n    Set<Term> queryTerms = new HashSet<>();\n    EMPTY_INDEXSEARCHER.createNormalizedWeight(query, false).extractTerms(queryTerms);\n    return queryTerms;\n  }\n\n","sourceOld":"  /**\n   * Calls {@link Weight#extractTerms(Set)} on an empty index for the query.\n   */\n  protected static SortedSet<Term> extractTerms(Query query) throws IOException {\n    SortedSet<Term> queryTerms = new TreeSet<>();\n    EMPTY_INDEXSEARCHER.createNormalizedWeight(query, false).extractTerms(queryTerms);\n    return queryTerms;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9856095f7afb5a607bf5e65077615ed91273508c","date":1481837697,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/UnifiedHighlighter#extractTerms(Query).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/UnifiedHighlighter#extractTerms(Query).mjava","sourceNew":"  /**\n   * Calls {@link Weight#extractTerms(Set)} on an empty index for the query.\n   */\n  protected static Set<Term> extractTerms(Query query) throws IOException {\n    Set<Term> queryTerms = new HashSet<>();\n    EMPTY_INDEXSEARCHER.createNormalizedWeight(query, false).extractTerms(queryTerms);\n    return queryTerms;\n  }\n\n","sourceOld":"  /**\n   * Calls {@link Weight#extractTerms(Set)} on an empty index for the query.\n   */\n  protected static SortedSet<Term> extractTerms(Query query) throws IOException {\n    SortedSet<Term> queryTerms = new TreeSet<>();\n    EMPTY_INDEXSEARCHER.createNormalizedWeight(query, false).extractTerms(queryTerms);\n    return queryTerms;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fc47cb7b4346802411bb432f501ed0673d7119e","date":1512640179,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/UnifiedHighlighter#extractTerms(Query).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/UnifiedHighlighter#extractTerms(Query).mjava","sourceNew":"  /**\n   * Calls {@link Weight#extractTerms(Set)} on an empty index for the query.\n   */\n  protected static Set<Term> extractTerms(Query query) throws IOException {\n    Set<Term> queryTerms = new HashSet<>();\n    EMPTY_INDEXSEARCHER.createNormalizedWeight(query, ScoreMode.COMPLETE_NO_SCORES).extractTerms(queryTerms);\n    return queryTerms;\n  }\n\n","sourceOld":"  /**\n   * Calls {@link Weight#extractTerms(Set)} on an empty index for the query.\n   */\n  protected static Set<Term> extractTerms(Query query) throws IOException {\n    Set<Term> queryTerms = new HashSet<>();\n    EMPTY_INDEXSEARCHER.createNormalizedWeight(query, false).extractTerms(queryTerms);\n    return queryTerms;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"417142ff08fda9cf0b72d5133e63097a166c6458","date":1512729693,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/UnifiedHighlighter#extractTerms(Query).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/UnifiedHighlighter#extractTerms(Query).mjava","sourceNew":"  /**\n   * Calls {@link Weight#extractTerms(Set)} on an empty index for the query.\n   */\n  protected static Set<Term> extractTerms(Query query) throws IOException {\n    Set<Term> queryTerms = new HashSet<>();\n    EMPTY_INDEXSEARCHER.createNormalizedWeight(query, ScoreMode.COMPLETE_NO_SCORES).extractTerms(queryTerms);\n    return queryTerms;\n  }\n\n","sourceOld":"  /**\n   * Calls {@link Weight#extractTerms(Set)} on an empty index for the query.\n   */\n  protected static Set<Term> extractTerms(Query query) throws IOException {\n    Set<Term> queryTerms = new HashSet<>();\n    EMPTY_INDEXSEARCHER.createNormalizedWeight(query, false).extractTerms(queryTerms);\n    return queryTerms;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"475584d5e08a22ad3fc7babefe006d77bc744567","date":1523282824,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/UnifiedHighlighter#extractTerms(Query).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/UnifiedHighlighter#extractTerms(Query).mjava","sourceNew":"  /**\n   * Calls {@link Weight#extractTerms(Set)} on an empty index for the query.\n   */\n  protected static Set<Term> extractTerms(Query query) throws IOException {\n    Set<Term> queryTerms = new HashSet<>();\n    EMPTY_INDEXSEARCHER.createWeight(EMPTY_INDEXSEARCHER.rewrite(query), ScoreMode.COMPLETE_NO_SCORES, 1).extractTerms(queryTerms);\n    return queryTerms;\n  }\n\n","sourceOld":"  /**\n   * Calls {@link Weight#extractTerms(Set)} on an empty index for the query.\n   */\n  protected static Set<Term> extractTerms(Query query) throws IOException {\n    Set<Term> queryTerms = new HashSet<>();\n    EMPTY_INDEXSEARCHER.createNormalizedWeight(query, ScoreMode.COMPLETE_NO_SCORES).extractTerms(queryTerms);\n    return queryTerms;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d58e44159788900f4a2113b84463dc3fbbf80f20","date":1523319203,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/UnifiedHighlighter#extractTerms(Query).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/UnifiedHighlighter#extractTerms(Query).mjava","sourceNew":"  /**\n   * Calls {@link Weight#extractTerms(Set)} on an empty index for the query.\n   */\n  protected static Set<Term> extractTerms(Query query) throws IOException {\n    Set<Term> queryTerms = new HashSet<>();\n    EMPTY_INDEXSEARCHER.createWeight(EMPTY_INDEXSEARCHER.rewrite(query), ScoreMode.COMPLETE_NO_SCORES, 1).extractTerms(queryTerms);\n    return queryTerms;\n  }\n\n","sourceOld":"  /**\n   * Calls {@link Weight#extractTerms(Set)} on an empty index for the query.\n   */\n  protected static Set<Term> extractTerms(Query query) throws IOException {\n    Set<Term> queryTerms = new HashSet<>();\n    EMPTY_INDEXSEARCHER.createNormalizedWeight(query, ScoreMode.COMPLETE_NO_SCORES).extractTerms(queryTerms);\n    return queryTerms;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7","date":1552575873,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/UnifiedHighlighter#extractTerms(Query).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/UnifiedHighlighter#extractTerms(Query).mjava","sourceNew":"  /**\n   * Extracts matching terms after rewriting against an empty index\n   */\n  protected static Set<Term> extractTerms(Query query) throws IOException {\n    Set<Term> queryTerms = new HashSet<>();\n    EMPTY_INDEXSEARCHER.rewrite(query).visit(QueryVisitor.termCollector(queryTerms));\n    return queryTerms;\n  }\n\n","sourceOld":"  /**\n   * Calls {@link Weight#extractTerms(Set)} on an empty index for the query.\n   */\n  protected static Set<Term> extractTerms(Query query) throws IOException {\n    Set<Term> queryTerms = new HashSet<>();\n    EMPTY_INDEXSEARCHER.createWeight(EMPTY_INDEXSEARCHER.rewrite(query), ScoreMode.COMPLETE_NO_SCORES, 1).extractTerms(queryTerms);\n    return queryTerms;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5675b3bced0b155f0ff8001ce2e1e502be7c92f6":["1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2"],"d58e44159788900f4a2113b84463dc3fbbf80f20":["417142ff08fda9cf0b72d5133e63097a166c6458","475584d5e08a22ad3fc7babefe006d77bc744567"],"475584d5e08a22ad3fc7babefe006d77bc744567":["417142ff08fda9cf0b72d5133e63097a166c6458"],"ee8992dea79b51ba77a3fd1a5c0f94a5f0b8808d":["1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2","5675b3bced0b155f0ff8001ce2e1e502be7c92f6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9856095f7afb5a607bf5e65077615ed91273508c":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","ee8992dea79b51ba77a3fd1a5c0f94a5f0b8808d"],"9fc47cb7b4346802411bb432f501ed0673d7119e":["ee8992dea79b51ba77a3fd1a5c0f94a5f0b8808d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7"],"5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7":["d58e44159788900f4a2113b84463dc3fbbf80f20"],"417142ff08fda9cf0b72d5133e63097a166c6458":["ee8992dea79b51ba77a3fd1a5c0f94a5f0b8808d","9fc47cb7b4346802411bb432f501ed0673d7119e"]},"commit2Childs":{"5675b3bced0b155f0ff8001ce2e1e502be7c92f6":["ee8992dea79b51ba77a3fd1a5c0f94a5f0b8808d"],"d58e44159788900f4a2113b84463dc3fbbf80f20":["5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7"],"475584d5e08a22ad3fc7babefe006d77bc744567":["d58e44159788900f4a2113b84463dc3fbbf80f20"],"ee8992dea79b51ba77a3fd1a5c0f94a5f0b8808d":["9856095f7afb5a607bf5e65077615ed91273508c","9fc47cb7b4346802411bb432f501ed0673d7119e","417142ff08fda9cf0b72d5133e63097a166c6458"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2":["5675b3bced0b155f0ff8001ce2e1e502be7c92f6","ee8992dea79b51ba77a3fd1a5c0f94a5f0b8808d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"9856095f7afb5a607bf5e65077615ed91273508c":[],"9fc47cb7b4346802411bb432f501ed0673d7119e":["417142ff08fda9cf0b72d5133e63097a166c6458"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["9856095f7afb5a607bf5e65077615ed91273508c"],"417142ff08fda9cf0b72d5133e63097a166c6458":["d58e44159788900f4a2113b84463dc3fbbf80f20","475584d5e08a22ad3fc7babefe006d77bc744567"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["9856095f7afb5a607bf5e65077615ed91273508c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}