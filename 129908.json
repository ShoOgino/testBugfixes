{"path":"modules/grouping/src/java/org/apache/lucene/search/grouping/AbstractSecondPassGroupingCollector#getTopGroups(int).mjava","commits":[{"id":"1fa60a501961bce2ff07ee1cde7c78699025547e","date":1307054117,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/AbstractSecondPassGroupingCollector#getTopGroups(int).mjava","pathOld":"/dev/null","sourceNew":"  public TopGroups<GROUP_VALUE_TYPE> getTopGroups(int withinGroupOffset) {\n    @SuppressWarnings(\"unchecked\")\n    final GroupDocs<GROUP_VALUE_TYPE>[] groupDocsResult = (GroupDocs<GROUP_VALUE_TYPE>[]) new GroupDocs[groups.size()];\n\n    int groupIDX = 0;\n    for(SearchGroup group : groups) {\n      final SearchGroupDocs<GROUP_VALUE_TYPE> groupDocs = groupMap.get(group.groupValue);\n      final TopDocs topDocs = groupDocs.collector.topDocs(withinGroupOffset, maxDocsPerGroup);\n      groupDocsResult[groupIDX++] = new GroupDocs<GROUP_VALUE_TYPE>(topDocs.getMaxScore(),\n                                                                    topDocs.totalHits,\n                                                                    topDocs.scoreDocs,\n                                                                    groupDocs.groupValue,\n                                                                    group.sortValues);\n    }\n\n    return new TopGroups<GROUP_VALUE_TYPE>(groupSort.getSort(),\n                                           withinGroupSort == null ? null : withinGroupSort.getSort(),\n                                           totalHitCount, totalGroupedHitCount, groupDocsResult);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["85d41890f2bad879e6a04c6dd7d2cf276f973994"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c715a0f99152be7566591f323c6c5a25725a1bcb","date":1307118449,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/AbstractSecondPassGroupingCollector#getTopGroups(int).mjava","pathOld":"/dev/null","sourceNew":"  public TopGroups<GROUP_VALUE_TYPE> getTopGroups(int withinGroupOffset) {\n    @SuppressWarnings(\"unchecked\")\n    final GroupDocs<GROUP_VALUE_TYPE>[] groupDocsResult = (GroupDocs<GROUP_VALUE_TYPE>[]) new GroupDocs[groups.size()];\n\n    int groupIDX = 0;\n    for(SearchGroup group : groups) {\n      final SearchGroupDocs<GROUP_VALUE_TYPE> groupDocs = groupMap.get(group.groupValue);\n      final TopDocs topDocs = groupDocs.collector.topDocs(withinGroupOffset, maxDocsPerGroup);\n      groupDocsResult[groupIDX++] = new GroupDocs<GROUP_VALUE_TYPE>(topDocs.getMaxScore(),\n                                                                    topDocs.totalHits,\n                                                                    topDocs.scoreDocs,\n                                                                    groupDocs.groupValue,\n                                                                    group.sortValues);\n    }\n\n    return new TopGroups<GROUP_VALUE_TYPE>(groupSort.getSort(),\n                                           withinGroupSort == null ? null : withinGroupSort.getSort(),\n                                           totalHitCount, totalGroupedHitCount, groupDocsResult);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e7c99bd45fa88a3d93a03fdd773053bef72268e","date":1307218088,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/AbstractSecondPassGroupingCollector#getTopGroups(int).mjava","pathOld":"/dev/null","sourceNew":"  public TopGroups<GROUP_VALUE_TYPE> getTopGroups(int withinGroupOffset) {\n    @SuppressWarnings(\"unchecked\")\n    final GroupDocs<GROUP_VALUE_TYPE>[] groupDocsResult = (GroupDocs<GROUP_VALUE_TYPE>[]) new GroupDocs[groups.size()];\n\n    int groupIDX = 0;\n    for(SearchGroup group : groups) {\n      final SearchGroupDocs<GROUP_VALUE_TYPE> groupDocs = groupMap.get(group.groupValue);\n      final TopDocs topDocs = groupDocs.collector.topDocs(withinGroupOffset, maxDocsPerGroup);\n      groupDocsResult[groupIDX++] = new GroupDocs<GROUP_VALUE_TYPE>(topDocs.getMaxScore(),\n                                                                    topDocs.totalHits,\n                                                                    topDocs.scoreDocs,\n                                                                    groupDocs.groupValue,\n                                                                    group.sortValues);\n    }\n\n    return new TopGroups<GROUP_VALUE_TYPE>(groupSort.getSort(),\n                                           withinGroupSort == null ? null : withinGroupSort.getSort(),\n                                           totalHitCount, totalGroupedHitCount, groupDocsResult);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"72c26897e0e0c4b4f3e73c8c43b1cf89f2564127","date":1331198608,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/AbstractSecondPassGroupingCollector#getTopGroups(int).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/AbstractSecondPassGroupingCollector#getTopGroups(int).mjava","sourceNew":"  public TopGroups<GROUP_VALUE_TYPE> getTopGroups(int withinGroupOffset) {\n    @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n    final GroupDocs<GROUP_VALUE_TYPE>[] groupDocsResult = (GroupDocs<GROUP_VALUE_TYPE>[]) new GroupDocs[groups.size()];\n\n    int groupIDX = 0;\n    for(SearchGroup group : groups) {\n      final SearchGroupDocs<GROUP_VALUE_TYPE> groupDocs = groupMap.get(group.groupValue);\n      final TopDocs topDocs = groupDocs.collector.topDocs(withinGroupOffset, maxDocsPerGroup);\n      groupDocsResult[groupIDX++] = new GroupDocs<GROUP_VALUE_TYPE>(topDocs.getMaxScore(),\n                                                                    topDocs.totalHits,\n                                                                    topDocs.scoreDocs,\n                                                                    groupDocs.groupValue,\n                                                                    group.sortValues);\n    }\n\n    return new TopGroups<GROUP_VALUE_TYPE>(groupSort.getSort(),\n                                           withinGroupSort == null ? null : withinGroupSort.getSort(),\n                                           totalHitCount, totalGroupedHitCount, groupDocsResult);\n  }\n\n","sourceOld":"  public TopGroups<GROUP_VALUE_TYPE> getTopGroups(int withinGroupOffset) {\n    @SuppressWarnings(\"unchecked\")\n    final GroupDocs<GROUP_VALUE_TYPE>[] groupDocsResult = (GroupDocs<GROUP_VALUE_TYPE>[]) new GroupDocs[groups.size()];\n\n    int groupIDX = 0;\n    for(SearchGroup group : groups) {\n      final SearchGroupDocs<GROUP_VALUE_TYPE> groupDocs = groupMap.get(group.groupValue);\n      final TopDocs topDocs = groupDocs.collector.topDocs(withinGroupOffset, maxDocsPerGroup);\n      groupDocsResult[groupIDX++] = new GroupDocs<GROUP_VALUE_TYPE>(topDocs.getMaxScore(),\n                                                                    topDocs.totalHits,\n                                                                    topDocs.scoreDocs,\n                                                                    groupDocs.groupValue,\n                                                                    group.sortValues);\n    }\n\n    return new TopGroups<GROUP_VALUE_TYPE>(groupSort.getSort(),\n                                           withinGroupSort == null ? null : withinGroupSort.getSort(),\n                                           totalHitCount, totalGroupedHitCount, groupDocsResult);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"eb008c8f8fc29e5deccfa43d8a054268ba1c5e48","date":1331199997,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/AbstractSecondPassGroupingCollector#getTopGroups(int).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/AbstractSecondPassGroupingCollector#getTopGroups(int).mjava","sourceNew":"  public TopGroups<GROUP_VALUE_TYPE> getTopGroups(int withinGroupOffset) {\n    @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n    final GroupDocs<GROUP_VALUE_TYPE>[] groupDocsResult = (GroupDocs<GROUP_VALUE_TYPE>[]) new GroupDocs[groups.size()];\n\n    int groupIDX = 0;\n    for(SearchGroup<?> group : groups) {\n      final SearchGroupDocs<GROUP_VALUE_TYPE> groupDocs = groupMap.get(group.groupValue);\n      final TopDocs topDocs = groupDocs.collector.topDocs(withinGroupOffset, maxDocsPerGroup);\n      groupDocsResult[groupIDX++] = new GroupDocs<GROUP_VALUE_TYPE>(topDocs.getMaxScore(),\n                                                                    topDocs.totalHits,\n                                                                    topDocs.scoreDocs,\n                                                                    groupDocs.groupValue,\n                                                                    group.sortValues);\n    }\n\n    return new TopGroups<GROUP_VALUE_TYPE>(groupSort.getSort(),\n                                           withinGroupSort == null ? null : withinGroupSort.getSort(),\n                                           totalHitCount, totalGroupedHitCount, groupDocsResult);\n  }\n\n","sourceOld":"  public TopGroups<GROUP_VALUE_TYPE> getTopGroups(int withinGroupOffset) {\n    @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n    final GroupDocs<GROUP_VALUE_TYPE>[] groupDocsResult = (GroupDocs<GROUP_VALUE_TYPE>[]) new GroupDocs[groups.size()];\n\n    int groupIDX = 0;\n    for(SearchGroup group : groups) {\n      final SearchGroupDocs<GROUP_VALUE_TYPE> groupDocs = groupMap.get(group.groupValue);\n      final TopDocs topDocs = groupDocs.collector.topDocs(withinGroupOffset, maxDocsPerGroup);\n      groupDocsResult[groupIDX++] = new GroupDocs<GROUP_VALUE_TYPE>(topDocs.getMaxScore(),\n                                                                    topDocs.totalHits,\n                                                                    topDocs.scoreDocs,\n                                                                    groupDocs.groupValue,\n                                                                    group.sortValues);\n    }\n\n    return new TopGroups<GROUP_VALUE_TYPE>(groupSort.getSort(),\n                                           withinGroupSort == null ? null : withinGroupSort.getSort(),\n                                           totalHitCount, totalGroupedHitCount, groupDocsResult);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/AbstractSecondPassGroupingCollector#getTopGroups(int).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/AbstractSecondPassGroupingCollector#getTopGroups(int).mjava","sourceNew":"  public TopGroups<GROUP_VALUE_TYPE> getTopGroups(int withinGroupOffset) {\n    @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n    final GroupDocs<GROUP_VALUE_TYPE>[] groupDocsResult = (GroupDocs<GROUP_VALUE_TYPE>[]) new GroupDocs[groups.size()];\n\n    int groupIDX = 0;\n    for(SearchGroup<?> group : groups) {\n      final SearchGroupDocs<GROUP_VALUE_TYPE> groupDocs = groupMap.get(group.groupValue);\n      final TopDocs topDocs = groupDocs.collector.topDocs(withinGroupOffset, maxDocsPerGroup);\n      groupDocsResult[groupIDX++] = new GroupDocs<GROUP_VALUE_TYPE>(topDocs.getMaxScore(),\n                                                                    topDocs.totalHits,\n                                                                    topDocs.scoreDocs,\n                                                                    groupDocs.groupValue,\n                                                                    group.sortValues);\n    }\n\n    return new TopGroups<GROUP_VALUE_TYPE>(groupSort.getSort(),\n                                           withinGroupSort == null ? null : withinGroupSort.getSort(),\n                                           totalHitCount, totalGroupedHitCount, groupDocsResult);\n  }\n\n","sourceOld":"  public TopGroups<GROUP_VALUE_TYPE> getTopGroups(int withinGroupOffset) {\n    @SuppressWarnings(\"unchecked\")\n    final GroupDocs<GROUP_VALUE_TYPE>[] groupDocsResult = (GroupDocs<GROUP_VALUE_TYPE>[]) new GroupDocs[groups.size()];\n\n    int groupIDX = 0;\n    for(SearchGroup group : groups) {\n      final SearchGroupDocs<GROUP_VALUE_TYPE> groupDocs = groupMap.get(group.groupValue);\n      final TopDocs topDocs = groupDocs.collector.topDocs(withinGroupOffset, maxDocsPerGroup);\n      groupDocsResult[groupIDX++] = new GroupDocs<GROUP_VALUE_TYPE>(topDocs.getMaxScore(),\n                                                                    topDocs.totalHits,\n                                                                    topDocs.scoreDocs,\n                                                                    groupDocs.groupValue,\n                                                                    group.sortValues);\n    }\n\n    return new TopGroups<GROUP_VALUE_TYPE>(groupSort.getSort(),\n                                           withinGroupSort == null ? null : withinGroupSort.getSort(),\n                                           totalHitCount, totalGroupedHitCount, groupDocsResult);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/AbstractSecondPassGroupingCollector#getTopGroups(int).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/AbstractSecondPassGroupingCollector#getTopGroups(int).mjava","sourceNew":"  public TopGroups<GROUP_VALUE_TYPE> getTopGroups(int withinGroupOffset) {\n    @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n    final GroupDocs<GROUP_VALUE_TYPE>[] groupDocsResult = (GroupDocs<GROUP_VALUE_TYPE>[]) new GroupDocs[groups.size()];\n\n    int groupIDX = 0;\n    for(SearchGroup<?> group : groups) {\n      final SearchGroupDocs<GROUP_VALUE_TYPE> groupDocs = groupMap.get(group.groupValue);\n      final TopDocs topDocs = groupDocs.collector.topDocs(withinGroupOffset, maxDocsPerGroup);\n      groupDocsResult[groupIDX++] = new GroupDocs<GROUP_VALUE_TYPE>(topDocs.getMaxScore(),\n                                                                    topDocs.totalHits,\n                                                                    topDocs.scoreDocs,\n                                                                    groupDocs.groupValue,\n                                                                    group.sortValues);\n    }\n\n    return new TopGroups<GROUP_VALUE_TYPE>(groupSort.getSort(),\n                                           withinGroupSort == null ? null : withinGroupSort.getSort(),\n                                           totalHitCount, totalGroupedHitCount, groupDocsResult);\n  }\n\n","sourceOld":"  public TopGroups<GROUP_VALUE_TYPE> getTopGroups(int withinGroupOffset) {\n    @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n    final GroupDocs<GROUP_VALUE_TYPE>[] groupDocsResult = (GroupDocs<GROUP_VALUE_TYPE>[]) new GroupDocs[groups.size()];\n\n    int groupIDX = 0;\n    for(SearchGroup<?> group : groups) {\n      final SearchGroupDocs<GROUP_VALUE_TYPE> groupDocs = groupMap.get(group.groupValue);\n      final TopDocs topDocs = groupDocs.collector.topDocs(withinGroupOffset, maxDocsPerGroup);\n      groupDocsResult[groupIDX++] = new GroupDocs<GROUP_VALUE_TYPE>(topDocs.getMaxScore(),\n                                                                    topDocs.totalHits,\n                                                                    topDocs.scoreDocs,\n                                                                    groupDocs.groupValue,\n                                                                    group.sortValues);\n    }\n\n    return new TopGroups<GROUP_VALUE_TYPE>(groupSort.getSort(),\n                                           withinGroupSort == null ? null : withinGroupSort.getSort(),\n                                           totalHitCount, totalGroupedHitCount, groupDocsResult);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["1fa60a501961bce2ff07ee1cde7c78699025547e","eb008c8f8fc29e5deccfa43d8a054268ba1c5e48"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["eb008c8f8fc29e5deccfa43d8a054268ba1c5e48"],"72c26897e0e0c4b4f3e73c8c43b1cf89f2564127":["1fa60a501961bce2ff07ee1cde7c78699025547e"],"eb008c8f8fc29e5deccfa43d8a054268ba1c5e48":["72c26897e0e0c4b4f3e73c8c43b1cf89f2564127"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c715a0f99152be7566591f323c6c5a25725a1bcb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1fa60a501961bce2ff07ee1cde7c78699025547e"],"1fa60a501961bce2ff07ee1cde7c78699025547e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1e7c99bd45fa88a3d93a03fdd773053bef72268e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1fa60a501961bce2ff07ee1cde7c78699025547e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"72c26897e0e0c4b4f3e73c8c43b1cf89f2564127":["eb008c8f8fc29e5deccfa43d8a054268ba1c5e48"],"eb008c8f8fc29e5deccfa43d8a054268ba1c5e48":["38e3b736c7ca086d61b7dbb841c905ee115490da","b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c715a0f99152be7566591f323c6c5a25725a1bcb","1fa60a501961bce2ff07ee1cde7c78699025547e","1e7c99bd45fa88a3d93a03fdd773053bef72268e"],"c715a0f99152be7566591f323c6c5a25725a1bcb":[],"1fa60a501961bce2ff07ee1cde7c78699025547e":["38e3b736c7ca086d61b7dbb841c905ee115490da","72c26897e0e0c4b4f3e73c8c43b1cf89f2564127","c715a0f99152be7566591f323c6c5a25725a1bcb","1e7c99bd45fa88a3d93a03fdd773053bef72268e"],"1e7c99bd45fa88a3d93a03fdd773053bef72268e":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","c715a0f99152be7566591f323c6c5a25725a1bcb","1e7c99bd45fa88a3d93a03fdd773053bef72268e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}