{"path":"modules/analysis/common/src/java/org/tartarus/snowball/ext/IrishStemmer#stem().mjava","commits":[{"id":"32da00b9d965f816447f049c40b5ca9536061de6","date":1332604744,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/tartarus/snowball/ext/IrishStemmer#stem().mjava","pathOld":"/dev/null","sourceNew":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n                    // (, line 143\n                    // do, line 144\n                    v_1 = cursor;\n                    lab0: do {\n                        // call initial_morph, line 144\n                        if (!r_initial_morph())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // do, line 145\n                    v_2 = cursor;\n                    lab1: do {\n                        // call mark_regions, line 145\n                        if (!r_mark_regions())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                    cursor = v_2;\n                    // backwards, line 146\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 146\n                    // do, line 147\n                    v_3 = limit - cursor;\n                    lab2: do {\n                        // call noun_sfx, line 147\n                        if (!r_noun_sfx())\n                        {\n                            break lab2;\n                        }\n                    } while (false);\n                    cursor = limit - v_3;\n                    // do, line 148\n                    v_4 = limit - cursor;\n                    lab3: do {\n                        // call deriv, line 148\n                        if (!r_deriv())\n                        {\n                            break lab3;\n                        }\n                    } while (false);\n                    cursor = limit - v_4;\n                    // do, line 149\n                    v_5 = limit - cursor;\n                    lab4: do {\n                        // call verb_sfx, line 149\n                        if (!r_verb_sfx())\n                        {\n                            break lab4;\n                        }\n                    } while (false);\n                    cursor = limit - v_5;\n                    cursor = limit_backward;                    return true;\n                }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/IrishStemmer#stem().mjava","pathOld":"modules/analysis/common/src/java/org/tartarus/snowball/ext/IrishStemmer#stem().mjava","sourceNew":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n                    // (, line 143\n                    // do, line 144\n                    v_1 = cursor;\n                    lab0: do {\n                        // call initial_morph, line 144\n                        if (!r_initial_morph())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // do, line 145\n                    v_2 = cursor;\n                    lab1: do {\n                        // call mark_regions, line 145\n                        if (!r_mark_regions())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                    cursor = v_2;\n                    // backwards, line 146\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 146\n                    // do, line 147\n                    v_3 = limit - cursor;\n                    lab2: do {\n                        // call noun_sfx, line 147\n                        if (!r_noun_sfx())\n                        {\n                            break lab2;\n                        }\n                    } while (false);\n                    cursor = limit - v_3;\n                    // do, line 148\n                    v_4 = limit - cursor;\n                    lab3: do {\n                        // call deriv, line 148\n                        if (!r_deriv())\n                        {\n                            break lab3;\n                        }\n                    } while (false);\n                    cursor = limit - v_4;\n                    // do, line 149\n                    v_5 = limit - cursor;\n                    lab4: do {\n                        // call verb_sfx, line 149\n                        if (!r_verb_sfx())\n                        {\n                            break lab4;\n                        }\n                    } while (false);\n                    cursor = limit - v_5;\n                    cursor = limit_backward;                    return true;\n                }\n\n","sourceOld":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n                    // (, line 143\n                    // do, line 144\n                    v_1 = cursor;\n                    lab0: do {\n                        // call initial_morph, line 144\n                        if (!r_initial_morph())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // do, line 145\n                    v_2 = cursor;\n                    lab1: do {\n                        // call mark_regions, line 145\n                        if (!r_mark_regions())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                    cursor = v_2;\n                    // backwards, line 146\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 146\n                    // do, line 147\n                    v_3 = limit - cursor;\n                    lab2: do {\n                        // call noun_sfx, line 147\n                        if (!r_noun_sfx())\n                        {\n                            break lab2;\n                        }\n                    } while (false);\n                    cursor = limit - v_3;\n                    // do, line 148\n                    v_4 = limit - cursor;\n                    lab3: do {\n                        // call deriv, line 148\n                        if (!r_deriv())\n                        {\n                            break lab3;\n                        }\n                    } while (false);\n                    cursor = limit - v_4;\n                    // do, line 149\n                    v_5 = limit - cursor;\n                    lab4: do {\n                        // call verb_sfx, line 149\n                        if (!r_verb_sfx())\n                        {\n                            break lab4;\n                        }\n                    } while (false);\n                    cursor = limit - v_5;\n                    cursor = limit_backward;                    return true;\n                }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["32da00b9d965f816447f049c40b5ca9536061de6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"32da00b9d965f816447f049c40b5ca9536061de6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["32da00b9d965f816447f049c40b5ca9536061de6"],"32da00b9d965f816447f049c40b5ca9536061de6":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}