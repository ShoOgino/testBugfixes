{"path":"contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","commits":[{"id":"422a649a45aaa37e53615faeca74d891f876a139","date":1255445670,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"/dev/null","sourceNew":"  public void setUp() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), true,\n            MaxFieldLength.LIMITED);\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(new Field(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    input = input.reopen(true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), true,\n            MaxFieldLength.LIMITED);\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(new Field(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    input = input.reopen(true);\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), true,\n            MaxFieldLength.LIMITED);\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(new Field(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    input = input.reopen(true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6ced3401b9c4e7ed2be67711dbc83e48b81aa736","date":1265394056,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true,\n            MaxFieldLength.LIMITED);\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(new Field(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    input = input.reopen(true);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), true,\n            MaxFieldLength.LIMITED);\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(new Field(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    input = input.reopen(true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true,\n            MaxFieldLength.LIMITED);\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(new Field(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    input = input.reopen(true);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true,\n            MaxFieldLength.LIMITED);\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(new Field(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    input = input.reopen(true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(new Field(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    input = input.reopen(true);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true,\n            MaxFieldLength.LIMITED);\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(new Field(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    input = input.reopen(true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true,\n            MaxFieldLength.LIMITED);\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(new Field(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    input = input.reopen(true);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(new Field(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    input = input.reopen(true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(new Field(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    input = input.reopen(true);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true,\n            MaxFieldLength.LIMITED);\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(new Field(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    input = input.reopen(true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(new Field(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    input = input.reopen(true);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(new Field(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    input = input.reopen(true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["422a649a45aaa37e53615faeca74d891f876a139"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"422a649a45aaa37e53615faeca74d891f876a139":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6ced3401b9c4e7ed2be67711dbc83e48b81aa736":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["6ced3401b9c4e7ed2be67711dbc83e48b81aa736"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["422a649a45aaa37e53615faeca74d891f876a139"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["6ced3401b9c4e7ed2be67711dbc83e48b81aa736"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"422a649a45aaa37e53615faeca74d891f876a139":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"6ced3401b9c4e7ed2be67711dbc83e48b81aa736":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}