{"path":"src/test/org/apache/lucene/analysis/PayloadSetter[TestAnalyzers]#next(Token).mjava","commits":[{"id":"66ba51c00e882f0132a67162dc4fd8e4340f8618","date":1195505109,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/PayloadSetter[TestAnalyzers]#next(Token).mjava","pathOld":"/dev/null","sourceNew":"  public Token next(Token target) throws IOException {\n    target = input.next(target);\n    if (target==null) return null;\n    target.setPayload(p);  // reuse the payload / byte[]\n    data[0]++;\n    return target;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e2cb543b41c145f33390f460ee743d6693c9c6c","date":1219243087,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/PayloadSetter[TestAnalyzers]#next(Token).mjava","pathOld":"src/test/org/apache/lucene/analysis/PayloadSetter[TestAnalyzers]#next(Token).mjava","sourceNew":"  public Token next(final Token reusableToken) throws IOException {\n    assert reusableToken != null;\n    Token nextToken = input.next(reusableToken);\n    if (nextToken==null) return null;\n    nextToken.setPayload(p);  // reuse the payload / byte[]\n    data[0]++;\n    return nextToken;\n  }\n\n","sourceOld":"  public Token next(Token target) throws IOException {\n    target = input.next(target);\n    if (target==null) return null;\n    target.setPayload(p);  // reuse the payload / byte[]\n    data[0]++;\n    return target;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223","date":1227051709,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test/org/apache/lucene/analysis/PayloadSetter[TestAnalyzers]#next(Token).mjava","sourceNew":null,"sourceOld":"  public Token next(final Token reusableToken) throws IOException {\n    assert reusableToken != null;\n    Token nextToken = input.next(reusableToken);\n    if (nextToken==null) return null;\n    nextToken.setPayload(p);  // reuse the payload / byte[]\n    data[0]++;\n    return nextToken;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["66ba51c00e882f0132a67162dc4fd8e4340f8618"],"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"66ba51c00e882f0132a67162dc4fd8e4340f8618":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["74a5e7f20b4a444da9df3b2c0f331fa7a1f64223"]},"commit2Childs":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["74a5e7f20b4a444da9df3b2c0f331fa7a1f64223"],"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["66ba51c00e882f0132a67162dc4fd8e4340f8618"],"66ba51c00e882f0132a67162dc4fd8e4340f8618":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}