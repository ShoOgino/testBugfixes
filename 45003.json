{"path":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#mergeFinished(boolean).mjava","commits":[{"id":"af4f318fc7955d8e4e40cdf4a8a93931004fe7c0","date":1592426892,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#mergeFinished(boolean).mjava","pathOld":"/dev/null","sourceNew":"    /** Called by {@link IndexWriter} after the merge is done and all readers have been closed.\n     * @param success true iff the merge finished successfully ie. was committed */\n    public void mergeFinished(boolean success) throws IOException {\n      if (mergeCompleted.complete(success) == false) {\n        throw new IllegalStateException(\"merge has already finished\");\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4af20b06772cb9113c00ae6c1f60f49e27e43751"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4af20b06772cb9113c00ae6c1f60f49e27e43751","date":1592429503,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#mergeFinished(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#mergeFinished(boolean).mjava","sourceNew":"    /** Called by {@link IndexWriter} after the merge is done and all readers have been closed.\n     * @param success true iff the merge finished successfully ie. was committed */\n    public void mergeFinished(boolean success) throws IOException {\n      mergeCompleted.complete(success);\n      // https://issues.apache.org/jira/browse/LUCENE-9408\n      // if (mergeCompleted.complete(success) == false) {\n      //   throw new IllegalStateException(\"merge has already finished\", originalClosed);\n      // }\n    }\n\n","sourceOld":"    /** Called by {@link IndexWriter} after the merge is done and all readers have been closed.\n     * @param success true iff the merge finished successfully ie. was committed */\n    public void mergeFinished(boolean success) throws IOException {\n      if (mergeCompleted.complete(success) == false) {\n        throw new IllegalStateException(\"merge has already finished\");\n      }\n    }\n\n","bugFix":["af4f318fc7955d8e4e40cdf4a8a93931004fe7c0"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cc74095395c342e47c850082b1c03d4852e8bbe","date":1592429628,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#mergeFinished(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#mergeFinished(boolean).mjava","sourceNew":"    /** Called by {@link IndexWriter} after the merge is done and all readers have been closed.\n     * @param success true iff the merge finished successfully ie. was committed */\n    public void mergeFinished(boolean success) throws IOException {\n      mergeCompleted.complete(success);\n      // https://issues.apache.org/jira/browse/LUCENE-9408\n      // if (mergeCompleted.complete(success) == false) {\n      //   throw new IllegalStateException(\"merge has already finished\");\n      // }\n    }\n\n","sourceOld":"    /** Called by {@link IndexWriter} after the merge is done and all readers have been closed.\n     * @param success true iff the merge finished successfully ie. was committed */\n    public void mergeFinished(boolean success) throws IOException {\n      mergeCompleted.complete(success);\n      // https://issues.apache.org/jira/browse/LUCENE-9408\n      // if (mergeCompleted.complete(success) == false) {\n      //   throw new IllegalStateException(\"merge has already finished\", originalClosed);\n      // }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a7869a97a6b91c66a9bd3519cd50583afb8cd6f","date":1593026929,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#mergeFinished(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#mergeFinished(boolean).mjava","sourceNew":"    /** Called by {@link IndexWriter} after the merge is done and all readers have been closed.\n     * @param success true iff the merge finished successfully ie. was committed */\n    public void mergeFinished(boolean success) throws IOException {\n      if (mergeCompleted.complete(success) == false) {\n        throw new IllegalStateException(\"merge has already finished\");\n      }\n    }\n\n","sourceOld":"    /** Called by {@link IndexWriter} after the merge is done and all readers have been closed.\n     * @param success true iff the merge finished successfully ie. was committed */\n    public void mergeFinished(boolean success) throws IOException {\n      mergeCompleted.complete(success);\n      // https://issues.apache.org/jira/browse/LUCENE-9408\n      // if (mergeCompleted.complete(success) == false) {\n      //   throw new IllegalStateException(\"merge has already finished\");\n      // }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2a23476693f2bd9a4b44cc3187c429a2e21dac2","date":1593289545,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#mergeFinished(boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#mergeFinished(boolean).mjava","sourceNew":"    /** Called by {@link IndexWriter} after the merge is done and all readers have been closed.\n     * @param success true iff the merge finished successfully ie. was committed\n     * @param segmentDropped true iff the merged segment was dropped since it was fully deleted\n     */\n    public void mergeFinished(boolean success, boolean segmentDropped) throws IOException {\n    }\n\n","sourceOld":"    /** Called by {@link IndexWriter} after the merge is done and all readers have been closed.\n     * @param success true iff the merge finished successfully ie. was committed */\n    public void mergeFinished(boolean success) throws IOException {\n      if (mergeCompleted.complete(success) == false) {\n        throw new IllegalStateException(\"merge has already finished\");\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af4f318fc7955d8e4e40cdf4a8a93931004fe7c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c2a23476693f2bd9a4b44cc3187c429a2e21dac2":["2a7869a97a6b91c66a9bd3519cd50583afb8cd6f"],"2a7869a97a6b91c66a9bd3519cd50583afb8cd6f":["4cc74095395c342e47c850082b1c03d4852e8bbe"],"4cc74095395c342e47c850082b1c03d4852e8bbe":["4af20b06772cb9113c00ae6c1f60f49e27e43751"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4af20b06772cb9113c00ae6c1f60f49e27e43751":["af4f318fc7955d8e4e40cdf4a8a93931004fe7c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c2a23476693f2bd9a4b44cc3187c429a2e21dac2"]},"commit2Childs":{"af4f318fc7955d8e4e40cdf4a8a93931004fe7c0":["4af20b06772cb9113c00ae6c1f60f49e27e43751"],"c2a23476693f2bd9a4b44cc3187c429a2e21dac2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a7869a97a6b91c66a9bd3519cd50583afb8cd6f":["c2a23476693f2bd9a4b44cc3187c429a2e21dac2"],"4cc74095395c342e47c850082b1c03d4852e8bbe":["2a7869a97a6b91c66a9bd3519cd50583afb8cd6f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af4f318fc7955d8e4e40cdf4a8a93931004fe7c0"],"4af20b06772cb9113c00ae6c1f60f49e27e43751":["4cc74095395c342e47c850082b1c03d4852e8bbe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}