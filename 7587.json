{"path":"lucene/src/test/org/apache/lucene/search/function/TestCustomScoreQuery#testCustomScoreByte().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/function/TestCustomScoreQuery#testCustomScoreByte().mjava","pathOld":"src/test/org/apache/lucene/search/function/TestCustomScoreQuery#testCustomScoreByte().mjava","sourceNew":"  /**\n   * Test that CustomScoreQuery of Type.BYTE returns the expected scores.\n   */\n  @Test\n  public void testCustomScoreByte() throws Exception, ParseException {\n    // INT field values are small enough to be parsed as byte\n    doTestCustomScore(INT_FIELD, FieldScoreQuery.Type.BYTE, 1.0);\n    doTestCustomScore(INT_FIELD, FieldScoreQuery.Type.BYTE, 2.0);\n  }\n\n","sourceOld":"  /**\n   * Test that CustomScoreQuery of Type.BYTE returns the expected scores.\n   */\n  @Test\n  public void testCustomScoreByte() throws Exception, ParseException {\n    // INT field values are small enough to be parsed as byte\n    doTestCustomScore(INT_FIELD, FieldScoreQuery.Type.BYTE, 1.0);\n    doTestCustomScore(INT_FIELD, FieldScoreQuery.Type.BYTE, 2.0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8fda790e002fff32e201cbd0f7bed4c2b333a64","date":1309401082,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#testCustomScoreByte().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/function/TestCustomScoreQuery#testCustomScoreByte().mjava","sourceNew":"  /**\n   * Test that CustomScoreQuery of Type.BYTE returns the expected scores.\n   */\n  @Test\n  public void testCustomScoreByte() throws Exception {\n    // INT field values are small enough to be parsed as byte\n    ByteValuesCreator valuesCreator = new ByteValuesCreator(INT_FIELD, null, CachedArrayCreator.CACHE_VALUES_AND_BITS);\n    FunctionQuery functionQuery = new FunctionQuery(new ByteFieldSource(valuesCreator));\n\n    doTestCustomScore(functionQuery, 1.0);\n    doTestCustomScore(functionQuery, 2.0);\n  }\n\n","sourceOld":"  /**\n   * Test that CustomScoreQuery of Type.BYTE returns the expected scores.\n   */\n  @Test\n  public void testCustomScoreByte() throws Exception, ParseException {\n    // INT field values are small enough to be parsed as byte\n    doTestCustomScore(INT_FIELD, FieldScoreQuery.Type.BYTE, 1.0);\n    doTestCustomScore(INT_FIELD, FieldScoreQuery.Type.BYTE, 2.0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/search/function/TestCustomScoreQuery#testCustomScoreByte().mjava","sourceNew":null,"sourceOld":"  /**\n   * Test that CustomScoreQuery of Type.BYTE returns the expected scores.\n   */\n  @Test\n  public void testCustomScoreByte() throws Exception, ParseException {\n    // INT field values are small enough to be parsed as byte\n    doTestCustomScore(INT_FIELD, FieldScoreQuery.Type.BYTE, 1.0);\n    doTestCustomScore(INT_FIELD, FieldScoreQuery.Type.BYTE, 2.0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/search/function/TestCustomScoreQuery#testCustomScoreByte().mjava","sourceNew":null,"sourceOld":"  /**\n   * Test that CustomScoreQuery of Type.BYTE returns the expected scores.\n   */\n  @Test\n  public void testCustomScoreByte() throws Exception, ParseException {\n    // INT field values are small enough to be parsed as byte\n    doTestCustomScore(INT_FIELD, FieldScoreQuery.Type.BYTE, 1.0);\n    doTestCustomScore(INT_FIELD, FieldScoreQuery.Type.BYTE, 2.0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c8fda790e002fff32e201cbd0f7bed4c2b333a64":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["9454a6510e2db155fb01faa5c049b06ece95fab9","c8fda790e002fff32e201cbd0f7bed4c2b333a64"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["9454a6510e2db155fb01faa5c049b06ece95fab9","c8fda790e002fff32e201cbd0f7bed4c2b333a64"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c8fda790e002fff32e201cbd0f7bed4c2b333a64"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c8fda790e002fff32e201cbd0f7bed4c2b333a64":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["c8fda790e002fff32e201cbd0f7bed4c2b333a64","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}