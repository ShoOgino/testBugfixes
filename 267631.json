{"path":"solr/core/src/java/org/apache/solr/security/ConfigEditablePlugin#edit(Map[String,Object],List[CommandOperation]).mjava","commits":[{"id":"6bdcb86c29922edae9a14852e636303bc52df094","date":1438887454,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/ConfigEditablePlugin#edit(Map[String,Object],List[CommandOperation]).mjava","pathOld":"/dev/null","sourceNew":"  /** Operate the commands on the latest conf and return a new conf object\n   * If there are errors in the commands , throw a SolrException. return a null\n   * if no changes are to be made as a result of this edit. It is the responsibility\n   * of the implementation to ensure that the returned config is valid . The framework\n   * does no validation of the data\n   */\n  public Map<String,Object> edit(Map<String,Object> latestConf, List<CommandOperation> commands);\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d21112928e2aedcec0c17025bc0e91f8fcfcf30","date":1494423367,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/ConfigEditablePlugin#edit(Map[String,Object],List[CommandOperation]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/ConfigEditablePlugin#edit(Map[String,Object],List[CommandOperation]).mjava","sourceNew":"  /** Operate the commands on the latest conf and return a new conf object\n   * If there are errors in the commands , throw a SolrException. return a null\n   * if no changes are to be made as a result of this edit. It is the responsibility\n   * of the implementation to ensure that the returned config is valid . The framework\n   * does no validation of the data\n   */\n  Map<String,Object> edit(Map<String, Object> latestConf, List<CommandOperation> commands);\n\n","sourceOld":"  /** Operate the commands on the latest conf and return a new conf object\n   * If there are errors in the commands , throw a SolrException. return a null\n   * if no changes are to be made as a result of this edit. It is the responsibility\n   * of the implementation to ensure that the returned config is valid . The framework\n   * does no validation of the data\n   */\n  public Map<String,Object> edit(Map<String,Object> latestConf, List<CommandOperation> commands);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/security/ConfigEditablePlugin#edit(Map[String,Object],List[CommandOperation]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/ConfigEditablePlugin#edit(Map[String,Object],List[CommandOperation]).mjava","sourceNew":"  /** Operate the commands on the latest conf and return a new conf object\n   * If there are errors in the commands , throw a SolrException. return a null\n   * if no changes are to be made as a result of this edit. It is the responsibility\n   * of the implementation to ensure that the returned config is valid . The framework\n   * does no validation of the data\n   */\n  Map<String,Object> edit(Map<String, Object> latestConf, List<CommandOperation> commands);\n\n","sourceOld":"  /** Operate the commands on the latest conf and return a new conf object\n   * If there are errors in the commands , throw a SolrException. return a null\n   * if no changes are to be made as a result of this edit. It is the responsibility\n   * of the implementation to ensure that the returned config is valid . The framework\n   * does no validation of the data\n   */\n  public Map<String,Object> edit(Map<String,Object> latestConf, List<CommandOperation> commands);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2d21112928e2aedcec0c17025bc0e91f8fcfcf30":["6bdcb86c29922edae9a14852e636303bc52df094"],"6bdcb86c29922edae9a14852e636303bc52df094":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["6bdcb86c29922edae9a14852e636303bc52df094","2d21112928e2aedcec0c17025bc0e91f8fcfcf30"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2d21112928e2aedcec0c17025bc0e91f8fcfcf30"]},"commit2Childs":{"2d21112928e2aedcec0c17025bc0e91f8fcfcf30":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6bdcb86c29922edae9a14852e636303bc52df094":["2d21112928e2aedcec0c17025bc0e91f8fcfcf30","e9017cf144952056066919f1ebc7897ff9bd71b1"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6bdcb86c29922edae9a14852e636303bc52df094"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}