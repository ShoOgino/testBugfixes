{"path":"src/test/org/apache/lucene/search/regex/TestRegexQuery#spanRegexQueryNrHits(String,String,int,boolean).mjava","commits":[{"id":"b5baae4a6f4c2a9f9cc87374510938bd41962899","date":1132822322,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/regex/TestRegexQuery#spanRegexQueryNrHits(String,String,int,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private int  spanRegexQueryNrHits(String regex1, String regex2, int slop, boolean ordered) throws Exception {\n    SpanRegexQuery srq1 = new SpanRegexQuery( newTerm(regex1));\n    SpanRegexQuery srq2 = new SpanRegexQuery( newTerm(regex2));\n    SpanNearQuery query = new SpanNearQuery( new SpanQuery[]{srq1, srq2}, slop, ordered);\n    return searcher.search(query).length();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74be754ec3ab6906922b673bf951696c442123b2","date":1135778260,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/regex/src/test/org/apache/lucene/search/regex/TestRegexQuery#spanRegexQueryNrHits(String,String,int,boolean).mjava","pathOld":"src/test/org/apache/lucene/search/regex/TestRegexQuery#spanRegexQueryNrHits(String,String,int,boolean).mjava","sourceNew":"  private int  spanRegexQueryNrHits(String regex1, String regex2, int slop, boolean ordered) throws Exception {\n    SpanRegexQuery srq1 = new SpanRegexQuery( newTerm(regex1));\n    SpanRegexQuery srq2 = new SpanRegexQuery( newTerm(regex2));\n    SpanNearQuery query = new SpanNearQuery( new SpanQuery[]{srq1, srq2}, slop, ordered);\n    return searcher.search(query).length();\n  }\n\n","sourceOld":"  private int  spanRegexQueryNrHits(String regex1, String regex2, int slop, boolean ordered) throws Exception {\n    SpanRegexQuery srq1 = new SpanRegexQuery( newTerm(regex1));\n    SpanRegexQuery srq2 = new SpanRegexQuery( newTerm(regex2));\n    SpanNearQuery query = new SpanNearQuery( new SpanQuery[]{srq1, srq2}, slop, ordered);\n    return searcher.search(query).length();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"74be754ec3ab6906922b673bf951696c442123b2":["b5baae4a6f4c2a9f9cc87374510938bd41962899"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b5baae4a6f4c2a9f9cc87374510938bd41962899":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["74be754ec3ab6906922b673bf951696c442123b2"]},"commit2Childs":{"74be754ec3ab6906922b673bf951696c442123b2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b5baae4a6f4c2a9f9cc87374510938bd41962899"],"b5baae4a6f4c2a9f9cc87374510938bd41962899":["74be754ec3ab6906922b673bf951696c442123b2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}