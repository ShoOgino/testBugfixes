{"path":"lucene/core/src/java/org/apache/lucene/search/similarities/BasicModelG#explain(BasicStats,double,double).mjava","commits":[{"id":"0ebae307ed33e9c07244cc9f74f0e644d8f2aa8a","date":1513155113,"type":0,"author":"Mayya Sharipova","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BasicModelG#explain(BasicStats,double,double).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Explanation explain(BasicStats stats, double tfn, double aeTimes1pTfn) {\n    double F = stats.getTotalTermFreq() + 1;\n    double N = stats.getNumberOfDocuments();\n    double lambda = F / (N + F);\n    Explanation explLambda = Explanation.match((float) lambda,\n        \"lambda, computed as F / (N + F) from:\",\n        Explanation.match((float) F,\n            \"F, total number of occurrences of term across all docs + 1\"),\n        Explanation.match((float) N,\n            \"N, total number of documents with field\"));\n\n    return Explanation.match(\n        (float) (score(stats, tfn, aeTimes1pTfn) * (1 + tfn) / aeTimes1pTfn),\n        getClass().getSimpleName() + \", computed as \" +\n            \"log2(lambda + 1) + tfn * log2((1 + lambda) / lambda) from:\",\n        Explanation.match((float) tfn, \"tfn, normalized term frequency\"),\n        explLambda);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"927e6deec13723e5fd6fb8f1e0457e8597dae15e","date":1513167013,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BasicModelG#explain(BasicStats,double,double).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Explanation explain(BasicStats stats, double tfn, double aeTimes1pTfn) {\n    double F = stats.getTotalTermFreq() + 1;\n    double N = stats.getNumberOfDocuments();\n    double lambda = F / (N + F);\n    Explanation explLambda = Explanation.match((float) lambda,\n        \"lambda, computed as F / (N + F) from:\",\n        Explanation.match((float) F,\n            \"F, total number of occurrences of term across all docs + 1\"),\n        Explanation.match((float) N,\n            \"N, total number of documents with field\"));\n\n    return Explanation.match(\n        (float) (score(stats, tfn, aeTimes1pTfn) * (1 + tfn) / aeTimes1pTfn),\n        getClass().getSimpleName() + \", computed as \" +\n            \"log2(lambda + 1) + tfn * log2((1 + lambda) / lambda) from:\",\n        Explanation.match((float) tfn, \"tfn, normalized term frequency\"),\n        explLambda);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0ebae307ed33e9c07244cc9f74f0e644d8f2aa8a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"927e6deec13723e5fd6fb8f1e0457e8597dae15e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0ebae307ed33e9c07244cc9f74f0e644d8f2aa8a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["927e6deec13723e5fd6fb8f1e0457e8597dae15e"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0ebae307ed33e9c07244cc9f74f0e644d8f2aa8a","927e6deec13723e5fd6fb8f1e0457e8597dae15e"],"0ebae307ed33e9c07244cc9f74f0e644d8f2aa8a":["927e6deec13723e5fd6fb8f1e0457e8597dae15e"],"927e6deec13723e5fd6fb8f1e0457e8597dae15e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}