{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.EntityRunner#runAThread(ThreadedEntityProcessorWrapper,EntityRow,String).mjava","commits":[{"id":"65f4e997b946a4eadce22b758749046a63ba2eff","date":1263282580,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.EntityRunner#runAThread(ThreadedEntityProcessorWrapper,EntityRow,String).mjava","pathOld":"/dev/null","sourceNew":"    private void runAThread(ThreadedEntityProcessorWrapper epw, EntityRow rows, String currProcess) throws Exception {\n      currentEntityProcWrapper.set(epw);\n      epw.threadedInit(context);\n      initEntity();\n      try {\n        epw.init(rows);\n        DocWrapper docWrapper = this.docWrapper;\n        Context.CURRENT_CONTEXT.set(context);\n        for (; ;) {\n          try {\n            Map<String, Object> arow = epw.nextRow();\n            if (arow == null) {\n              break;\n            } else {\n              importStatistics.rowsCount.incrementAndGet();\n              if (docWrapper == null && entity.isDocRoot) {\n                docWrapper = new DocWrapper();\n                context.setDoc(docWrapper);\n                DataConfig.Entity e = entity.parentEntity;\n                for (EntityRow row = rows;  row != null&& e !=null; row = row.tail,e=e.parentEntity) {\n                    addFields(e, docWrapper, row.row, epw.resolver);\n                }\n              }\n              if (docWrapper != null) {\n                handleSpecialCommands(arow, docWrapper);\n                addFields(entity, docWrapper, arow, epw.resolver);\n              }\n              if (entity.entities != null) {\n                EntityRow nextRow = new EntityRow(arow, rows, entity.name);\n                for (DataConfig.Entity e : entity.entities) {\n                  epw.children.get(e).run(docWrapper,currProcess,nextRow);\n                }\n              }\n            }\n            if (entity.isDocRoot) {\n              LOG.info(\"a row on docroot\" + docWrapper);\n              if (!docWrapper.isEmpty()) {\n                LOG.info(\"adding a doc \"+docWrapper);\n                boolean result = writer.upload(docWrapper);\n                docWrapper = null;\n                if (result){\n                  importStatistics.docCount.incrementAndGet();\n                } else {\n                  importStatistics.failedDocCount.incrementAndGet();\n                }\n              }\n            }\n          } catch (DataImportHandlerException dihe) {\n            exception = dihe;\n            if(dihe.getErrCode() == SKIP_ROW || dihe.getErrCode() == SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n              exception = null;//should not propogate up\n              continue;\n            }\n            if (entity.isDocRoot) {\n              if (dihe.getErrCode() == DataImportHandlerException.SKIP) {\n                importStatistics.skipDocCount.getAndIncrement();\n                exception = null;//should not propogate up\n              } else {\n                LOG.error(\"Exception while processing: \"\n                        + entity.name + \" document : \" + docWrapper, dihe);\n              }\n              if (dihe.getErrCode() == DataImportHandlerException.SEVERE)\n                throw dihe;\n            } else {\n              //if this is not the docRoot then the execution has happened in the same thread. so propogate up,\n              // it will be handled at the docroot\n              entityEnded.set(true); \n              throw dihe;\n            }\n            entityEnded.set(true);\n          }\n        }\n      } finally {\n        epw.destroy();\n        currentEntityProcWrapper.remove();\n        Context.CURRENT_CONTEXT.remove();\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["7ec0d5e9105277591879116e94248c4c5b9fb85d","7ec0d5e9105277591879116e94248c4c5b9fb85d","17a92a6c6955645d64747d96f75583d591643464","17a92a6c6955645d64747d96f75583d591643464"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fda204a3196ebffdd8624eb28e425a16dd884798","date":1265779620,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.EntityRunner#runAThread(ThreadedEntityProcessorWrapper,EntityRow,String).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.EntityRunner#runAThread(ThreadedEntityProcessorWrapper,EntityRow,String).mjava","sourceNew":"    private void runAThread(ThreadedEntityProcessorWrapper epw, EntityRow rows, String currProcess) throws Exception {\n      currentEntityProcWrapper.set(epw);\n      epw.threadedInit(context);\n      initEntity();\n      try {\n        epw.init(rows);\n        DocWrapper docWrapper = this.docWrapper;\n        Context.CURRENT_CONTEXT.set(context);\n        for (; ;) {\n          if(DocBuilder.this.stop.get()) break;\n          try {\n            Map<String, Object> arow = epw.nextRow();\n            if (arow == null) {\n              break;\n            } else {\n              importStatistics.rowsCount.incrementAndGet();\n              if (docWrapper == null && entity.isDocRoot) {\n                docWrapper = new DocWrapper();\n                context.setDoc(docWrapper);\n                DataConfig.Entity e = entity.parentEntity;\n                for (EntityRow row = rows;  row != null&& e !=null; row = row.tail,e=e.parentEntity) {\n                    addFields(e, docWrapper, row.row, epw.resolver);\n                }\n              }\n              if (docWrapper != null) {\n                handleSpecialCommands(arow, docWrapper);\n                addFields(entity, docWrapper, arow, epw.resolver);\n              }\n              if (entity.entities != null) {\n                EntityRow nextRow = new EntityRow(arow, rows, entity.name);\n                for (DataConfig.Entity e : entity.entities) {\n                  epw.children.get(e).run(docWrapper,currProcess,nextRow);\n                }\n              }\n            }\n            if (entity.isDocRoot) {\n              LOG.info(\"a row on docroot\" + docWrapper);\n              if (!docWrapper.isEmpty()) {\n                LOG.info(\"adding a doc \"+docWrapper);\n                boolean result = writer.upload(docWrapper);\n                docWrapper = null;\n                if (result){\n                  importStatistics.docCount.incrementAndGet();\n                } else {\n                  importStatistics.failedDocCount.incrementAndGet();\n                }\n              }\n            }\n          } catch (DataImportHandlerException dihe) {\n            exception = dihe;\n            if(dihe.getErrCode() == SKIP_ROW || dihe.getErrCode() == SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n              exception = null;//should not propogate up\n              continue;\n            }\n            if (entity.isDocRoot) {\n              if (dihe.getErrCode() == DataImportHandlerException.SKIP) {\n                importStatistics.skipDocCount.getAndIncrement();\n                exception = null;//should not propogate up\n              } else {\n                LOG.error(\"Exception while processing: \"\n                        + entity.name + \" document : \" + docWrapper, dihe);\n              }\n              if (dihe.getErrCode() == DataImportHandlerException.SEVERE)\n                throw dihe;\n            } else {\n              //if this is not the docRoot then the execution has happened in the same thread. so propogate up,\n              // it will be handled at the docroot\n              entityEnded.set(true); \n              throw dihe;\n            }\n            entityEnded.set(true);\n          }\n        }\n      } finally {\n        epw.destroy();\n        currentEntityProcWrapper.remove();\n        Context.CURRENT_CONTEXT.remove();\n      }\n    }\n\n","sourceOld":"    private void runAThread(ThreadedEntityProcessorWrapper epw, EntityRow rows, String currProcess) throws Exception {\n      currentEntityProcWrapper.set(epw);\n      epw.threadedInit(context);\n      initEntity();\n      try {\n        epw.init(rows);\n        DocWrapper docWrapper = this.docWrapper;\n        Context.CURRENT_CONTEXT.set(context);\n        for (; ;) {\n          try {\n            Map<String, Object> arow = epw.nextRow();\n            if (arow == null) {\n              break;\n            } else {\n              importStatistics.rowsCount.incrementAndGet();\n              if (docWrapper == null && entity.isDocRoot) {\n                docWrapper = new DocWrapper();\n                context.setDoc(docWrapper);\n                DataConfig.Entity e = entity.parentEntity;\n                for (EntityRow row = rows;  row != null&& e !=null; row = row.tail,e=e.parentEntity) {\n                    addFields(e, docWrapper, row.row, epw.resolver);\n                }\n              }\n              if (docWrapper != null) {\n                handleSpecialCommands(arow, docWrapper);\n                addFields(entity, docWrapper, arow, epw.resolver);\n              }\n              if (entity.entities != null) {\n                EntityRow nextRow = new EntityRow(arow, rows, entity.name);\n                for (DataConfig.Entity e : entity.entities) {\n                  epw.children.get(e).run(docWrapper,currProcess,nextRow);\n                }\n              }\n            }\n            if (entity.isDocRoot) {\n              LOG.info(\"a row on docroot\" + docWrapper);\n              if (!docWrapper.isEmpty()) {\n                LOG.info(\"adding a doc \"+docWrapper);\n                boolean result = writer.upload(docWrapper);\n                docWrapper = null;\n                if (result){\n                  importStatistics.docCount.incrementAndGet();\n                } else {\n                  importStatistics.failedDocCount.incrementAndGet();\n                }\n              }\n            }\n          } catch (DataImportHandlerException dihe) {\n            exception = dihe;\n            if(dihe.getErrCode() == SKIP_ROW || dihe.getErrCode() == SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n              exception = null;//should not propogate up\n              continue;\n            }\n            if (entity.isDocRoot) {\n              if (dihe.getErrCode() == DataImportHandlerException.SKIP) {\n                importStatistics.skipDocCount.getAndIncrement();\n                exception = null;//should not propogate up\n              } else {\n                LOG.error(\"Exception while processing: \"\n                        + entity.name + \" document : \" + docWrapper, dihe);\n              }\n              if (dihe.getErrCode() == DataImportHandlerException.SEVERE)\n                throw dihe;\n            } else {\n              //if this is not the docRoot then the execution has happened in the same thread. so propogate up,\n              // it will be handled at the docroot\n              entityEnded.set(true); \n              throw dihe;\n            }\n            entityEnded.set(true);\n          }\n        }\n      } finally {\n        epw.destroy();\n        currentEntityProcWrapper.remove();\n        Context.CURRENT_CONTEXT.remove();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.EntityRunner#runAThread(ThreadedEntityProcessorWrapper,EntityRow,String).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.EntityRunner#runAThread(ThreadedEntityProcessorWrapper,EntityRow,String).mjava","sourceNew":"    private void runAThread(ThreadedEntityProcessorWrapper epw, EntityRow rows, String currProcess) throws Exception {\n      currentEntityProcWrapper.set(epw);\n      epw.threadedInit(context);\n      initEntity();\n      try {\n        epw.init(rows);\n        DocWrapper docWrapper = this.docWrapper;\n        Context.CURRENT_CONTEXT.set(context);\n        for (; ;) {\n          if(DocBuilder.this.stop.get()) break;\n          try {\n            Map<String, Object> arow = epw.nextRow();\n            if (arow == null) {\n              break;\n            } else {\n              importStatistics.rowsCount.incrementAndGet();\n              if (docWrapper == null && entity.isDocRoot) {\n                docWrapper = new DocWrapper();\n                context.setDoc(docWrapper);\n                DataConfig.Entity e = entity.parentEntity;\n                for (EntityRow row = rows;  row != null&& e !=null; row = row.tail,e=e.parentEntity) {\n                    addFields(e, docWrapper, row.row, epw.resolver);\n                }\n              }\n              if (docWrapper != null) {\n                handleSpecialCommands(arow, docWrapper);\n                addFields(entity, docWrapper, arow, epw.resolver);\n              }\n              if (entity.entities != null) {\n                EntityRow nextRow = new EntityRow(arow, rows, entity.name);\n                for (DataConfig.Entity e : entity.entities) {\n                  epw.children.get(e).run(docWrapper,currProcess,nextRow);\n                }\n              }\n            }\n            if (entity.isDocRoot) {\n              LOG.info(\"a row on docroot\" + docWrapper);\n              if (!docWrapper.isEmpty()) {\n                LOG.info(\"adding a doc \"+docWrapper);\n                boolean result = writer.upload(docWrapper);\n                docWrapper = null;\n                if (result){\n                  importStatistics.docCount.incrementAndGet();\n                } else {\n                  importStatistics.failedDocCount.incrementAndGet();\n                }\n              }\n            }\n          } catch (DataImportHandlerException dihe) {\n            exception = dihe;\n            if(dihe.getErrCode() == SKIP_ROW || dihe.getErrCode() == SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n              exception = null;//should not propogate up\n              continue;\n            }\n            if (entity.isDocRoot) {\n              if (dihe.getErrCode() == DataImportHandlerException.SKIP) {\n                importStatistics.skipDocCount.getAndIncrement();\n                exception = null;//should not propogate up\n              } else {\n                LOG.error(\"Exception while processing: \"\n                        + entity.name + \" document : \" + docWrapper, dihe);\n              }\n              if (dihe.getErrCode() == DataImportHandlerException.SEVERE)\n                throw dihe;\n            } else {\n              //if this is not the docRoot then the execution has happened in the same thread. so propogate up,\n              // it will be handled at the docroot\n              entityEnded.set(true); \n              throw dihe;\n            }\n            entityEnded.set(true);\n          }\n        }\n      } finally {\n        epw.destroy();\n        currentEntityProcWrapper.remove();\n        Context.CURRENT_CONTEXT.remove();\n      }\n    }\n\n","sourceOld":"    private void runAThread(ThreadedEntityProcessorWrapper epw, EntityRow rows, String currProcess) throws Exception {\n      currentEntityProcWrapper.set(epw);\n      epw.threadedInit(context);\n      initEntity();\n      try {\n        epw.init(rows);\n        DocWrapper docWrapper = this.docWrapper;\n        Context.CURRENT_CONTEXT.set(context);\n        for (; ;) {\n          if(DocBuilder.this.stop.get()) break;\n          try {\n            Map<String, Object> arow = epw.nextRow();\n            if (arow == null) {\n              break;\n            } else {\n              importStatistics.rowsCount.incrementAndGet();\n              if (docWrapper == null && entity.isDocRoot) {\n                docWrapper = new DocWrapper();\n                context.setDoc(docWrapper);\n                DataConfig.Entity e = entity.parentEntity;\n                for (EntityRow row = rows;  row != null&& e !=null; row = row.tail,e=e.parentEntity) {\n                    addFields(e, docWrapper, row.row, epw.resolver);\n                }\n              }\n              if (docWrapper != null) {\n                handleSpecialCommands(arow, docWrapper);\n                addFields(entity, docWrapper, arow, epw.resolver);\n              }\n              if (entity.entities != null) {\n                EntityRow nextRow = new EntityRow(arow, rows, entity.name);\n                for (DataConfig.Entity e : entity.entities) {\n                  epw.children.get(e).run(docWrapper,currProcess,nextRow);\n                }\n              }\n            }\n            if (entity.isDocRoot) {\n              LOG.info(\"a row on docroot\" + docWrapper);\n              if (!docWrapper.isEmpty()) {\n                LOG.info(\"adding a doc \"+docWrapper);\n                boolean result = writer.upload(docWrapper);\n                docWrapper = null;\n                if (result){\n                  importStatistics.docCount.incrementAndGet();\n                } else {\n                  importStatistics.failedDocCount.incrementAndGet();\n                }\n              }\n            }\n          } catch (DataImportHandlerException dihe) {\n            exception = dihe;\n            if(dihe.getErrCode() == SKIP_ROW || dihe.getErrCode() == SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n              exception = null;//should not propogate up\n              continue;\n            }\n            if (entity.isDocRoot) {\n              if (dihe.getErrCode() == DataImportHandlerException.SKIP) {\n                importStatistics.skipDocCount.getAndIncrement();\n                exception = null;//should not propogate up\n              } else {\n                LOG.error(\"Exception while processing: \"\n                        + entity.name + \" document : \" + docWrapper, dihe);\n              }\n              if (dihe.getErrCode() == DataImportHandlerException.SEVERE)\n                throw dihe;\n            } else {\n              //if this is not the docRoot then the execution has happened in the same thread. so propogate up,\n              // it will be handled at the docroot\n              entityEnded.set(true); \n              throw dihe;\n            }\n            entityEnded.set(true);\n          }\n        }\n      } finally {\n        epw.destroy();\n        currentEntityProcWrapper.remove();\n        Context.CURRENT_CONTEXT.remove();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"65f4e997b946a4eadce22b758749046a63ba2eff":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["fda204a3196ebffdd8624eb28e425a16dd884798"],"fda204a3196ebffdd8624eb28e425a16dd884798":["65f4e997b946a4eadce22b758749046a63ba2eff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"65f4e997b946a4eadce22b758749046a63ba2eff":["fda204a3196ebffdd8624eb28e425a16dd884798"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["65f4e997b946a4eadce22b758749046a63ba2eff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"fda204a3196ebffdd8624eb28e425a16dd884798":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}