{"path":"lucene/core/src/java/org/apache/lucene/util/AttributeSource#copyTo(AttributeSource).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/AttributeSource#copyTo(AttributeSource).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/AttributeSource#copyTo(AttributeSource).mjava","sourceNew":"  /**\n   * Copies the contents of this {@code AttributeSource} to the given target {@code AttributeSource}.\n   * The given instance has to provide all {@link Attribute}s this instance contains. \n   * The actual attribute implementations must be identical in both {@code AttributeSource} instances;\n   * ideally both AttributeSource instances should use the same {@link AttributeFactory}.\n   * You can use this method as a replacement for {@link #restoreState}, if you use\n   * {@link #cloneAttributes} instead of {@link #captureState}.\n   */\n  public final void copyTo(AttributeSource target) {\n    for (State state = getCurrentState(); state != null; state = state.next) {\n      final AttributeImpl targetImpl = target.attributeImpls.get(state.attribute.getClass());\n      if (targetImpl == null) {\n        throw new IllegalArgumentException(\"This AttributeSource contains AttributeImpl of type \" +\n          state.attribute.getClass().getName() + \" that is not in the target\");\n      }\n      state.attribute.copyTo(targetImpl);\n    }\n  }\n\n","sourceOld":"  /**\n   * Copies the contents of this {@code AttributeSource} to the given target {@code AttributeSource}.\n   * The given instance has to provide all {@link Attribute}s this instance contains. \n   * The actual attribute implementations must be identical in both {@code AttributeSource} instances;\n   * ideally both AttributeSource instances should use the same {@link AttributeFactory}.\n   * You can use this method as a replacement for {@link #restoreState}, if you use\n   * {@link #cloneAttributes} instead of {@link #captureState}.\n   */\n  public final void copyTo(AttributeSource target) {\n    for (State state = getCurrentState(); state != null; state = state.next) {\n      final AttributeImpl targetImpl = target.attributeImpls.get(state.attribute.getClass());\n      if (targetImpl == null) {\n        throw new IllegalArgumentException(\"This AttributeSource contains AttributeImpl of type \" +\n          state.attribute.getClass().getName() + \" that is not in the target\");\n      }\n      state.attribute.copyTo(targetImpl);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}