{"path":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#setUp().mjava","commits":[{"id":"cf4e43a4d7a969632d4bec76fd5bba149cb81487","date":1342043143,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n    createTempDir();\n    \n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    \n    zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    \n    log.info(\"####SETUP_END \" + getTestName());\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n    createTempDir();\n    \n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    \n    zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    \n    log.info(\"####SETUP_END \" + getTestName());\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96c692b5bdca33a6392254cacfbe5a5136a19209","date":1342993627,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n    createTempDir();\n    \n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    log.info(\"ZooKeeper dataDir:\" + zkDir);\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkHost(), AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(\"/solr\", false, true);\n    zkClient.close();\n\n    \n    this.zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    \n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n    createTempDir();\n    \n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    \n    zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    \n    log.info(\"####SETUP_END \" + getTestName());\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","date":1343059585,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n    createTempDir();\n    \n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    log.info(\"ZooKeeper dataDir:\" + zkDir);\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkHost(), AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(\"/solr\", false, true);\n    zkClient.close();\n\n    \n    this.zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    \n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n    createTempDir();\n    \n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    \n    zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    \n    log.info(\"####SETUP_END \" + getTestName());\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n    createTempDir();\n    \n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    log.info(\"ZooKeeper dataDir:\" + zkDir);\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkHost(), AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(\"/solr\", false, true);\n    zkClient.close();\n\n    \n    this.zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    \n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9","date":1366986755,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n    createTempDir();\n    \n    boolean useNewSolrXml = random().nextBoolean();\n    \n    if (useNewSolrXml) {\n      solrHome = ExternalPaths.EXAMPLE_HOME;\n    } else {\n      File tmpSolrHome = new File(dataDir, \"tmp-solr-home\");\n      FileUtils.copyDirectory(new File(ExternalPaths.EXAMPLE_HOME), tmpSolrHome);\n      FileUtils.copyFile(new File(ExternalPaths.SOURCE_HOME, \"core/src/test-files/old-solr-example/solr.xml\"), new File(tmpSolrHome, \"solr.xml\"));\n      solrHome = tmpSolrHome.getAbsolutePath();\n    }\n    \n    \n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    log.info(\"ZooKeeper dataDir:\" + zkDir);\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkHost(), AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(\"/solr\", false, true);\n    zkClient.close();\n\n    \n    this.zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    \n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n    createTempDir();\n    \n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    log.info(\"ZooKeeper dataDir:\" + zkDir);\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkHost(), AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(\"/solr\", false, true);\n    zkClient.close();\n\n    \n    this.zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    \n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a475a1c165e02515bff766b3b7be0c42edf1870c","date":1393099333,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n    createTempDir();\n    \n    boolean useNewSolrXml = random().nextBoolean();\n    \n    if (useNewSolrXml) {\n      solrHome = ExternalPaths.EXAMPLE_HOME;\n    } else {\n      File tmpSolrHome = new File(dataDir, \"tmp-solr-home\");\n      FileUtils.copyDirectory(new File(ExternalPaths.EXAMPLE_HOME), tmpSolrHome);\n      FileUtils.copyFile(getFile(\"old-solr-example/solr.xml\"), new File(tmpSolrHome, \"solr.xml\"));\n      solrHome = tmpSolrHome.getAbsolutePath();\n    }\n    \n    \n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    log.info(\"ZooKeeper dataDir:\" + zkDir);\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkHost(), AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(\"/solr\", false, true);\n    zkClient.close();\n\n    \n    this.zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    \n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n    createTempDir();\n    \n    boolean useNewSolrXml = random().nextBoolean();\n    \n    if (useNewSolrXml) {\n      solrHome = ExternalPaths.EXAMPLE_HOME;\n    } else {\n      File tmpSolrHome = new File(dataDir, \"tmp-solr-home\");\n      FileUtils.copyDirectory(new File(ExternalPaths.EXAMPLE_HOME), tmpSolrHome);\n      FileUtils.copyFile(new File(ExternalPaths.SOURCE_HOME, \"core/src/test-files/old-solr-example/solr.xml\"), new File(tmpSolrHome, \"solr.xml\"));\n      solrHome = tmpSolrHome.getAbsolutePath();\n    }\n    \n    \n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    log.info(\"ZooKeeper dataDir:\" + zkDir);\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkHost(), AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(\"/solr\", false, true);\n    zkClient.close();\n\n    \n    this.zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    \n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1416f9d09d016a6894cd17e1caac137dad2bba59","date":1395941020,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n    \n    boolean useNewSolrXml = random().nextBoolean();\n    \n    if (useNewSolrXml) {\n      solrHome = ExternalPaths.EXAMPLE_HOME;\n    } else {\n      File tmpSolrHome = new File(dataDir, \"tmp-solr-home\");\n      FileUtils.copyDirectory(new File(ExternalPaths.EXAMPLE_HOME), tmpSolrHome);\n      FileUtils.copyFile(getFile(\"old-solr-example/solr.xml\"), new File(tmpSolrHome, \"solr.xml\"));\n      solrHome = tmpSolrHome.getAbsolutePath();\n    }\n    \n    \n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    log.info(\"ZooKeeper dataDir:\" + zkDir);\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkHost(), AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(\"/solr\", false, true);\n    zkClient.close();\n\n    \n    this.zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    \n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n    createTempDir();\n    \n    boolean useNewSolrXml = random().nextBoolean();\n    \n    if (useNewSolrXml) {\n      solrHome = ExternalPaths.EXAMPLE_HOME;\n    } else {\n      File tmpSolrHome = new File(dataDir, \"tmp-solr-home\");\n      FileUtils.copyDirectory(new File(ExternalPaths.EXAMPLE_HOME), tmpSolrHome);\n      FileUtils.copyFile(getFile(\"old-solr-example/solr.xml\"), new File(tmpSolrHome, \"solr.xml\"));\n      solrHome = tmpSolrHome.getAbsolutePath();\n    }\n    \n    \n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    log.info(\"ZooKeeper dataDir:\" + zkDir);\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkHost(), AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(\"/solr\", false, true);\n    zkClient.close();\n\n    \n    this.zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    \n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n    \n    boolean useNewSolrXml = random().nextBoolean();\n    File tmpDir = createTempDir();\n    if (useNewSolrXml) {\n      solrHome = ExternalPaths.EXAMPLE_HOME;\n    } else {\n      File tmpSolrHome = new File(tmpDir, \"tmp-solr-home\");\n      FileUtils.copyDirectory(new File(ExternalPaths.EXAMPLE_HOME), tmpSolrHome);\n      FileUtils.copyFile(getFile(\"old-solr-example/solr.xml\"), new File(tmpSolrHome, \"solr.xml\"));\n      solrHome = tmpSolrHome.getAbsolutePath();\n    }\n    \n    \n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    log.info(\"ZooKeeper dataDir:\" + zkDir);\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkHost(), AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(\"/solr\", false, true);\n    zkClient.close();\n\n    \n    this.zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    \n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n    createTempDir();\n    \n    boolean useNewSolrXml = random().nextBoolean();\n    \n    if (useNewSolrXml) {\n      solrHome = ExternalPaths.EXAMPLE_HOME;\n    } else {\n      File tmpSolrHome = new File(dataDir, \"tmp-solr-home\");\n      FileUtils.copyDirectory(new File(ExternalPaths.EXAMPLE_HOME), tmpSolrHome);\n      FileUtils.copyFile(getFile(\"old-solr-example/solr.xml\"), new File(tmpSolrHome, \"solr.xml\"));\n      solrHome = tmpSolrHome.getAbsolutePath();\n    }\n    \n    \n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    log.info(\"ZooKeeper dataDir:\" + zkDir);\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkHost(), AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(\"/solr\", false, true);\n    zkClient.close();\n\n    \n    this.zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    \n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n    \n    boolean useNewSolrXml = random().nextBoolean();\n    File tmpDir = createTempDir();\n    if (useNewSolrXml) {\n      solrHome = ExternalPaths.EXAMPLE_HOME;\n    } else {\n      File tmpSolrHome = new File(tmpDir, \"tmp-solr-home\");\n      FileUtils.copyDirectory(new File(ExternalPaths.EXAMPLE_HOME), tmpSolrHome);\n      FileUtils.copyFile(getFile(\"old-solr-example/solr.xml\"), new File(tmpSolrHome, \"solr.xml\"));\n      solrHome = tmpSolrHome.getAbsolutePath();\n    }\n    \n    \n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    log.info(\"ZooKeeper dataDir:\" + zkDir);\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkHost(), AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(\"/solr\", false, true);\n    zkClient.close();\n\n    \n    this.zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    \n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n    \n    boolean useNewSolrXml = random().nextBoolean();\n    \n    if (useNewSolrXml) {\n      solrHome = ExternalPaths.EXAMPLE_HOME;\n    } else {\n      File tmpSolrHome = new File(dataDir, \"tmp-solr-home\");\n      FileUtils.copyDirectory(new File(ExternalPaths.EXAMPLE_HOME), tmpSolrHome);\n      FileUtils.copyFile(getFile(\"old-solr-example/solr.xml\"), new File(tmpSolrHome, \"solr.xml\"));\n      solrHome = tmpSolrHome.getAbsolutePath();\n    }\n    \n    \n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    log.info(\"ZooKeeper dataDir:\" + zkDir);\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkHost(), AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(\"/solr\", false, true);\n    zkClient.close();\n\n    \n    this.zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    \n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n    \n    boolean useNewSolrXml = random().nextBoolean();\n    File tmpDir = createTempDir().toFile();\n    if (useNewSolrXml) {\n      solrHome = ExternalPaths.EXAMPLE_HOME;\n    } else {\n      File tmpSolrHome = new File(tmpDir, \"tmp-solr-home\");\n      FileUtils.copyDirectory(new File(ExternalPaths.EXAMPLE_HOME), tmpSolrHome);\n      FileUtils.copyFile(getFile(\"old-solr-example/solr.xml\"), new File(tmpSolrHome, \"solr.xml\"));\n      solrHome = tmpSolrHome.getAbsolutePath();\n    }\n    \n    \n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    log.info(\"ZooKeeper dataDir:\" + zkDir);\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkHost(), AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(\"/solr\", false, true);\n    zkClient.close();\n\n    \n    this.zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    \n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n    \n    boolean useNewSolrXml = random().nextBoolean();\n    File tmpDir = createTempDir();\n    if (useNewSolrXml) {\n      solrHome = ExternalPaths.EXAMPLE_HOME;\n    } else {\n      File tmpSolrHome = new File(tmpDir, \"tmp-solr-home\");\n      FileUtils.copyDirectory(new File(ExternalPaths.EXAMPLE_HOME), tmpSolrHome);\n      FileUtils.copyFile(getFile(\"old-solr-example/solr.xml\"), new File(tmpSolrHome, \"solr.xml\"));\n      solrHome = tmpSolrHome.getAbsolutePath();\n    }\n    \n    \n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    log.info(\"ZooKeeper dataDir:\" + zkDir);\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkHost(), AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(\"/solr\", false, true);\n    zkClient.close();\n\n    \n    this.zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    \n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e25c332f157326faecb36f76173033c1284776a5","date":1414729852,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n\n    String exampleHome = SolrJettyTestBase.legacyExampleCollection1SolrHome();\n    \n    boolean useNewSolrXml = random().nextBoolean();\n    File tmpDir = createTempDir().toFile();\n    if (useNewSolrXml) {\n      solrHome = exampleHome;\n    } else {\n      File tmpSolrHome = new File(tmpDir, \"tmp-solr-home\");\n      FileUtils.copyDirectory(new File(exampleHome), tmpSolrHome);\n      FileUtils.copyFile(getFile(\"old-solr-example/solr.xml\"), new File(tmpSolrHome, \"solr.xml\"));\n      solrHome = tmpSolrHome.getAbsolutePath();\n    }\n    \n    \n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    log.info(\"ZooKeeper dataDir:\" + zkDir);\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkHost(), AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(\"/solr\", false, true);\n    zkClient.close();\n\n    \n    this.zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    \n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n    \n    boolean useNewSolrXml = random().nextBoolean();\n    File tmpDir = createTempDir().toFile();\n    if (useNewSolrXml) {\n      solrHome = ExternalPaths.EXAMPLE_HOME;\n    } else {\n      File tmpSolrHome = new File(tmpDir, \"tmp-solr-home\");\n      FileUtils.copyDirectory(new File(ExternalPaths.EXAMPLE_HOME), tmpSolrHome);\n      FileUtils.copyFile(getFile(\"old-solr-example/solr.xml\"), new File(tmpSolrHome, \"solr.xml\"));\n      solrHome = tmpSolrHome.getAbsolutePath();\n    }\n    \n    \n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    log.info(\"ZooKeeper dataDir:\" + zkDir);\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkHost(), AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(\"/solr\", false, true);\n    zkClient.close();\n\n    \n    this.zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    \n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n\n    String exampleHome = SolrJettyTestBase.legacyExampleCollection1SolrHome();\n\n    File tmpDir = createTempDir().toFile();\n    solrHome = exampleHome;\n\n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    log.info(\"ZooKeeper dataDir:\" + zkDir);\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkHost(), AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(\"/solr\", false, true);\n    zkClient.close();\n\n    \n    this.zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    \n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n\n    String exampleHome = SolrJettyTestBase.legacyExampleCollection1SolrHome();\n    \n    boolean useNewSolrXml = random().nextBoolean();\n    File tmpDir = createTempDir().toFile();\n    if (useNewSolrXml) {\n      solrHome = exampleHome;\n    } else {\n      File tmpSolrHome = new File(tmpDir, \"tmp-solr-home\");\n      FileUtils.copyDirectory(new File(exampleHome), tmpSolrHome);\n      FileUtils.copyFile(getFile(\"old-solr-example/solr.xml\"), new File(tmpSolrHome, \"solr.xml\"));\n      solrHome = tmpSolrHome.getAbsolutePath();\n    }\n    \n    \n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    log.info(\"ZooKeeper dataDir:\" + zkDir);\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkHost(), AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(\"/solr\", false, true);\n    zkClient.close();\n\n    \n    this.zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    \n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15","date":1554259533,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n\n    String exampleHome = SolrJettyTestBase.legacyExampleCollection1SolrHome();\n\n    File tmpDir = createTempDir().toFile();\n    solrHome = exampleHome;\n\n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    log.info(\"ZooKeeper dataDir:\" + zkDir);\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkHost(), AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(\"/solr\", false, true);\n    zkClient.close();\n\n\n    this.zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n\n    String exampleHome = SolrJettyTestBase.legacyExampleCollection1SolrHome();\n\n    File tmpDir = createTempDir().toFile();\n    solrHome = exampleHome;\n\n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    log.info(\"ZooKeeper dataDir:\" + zkDir);\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkHost(), AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(\"/solr\", false, true);\n    zkClient.close();\n\n    \n    this.zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n    \n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1778938cb7fb298e6e07a43e2d5acaf552d61518","date":1559609435,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n\n    String exampleHome = SolrJettyTestBase.legacyExampleCollection1SolrHome();\n\n    Path tmpDir = createTempDir();\n    solrHome = exampleHome;\n\n    zkDir = tmpDir.resolve(\"zookeeper/server1/data\");\n    log.info(\"ZooKeeper dataDir:\" + zkDir);\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkHost(), AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(\"/solr\", false, true);\n    zkClient.close();\n\n\n    this.zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n\n    String exampleHome = SolrJettyTestBase.legacyExampleCollection1SolrHome();\n\n    File tmpDir = createTempDir().toFile();\n    solrHome = exampleHome;\n\n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    log.info(\"ZooKeeper dataDir:\" + zkDir);\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkHost(), AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(\"/solr\", false, true);\n    zkClient.close();\n\n\n    this.zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    if (log.isInfoEnabled()) {\n      log.info(\"####SETUP_START {}\", getTestName());\n    }\n\n    String exampleHome = SolrJettyTestBase.legacyExampleCollection1SolrHome();\n\n    Path tmpDir = createTempDir();\n    solrHome = exampleHome;\n\n    zkDir = tmpDir.resolve(\"zookeeper/server1/data\");\n    log.info(\"ZooKeeper dataDir:{}\", zkDir);\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkHost(), AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(\"/solr\", false, true);\n    zkClient.close();\n\n\n    this.zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n\n    if (log.isInfoEnabled()) {\n      log.info(\"####SETUP_END {}\", getTestName());\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n\n    String exampleHome = SolrJettyTestBase.legacyExampleCollection1SolrHome();\n\n    Path tmpDir = createTempDir();\n    solrHome = exampleHome;\n\n    zkDir = tmpDir.resolve(\"zookeeper/server1/data\");\n    log.info(\"ZooKeeper dataDir:\" + zkDir);\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    SolrZkClient zkClient = new SolrZkClient(zkServer.getZkHost(), AbstractZkTestCase.TIMEOUT);\n    zkClient.makePath(\"/solr\", false, true);\n    zkClient.close();\n\n\n    this.zkClient = new SolrZkClient(zkServer.getZkAddress(),\n        AbstractZkTestCase.TIMEOUT);\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9":["96c692b5bdca33a6392254cacfbe5a5136a19209"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["a475a1c165e02515bff766b3b7be0c42edf1870c"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["1416f9d09d016a6894cd17e1caac137dad2bba59","bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["e25c332f157326faecb36f76173033c1284776a5"],"e25c332f157326faecb36f76173033c1284776a5":["f4abec28b874149a7223e32cc7a01704c27790de"],"f4abec28b874149a7223e32cc7a01704c27790de":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["1778938cb7fb298e6e07a43e2d5acaf552d61518"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","96c692b5bdca33a6392254cacfbe5a5136a19209"],"96c692b5bdca33a6392254cacfbe5a5136a19209":["cf4e43a4d7a969632d4bec76fd5bba149cb81487"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["a475a1c165e02515bff766b3b7be0c42edf1870c"],"a475a1c165e02515bff766b3b7be0c42edf1870c":["e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9"],"cf4e43a4d7a969632d4bec76fd5bba149cb81487":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cf4e43a4d7a969632d4bec76fd5bba149cb81487"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7":["fe33227f6805edab2036cbb80645cc4e2d1fa424","96c692b5bdca33a6392254cacfbe5a5136a19209"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"1778938cb7fb298e6e07a43e2d5acaf552d61518":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a966532d92cf9ba2856f15a8140151bb6b518e4b"]},"commit2Childs":{"e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9":["a475a1c165e02515bff766b3b7be0c42edf1870c"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["f4abec28b874149a7223e32cc7a01704c27790de"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"e25c332f157326faecb36f76173033c1284776a5":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"f4abec28b874149a7223e32cc7a01704c27790de":["e25c332f157326faecb36f76173033c1284776a5"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"96c692b5bdca33a6392254cacfbe5a5136a19209":["e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9","aba371508186796cc6151d8223a5b4e16d02e26e","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7"],"a475a1c165e02515bff766b3b7be0c42edf1870c":["bb1f22cfa77230b5f05b7784feae5367f6bbb488","1416f9d09d016a6894cd17e1caac137dad2bba59"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"cf4e43a4d7a969632d4bec76fd5bba149cb81487":["96c692b5bdca33a6392254cacfbe5a5136a19209","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["4b51f65902cc2d20ddeb7a5b949aaddf990f31a7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","cf4e43a4d7a969632d4bec76fd5bba149cb81487","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7":[],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["1778938cb7fb298e6e07a43e2d5acaf552d61518"],"1778938cb7fb298e6e07a43e2d5acaf552d61518":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}