{"path":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testCollateWithOverride().mjava","commits":[{"id":"f4c7c80b7be1f9058adb5ed547379fba54f55785","date":1339435024,"type":0,"author":"James Dyer","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testCollateWithOverride().mjava","pathOld":"/dev/null","sourceNew":"\tpublic void testCollateWithOverride() throws Exception\n\t{\n\t  assertQ(\n      req(\n    \t  SpellCheckComponent.COMPONENT_NAME, \"true\",\n        SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n        SpellingParams.SPELLCHECK_COUNT, \"10\",   \n        SpellingParams.SPELLCHECK_COLLATE, \"true\",\n        SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n        SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"10\",\n        \"qt\", \"spellCheckCompRH\",\n        \"defType\", \"edismax\",\n        \"qf\", \"teststop\",\n        \"mm\", \"1\",\n        CommonParams.Q, \"partisian politcal mashine\"\n      ),\n      \"//lst[@name='spellcheck']/lst[@name='suggestions']/str[@name='collation']='parisian political machine'\"\n    );\n\t  assertQ(\n\t      req(\n\t        SpellCheckComponent.COMPONENT_NAME, \"true\",\n\t        SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n\t        SpellingParams.SPELLCHECK_COUNT, \"10\",   \n\t        SpellingParams.SPELLCHECK_COLLATE, \"true\",\n\t        SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n\t        SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"10\",\n\t        \"qt\", \"spellCheckCompRH\",\n\t        \"defType\", \"edismax\",\n\t        \"qf\", \"teststop\",\n\t        \"mm\", \"1\",\n\t        SpellingParams.SPELLCHECK_COLLATE_PARAM_OVERRIDE + \"mm\", \"100%\",\n\t        CommonParams.Q, \"partisian politcal mashine\"\n\t      ),\n\t     \"//lst[@name='spellcheck']/lst[@name='suggestions']/str[@name='collation']='partisan political machine'\"\n\t   );\n    \n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4093b270ba337f9c25a4c0e6cb2ae2c07f697376","date":1347897716,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testCollateWithOverride().mjava","pathOld":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testCollateWithOverride().mjava","sourceNew":"  public void testCollateWithOverride() throws Exception\n  {\n    assertQ(\n      req(\n        SpellCheckComponent.COMPONENT_NAME, \"true\",\n        SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n        SpellingParams.SPELLCHECK_COUNT, \"10\",   \n        SpellingParams.SPELLCHECK_COLLATE, \"true\",\n        SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n        SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"10\",\n        \"qt\", \"spellCheckCompRH\",\n        \"defType\", \"edismax\",\n        \"qf\", \"teststop\",\n        \"mm\", \"1\",\n        CommonParams.Q, \"partisian politcal mashine\"\n      ),\n      \"//lst[@name='spellcheck']/lst[@name='suggestions']/str[@name='collation']='parisian political machine'\"\n    );\n    assertQ(\n        req(\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n          SpellingParams.SPELLCHECK_COUNT, \"10\",\n          SpellingParams.SPELLCHECK_COLLATE, \"true\",\n          SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"10\",\n          \"qt\", \"spellCheckCompRH\",\n          \"defType\", \"edismax\",\n          \"qf\", \"teststop\",\n          \"mm\", \"1\",\n          SpellingParams.SPELLCHECK_COLLATE_PARAM_OVERRIDE + \"mm\", \"100%\",\n          CommonParams.Q, \"partisian politcal mashine\"\n        ),\n       \"//lst[@name='spellcheck']/lst[@name='suggestions']/str[@name='collation']='partisan political machine'\"\n     );\n    \n  }\n\n","sourceOld":"\tpublic void testCollateWithOverride() throws Exception\n\t{\n\t  assertQ(\n      req(\n    \t  SpellCheckComponent.COMPONENT_NAME, \"true\",\n        SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n        SpellingParams.SPELLCHECK_COUNT, \"10\",   \n        SpellingParams.SPELLCHECK_COLLATE, \"true\",\n        SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n        SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"10\",\n        \"qt\", \"spellCheckCompRH\",\n        \"defType\", \"edismax\",\n        \"qf\", \"teststop\",\n        \"mm\", \"1\",\n        CommonParams.Q, \"partisian politcal mashine\"\n      ),\n      \"//lst[@name='spellcheck']/lst[@name='suggestions']/str[@name='collation']='parisian political machine'\"\n    );\n\t  assertQ(\n\t      req(\n\t        SpellCheckComponent.COMPONENT_NAME, \"true\",\n\t        SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n\t        SpellingParams.SPELLCHECK_COUNT, \"10\",   \n\t        SpellingParams.SPELLCHECK_COLLATE, \"true\",\n\t        SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n\t        SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"10\",\n\t        \"qt\", \"spellCheckCompRH\",\n\t        \"defType\", \"edismax\",\n\t        \"qf\", \"teststop\",\n\t        \"mm\", \"1\",\n\t        SpellingParams.SPELLCHECK_COLLATE_PARAM_OVERRIDE + \"mm\", \"100%\",\n\t        CommonParams.Q, \"partisian politcal mashine\"\n\t      ),\n\t     \"//lst[@name='spellcheck']/lst[@name='suggestions']/str[@name='collation']='partisan political machine'\"\n\t   );\n    \n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"343d2d9477b299075fa3a19a46e654b6c3bf552b","date":1407872410,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testCollateWithOverride().mjava","pathOld":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testCollateWithOverride().mjava","sourceNew":"  public void testCollateWithOverride() throws Exception\n  {\n    assertQ(\n      req(\n        SpellCheckComponent.COMPONENT_NAME, \"true\",\n        SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n        SpellingParams.SPELLCHECK_COUNT, \"10\",   \n        SpellingParams.SPELLCHECK_COLLATE, \"true\",\n        SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n        SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"10\",\n        \"qt\", \"spellCheckCompRH\",\n        \"defType\", \"edismax\",\n        \"qf\", \"teststop\",\n        \"mm\", \"1\",\n        CommonParams.Q, \"partisian politcal mashine\"\n      ),\n      \"//lst[@name='spellcheck']/lst[@name='collations']/str[@name='collation']='parisian political machine'\"\n    );\n    assertQ(\n        req(\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n          SpellingParams.SPELLCHECK_COUNT, \"10\",\n          SpellingParams.SPELLCHECK_COLLATE, \"true\",\n          SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"10\",\n          \"qt\", \"spellCheckCompRH\",\n          \"defType\", \"edismax\",\n          \"qf\", \"teststop\",\n          \"mm\", \"1\",\n          SpellingParams.SPELLCHECK_COLLATE_PARAM_OVERRIDE + \"mm\", \"100%\",\n          CommonParams.Q, \"partisian politcal mashine\"\n        ),\n       \"//lst[@name='spellcheck']/lst[@name='collations']/str[@name='collation']='partisan political machine'\"\n     );\n    \n  }\n\n","sourceOld":"  public void testCollateWithOverride() throws Exception\n  {\n    assertQ(\n      req(\n        SpellCheckComponent.COMPONENT_NAME, \"true\",\n        SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n        SpellingParams.SPELLCHECK_COUNT, \"10\",   \n        SpellingParams.SPELLCHECK_COLLATE, \"true\",\n        SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n        SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"10\",\n        \"qt\", \"spellCheckCompRH\",\n        \"defType\", \"edismax\",\n        \"qf\", \"teststop\",\n        \"mm\", \"1\",\n        CommonParams.Q, \"partisian politcal mashine\"\n      ),\n      \"//lst[@name='spellcheck']/lst[@name='suggestions']/str[@name='collation']='parisian political machine'\"\n    );\n    assertQ(\n        req(\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n          SpellingParams.SPELLCHECK_COUNT, \"10\",\n          SpellingParams.SPELLCHECK_COLLATE, \"true\",\n          SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"10\",\n          \"qt\", \"spellCheckCompRH\",\n          \"defType\", \"edismax\",\n          \"qf\", \"teststop\",\n          \"mm\", \"1\",\n          SpellingParams.SPELLCHECK_COLLATE_PARAM_OVERRIDE + \"mm\", \"100%\",\n          CommonParams.Q, \"partisian politcal mashine\"\n        ),\n       \"//lst[@name='spellcheck']/lst[@name='suggestions']/str[@name='collation']='partisan political machine'\"\n     );\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ff704ef91e9ae30ca59babb23ece85720701b60","date":1498684964,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testCollateWithOverride().mjava","pathOld":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testCollateWithOverride().mjava","sourceNew":"  public void testCollateWithOverride() throws Exception\n  {\n    assertQ(\n      req(\n        SpellCheckComponent.COMPONENT_NAME, \"true\",\n        SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n        SpellingParams.SPELLCHECK_COUNT, \"10\",   \n        SpellingParams.SPELLCHECK_COLLATE, \"true\",\n        SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n        SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"10\",\n        \"qt\", \"/spellCheckCompRH\",\n        \"defType\", \"edismax\",\n        \"qf\", \"teststop\",\n        \"mm\", \"1\",\n        CommonParams.Q, \"partisian politcal mashine\"\n      ),\n      \"//lst[@name='spellcheck']/lst[@name='collations']/str[@name='collation']='parisian political machine'\"\n    );\n    assertQ(\n        req(\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n          SpellingParams.SPELLCHECK_COUNT, \"10\",\n          SpellingParams.SPELLCHECK_COLLATE, \"true\",\n          SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"10\",\n          \"qt\", \"/spellCheckCompRH\",\n          \"defType\", \"edismax\",\n          \"qf\", \"teststop\",\n          \"mm\", \"1\",\n          SpellingParams.SPELLCHECK_COLLATE_PARAM_OVERRIDE + \"mm\", \"100%\",\n          CommonParams.Q, \"partisian politcal mashine\"\n        ),\n       \"//lst[@name='spellcheck']/lst[@name='collations']/str[@name='collation']='partisan political machine'\"\n     );\n    \n  }\n\n","sourceOld":"  public void testCollateWithOverride() throws Exception\n  {\n    assertQ(\n      req(\n        SpellCheckComponent.COMPONENT_NAME, \"true\",\n        SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n        SpellingParams.SPELLCHECK_COUNT, \"10\",   \n        SpellingParams.SPELLCHECK_COLLATE, \"true\",\n        SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n        SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"10\",\n        \"qt\", \"spellCheckCompRH\",\n        \"defType\", \"edismax\",\n        \"qf\", \"teststop\",\n        \"mm\", \"1\",\n        CommonParams.Q, \"partisian politcal mashine\"\n      ),\n      \"//lst[@name='spellcheck']/lst[@name='collations']/str[@name='collation']='parisian political machine'\"\n    );\n    assertQ(\n        req(\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n          SpellingParams.SPELLCHECK_COUNT, \"10\",\n          SpellingParams.SPELLCHECK_COLLATE, \"true\",\n          SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"10\",\n          \"qt\", \"spellCheckCompRH\",\n          \"defType\", \"edismax\",\n          \"qf\", \"teststop\",\n          \"mm\", \"1\",\n          SpellingParams.SPELLCHECK_COLLATE_PARAM_OVERRIDE + \"mm\", \"100%\",\n          CommonParams.Q, \"partisian politcal mashine\"\n        ),\n       \"//lst[@name='spellcheck']/lst[@name='collations']/str[@name='collation']='partisan political machine'\"\n     );\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testCollateWithOverride().mjava","pathOld":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testCollateWithOverride().mjava","sourceNew":"  public void testCollateWithOverride() throws Exception\n  {\n    assertQ(\n      req(\n        SpellCheckComponent.COMPONENT_NAME, \"true\",\n        SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n        SpellingParams.SPELLCHECK_COUNT, \"10\",   \n        SpellingParams.SPELLCHECK_COLLATE, \"true\",\n        SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n        SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"10\",\n        \"qt\", \"/spellCheckCompRH\",\n        \"defType\", \"edismax\",\n        \"qf\", \"teststop\",\n        \"mm\", \"1\",\n        CommonParams.Q, \"partisian politcal mashine\"\n      ),\n      \"//lst[@name='spellcheck']/lst[@name='collations']/str[@name='collation']='parisian political machine'\"\n    );\n    assertQ(\n        req(\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n          SpellingParams.SPELLCHECK_COUNT, \"10\",\n          SpellingParams.SPELLCHECK_COLLATE, \"true\",\n          SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"10\",\n          \"qt\", \"/spellCheckCompRH\",\n          \"defType\", \"edismax\",\n          \"qf\", \"teststop\",\n          \"mm\", \"1\",\n          SpellingParams.SPELLCHECK_COLLATE_PARAM_OVERRIDE + \"mm\", \"100%\",\n          CommonParams.Q, \"partisian politcal mashine\"\n        ),\n       \"//lst[@name='spellcheck']/lst[@name='collations']/str[@name='collation']='partisan political machine'\"\n     );\n    \n  }\n\n","sourceOld":"  public void testCollateWithOverride() throws Exception\n  {\n    assertQ(\n      req(\n        SpellCheckComponent.COMPONENT_NAME, \"true\",\n        SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n        SpellingParams.SPELLCHECK_COUNT, \"10\",   \n        SpellingParams.SPELLCHECK_COLLATE, \"true\",\n        SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n        SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"10\",\n        \"qt\", \"spellCheckCompRH\",\n        \"defType\", \"edismax\",\n        \"qf\", \"teststop\",\n        \"mm\", \"1\",\n        CommonParams.Q, \"partisian politcal mashine\"\n      ),\n      \"//lst[@name='spellcheck']/lst[@name='collations']/str[@name='collation']='parisian political machine'\"\n    );\n    assertQ(\n        req(\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n          SpellingParams.SPELLCHECK_COUNT, \"10\",\n          SpellingParams.SPELLCHECK_COLLATE, \"true\",\n          SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"10\",\n          \"qt\", \"spellCheckCompRH\",\n          \"defType\", \"edismax\",\n          \"qf\", \"teststop\",\n          \"mm\", \"1\",\n          SpellingParams.SPELLCHECK_COLLATE_PARAM_OVERRIDE + \"mm\", \"100%\",\n          CommonParams.Q, \"partisian politcal mashine\"\n        ),\n       \"//lst[@name='spellcheck']/lst[@name='collations']/str[@name='collation']='partisan political machine'\"\n     );\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testCollateWithOverride().mjava","pathOld":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testCollateWithOverride().mjava","sourceNew":"  public void testCollateWithOverride() throws Exception\n  {\n    assertQ(\n      req(\n        SpellCheckComponent.COMPONENT_NAME, \"true\",\n        SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n        SpellingParams.SPELLCHECK_COUNT, \"10\",   \n        SpellingParams.SPELLCHECK_COLLATE, \"true\",\n        SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n        SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"10\",\n        \"qt\", \"/spellCheckCompRH\",\n        \"defType\", \"edismax\",\n        \"qf\", \"teststop\",\n        \"mm\", \"1\",\n        CommonParams.Q, \"partisian politcal mashine\"\n      ),\n      \"//lst[@name='spellcheck']/lst[@name='collations']/str[@name='collation']='parisian political machine'\"\n    );\n    assertQ(\n        req(\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n          SpellingParams.SPELLCHECK_COUNT, \"10\",\n          SpellingParams.SPELLCHECK_COLLATE, \"true\",\n          SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"10\",\n          \"qt\", \"/spellCheckCompRH\",\n          \"defType\", \"edismax\",\n          \"qf\", \"teststop\",\n          \"mm\", \"1\",\n          SpellingParams.SPELLCHECK_COLLATE_PARAM_OVERRIDE + \"mm\", \"100%\",\n          CommonParams.Q, \"partisian politcal mashine\"\n        ),\n       \"//lst[@name='spellcheck']/lst[@name='collations']/str[@name='collation']='partisan political machine'\"\n     );\n    \n  }\n\n","sourceOld":"  public void testCollateWithOverride() throws Exception\n  {\n    assertQ(\n      req(\n        SpellCheckComponent.COMPONENT_NAME, \"true\",\n        SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n        SpellingParams.SPELLCHECK_COUNT, \"10\",   \n        SpellingParams.SPELLCHECK_COLLATE, \"true\",\n        SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n        SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"10\",\n        \"qt\", \"spellCheckCompRH\",\n        \"defType\", \"edismax\",\n        \"qf\", \"teststop\",\n        \"mm\", \"1\",\n        CommonParams.Q, \"partisian politcal mashine\"\n      ),\n      \"//lst[@name='spellcheck']/lst[@name='collations']/str[@name='collation']='parisian political machine'\"\n    );\n    assertQ(\n        req(\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, \"direct\",\n          SpellingParams.SPELLCHECK_COUNT, \"10\",\n          SpellingParams.SPELLCHECK_COLLATE, \"true\",\n          SpellingParams.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellingParams.SPELLCHECK_MAX_COLLATIONS, \"10\",\n          \"qt\", \"spellCheckCompRH\",\n          \"defType\", \"edismax\",\n          \"qf\", \"teststop\",\n          \"mm\", \"1\",\n          SpellingParams.SPELLCHECK_COLLATE_PARAM_OVERRIDE + \"mm\", \"100%\",\n          CommonParams.Q, \"partisian politcal mashine\"\n        ),\n       \"//lst[@name='spellcheck']/lst[@name='collations']/str[@name='collation']='partisan political machine'\"\n     );\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"343d2d9477b299075fa3a19a46e654b6c3bf552b":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f4c7c80b7be1f9058adb5ed547379fba54f55785":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"30c8e5574b55d57947e989443dfde611646530ee":["343d2d9477b299075fa3a19a46e654b6c3bf552b","28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["343d2d9477b299075fa3a19a46e654b6c3bf552b","5ff704ef91e9ae30ca59babb23ece85720701b60"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["f4c7c80b7be1f9058adb5ed547379fba54f55785"],"5ff704ef91e9ae30ca59babb23ece85720701b60":["343d2d9477b299075fa3a19a46e654b6c3bf552b"]},"commit2Childs":{"343d2d9477b299075fa3a19a46e654b6c3bf552b":["30c8e5574b55d57947e989443dfde611646530ee","28288370235ed02234a64753cdbf0c6ec096304a","5ff704ef91e9ae30ca59babb23ece85720701b60"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f4c7c80b7be1f9058adb5ed547379fba54f55785"],"f4c7c80b7be1f9058adb5ed547379fba54f55785":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"30c8e5574b55d57947e989443dfde611646530ee":[],"28288370235ed02234a64753cdbf0c6ec096304a":["30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["343d2d9477b299075fa3a19a46e654b6c3bf552b"],"5ff704ef91e9ae30ca59babb23ece85720701b60":["28288370235ed02234a64753cdbf0c6ec096304a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}