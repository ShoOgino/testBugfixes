{"path":"solr/solrj/src/java/org/apache/solr/recipe/RuleSorter.Condition#Condition(Map.Entry[String,Object]).mjava","commits":[{"id":"0cf93ce8d2bc0210731dd8d840f40b183df2c804","date":1489476316,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/recipe/RuleSorter.Condition#Condition(Map.Entry[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"    Condition(Map.Entry<String, Object> m) {\n      Object expectedVal;\n      try {\n        this.name = m.getKey().trim();\n        String value = m.getValue().toString().trim();\n        if ((expectedVal = NOT_EQUAL.match(value)) != null) {\n          operand = NOT_EQUAL;\n        } else if ((expectedVal = GREATER_THAN.match(value)) != null) {\n          operand = GREATER_THAN;\n        } else if ((expectedVal = LESS_THAN.match(value)) != null) {\n          operand = LESS_THAN;\n        } else {\n          operand = Operand.EQUAL;\n          expectedVal = value;\n        }\n\n        if (name.equals(REPLICA_PROP)) {\n          if (!ALL.equals(expectedVal)) {\n            try {\n              expectedVal = Integer.parseInt(expectedVal.toString());\n            } catch (NumberFormatException e) {\n              throw new RuntimeException(\"The replica tag value can only be '*' or an integer\");\n            }\n          }\n        }\n\n      } catch (Exception e) {\n        throw new IllegalArgumentException(\"Invalid condition : \" + name + \":\" + val, e);\n      }\n      this.val = expectedVal;\n\n\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"226b3bf77af5749a90c81edd3d4168fd6e276a24","date":1490013063,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/recipe/RuleSorter.Condition#Condition(Map.Entry[String,Object]).mjava","sourceNew":null,"sourceOld":"    Condition(Map.Entry<String, Object> m) {\n      Object expectedVal;\n      try {\n        this.name = m.getKey().trim();\n        String value = m.getValue().toString().trim();\n        if ((expectedVal = NOT_EQUAL.match(value)) != null) {\n          operand = NOT_EQUAL;\n        } else if ((expectedVal = GREATER_THAN.match(value)) != null) {\n          operand = GREATER_THAN;\n        } else if ((expectedVal = LESS_THAN.match(value)) != null) {\n          operand = LESS_THAN;\n        } else {\n          operand = Operand.EQUAL;\n          expectedVal = value;\n        }\n\n        if (name.equals(REPLICA_PROP)) {\n          if (!ALL.equals(expectedVal)) {\n            try {\n              expectedVal = Integer.parseInt(expectedVal.toString());\n            } catch (NumberFormatException e) {\n              throw new RuntimeException(\"The replica tag value can only be '*' or an integer\");\n            }\n          }\n        }\n\n      } catch (Exception e) {\n        throw new IllegalArgumentException(\"Invalid condition : \" + name + \":\" + val, e);\n      }\n      this.val = expectedVal;\n\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"226b3bf77af5749a90c81edd3d4168fd6e276a24":["0cf93ce8d2bc0210731dd8d840f40b183df2c804"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0cf93ce8d2bc0210731dd8d840f40b183df2c804":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"226b3bf77af5749a90c81edd3d4168fd6e276a24":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0cf93ce8d2bc0210731dd8d840f40b183df2c804","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0cf93ce8d2bc0210731dd8d840f40b183df2c804":["226b3bf77af5749a90c81edd3d4168fd6e276a24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["226b3bf77af5749a90c81edd3d4168fd6e276a24","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}