{"path":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetJoinDomain.TermFacet#randomOverrequestParam(Random).mjava","commits":[{"id":"92910727264a23a47b7a6c94b0f75d655537b9ea","date":1540414655,"type":1,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetJoinDomain.TermFacet#randomOverrequestParam(Random).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestCloudJSONFacetJoinDomain.TermFacet#randomOverrequestParam(Random).mjava","sourceNew":"    /**\n     * picks a random value for the \"overrequest\" param, biased in favor of interesting test cases\n     *\n     * @return a number to specify in the request, or null to specify nothing (trigger default behavior)\n     * @see #UNIQUE_FIELD_VALS\n     */\n    public static Integer randomOverrequestParam(Random r) {\n      switch(r.nextInt(10)) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n          return 0; // 40% of the time, no overrequest to better stress refinement\n        case 4:\n        case 5:\n          return r.nextInt(UNIQUE_FIELD_VALS); // 20% ask for less them what's needed\n        case 6:\n          return r.nextInt(Integer.MAX_VALUE); // 10%: completley random value, statisticaly more then enough\n        default: break;\n      }\n      // else.... either leave param unspecified (or redundently specify the -1 default)\n      return r.nextBoolean() ? null : -1;\n    }\n\n","sourceOld":"    /**\n     * picks a random value for the \"overrequest\" param, biased in favor of interesting test cases\n     *\n     * @return a number to specify in the request, or null to specify nothing (trigger default behavior)\n     * @see #UNIQUE_FIELD_VALS\n     */\n    public static Integer randomOverrequestParam(Random r) {\n      switch(r.nextInt(10)) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n          return 0; // 40% of the time, no overrequest to better stress refinement\n        case 4:\n        case 5:\n          return r.nextInt(UNIQUE_FIELD_VALS); // 20% ask for less them what's needed\n        case 6:\n          return r.nextInt(Integer.MAX_VALUE); // 10%: completley random value, statisticaly more then enough\n        default: break;\n      }\n      // else.... either leave param unspecified (or redundently specify the -1 default)\n      return r.nextBoolean() ? null : -1;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"92910727264a23a47b7a6c94b0f75d655537b9ea":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["92910727264a23a47b7a6c94b0f75d655537b9ea"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["92910727264a23a47b7a6c94b0f75d655537b9ea"],"92910727264a23a47b7a6c94b0f75d655537b9ea":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}