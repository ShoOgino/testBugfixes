{"path":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapePolygonQuery#LatLonShapePolygonQuery(String,QueryRelation,Polygon...).mjava","commits":[{"id":"97f74f84954e9fefbac4cb38b9bf339e1757600d","date":1533750605,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapePolygonQuery#LatLonShapePolygonQuery(String,QueryRelation,Polygon...).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapePolygonQuery#LatLonShapePolygonQuery(String,Polygon...).mjava","sourceNew":"  /**\n   * Creates a query that matches all indexed shapes to the provided polygons\n   */\n  public LatLonShapePolygonQuery(String field, QueryRelation queryRelation, Polygon... polygons) {\n    super(field, queryRelation);\n    if (polygons == null) {\n      throw new IllegalArgumentException(\"polygons must not be null\");\n    }\n    if (polygons.length == 0) {\n      throw new IllegalArgumentException(\"polygons must not be empty\");\n    }\n    for (int i = 0; i < polygons.length; i++) {\n      if (polygons[i] == null) {\n        throw new IllegalArgumentException(\"polygon[\" + i + \"] must not be null\");\n      } else if (polygons[i].minLon > polygons[i].maxLon) {\n        throw new IllegalArgumentException(\"LatLonShapePolygonQuery does not currently support querying across dateline.\");\n      }\n    }\n    this.polygons = polygons.clone();\n    this.poly2D = Polygon2D.create(polygons);\n  }\n\n","sourceOld":"  public LatLonShapePolygonQuery(String field, Polygon... polygons) {\n    if (field == null) {\n      throw new IllegalArgumentException(\"field must not be null\");\n    }\n    if (polygons == null) {\n      throw new IllegalArgumentException(\"polygons must not be null\");\n    }\n    if (polygons.length == 0) {\n      throw new IllegalArgumentException(\"polygons must not be empty\");\n    }\n    for (int i = 0; i < polygons.length; i++) {\n      if (polygons[i] == null) {\n        throw new IllegalArgumentException(\"polygon[\" + i + \"] must not be null\");\n      }\n    }\n    this.field = field;\n    this.polygons = polygons.clone();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c1e6d465800c73af60624bf9d4459a19f7940c","date":1579293280,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/LatLonShapePolygonQuery#LatLonShapePolygonQuery(String,QueryRelation,Polygon...).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapePolygonQuery#LatLonShapePolygonQuery(String,QueryRelation,Polygon...).mjava","sourceNew":"  /**\n   * Creates a query that matches all indexed shapes to the provided polygons\n   */\n  public LatLonShapePolygonQuery(String field, QueryRelation queryRelation, Polygon... polygons) {\n    super(field, queryRelation);\n    if (polygons == null) {\n      throw new IllegalArgumentException(\"polygons must not be null\");\n    }\n    if (polygons.length == 0) {\n      throw new IllegalArgumentException(\"polygons must not be empty\");\n    }\n    for (int i = 0; i < polygons.length; i++) {\n      if (polygons[i] == null) {\n        throw new IllegalArgumentException(\"polygon[\" + i + \"] must not be null\");\n      } else if (polygons[i].minLon > polygons[i].maxLon) {\n        throw new IllegalArgumentException(\"LatLonShapePolygonQuery does not currently support querying across dateline.\");\n      }\n    }\n    this.polygons = polygons.clone();\n    this.poly2D = Polygon2D.create(polygons);\n  }\n\n","sourceOld":"  /**\n   * Creates a query that matches all indexed shapes to the provided polygons\n   */\n  public LatLonShapePolygonQuery(String field, QueryRelation queryRelation, Polygon... polygons) {\n    super(field, queryRelation);\n    if (polygons == null) {\n      throw new IllegalArgumentException(\"polygons must not be null\");\n    }\n    if (polygons.length == 0) {\n      throw new IllegalArgumentException(\"polygons must not be empty\");\n    }\n    for (int i = 0; i < polygons.length; i++) {\n      if (polygons[i] == null) {\n        throw new IllegalArgumentException(\"polygon[\" + i + \"] must not be null\");\n      } else if (polygons[i].minLon > polygons[i].maxLon) {\n        throw new IllegalArgumentException(\"LatLonShapePolygonQuery does not currently support querying across dateline.\");\n      }\n    }\n    this.polygons = polygons.clone();\n    this.poly2D = Polygon2D.create(polygons);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97f74f84954e9fefbac4cb38b9bf339e1757600d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c1e6d465800c73af60624bf9d4459a19f7940c":["97f74f84954e9fefbac4cb38b9bf339e1757600d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09c1e6d465800c73af60624bf9d4459a19f7940c"]},"commit2Childs":{"97f74f84954e9fefbac4cb38b9bf339e1757600d":["09c1e6d465800c73af60624bf9d4459a19f7940c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["97f74f84954e9fefbac4cb38b9bf339e1757600d"],"09c1e6d465800c73af60624bf9d4459a19f7940c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}