{"path":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/UserInputQueryBuilder#getQuery(Element).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/UserInputQueryBuilder#getQuery(Element).mjava","pathOld":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/UserInputQueryBuilder#getQuery(Element).mjava","sourceNew":"\t/* (non-Javadoc)\n\t * @see org.apache.lucene.xmlparser.QueryObjectBuilder#process(org.w3c.dom.Element)\n\t */\n\tpublic Query getQuery(Element e) throws ParserException {\n\t\tString text=DOMUtils.getText(e);\n\t\ttry {\n\t\t\tQuery q = null;\n\t\t\tif(unSafeParser!=null)\n\t\t\t{\n\t\t\t\t//synchronize on unsafe parser\n\t\t\t\tsynchronized (unSafeParser)\n\t\t\t\t{\n\t\t\t\t\tq = unSafeParser.parse(text);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tString fieldName=DOMUtils.getAttribute(e, \"fieldName\", defaultField);\n\t\t\t\t//Create new parser\n\t\t\t\tQueryParser parser=createQueryParser(fieldName, analyzer);\n\t\t\t\tq = parser.parse(text);\t\t\t\t\n\t\t\t}\n\t\t\tq.setBoost(DOMUtils.getAttribute(e,\"boost\",1.0f));\n\t\t\treturn q;\n\t\t} catch (ParseException e1) {\n\t\t\tthrow new ParserException(e1.getMessage());\n\t\t}\n\t}\n\n","sourceOld":"\t/* (non-Javadoc)\n\t * @see org.apache.lucene.xmlparser.QueryObjectBuilder#process(org.w3c.dom.Element)\n\t */\n\tpublic Query getQuery(Element e) throws ParserException {\n\t\tString text=DOMUtils.getText(e);\n\t\ttry {\n\t\t\tQuery q = null;\n\t\t\tif(unSafeParser!=null)\n\t\t\t{\n\t\t\t\t//synchronize on unsafe parser\n\t\t\t\tsynchronized (unSafeParser)\n\t\t\t\t{\n\t\t\t\t\tq = unSafeParser.parse(text);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tString fieldName=DOMUtils.getAttribute(e, \"fieldName\", defaultField);\n\t\t\t\t//Create new parser\n\t\t\t\tQueryParser parser=createQueryParser(fieldName, analyzer);\n\t\t\t\tq = parser.parse(text);\t\t\t\t\n\t\t\t}\n\t\t\tq.setBoost(DOMUtils.getAttribute(e,\"boost\",1.0f));\n\t\t\treturn q;\n\t\t} catch (ParseException e1) {\n\t\t\tthrow new ParserException(e1.getMessage());\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9cf7b7afd8df340c75bd415bc533c4d82f7645d5","date":1312063576,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/UserInputQueryBuilder#getQuery(Element).mjava","pathOld":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/UserInputQueryBuilder#getQuery(Element).mjava","sourceNew":"\t/* (non-Javadoc)\n\t * @see org.apache.lucene.xmlparser.QueryObjectBuilder#process(org.w3c.dom.Element)\n\t */\n\tpublic Query getQuery(Element e) throws ParserException {\n\t\tString text=DOMUtils.getText(e);\n\t\ttry {\n\t\t\tQuery q = null;\n\t\t\tif(unSafeParser!=null)\n\t\t\t{\n\t\t\t\t//synchronize on unsafe parser\n\t\t\t\tsynchronized (unSafeParser)\n\t\t\t\t{\n\t\t\t\t\tq = unSafeParser.parse(text);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tString fieldName=DOMUtils.getAttribute(e, \"fieldName\", defaultField);\n\t\t\t\t//Create new parser\n\t\t\t\tQueryParser parser=createQueryParser(fieldName, analyzer);\n\t\t\t\tq = parser.parse(text);\t\t\t\t\n\t\t\t}\n\t\t\t// use the boost of the original query here, too and multiply (which may be != 1.0f):\n\t\t\tq.setBoost(q.getBoost()*DOMUtils.getAttribute(e,\"boost\",1.0f));\n\t\t\treturn q;\n\t\t} catch (ParseException e1) {\n\t\t\tthrow new ParserException(e1.getMessage());\n\t\t}\n\t}\n\n","sourceOld":"\t/* (non-Javadoc)\n\t * @see org.apache.lucene.xmlparser.QueryObjectBuilder#process(org.w3c.dom.Element)\n\t */\n\tpublic Query getQuery(Element e) throws ParserException {\n\t\tString text=DOMUtils.getText(e);\n\t\ttry {\n\t\t\tQuery q = null;\n\t\t\tif(unSafeParser!=null)\n\t\t\t{\n\t\t\t\t//synchronize on unsafe parser\n\t\t\t\tsynchronized (unSafeParser)\n\t\t\t\t{\n\t\t\t\t\tq = unSafeParser.parse(text);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tString fieldName=DOMUtils.getAttribute(e, \"fieldName\", defaultField);\n\t\t\t\t//Create new parser\n\t\t\t\tQueryParser parser=createQueryParser(fieldName, analyzer);\n\t\t\t\tq = parser.parse(text);\t\t\t\t\n\t\t\t}\n\t\t\tq.setBoost(DOMUtils.getAttribute(e,\"boost\",1.0f));\n\t\t\treturn q;\n\t\t} catch (ParseException e1) {\n\t\t\tthrow new ParserException(e1.getMessage());\n\t\t}\n\t}\n\n","bugFix":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2","date":1313460667,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/UserInputQueryBuilder#getQuery(Element).mjava","pathOld":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/UserInputQueryBuilder#getQuery(Element).mjava","sourceNew":"  public Query getQuery(Element e) throws ParserException {\n    String text = DOMUtils.getText(e);\n    try {\n      Query q = null;\n      if (unSafeParser != null) {\n        //synchronize on unsafe parser\n        synchronized (unSafeParser) {\n          q = unSafeParser.parse(text);\n        }\n      } else {\n        String fieldName = DOMUtils.getAttribute(e, \"fieldName\", defaultField);\n        //Create new parser\n        QueryParser parser = createQueryParser(fieldName, analyzer);\n        q = parser.parse(text);\n      }\n      q.setBoost(DOMUtils.getAttribute(e, \"boost\", 1.0f));\n      return q;\n    } catch (ParseException e1) {\n      throw new ParserException(e1.getMessage());\n    }\n  }\n\n","sourceOld":"\t/* (non-Javadoc)\n\t * @see org.apache.lucene.xmlparser.QueryObjectBuilder#process(org.w3c.dom.Element)\n\t */\n\tpublic Query getQuery(Element e) throws ParserException {\n\t\tString text=DOMUtils.getText(e);\n\t\ttry {\n\t\t\tQuery q = null;\n\t\t\tif(unSafeParser!=null)\n\t\t\t{\n\t\t\t\t//synchronize on unsafe parser\n\t\t\t\tsynchronized (unSafeParser)\n\t\t\t\t{\n\t\t\t\t\tq = unSafeParser.parse(text);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tString fieldName=DOMUtils.getAttribute(e, \"fieldName\", defaultField);\n\t\t\t\t//Create new parser\n\t\t\t\tQueryParser parser=createQueryParser(fieldName, analyzer);\n\t\t\t\tq = parser.parse(text);\t\t\t\t\n\t\t\t}\n\t\t\t// use the boost of the original query here, too and multiply (which may be != 1.0f):\n\t\t\tq.setBoost(q.getBoost()*DOMUtils.getAttribute(e,\"boost\",1.0f));\n\t\t\treturn q;\n\t\t} catch (ParseException e1) {\n\t\t\tthrow new ParserException(e1.getMessage());\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"251550f5d19b526a76f8c5126ae7bb2d22cf8935","date":1315202008,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/UserInputQueryBuilder#getQuery(Element).mjava","pathOld":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/UserInputQueryBuilder#getQuery(Element).mjava","sourceNew":"  public Query getQuery(Element e) throws ParserException {\n    String text = DOMUtils.getText(e);\n    try {\n      Query q = null;\n      if (unSafeParser != null) {\n        //synchronize on unsafe parser\n        synchronized (unSafeParser) {\n          q = unSafeParser.parse(text);\n        }\n      } else {\n        String fieldName = DOMUtils.getAttribute(e, \"fieldName\", defaultField);\n        //Create new parser\n        QueryParser parser = createQueryParser(fieldName, analyzer);\n        q = parser.parse(text);\n      }\n      q.setBoost(DOMUtils.getAttribute(e, \"boost\", 1.0f));\n      return q;\n    } catch (ParseException e1) {\n      throw new ParserException(e1.getMessage());\n    }\n  }\n\n","sourceOld":"  public Query getQuery(Element e) throws ParserException {\n    String text = DOMUtils.getText(e);\n    try {\n      Query q = null;\n      if (unSafeParser != null) {\n        //synchronize on unsafe parser\n        synchronized (unSafeParser) {\n          q = unSafeParser.parse(text);\n        }\n      } else {\n        String fieldName = DOMUtils.getAttribute(e, \"fieldName\", defaultField);\n        //Create new parser\n        QueryParser parser = createQueryParser(fieldName, analyzer);\n        q = parser.parse(text);\n      }\n      q.setBoost(DOMUtils.getAttribute(e, \"boost\", 1.0f));\n      return q;\n    } catch (ParseException e1) {\n      throw new ParserException(e1.getMessage());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2":["9cf7b7afd8df340c75bd415bc533c4d82f7645d5"],"9cf7b7afd8df340c75bd415bc533c4d82f7645d5":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"251550f5d19b526a76f8c5126ae7bb2d22cf8935":["b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["251550f5d19b526a76f8c5126ae7bb2d22cf8935"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2":["251550f5d19b526a76f8c5126ae7bb2d22cf8935"],"9cf7b7afd8df340c75bd415bc533c4d82f7645d5":["b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"251550f5d19b526a76f8c5126ae7bb2d22cf8935":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["9cf7b7afd8df340c75bd415bc533c4d82f7645d5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}