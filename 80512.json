{"path":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c084e47df29de3330311d69dabf515ceaa989512","date":1279030906,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    RandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory, \n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    RandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory, \n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15bbd254c1506df5299c4df8c148262c7bd6301e","date":1279913113,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    RandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory);\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    RandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory, \n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b103252dee6afa1b6d7a622c773d178788eb85a","date":1280180143,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    RandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory);\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    RandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory, \n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3242a09f703274d3b9283f2064a1a33064b53a1b","date":1280263474,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    RandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory);\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    RandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory, \n        new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    Random random = newRandom();\n    directory = newDirectory(random);\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    RandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory);\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    Random random = newRandom();\n    directory = newDirectory(random);\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"132903c28af3aa6f67284b78de91c0f0a99488c2","date":1284282129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43b04c27924fe393e38e9f0986e32c634f261859","date":1284399440,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    RandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory);\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"790e1fde4caa765b3faaad3fbcd25c6973450336","date":1296689245,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = new IndexSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff6fd241dc6610f7f81b62e3ba4cedf105939623","date":1307331653,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#beforeClass().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n\n    Document doc = new Document();\n    Field field = newField(FIELD, \"meaninglessnames\", Field.Store.NO,\n        Field.Index.NOT_ANALYZED_NO_NORMS);\n    doc.add(field);\n    \n    for (int i = 0; i < 5137; ++i) {\n      writer.addDocument(doc);\n    }\n    \n    field.setValue(\"tangfulin\");\n    writer.addDocument(doc);\n\n    field.setValue(\"meaninglessnames\");\n    for (int i = 5138; i < 11377; ++i) {\n      writer.addDocument(doc);\n    }\n    \n    field.setValue(\"tangfulin\");\n    writer.addDocument(doc);\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":["a78a90fc9701e511308346ea29f4f5e548bb39fe","a78a90fc9701e511308346ea29f4f5e548bb39fe","a78a90fc9701e511308346ea29f4f5e548bb39fe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"79c2cb24929f2649a8875fb629086171f914d5ce","date":1307332717,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#beforeClass().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n\n    Document doc = new Document();\n    Field field = newField(FIELD, \"meaninglessnames\", Field.Store.NO,\n        Field.Index.NOT_ANALYZED_NO_NORMS);\n    doc.add(field);\n    \n    for (int i = 0; i < 5137; ++i) {\n      writer.addDocument(doc);\n    }\n    \n    field.setValue(\"tangfulin\");\n    writer.addDocument(doc);\n\n    field.setValue(\"meaninglessnames\");\n    for (int i = 5138; i < 11377; ++i) {\n      writer.addDocument(doc);\n    }\n    \n    field.setValue(\"tangfulin\");\n    writer.addDocument(doc);\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#beforeClass().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n\n    Document doc = new Document();\n    Field field = newField(FIELD, \"meaninglessnames\", Field.Store.NO,\n        Field.Index.NOT_ANALYZED_NO_NORMS);\n    doc.add(field);\n    \n    for (int i = 0; i < 5137; ++i) {\n      writer.addDocument(doc);\n    }\n    \n    field.setValue(\"tangfulin\");\n    writer.addDocument(doc);\n\n    field.setValue(\"meaninglessnames\");\n    for (int i = 5138; i < 11377; ++i) {\n      writer.addDocument(doc);\n    }\n    \n    field.setValue(\"tangfulin\");\n    writer.addDocument(doc);\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["790e1fde4caa765b3faaad3fbcd25c6973450336"],"3242a09f703274d3b9283f2064a1a33064b53a1b":["5f4e87790277826a2aea119328600dfb07761f32","4b103252dee6afa1b6d7a622c773d178788eb85a"],"4b103252dee6afa1b6d7a622c773d178788eb85a":["c084e47df29de3330311d69dabf515ceaa989512","15bbd254c1506df5299c4df8c148262c7bd6301e"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["4b103252dee6afa1b6d7a622c773d178788eb85a"],"15bbd254c1506df5299c4df8c148262c7bd6301e":["c084e47df29de3330311d69dabf515ceaa989512"],"d572389229127c297dd1fa5ce4758e1cec41e799":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"5f4e87790277826a2aea119328600dfb07761f32":["d572389229127c297dd1fa5ce4758e1cec41e799","c084e47df29de3330311d69dabf515ceaa989512"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["3242a09f703274d3b9283f2064a1a33064b53a1b","43b04c27924fe393e38e9f0986e32c634f261859"],"43b04c27924fe393e38e9f0986e32c634f261859":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"790e1fde4caa765b3faaad3fbcd25c6973450336":["43b04c27924fe393e38e9f0986e32c634f261859"],"c084e47df29de3330311d69dabf515ceaa989512":["d572389229127c297dd1fa5ce4758e1cec41e799"],"79c2cb24929f2649a8875fb629086171f914d5ce":["790e1fde4caa765b3faaad3fbcd25c6973450336","ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["43b04c27924fe393e38e9f0986e32c634f261859","790e1fde4caa765b3faaad3fbcd25c6973450336"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["29ef99d61cda9641b6250bf9567329a6e65f901d","ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","790e1fde4caa765b3faaad3fbcd25c6973450336"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["79c2cb24929f2649a8875fb629086171f914d5ce","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3242a09f703274d3b9283f2064a1a33064b53a1b":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"4b103252dee6afa1b6d7a622c773d178788eb85a":["3242a09f703274d3b9283f2064a1a33064b53a1b","ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"15bbd254c1506df5299c4df8c148262c7bd6301e":["4b103252dee6afa1b6d7a622c773d178788eb85a"],"d572389229127c297dd1fa5ce4758e1cec41e799":["5f4e87790277826a2aea119328600dfb07761f32","c084e47df29de3330311d69dabf515ceaa989512"],"5f4e87790277826a2aea119328600dfb07761f32":["3242a09f703274d3b9283f2064a1a33064b53a1b"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["43b04c27924fe393e38e9f0986e32c634f261859"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"43b04c27924fe393e38e9f0986e32c634f261859":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","790e1fde4caa765b3faaad3fbcd25c6973450336","29ef99d61cda9641b6250bf9567329a6e65f901d"],"790e1fde4caa765b3faaad3fbcd25c6973450336":["ff6fd241dc6610f7f81b62e3ba4cedf105939623","79c2cb24929f2649a8875fb629086171f914d5ce","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"c084e47df29de3330311d69dabf515ceaa989512":["4b103252dee6afa1b6d7a622c773d178788eb85a","15bbd254c1506df5299c4df8c148262c7bd6301e","5f4e87790277826a2aea119328600dfb07761f32"],"79c2cb24929f2649a8875fb629086171f914d5ce":[],"1f653cfcf159baeaafe5d01682a911e95bba4012":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d572389229127c297dd1fa5ce4758e1cec41e799"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["79c2cb24929f2649a8875fb629086171f914d5ce","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}