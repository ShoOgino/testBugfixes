{"path":"lucene/grouping/src/java/org/apache/lucene/search/grouping/SecondPassGroupingCollector#SecondPassGroupingCollector(GroupSelector[T],Collection[SearchGroup[T]],GroupReducer[T,#]).mjava","commits":[{"id":"7ae958a739da1866696f442384393ba2f13e33e5","date":1491819018,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/SecondPassGroupingCollector#SecondPassGroupingCollector(GroupSelector[T],Collection[SearchGroup[T]],GroupReducer[T,#]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a new SecondPassGroupingCollector\n   * @param groupSelector   the GroupSelector that defines groups for this search\n   * @param groups          the groups to collect documents for\n   * @param reducer         the reducer to apply to each group\n   */\n  public SecondPassGroupingCollector(GroupSelector<T> groupSelector, Collection<SearchGroup<T>> groups, GroupReducer<T, ?> reducer) {\n\n    //System.out.println(\"SP init\");\n    if (groups.isEmpty()) {\n      throw new IllegalArgumentException(\"no groups to collect (groups is empty)\");\n    }\n\n    this.groupSelector = Objects.requireNonNull(groupSelector);\n    this.groupSelector.setGroups(groups);\n\n    this.groups = Objects.requireNonNull(groups);\n    this.groupReducer = reducer;\n    reducer.setGroups(groups);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/SecondPassGroupingCollector#SecondPassGroupingCollector(GroupSelector[T],Collection[SearchGroup[T]],GroupReducer[T,#]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a new SecondPassGroupingCollector\n   * @param groupSelector   the GroupSelector that defines groups for this search\n   * @param groups          the groups to collect documents for\n   * @param reducer         the reducer to apply to each group\n   */\n  public SecondPassGroupingCollector(GroupSelector<T> groupSelector, Collection<SearchGroup<T>> groups, GroupReducer<T, ?> reducer) {\n\n    //System.out.println(\"SP init\");\n    if (groups.isEmpty()) {\n      throw new IllegalArgumentException(\"no groups to collect (groups is empty)\");\n    }\n\n    this.groupSelector = Objects.requireNonNull(groupSelector);\n    this.groupSelector.setGroups(groups);\n\n    this.groups = Objects.requireNonNull(groups);\n    this.groupReducer = reducer;\n    reducer.setGroups(groups);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7ae958a739da1866696f442384393ba2f13e33e5"],"7ae958a739da1866696f442384393ba2f13e33e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","7ae958a739da1866696f442384393ba2f13e33e5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7ae958a739da1866696f442384393ba2f13e33e5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}