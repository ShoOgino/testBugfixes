{"path":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testHits().mjava","commits":[{"id":"b4471b2ef75c0e11869f60b23cabe292b895c3ee","date":1248991247,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testHits().mjava","pathOld":"/dev/null","sourceNew":"  public void testHits() throws Exception {\n    Analyzer analyzer = new SimpleAnalyzer();\n    QueryParser qp = new QueryParser(FIELD_NAME, analyzer);\n    query = qp.parse(\"\\\"very long\\\"\");\n    searcher = new IndexSearcher(ramDir, false);\n    TopDocs hits = searcher.search(query, 10);\n\n    Highlighter highlighter = new Highlighter(null);\n\n\n    for (int i = 0; i < hits.scoreDocs.length; i++) {\n      Document doc = searcher.doc(hits.scoreDocs[i].doc);\n      String storedField = doc.get(FIELD_NAME);\n\n      TokenStream stream = TokenSources.getAnyTokenStream(searcher\n          .getIndexReader(), hits.scoreDocs[i].doc, FIELD_NAME, doc, analyzer);\n      CachingTokenFilter ctf = new CachingTokenFilter(stream);\n      SpanScorer scorer = new SpanScorer(query, FIELD_NAME, ctf);\n     // ctf.reset();\n      Fragmenter fragmenter = new SimpleSpanFragmenter(scorer);\n      highlighter.setFragmentScorer(scorer);\n      highlighter.setTextFragmenter(fragmenter);\n\n      String fragment = highlighter.getBestFragment(ctf, storedField);\n\n      System.out.println(fragment);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"943c3f9cf96b8df37f4273d66a66182e2a669467","date":1249394171,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testHits().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testHits().mjava","sourceNew":"  public void testHits() throws Exception {\n    Analyzer analyzer = new SimpleAnalyzer();\n    QueryParser qp = new QueryParser(FIELD_NAME, analyzer);\n    query = qp.parse(\"\\\"very long\\\"\");\n    searcher = new IndexSearcher(ramDir, false);\n    TopDocs hits = searcher.search(query, 10);\n    \n    QueryScorer scorer = new QueryScorer(query, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(scorer);\n\n\n    for (int i = 0; i < hits.scoreDocs.length; i++) {\n      Document doc = searcher.doc(hits.scoreDocs[i].doc);\n      String storedField = doc.get(FIELD_NAME);\n\n      TokenStream stream = TokenSources.getAnyTokenStream(searcher\n          .getIndexReader(), hits.scoreDocs[i].doc, FIELD_NAME, doc, analyzer);\n\n      Fragmenter fragmenter = new SimpleSpanFragmenter(scorer);\n\n      highlighter.setTextFragmenter(fragmenter);\n\n      String fragment = highlighter.getBestFragment(stream, storedField);\n\n      System.out.println(fragment);\n    }\n  }\n\n","sourceOld":"  public void testHits() throws Exception {\n    Analyzer analyzer = new SimpleAnalyzer();\n    QueryParser qp = new QueryParser(FIELD_NAME, analyzer);\n    query = qp.parse(\"\\\"very long\\\"\");\n    searcher = new IndexSearcher(ramDir, false);\n    TopDocs hits = searcher.search(query, 10);\n\n    Highlighter highlighter = new Highlighter(null);\n\n\n    for (int i = 0; i < hits.scoreDocs.length; i++) {\n      Document doc = searcher.doc(hits.scoreDocs[i].doc);\n      String storedField = doc.get(FIELD_NAME);\n\n      TokenStream stream = TokenSources.getAnyTokenStream(searcher\n          .getIndexReader(), hits.scoreDocs[i].doc, FIELD_NAME, doc, analyzer);\n      CachingTokenFilter ctf = new CachingTokenFilter(stream);\n      SpanScorer scorer = new SpanScorer(query, FIELD_NAME, ctf);\n     // ctf.reset();\n      Fragmenter fragmenter = new SimpleSpanFragmenter(scorer);\n      highlighter.setFragmentScorer(scorer);\n      highlighter.setTextFragmenter(fragmenter);\n\n      String fragment = highlighter.getBestFragment(ctf, storedField);\n\n      System.out.println(fragment);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c16ba100a31d292b7b4c893a3cdf1994e75a3201","date":1249608645,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testQueryScorerHits().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testHits().mjava","sourceNew":"  public void testQueryScorerHits() throws Exception {\n    Analyzer analyzer = new SimpleAnalyzer();\n    QueryParser qp = new QueryParser(FIELD_NAME, analyzer);\n    query = qp.parse(\"\\\"very long\\\"\");\n    searcher = new IndexSearcher(ramDir, false);\n    TopDocs hits = searcher.search(query, 10);\n    \n    QueryScorer scorer = new QueryScorer(query, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(scorer);\n\n\n    for (int i = 0; i < hits.scoreDocs.length; i++) {\n      Document doc = searcher.doc(hits.scoreDocs[i].doc);\n      String storedField = doc.get(FIELD_NAME);\n\n      TokenStream stream = TokenSources.getAnyTokenStream(searcher\n          .getIndexReader(), hits.scoreDocs[i].doc, FIELD_NAME, doc, analyzer);\n\n      Fragmenter fragmenter = new SimpleSpanFragmenter(scorer);\n\n      highlighter.setTextFragmenter(fragmenter);\n\n      String fragment = highlighter.getBestFragment(stream, storedField);\n\n      System.out.println(fragment);\n    }\n  }\n\n","sourceOld":"  public void testHits() throws Exception {\n    Analyzer analyzer = new SimpleAnalyzer();\n    QueryParser qp = new QueryParser(FIELD_NAME, analyzer);\n    query = qp.parse(\"\\\"very long\\\"\");\n    searcher = new IndexSearcher(ramDir, false);\n    TopDocs hits = searcher.search(query, 10);\n    \n    QueryScorer scorer = new QueryScorer(query, FIELD_NAME);\n    Highlighter highlighter = new Highlighter(scorer);\n\n\n    for (int i = 0; i < hits.scoreDocs.length; i++) {\n      Document doc = searcher.doc(hits.scoreDocs[i].doc);\n      String storedField = doc.get(FIELD_NAME);\n\n      TokenStream stream = TokenSources.getAnyTokenStream(searcher\n          .getIndexReader(), hits.scoreDocs[i].doc, FIELD_NAME, doc, analyzer);\n\n      Fragmenter fragmenter = new SimpleSpanFragmenter(scorer);\n\n      highlighter.setTextFragmenter(fragmenter);\n\n      String fragment = highlighter.getBestFragment(stream, storedField);\n\n      System.out.println(fragment);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c16ba100a31d292b7b4c893a3cdf1994e75a3201":["943c3f9cf96b8df37f4273d66a66182e2a669467"],"b4471b2ef75c0e11869f60b23cabe292b895c3ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"943c3f9cf96b8df37f4273d66a66182e2a669467":["b4471b2ef75c0e11869f60b23cabe292b895c3ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c16ba100a31d292b7b4c893a3cdf1994e75a3201"]},"commit2Childs":{"c16ba100a31d292b7b4c893a3cdf1994e75a3201":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b4471b2ef75c0e11869f60b23cabe292b895c3ee":["943c3f9cf96b8df37f4273d66a66182e2a669467"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b4471b2ef75c0e11869f60b23cabe292b895c3ee"],"943c3f9cf96b8df37f4273d66a66182e2a669467":["c16ba100a31d292b7b4c893a3cdf1994e75a3201"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}