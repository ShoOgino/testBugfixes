{"path":"solr/core/src/java/org/apache/solr/logging/log4j/Log4jWatcher#toSolrDocument(LoggingEvent).mjava","commits":[{"id":"829761a123d59d7a3c39e5f13fbc03de63f55ce5","date":1334686329,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/logging/log4j/Log4jWatcher#toSolrDocument(LoggingEvent).mjava","pathOld":"/dev/null","sourceNew":"  @Override\r\n  public SolrDocument toSolrDocument(LoggingEvent event) {\r\n    SolrDocument doc = new SolrDocument();\r\n    doc.setField(\"time\", new Date(event.getTimeStamp()));\r\n    doc.setField(\"level\", event.getLevel().toString());\r\n    doc.setField(\"logger\", event.getLogger().getName());\r\n    doc.setField(\"message\", event.getMessage().toString());\r\n    ThrowableInformation t = event.getThrowableInformation();\r\n    if(t!=null) {\r\n      doc.setField(\"trace\", Throwables.getStackTraceAsString(t.getThrowable()));\r\n    }\r\n    return doc;\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b560bb9e5a33049a66d34f96dacbcaa48825a7eb","date":1334773717,"type":4,"author":"Ryan McKinley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/logging/log4j/Log4jWatcher#toSolrDocument(LoggingEvent).mjava","sourceNew":null,"sourceOld":"  @Override\r\n  public SolrDocument toSolrDocument(LoggingEvent event) {\r\n    SolrDocument doc = new SolrDocument();\r\n    doc.setField(\"time\", new Date(event.getTimeStamp()));\r\n    doc.setField(\"level\", event.getLevel().toString());\r\n    doc.setField(\"logger\", event.getLogger().getName());\r\n    doc.setField(\"message\", event.getMessage().toString());\r\n    ThrowableInformation t = event.getThrowableInformation();\r\n    if(t!=null) {\r\n      doc.setField(\"trace\", Throwables.getStackTraceAsString(t.getThrowable()));\r\n    }\r\n    return doc;\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"005df777a3e106b1f8aa205b064c95a0c716a9e5","date":1364393378,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/logging/log4j/Log4jWatcher#toSolrDocument(LoggingEvent).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SolrDocument toSolrDocument(LoggingEvent event) {\n    SolrDocument doc = new SolrDocument();\n    doc.setField(\"time\", new Date(event.getTimeStamp()));\n    doc.setField(\"level\", event.getLevel().toString());\n    doc.setField(\"logger\", event.getLogger().getName());\n    doc.setField(\"message\", event.getMessage().toString());\n    ThrowableInformation t = event.getThrowableInformation();\n    if(t!=null) {\n      doc.setField(\"trace\", Throwables.getStackTraceAsString(t.getThrowable()));\n    }\n    return doc;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cbfdf9e2757b8684ab76f27850ebd4f103896b06","date":1378878819,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/logging/log4j/Log4jWatcher#toSolrDocument(LoggingEvent).mjava","pathOld":"solr/core/src/java/org/apache/solr/logging/log4j/Log4jWatcher#toSolrDocument(LoggingEvent).mjava","sourceNew":"  @Override\n  public SolrDocument toSolrDocument(LoggingEvent event) {\n    SolrDocument doc = new SolrDocument();\n    doc.setField(\"time\", new Date(event.getTimeStamp()));\n    doc.setField(\"level\", event.getLevel().toString());\n    doc.setField(\"logger\", event.getLogger().getName());\n    doc.setField(\"message\", event.getMessage() + \"\"); // avoid NPE when we have an event with null message\n    ThrowableInformation t = event.getThrowableInformation();\n    if(t!=null) {\n      doc.setField(\"trace\", Throwables.getStackTraceAsString(t.getThrowable()));\n    }\n    return doc;\n  }\n\n","sourceOld":"  @Override\n  public SolrDocument toSolrDocument(LoggingEvent event) {\n    SolrDocument doc = new SolrDocument();\n    doc.setField(\"time\", new Date(event.getTimeStamp()));\n    doc.setField(\"level\", event.getLevel().toString());\n    doc.setField(\"logger\", event.getLogger().getName());\n    doc.setField(\"message\", event.getMessage().toString());\n    ThrowableInformation t = event.getThrowableInformation();\n    if(t!=null) {\n      doc.setField(\"trace\", Throwables.getStackTraceAsString(t.getThrowable()));\n    }\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c7f4e29ea7509a845c3284ca4047b26a8e4876","date":1378879608,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/logging/log4j/Log4jWatcher#toSolrDocument(LoggingEvent).mjava","pathOld":"solr/core/src/java/org/apache/solr/logging/log4j/Log4jWatcher#toSolrDocument(LoggingEvent).mjava","sourceNew":"  @Override\n  public SolrDocument toSolrDocument(LoggingEvent event) {\n    SolrDocument doc = new SolrDocument();\n    doc.setField(\"time\", new Date(event.getTimeStamp()));\n    doc.setField(\"level\", event.getLevel().toString());\n    doc.setField(\"logger\", event.getLogger().getName());\n    doc.setField(\"message\", event.getRenderedMessage());\n    ThrowableInformation t = event.getThrowableInformation();\n    if(t!=null) {\n      doc.setField(\"trace\", Throwables.getStackTraceAsString(t.getThrowable()));\n    }\n    return doc;\n  }\n\n","sourceOld":"  @Override\n  public SolrDocument toSolrDocument(LoggingEvent event) {\n    SolrDocument doc = new SolrDocument();\n    doc.setField(\"time\", new Date(event.getTimeStamp()));\n    doc.setField(\"level\", event.getLevel().toString());\n    doc.setField(\"logger\", event.getLogger().getName());\n    doc.setField(\"message\", event.getMessage() + \"\"); // avoid NPE when we have an event with null message\n    ThrowableInformation t = event.getThrowableInformation();\n    if(t!=null) {\n      doc.setField(\"trace\", Throwables.getStackTraceAsString(t.getThrowable()));\n    }\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65780dd0a70597aa46f16a2a42093215ca237272","date":1427847875,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/logging/log4j/Log4jWatcher#toSolrDocument(LoggingEvent).mjava","pathOld":"solr/core/src/java/org/apache/solr/logging/log4j/Log4jWatcher#toSolrDocument(LoggingEvent).mjava","sourceNew":"  @Override\n  public SolrDocument toSolrDocument(LoggingEvent event) {\n    SolrDocument doc = new SolrDocument();\n    doc.setField(\"time\", new Date(event.getTimeStamp()));\n    doc.setField(\"level\", event.getLevel().toString());\n    doc.setField(\"logger\", event.getLogger().getName());\n    doc.setField(\"message\", event.getRenderedMessage());\n    ThrowableInformation t = event.getThrowableInformation();\n    if(t!=null) {\n      doc.setField(\"trace\", Throwables.getStackTraceAsString(t.getThrowable()));\n    }\n    \n    // Will be null if not present\n    doc.setField(\"core\", event.getMDC(ZkStateReader.CORE_NAME_PROP));\n    doc.setField(\"collection\", event.getMDC(ZkStateReader.COLLECTION_PROP));\n    doc.setField(\"replica\", event.getMDC(ZkStateReader.REPLICA_PROP));\n    doc.setField(\"shard\", event.getMDC(ZkStateReader.SHARD_ID_PROP));\n    return doc;\n  }\n\n","sourceOld":"  @Override\n  public SolrDocument toSolrDocument(LoggingEvent event) {\n    SolrDocument doc = new SolrDocument();\n    doc.setField(\"time\", new Date(event.getTimeStamp()));\n    doc.setField(\"level\", event.getLevel().toString());\n    doc.setField(\"logger\", event.getLogger().getName());\n    doc.setField(\"message\", event.getRenderedMessage());\n    ThrowableInformation t = event.getThrowableInformation();\n    if(t!=null) {\n      doc.setField(\"trace\", Throwables.getStackTraceAsString(t.getThrowable()));\n    }\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fab172655716b96f7e42376116235017a922de3a","date":1427850611,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/logging/log4j/Log4jWatcher#toSolrDocument(LoggingEvent).mjava","pathOld":"solr/core/src/java/org/apache/solr/logging/log4j/Log4jWatcher#toSolrDocument(LoggingEvent).mjava","sourceNew":"  @Override\n  public SolrDocument toSolrDocument(LoggingEvent event) {\n    SolrDocument doc = new SolrDocument();\n    doc.setField(\"time\", new Date(event.getTimeStamp()));\n    doc.setField(\"level\", event.getLevel().toString());\n    doc.setField(\"logger\", event.getLogger().getName());\n    doc.setField(\"message\", event.getRenderedMessage());\n    ThrowableInformation t = event.getThrowableInformation();\n    if(t!=null) {\n      doc.setField(\"trace\", Throwables.getStackTraceAsString(t.getThrowable()));\n    }\n    \n    // Will be null if not present\n    doc.setField(\"core\", event.getMDC(ZkStateReader.CORE_NAME_PROP));\n    doc.setField(\"collection\", event.getMDC(ZkStateReader.COLLECTION_PROP));\n    doc.setField(\"replica\", event.getMDC(ZkStateReader.REPLICA_PROP));\n    doc.setField(\"shard\", event.getMDC(ZkStateReader.SHARD_ID_PROP));\n    return doc;\n  }\n\n","sourceOld":"  @Override\n  public SolrDocument toSolrDocument(LoggingEvent event) {\n    SolrDocument doc = new SolrDocument();\n    doc.setField(\"time\", new Date(event.getTimeStamp()));\n    doc.setField(\"level\", event.getLevel().toString());\n    doc.setField(\"logger\", event.getLogger().getName());\n    doc.setField(\"message\", event.getRenderedMessage());\n    ThrowableInformation t = event.getThrowableInformation();\n    if(t!=null) {\n      doc.setField(\"trace\", Throwables.getStackTraceAsString(t.getThrowable()));\n    }\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93baf46bd12096e0de407258b3b32cfaaf58e448","date":1522030569,"type":4,"author":"Erick Erickson","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/logging/log4j/Log4jWatcher#toSolrDocument(LoggingEvent).mjava","sourceNew":null,"sourceOld":"  @Override\n  public SolrDocument toSolrDocument(LoggingEvent event) {\n    SolrDocument doc = new SolrDocument();\n    doc.setField(\"time\", new Date(event.getTimeStamp()));\n    doc.setField(\"level\", event.getLevel().toString());\n    doc.setField(\"logger\", event.getLogger().getName());\n    doc.setField(\"message\", event.getRenderedMessage());\n    ThrowableInformation t = event.getThrowableInformation();\n    if(t!=null) {\n      doc.setField(\"trace\", Throwables.getStackTraceAsString(t.getThrowable()));\n    }\n    \n    // Will be null if not present\n    doc.setField(\"core\", event.getMDC(ZkStateReader.CORE_NAME_PROP));\n    doc.setField(\"collection\", event.getMDC(ZkStateReader.COLLECTION_PROP));\n    doc.setField(\"replica\", event.getMDC(ZkStateReader.REPLICA_PROP));\n    doc.setField(\"shard\", event.getMDC(ZkStateReader.SHARD_ID_PROP));\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f67a921f6ec5ab488ce397cf05f95fcd8ce631b6","date":1522059649,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/logging/log4j/Log4jWatcher#toSolrDocument(LoggingEvent).mjava","sourceNew":null,"sourceOld":"  @Override\n  public SolrDocument toSolrDocument(LoggingEvent event) {\n    SolrDocument doc = new SolrDocument();\n    doc.setField(\"time\", new Date(event.getTimeStamp()));\n    doc.setField(\"level\", event.getLevel().toString());\n    doc.setField(\"logger\", event.getLogger().getName());\n    doc.setField(\"message\", event.getRenderedMessage());\n    ThrowableInformation t = event.getThrowableInformation();\n    if(t!=null) {\n      doc.setField(\"trace\", Throwables.getStackTraceAsString(t.getThrowable()));\n    }\n    \n    // Will be null if not present\n    doc.setField(\"core\", event.getMDC(ZkStateReader.CORE_NAME_PROP));\n    doc.setField(\"collection\", event.getMDC(ZkStateReader.COLLECTION_PROP));\n    doc.setField(\"replica\", event.getMDC(ZkStateReader.REPLICA_PROP));\n    doc.setField(\"shard\", event.getMDC(ZkStateReader.SHARD_ID_PROP));\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b560bb9e5a33049a66d34f96dacbcaa48825a7eb":["829761a123d59d7a3c39e5f13fbc03de63f55ce5"],"a3c7f4e29ea7509a845c3284ca4047b26a8e4876":["cbfdf9e2757b8684ab76f27850ebd4f103896b06"],"cbfdf9e2757b8684ab76f27850ebd4f103896b06":["005df777a3e106b1f8aa205b064c95a0c716a9e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"93baf46bd12096e0de407258b3b32cfaaf58e448":["65780dd0a70597aa46f16a2a42093215ca237272"],"829761a123d59d7a3c39e5f13fbc03de63f55ce5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"005df777a3e106b1f8aa205b064c95a0c716a9e5":["b560bb9e5a33049a66d34f96dacbcaa48825a7eb"],"65780dd0a70597aa46f16a2a42093215ca237272":["a3c7f4e29ea7509a845c3284ca4047b26a8e4876"],"fab172655716b96f7e42376116235017a922de3a":["a3c7f4e29ea7509a845c3284ca4047b26a8e4876","65780dd0a70597aa46f16a2a42093215ca237272"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f67a921f6ec5ab488ce397cf05f95fcd8ce631b6"],"f67a921f6ec5ab488ce397cf05f95fcd8ce631b6":["65780dd0a70597aa46f16a2a42093215ca237272","93baf46bd12096e0de407258b3b32cfaaf58e448"]},"commit2Childs":{"b560bb9e5a33049a66d34f96dacbcaa48825a7eb":["005df777a3e106b1f8aa205b064c95a0c716a9e5"],"a3c7f4e29ea7509a845c3284ca4047b26a8e4876":["65780dd0a70597aa46f16a2a42093215ca237272","fab172655716b96f7e42376116235017a922de3a"],"cbfdf9e2757b8684ab76f27850ebd4f103896b06":["a3c7f4e29ea7509a845c3284ca4047b26a8e4876"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["829761a123d59d7a3c39e5f13fbc03de63f55ce5"],"93baf46bd12096e0de407258b3b32cfaaf58e448":["f67a921f6ec5ab488ce397cf05f95fcd8ce631b6"],"829761a123d59d7a3c39e5f13fbc03de63f55ce5":["b560bb9e5a33049a66d34f96dacbcaa48825a7eb"],"005df777a3e106b1f8aa205b064c95a0c716a9e5":["cbfdf9e2757b8684ab76f27850ebd4f103896b06"],"65780dd0a70597aa46f16a2a42093215ca237272":["93baf46bd12096e0de407258b3b32cfaaf58e448","fab172655716b96f7e42376116235017a922de3a","f67a921f6ec5ab488ce397cf05f95fcd8ce631b6"],"fab172655716b96f7e42376116235017a922de3a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f67a921f6ec5ab488ce397cf05f95fcd8ce631b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["fab172655716b96f7e42376116235017a922de3a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}