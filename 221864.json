{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#newTokenizerArgs(Random,Reader,Class[#][]).mjava","commits":[{"id":"5a92b21feea3b1b4d7ad5a06439333c4f757318f","date":1333977928,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#newTokenizerArgs(Random,Reader,Class[#][]).mjava","pathOld":"/dev/null","sourceNew":"  static Object[] newTokenizerArgs(Random random, Reader reader, Class<?>[] paramTypes) {\n    Object[] args = new Object[paramTypes.length];\n    for (int i = 0; i < args.length; i++) {\n      Class<?> paramType = paramTypes[i];\n      if (paramType == Reader.class) {\n        args[i] = reader;\n      } else if (paramType == AttributeFactory.class) {\n        // TODO: maybe the collator one...???\n        args[i] = AttributeFactory.DEFAULT_ATTRIBUTE_FACTORY;\n      } else if (paramType == AttributeSource.class) {\n        args[i] = null; // this always gives IAE: fine \n      } else {\n        args[i] = createRandomArg(random, paramType);\n      }\n    }\n    return args;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ace2ccc6db0c7aaed80a31091304b25b54416ec","date":1333984511,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#newTokenizerArgs(Random,Reader,Class[#][]).mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#newTokenizerArgs(Random,Reader,Class[#][]).mjava","sourceNew":"  static Object[] newTokenizerArgs(Random random, Reader reader, Class<?>[] paramTypes) {\n    Object[] args = new Object[paramTypes.length];\n    for (int i = 0; i < args.length; i++) {\n      Class<?> paramType = paramTypes[i];\n      if (paramType == Reader.class) {\n        args[i] = reader;\n      } else if (paramType == AttributeFactory.class) {\n        // TODO: maybe the collator one...???\n        args[i] = AttributeFactory.DEFAULT_ATTRIBUTE_FACTORY;\n      } else if (paramType == AttributeSource.class) {\n        args[i] = new AttributeSource();\n      } else {\n        args[i] = newRandomArg(random, paramType);\n      }\n    }\n    return args;\n  }\n\n","sourceOld":"  static Object[] newTokenizerArgs(Random random, Reader reader, Class<?>[] paramTypes) {\n    Object[] args = new Object[paramTypes.length];\n    for (int i = 0; i < args.length; i++) {\n      Class<?> paramType = paramTypes[i];\n      if (paramType == Reader.class) {\n        args[i] = reader;\n      } else if (paramType == AttributeFactory.class) {\n        // TODO: maybe the collator one...???\n        args[i] = AttributeFactory.DEFAULT_ATTRIBUTE_FACTORY;\n      } else if (paramType == AttributeSource.class) {\n        args[i] = null; // this always gives IAE: fine \n      } else {\n        args[i] = createRandomArg(random, paramType);\n      }\n    }\n    return args;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86742eef063a9fee98e395315eec4ba4512dc787","date":1333992106,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#newTokenizerArgs(Random,Reader,Class[#][]).mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#newTokenizerArgs(Random,Reader,Class[#][]).mjava","sourceNew":"  static Object[] newTokenizerArgs(Random random, Reader reader, Class<?>[] paramTypes) {\n    Object[] args = new Object[paramTypes.length];\n    for (int i = 0; i < args.length; i++) {\n      Class<?> paramType = paramTypes[i];\n      if (paramType == Reader.class) {\n        args[i] = reader;\n      } else if (paramType == AttributeFactory.class) {\n        // TODO: maybe the collator one...???\n        args[i] = AttributeFactory.DEFAULT_ATTRIBUTE_FACTORY;\n      } else if (paramType == AttributeSource.class) {\n        // nocommit: args[i] = new AttributeSource();\n        // this is currently too scary to deal with!\n        args[i] = null; // force IAE\n      } else {\n        args[i] = newRandomArg(random, paramType);\n      }\n    }\n    return args;\n  }\n\n","sourceOld":"  static Object[] newTokenizerArgs(Random random, Reader reader, Class<?>[] paramTypes) {\n    Object[] args = new Object[paramTypes.length];\n    for (int i = 0; i < args.length; i++) {\n      Class<?> paramType = paramTypes[i];\n      if (paramType == Reader.class) {\n        args[i] = reader;\n      } else if (paramType == AttributeFactory.class) {\n        // TODO: maybe the collator one...???\n        args[i] = AttributeFactory.DEFAULT_ATTRIBUTE_FACTORY;\n      } else if (paramType == AttributeSource.class) {\n        args[i] = new AttributeSource();\n      } else {\n        args[i] = newRandomArg(random, paramType);\n      }\n    }\n    return args;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb58c6e219d9b9bcb1b4f293dc24b067aa45cd2c","date":1334160067,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#newTokenizerArgs(Random,Reader,Class[#][]).mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#newTokenizerArgs(Random,Reader,Class[#][]).mjava","sourceNew":"  static Object[] newTokenizerArgs(Random random, Reader reader, Class<?>[] paramTypes) {\n    Object[] args = new Object[paramTypes.length];\n    for (int i = 0; i < args.length; i++) {\n      Class<?> paramType = paramTypes[i];\n      if (paramType == Reader.class) {\n        args[i] = reader;\n      } else if (paramType == AttributeFactory.class) {\n        // TODO: maybe the collator one...???\n        args[i] = AttributeFactory.DEFAULT_ATTRIBUTE_FACTORY;\n      } else if (paramType == AttributeSource.class) {\n        // TODO: args[i] = new AttributeSource();\n        // this is currently too scary to deal with!\n        args[i] = null; // force IAE\n      } else {\n        args[i] = newRandomArg(random, paramType);\n      }\n    }\n    return args;\n  }\n\n","sourceOld":"  static Object[] newTokenizerArgs(Random random, Reader reader, Class<?>[] paramTypes) {\n    Object[] args = new Object[paramTypes.length];\n    for (int i = 0; i < args.length; i++) {\n      Class<?> paramType = paramTypes[i];\n      if (paramType == Reader.class) {\n        args[i] = reader;\n      } else if (paramType == AttributeFactory.class) {\n        // TODO: maybe the collator one...???\n        args[i] = AttributeFactory.DEFAULT_ATTRIBUTE_FACTORY;\n      } else if (paramType == AttributeSource.class) {\n        // nocommit: args[i] = new AttributeSource();\n        // this is currently too scary to deal with!\n        args[i] = null; // force IAE\n      } else {\n        args[i] = newRandomArg(random, paramType);\n      }\n    }\n    return args;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e","date":1334174049,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#newTokenizerArgs(Random,Reader,Class[#][]).mjava","pathOld":"/dev/null","sourceNew":"  static Object[] newTokenizerArgs(Random random, Reader reader, Class<?>[] paramTypes) {\n    Object[] args = new Object[paramTypes.length];\n    for (int i = 0; i < args.length; i++) {\n      Class<?> paramType = paramTypes[i];\n      if (paramType == Reader.class) {\n        args[i] = reader;\n      } else if (paramType == AttributeFactory.class) {\n        // TODO: maybe the collator one...???\n        args[i] = AttributeFactory.DEFAULT_ATTRIBUTE_FACTORY;\n      } else if (paramType == AttributeSource.class) {\n        // TODO: args[i] = new AttributeSource();\n        // this is currently too scary to deal with!\n        args[i] = null; // force IAE\n      } else {\n        args[i] = newRandomArg(random, paramType);\n      }\n    }\n    return args;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#newTokenizerArgs(Random,Reader,Class[#][]).mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#newTokenizerArgs(Random,Reader,Class[#][]).mjava","sourceNew":"  static Object[] newTokenizerArgs(Random random, Reader reader, Class<?>[] paramTypes) {\n    Object[] args = new Object[paramTypes.length];\n    for (int i = 0; i < args.length; i++) {\n      Class<?> paramType = paramTypes[i];\n      if (paramType == Reader.class) {\n        args[i] = reader;\n      } else if (paramType == AttributeFactory.class) {\n        // TODO: maybe the collator one...???\n        args[i] = AttributeFactory.DEFAULT_ATTRIBUTE_FACTORY;\n      } else if (paramType == AttributeSource.class) {\n        // TODO: args[i] = new AttributeSource();\n        // this is currently too scary to deal with!\n        args[i] = null; // force IAE\n      } else {\n        args[i] = newRandomArg(random, paramType);\n      }\n    }\n    return args;\n  }\n\n","sourceOld":"  static Object[] newTokenizerArgs(Random random, Reader reader, Class<?>[] paramTypes) {\n    Object[] args = new Object[paramTypes.length];\n    for (int i = 0; i < args.length; i++) {\n      Class<?> paramType = paramTypes[i];\n      if (paramType == Reader.class) {\n        args[i] = reader;\n      } else if (paramType == AttributeFactory.class) {\n        // TODO: maybe the collator one...???\n        args[i] = AttributeFactory.DEFAULT_ATTRIBUTE_FACTORY;\n      } else if (paramType == AttributeSource.class) {\n        // TODO: args[i] = new AttributeSource();\n        // this is currently too scary to deal with!\n        args[i] = null; // force IAE\n      } else {\n        args[i] = newRandomArg(random, paramType);\n      }\n    }\n    return args;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4ace2ccc6db0c7aaed80a31091304b25b54416ec":["5a92b21feea3b1b4d7ad5a06439333c4f757318f"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e"],"fb58c6e219d9b9bcb1b4f293dc24b067aa45cd2c":["86742eef063a9fee98e395315eec4ba4512dc787"],"86742eef063a9fee98e395315eec4ba4512dc787":["4ace2ccc6db0c7aaed80a31091304b25b54416ec"],"ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fb58c6e219d9b9bcb1b4f293dc24b067aa45cd2c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5a92b21feea3b1b4d7ad5a06439333c4f757318f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"4ace2ccc6db0c7aaed80a31091304b25b54416ec":["86742eef063a9fee98e395315eec4ba4512dc787"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fb58c6e219d9b9bcb1b4f293dc24b067aa45cd2c":["ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e"],"86742eef063a9fee98e395315eec4ba4512dc787":["fb58c6e219d9b9bcb1b4f293dc24b067aa45cd2c"],"ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e","5a92b21feea3b1b4d7ad5a06439333c4f757318f"],"5a92b21feea3b1b4d7ad5a06439333c4f757318f":["4ace2ccc6db0c7aaed80a31091304b25b54416ec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}