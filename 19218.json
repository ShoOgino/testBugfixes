{"path":"src/java/org/apache/solr/schema/IndexSchema#registerDynamicField(SchemaField...).mjava","commits":[{"id":"abec2fd822be07fc74ef5ba3609b9c5625a87d6d","date":1261659802,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/IndexSchema#registerDynamicField(SchemaField...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Register one or more new Dynamic Field with the Schema.\n   * @param f The {@link org.apache.solr.schema.SchemaField}\n   */\n  public void registerDynamicField(SchemaField ... f) {\n    List<DynamicField> dynFields = new ArrayList<DynamicField>(Arrays.asList(dynamicFields));\n    for (SchemaField field : f) {\n      if (isDuplicateDynField(dynFields, field) == false) {\n        log.debug(\"dynamic field creation for schema field: \" + field.getName());\n        addDynamicFieldNoDupCheck(dynFields, field);\n      } else {\n        log.debug(\"dynamic field creation avoided: dynamic field: [\" + field.getName() + \"] \" +\n                \"already defined in the schema!\");\n      }\n    }\n    Collections.sort(dynFields);\n    dynamicFields = (DynamicField[]) dynFields.toArray(new DynamicField[dynFields.size()]);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b82ee93a0b7e1703398375f2e9acc80c452b97c4","date":1261679725,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/IndexSchema#registerDynamicField(SchemaField...).mjava","pathOld":"src/java/org/apache/solr/schema/IndexSchema#registerDynamicField(SchemaField...).mjava","sourceNew":"  /**\n   * Register one or more new Dynamic Field with the Schema.\n   * @param f The {@link org.apache.solr.schema.SchemaField}\n   */\n  public void registerDynamicField(SchemaField ... f) {\n    List<DynamicField> dynFields = new ArrayList<DynamicField>(Arrays.asList(dynamicFields));\n    for (SchemaField field : f) {\n      if (isDuplicateDynField(dynFields, field) == false) {\n        log.debug(\"dynamic field creation for schema field: \" + field.getName());\n        addDynamicFieldNoDupCheck(dynFields, field);\n      } else {\n        log.debug(\"dynamic field already exists: dynamic field: [\" + field.getName() + \"]\");\n      }\n    }\n    Collections.sort(dynFields);\n    dynamicFields = dynFields.toArray(new DynamicField[dynFields.size()]);\n  }\n\n","sourceOld":"  /**\n   * Register one or more new Dynamic Field with the Schema.\n   * @param f The {@link org.apache.solr.schema.SchemaField}\n   */\n  public void registerDynamicField(SchemaField ... f) {\n    List<DynamicField> dynFields = new ArrayList<DynamicField>(Arrays.asList(dynamicFields));\n    for (SchemaField field : f) {\n      if (isDuplicateDynField(dynFields, field) == false) {\n        log.debug(\"dynamic field creation for schema field: \" + field.getName());\n        addDynamicFieldNoDupCheck(dynFields, field);\n      } else {\n        log.debug(\"dynamic field creation avoided: dynamic field: [\" + field.getName() + \"] \" +\n                \"already defined in the schema!\");\n      }\n    }\n    Collections.sort(dynFields);\n    dynamicFields = (DynamicField[]) dynFields.toArray(new DynamicField[dynFields.size()]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/IndexSchema#registerDynamicField(SchemaField...).mjava","pathOld":"src/java/org/apache/solr/schema/IndexSchema#registerDynamicField(SchemaField...).mjava","sourceNew":"  /**\n   * Register one or more new Dynamic Field with the Schema.\n   * @param f The {@link org.apache.solr.schema.SchemaField}\n   */\n  public void registerDynamicField(SchemaField ... f) {\n    List<DynamicField> dynFields = new ArrayList<DynamicField>(Arrays.asList(dynamicFields));\n    for (SchemaField field : f) {\n      if (isDuplicateDynField(dynFields, field) == false) {\n        log.debug(\"dynamic field creation for schema field: \" + field.getName());\n        addDynamicFieldNoDupCheck(dynFields, field);\n      } else {\n        log.debug(\"dynamic field already exists: dynamic field: [\" + field.getName() + \"]\");\n      }\n    }\n    Collections.sort(dynFields);\n    dynamicFields = dynFields.toArray(new DynamicField[dynFields.size()]);\n  }\n\n","sourceOld":"  /**\n   * Register one or more new Dynamic Field with the Schema.\n   * @param f The {@link org.apache.solr.schema.SchemaField}\n   */\n  public void registerDynamicField(SchemaField ... f) {\n    List<DynamicField> dynFields = new ArrayList<DynamicField>(Arrays.asList(dynamicFields));\n    for (SchemaField field : f) {\n      if (isDuplicateDynField(dynFields, field) == false) {\n        log.debug(\"dynamic field creation for schema field: \" + field.getName());\n        addDynamicFieldNoDupCheck(dynFields, field);\n      } else {\n        log.debug(\"dynamic field already exists: dynamic field: [\" + field.getName() + \"]\");\n      }\n    }\n    Collections.sort(dynFields);\n    dynamicFields = dynFields.toArray(new DynamicField[dynFields.size()]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"abec2fd822be07fc74ef5ba3609b9c5625a87d6d":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["b82ee93a0b7e1703398375f2e9acc80c452b97c4"],"b82ee93a0b7e1703398375f2e9acc80c452b97c4":["abec2fd822be07fc74ef5ba3609b9c5625a87d6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"abec2fd822be07fc74ef5ba3609b9c5625a87d6d":["b82ee93a0b7e1703398375f2e9acc80c452b97c4"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["abec2fd822be07fc74ef5ba3609b9c5625a87d6d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"b82ee93a0b7e1703398375f2e9acc80c452b97c4":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}