{"path":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testMaximumResultsForSuggest().mjava","commits":[{"id":"51f6eb2e42e0de57b9d737aa322902b2d3029149","date":1450381224,"type":0,"author":"James Dyer","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testMaximumResultsForSuggest().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMaximumResultsForSuggest() throws Exception {\n   assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"7\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n    try {\n      assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n          SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"6\")\n          ,\"/spellcheck/suggestions/[1]/numFound==1\"\n       );\n      fail(\"there should have been no suggestions (6<7)\");\n    } catch(Exception e) {\n      //correctly threw exception\n    }\n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", /*returns 10, less selective */ \"fq\", \"lowerfilt:th*\", /* returns 8, most selective */\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".90\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n    try {\n      assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n          \"fq\", \"id:[0 TO 9]\", /*returns 10, less selective */ \"fq\", \"lowerfilt:th*\", /* returns 8, most selective */\n          SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".80\")\n          ,\"/spellcheck/suggestions/[1]/numFound==1\"\n       );\n      fail(\"there should have been no suggestions ((.8 * 8)<7)\");\n    } catch(Exception e) {\n      //correctly threw exception\n    }\n    \n    \n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ, \"id:[0 TO 9]\", \n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".70\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n    try {\n      assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n          \"fq\", \"id:[0 TO 9]\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ, \"lowerfilt:th*\", \n          SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".64\")\n          ,\"/spellcheck/suggestions/[1]/numFound==1\"\n       );\n      fail(\"there should have been no suggestions ((.64 * 10)<7)\");\n    } catch(Exception e) {\n      //correctly threw exception\n    }\n  } \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"862753d1e2f4853f389dcb115747661e7bc0e384","date":1485438193,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testMaximumResultsForSuggest().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testMaximumResultsForSuggest().mjava","sourceNew":"  @Test\n  public void testMaximumResultsForSuggest() throws Exception {\n   assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"7\")\n        ,\"/spellcheck/suggestions/brwn/numFound==1\"\n     );\n\n   assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n       SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"6\")\n       ,\"/spellcheck/suggestions=={}\");\n   // there should have been no suggestions (6<7)\n\n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", /*returns 10, less selective */ \"fq\", \"lowerfilt:th*\", /* returns 8, most selective */\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".90\")\n        ,\"/spellcheck/suggestions/brwn/numFound==1\"\n     );\n\n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", /*returns 10, less selective */ \"fq\", \"lowerfilt:th*\", /* returns 8, most selective */\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".80\")\n        ,\"/spellcheck/suggestions=={}\");\n    // there should have been no suggestions ((.8 * 8)<7)\n    \n    \n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ, \"id:[0 TO 9]\", \n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".70\")\n        ,\"/spellcheck/suggestions/brwn/numFound==1\"\n     );\n\n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ, \"lowerfilt:th*\", \n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".64\")\n        ,\"/spellcheck/suggestions=={}\");\n    // there should have been no suggestions ((.64 * 10)<7)\n  } \n\n","sourceOld":"  @Test\n  public void testMaximumResultsForSuggest() throws Exception {\n   assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"7\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n    try {\n      assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n          SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"6\")\n          ,\"/spellcheck/suggestions/[1]/numFound==1\"\n       );\n      fail(\"there should have been no suggestions (6<7)\");\n    } catch(Exception e) {\n      //correctly threw exception\n    }\n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", /*returns 10, less selective */ \"fq\", \"lowerfilt:th*\", /* returns 8, most selective */\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".90\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n    try {\n      assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n          \"fq\", \"id:[0 TO 9]\", /*returns 10, less selective */ \"fq\", \"lowerfilt:th*\", /* returns 8, most selective */\n          SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".80\")\n          ,\"/spellcheck/suggestions/[1]/numFound==1\"\n       );\n      fail(\"there should have been no suggestions ((.8 * 8)<7)\");\n    } catch(Exception e) {\n      //correctly threw exception\n    }\n    \n    \n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ, \"id:[0 TO 9]\", \n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".70\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n    try {\n      assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n          \"fq\", \"id:[0 TO 9]\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ, \"lowerfilt:th*\", \n          SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".64\")\n          ,\"/spellcheck/suggestions/[1]/numFound==1\"\n       );\n      fail(\"there should have been no suggestions ((.64 * 10)<7)\");\n    } catch(Exception e) {\n      //correctly threw exception\n    }\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"598b5d23aa7c9732bf473c21a9cd309c44599394","date":1485530378,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testMaximumResultsForSuggest().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testMaximumResultsForSuggest().mjava","sourceNew":"  @Test\n  public void testMaximumResultsForSuggest() throws Exception {\n   assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"7\")\n        ,\"/spellcheck/suggestions/brwn/numFound==1\"\n     );\n\n   assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n       SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"6\")\n       ,\"/spellcheck/suggestions=={}\");\n   // there should have been no suggestions (6<7)\n\n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", /*returns 10, less selective */ \"fq\", \"lowerfilt:th*\", /* returns 8, most selective */\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".90\")\n        ,\"/spellcheck/suggestions/brwn/numFound==1\"\n     );\n\n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", /*returns 10, less selective */ \"fq\", \"lowerfilt:th*\", /* returns 8, most selective */\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".80\")\n        ,\"/spellcheck/suggestions=={}\");\n    // there should have been no suggestions ((.8 * 8)<7)\n    \n    \n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ, \"id:[0 TO 9]\", \n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".70\")\n        ,\"/spellcheck/suggestions/brwn/numFound==1\"\n     );\n\n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ, \"lowerfilt:th*\", \n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".64\")\n        ,\"/spellcheck/suggestions=={}\");\n    // there should have been no suggestions ((.64 * 10)<7)\n  } \n\n","sourceOld":"  @Test\n  public void testMaximumResultsForSuggest() throws Exception {\n   assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"7\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n    try {\n      assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n          SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"6\")\n          ,\"/spellcheck/suggestions/[1]/numFound==1\"\n       );\n      fail(\"there should have been no suggestions (6<7)\");\n    } catch(Exception e) {\n      //correctly threw exception\n    }\n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", /*returns 10, less selective */ \"fq\", \"lowerfilt:th*\", /* returns 8, most selective */\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".90\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n    try {\n      assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n          \"fq\", \"id:[0 TO 9]\", /*returns 10, less selective */ \"fq\", \"lowerfilt:th*\", /* returns 8, most selective */\n          SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".80\")\n          ,\"/spellcheck/suggestions/[1]/numFound==1\"\n       );\n      fail(\"there should have been no suggestions ((.8 * 8)<7)\");\n    } catch(Exception e) {\n      //correctly threw exception\n    }\n    \n    \n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ, \"id:[0 TO 9]\", \n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".70\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n    try {\n      assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n          \"fq\", \"id:[0 TO 9]\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ, \"lowerfilt:th*\", \n          SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".64\")\n          ,\"/spellcheck/suggestions/[1]/numFound==1\"\n       );\n      fail(\"there should have been no suggestions ((.64 * 10)<7)\");\n    } catch(Exception e) {\n      //correctly threw exception\n    }\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"374570062523b2011ca513a2276525ff3ddf222d","date":1494268002,"type":3,"author":"jdyer1","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testMaximumResultsForSuggest().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testMaximumResultsForSuggest().mjava","sourceNew":"  @Test\n  public void testMaximumResultsForSuggest() throws Exception {\n   assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"7\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n    try {\n      assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n          SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"6\")\n          ,\"/spellcheck/suggestions/[1]/numFound==1\"\n       );\n      fail(\"there should have been no suggestions (6<7)\");\n    } catch(Exception e) {\n      //correctly threw exception\n    }\n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", /*returns 10, less selective */ \"fq\", \"lowerfilt:th*\", /* returns 8, most selective */\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".90\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n    try {\n      assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n          \"fq\", \"id:[0 TO 9]\", /*returns 10, less selective */ \"fq\", \"lowerfilt:th*\", /* returns 8, most selective */\n          SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".80\")\n          ,\"/spellcheck/suggestions/[1]/numFound==1\"\n       );\n      fail(\"there should have been no suggestions ((.8 * 8)<7)\");\n    } catch(Exception e) {\n      //correctly threw exception\n    }\n    \n    \n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ, \"id:[0 TO 9]\", \n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".70\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n    try {\n      assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n          \"fq\", \"id:[0 TO 9]\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ, \"lowerfilt:th*\", \n          SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".64\")\n          ,\"/spellcheck/suggestions/[1]/numFound==1\"\n       );\n      fail(\"there should have been no suggestions ((.64 * 10)<7)\");\n    } catch(Exception e) {\n      //correctly threw exception\n    }\n  } \n\n","sourceOld":"  @Test\n  public void testMaximumResultsForSuggest() throws Exception {\n   assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"7\")\n        ,\"/spellcheck/suggestions/brwn/numFound==1\"\n     );\n\n   assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n       SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"6\")\n       ,\"/spellcheck/suggestions=={}\");\n   // there should have been no suggestions (6<7)\n\n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", /*returns 10, less selective */ \"fq\", \"lowerfilt:th*\", /* returns 8, most selective */\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".90\")\n        ,\"/spellcheck/suggestions/brwn/numFound==1\"\n     );\n\n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", /*returns 10, less selective */ \"fq\", \"lowerfilt:th*\", /* returns 8, most selective */\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".80\")\n        ,\"/spellcheck/suggestions=={}\");\n    // there should have been no suggestions ((.8 * 8)<7)\n    \n    \n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ, \"id:[0 TO 9]\", \n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".70\")\n        ,\"/spellcheck/suggestions/brwn/numFound==1\"\n     );\n\n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ, \"lowerfilt:th*\", \n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".64\")\n        ,\"/spellcheck/suggestions=={}\");\n    // there should have been no suggestions ((.64 * 10)<7)\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testMaximumResultsForSuggest().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testMaximumResultsForSuggest().mjava","sourceNew":"  @Test\n  public void testMaximumResultsForSuggest() throws Exception {\n   assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"7\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n    try {\n      assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n          SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"6\")\n          ,\"/spellcheck/suggestions/[1]/numFound==1\"\n       );\n      fail(\"there should have been no suggestions (6<7)\");\n    } catch(Exception e) {\n      //correctly threw exception\n    }\n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", /*returns 10, less selective */ \"fq\", \"lowerfilt:th*\", /* returns 8, most selective */\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".90\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n    try {\n      assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n          \"fq\", \"id:[0 TO 9]\", /*returns 10, less selective */ \"fq\", \"lowerfilt:th*\", /* returns 8, most selective */\n          SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".80\")\n          ,\"/spellcheck/suggestions/[1]/numFound==1\"\n       );\n      fail(\"there should have been no suggestions ((.8 * 8)<7)\");\n    } catch(Exception e) {\n      //correctly threw exception\n    }\n    \n    \n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ, \"id:[0 TO 9]\", \n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".70\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n    try {\n      assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n          \"fq\", \"id:[0 TO 9]\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ, \"lowerfilt:th*\", \n          SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".64\")\n          ,\"/spellcheck/suggestions/[1]/numFound==1\"\n       );\n      fail(\"there should have been no suggestions ((.64 * 10)<7)\");\n    } catch(Exception e) {\n      //correctly threw exception\n    }\n  } \n\n","sourceOld":"  @Test\n  public void testMaximumResultsForSuggest() throws Exception {\n   assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"7\")\n        ,\"/spellcheck/suggestions/brwn/numFound==1\"\n     );\n\n   assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n       SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"6\")\n       ,\"/spellcheck/suggestions=={}\");\n   // there should have been no suggestions (6<7)\n\n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", /*returns 10, less selective */ \"fq\", \"lowerfilt:th*\", /* returns 8, most selective */\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".90\")\n        ,\"/spellcheck/suggestions/brwn/numFound==1\"\n     );\n\n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", /*returns 10, less selective */ \"fq\", \"lowerfilt:th*\", /* returns 8, most selective */\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".80\")\n        ,\"/spellcheck/suggestions=={}\");\n    // there should have been no suggestions ((.8 * 8)<7)\n    \n    \n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ, \"id:[0 TO 9]\", \n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".70\")\n        ,\"/spellcheck/suggestions/brwn/numFound==1\"\n     );\n\n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ, \"lowerfilt:th*\", \n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".64\")\n        ,\"/spellcheck/suggestions=={}\");\n    // there should have been no suggestions ((.64 * 10)<7)\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1a307447328c95a00248512b40d7a5ff12ecd6a","date":1564817449,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testMaximumResultsForSuggest().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testMaximumResultsForSuggest().mjava","sourceNew":"  @Test\n  public void testMaximumResultsForSuggest() throws Exception {\n   assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"7\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n\n   expectThrows(Exception.class, () -> {\n     assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n         SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"6\")\n         ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n   });\n\n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", /*returns 10, less selective */ \"fq\", \"lowerfilt:th*\", /* returns 8, most selective */\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".90\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n\n    expectThrows(Exception.class, () -> {\n      assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n          \"fq\", \"id:[0 TO 9]\", /*returns 10, less selective */ \"fq\", \"lowerfilt:th*\", /* returns 8, most selective */\n          SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".80\")\n          ,\"/spellcheck/suggestions/[1]/numFound==1\"\n      );\n    });\n    \n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ, \"id:[0 TO 9]\", \n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".70\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n\n    expectThrows(Exception.class, () -> {\n      assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n          \"fq\", \"id:[0 TO 9]\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ, \"lowerfilt:th*\",\n          SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".64\")\n          ,\"/spellcheck/suggestions/[1]/numFound==1\"\n      );\n    });\n  } \n\n","sourceOld":"  @Test\n  public void testMaximumResultsForSuggest() throws Exception {\n   assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"7\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n    try {\n      assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n          SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"6\")\n          ,\"/spellcheck/suggestions/[1]/numFound==1\"\n       );\n      fail(\"there should have been no suggestions (6<7)\");\n    } catch(Exception e) {\n      //correctly threw exception\n    }\n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", /*returns 10, less selective */ \"fq\", \"lowerfilt:th*\", /* returns 8, most selective */\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".90\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n    try {\n      assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n          \"fq\", \"id:[0 TO 9]\", /*returns 10, less selective */ \"fq\", \"lowerfilt:th*\", /* returns 8, most selective */\n          SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".80\")\n          ,\"/spellcheck/suggestions/[1]/numFound==1\"\n       );\n      fail(\"there should have been no suggestions ((.8 * 8)<7)\");\n    } catch(Exception e) {\n      //correctly threw exception\n    }\n    \n    \n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ, \"id:[0 TO 9]\", \n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".70\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n    try {\n      assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n          \"fq\", \"id:[0 TO 9]\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ, \"lowerfilt:th*\", \n          SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".64\")\n          ,\"/spellcheck/suggestions/[1]/numFound==1\"\n       );\n      fail(\"there should have been no suggestions ((.64 * 10)<7)\");\n    } catch(Exception e) {\n      //correctly threw exception\n    }\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testMaximumResultsForSuggest().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testMaximumResultsForSuggest().mjava","sourceNew":"  @Test\n  public void testMaximumResultsForSuggest() throws Exception {\n   assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"7\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n\n   expectThrows(Exception.class, () -> {\n     assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n         SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"6\")\n         ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n   });\n\n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", /*returns 10, less selective */ \"fq\", \"lowerfilt:th*\", /* returns 8, most selective */\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".90\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n\n    expectThrows(Exception.class, () -> {\n      assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n          \"fq\", \"id:[0 TO 9]\", /*returns 10, less selective */ \"fq\", \"lowerfilt:th*\", /* returns 8, most selective */\n          SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".80\")\n          ,\"/spellcheck/suggestions/[1]/numFound==1\"\n      );\n    });\n    \n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ, \"id:[0 TO 9]\", \n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".70\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n\n    expectThrows(Exception.class, () -> {\n      assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n          \"fq\", \"id:[0 TO 9]\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ, \"lowerfilt:th*\",\n          SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".64\")\n          ,\"/spellcheck/suggestions/[1]/numFound==1\"\n      );\n    });\n  } \n\n","sourceOld":"  @Test\n  public void testMaximumResultsForSuggest() throws Exception {\n   assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"7\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n    try {\n      assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n          SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"6\")\n          ,\"/spellcheck/suggestions/[1]/numFound==1\"\n       );\n      fail(\"there should have been no suggestions (6<7)\");\n    } catch(Exception e) {\n      //correctly threw exception\n    }\n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", /*returns 10, less selective */ \"fq\", \"lowerfilt:th*\", /* returns 8, most selective */\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".90\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n    try {\n      assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n          \"fq\", \"id:[0 TO 9]\", /*returns 10, less selective */ \"fq\", \"lowerfilt:th*\", /* returns 8, most selective */\n          SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".80\")\n          ,\"/spellcheck/suggestions/[1]/numFound==1\"\n       );\n      fail(\"there should have been no suggestions ((.8 * 8)<7)\");\n    } catch(Exception e) {\n      //correctly threw exception\n    }\n    \n    \n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ, \"id:[0 TO 9]\", \n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".70\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n    try {\n      assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n          \"fq\", \"id:[0 TO 9]\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ, \"lowerfilt:th*\", \n          SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".64\")\n          ,\"/spellcheck/suggestions/[1]/numFound==1\"\n       );\n      fail(\"there should have been no suggestions ((.64 * 10)<7)\");\n    } catch(Exception e) {\n      //correctly threw exception\n    }\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","date":1565097295,"type":3,"author":"Jan Høydahl","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testMaximumResultsForSuggest().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testMaximumResultsForSuggest().mjava","sourceNew":"  @Test\n  public void testMaximumResultsForSuggest() throws Exception {\n   assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"7\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n\n   expectThrows(Exception.class, () -> {\n     assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n         SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"6\")\n         ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n   });\n\n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", /*returns 10, less selective */ \"fq\", \"lowerfilt:th*\", /* returns 8, most selective */\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".90\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n\n    expectThrows(Exception.class, () -> {\n      assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n          \"fq\", \"id:[0 TO 9]\", /*returns 10, less selective */ \"fq\", \"lowerfilt:th*\", /* returns 8, most selective */\n          SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".80\")\n          ,\"/spellcheck/suggestions/[1]/numFound==1\"\n      );\n    });\n    \n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ, \"id:[0 TO 9]\", \n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".70\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n\n    expectThrows(Exception.class, () -> {\n      assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n          \"fq\", \"id:[0 TO 9]\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ, \"lowerfilt:th*\",\n          SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".64\")\n          ,\"/spellcheck/suggestions/[1]/numFound==1\"\n      );\n    });\n  } \n\n","sourceOld":"  @Test\n  public void testMaximumResultsForSuggest() throws Exception {\n   assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"7\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n    try {\n      assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n          SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"6\")\n          ,\"/spellcheck/suggestions/[1]/numFound==1\"\n       );\n      fail(\"there should have been no suggestions (6<7)\");\n    } catch(Exception e) {\n      //correctly threw exception\n    }\n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", /*returns 10, less selective */ \"fq\", \"lowerfilt:th*\", /* returns 8, most selective */\n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".90\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n    try {\n      assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n          \"fq\", \"id:[0 TO 9]\", /*returns 10, less selective */ \"fq\", \"lowerfilt:th*\", /* returns 8, most selective */\n          SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".80\")\n          ,\"/spellcheck/suggestions/[1]/numFound==1\"\n       );\n      fail(\"there should have been no suggestions ((.8 * 8)<7)\");\n    } catch(Exception e) {\n      //correctly threw exception\n    }\n    \n    \n    assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n        \"fq\", \"id:[0 TO 9]\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ, \"id:[0 TO 9]\", \n        SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".70\")\n        ,\"/spellcheck/suggestions/[0]=='brwn'\"\n        ,\"/spellcheck/suggestions/[1]/numFound==1\"\n     );\n    try {\n      assertJQ(req(\"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellingParams.SPELLCHECK_BUILD, \"true\", \"q\",\"lowerfilt:(this OR brwn)\",\n          \"fq\", \"id:[0 TO 9]\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ, \"lowerfilt:th*\", \n          SpellingParams.SPELLCHECK_COUNT,\"5\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS,\"false\", SpellingParams.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \".64\")\n          ,\"/spellcheck/suggestions/[1]/numFound==1\"\n       );\n      fail(\"there should have been no suggestions ((.64 * 10)<7)\");\n    } catch(Exception e) {\n      //correctly threw exception\n    }\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"374570062523b2011ca513a2276525ff3ddf222d":["862753d1e2f4853f389dcb115747661e7bc0e384"],"51f6eb2e42e0de57b9d737aa322902b2d3029149":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["862753d1e2f4853f389dcb115747661e7bc0e384","374570062523b2011ca513a2276525ff3ddf222d"],"862753d1e2f4853f389dcb115747661e7bc0e384":["51f6eb2e42e0de57b9d737aa322902b2d3029149"],"598b5d23aa7c9732bf473c21a9cd309c44599394":["51f6eb2e42e0de57b9d737aa322902b2d3029149","862753d1e2f4853f389dcb115747661e7bc0e384"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["374570062523b2011ca513a2276525ff3ddf222d"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":["374570062523b2011ca513a2276525ff3ddf222d","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"f8061ddd97f3352007d927dae445884a6f3d857b":["374570062523b2011ca513a2276525ff3ddf222d","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1a307447328c95a00248512b40d7a5ff12ecd6a"]},"commit2Childs":{"374570062523b2011ca513a2276525ff3ddf222d":["e9017cf144952056066919f1ebc7897ff9bd71b1","d1a307447328c95a00248512b40d7a5ff12ecd6a","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b"],"51f6eb2e42e0de57b9d737aa322902b2d3029149":["862753d1e2f4853f389dcb115747661e7bc0e384","598b5d23aa7c9732bf473c21a9cd309c44599394"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"862753d1e2f4853f389dcb115747661e7bc0e384":["374570062523b2011ca513a2276525ff3ddf222d","e9017cf144952056066919f1ebc7897ff9bd71b1","598b5d23aa7c9732bf473c21a9cd309c44599394"],"598b5d23aa7c9732bf473c21a9cd309c44599394":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["51f6eb2e42e0de57b9d737aa322902b2d3029149"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":[],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","598b5d23aa7c9732bf473c21a9cd309c44599394","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}