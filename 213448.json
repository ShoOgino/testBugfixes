{"path":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#testMustAndMustNot().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#testMustAndMustNot().mjava","pathOld":"contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#testMustAndMustNot().mjava","sourceNew":"\tpublic void testMustAndMustNot() throws Throwable\n\t{\n    BooleanFilter booleanFilter = new BooleanFilter();\n    booleanFilter.add(new FilterClause(getTermsFilter(\"inStock\",\"N\"),BooleanClause.Occur.MUST));\n    booleanFilter.add(new FilterClause(getTermsFilter(\"price\",\"030\"),BooleanClause.Occur.MUST_NOT));\n    tstFilterCard(\"MUST_NOT wins over MUST for same docs\",0,booleanFilter);\n\t}\n\n","sourceOld":"\tpublic void testMustAndMustNot() throws Throwable\n\t{\n    BooleanFilter booleanFilter = new BooleanFilter();\n    booleanFilter.add(new FilterClause(getTermsFilter(\"inStock\",\"N\"),BooleanClause.Occur.MUST));\n    booleanFilter.add(new FilterClause(getTermsFilter(\"price\",\"030\"),BooleanClause.Occur.MUST_NOT));\n    tstFilterCard(\"MUST_NOT wins over MUST for same docs\",0,booleanFilter);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e141595402370bee958745de8b1c9de1fa182581","date":1310547892,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#testMustAndMustNot().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#testMustAndMustNot().mjava","sourceNew":"  public void testMustAndMustNot() throws Throwable {\n    BooleanFilter booleanFilter = new BooleanFilter();\n    booleanFilter.add(new FilterClause(getTermsFilter(\"inStock\", \"N\"), BooleanClause.Occur.MUST));\n    booleanFilter.add(new FilterClause(getTermsFilter(\"price\", \"030\"), BooleanClause.Occur.MUST_NOT));\n    tstFilterCard(\"MUST_NOT wins over MUST for same docs\", 0, booleanFilter);\n  }\n\n","sourceOld":"\tpublic void testMustAndMustNot() throws Throwable\n\t{\n    BooleanFilter booleanFilter = new BooleanFilter();\n    booleanFilter.add(new FilterClause(getTermsFilter(\"inStock\",\"N\"),BooleanClause.Occur.MUST));\n    booleanFilter.add(new FilterClause(getTermsFilter(\"price\",\"030\"),BooleanClause.Occur.MUST_NOT));\n    tstFilterCard(\"MUST_NOT wins over MUST for same docs\",0,booleanFilter);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f9f2355d68aab1348539f7a1603279405e566a4","date":1313634992,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#testMustAndMustNot().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#testMustAndMustNot().mjava","sourceNew":"  public void testMustAndMustNot() throws Throwable {\n    BooleanFilter booleanFilter = new BooleanFilter();\n    booleanFilter.add(new FilterClause(getTermsFilter(\"inStock\", \"N\"), BooleanClause.Occur.MUST));\n    booleanFilter.add(new FilterClause(getTermsFilter(\"price\", \"030\"), BooleanClause.Occur.MUST_NOT));\n    tstFilterCard(\"MUST_NOT wins over MUST for same docs\", 0, booleanFilter);\n  }\n\n","sourceOld":"  public void testMustAndMustNot() throws Throwable {\n    BooleanFilter booleanFilter = new BooleanFilter();\n    booleanFilter.add(new FilterClause(getTermsFilter(\"inStock\", \"N\"), BooleanClause.Occur.MUST));\n    booleanFilter.add(new FilterClause(getTermsFilter(\"price\", \"030\"), BooleanClause.Occur.MUST_NOT));\n    tstFilterCard(\"MUST_NOT wins over MUST for same docs\", 0, booleanFilter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e141595402370bee958745de8b1c9de1fa182581":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1f9f2355d68aab1348539f7a1603279405e566a4"],"1f9f2355d68aab1348539f7a1603279405e566a4":["e141595402370bee958745de8b1c9de1fa182581"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e141595402370bee958745de8b1c9de1fa182581":["1f9f2355d68aab1348539f7a1603279405e566a4"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["e141595402370bee958745de8b1c9de1fa182581"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"1f9f2355d68aab1348539f7a1603279405e566a4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}