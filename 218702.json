{"path":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#toLocalParamsString().mjava","commits":[{"id":"13d45ae511f63e9686357f412e5b4d60b82df041","date":1493210332,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#toLocalParamsString().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Generates a local-params string of the form <pre>{! name=value name2=value2}</pre>.\n   */\n  public String toLocalParamsString() {\n    final StringBuilder sb = new StringBuilder(128);\n    sb.append(\"{!\");\n    //TODO perhaps look for 'type' and add here?  but it doesn't matter.\n    for (final Iterator<String> it = getParameterNamesIterator(); it.hasNext();) {\n      final String name = it.next();\n      for (String val : getParams(name)) {\n        sb.append(' '); // do so even the first time; why not.\n        sb.append(name); // no escaping for name; it must follow \"Java Identifier\" rules.\n        sb.append('=');\n        sb.append(ClientUtils.encodeLocalParamVal(val));\n      }\n    }\n    sb.append('}');\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#toLocalParamsString().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Generates a local-params string of the form <pre>{! name=value name2=value2}</pre>.\n   */\n  public String toLocalParamsString() {\n    final StringBuilder sb = new StringBuilder(128);\n    sb.append(\"{!\");\n    //TODO perhaps look for 'type' and add here?  but it doesn't matter.\n    for (final Iterator<String> it = getParameterNamesIterator(); it.hasNext();) {\n      final String name = it.next();\n      for (String val : getParams(name)) {\n        sb.append(' '); // do so even the first time; why not.\n        sb.append(name); // no escaping for name; it must follow \"Java Identifier\" rules.\n        sb.append('=');\n        sb.append(ClientUtils.encodeLocalParamVal(val));\n      }\n    }\n    sb.append('}');\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"13d45ae511f63e9686357f412e5b4d60b82df041":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","13d45ae511f63e9686357f412e5b4d60b82df041"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["13d45ae511f63e9686357f412e5b4d60b82df041"]},"commit2Childs":{"13d45ae511f63e9686357f412e5b4d60b82df041":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["13d45ae511f63e9686357f412e5b4d60b82df041","e9017cf144952056066919f1ebc7897ff9bd71b1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}