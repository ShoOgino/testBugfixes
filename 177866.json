{"path":"lucene/src/test-framework/java/org/apache/lucene/util/_TestUtil#randomFixedLengthUnicodeString(Random,char[],int,int).mjava","commits":[{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/util/_TestUtil#randomFixedLengthUnicodeString(Random,char[],int,int).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#randomFixedLengthUnicodeString(Random,char[],int,int).mjava","sourceNew":"  /**\n   * Fills provided char[] with valid random unicode code\n   * unit sequence.\n   */\n  public static void randomFixedLengthUnicodeString(Random random, char[] chars, int offset, int length) {\n    int i = offset;\n    final int end = offset + length;\n    while(i < end) {\n      final int t = random.nextInt(5);\n      if (0 == t && i < length - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        chars[i++] = (char) nextInt(random, 0xd800, 0xdbff);\n        // Low surrogate\n        chars[i++] = (char) nextInt(random, 0xdc00, 0xdfff);\n      } else if (t <= 1) {\n        chars[i++] = (char) random.nextInt(0x80);\n      } else if (2 == t) {\n        chars[i++] = (char) nextInt(random, 0x80, 0x7ff);\n      } else if (3 == t) {\n        chars[i++] = (char) nextInt(random, 0x800, 0xd7ff);\n      } else if (4 == t) {\n        chars[i++] = (char) nextInt(random, 0xe000, 0xffff);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Fills provided char[] with valid random unicode code\n   * unit sequence.\n   */\n  public static void randomFixedLengthUnicodeString(Random random, char[] chars, int offset, int length) {\n    int i = offset;\n    final int end = offset + length;\n    while(i < end) {\n      final int t = random.nextInt(5);\n      if (0 == t && i < length - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        chars[i++] = (char) nextInt(random, 0xd800, 0xdbff);\n        // Low surrogate\n        chars[i++] = (char) nextInt(random, 0xdc00, 0xdfff);\n      } else if (t <= 1) {\n        chars[i++] = (char) random.nextInt(0x80);\n      } else if (2 == t) {\n        chars[i++] = (char) nextInt(random, 0x80, 0x7ff);\n      } else if (3 == t) {\n        chars[i++] = (char) nextInt(random, 0x800, 0xd7ff);\n      } else if (4 == t) {\n        chars[i++] = (char) nextInt(random, 0xe000, 0xffff);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#randomFixedLengthUnicodeString(Random,char[],int,int).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/util/_TestUtil#randomFixedLengthUnicodeString(Random,char[],int,int).mjava","sourceNew":"  /**\n   * Fills provided char[] with valid random unicode code\n   * unit sequence.\n   */\n  public static void randomFixedLengthUnicodeString(Random random, char[] chars, int offset, int length) {\n    int i = offset;\n    final int end = offset + length;\n    while(i < end) {\n      final int t = random.nextInt(5);\n      if (0 == t && i < length - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        chars[i++] = (char) nextInt(random, 0xd800, 0xdbff);\n        // Low surrogate\n        chars[i++] = (char) nextInt(random, 0xdc00, 0xdfff);\n      } else if (t <= 1) {\n        chars[i++] = (char) random.nextInt(0x80);\n      } else if (2 == t) {\n        chars[i++] = (char) nextInt(random, 0x80, 0x7ff);\n      } else if (3 == t) {\n        chars[i++] = (char) nextInt(random, 0x800, 0xd7ff);\n      } else if (4 == t) {\n        chars[i++] = (char) nextInt(random, 0xe000, 0xffff);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Fills provided char[] with valid random unicode code\n   * unit sequence.\n   */\n  public static void randomFixedLengthUnicodeString(Random random, char[] chars, int offset, int length) {\n    int i = offset;\n    final int end = offset + length;\n    while(i < end) {\n      final int t = random.nextInt(5);\n      if (0 == t && i < length - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        chars[i++] = (char) nextInt(random, 0xd800, 0xdbff);\n        // Low surrogate\n        chars[i++] = (char) nextInt(random, 0xdc00, 0xdfff);\n      } else if (t <= 1) {\n        chars[i++] = (char) random.nextInt(0x80);\n      } else if (2 == t) {\n        chars[i++] = (char) nextInt(random, 0x80, 0x7ff);\n      } else if (3 == t) {\n        chars[i++] = (char) nextInt(random, 0x800, 0xd7ff);\n      } else if (4 == t) {\n        chars[i++] = (char) nextInt(random, 0xe000, 0xffff);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["7b91922b55d15444d554721b352861d028eb8278"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b91922b55d15444d554721b352861d028eb8278"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}