{"path":"solr/core/src/test/org/apache/solr/core/TestConfig#testMaxSizeSettingWithoutAutoCommit().mjava","commits":[{"id":"4d07d6c279b65daaca32ee033fa06e4d7e85e0dd","date":1525384847,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfig#testMaxSizeSettingWithoutAutoCommit().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMaxSizeSettingWithoutAutoCommit() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(new SolrResourceLoader(TEST_PATH().resolve(\"collection1\")), \"bad-solrconfig-no-autocommit-tag.xml\", null);\n    Assert.assertEquals(-1, solrConfig.getUpdateHandlerInfo().autoCommitMaxSizeBytes);\n    Assert.assertEquals(-1, solrConfig.getUpdateHandlerInfo().autoCommmitMaxDocs);\n    Assert.assertEquals(-1, solrConfig.getUpdateHandlerInfo().autoCommmitMaxTime);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96","date":1576143009,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfig#testMaxSizeSettingWithoutAutoCommit().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfig#testMaxSizeSettingWithoutAutoCommit().mjava","sourceNew":"  @Test\n  public void testMaxSizeSettingWithoutAutoCommit() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(TEST_PATH().resolve(\"collection1\"), \"bad-solrconfig-no-autocommit-tag.xml\", null, true);\n    Assert.assertEquals(-1, solrConfig.getUpdateHandlerInfo().autoCommitMaxSizeBytes);\n    Assert.assertEquals(-1, solrConfig.getUpdateHandlerInfo().autoCommmitMaxDocs);\n    Assert.assertEquals(-1, solrConfig.getUpdateHandlerInfo().autoCommmitMaxTime);\n  }\n\n","sourceOld":"  @Test\n  public void testMaxSizeSettingWithoutAutoCommit() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(new SolrResourceLoader(TEST_PATH().resolve(\"collection1\")), \"bad-solrconfig-no-autocommit-tag.xml\", null);\n    Assert.assertEquals(-1, solrConfig.getUpdateHandlerInfo().autoCommitMaxSizeBytes);\n    Assert.assertEquals(-1, solrConfig.getUpdateHandlerInfo().autoCommmitMaxDocs);\n    Assert.assertEquals(-1, solrConfig.getUpdateHandlerInfo().autoCommmitMaxTime);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df724d84dab24a0cc54bec95a8680867adc7f171","date":1576156608,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfig#testMaxSizeSettingWithoutAutoCommit().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfig#testMaxSizeSettingWithoutAutoCommit().mjava","sourceNew":"  @Test\n  public void testMaxSizeSettingWithoutAutoCommit() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(TEST_PATH().resolve(\"collection1\"), \"bad-solrconfig-no-autocommit-tag.xml\", null, true);\n    Assert.assertEquals(-1, solrConfig.getUpdateHandlerInfo().autoCommitMaxSizeBytes);\n    Assert.assertEquals(-1, solrConfig.getUpdateHandlerInfo().autoCommmitMaxDocs);\n    Assert.assertEquals(-1, solrConfig.getUpdateHandlerInfo().autoCommmitMaxTime);\n  }\n\n","sourceOld":"  @Test\n  public void testMaxSizeSettingWithoutAutoCommit() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(new SolrResourceLoader(TEST_PATH().resolve(\"collection1\")), \"bad-solrconfig-no-autocommit-tag.xml\", null);\n    Assert.assertEquals(-1, solrConfig.getUpdateHandlerInfo().autoCommitMaxSizeBytes);\n    Assert.assertEquals(-1, solrConfig.getUpdateHandlerInfo().autoCommmitMaxDocs);\n    Assert.assertEquals(-1, solrConfig.getUpdateHandlerInfo().autoCommmitMaxTime);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","date":1583932828,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfig#testMaxSizeSettingWithoutAutoCommit().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfig#testMaxSizeSettingWithoutAutoCommit().mjava","sourceNew":"  @Test\n  public void testMaxSizeSettingWithoutAutoCommit() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(TEST_PATH().resolve(\"collection1\"), \"bad-solrconfig-no-autocommit-tag.xml\");\n    Assert.assertEquals(-1, solrConfig.getUpdateHandlerInfo().autoCommitMaxSizeBytes);\n    Assert.assertEquals(-1, solrConfig.getUpdateHandlerInfo().autoCommmitMaxDocs);\n    Assert.assertEquals(-1, solrConfig.getUpdateHandlerInfo().autoCommmitMaxTime);\n  }\n\n","sourceOld":"  @Test\n  public void testMaxSizeSettingWithoutAutoCommit() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(TEST_PATH().resolve(\"collection1\"), \"bad-solrconfig-no-autocommit-tag.xml\", null, true);\n    Assert.assertEquals(-1, solrConfig.getUpdateHandlerInfo().autoCommitMaxSizeBytes);\n    Assert.assertEquals(-1, solrConfig.getUpdateHandlerInfo().autoCommmitMaxDocs);\n    Assert.assertEquals(-1, solrConfig.getUpdateHandlerInfo().autoCommmitMaxTime);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df724d84dab24a0cc54bec95a8680867adc7f171":["4d07d6c279b65daaca32ee033fa06e4d7e85e0dd","ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96"],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96"],"4d07d6c279b65daaca32ee033fa06e4d7e85e0dd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96":["4d07d6c279b65daaca32ee033fa06e4d7e85e0dd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"]},"commit2Childs":{"df724d84dab24a0cc54bec95a8680867adc7f171":[],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4d07d6c279b65daaca32ee033fa06e4d7e85e0dd":["df724d84dab24a0cc54bec95a8680867adc7f171","ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4d07d6c279b65daaca32ee033fa06e4d7e85e0dd"],"ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96":["df724d84dab24a0cc54bec95a8680867adc7f171","ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["df724d84dab24a0cc54bec95a8680867adc7f171","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}