{"path":"src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","commits":[{"id":"d4f6245da77656e0c8850dec612ccf4ff80cfffc","date":1255714636,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"/dev/null","sourceNew":"  public void testGiga() throws Exception {\n\n    StandardAnalyzer analyzer = new StandardAnalyzer();\n\n    Directory index = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(index, analyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(\"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9","date":1256127131,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    StandardAnalyzer analyzer = new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT);\n\n    Directory index = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(index, analyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(\"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    StandardAnalyzer analyzer = new StandardAnalyzer();\n\n    Directory index = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(index, analyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(\"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba1116b3450a9c1642c89445d131b37344055245","date":1256329517,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    StandardAnalyzer analyzer = new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT);\n\n    Directory index = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(index, analyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(Version.LUCENE_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    StandardAnalyzer analyzer = new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT);\n\n    Directory index = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(index, analyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(\"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    StandardAnalyzer analyzer = new StandardAnalyzer(TEST_VERSION_CURRENT);\n\n    Directory index = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(index, analyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    StandardAnalyzer analyzer = new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT);\n\n    Directory index = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(index, analyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(Version.LUCENE_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    StandardAnalyzer analyzer = new StandardAnalyzer(TEST_VERSION_CURRENT);\n\n    Directory index = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(index, new IndexWriterConfig(TEST_VERSION_CURRENT).setAnalyzer(analyzer));\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    StandardAnalyzer analyzer = new StandardAnalyzer(TEST_VERSION_CURRENT);\n\n    Directory index = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(index, analyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    StandardAnalyzer analyzer = new StandardAnalyzer(TEST_VERSION_CURRENT);\n\n    Directory index = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(index, analyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    StandardAnalyzer analyzer = new StandardAnalyzer(TEST_VERSION_CURRENT);\n\n    Directory index = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(index, new IndexWriterConfig(TEST_VERSION_CURRENT).setAnalyzer(analyzer));\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    StandardAnalyzer analyzer = new StandardAnalyzer(TEST_VERSION_CURRENT);\n\n    Directory index = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(index, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer));\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    StandardAnalyzer analyzer = new StandardAnalyzer(TEST_VERSION_CURRENT);\n\n    Directory index = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(index, analyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","pathOld":"src/test/org/apache/lucene/search/TestFuzzyQuery#testGiga().mjava","sourceNew":"  public void testGiga() throws Exception {\n\n    StandardAnalyzer analyzer = new StandardAnalyzer(TEST_VERSION_CURRENT);\n\n    Directory index = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(index, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer));\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n  }\n\n","sourceOld":"  public void testGiga() throws Exception {\n\n    StandardAnalyzer analyzer = new StandardAnalyzer(TEST_VERSION_CURRENT);\n\n    Directory index = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(index, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzer));\n\n    addDoc(\"Lucene in Action\", w);\n    addDoc(\"Lucene for Dummies\", w);\n\n    //addDoc(\"Giga\", w);\n    addDoc(\"Giga byte\", w);\n\n    addDoc(\"ManagingGigabytesManagingGigabyte\", w);\n    addDoc(\"ManagingGigabytesManagingGigabytes\", w);\n\n    addDoc(\"The Art of Computer Science\", w);\n    addDoc(\"J. K. Rowling\", w);\n    addDoc(\"JK Rowling\", w);\n    addDoc(\"Joanne K Roling\", w);\n    addDoc(\"Bruce Willis\", w);\n    addDoc(\"Willis bruce\", w);\n    addDoc(\"Brute willis\", w);\n    addDoc(\"B. willis\", w);\n    IndexReader r = w.getReader();\n    w.close();\n\n    Query q = new QueryParser(TEST_VERSION_CURRENT, \"field\", analyzer).parse( \"giga~0.9\" );\n\n    // 3. search\n    IndexSearcher searcher = new IndexSearcher(r);\n    ScoreDoc[] hits = searcher.search(q, 10).scoreDocs;\n    assertEquals(1, hits.length);\n    assertEquals(\"Giga byte\", searcher.doc(hits[0].doc).get(\"field\"));\n    r.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["ba1116b3450a9c1642c89445d131b37344055245"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"d4f6245da77656e0c8850dec612ccf4ff80cfffc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["d4f6245da77656e0c8850dec612ccf4ff80cfffc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"ba1116b3450a9c1642c89445d131b37344055245":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4f6245da77656e0c8850dec612ccf4ff80cfffc"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"d4f6245da77656e0c8850dec612ccf4ff80cfffc":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["ba1116b3450a9c1642c89445d131b37344055245"],"ba1116b3450a9c1642c89445d131b37344055245":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}