{"path":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDUtil#compare(int,byte[],int,byte[],int).mjava","commits":[{"id":"e3ce1ef883d26aa73919aa2d53991726e96caa13","date":1445421402,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDUtil#compare(int,byte[],int,byte[],int).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns positive int if a > b, negative int if a < b and 0 if a == b */\n  public static int compare(int bytesPerDim, byte[] a, int aIndex, byte[] b, int bIndex) {\n    for(int i=0;i<bytesPerDim;i++) {\n      int cmp = (a[aIndex*bytesPerDim+i]&0xff) - (b[bIndex*bytesPerDim+i]&0xff);\n      if (cmp != 0) {\n        return cmp;\n      }\n    }\n\n    return 0;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca792c26af46bd6c4a08d81117c60440cf6a7e3d","date":1445938295,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDUtil#compare(int,byte[],int,byte[],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDUtil#compare(int,byte[],int,byte[],int).mjava","sourceNew":"  /** Returns positive int if a &gt; b, negative int if a &lt; b and 0 if a == b */\n  public static int compare(int bytesPerDim, byte[] a, int aIndex, byte[] b, int bIndex) {\n    for(int i=0;i<bytesPerDim;i++) {\n      int cmp = (a[aIndex*bytesPerDim+i]&0xff) - (b[bIndex*bytesPerDim+i]&0xff);\n      if (cmp != 0) {\n        return cmp;\n      }\n    }\n\n    return 0;\n  }\n\n","sourceOld":"  /** Returns positive int if a > b, negative int if a < b and 0 if a == b */\n  public static int compare(int bytesPerDim, byte[] a, int aIndex, byte[] b, int bIndex) {\n    for(int i=0;i<bytesPerDim;i++) {\n      int cmp = (a[aIndex*bytesPerDim+i]&0xff) - (b[bIndex*bytesPerDim+i]&0xff);\n      if (cmp != 0) {\n        return cmp;\n      }\n    }\n\n    return 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1786be6a11f9cf5e48ce84869d1bb71e9c02f966","date":1448381196,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDUtil#compare(int,byte[],int,byte[],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDUtil#compare(int,byte[],int,byte[],int).mjava","sourceNew":"  /** Returns positive int if a &gt; b, negative int if a &lt; b and 0 if a == b */\n  public static int compare(int bytesPerDim, byte[] a, int aIndex, byte[] b, int bIndex) {\n    assert aIndex >= 0;\n    assert bIndex >= 0;\n    int aOffset = aIndex*bytesPerDim;\n    int bOffset = bIndex*bytesPerDim;\n    for(int i=0;i<bytesPerDim;i++) {\n      int cmp = (a[aOffset+i]&0xff) - (b[bOffset+i]&0xff);\n      if (cmp != 0) {\n        return cmp;\n      }\n    }\n\n    return 0;\n  }\n\n","sourceOld":"  /** Returns positive int if a &gt; b, negative int if a &lt; b and 0 if a == b */\n  public static int compare(int bytesPerDim, byte[] a, int aIndex, byte[] b, int bIndex) {\n    for(int i=0;i<bytesPerDim;i++) {\n      int cmp = (a[aIndex*bytesPerDim+i]&0xff) - (b[bIndex*bytesPerDim+i]&0xff);\n      if (cmp != 0) {\n        return cmp;\n      }\n    }\n\n    return 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"770342641f7b505eaa8dccdc666158bff2419109","date":1449868421,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/NumericUtils#compare(int,byte[],int,byte[],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDUtil#compare(int,byte[],int,byte[],int).mjava","sourceNew":"  /** Returns positive int if a &gt; b, negative int if a &lt; b and 0 if a == b */\n  public static int compare(int bytesPerDim, byte[] a, int aIndex, byte[] b, int bIndex) {\n    assert aIndex >= 0;\n    assert bIndex >= 0;\n    int aOffset = aIndex*bytesPerDim;\n    int bOffset = bIndex*bytesPerDim;\n    for(int i=0;i<bytesPerDim;i++) {\n      int cmp = (a[aOffset+i]&0xff) - (b[bOffset+i]&0xff);\n      if (cmp != 0) {\n        return cmp;\n      }\n    }\n\n    return 0;\n  }\n\n","sourceOld":"  /** Returns positive int if a &gt; b, negative int if a &lt; b and 0 if a == b */\n  public static int compare(int bytesPerDim, byte[] a, int aIndex, byte[] b, int bIndex) {\n    assert aIndex >= 0;\n    assert bIndex >= 0;\n    int aOffset = aIndex*bytesPerDim;\n    int bOffset = bIndex*bytesPerDim;\n    for(int i=0;i<bytesPerDim;i++) {\n      int cmp = (a[aOffset+i]&0xff) - (b[bOffset+i]&0xff);\n      if (cmp != 0) {\n        return cmp;\n      }\n    }\n\n    return 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1786be6a11f9cf5e48ce84869d1bb71e9c02f966":["ca792c26af46bd6c4a08d81117c60440cf6a7e3d"],"ca792c26af46bd6c4a08d81117c60440cf6a7e3d":["e3ce1ef883d26aa73919aa2d53991726e96caa13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e3ce1ef883d26aa73919aa2d53991726e96caa13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"770342641f7b505eaa8dccdc666158bff2419109":["1786be6a11f9cf5e48ce84869d1bb71e9c02f966"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["770342641f7b505eaa8dccdc666158bff2419109"]},"commit2Childs":{"1786be6a11f9cf5e48ce84869d1bb71e9c02f966":["770342641f7b505eaa8dccdc666158bff2419109"],"ca792c26af46bd6c4a08d81117c60440cf6a7e3d":["1786be6a11f9cf5e48ce84869d1bb71e9c02f966"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e3ce1ef883d26aa73919aa2d53991726e96caa13"],"e3ce1ef883d26aa73919aa2d53991726e96caa13":["ca792c26af46bd6c4a08d81117c60440cf6a7e3d"],"770342641f7b505eaa8dccdc666158bff2419109":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}