{"path":"lucene/core/src/test/org/apache/lucene/util/TestArrayUtil#testMaxSize().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestArrayUtil#testMaxSize().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/TestArrayUtil#testMaxSize().mjava","sourceNew":"  public void testMaxSize() {\n    // intentionally pass invalid elemSizes:\n    for(int elemSize=0;elemSize<10;elemSize++) {\n      assertEquals(Integer.MAX_VALUE, ArrayUtil.oversize(Integer.MAX_VALUE, elemSize));\n      assertEquals(Integer.MAX_VALUE, ArrayUtil.oversize(Integer.MAX_VALUE-1, elemSize));\n    }\n  }\n\n","sourceOld":"  public void testMaxSize() {\n    // intentionally pass invalid elemSizes:\n    for(int elemSize=0;elemSize<10;elemSize++) {\n      assertEquals(Integer.MAX_VALUE, ArrayUtil.oversize(Integer.MAX_VALUE, elemSize));\n      assertEquals(Integer.MAX_VALUE, ArrayUtil.oversize(Integer.MAX_VALUE-1, elemSize));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f56f04ece188fdfbd96973fde3e6ba7a6fbaaada","date":1406145387,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestArrayUtil#testMaxSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestArrayUtil#testMaxSize().mjava","sourceNew":"  public void testMaxSize() {\n    // intentionally pass invalid elemSizes:\n    for(int elemSize=0;elemSize<10;elemSize++) {\n      assertEquals(ArrayUtil.MAX_ARRAY_LENGTH, ArrayUtil.oversize(ArrayUtil.MAX_ARRAY_LENGTH, elemSize));\n      assertEquals(ArrayUtil.MAX_ARRAY_LENGTH, ArrayUtil.oversize(ArrayUtil.MAX_ARRAY_LENGTH-1, elemSize));\n    }\n  }\n\n","sourceOld":"  public void testMaxSize() {\n    // intentionally pass invalid elemSizes:\n    for(int elemSize=0;elemSize<10;elemSize++) {\n      assertEquals(Integer.MAX_VALUE, ArrayUtil.oversize(Integer.MAX_VALUE, elemSize));\n      assertEquals(Integer.MAX_VALUE, ArrayUtil.oversize(Integer.MAX_VALUE-1, elemSize));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f56f04ece188fdfbd96973fde3e6ba7a6fbaaada":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f56f04ece188fdfbd96973fde3e6ba7a6fbaaada"]},"commit2Childs":{"f56f04ece188fdfbd96973fde3e6ba7a6fbaaada":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["f56f04ece188fdfbd96973fde3e6ba7a6fbaaada"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}