{"path":"solr/core/src/java/org/apache/solr/security/AuthenticationPlugin#doAuthenticate(HttpServletRequest,HttpServletResponse,FilterChain).mjava","commits":[{"id":"23b436ffee26b67f87efef6a3bab24697332b6b2","date":1587575178,"type":1,"author":"Mike Drob","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/AuthenticationPlugin#doAuthenticate(HttpServletRequest,HttpServletResponse,FilterChain).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/AuthenticationPlugin#doAuthenticate(ServletRequest,ServletResponse,FilterChain).mjava","sourceNew":"  /**\n   * This method attempts to authenticate the request. Upon a successful authentication, this\n   * must call the next filter in the filter chain and set the user principal of the request,\n   * or else, upon an error or an authentication failure, throw an exception.\n   *\n   * @param request the http request\n   * @param response the http response\n   * @param filterChain the servlet filter chain\n   * @return false if the request not be processed by Solr (not continue), i.e.\n   * the response and status code have already been sent.\n   * @throws Exception any exception thrown during the authentication, e.g. PrivilegedActionException\n   */\n  public abstract boolean doAuthenticate(HttpServletRequest request, HttpServletResponse response,\n      FilterChain filterChain) throws Exception;\n\n","sourceOld":"  /**\n   * This method attempts to authenticate the request. Upon a successful authentication, this\n   * must call the next filter in the filter chain and set the user principal of the request,\n   * or else, upon an error or an authentication failure, throw an exception.\n   *\n   * @param request the http request\n   * @param response the http response\n   * @param filterChain the servlet filter chain\n   * @return false if the request not be processed by Solr (not continue), i.e.\n   * the response and status code have already been sent.\n   * @throws Exception any exception thrown during the authentication, e.g. PrivilegedActionException\n   */\n  //TODO redeclare params as HttpServletRequest & HttpServletResponse\n  public abstract boolean doAuthenticate(ServletRequest request, ServletResponse response,\n      FilterChain filterChain) throws Exception;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"23b436ffee26b67f87efef6a3bab24697332b6b2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["23b436ffee26b67f87efef6a3bab24697332b6b2"]},"commit2Childs":{"23b436ffee26b67f87efef6a3bab24697332b6b2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["23b436ffee26b67f87efef6a3bab24697332b6b2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}