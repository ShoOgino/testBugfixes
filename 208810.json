{"path":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#getSSLConfig().mjava","commits":[{"id":"2ad87868b299ae70f519de3945968de8f3604216","date":1380203849,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#getSSLConfig().mjava","pathOld":"/dev/null","sourceNew":"  public static SSLConfig getSSLConfig() {\n    SSLConfig sslConfig = new SSLConfig();\n    \n    final boolean trySsl = random().nextBoolean();\n    final boolean trySslClientAuth = random().nextBoolean();\n    \n    log.info(\"Randomized ssl ({}) and clientAuth ({})\", trySsl,\n        trySslClientAuth);\n    String keystorePath = null == TEST_KEYSTORE ? null : TEST_KEYSTORE\n        .getAbsolutePath();\n    initSSLConfig(sslConfig, keystorePath);\n    \n    sslConfig.useSsl = trySsl;\n    sslConfig.clientAuth = trySslClientAuth;\n    \n    initSSLConfig(sslConfig, keystorePath);\n    return sslConfig;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72","date":1391985588,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#getSSLConfig().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#getSSLConfig().mjava","sourceNew":"  private static SSLConfig getSSLConfig() {\n    // test has disabled\n    if (sslConfig == null) {\n      SSLConfig sslConfig = new SSLConfig();\n      return sslConfig;\n    }\n    \n    // only randomize SSL if we are a solr test with access to the example keystore\n    if (null == getExampleKeystoreFile()) {\n      log.info(\"Solr's example keystore not defined (not a solr test?) skipping SSL randomization\");\n      return null;\n    }\n\n    assertTrue(\"test keystore does not exist, randomized ssl testing broken: \" +\n               getExampleKeystoreFile().getAbsolutePath(), \n               getExampleKeystoreFile().exists() );\n    \n    SSLConfig sslConfig = new SSLConfig();\n    \n    final boolean trySsl = random().nextBoolean();\n    final boolean trySslClientAuth = false; // TODO: random().nextBoolean();\n    \n    log.info(\"Randomized ssl ({}) and clientAuth ({})\", trySsl,\n        trySslClientAuth);\n    String keystorePath = null == TEST_KEYSTORE ? null : TEST_KEYSTORE\n        .getAbsolutePath();\n    initSSLConfig(sslConfig, keystorePath);\n    \n    sslConfig.useSsl = trySsl;\n    sslConfig.clientAuth = trySslClientAuth;\n    \n    return sslConfig;\n  }\n\n","sourceOld":"  public static SSLConfig getSSLConfig() {\n    SSLConfig sslConfig = new SSLConfig();\n    \n    final boolean trySsl = random().nextBoolean();\n    final boolean trySslClientAuth = random().nextBoolean();\n    \n    log.info(\"Randomized ssl ({}) and clientAuth ({})\", trySsl,\n        trySslClientAuth);\n    String keystorePath = null == TEST_KEYSTORE ? null : TEST_KEYSTORE\n        .getAbsolutePath();\n    initSSLConfig(sslConfig, keystorePath);\n    \n    sslConfig.useSsl = trySsl;\n    sslConfig.clientAuth = trySslClientAuth;\n    \n    initSSLConfig(sslConfig, keystorePath);\n    return sslConfig;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72":["2ad87868b299ae70f519de3945968de8f3604216"],"2ad87868b299ae70f519de3945968de8f3604216":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72"]},"commit2Childs":{"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2ad87868b299ae70f519de3945968de8f3604216":["57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2ad87868b299ae70f519de3945968de8f3604216"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}