{"path":"solr/core/src/test/org/apache/solr/search/mlt/SimpleMLTQParserTest#doTest().mjava","commits":[{"id":"eb55f624eb53f26cfb7f9614b862fb7657633358","date":1414519951,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/mlt/SimpleMLTQParserTest#doTest().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void doTest() throws Exception {\n    String id = \"id\";\n    delQ(\"*:*\");\n    assertU(adoc(id, \"1\", \"lowerfilt\", \"toyota\"));\n    assertU(adoc(id, \"2\", \"lowerfilt\", \"chevrolet\"));\n    assertU(adoc(id, \"3\", \"lowerfilt\", \"suzuki\"));\n    assertU(adoc(id, \"4\", \"lowerfilt\", \"ford\"));\n    assertU(adoc(id, \"5\", \"lowerfilt\", \"ferrari\"));\n    assertU(adoc(id, \"6\", \"lowerfilt\", \"jaguar\"));\n    assertU(adoc(id, \"7\", \"lowerfilt\", \"mclaren moon or the moon and moon moon shine \" +\n        \"and the moon but moon was good foxes too\"));\n    assertU(adoc(id, \"8\", \"lowerfilt\", \"sonata\"));\n    assertU(adoc(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy big \" +\n        \"and large brown dogs.\"));\n    assertU(adoc(id, \"10\", \"lowerfilt\", \"blue\"));\n    assertU(adoc(id, \"12\", \"lowerfilt\", \"glue\"));\n    assertU(adoc(id, \"13\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"14\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"15\", \"lowerfilt\", \"The fat red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"16\", \"lowerfilt\", \"The slim red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"17\", \"lowerfilt\", \"The quote red fox jumped moon over the lazy \" +\n        \"brown dogs moon. Of course moon. Foxes and moon come back to the foxes and moon\"));\n    assertU(adoc(id, \"18\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"19\", \"lowerfilt\", \"The hose red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"20\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"21\", \"lowerfilt\", \"The court red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"22\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"23\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"24\", \"lowerfilt\", \"The file red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"25\", \"lowerfilt\", \"rod fix\"));\n\n    assertU(commit());\n\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt id=17 qf=lowerfilt}\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='17']\",\n        \"//result/doc[2]/int[@name='id'][.='13']\",\n        \"//result/doc[3]/int[@name='id'][.='14']\",\n        \"//result/doc[4]/int[@name='id'][.='18']\",\n        \"//result/doc[5]/int[@name='id'][.='20']\",\n        \"//result/doc[6]/int[@name='id'][.='22']\",\n        \"//result/doc[7]/int[@name='id'][.='23']\",\n        \"//result/doc[8]/int[@name='id'][.='9']\",\n        \"//result/doc[9]/int[@name='id'][.='7']\",\n        \"//result/doc[10]/int[@name='id'][.='15']\"\n        );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["655260340014c640e7d0f9a7a7ea1f00f36f65e5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d32e559c96d0c16fe041e1608a4bbbf8a6c9a4e1","date":1414624217,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/mlt/SimpleMLTQParserTest#doTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/mlt/SimpleMLTQParserTest#doTest().mjava","sourceNew":"  @Test\n  public void doTest() throws Exception {\n    String id = \"id\";\n    delQ(\"*:*\");\n    assertU(adoc(id, \"1\", \"lowerfilt\", \"toyota\"));\n    assertU(adoc(id, \"2\", \"lowerfilt\", \"chevrolet\"));\n    assertU(adoc(id, \"3\", \"lowerfilt\", \"suzuki\"));\n    assertU(adoc(id, \"4\", \"lowerfilt\", \"ford\"));\n    assertU(adoc(id, \"5\", \"lowerfilt\", \"ferrari\"));\n    assertU(adoc(id, \"6\", \"lowerfilt\", \"jaguar\"));\n    assertU(adoc(id, \"7\", \"lowerfilt\", \"mclaren moon or the moon and moon moon shine \" +\n        \"and the moon but moon was good foxes too\"));\n    assertU(adoc(id, \"8\", \"lowerfilt\", \"sonata\"));\n    assertU(adoc(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy big \" +\n        \"and large brown dogs.\"));\n    assertU(adoc(id, \"10\", \"lowerfilt\", \"blue\"));\n    assertU(adoc(id, \"12\", \"lowerfilt\", \"glue\"));\n    assertU(adoc(id, \"13\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"14\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"15\", \"lowerfilt\", \"The fat red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"16\", \"lowerfilt\", \"The slim red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"17\", \"lowerfilt\", \"The quote red fox jumped moon over the lazy \" +\n        \"brown dogs moon. Of course moon. Foxes and moon come back to the foxes and moon\"));\n    assertU(adoc(id, \"18\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"19\", \"lowerfilt\", \"The hose red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"20\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"21\", \"lowerfilt\", \"The court red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"22\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"23\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"24\", \"lowerfilt\", \"The file red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"25\", \"lowerfilt\", \"rod fix\"));\n\n    assertU(commit());\n\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='17']\",\n        \"//result/doc[2]/int[@name='id'][.='13']\",\n        \"//result/doc[3]/int[@name='id'][.='14']\",\n        \"//result/doc[4]/int[@name='id'][.='18']\",\n        \"//result/doc[5]/int[@name='id'][.='20']\",\n        \"//result/doc[6]/int[@name='id'][.='22']\",\n        \"//result/doc[7]/int[@name='id'][.='23']\",\n        \"//result/doc[8]/int[@name='id'][.='9']\",\n        \"//result/doc[9]/int[@name='id'][.='7']\",\n        \"//result/doc[10]/int[@name='id'][.='15']\"\n        );\n  }\n\n","sourceOld":"  @Test\n  public void doTest() throws Exception {\n    String id = \"id\";\n    delQ(\"*:*\");\n    assertU(adoc(id, \"1\", \"lowerfilt\", \"toyota\"));\n    assertU(adoc(id, \"2\", \"lowerfilt\", \"chevrolet\"));\n    assertU(adoc(id, \"3\", \"lowerfilt\", \"suzuki\"));\n    assertU(adoc(id, \"4\", \"lowerfilt\", \"ford\"));\n    assertU(adoc(id, \"5\", \"lowerfilt\", \"ferrari\"));\n    assertU(adoc(id, \"6\", \"lowerfilt\", \"jaguar\"));\n    assertU(adoc(id, \"7\", \"lowerfilt\", \"mclaren moon or the moon and moon moon shine \" +\n        \"and the moon but moon was good foxes too\"));\n    assertU(adoc(id, \"8\", \"lowerfilt\", \"sonata\"));\n    assertU(adoc(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy big \" +\n        \"and large brown dogs.\"));\n    assertU(adoc(id, \"10\", \"lowerfilt\", \"blue\"));\n    assertU(adoc(id, \"12\", \"lowerfilt\", \"glue\"));\n    assertU(adoc(id, \"13\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"14\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"15\", \"lowerfilt\", \"The fat red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"16\", \"lowerfilt\", \"The slim red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"17\", \"lowerfilt\", \"The quote red fox jumped moon over the lazy \" +\n        \"brown dogs moon. Of course moon. Foxes and moon come back to the foxes and moon\"));\n    assertU(adoc(id, \"18\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"19\", \"lowerfilt\", \"The hose red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"20\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"21\", \"lowerfilt\", \"The court red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"22\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"23\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"24\", \"lowerfilt\", \"The file red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"25\", \"lowerfilt\", \"rod fix\"));\n\n    assertU(commit());\n\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt id=17 qf=lowerfilt}\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='17']\",\n        \"//result/doc[2]/int[@name='id'][.='13']\",\n        \"//result/doc[3]/int[@name='id'][.='14']\",\n        \"//result/doc[4]/int[@name='id'][.='18']\",\n        \"//result/doc[5]/int[@name='id'][.='20']\",\n        \"//result/doc[6]/int[@name='id'][.='22']\",\n        \"//result/doc[7]/int[@name='id'][.='23']\",\n        \"//result/doc[8]/int[@name='id'][.='9']\",\n        \"//result/doc[9]/int[@name='id'][.='7']\",\n        \"//result/doc[10]/int[@name='id'][.='15']\"\n        );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"776417a20af3930a363a226c989867f65e93ee91","date":1434582735,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/mlt/SimpleMLTQParserTest#doTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/mlt/SimpleMLTQParserTest#doTest().mjava","sourceNew":"  @Test\n  public void doTest() throws Exception {\n    String id = \"id\";\n    delQ(\"*:*\");\n    assertU(adoc(id, \"1\", \"lowerfilt\", \"toyota\"));\n    assertU(adoc(id, \"2\", \"lowerfilt\", \"chevrolet\"));\n    assertU(adoc(id, \"3\", \"lowerfilt\", \"suzuki\"));\n    assertU(adoc(id, \"4\", \"lowerfilt\", \"ford\"));\n    assertU(adoc(id, \"5\", \"lowerfilt\", \"ferrari\"));\n    assertU(adoc(id, \"6\", \"lowerfilt\", \"jaguar\"));\n    assertU(adoc(id, \"7\", \"lowerfilt\", \"mclaren moon or the moon and moon moon shine \" +\n        \"and the moon but moon was good foxes too\"));\n    assertU(adoc(id, \"8\", \"lowerfilt\", \"sonata\"));\n    assertU(adoc(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy big \" +\n        \"and large brown dogs.\"));\n    assertU(adoc(id, \"10\", \"lowerfilt\", \"blue\"));\n    assertU(adoc(id, \"12\", \"lowerfilt\", \"glue\"));\n    assertU(adoc(id, \"13\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"14\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"15\", \"lowerfilt\", \"The fat red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"16\", \"lowerfilt\", \"The slim red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"17\", \"lowerfilt\", \"The quote red fox jumped moon over the lazy \" +\n        \"brown dogs moon. Of course moon. Foxes and moon come back to the foxes and moon\"));\n    assertU(adoc(id, \"18\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"19\", \"lowerfilt\", \"The hose red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"20\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"21\", \"lowerfilt\", \"The court red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"22\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"23\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"24\", \"lowerfilt\", \"The file red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"25\", \"lowerfilt\", \"rod fix\"));\n\n    assertU(commit());\n\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='13']\",\n        \"//result/doc[2]/int[@name='id'][.='14']\",\n        \"//result/doc[3]/int[@name='id'][.='15']\",\n        \"//result/doc[4]/int[@name='id'][.='16']\",\n        \"//result/doc[5]/int[@name='id'][.='18']\",\n        \"//result/doc[6]/int[@name='id'][.='19']\",\n        \"//result/doc[7]/int[@name='id'][.='20']\",\n        \"//result/doc[8]/int[@name='id'][.='21']\",\n        \"//result/doc[9]/int[@name='id'][.='22']\",\n        \"//result/doc[10]/int[@name='id'][.='23']\"\n        );\n  }\n\n","sourceOld":"  @Test\n  public void doTest() throws Exception {\n    String id = \"id\";\n    delQ(\"*:*\");\n    assertU(adoc(id, \"1\", \"lowerfilt\", \"toyota\"));\n    assertU(adoc(id, \"2\", \"lowerfilt\", \"chevrolet\"));\n    assertU(adoc(id, \"3\", \"lowerfilt\", \"suzuki\"));\n    assertU(adoc(id, \"4\", \"lowerfilt\", \"ford\"));\n    assertU(adoc(id, \"5\", \"lowerfilt\", \"ferrari\"));\n    assertU(adoc(id, \"6\", \"lowerfilt\", \"jaguar\"));\n    assertU(adoc(id, \"7\", \"lowerfilt\", \"mclaren moon or the moon and moon moon shine \" +\n        \"and the moon but moon was good foxes too\"));\n    assertU(adoc(id, \"8\", \"lowerfilt\", \"sonata\"));\n    assertU(adoc(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy big \" +\n        \"and large brown dogs.\"));\n    assertU(adoc(id, \"10\", \"lowerfilt\", \"blue\"));\n    assertU(adoc(id, \"12\", \"lowerfilt\", \"glue\"));\n    assertU(adoc(id, \"13\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"14\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"15\", \"lowerfilt\", \"The fat red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"16\", \"lowerfilt\", \"The slim red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"17\", \"lowerfilt\", \"The quote red fox jumped moon over the lazy \" +\n        \"brown dogs moon. Of course moon. Foxes and moon come back to the foxes and moon\"));\n    assertU(adoc(id, \"18\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"19\", \"lowerfilt\", \"The hose red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"20\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"21\", \"lowerfilt\", \"The court red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"22\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"23\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"24\", \"lowerfilt\", \"The file red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"25\", \"lowerfilt\", \"rod fix\"));\n\n    assertU(commit());\n\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='17']\",\n        \"//result/doc[2]/int[@name='id'][.='13']\",\n        \"//result/doc[3]/int[@name='id'][.='14']\",\n        \"//result/doc[4]/int[@name='id'][.='18']\",\n        \"//result/doc[5]/int[@name='id'][.='20']\",\n        \"//result/doc[6]/int[@name='id'][.='22']\",\n        \"//result/doc[7]/int[@name='id'][.='23']\",\n        \"//result/doc[8]/int[@name='id'][.='9']\",\n        \"//result/doc[9]/int[@name='id'][.='7']\",\n        \"//result/doc[10]/int[@name='id'][.='15']\"\n        );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"655260340014c640e7d0f9a7a7ea1f00f36f65e5","date":1436227523,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/mlt/SimpleMLTQParserTest#doTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/mlt/SimpleMLTQParserTest#doTest().mjava","sourceNew":"  @Test\n  public void doTest() throws Exception {\n    String id = \"id\";\n    String FIELD1 = \"lowerfilt\" ;\n    String FIELD2 = \"lowerfilt1\" ;\n    delQ(\"*:*\");\n    assertU(adoc(id, \"1\", FIELD1, \"toyota\"));\n    assertU(adoc(id, \"2\", FIELD1, \"chevrolet\"));\n    assertU(adoc(id, \"3\", FIELD1, \"suzuki\"));\n    assertU(adoc(id, \"4\", FIELD1, \"ford\"));\n    assertU(adoc(id, \"5\", FIELD1, \"ferrari\"));\n    assertU(adoc(id, \"6\", FIELD1, \"jaguar\"));\n    assertU(adoc(id, \"7\", FIELD1, \"mclaren moon or the moon and moon moon shine \" +\n        \"and the moon but moon was good foxes too\"));\n    assertU(adoc(id, \"8\", FIELD1, \"sonata\"));\n    assertU(adoc(id, \"9\", FIELD1, \"The quick red fox jumped over the lazy big \" +\n        \"and large brown dogs.\"));\n    assertU(adoc(id, \"10\", FIELD1, \"blue\"));\n    assertU(adoc(id, \"12\", FIELD1, \"glue\"));\n    assertU(adoc(id, \"13\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"14\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"15\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"16\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"17\", FIELD1, \"The quote red fox jumped moon over the lazy \" +\n        \"brown dogs moon. Of course moon. Foxes and moon come back to the foxes and moon\"));\n    assertU(adoc(id, \"18\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"19\", FIELD1, \"The hose red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"20\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"21\", FIELD1, \"The court red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"22\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"23\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"24\", FIELD1, \"The file red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"25\", FIELD1, \"rod fix\"));\n    assertU(adoc(id, \"26\", FIELD1, \"bmw usa 328i\"));\n    assertU(adoc(id, \"27\", FIELD1, \"bmw usa 535i\"));\n    assertU(adoc(id, \"28\", FIELD1, \"bmw 750Li\"));\n    assertU(adoc(id, \"29\", FIELD1, \"bmw usa\",\n        FIELD2, \"red green blue\"));\n    assertU(adoc(id, \"30\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"red green yellow\"));\n    assertU(adoc(id, \"31\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"green blue yellow\"));\n    assertU(adoc(id, \"32\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"yellow white black\"));\n\n    assertU(commit());\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='13']\",\n        \"//result/doc[2]/int[@name='id'][.='14']\",\n        \"//result/doc[3]/int[@name='id'][.='15']\",\n        \"//result/doc[4]/int[@name='id'][.='16']\",\n        \"//result/doc[5]/int[@name='id'][.='18']\",\n        \"//result/doc[6]/int[@name='id'][.='19']\",\n        \"//result/doc[7]/int[@name='id'][.='20']\",\n        \"//result/doc[8]/int[@name='id'][.='21']\",\n        \"//result/doc[9]/int[@name='id'][.='22']\",\n        \"//result/doc[10]/int[@name='id'][.='23']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=0 mintf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='26']\",\n        \"//result/doc[2]/int[@name='id'][.='29']\",\n        \"//result/doc[3]/int[@name='id'][.='27']\",\n        \"//result/doc[4]/int[@name='id'][.='28']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=10 mintf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result[@numFound='0']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=3 mintf=1 mindf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result[@numFound='4']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=4 mintf=1 mindf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result[@numFound='1']\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void doTest() throws Exception {\n    String id = \"id\";\n    delQ(\"*:*\");\n    assertU(adoc(id, \"1\", \"lowerfilt\", \"toyota\"));\n    assertU(adoc(id, \"2\", \"lowerfilt\", \"chevrolet\"));\n    assertU(adoc(id, \"3\", \"lowerfilt\", \"suzuki\"));\n    assertU(adoc(id, \"4\", \"lowerfilt\", \"ford\"));\n    assertU(adoc(id, \"5\", \"lowerfilt\", \"ferrari\"));\n    assertU(adoc(id, \"6\", \"lowerfilt\", \"jaguar\"));\n    assertU(adoc(id, \"7\", \"lowerfilt\", \"mclaren moon or the moon and moon moon shine \" +\n        \"and the moon but moon was good foxes too\"));\n    assertU(adoc(id, \"8\", \"lowerfilt\", \"sonata\"));\n    assertU(adoc(id, \"9\", \"lowerfilt\", \"The quick red fox jumped over the lazy big \" +\n        \"and large brown dogs.\"));\n    assertU(adoc(id, \"10\", \"lowerfilt\", \"blue\"));\n    assertU(adoc(id, \"12\", \"lowerfilt\", \"glue\"));\n    assertU(adoc(id, \"13\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"14\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"15\", \"lowerfilt\", \"The fat red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"16\", \"lowerfilt\", \"The slim red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"17\", \"lowerfilt\", \"The quote red fox jumped moon over the lazy \" +\n        \"brown dogs moon. Of course moon. Foxes and moon come back to the foxes and moon\"));\n    assertU(adoc(id, \"18\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"19\", \"lowerfilt\", \"The hose red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"20\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"21\", \"lowerfilt\", \"The court red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"22\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"23\", \"lowerfilt\", \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"24\", \"lowerfilt\", \"The file red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"25\", \"lowerfilt\", \"rod fix\"));\n\n    assertU(commit());\n\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='13']\",\n        \"//result/doc[2]/int[@name='id'][.='14']\",\n        \"//result/doc[3]/int[@name='id'][.='15']\",\n        \"//result/doc[4]/int[@name='id'][.='16']\",\n        \"//result/doc[5]/int[@name='id'][.='18']\",\n        \"//result/doc[6]/int[@name='id'][.='19']\",\n        \"//result/doc[7]/int[@name='id'][.='20']\",\n        \"//result/doc[8]/int[@name='id'][.='21']\",\n        \"//result/doc[9]/int[@name='id'][.='22']\",\n        \"//result/doc[10]/int[@name='id'][.='23']\"\n        );\n  }\n\n","bugFix":["eb55f624eb53f26cfb7f9614b862fb7657633358"],"bugIntro":["2100a5b744ecaec4d2b191a7da9083feb50a6f7f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ed95a777f3860385e015fb8a082e4b66a5aa6bb8","date":1448307668,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/mlt/SimpleMLTQParserTest#doTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/mlt/SimpleMLTQParserTest#doTest().mjava","sourceNew":"  @Test\n  public void doTest() throws Exception {\n    String id = \"id\";\n    String FIELD1 = \"lowerfilt\" ;\n    String FIELD2 = \"lowerfilt1\" ;\n    delQ(\"*:*\");\n    assertU(adoc(id, \"1\", FIELD1, \"toyota\"));\n    assertU(adoc(id, \"2\", FIELD1, \"chevrolet\"));\n    assertU(adoc(id, \"3\", FIELD1, \"suzuki\"));\n    assertU(adoc(id, \"4\", FIELD1, \"ford\"));\n    assertU(adoc(id, \"5\", FIELD1, \"ferrari\"));\n    assertU(adoc(id, \"6\", FIELD1, \"jaguar\"));\n    assertU(adoc(id, \"7\", FIELD1, \"mclaren moon or the moon and moon moon shine \" +\n        \"and the moon but moon was good foxes too\"));\n    assertU(adoc(id, \"8\", FIELD1, \"sonata\"));\n    assertU(adoc(id, \"9\", FIELD1, \"The quick red fox jumped over the lazy big \" +\n        \"and large brown dogs.\"));\n    assertU(adoc(id, \"10\", FIELD1, \"blue\"));\n    assertU(adoc(id, \"12\", FIELD1, \"glue\"));\n    assertU(adoc(id, \"13\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"14\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"15\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"16\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"17\", FIELD1, \"The quote red fox jumped moon over the lazy \" +\n        \"brown dogs moon. Of course moon. Foxes and moon come back to the foxes and moon\"));\n    assertU(adoc(id, \"18\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"19\", FIELD1, \"The hose red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"20\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"21\", FIELD1, \"The court red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"22\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"23\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"24\", FIELD1, \"The file red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"25\", FIELD1, \"rod fix\"));\n    assertU(adoc(id, \"26\", FIELD1, \"bmw usa 328i\"));\n    assertU(adoc(id, \"27\", FIELD1, \"bmw usa 535i\"));\n    assertU(adoc(id, \"28\", FIELD1, \"bmw 750Li\"));\n    assertU(adoc(id, \"29\", FIELD1, \"bmw usa\",\n        FIELD2, \"red green blue\"));\n    assertU(adoc(id, \"30\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"red green yellow\"));\n    assertU(adoc(id, \"31\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"green blue yellow\"));\n    assertU(adoc(id, \"32\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"yellow white black\"));\n\n    assertU(commit());\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='13']\",\n        \"//result/doc[2]/int[@name='id'][.='14']\",\n        \"//result/doc[3]/int[@name='id'][.='15']\",\n        \"//result/doc[4]/int[@name='id'][.='16']\",\n        \"//result/doc[5]/int[@name='id'][.='18']\",\n        \"//result/doc[6]/int[@name='id'][.='19']\",\n        \"//result/doc[7]/int[@name='id'][.='20']\",\n        \"//result/doc[8]/int[@name='id'][.='21']\",\n        \"//result/doc[9]/int[@name='id'][.='22']\",\n        \"//result/doc[10]/int[@name='id'][.='23']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=0 mintf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='29']\",\n        \"//result/doc[2]/int[@name='id'][.='27']\",\n        \"//result/doc[3]/int[@name='id'][.='28']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=10 mintf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result[@numFound='0']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=3 mintf=1 mindf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result[@numFound='3']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=4 mintf=1 mindf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result[@numFound='0']\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void doTest() throws Exception {\n    String id = \"id\";\n    String FIELD1 = \"lowerfilt\" ;\n    String FIELD2 = \"lowerfilt1\" ;\n    delQ(\"*:*\");\n    assertU(adoc(id, \"1\", FIELD1, \"toyota\"));\n    assertU(adoc(id, \"2\", FIELD1, \"chevrolet\"));\n    assertU(adoc(id, \"3\", FIELD1, \"suzuki\"));\n    assertU(adoc(id, \"4\", FIELD1, \"ford\"));\n    assertU(adoc(id, \"5\", FIELD1, \"ferrari\"));\n    assertU(adoc(id, \"6\", FIELD1, \"jaguar\"));\n    assertU(adoc(id, \"7\", FIELD1, \"mclaren moon or the moon and moon moon shine \" +\n        \"and the moon but moon was good foxes too\"));\n    assertU(adoc(id, \"8\", FIELD1, \"sonata\"));\n    assertU(adoc(id, \"9\", FIELD1, \"The quick red fox jumped over the lazy big \" +\n        \"and large brown dogs.\"));\n    assertU(adoc(id, \"10\", FIELD1, \"blue\"));\n    assertU(adoc(id, \"12\", FIELD1, \"glue\"));\n    assertU(adoc(id, \"13\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"14\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"15\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"16\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"17\", FIELD1, \"The quote red fox jumped moon over the lazy \" +\n        \"brown dogs moon. Of course moon. Foxes and moon come back to the foxes and moon\"));\n    assertU(adoc(id, \"18\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"19\", FIELD1, \"The hose red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"20\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"21\", FIELD1, \"The court red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"22\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"23\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"24\", FIELD1, \"The file red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"25\", FIELD1, \"rod fix\"));\n    assertU(adoc(id, \"26\", FIELD1, \"bmw usa 328i\"));\n    assertU(adoc(id, \"27\", FIELD1, \"bmw usa 535i\"));\n    assertU(adoc(id, \"28\", FIELD1, \"bmw 750Li\"));\n    assertU(adoc(id, \"29\", FIELD1, \"bmw usa\",\n        FIELD2, \"red green blue\"));\n    assertU(adoc(id, \"30\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"red green yellow\"));\n    assertU(adoc(id, \"31\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"green blue yellow\"));\n    assertU(adoc(id, \"32\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"yellow white black\"));\n\n    assertU(commit());\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='13']\",\n        \"//result/doc[2]/int[@name='id'][.='14']\",\n        \"//result/doc[3]/int[@name='id'][.='15']\",\n        \"//result/doc[4]/int[@name='id'][.='16']\",\n        \"//result/doc[5]/int[@name='id'][.='18']\",\n        \"//result/doc[6]/int[@name='id'][.='19']\",\n        \"//result/doc[7]/int[@name='id'][.='20']\",\n        \"//result/doc[8]/int[@name='id'][.='21']\",\n        \"//result/doc[9]/int[@name='id'][.='22']\",\n        \"//result/doc[10]/int[@name='id'][.='23']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=0 mintf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='26']\",\n        \"//result/doc[2]/int[@name='id'][.='29']\",\n        \"//result/doc[3]/int[@name='id'][.='27']\",\n        \"//result/doc[4]/int[@name='id'][.='28']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=10 mintf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result[@numFound='0']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=3 mintf=1 mindf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result[@numFound='4']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=4 mintf=1 mindf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result[@numFound='1']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"19cb756f0ad73c8d898cb8bfdd9f04bcc6e3b7c1","date":1451604685,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/mlt/SimpleMLTQParserTest#doTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/mlt/SimpleMLTQParserTest#doTest().mjava","sourceNew":"  @Test\n  public void doTest() throws Exception {\n    String id = \"id\";\n    String FIELD1 = \"lowerfilt\" ;\n    String FIELD2 = \"lowerfilt1\" ;\n    delQ(\"*:*\");\n    assertU(adoc(id, \"1\", FIELD1, \"toyota\"));\n    assertU(adoc(id, \"2\", FIELD1, \"chevrolet\"));\n    assertU(adoc(id, \"3\", FIELD1, \"suzuki\"));\n    assertU(adoc(id, \"4\", FIELD1, \"ford\"));\n    assertU(adoc(id, \"5\", FIELD1, \"ferrari\"));\n    assertU(adoc(id, \"6\", FIELD1, \"jaguar\"));\n    assertU(adoc(id, \"7\", FIELD1, \"mclaren moon or the moon and moon moon shine \" +\n        \"and the moon but moon was good foxes too\"));\n    assertU(adoc(id, \"8\", FIELD1, \"sonata\"));\n    assertU(adoc(id, \"9\", FIELD1, \"The quick red fox jumped over the lazy big \" +\n        \"and large brown dogs.\"));\n    assertU(adoc(id, \"10\", FIELD1, \"blue\"));\n    assertU(adoc(id, \"12\", FIELD1, \"glue\"));\n    assertU(adoc(id, \"13\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"14\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"15\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"16\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"17\", FIELD1, \"The quote red fox jumped moon over the lazy \" +\n        \"brown dogs moon. Of course moon. Foxes and moon come back to the foxes and moon\"));\n    assertU(adoc(id, \"18\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"19\", FIELD1, \"The hose red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"20\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"21\", FIELD1, \"The court red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"22\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"23\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"24\", FIELD1, \"The file red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"25\", FIELD1, \"rod fix\"));\n    assertU(adoc(id, \"26\", FIELD1, \"bmw usa 328i\"));\n    assertU(adoc(id, \"27\", FIELD1, \"bmw usa 535i\"));\n    assertU(adoc(id, \"28\", FIELD1, \"bmw 750Li\"));\n    assertU(adoc(id, \"29\", FIELD1, \"bmw usa\",\n        FIELD2, \"red green blue\"));\n    assertU(adoc(id, \"30\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"red green yellow\"));\n    assertU(adoc(id, \"31\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"green blue yellow\"));\n    assertU(adoc(id, \"32\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"yellow white black\"));\n\n    assertU(commit());\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='13']\",\n        \"//result/doc[2]/int[@name='id'][.='14']\",\n        \"//result/doc[3]/int[@name='id'][.='15']\",\n        \"//result/doc[4]/int[@name='id'][.='16']\",\n        \"//result/doc[5]/int[@name='id'][.='18']\",\n        \"//result/doc[6]/int[@name='id'][.='19']\",\n        \"//result/doc[7]/int[@name='id'][.='20']\",\n        \"//result/doc[8]/int[@name='id'][.='21']\",\n        \"//result/doc[9]/int[@name='id'][.='22']\",\n        \"//result/doc[10]/int[@name='id'][.='23']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt boost=true}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='13']\",\n        \"//result/doc[2]/int[@name='id'][.='14']\",\n        \"//result/doc[3]/int[@name='id'][.='15']\",\n        \"//result/doc[4]/int[@name='id'][.='16']\",\n        \"//result/doc[5]/int[@name='id'][.='18']\",\n        \"//result/doc[6]/int[@name='id'][.='19']\",\n        \"//result/doc[7]/int[@name='id'][.='20']\",\n        \"//result/doc[8]/int[@name='id'][.='21']\",\n        \"//result/doc[9]/int[@name='id'][.='22']\",\n        \"//result/doc[10]/int[@name='id'][.='23']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=0 mintf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='29']\",\n        \"//result/doc[2]/int[@name='id'][.='27']\",\n        \"//result/doc[3]/int[@name='id'][.='28']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=10 mintf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result[@numFound='0']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=3 mintf=1 mindf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result[@numFound='3']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=4 mintf=1 mindf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result[@numFound='0']\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void doTest() throws Exception {\n    String id = \"id\";\n    String FIELD1 = \"lowerfilt\" ;\n    String FIELD2 = \"lowerfilt1\" ;\n    delQ(\"*:*\");\n    assertU(adoc(id, \"1\", FIELD1, \"toyota\"));\n    assertU(adoc(id, \"2\", FIELD1, \"chevrolet\"));\n    assertU(adoc(id, \"3\", FIELD1, \"suzuki\"));\n    assertU(adoc(id, \"4\", FIELD1, \"ford\"));\n    assertU(adoc(id, \"5\", FIELD1, \"ferrari\"));\n    assertU(adoc(id, \"6\", FIELD1, \"jaguar\"));\n    assertU(adoc(id, \"7\", FIELD1, \"mclaren moon or the moon and moon moon shine \" +\n        \"and the moon but moon was good foxes too\"));\n    assertU(adoc(id, \"8\", FIELD1, \"sonata\"));\n    assertU(adoc(id, \"9\", FIELD1, \"The quick red fox jumped over the lazy big \" +\n        \"and large brown dogs.\"));\n    assertU(adoc(id, \"10\", FIELD1, \"blue\"));\n    assertU(adoc(id, \"12\", FIELD1, \"glue\"));\n    assertU(adoc(id, \"13\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"14\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"15\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"16\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"17\", FIELD1, \"The quote red fox jumped moon over the lazy \" +\n        \"brown dogs moon. Of course moon. Foxes and moon come back to the foxes and moon\"));\n    assertU(adoc(id, \"18\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"19\", FIELD1, \"The hose red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"20\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"21\", FIELD1, \"The court red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"22\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"23\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"24\", FIELD1, \"The file red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"25\", FIELD1, \"rod fix\"));\n    assertU(adoc(id, \"26\", FIELD1, \"bmw usa 328i\"));\n    assertU(adoc(id, \"27\", FIELD1, \"bmw usa 535i\"));\n    assertU(adoc(id, \"28\", FIELD1, \"bmw 750Li\"));\n    assertU(adoc(id, \"29\", FIELD1, \"bmw usa\",\n        FIELD2, \"red green blue\"));\n    assertU(adoc(id, \"30\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"red green yellow\"));\n    assertU(adoc(id, \"31\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"green blue yellow\"));\n    assertU(adoc(id, \"32\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"yellow white black\"));\n\n    assertU(commit());\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='13']\",\n        \"//result/doc[2]/int[@name='id'][.='14']\",\n        \"//result/doc[3]/int[@name='id'][.='15']\",\n        \"//result/doc[4]/int[@name='id'][.='16']\",\n        \"//result/doc[5]/int[@name='id'][.='18']\",\n        \"//result/doc[6]/int[@name='id'][.='19']\",\n        \"//result/doc[7]/int[@name='id'][.='20']\",\n        \"//result/doc[8]/int[@name='id'][.='21']\",\n        \"//result/doc[9]/int[@name='id'][.='22']\",\n        \"//result/doc[10]/int[@name='id'][.='23']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=0 mintf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='29']\",\n        \"//result/doc[2]/int[@name='id'][.='27']\",\n        \"//result/doc[3]/int[@name='id'][.='28']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=10 mintf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result[@numFound='0']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=3 mintf=1 mindf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result[@numFound='3']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=4 mintf=1 mindf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result[@numFound='0']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2100a5b744ecaec4d2b191a7da9083feb50a6f7f","date":1483995984,"type":3,"author":"anshum","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/mlt/SimpleMLTQParserTest#doTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/mlt/SimpleMLTQParserTest#doTest().mjava","sourceNew":"  @Test\n  public void doTest() throws Exception {\n    String id = \"id\";\n    String FIELD1 = \"lowerfilt\" ;\n    String FIELD2 = \"lowerfilt1\" ;\n    delQ(\"*:*\");\n    assertU(adoc(id, \"1\", FIELD1, \"toyota\"));\n    assertU(adoc(id, \"2\", FIELD1, \"chevrolet\"));\n    assertU(adoc(id, \"3\", FIELD1, \"suzuki\"));\n    assertU(adoc(id, \"4\", FIELD1, \"ford\"));\n    assertU(adoc(id, \"5\", FIELD1, \"ferrari\"));\n    assertU(adoc(id, \"6\", FIELD1, \"jaguar\"));\n    assertU(adoc(id, \"7\", FIELD1, \"mclaren moon or the moon and moon moon shine \" +\n        \"and the moon but moon was good foxes too\"));\n    assertU(adoc(id, \"8\", FIELD1, \"sonata\"));\n    assertU(adoc(id, \"9\", FIELD1, \"The quick red fox jumped over the lazy big \" +\n        \"and large brown dogs.\"));\n    assertU(adoc(id, \"10\", FIELD1, \"blue\"));\n    assertU(adoc(id, \"12\", FIELD1, \"glue\"));\n    assertU(adoc(id, \"13\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"14\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"15\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"16\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"17\", FIELD1, \"The quote red fox jumped moon over the lazy \" +\n        \"brown dogs moon. Of course moon. Foxes and moon come back to the foxes and moon\"));\n    assertU(adoc(id, \"18\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"19\", FIELD1, \"The hose red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"20\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"21\", FIELD1, \"The court red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"22\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"23\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"24\", FIELD1, \"The file red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"25\", FIELD1, \"rod fix\"));\n    assertU(adoc(id, \"26\", FIELD1, \"bmw usa 328i\"));\n    assertU(adoc(id, \"27\", FIELD1, \"bmw usa 535i\"));\n    assertU(adoc(id, \"28\", FIELD1, \"bmw 750Li\"));\n    assertU(adoc(id, \"29\", FIELD1, \"bmw usa\",\n        FIELD2, \"red green blue\"));\n    assertU(adoc(id, \"30\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"red green yellow\"));\n    assertU(adoc(id, \"31\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"green blue yellow\"));\n    assertU(adoc(id, \"32\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"yellow white black\"));\n\n    assertU(commit());\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='13']\",\n        \"//result/doc[2]/int[@name='id'][.='14']\",\n        \"//result/doc[3]/int[@name='id'][.='15']\",\n        \"//result/doc[4]/int[@name='id'][.='16']\",\n        \"//result/doc[5]/int[@name='id'][.='18']\",\n        \"//result/doc[6]/int[@name='id'][.='19']\",\n        \"//result/doc[7]/int[@name='id'][.='20']\",\n        \"//result/doc[8]/int[@name='id'][.='21']\",\n        \"//result/doc[9]/int[@name='id'][.='22']\",\n        \"//result/doc[10]/int[@name='id'][.='23']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt boost=true}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='13']\",\n        \"//result/doc[2]/int[@name='id'][.='14']\",\n        \"//result/doc[3]/int[@name='id'][.='15']\",\n        \"//result/doc[4]/int[@name='id'][.='16']\",\n        \"//result/doc[5]/int[@name='id'][.='18']\",\n        \"//result/doc[6]/int[@name='id'][.='19']\",\n        \"//result/doc[7]/int[@name='id'][.='20']\",\n        \"//result/doc[8]/int[@name='id'][.='21']\",\n        \"//result/doc[9]/int[@name='id'][.='22']\",\n        \"//result/doc[10]/int[@name='id'][.='23']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt,lowerfilt1^1000 boost=false mintf=0 mindf=0}30\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='31']\",\n        \"//result/doc[2]/int[@name='id'][.='13']\",\n        \"//result/doc[3]/int[@name='id'][.='14']\",\n        \"//result/doc[4]/int[@name='id'][.='18']\",\n        \"//result/doc[5]/int[@name='id'][.='20']\",\n        \"//result/doc[6]/int[@name='id'][.='22']\",\n        \"//result/doc[7]/int[@name='id'][.='23']\",\n        \"//result/doc[8]/int[@name='id'][.='32']\",\n        \"//result/doc[9]/int[@name='id'][.='15']\",\n        \"//result/doc[10]/int[@name='id'][.='16']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt,lowerfilt1^1000 boost=true mintf=0 mindf=0}30\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='29']\",\n        \"//result/doc[2]/int[@name='id'][.='31']\",\n        \"//result/doc[3]/int[@name='id'][.='32']\",\n        \"//result/doc[4]/int[@name='id'][.='13']\",\n        \"//result/doc[5]/int[@name='id'][.='14']\",\n        \"//result/doc[6]/int[@name='id'][.='18']\",\n        \"//result/doc[7]/int[@name='id'][.='20']\",\n        \"//result/doc[8]/int[@name='id'][.='22']\",\n        \"//result/doc[9]/int[@name='id'][.='23']\",\n        \"//result/doc[10]/int[@name='id'][.='15']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=0 mintf=1}26\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='29']\",\n        \"//result/doc[2]/int[@name='id'][.='27']\",\n        \"//result/doc[3]/int[@name='id'][.='28']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=10 mintf=1}26\");\n    assertQ(req(params),\n        \"//result[@numFound='0']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=3 mintf=1 mindf=1}26\");\n    assertQ(req(params),\n        \"//result[@numFound='3']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=4 mintf=1 mindf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result[@numFound='0']\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void doTest() throws Exception {\n    String id = \"id\";\n    String FIELD1 = \"lowerfilt\" ;\n    String FIELD2 = \"lowerfilt1\" ;\n    delQ(\"*:*\");\n    assertU(adoc(id, \"1\", FIELD1, \"toyota\"));\n    assertU(adoc(id, \"2\", FIELD1, \"chevrolet\"));\n    assertU(adoc(id, \"3\", FIELD1, \"suzuki\"));\n    assertU(adoc(id, \"4\", FIELD1, \"ford\"));\n    assertU(adoc(id, \"5\", FIELD1, \"ferrari\"));\n    assertU(adoc(id, \"6\", FIELD1, \"jaguar\"));\n    assertU(adoc(id, \"7\", FIELD1, \"mclaren moon or the moon and moon moon shine \" +\n        \"and the moon but moon was good foxes too\"));\n    assertU(adoc(id, \"8\", FIELD1, \"sonata\"));\n    assertU(adoc(id, \"9\", FIELD1, \"The quick red fox jumped over the lazy big \" +\n        \"and large brown dogs.\"));\n    assertU(adoc(id, \"10\", FIELD1, \"blue\"));\n    assertU(adoc(id, \"12\", FIELD1, \"glue\"));\n    assertU(adoc(id, \"13\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"14\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"15\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"16\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"17\", FIELD1, \"The quote red fox jumped moon over the lazy \" +\n        \"brown dogs moon. Of course moon. Foxes and moon come back to the foxes and moon\"));\n    assertU(adoc(id, \"18\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"19\", FIELD1, \"The hose red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"20\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"21\", FIELD1, \"The court red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"22\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"23\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"24\", FIELD1, \"The file red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"25\", FIELD1, \"rod fix\"));\n    assertU(adoc(id, \"26\", FIELD1, \"bmw usa 328i\"));\n    assertU(adoc(id, \"27\", FIELD1, \"bmw usa 535i\"));\n    assertU(adoc(id, \"28\", FIELD1, \"bmw 750Li\"));\n    assertU(adoc(id, \"29\", FIELD1, \"bmw usa\",\n        FIELD2, \"red green blue\"));\n    assertU(adoc(id, \"30\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"red green yellow\"));\n    assertU(adoc(id, \"31\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"green blue yellow\"));\n    assertU(adoc(id, \"32\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"yellow white black\"));\n\n    assertU(commit());\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='13']\",\n        \"//result/doc[2]/int[@name='id'][.='14']\",\n        \"//result/doc[3]/int[@name='id'][.='15']\",\n        \"//result/doc[4]/int[@name='id'][.='16']\",\n        \"//result/doc[5]/int[@name='id'][.='18']\",\n        \"//result/doc[6]/int[@name='id'][.='19']\",\n        \"//result/doc[7]/int[@name='id'][.='20']\",\n        \"//result/doc[8]/int[@name='id'][.='21']\",\n        \"//result/doc[9]/int[@name='id'][.='22']\",\n        \"//result/doc[10]/int[@name='id'][.='23']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt boost=true}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='13']\",\n        \"//result/doc[2]/int[@name='id'][.='14']\",\n        \"//result/doc[3]/int[@name='id'][.='15']\",\n        \"//result/doc[4]/int[@name='id'][.='16']\",\n        \"//result/doc[5]/int[@name='id'][.='18']\",\n        \"//result/doc[6]/int[@name='id'][.='19']\",\n        \"//result/doc[7]/int[@name='id'][.='20']\",\n        \"//result/doc[8]/int[@name='id'][.='21']\",\n        \"//result/doc[9]/int[@name='id'][.='22']\",\n        \"//result/doc[10]/int[@name='id'][.='23']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=0 mintf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='29']\",\n        \"//result/doc[2]/int[@name='id'][.='27']\",\n        \"//result/doc[3]/int[@name='id'][.='28']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=10 mintf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result[@numFound='0']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=3 mintf=1 mindf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result[@numFound='3']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=4 mintf=1 mindf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result[@numFound='0']\"\n    );\n  }\n\n","bugFix":["655260340014c640e7d0f9a7a7ea1f00f36f65e5"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/mlt/SimpleMLTQParserTest#doTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/mlt/SimpleMLTQParserTest#doTest().mjava","sourceNew":"  @Test\n  public void doTest() throws Exception {\n    String id = \"id\";\n    String FIELD1 = \"lowerfilt\" ;\n    String FIELD2 = \"lowerfilt1\" ;\n    delQ(\"*:*\");\n    assertU(adoc(id, \"1\", FIELD1, \"toyota\"));\n    assertU(adoc(id, \"2\", FIELD1, \"chevrolet\"));\n    assertU(adoc(id, \"3\", FIELD1, \"suzuki\"));\n    assertU(adoc(id, \"4\", FIELD1, \"ford\"));\n    assertU(adoc(id, \"5\", FIELD1, \"ferrari\"));\n    assertU(adoc(id, \"6\", FIELD1, \"jaguar\"));\n    assertU(adoc(id, \"7\", FIELD1, \"mclaren moon or the moon and moon moon shine \" +\n        \"and the moon but moon was good foxes too\"));\n    assertU(adoc(id, \"8\", FIELD1, \"sonata\"));\n    assertU(adoc(id, \"9\", FIELD1, \"The quick red fox jumped over the lazy big \" +\n        \"and large brown dogs.\"));\n    assertU(adoc(id, \"10\", FIELD1, \"blue\"));\n    assertU(adoc(id, \"12\", FIELD1, \"glue\"));\n    assertU(adoc(id, \"13\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"14\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"15\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"16\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"17\", FIELD1, \"The quote red fox jumped moon over the lazy \" +\n        \"brown dogs moon. Of course moon. Foxes and moon come back to the foxes and moon\"));\n    assertU(adoc(id, \"18\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"19\", FIELD1, \"The hose red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"20\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"21\", FIELD1, \"The court red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"22\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"23\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"24\", FIELD1, \"The file red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"25\", FIELD1, \"rod fix\"));\n    assertU(adoc(id, \"26\", FIELD1, \"bmw usa 328i\"));\n    assertU(adoc(id, \"27\", FIELD1, \"bmw usa 535i\"));\n    assertU(adoc(id, \"28\", FIELD1, \"bmw 750Li\"));\n    assertU(adoc(id, \"29\", FIELD1, \"bmw usa\",\n        FIELD2, \"red green blue\"));\n    assertU(adoc(id, \"30\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"red green yellow\"));\n    assertU(adoc(id, \"31\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"green blue yellow\"));\n    assertU(adoc(id, \"32\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"yellow white black\"));\n\n    assertU(commit());\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='13']\",\n        \"//result/doc[2]/int[@name='id'][.='14']\",\n        \"//result/doc[3]/int[@name='id'][.='15']\",\n        \"//result/doc[4]/int[@name='id'][.='16']\",\n        \"//result/doc[5]/int[@name='id'][.='18']\",\n        \"//result/doc[6]/int[@name='id'][.='19']\",\n        \"//result/doc[7]/int[@name='id'][.='20']\",\n        \"//result/doc[8]/int[@name='id'][.='21']\",\n        \"//result/doc[9]/int[@name='id'][.='22']\",\n        \"//result/doc[10]/int[@name='id'][.='23']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt boost=true}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='13']\",\n        \"//result/doc[2]/int[@name='id'][.='14']\",\n        \"//result/doc[3]/int[@name='id'][.='15']\",\n        \"//result/doc[4]/int[@name='id'][.='16']\",\n        \"//result/doc[5]/int[@name='id'][.='18']\",\n        \"//result/doc[6]/int[@name='id'][.='19']\",\n        \"//result/doc[7]/int[@name='id'][.='20']\",\n        \"//result/doc[8]/int[@name='id'][.='21']\",\n        \"//result/doc[9]/int[@name='id'][.='22']\",\n        \"//result/doc[10]/int[@name='id'][.='23']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt,lowerfilt1^1000 boost=false mintf=0 mindf=0}30\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='31']\",\n        \"//result/doc[2]/int[@name='id'][.='13']\",\n        \"//result/doc[3]/int[@name='id'][.='14']\",\n        \"//result/doc[4]/int[@name='id'][.='18']\",\n        \"//result/doc[5]/int[@name='id'][.='20']\",\n        \"//result/doc[6]/int[@name='id'][.='22']\",\n        \"//result/doc[7]/int[@name='id'][.='23']\",\n        \"//result/doc[8]/int[@name='id'][.='32']\",\n        \"//result/doc[9]/int[@name='id'][.='15']\",\n        \"//result/doc[10]/int[@name='id'][.='16']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt,lowerfilt1^1000 boost=true mintf=0 mindf=0}30\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='29']\",\n        \"//result/doc[2]/int[@name='id'][.='31']\",\n        \"//result/doc[3]/int[@name='id'][.='32']\",\n        \"//result/doc[4]/int[@name='id'][.='13']\",\n        \"//result/doc[5]/int[@name='id'][.='14']\",\n        \"//result/doc[6]/int[@name='id'][.='18']\",\n        \"//result/doc[7]/int[@name='id'][.='20']\",\n        \"//result/doc[8]/int[@name='id'][.='22']\",\n        \"//result/doc[9]/int[@name='id'][.='23']\",\n        \"//result/doc[10]/int[@name='id'][.='15']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=0 mintf=1}26\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='29']\",\n        \"//result/doc[2]/int[@name='id'][.='27']\",\n        \"//result/doc[3]/int[@name='id'][.='28']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=10 mintf=1}26\");\n    assertQ(req(params),\n        \"//result[@numFound='0']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=3 mintf=1 mindf=1}26\");\n    assertQ(req(params),\n        \"//result[@numFound='3']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=4 mintf=1 mindf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result[@numFound='0']\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void doTest() throws Exception {\n    String id = \"id\";\n    String FIELD1 = \"lowerfilt\" ;\n    String FIELD2 = \"lowerfilt1\" ;\n    delQ(\"*:*\");\n    assertU(adoc(id, \"1\", FIELD1, \"toyota\"));\n    assertU(adoc(id, \"2\", FIELD1, \"chevrolet\"));\n    assertU(adoc(id, \"3\", FIELD1, \"suzuki\"));\n    assertU(adoc(id, \"4\", FIELD1, \"ford\"));\n    assertU(adoc(id, \"5\", FIELD1, \"ferrari\"));\n    assertU(adoc(id, \"6\", FIELD1, \"jaguar\"));\n    assertU(adoc(id, \"7\", FIELD1, \"mclaren moon or the moon and moon moon shine \" +\n        \"and the moon but moon was good foxes too\"));\n    assertU(adoc(id, \"8\", FIELD1, \"sonata\"));\n    assertU(adoc(id, \"9\", FIELD1, \"The quick red fox jumped over the lazy big \" +\n        \"and large brown dogs.\"));\n    assertU(adoc(id, \"10\", FIELD1, \"blue\"));\n    assertU(adoc(id, \"12\", FIELD1, \"glue\"));\n    assertU(adoc(id, \"13\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"14\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"15\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"16\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"17\", FIELD1, \"The quote red fox jumped moon over the lazy \" +\n        \"brown dogs moon. Of course moon. Foxes and moon come back to the foxes and moon\"));\n    assertU(adoc(id, \"18\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"19\", FIELD1, \"The hose red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"20\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"21\", FIELD1, \"The court red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"22\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"23\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"24\", FIELD1, \"The file red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"25\", FIELD1, \"rod fix\"));\n    assertU(adoc(id, \"26\", FIELD1, \"bmw usa 328i\"));\n    assertU(adoc(id, \"27\", FIELD1, \"bmw usa 535i\"));\n    assertU(adoc(id, \"28\", FIELD1, \"bmw 750Li\"));\n    assertU(adoc(id, \"29\", FIELD1, \"bmw usa\",\n        FIELD2, \"red green blue\"));\n    assertU(adoc(id, \"30\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"red green yellow\"));\n    assertU(adoc(id, \"31\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"green blue yellow\"));\n    assertU(adoc(id, \"32\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"yellow white black\"));\n\n    assertU(commit());\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='13']\",\n        \"//result/doc[2]/int[@name='id'][.='14']\",\n        \"//result/doc[3]/int[@name='id'][.='15']\",\n        \"//result/doc[4]/int[@name='id'][.='16']\",\n        \"//result/doc[5]/int[@name='id'][.='18']\",\n        \"//result/doc[6]/int[@name='id'][.='19']\",\n        \"//result/doc[7]/int[@name='id'][.='20']\",\n        \"//result/doc[8]/int[@name='id'][.='21']\",\n        \"//result/doc[9]/int[@name='id'][.='22']\",\n        \"//result/doc[10]/int[@name='id'][.='23']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt boost=true}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='13']\",\n        \"//result/doc[2]/int[@name='id'][.='14']\",\n        \"//result/doc[3]/int[@name='id'][.='15']\",\n        \"//result/doc[4]/int[@name='id'][.='16']\",\n        \"//result/doc[5]/int[@name='id'][.='18']\",\n        \"//result/doc[6]/int[@name='id'][.='19']\",\n        \"//result/doc[7]/int[@name='id'][.='20']\",\n        \"//result/doc[8]/int[@name='id'][.='21']\",\n        \"//result/doc[9]/int[@name='id'][.='22']\",\n        \"//result/doc[10]/int[@name='id'][.='23']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=0 mintf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='29']\",\n        \"//result/doc[2]/int[@name='id'][.='27']\",\n        \"//result/doc[3]/int[@name='id'][.='28']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=10 mintf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result[@numFound='0']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=3 mintf=1 mindf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result[@numFound='3']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=4 mintf=1 mindf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result[@numFound='0']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a71f63026529f3c1f03cfdd664910873ab2369ae","date":1497543264,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/mlt/SimpleMLTQParserTest#doTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/mlt/SimpleMLTQParserTest#doTest().mjava","sourceNew":"  @Test\n  public void doTest() throws Exception {\n    String id = \"id\";\n    String FIELD1 = \"lowerfilt\" ;\n    String FIELD2 = \"lowerfilt1\" ;\n    delQ(\"*:*\");\n    assertU(adoc(id, \"1\", FIELD1, \"toyota\"));\n    assertU(adoc(id, \"2\", FIELD1, \"chevrolet\"));\n    assertU(adoc(id, \"3\", FIELD1, \"suzuki\"));\n    assertU(adoc(id, \"4\", FIELD1, \"ford\"));\n    assertU(adoc(id, \"5\", FIELD1, \"ferrari\"));\n    assertU(adoc(id, \"6\", FIELD1, \"jaguar\"));\n    assertU(adoc(id, \"7\", FIELD1, \"mclaren moon or the moon and moon moon shine \" +\n        \"and the moon but moon was good foxes too\"));\n    assertU(adoc(id, \"8\", FIELD1, \"sonata\"));\n    assertU(adoc(id, \"9\", FIELD1, \"The quick red fox jumped over the lazy big \" +\n        \"and large brown dogs.\"));\n    assertU(adoc(id, \"10\", FIELD1, \"blue\"));\n    assertU(adoc(id, \"12\", FIELD1, \"glue\"));\n    assertU(adoc(id, \"13\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"14\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"15\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"16\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"17\", FIELD1, \"The quote red fox jumped moon over the lazy \" +\n        \"brown dogs moon. Of course moon. Foxes and moon come back to the foxes and moon\"));\n    assertU(adoc(id, \"18\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"19\", FIELD1, \"The hose red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"20\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"21\", FIELD1, \"The court red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"22\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"23\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"24\", FIELD1, \"The file red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"25\", FIELD1, \"rod fix\"));\n    assertU(adoc(id, \"26\", FIELD1, \"bmw usa 328i\"));\n    assertU(adoc(id, \"27\", FIELD1, \"bmw usa 535i\"));\n    assertU(adoc(id, \"28\", FIELD1, \"bmw 750Li\"));\n    assertU(adoc(id, \"29\", FIELD1, \"bmw usa\",\n        FIELD2, \"red green blue\"));\n    assertU(adoc(id, \"30\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"red green yellow\"));\n    assertU(adoc(id, \"31\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"green blue yellow\"));\n    assertU(adoc(id, \"32\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"yellow white black\"));\n\n    assertU(commit());\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/str[@name='id'][.='13']\",\n        \"//result/doc[2]/str[@name='id'][.='14']\",\n        \"//result/doc[3]/str[@name='id'][.='15']\",\n        \"//result/doc[4]/str[@name='id'][.='16']\",\n        \"//result/doc[5]/str[@name='id'][.='18']\",\n        \"//result/doc[6]/str[@name='id'][.='19']\",\n        \"//result/doc[7]/str[@name='id'][.='20']\",\n        \"//result/doc[8]/str[@name='id'][.='21']\",\n        \"//result/doc[9]/str[@name='id'][.='22']\",\n        \"//result/doc[10]/str[@name='id'][.='23']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt boost=true}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/str[@name='id'][.='13']\",\n        \"//result/doc[2]/str[@name='id'][.='14']\",\n        \"//result/doc[3]/str[@name='id'][.='15']\",\n        \"//result/doc[4]/str[@name='id'][.='16']\",\n        \"//result/doc[5]/str[@name='id'][.='18']\",\n        \"//result/doc[6]/str[@name='id'][.='19']\",\n        \"//result/doc[7]/str[@name='id'][.='20']\",\n        \"//result/doc[8]/str[@name='id'][.='21']\",\n        \"//result/doc[9]/str[@name='id'][.='22']\",\n        \"//result/doc[10]/str[@name='id'][.='23']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt,lowerfilt1^1000 boost=false mintf=0 mindf=0}30\");\n    assertQ(req(params),\n        \"//result/doc[1]/str[@name='id'][.='31']\",\n        \"//result/doc[2]/str[@name='id'][.='13']\",\n        \"//result/doc[3]/str[@name='id'][.='14']\",\n        \"//result/doc[4]/str[@name='id'][.='18']\",\n        \"//result/doc[5]/str[@name='id'][.='20']\",\n        \"//result/doc[6]/str[@name='id'][.='22']\",\n        \"//result/doc[7]/str[@name='id'][.='23']\",\n        \"//result/doc[8]/str[@name='id'][.='32']\",\n        \"//result/doc[9]/str[@name='id'][.='15']\",\n        \"//result/doc[10]/str[@name='id'][.='16']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt,lowerfilt1^1000 boost=true mintf=0 mindf=0}30\");\n    assertQ(req(params),\n        \"//result/doc[1]/str[@name='id'][.='29']\",\n        \"//result/doc[2]/str[@name='id'][.='31']\",\n        \"//result/doc[3]/str[@name='id'][.='32']\",\n        \"//result/doc[4]/str[@name='id'][.='13']\",\n        \"//result/doc[5]/str[@name='id'][.='14']\",\n        \"//result/doc[6]/str[@name='id'][.='18']\",\n        \"//result/doc[7]/str[@name='id'][.='20']\",\n        \"//result/doc[8]/str[@name='id'][.='22']\",\n        \"//result/doc[9]/str[@name='id'][.='23']\",\n        \"//result/doc[10]/str[@name='id'][.='15']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=0 mintf=1}26\");\n    assertQ(req(params),\n        \"//result/doc[1]/str[@name='id'][.='29']\",\n        \"//result/doc[2]/str[@name='id'][.='27']\",\n        \"//result/doc[3]/str[@name='id'][.='28']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=10 mintf=1}26\");\n    assertQ(req(params),\n        \"//result[@numFound='0']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=3 mintf=1 mindf=1}26\");\n    assertQ(req(params),\n        \"//result[@numFound='3']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=4 mintf=1 mindf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result[@numFound='0']\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void doTest() throws Exception {\n    String id = \"id\";\n    String FIELD1 = \"lowerfilt\" ;\n    String FIELD2 = \"lowerfilt1\" ;\n    delQ(\"*:*\");\n    assertU(adoc(id, \"1\", FIELD1, \"toyota\"));\n    assertU(adoc(id, \"2\", FIELD1, \"chevrolet\"));\n    assertU(adoc(id, \"3\", FIELD1, \"suzuki\"));\n    assertU(adoc(id, \"4\", FIELD1, \"ford\"));\n    assertU(adoc(id, \"5\", FIELD1, \"ferrari\"));\n    assertU(adoc(id, \"6\", FIELD1, \"jaguar\"));\n    assertU(adoc(id, \"7\", FIELD1, \"mclaren moon or the moon and moon moon shine \" +\n        \"and the moon but moon was good foxes too\"));\n    assertU(adoc(id, \"8\", FIELD1, \"sonata\"));\n    assertU(adoc(id, \"9\", FIELD1, \"The quick red fox jumped over the lazy big \" +\n        \"and large brown dogs.\"));\n    assertU(adoc(id, \"10\", FIELD1, \"blue\"));\n    assertU(adoc(id, \"12\", FIELD1, \"glue\"));\n    assertU(adoc(id, \"13\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"14\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"15\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"16\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"17\", FIELD1, \"The quote red fox jumped moon over the lazy \" +\n        \"brown dogs moon. Of course moon. Foxes and moon come back to the foxes and moon\"));\n    assertU(adoc(id, \"18\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"19\", FIELD1, \"The hose red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"20\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"21\", FIELD1, \"The court red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"22\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"23\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"24\", FIELD1, \"The file red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"25\", FIELD1, \"rod fix\"));\n    assertU(adoc(id, \"26\", FIELD1, \"bmw usa 328i\"));\n    assertU(adoc(id, \"27\", FIELD1, \"bmw usa 535i\"));\n    assertU(adoc(id, \"28\", FIELD1, \"bmw 750Li\"));\n    assertU(adoc(id, \"29\", FIELD1, \"bmw usa\",\n        FIELD2, \"red green blue\"));\n    assertU(adoc(id, \"30\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"red green yellow\"));\n    assertU(adoc(id, \"31\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"green blue yellow\"));\n    assertU(adoc(id, \"32\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"yellow white black\"));\n\n    assertU(commit());\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='13']\",\n        \"//result/doc[2]/int[@name='id'][.='14']\",\n        \"//result/doc[3]/int[@name='id'][.='15']\",\n        \"//result/doc[4]/int[@name='id'][.='16']\",\n        \"//result/doc[5]/int[@name='id'][.='18']\",\n        \"//result/doc[6]/int[@name='id'][.='19']\",\n        \"//result/doc[7]/int[@name='id'][.='20']\",\n        \"//result/doc[8]/int[@name='id'][.='21']\",\n        \"//result/doc[9]/int[@name='id'][.='22']\",\n        \"//result/doc[10]/int[@name='id'][.='23']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt boost=true}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='13']\",\n        \"//result/doc[2]/int[@name='id'][.='14']\",\n        \"//result/doc[3]/int[@name='id'][.='15']\",\n        \"//result/doc[4]/int[@name='id'][.='16']\",\n        \"//result/doc[5]/int[@name='id'][.='18']\",\n        \"//result/doc[6]/int[@name='id'][.='19']\",\n        \"//result/doc[7]/int[@name='id'][.='20']\",\n        \"//result/doc[8]/int[@name='id'][.='21']\",\n        \"//result/doc[9]/int[@name='id'][.='22']\",\n        \"//result/doc[10]/int[@name='id'][.='23']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt,lowerfilt1^1000 boost=false mintf=0 mindf=0}30\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='31']\",\n        \"//result/doc[2]/int[@name='id'][.='13']\",\n        \"//result/doc[3]/int[@name='id'][.='14']\",\n        \"//result/doc[4]/int[@name='id'][.='18']\",\n        \"//result/doc[5]/int[@name='id'][.='20']\",\n        \"//result/doc[6]/int[@name='id'][.='22']\",\n        \"//result/doc[7]/int[@name='id'][.='23']\",\n        \"//result/doc[8]/int[@name='id'][.='32']\",\n        \"//result/doc[9]/int[@name='id'][.='15']\",\n        \"//result/doc[10]/int[@name='id'][.='16']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt,lowerfilt1^1000 boost=true mintf=0 mindf=0}30\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='29']\",\n        \"//result/doc[2]/int[@name='id'][.='31']\",\n        \"//result/doc[3]/int[@name='id'][.='32']\",\n        \"//result/doc[4]/int[@name='id'][.='13']\",\n        \"//result/doc[5]/int[@name='id'][.='14']\",\n        \"//result/doc[6]/int[@name='id'][.='18']\",\n        \"//result/doc[7]/int[@name='id'][.='20']\",\n        \"//result/doc[8]/int[@name='id'][.='22']\",\n        \"//result/doc[9]/int[@name='id'][.='23']\",\n        \"//result/doc[10]/int[@name='id'][.='15']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=0 mintf=1}26\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='29']\",\n        \"//result/doc[2]/int[@name='id'][.='27']\",\n        \"//result/doc[3]/int[@name='id'][.='28']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=10 mintf=1}26\");\n    assertQ(req(params),\n        \"//result[@numFound='0']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=3 mintf=1 mindf=1}26\");\n    assertQ(req(params),\n        \"//result[@numFound='3']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=4 mintf=1 mindf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result[@numFound='0']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/mlt/SimpleMLTQParserTest#doTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/mlt/SimpleMLTQParserTest#doTest().mjava","sourceNew":"  @Test\n  public void doTest() throws Exception {\n    String id = \"id\";\n    String FIELD1 = \"lowerfilt\" ;\n    String FIELD2 = \"lowerfilt1\" ;\n    delQ(\"*:*\");\n    assertU(adoc(id, \"1\", FIELD1, \"toyota\"));\n    assertU(adoc(id, \"2\", FIELD1, \"chevrolet\"));\n    assertU(adoc(id, \"3\", FIELD1, \"suzuki\"));\n    assertU(adoc(id, \"4\", FIELD1, \"ford\"));\n    assertU(adoc(id, \"5\", FIELD1, \"ferrari\"));\n    assertU(adoc(id, \"6\", FIELD1, \"jaguar\"));\n    assertU(adoc(id, \"7\", FIELD1, \"mclaren moon or the moon and moon moon shine \" +\n        \"and the moon but moon was good foxes too\"));\n    assertU(adoc(id, \"8\", FIELD1, \"sonata\"));\n    assertU(adoc(id, \"9\", FIELD1, \"The quick red fox jumped over the lazy big \" +\n        \"and large brown dogs.\"));\n    assertU(adoc(id, \"10\", FIELD1, \"blue\"));\n    assertU(adoc(id, \"12\", FIELD1, \"glue\"));\n    assertU(adoc(id, \"13\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"14\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"15\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"16\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"17\", FIELD1, \"The quote red fox jumped moon over the lazy \" +\n        \"brown dogs moon. Of course moon. Foxes and moon come back to the foxes and moon\"));\n    assertU(adoc(id, \"18\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"19\", FIELD1, \"The hose red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"20\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"21\", FIELD1, \"The court red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"22\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"23\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"24\", FIELD1, \"The file red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"25\", FIELD1, \"rod fix\"));\n    assertU(adoc(id, \"26\", FIELD1, \"bmw usa 328i\"));\n    assertU(adoc(id, \"27\", FIELD1, \"bmw usa 535i\"));\n    assertU(adoc(id, \"28\", FIELD1, \"bmw 750Li\"));\n    assertU(adoc(id, \"29\", FIELD1, \"bmw usa\",\n        FIELD2, \"red green blue\"));\n    assertU(adoc(id, \"30\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"red green yellow\"));\n    assertU(adoc(id, \"31\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"green blue yellow\"));\n    assertU(adoc(id, \"32\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"yellow white black\"));\n\n    assertU(commit());\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/str[@name='id'][.='13']\",\n        \"//result/doc[2]/str[@name='id'][.='14']\",\n        \"//result/doc[3]/str[@name='id'][.='15']\",\n        \"//result/doc[4]/str[@name='id'][.='16']\",\n        \"//result/doc[5]/str[@name='id'][.='18']\",\n        \"//result/doc[6]/str[@name='id'][.='19']\",\n        \"//result/doc[7]/str[@name='id'][.='20']\",\n        \"//result/doc[8]/str[@name='id'][.='21']\",\n        \"//result/doc[9]/str[@name='id'][.='22']\",\n        \"//result/doc[10]/str[@name='id'][.='23']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt boost=true}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/str[@name='id'][.='13']\",\n        \"//result/doc[2]/str[@name='id'][.='14']\",\n        \"//result/doc[3]/str[@name='id'][.='15']\",\n        \"//result/doc[4]/str[@name='id'][.='16']\",\n        \"//result/doc[5]/str[@name='id'][.='18']\",\n        \"//result/doc[6]/str[@name='id'][.='19']\",\n        \"//result/doc[7]/str[@name='id'][.='20']\",\n        \"//result/doc[8]/str[@name='id'][.='21']\",\n        \"//result/doc[9]/str[@name='id'][.='22']\",\n        \"//result/doc[10]/str[@name='id'][.='23']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt,lowerfilt1^1000 boost=false mintf=0 mindf=0}30\");\n    assertQ(req(params),\n        \"//result/doc[1]/str[@name='id'][.='31']\",\n        \"//result/doc[2]/str[@name='id'][.='13']\",\n        \"//result/doc[3]/str[@name='id'][.='14']\",\n        \"//result/doc[4]/str[@name='id'][.='18']\",\n        \"//result/doc[5]/str[@name='id'][.='20']\",\n        \"//result/doc[6]/str[@name='id'][.='22']\",\n        \"//result/doc[7]/str[@name='id'][.='23']\",\n        \"//result/doc[8]/str[@name='id'][.='32']\",\n        \"//result/doc[9]/str[@name='id'][.='15']\",\n        \"//result/doc[10]/str[@name='id'][.='16']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt,lowerfilt1^1000 boost=true mintf=0 mindf=0}30\");\n    assertQ(req(params),\n        \"//result/doc[1]/str[@name='id'][.='29']\",\n        \"//result/doc[2]/str[@name='id'][.='31']\",\n        \"//result/doc[3]/str[@name='id'][.='32']\",\n        \"//result/doc[4]/str[@name='id'][.='13']\",\n        \"//result/doc[5]/str[@name='id'][.='14']\",\n        \"//result/doc[6]/str[@name='id'][.='18']\",\n        \"//result/doc[7]/str[@name='id'][.='20']\",\n        \"//result/doc[8]/str[@name='id'][.='22']\",\n        \"//result/doc[9]/str[@name='id'][.='23']\",\n        \"//result/doc[10]/str[@name='id'][.='15']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=0 mintf=1}26\");\n    assertQ(req(params),\n        \"//result/doc[1]/str[@name='id'][.='29']\",\n        \"//result/doc[2]/str[@name='id'][.='27']\",\n        \"//result/doc[3]/str[@name='id'][.='28']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=10 mintf=1}26\");\n    assertQ(req(params),\n        \"//result[@numFound='0']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=3 mintf=1 mindf=1}26\");\n    assertQ(req(params),\n        \"//result[@numFound='3']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=4 mintf=1 mindf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result[@numFound='0']\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void doTest() throws Exception {\n    String id = \"id\";\n    String FIELD1 = \"lowerfilt\" ;\n    String FIELD2 = \"lowerfilt1\" ;\n    delQ(\"*:*\");\n    assertU(adoc(id, \"1\", FIELD1, \"toyota\"));\n    assertU(adoc(id, \"2\", FIELD1, \"chevrolet\"));\n    assertU(adoc(id, \"3\", FIELD1, \"suzuki\"));\n    assertU(adoc(id, \"4\", FIELD1, \"ford\"));\n    assertU(adoc(id, \"5\", FIELD1, \"ferrari\"));\n    assertU(adoc(id, \"6\", FIELD1, \"jaguar\"));\n    assertU(adoc(id, \"7\", FIELD1, \"mclaren moon or the moon and moon moon shine \" +\n        \"and the moon but moon was good foxes too\"));\n    assertU(adoc(id, \"8\", FIELD1, \"sonata\"));\n    assertU(adoc(id, \"9\", FIELD1, \"The quick red fox jumped over the lazy big \" +\n        \"and large brown dogs.\"));\n    assertU(adoc(id, \"10\", FIELD1, \"blue\"));\n    assertU(adoc(id, \"12\", FIELD1, \"glue\"));\n    assertU(adoc(id, \"13\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"14\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"15\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"16\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"17\", FIELD1, \"The quote red fox jumped moon over the lazy \" +\n        \"brown dogs moon. Of course moon. Foxes and moon come back to the foxes and moon\"));\n    assertU(adoc(id, \"18\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"19\", FIELD1, \"The hose red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"20\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"21\", FIELD1, \"The court red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"22\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"23\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"24\", FIELD1, \"The file red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"25\", FIELD1, \"rod fix\"));\n    assertU(adoc(id, \"26\", FIELD1, \"bmw usa 328i\"));\n    assertU(adoc(id, \"27\", FIELD1, \"bmw usa 535i\"));\n    assertU(adoc(id, \"28\", FIELD1, \"bmw 750Li\"));\n    assertU(adoc(id, \"29\", FIELD1, \"bmw usa\",\n        FIELD2, \"red green blue\"));\n    assertU(adoc(id, \"30\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"red green yellow\"));\n    assertU(adoc(id, \"31\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"green blue yellow\"));\n    assertU(adoc(id, \"32\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"yellow white black\"));\n\n    assertU(commit());\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='13']\",\n        \"//result/doc[2]/int[@name='id'][.='14']\",\n        \"//result/doc[3]/int[@name='id'][.='15']\",\n        \"//result/doc[4]/int[@name='id'][.='16']\",\n        \"//result/doc[5]/int[@name='id'][.='18']\",\n        \"//result/doc[6]/int[@name='id'][.='19']\",\n        \"//result/doc[7]/int[@name='id'][.='20']\",\n        \"//result/doc[8]/int[@name='id'][.='21']\",\n        \"//result/doc[9]/int[@name='id'][.='22']\",\n        \"//result/doc[10]/int[@name='id'][.='23']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt boost=true}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='13']\",\n        \"//result/doc[2]/int[@name='id'][.='14']\",\n        \"//result/doc[3]/int[@name='id'][.='15']\",\n        \"//result/doc[4]/int[@name='id'][.='16']\",\n        \"//result/doc[5]/int[@name='id'][.='18']\",\n        \"//result/doc[6]/int[@name='id'][.='19']\",\n        \"//result/doc[7]/int[@name='id'][.='20']\",\n        \"//result/doc[8]/int[@name='id'][.='21']\",\n        \"//result/doc[9]/int[@name='id'][.='22']\",\n        \"//result/doc[10]/int[@name='id'][.='23']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt,lowerfilt1^1000 boost=false mintf=0 mindf=0}30\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='31']\",\n        \"//result/doc[2]/int[@name='id'][.='13']\",\n        \"//result/doc[3]/int[@name='id'][.='14']\",\n        \"//result/doc[4]/int[@name='id'][.='18']\",\n        \"//result/doc[5]/int[@name='id'][.='20']\",\n        \"//result/doc[6]/int[@name='id'][.='22']\",\n        \"//result/doc[7]/int[@name='id'][.='23']\",\n        \"//result/doc[8]/int[@name='id'][.='32']\",\n        \"//result/doc[9]/int[@name='id'][.='15']\",\n        \"//result/doc[10]/int[@name='id'][.='16']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt,lowerfilt1^1000 boost=true mintf=0 mindf=0}30\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='29']\",\n        \"//result/doc[2]/int[@name='id'][.='31']\",\n        \"//result/doc[3]/int[@name='id'][.='32']\",\n        \"//result/doc[4]/int[@name='id'][.='13']\",\n        \"//result/doc[5]/int[@name='id'][.='14']\",\n        \"//result/doc[6]/int[@name='id'][.='18']\",\n        \"//result/doc[7]/int[@name='id'][.='20']\",\n        \"//result/doc[8]/int[@name='id'][.='22']\",\n        \"//result/doc[9]/int[@name='id'][.='23']\",\n        \"//result/doc[10]/int[@name='id'][.='15']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=0 mintf=1}26\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='29']\",\n        \"//result/doc[2]/int[@name='id'][.='27']\",\n        \"//result/doc[3]/int[@name='id'][.='28']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=10 mintf=1}26\");\n    assertQ(req(params),\n        \"//result[@numFound='0']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=3 mintf=1 mindf=1}26\");\n    assertQ(req(params),\n        \"//result[@numFound='3']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=4 mintf=1 mindf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result[@numFound='0']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/mlt/SimpleMLTQParserTest#doTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/mlt/SimpleMLTQParserTest#doTest().mjava","sourceNew":"  @Test\n  public void doTest() throws Exception {\n    String id = \"id\";\n    String FIELD1 = \"lowerfilt\" ;\n    String FIELD2 = \"lowerfilt1\" ;\n    delQ(\"*:*\");\n    assertU(adoc(id, \"1\", FIELD1, \"toyota\"));\n    assertU(adoc(id, \"2\", FIELD1, \"chevrolet\"));\n    assertU(adoc(id, \"3\", FIELD1, \"suzuki\"));\n    assertU(adoc(id, \"4\", FIELD1, \"ford\"));\n    assertU(adoc(id, \"5\", FIELD1, \"ferrari\"));\n    assertU(adoc(id, \"6\", FIELD1, \"jaguar\"));\n    assertU(adoc(id, \"7\", FIELD1, \"mclaren moon or the moon and moon moon shine \" +\n        \"and the moon but moon was good foxes too\"));\n    assertU(adoc(id, \"8\", FIELD1, \"sonata\"));\n    assertU(adoc(id, \"9\", FIELD1, \"The quick red fox jumped over the lazy big \" +\n        \"and large brown dogs.\"));\n    assertU(adoc(id, \"10\", FIELD1, \"blue\"));\n    assertU(adoc(id, \"12\", FIELD1, \"glue\"));\n    assertU(adoc(id, \"13\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"14\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"15\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"16\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"17\", FIELD1, \"The quote red fox jumped moon over the lazy \" +\n        \"brown dogs moon. Of course moon. Foxes and moon come back to the foxes and moon\"));\n    assertU(adoc(id, \"18\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"19\", FIELD1, \"The hose red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"20\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"21\", FIELD1, \"The court red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"22\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"23\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"24\", FIELD1, \"The file red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"25\", FIELD1, \"rod fix\"));\n    assertU(adoc(id, \"26\", FIELD1, \"bmw usa 328i\"));\n    assertU(adoc(id, \"27\", FIELD1, \"bmw usa 535i\"));\n    assertU(adoc(id, \"28\", FIELD1, \"bmw 750Li\"));\n    assertU(adoc(id, \"29\", FIELD1, \"bmw usa\",\n        FIELD2, \"red green blue\"));\n    assertU(adoc(id, \"30\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"red green yellow\"));\n    assertU(adoc(id, \"31\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"green blue yellow\"));\n    assertU(adoc(id, \"32\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"yellow white black\"));\n\n    assertU(commit());\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/str[@name='id'][.='13']\",\n        \"//result/doc[2]/str[@name='id'][.='14']\",\n        \"//result/doc[3]/str[@name='id'][.='15']\",\n        \"//result/doc[4]/str[@name='id'][.='16']\",\n        \"//result/doc[5]/str[@name='id'][.='18']\",\n        \"//result/doc[6]/str[@name='id'][.='19']\",\n        \"//result/doc[7]/str[@name='id'][.='20']\",\n        \"//result/doc[8]/str[@name='id'][.='21']\",\n        \"//result/doc[9]/str[@name='id'][.='22']\",\n        \"//result/doc[10]/str[@name='id'][.='23']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt boost=true}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/str[@name='id'][.='13']\",\n        \"//result/doc[2]/str[@name='id'][.='14']\",\n        \"//result/doc[3]/str[@name='id'][.='15']\",\n        \"//result/doc[4]/str[@name='id'][.='16']\",\n        \"//result/doc[5]/str[@name='id'][.='18']\",\n        \"//result/doc[6]/str[@name='id'][.='19']\",\n        \"//result/doc[7]/str[@name='id'][.='20']\",\n        \"//result/doc[8]/str[@name='id'][.='21']\",\n        \"//result/doc[9]/str[@name='id'][.='22']\",\n        \"//result/doc[10]/str[@name='id'][.='23']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt,lowerfilt1^1000 boost=false mintf=0 mindf=0}30\");\n    assertQ(req(params),\n        \"//result/doc[1]/str[@name='id'][.='31']\",\n        \"//result/doc[2]/str[@name='id'][.='13']\",\n        \"//result/doc[3]/str[@name='id'][.='14']\",\n        \"//result/doc[4]/str[@name='id'][.='18']\",\n        \"//result/doc[5]/str[@name='id'][.='20']\",\n        \"//result/doc[6]/str[@name='id'][.='22']\",\n        \"//result/doc[7]/str[@name='id'][.='23']\",\n        \"//result/doc[8]/str[@name='id'][.='32']\",\n        \"//result/doc[9]/str[@name='id'][.='15']\",\n        \"//result/doc[10]/str[@name='id'][.='16']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt,lowerfilt1^1000 boost=true mintf=0 mindf=0}30\");\n    assertQ(req(params),\n        \"//result/doc[1]/str[@name='id'][.='29']\",\n        \"//result/doc[2]/str[@name='id'][.='31']\",\n        \"//result/doc[3]/str[@name='id'][.='32']\",\n        \"//result/doc[4]/str[@name='id'][.='13']\",\n        \"//result/doc[5]/str[@name='id'][.='14']\",\n        \"//result/doc[6]/str[@name='id'][.='18']\",\n        \"//result/doc[7]/str[@name='id'][.='20']\",\n        \"//result/doc[8]/str[@name='id'][.='22']\",\n        \"//result/doc[9]/str[@name='id'][.='23']\",\n        \"//result/doc[10]/str[@name='id'][.='15']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=0 mintf=1}26\");\n    assertQ(req(params),\n        \"//result/doc[1]/str[@name='id'][.='29']\",\n        \"//result/doc[2]/str[@name='id'][.='27']\",\n        \"//result/doc[3]/str[@name='id'][.='28']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=10 mintf=1}26\");\n    assertQ(req(params),\n        \"//result[@numFound='0']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=3 mintf=1 mindf=1}26\");\n    assertQ(req(params),\n        \"//result[@numFound='3']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=4 mintf=1 mindf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result[@numFound='0']\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void doTest() throws Exception {\n    String id = \"id\";\n    String FIELD1 = \"lowerfilt\" ;\n    String FIELD2 = \"lowerfilt1\" ;\n    delQ(\"*:*\");\n    assertU(adoc(id, \"1\", FIELD1, \"toyota\"));\n    assertU(adoc(id, \"2\", FIELD1, \"chevrolet\"));\n    assertU(adoc(id, \"3\", FIELD1, \"suzuki\"));\n    assertU(adoc(id, \"4\", FIELD1, \"ford\"));\n    assertU(adoc(id, \"5\", FIELD1, \"ferrari\"));\n    assertU(adoc(id, \"6\", FIELD1, \"jaguar\"));\n    assertU(adoc(id, \"7\", FIELD1, \"mclaren moon or the moon and moon moon shine \" +\n        \"and the moon but moon was good foxes too\"));\n    assertU(adoc(id, \"8\", FIELD1, \"sonata\"));\n    assertU(adoc(id, \"9\", FIELD1, \"The quick red fox jumped over the lazy big \" +\n        \"and large brown dogs.\"));\n    assertU(adoc(id, \"10\", FIELD1, \"blue\"));\n    assertU(adoc(id, \"12\", FIELD1, \"glue\"));\n    assertU(adoc(id, \"13\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"14\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"15\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"16\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"17\", FIELD1, \"The quote red fox jumped moon over the lazy \" +\n        \"brown dogs moon. Of course moon. Foxes and moon come back to the foxes and moon\"));\n    assertU(adoc(id, \"18\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"19\", FIELD1, \"The hose red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"20\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"21\", FIELD1, \"The court red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"22\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"23\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"24\", FIELD1, \"The file red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"25\", FIELD1, \"rod fix\"));\n    assertU(adoc(id, \"26\", FIELD1, \"bmw usa 328i\"));\n    assertU(adoc(id, \"27\", FIELD1, \"bmw usa 535i\"));\n    assertU(adoc(id, \"28\", FIELD1, \"bmw 750Li\"));\n    assertU(adoc(id, \"29\", FIELD1, \"bmw usa\",\n        FIELD2, \"red green blue\"));\n    assertU(adoc(id, \"30\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"red green yellow\"));\n    assertU(adoc(id, \"31\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"green blue yellow\"));\n    assertU(adoc(id, \"32\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"yellow white black\"));\n\n    assertU(commit());\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='13']\",\n        \"//result/doc[2]/int[@name='id'][.='14']\",\n        \"//result/doc[3]/int[@name='id'][.='15']\",\n        \"//result/doc[4]/int[@name='id'][.='16']\",\n        \"//result/doc[5]/int[@name='id'][.='18']\",\n        \"//result/doc[6]/int[@name='id'][.='19']\",\n        \"//result/doc[7]/int[@name='id'][.='20']\",\n        \"//result/doc[8]/int[@name='id'][.='21']\",\n        \"//result/doc[9]/int[@name='id'][.='22']\",\n        \"//result/doc[10]/int[@name='id'][.='23']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt boost=true}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='13']\",\n        \"//result/doc[2]/int[@name='id'][.='14']\",\n        \"//result/doc[3]/int[@name='id'][.='15']\",\n        \"//result/doc[4]/int[@name='id'][.='16']\",\n        \"//result/doc[5]/int[@name='id'][.='18']\",\n        \"//result/doc[6]/int[@name='id'][.='19']\",\n        \"//result/doc[7]/int[@name='id'][.='20']\",\n        \"//result/doc[8]/int[@name='id'][.='21']\",\n        \"//result/doc[9]/int[@name='id'][.='22']\",\n        \"//result/doc[10]/int[@name='id'][.='23']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt,lowerfilt1^1000 boost=false mintf=0 mindf=0}30\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='31']\",\n        \"//result/doc[2]/int[@name='id'][.='13']\",\n        \"//result/doc[3]/int[@name='id'][.='14']\",\n        \"//result/doc[4]/int[@name='id'][.='18']\",\n        \"//result/doc[5]/int[@name='id'][.='20']\",\n        \"//result/doc[6]/int[@name='id'][.='22']\",\n        \"//result/doc[7]/int[@name='id'][.='23']\",\n        \"//result/doc[8]/int[@name='id'][.='32']\",\n        \"//result/doc[9]/int[@name='id'][.='15']\",\n        \"//result/doc[10]/int[@name='id'][.='16']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt,lowerfilt1^1000 boost=true mintf=0 mindf=0}30\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='29']\",\n        \"//result/doc[2]/int[@name='id'][.='31']\",\n        \"//result/doc[3]/int[@name='id'][.='32']\",\n        \"//result/doc[4]/int[@name='id'][.='13']\",\n        \"//result/doc[5]/int[@name='id'][.='14']\",\n        \"//result/doc[6]/int[@name='id'][.='18']\",\n        \"//result/doc[7]/int[@name='id'][.='20']\",\n        \"//result/doc[8]/int[@name='id'][.='22']\",\n        \"//result/doc[9]/int[@name='id'][.='23']\",\n        \"//result/doc[10]/int[@name='id'][.='15']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=0 mintf=1}26\");\n    assertQ(req(params),\n        \"//result/doc[1]/int[@name='id'][.='29']\",\n        \"//result/doc[2]/int[@name='id'][.='27']\",\n        \"//result/doc[3]/int[@name='id'][.='28']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=10 mintf=1}26\");\n    assertQ(req(params),\n        \"//result[@numFound='0']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=3 mintf=1 mindf=1}26\");\n    assertQ(req(params),\n        \"//result[@numFound='3']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=4 mintf=1 mindf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result[@numFound='0']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3ca31feafcdc515f97ad36e834c804bf3ab5d732","date":1567571083,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/mlt/SimpleMLTQParserTest#doTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/mlt/SimpleMLTQParserTest#doTest().mjava","sourceNew":"  @Test\n  public void doTest() throws Exception {\n    String id = \"id\";\n    String FIELD1 = \"lowerfilt\" ;\n    String FIELD2 = \"lowerfilt1\" ;\n    delQ(\"*:*\");\n    assertU(adoc(id, \"1\", FIELD1, \"toyota\"));\n    assertU(adoc(id, \"2\", FIELD1, \"chevrolet\"));\n    assertU(adoc(id, \"3\", FIELD1, \"suzuki\"));\n    assertU(adoc(id, \"4\", FIELD1, \"ford\"));\n    assertU(adoc(id, \"5\", FIELD1, \"ferrari\"));\n    assertU(adoc(id, \"6\", FIELD1, \"jaguar\"));\n    assertU(adoc(id, \"7\", FIELD1, \"mclaren moon or the moon and moon moon shine \" +\n        \"and the moon but moon was good foxes too\"));\n    assertU(adoc(id, \"8\", FIELD1, \"sonata\"));\n    assertU(adoc(id, \"9\", FIELD1, \"The quick red fox jumped over the lazy big \" +\n        \"and large brown dogs.\"));\n    assertU(adoc(id, \"10\", FIELD1, \"blue\"));\n    assertU(adoc(id, \"12\", FIELD1, \"glue\"));\n    assertU(adoc(id, \"13\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"14\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"15\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"16\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"17\", FIELD1, \"The quote red fox jumped moon over the lazy \" +\n        \"brown dogs moon. Of course moon. Foxes and moon come back to the foxes and moon\"));\n    assertU(adoc(id, \"18\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"19\", FIELD1, \"The hose red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"20\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"21\", FIELD1, \"The court red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"22\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"23\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"24\", FIELD1, \"The file red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"25\", FIELD1, \"rod fix\"));\n    assertU(adoc(id, \"26\", FIELD1, \"bmw usa 328i\"));\n    assertU(adoc(id, \"27\", FIELD1, \"bmw usa 535i\"));\n    assertU(adoc(id, \"28\", FIELD1, \"bmw 750Li\"));\n    assertU(adoc(id, \"29\", FIELD1, \"bmw usa\",\n        FIELD2, \"red green blue\"));\n    assertU(adoc(id, \"30\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"red green yellow\"));\n    assertU(adoc(id, \"31\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"green blue yellow\"));\n    assertU(adoc(id, \"32\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"yellow white black\"));\n\n    assertU(commit());\n\n    // for score tiebreaker, use doc ID order\n    final SolrParams sortParams = params(\"sort\", \"score desc, id asc\");\n    \n    assertQ(req(sortParams, CommonParams.Q, \"{!mlt qf=lowerfilt}17\"),\n        \"//result/doc[1]/str[@name='id'][.='13']\",\n        \"//result/doc[2]/str[@name='id'][.='14']\",\n        \"//result/doc[3]/str[@name='id'][.='15']\",\n        \"//result/doc[4]/str[@name='id'][.='16']\",\n        \"//result/doc[5]/str[@name='id'][.='18']\",\n        \"//result/doc[6]/str[@name='id'][.='19']\",\n        \"//result/doc[7]/str[@name='id'][.='20']\",\n        \"//result/doc[8]/str[@name='id'][.='21']\",\n        \"//result/doc[9]/str[@name='id'][.='22']\",\n        \"//result/doc[10]/str[@name='id'][.='23']\"\n    );\n\n    assertQ(req(sortParams, CommonParams.Q, \"{!mlt qf=lowerfilt boost=true}17\"),\n        \"//result/doc[1]/str[@name='id'][.='13']\",\n        \"//result/doc[2]/str[@name='id'][.='14']\",\n        \"//result/doc[3]/str[@name='id'][.='15']\",\n        \"//result/doc[4]/str[@name='id'][.='16']\",\n        \"//result/doc[5]/str[@name='id'][.='18']\",\n        \"//result/doc[6]/str[@name='id'][.='19']\",\n        \"//result/doc[7]/str[@name='id'][.='20']\",\n        \"//result/doc[8]/str[@name='id'][.='21']\",\n        \"//result/doc[9]/str[@name='id'][.='22']\",\n        \"//result/doc[10]/str[@name='id'][.='23']\"\n    );\n\n    assertQ(req(sortParams, CommonParams.Q, \"{!mlt qf=lowerfilt,lowerfilt1^1000 boost=false mintf=0 mindf=0}30\"),\n        \"//result/doc[1]/str[@name='id'][.='31']\",\n        \"//result/doc[2]/str[@name='id'][.='13']\",\n        \"//result/doc[3]/str[@name='id'][.='14']\",\n        \"//result/doc[4]/str[@name='id'][.='18']\",\n        \"//result/doc[5]/str[@name='id'][.='20']\",\n        \"//result/doc[6]/str[@name='id'][.='22']\",\n        \"//result/doc[7]/str[@name='id'][.='23']\",\n        \"//result/doc[8]/str[@name='id'][.='32']\",\n        \"//result/doc[9]/str[@name='id'][.='15']\",\n        \"//result/doc[10]/str[@name='id'][.='16']\"\n    );\n\n    assertQ(req(sortParams, CommonParams.Q, \"{!mlt qf=lowerfilt,lowerfilt1^1000 boost=true mintf=0 mindf=0}30\"),\n        \"//result/doc[1]/str[@name='id'][.='29']\",\n        \"//result/doc[2]/str[@name='id'][.='31']\",\n        \"//result/doc[3]/str[@name='id'][.='32']\",\n        \"//result/doc[4]/str[@name='id'][.='13']\",\n        \"//result/doc[5]/str[@name='id'][.='14']\",\n        \"//result/doc[6]/str[@name='id'][.='18']\",\n        \"//result/doc[7]/str[@name='id'][.='20']\",\n        \"//result/doc[8]/str[@name='id'][.='22']\",\n        \"//result/doc[9]/str[@name='id'][.='23']\",\n        \"//result/doc[10]/str[@name='id'][.='15']\"\n    );\n\n    assertQ(req(sortParams, CommonParams.Q, \"{!mlt qf=lowerfilt mindf=0 mintf=1}26\"),\n        \"//result/doc[1]/str[@name='id'][.='29']\",\n        \"//result/doc[2]/str[@name='id'][.='27']\",\n        \"//result/doc[3]/str[@name='id'][.='28']\"\n    );\n\n    assertQ(req(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=10 mintf=1}26\"),\n        \"//result[@numFound='0']\"\n    );\n\n    assertQ(req(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=3 mintf=1 mindf=1}26\"),\n        \"//result[@numFound='3']\"\n    );\n\n    assertQ(req(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=4 mintf=1 mindf=1}26\",\n                CommonParams.DEBUG, \"true\"),\n        \"//result[@numFound='0']\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void doTest() throws Exception {\n    String id = \"id\";\n    String FIELD1 = \"lowerfilt\" ;\n    String FIELD2 = \"lowerfilt1\" ;\n    delQ(\"*:*\");\n    assertU(adoc(id, \"1\", FIELD1, \"toyota\"));\n    assertU(adoc(id, \"2\", FIELD1, \"chevrolet\"));\n    assertU(adoc(id, \"3\", FIELD1, \"suzuki\"));\n    assertU(adoc(id, \"4\", FIELD1, \"ford\"));\n    assertU(adoc(id, \"5\", FIELD1, \"ferrari\"));\n    assertU(adoc(id, \"6\", FIELD1, \"jaguar\"));\n    assertU(adoc(id, \"7\", FIELD1, \"mclaren moon or the moon and moon moon shine \" +\n        \"and the moon but moon was good foxes too\"));\n    assertU(adoc(id, \"8\", FIELD1, \"sonata\"));\n    assertU(adoc(id, \"9\", FIELD1, \"The quick red fox jumped over the lazy big \" +\n        \"and large brown dogs.\"));\n    assertU(adoc(id, \"10\", FIELD1, \"blue\"));\n    assertU(adoc(id, \"12\", FIELD1, \"glue\"));\n    assertU(adoc(id, \"13\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"14\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"15\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"16\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"17\", FIELD1, \"The quote red fox jumped moon over the lazy \" +\n        \"brown dogs moon. Of course moon. Foxes and moon come back to the foxes and moon\"));\n    assertU(adoc(id, \"18\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"19\", FIELD1, \"The hose red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"20\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"21\", FIELD1, \"The court red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"22\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"23\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"24\", FIELD1, \"The file red fox jumped over the lazy brown dogs.\"));\n    assertU(adoc(id, \"25\", FIELD1, \"rod fix\"));\n    assertU(adoc(id, \"26\", FIELD1, \"bmw usa 328i\"));\n    assertU(adoc(id, \"27\", FIELD1, \"bmw usa 535i\"));\n    assertU(adoc(id, \"28\", FIELD1, \"bmw 750Li\"));\n    assertU(adoc(id, \"29\", FIELD1, \"bmw usa\",\n        FIELD2, \"red green blue\"));\n    assertU(adoc(id, \"30\", FIELD1, \"The quote red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"red green yellow\"));\n    assertU(adoc(id, \"31\", FIELD1, \"The fat red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"green blue yellow\"));\n    assertU(adoc(id, \"32\", FIELD1, \"The slim red fox jumped over the lazy brown dogs.\",\n        FIELD2, \"yellow white black\"));\n\n    assertU(commit());\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/str[@name='id'][.='13']\",\n        \"//result/doc[2]/str[@name='id'][.='14']\",\n        \"//result/doc[3]/str[@name='id'][.='15']\",\n        \"//result/doc[4]/str[@name='id'][.='16']\",\n        \"//result/doc[5]/str[@name='id'][.='18']\",\n        \"//result/doc[6]/str[@name='id'][.='19']\",\n        \"//result/doc[7]/str[@name='id'][.='20']\",\n        \"//result/doc[8]/str[@name='id'][.='21']\",\n        \"//result/doc[9]/str[@name='id'][.='22']\",\n        \"//result/doc[10]/str[@name='id'][.='23']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt boost=true}17\");\n    assertQ(req(params),\n        \"//result/doc[1]/str[@name='id'][.='13']\",\n        \"//result/doc[2]/str[@name='id'][.='14']\",\n        \"//result/doc[3]/str[@name='id'][.='15']\",\n        \"//result/doc[4]/str[@name='id'][.='16']\",\n        \"//result/doc[5]/str[@name='id'][.='18']\",\n        \"//result/doc[6]/str[@name='id'][.='19']\",\n        \"//result/doc[7]/str[@name='id'][.='20']\",\n        \"//result/doc[8]/str[@name='id'][.='21']\",\n        \"//result/doc[9]/str[@name='id'][.='22']\",\n        \"//result/doc[10]/str[@name='id'][.='23']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt,lowerfilt1^1000 boost=false mintf=0 mindf=0}30\");\n    assertQ(req(params),\n        \"//result/doc[1]/str[@name='id'][.='31']\",\n        \"//result/doc[2]/str[@name='id'][.='13']\",\n        \"//result/doc[3]/str[@name='id'][.='14']\",\n        \"//result/doc[4]/str[@name='id'][.='18']\",\n        \"//result/doc[5]/str[@name='id'][.='20']\",\n        \"//result/doc[6]/str[@name='id'][.='22']\",\n        \"//result/doc[7]/str[@name='id'][.='23']\",\n        \"//result/doc[8]/str[@name='id'][.='32']\",\n        \"//result/doc[9]/str[@name='id'][.='15']\",\n        \"//result/doc[10]/str[@name='id'][.='16']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt,lowerfilt1^1000 boost=true mintf=0 mindf=0}30\");\n    assertQ(req(params),\n        \"//result/doc[1]/str[@name='id'][.='29']\",\n        \"//result/doc[2]/str[@name='id'][.='31']\",\n        \"//result/doc[3]/str[@name='id'][.='32']\",\n        \"//result/doc[4]/str[@name='id'][.='13']\",\n        \"//result/doc[5]/str[@name='id'][.='14']\",\n        \"//result/doc[6]/str[@name='id'][.='18']\",\n        \"//result/doc[7]/str[@name='id'][.='20']\",\n        \"//result/doc[8]/str[@name='id'][.='22']\",\n        \"//result/doc[9]/str[@name='id'][.='23']\",\n        \"//result/doc[10]/str[@name='id'][.='15']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=0 mintf=1}26\");\n    assertQ(req(params),\n        \"//result/doc[1]/str[@name='id'][.='29']\",\n        \"//result/doc[2]/str[@name='id'][.='27']\",\n        \"//result/doc[3]/str[@name='id'][.='28']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt mindf=10 mintf=1}26\");\n    assertQ(req(params),\n        \"//result[@numFound='0']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=3 mintf=1 mindf=1}26\");\n    assertQ(req(params),\n        \"//result[@numFound='3']\"\n    );\n\n    params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"{!mlt qf=lowerfilt minwl=4 mintf=1 mindf=1}26\");\n    params.set(CommonParams.DEBUG, \"true\");\n    assertQ(req(params),\n        \"//result[@numFound='0']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eb55f624eb53f26cfb7f9614b862fb7657633358":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3ca31feafcdc515f97ad36e834c804bf3ab5d732":["28288370235ed02234a64753cdbf0c6ec096304a"],"ed95a777f3860385e015fb8a082e4b66a5aa6bb8":["655260340014c640e7d0f9a7a7ea1f00f36f65e5"],"a71f63026529f3c1f03cfdd664910873ab2369ae":["2100a5b744ecaec4d2b191a7da9083feb50a6f7f"],"2100a5b744ecaec4d2b191a7da9083feb50a6f7f":["19cb756f0ad73c8d898cb8bfdd9f04bcc6e3b7c1"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["19cb756f0ad73c8d898cb8bfdd9f04bcc6e3b7c1","2100a5b744ecaec4d2b191a7da9083feb50a6f7f"],"28288370235ed02234a64753cdbf0c6ec096304a":["2100a5b744ecaec4d2b191a7da9083feb50a6f7f","a71f63026529f3c1f03cfdd664910873ab2369ae"],"d32e559c96d0c16fe041e1608a4bbbf8a6c9a4e1":["eb55f624eb53f26cfb7f9614b862fb7657633358"],"19cb756f0ad73c8d898cb8bfdd9f04bcc6e3b7c1":["ed95a777f3860385e015fb8a082e4b66a5aa6bb8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"776417a20af3930a363a226c989867f65e93ee91":["d32e559c96d0c16fe041e1608a4bbbf8a6c9a4e1"],"655260340014c640e7d0f9a7a7ea1f00f36f65e5":["776417a20af3930a363a226c989867f65e93ee91"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["2100a5b744ecaec4d2b191a7da9083feb50a6f7f","a71f63026529f3c1f03cfdd664910873ab2369ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3ca31feafcdc515f97ad36e834c804bf3ab5d732"]},"commit2Childs":{"eb55f624eb53f26cfb7f9614b862fb7657633358":["d32e559c96d0c16fe041e1608a4bbbf8a6c9a4e1"],"3ca31feafcdc515f97ad36e834c804bf3ab5d732":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ed95a777f3860385e015fb8a082e4b66a5aa6bb8":["19cb756f0ad73c8d898cb8bfdd9f04bcc6e3b7c1"],"a71f63026529f3c1f03cfdd664910873ab2369ae":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"2100a5b744ecaec4d2b191a7da9083feb50a6f7f":["a71f63026529f3c1f03cfdd664910873ab2369ae","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"28288370235ed02234a64753cdbf0c6ec096304a":["3ca31feafcdc515f97ad36e834c804bf3ab5d732"],"d32e559c96d0c16fe041e1608a4bbbf8a6c9a4e1":["776417a20af3930a363a226c989867f65e93ee91"],"19cb756f0ad73c8d898cb8bfdd9f04bcc6e3b7c1":["2100a5b744ecaec4d2b191a7da9083feb50a6f7f","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eb55f624eb53f26cfb7f9614b862fb7657633358"],"776417a20af3930a363a226c989867f65e93ee91":["655260340014c640e7d0f9a7a7ea1f00f36f65e5"],"655260340014c640e7d0f9a7a7ea1f00f36f65e5":["ed95a777f3860385e015fb8a082e4b66a5aa6bb8"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}