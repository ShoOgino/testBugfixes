{"path":"src/java/org/apache/lucene/search/TermRangeQuery#toString(String).mjava","commits":[{"id":"0f612096ab5275c4821d05f126bf45a89f4782b8","date":1246738452,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/TermRangeQuery#toString(String).mjava","pathOld":"src/java/org/apache/lucene/search/RangeQuery#toString(String).mjava","sourceNew":"  /** Prints a user-readable version of this query. */\n  public String toString(String field) {\n      StringBuffer buffer = new StringBuffer();\n      if (!getField().equals(field)) {\n          buffer.append(getField());\n          buffer.append(\":\");\n      }\n      buffer.append(includeLower ? '[' : '{');\n      buffer.append(lowerTerm != null ? lowerTerm : \"*\");\n      buffer.append(\" TO \");\n      buffer.append(upperTerm != null ? upperTerm : \"*\");\n      buffer.append(includeUpper ? ']' : '}');\n      buffer.append(ToStringUtils.boost(getBoost()));\n      return buffer.toString();\n  }\n\n","sourceOld":"  /** Prints a user-readable version of this query. */\n  public String toString(String field) {\n      StringBuffer buffer = new StringBuffer();\n      if (!getField().equals(field)) {\n          buffer.append(getField());\n          buffer.append(\":\");\n      }\n      buffer.append(includeLower ? '[' : '{');\n      buffer.append(lowerTerm != null ? lowerTerm.text() : \"*\");\n      buffer.append(\" TO \");\n      buffer.append(upperTerm != null ? upperTerm.text() : \"*\");\n      buffer.append(includeUpper ? ']' : '}');\n      if (getBoost() != 1.0f) {\n          buffer.append(\"^\");\n          buffer.append(Float.toString(getBoost()));\n      }\n      return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c","date":1254521470,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/TermRangeQuery#toString(String).mjava","pathOld":"src/java/org/apache/lucene/search/TermRangeQuery#toString(String).mjava","sourceNew":"  /** Prints a user-readable version of this query. */\n  public String toString(String field) {\n      StringBuilder buffer = new StringBuilder();\n      if (!getField().equals(field)) {\n          buffer.append(getField());\n          buffer.append(\":\");\n      }\n      buffer.append(includeLower ? '[' : '{');\n      buffer.append(lowerTerm != null ? lowerTerm : \"*\");\n      buffer.append(\" TO \");\n      buffer.append(upperTerm != null ? upperTerm : \"*\");\n      buffer.append(includeUpper ? ']' : '}');\n      buffer.append(ToStringUtils.boost(getBoost()));\n      return buffer.toString();\n  }\n\n","sourceOld":"  /** Prints a user-readable version of this query. */\n  public String toString(String field) {\n      StringBuffer buffer = new StringBuffer();\n      if (!getField().equals(field)) {\n          buffer.append(getField());\n          buffer.append(\":\");\n      }\n      buffer.append(includeLower ? '[' : '{');\n      buffer.append(lowerTerm != null ? lowerTerm : \"*\");\n      buffer.append(\" TO \");\n      buffer.append(upperTerm != null ? upperTerm : \"*\");\n      buffer.append(includeUpper ? ']' : '}');\n      buffer.append(ToStringUtils.boost(getBoost()));\n      return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d62b1ed69b2d54a65df6f993499b39562d1dc1f9","date":1255700561,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/TermRangeQuery#toString(String).mjava","pathOld":"src/java/org/apache/lucene/search/TermRangeQuery#toString(String).mjava","sourceNew":"  /** Prints a user-readable version of this query. */\n  @Override\n  public String toString(String field) {\n      StringBuilder buffer = new StringBuilder();\n      if (!getField().equals(field)) {\n          buffer.append(getField());\n          buffer.append(\":\");\n      }\n      buffer.append(includeLower ? '[' : '{');\n      buffer.append(lowerTerm != null ? lowerTerm : \"*\");\n      buffer.append(\" TO \");\n      buffer.append(upperTerm != null ? upperTerm : \"*\");\n      buffer.append(includeUpper ? ']' : '}');\n      buffer.append(ToStringUtils.boost(getBoost()));\n      return buffer.toString();\n  }\n\n","sourceOld":"  /** Prints a user-readable version of this query. */\n  public String toString(String field) {\n      StringBuilder buffer = new StringBuilder();\n      if (!getField().equals(field)) {\n          buffer.append(getField());\n          buffer.append(\":\");\n      }\n      buffer.append(includeLower ? '[' : '{');\n      buffer.append(lowerTerm != null ? lowerTerm : \"*\");\n      buffer.append(\" TO \");\n      buffer.append(upperTerm != null ? upperTerm : \"*\");\n      buffer.append(includeUpper ? ']' : '}');\n      buffer.append(ToStringUtils.boost(getBoost()));\n      return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/TermRangeQuery#toString(String).mjava","pathOld":"src/java/org/apache/lucene/search/TermRangeQuery#toString(String).mjava","sourceNew":"  /** Prints a user-readable version of this query. */\n  @Override\n  public String toString(String field) {\n      StringBuilder buffer = new StringBuilder();\n      if (!getField().equals(field)) {\n          buffer.append(getField());\n          buffer.append(\":\");\n      }\n      buffer.append(includeLower ? '[' : '{');\n      buffer.append(lowerTerm != null ? lowerTerm : \"*\");\n      buffer.append(\" TO \");\n      buffer.append(upperTerm != null ? upperTerm : \"*\");\n      buffer.append(includeUpper ? ']' : '}');\n      buffer.append(ToStringUtils.boost(getBoost()));\n      return buffer.toString();\n  }\n\n","sourceOld":"  /** Prints a user-readable version of this query. */\n  @Override\n  public String toString(String field) {\n      StringBuilder buffer = new StringBuilder();\n      if (!getField().equals(field)) {\n          buffer.append(getField());\n          buffer.append(\":\");\n      }\n      buffer.append(includeLower ? '[' : '{');\n      buffer.append(lowerTerm != null ? lowerTerm : \"*\");\n      buffer.append(\" TO \");\n      buffer.append(upperTerm != null ? upperTerm : \"*\");\n      buffer.append(includeUpper ? ']' : '}');\n      buffer.append(ToStringUtils.boost(getBoost()));\n      return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d62b1ed69b2d54a65df6f993499b39562d1dc1f9":["4625cb7ffd7c9caaf2d62b206ba9a382d68da82c"],"0f612096ab5275c4821d05f126bf45a89f4782b8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c":["0f612096ab5275c4821d05f126bf45a89f4782b8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d62b1ed69b2d54a65df6f993499b39562d1dc1f9"]},"commit2Childs":{"d62b1ed69b2d54a65df6f993499b39562d1dc1f9":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f612096ab5275c4821d05f126bf45a89f4782b8":["4625cb7ffd7c9caaf2d62b206ba9a382d68da82c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f612096ab5275c4821d05f126bf45a89f4782b8"],"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c":["d62b1ed69b2d54a65df6f993499b39562d1dc1f9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}