{"path":"solr/core/src/java/org/apache/solr/core/backup/repository/LocalFileSystemRepository#copyFileFrom(Directory,String,URI).mjava","commits":[{"id":"a51ab9b1f1b896f06b7ba61672f0fca2a4fce43b","date":1466705968,"type":0,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/backup/repository/LocalFileSystemRepository#copyFileFrom(Directory,String,URI).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void copyFileFrom(Directory sourceDir, String fileName, URI dest) throws IOException {\n    try (FSDirectory dir = new SimpleFSDirectory(Paths.get(dest), NoLockFactory.INSTANCE)) {\n      dir.copyFrom(sourceDir, fileName, fileName, DirectoryFactory.IOCONTEXT_NO_CACHE);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/backup/repository/LocalFileSystemRepository#copyFileFrom(Directory,String,URI).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void copyFileFrom(Directory sourceDir, String fileName, URI dest) throws IOException {\n    try (FSDirectory dir = new SimpleFSDirectory(Paths.get(dest), NoLockFactory.INSTANCE)) {\n      dir.copyFrom(sourceDir, fileName, fileName, DirectoryFactory.IOCONTEXT_NO_CACHE);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ae13d58e10d8dc818c75db483ed8b53c725f1d","date":1583449465,"type":3,"author":"Yannick Welsch","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/backup/repository/LocalFileSystemRepository#copyFileFrom(Directory,String,URI).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/backup/repository/LocalFileSystemRepository#copyFileFrom(Directory,String,URI).mjava","sourceNew":"  @Override\n  public void copyFileFrom(Directory sourceDir, String fileName, URI dest) throws IOException {\n    try (FSDirectory dir = new NIOFSDirectory(Paths.get(dest), NoLockFactory.INSTANCE)) {\n      dir.copyFrom(sourceDir, fileName, fileName, DirectoryFactory.IOCONTEXT_NO_CACHE);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void copyFileFrom(Directory sourceDir, String fileName, URI dest) throws IOException {\n    try (FSDirectory dir = new SimpleFSDirectory(Paths.get(dest), NoLockFactory.INSTANCE)) {\n      dir.copyFrom(sourceDir, fileName, fileName, DirectoryFactory.IOCONTEXT_NO_CACHE);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ca2a57dbb0665332572cf1a0dffa67234089615","date":1583491342,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/backup/repository/LocalFileSystemRepository#copyFileFrom(Directory,String,URI).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/backup/repository/LocalFileSystemRepository#copyFileFrom(Directory,String,URI).mjava","sourceNew":"  @Override\n  public void copyFileFrom(Directory sourceDir, String fileName, URI dest) throws IOException {\n    try (FSDirectory dir = new NIOFSDirectory(Paths.get(dest), NoLockFactory.INSTANCE)) {\n      dir.copyFrom(sourceDir, fileName, fileName, DirectoryFactory.IOCONTEXT_NO_CACHE);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void copyFileFrom(Directory sourceDir, String fileName, URI dest) throws IOException {\n    try (FSDirectory dir = new SimpleFSDirectory(Paths.get(dest), NoLockFactory.INSTANCE)) {\n      dir.copyFrom(sourceDir, fileName, fileName, DirectoryFactory.IOCONTEXT_NO_CACHE);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ca2a57dbb0665332572cf1a0dffa67234089615":["a51ab9b1f1b896f06b7ba61672f0fca2a4fce43b","09ae13d58e10d8dc818c75db483ed8b53c725f1d"],"a51ab9b1f1b896f06b7ba61672f0fca2a4fce43b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"09ae13d58e10d8dc818c75db483ed8b53c725f1d":["a51ab9b1f1b896f06b7ba61672f0fca2a4fce43b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a51ab9b1f1b896f06b7ba61672f0fca2a4fce43b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ca2a57dbb0665332572cf1a0dffa67234089615"]},"commit2Childs":{"9ca2a57dbb0665332572cf1a0dffa67234089615":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a51ab9b1f1b896f06b7ba61672f0fca2a4fce43b":["9ca2a57dbb0665332572cf1a0dffa67234089615","09ae13d58e10d8dc818c75db483ed8b53c725f1d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"09ae13d58e10d8dc818c75db483ed8b53c725f1d":["9ca2a57dbb0665332572cf1a0dffa67234089615"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a51ab9b1f1b896f06b7ba61672f0fca2a4fce43b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}