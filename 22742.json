{"path":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","sourceNew":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n      tmp.setSegmentsPerTier(Math.min(5, tmp.getSegmentsPerTier()));\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","sourceOld":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n      tmp.setSegmentsPerTier(Math.min(5, tmp.getSegmentsPerTier()));\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"02e8faf10211a6fbcdd8675af75977da20199190","date":1340393829,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","sourceNew":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n      lmp.setUseCompoundFile(true);\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n      tmp.setSegmentsPerTier(Math.min(5, tmp.getSegmentsPerTier()));\n      tmp.setUseCompoundFile(true);\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","sourceOld":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n      tmp.setSegmentsPerTier(Math.min(5, tmp.getSegmentsPerTier()));\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","sourceNew":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n      lmp.setUseCompoundFile(true);\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n      tmp.setSegmentsPerTier(Math.min(5, tmp.getSegmentsPerTier()));\n      tmp.setUseCompoundFile(true);\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","sourceOld":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n      tmp.setSegmentsPerTier(Math.min(5, tmp.getSegmentsPerTier()));\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"088a7ef694fd43d5d9a4d200c4005865f773d1e7","date":1371136274,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","sourceNew":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n      lmp.setNoCFSRatio(1.0);\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n      tmp.setSegmentsPerTier(Math.min(5, tmp.getSegmentsPerTier()));\n      tmp.setNoCFSRatio(1.0);\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","sourceOld":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n      lmp.setUseCompoundFile(true);\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n      tmp.setSegmentsPerTier(Math.min(5, tmp.getSegmentsPerTier()));\n      tmp.setUseCompoundFile(true);\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"81897c7ae3eb48794f98436ded825cc857d8bb4c","date":1372450426,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","sourceNew":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n      lmp.setNoCFSRatio(1.0);\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n      tmp.setSegmentsPerTier(Math.min(5, tmp.getSegmentsPerTier()));\n      tmp.setNoCFSRatio(1.0);\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      // wtf... shouldnt it be even lower since its 1 by default?!?!\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n    }\n  }\n\n","sourceOld":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n      lmp.setNoCFSRatio(1.0);\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n      tmp.setSegmentsPerTier(Math.min(5, tmp.getSegmentsPerTier()));\n      tmp.setNoCFSRatio(1.0);\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","bugFix":null,"bugIntro":["be3b141eed4372b3eb04def61ab79f86f572f481"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"be3b141eed4372b3eb04def61ab79f86f572f481","date":1372468407,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","sourceNew":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n      lmp.setNoCFSRatio(1.0);\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n      tmp.setSegmentsPerTier(Math.min(5, tmp.getSegmentsPerTier()));\n      tmp.setNoCFSRatio(1.0);\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      // wtf... shouldnt it be even lower since its 1 by default?!?!\n      ((ConcurrentMergeScheduler) ms).setMaxMergesAndThreads(3, 2);\n    }\n  }\n\n","sourceOld":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n      lmp.setNoCFSRatio(1.0);\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n      tmp.setSegmentsPerTier(Math.min(5, tmp.getSegmentsPerTier()));\n      tmp.setNoCFSRatio(1.0);\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      // wtf... shouldnt it be even lower since its 1 by default?!?!\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n    }\n  }\n\n","bugFix":["81897c7ae3eb48794f98436ded825cc857d8bb4c","2038bddb271054e53175411dbddf501a19f3083a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","sourceNew":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n      lmp.setNoCFSRatio(1.0);\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n      tmp.setSegmentsPerTier(Math.min(5, tmp.getSegmentsPerTier()));\n      tmp.setNoCFSRatio(1.0);\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      // wtf... shouldnt it be even lower since its 1 by default?!?!\n      ((ConcurrentMergeScheduler) ms).setMaxMergesAndThreads(3, 2);\n    }\n  }\n\n","sourceOld":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n      lmp.setNoCFSRatio(1.0);\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n      tmp.setSegmentsPerTier(Math.min(5, tmp.getSegmentsPerTier()));\n      tmp.setNoCFSRatio(1.0);\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":5,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","sourceNew":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n      lmp.setNoCFSRatio(1.0);\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n      tmp.setSegmentsPerTier(Math.min(5, tmp.getSegmentsPerTier()));\n      tmp.setNoCFSRatio(1.0);\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      // wtf... shouldnt it be even lower since its 1 by default?!?!\n      ((ConcurrentMergeScheduler) ms).setMaxMergesAndThreads(3, 2);\n    }\n  }\n\n","sourceOld":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n      lmp.setNoCFSRatio(1.0);\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n      tmp.setSegmentsPerTier(Math.min(5, tmp.getSegmentsPerTier()));\n      tmp.setNoCFSRatio(1.0);\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      // wtf... shouldnt it be even lower since its 1 by default?!?!\n      ((ConcurrentMergeScheduler) ms).setMaxMergesAndThreads(3, 2);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"088a7ef694fd43d5d9a4d200c4005865f773d1e7":["02e8faf10211a6fbcdd8675af75977da20199190"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["088a7ef694fd43d5d9a4d200c4005865f773d1e7","be3b141eed4372b3eb04def61ab79f86f572f481"],"6613659748fe4411a7dcf85266e55db1f95f7315":["be3b141eed4372b3eb04def61ab79f86f572f481"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","02e8faf10211a6fbcdd8675af75977da20199190"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"81897c7ae3eb48794f98436ded825cc857d8bb4c":["088a7ef694fd43d5d9a4d200c4005865f773d1e7"],"02e8faf10211a6fbcdd8675af75977da20199190":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"be3b141eed4372b3eb04def61ab79f86f572f481":["81897c7ae3eb48794f98436ded825cc857d8bb4c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6613659748fe4411a7dcf85266e55db1f95f7315"]},"commit2Childs":{"088a7ef694fd43d5d9a4d200c4005865f773d1e7":["37a0f60745e53927c4c876cfe5b5a58170f0646c","81897c7ae3eb48794f98436ded825cc857d8bb4c"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"6613659748fe4411a7dcf85266e55db1f95f7315":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fe33227f6805edab2036cbb80645cc4e2d1fa424","02e8faf10211a6fbcdd8675af75977da20199190"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"02e8faf10211a6fbcdd8675af75977da20199190":["088a7ef694fd43d5d9a4d200c4005865f773d1e7","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"81897c7ae3eb48794f98436ded825cc857d8bb4c":["be3b141eed4372b3eb04def61ab79f86f572f481"],"be3b141eed4372b3eb04def61ab79f86f572f481":["37a0f60745e53927c4c876cfe5b5a58170f0646c","6613659748fe4411a7dcf85266e55db1f95f7315"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}