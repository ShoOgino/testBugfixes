{"path":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxSimilarityValueSource#getValues(Map,LeafReaderContext).mjava","commits":[{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxSimilarityValueSource#getValues(Map,LeafReaderContext).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxSimilarityValueSource#getValues(Map,LeafReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n\n    final FunctionValues shapeValues = bboxValueSource.getValues(context, readerContext);\n\n    return new DoubleDocValues(this) {\n      @Override\n      public double doubleVal(int doc) {\n        //? limit to Rect or call getBoundingBox()? latter would encourage bad practice\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        return rect==null ? 0 : score(rect, null);\n      }\n\n      @Override\n      public boolean exists(int doc) {\n        return shapeValues.exists(doc);\n      }\n\n      @Override\n      public Explanation explain(int doc) {\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        if (rect == null)\n          return Explanation.noMatch(\"no rect\");\n        AtomicReference<Explanation> explanation = new AtomicReference<>();\n        score(rect, explanation);\n        return explanation.get();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n\n    final FunctionValues shapeValues = bboxValueSource.getValues(context, readerContext);\n\n    return new DoubleDocValues(this) {\n      @Override\n      public double doubleVal(int doc) {\n        //? limit to Rect or call getBoundingBox()? latter would encourage bad practice\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        return rect==null ? 0 : score(rect, null);\n      }\n\n      @Override\n      public boolean exists(int doc) {\n        return shapeValues.exists(doc);\n      }\n\n      @Override\n      public Explanation explain(int doc) {\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        if (rect == null)\n          return Explanation.noMatch(\"no rect\");\n        AtomicReference<Explanation> explanation = new AtomicReference<>();\n        score(rect, explanation);\n        return explanation.get();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxSimilarityValueSource#getValues(Map,LeafReaderContext).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxSimilarityValueSource#getValues(Map,LeafReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n\n    final FunctionValues shapeValues = bboxValueSource.getValues(context, readerContext);\n\n    return new DoubleDocValues(this) {\n      @Override\n      public double doubleVal(int doc) {\n        //? limit to Rect or call getBoundingBox()? latter would encourage bad practice\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        return rect==null ? 0 : score(rect, null);\n      }\n\n      @Override\n      public boolean exists(int doc) {\n        return shapeValues.exists(doc);\n      }\n\n      @Override\n      public Explanation explain(int doc) {\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        if (rect == null)\n          return Explanation.noMatch(\"no rect\");\n        AtomicReference<Explanation> explanation = new AtomicReference<>();\n        score(rect, explanation);\n        return explanation.get();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n\n    final FunctionValues shapeValues = bboxValueSource.getValues(context, readerContext);\n\n    return new DoubleDocValues(this) {\n      @Override\n      public double doubleVal(int doc) {\n        //? limit to Rect or call getBoundingBox()? latter would encourage bad practice\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        return rect==null ? 0 : score(rect, null);\n      }\n\n      @Override\n      public boolean exists(int doc) {\n        return shapeValues.exists(doc);\n      }\n\n      @Override\n      public Explanation explain(int doc) {\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        if (rect == null)\n          return Explanation.noMatch(\"no rect\");\n        AtomicReference<Explanation> explanation = new AtomicReference<>();\n        score(rect, explanation);\n        return explanation.get();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxSimilarityValueSource#getValues(Map,LeafReaderContext).mjava","pathOld":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxSimilarityValueSource#getValues(Map,LeafReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n\n    final FunctionValues shapeValues = bboxValueSource.getValues(context, readerContext);\n\n    return new DoubleDocValues(this) {\n      @Override\n      public double doubleVal(int doc) throws IOException {\n        //? limit to Rect or call getBoundingBox()? latter would encourage bad practice\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        return rect==null ? 0 : score(rect, null);\n      }\n\n      @Override\n      public boolean exists(int doc) throws IOException {\n        return shapeValues.exists(doc);\n      }\n\n      @Override\n      public Explanation explain(int doc) throws IOException {\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        if (rect == null) {\n          return Explanation.noMatch(\"no rect\");\n        }\n        AtomicReference<Explanation> explanation = new AtomicReference<>();\n        score(rect, explanation);\n        return explanation.get();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n\n    final FunctionValues shapeValues = bboxValueSource.getValues(context, readerContext);\n\n    return new DoubleDocValues(this) {\n      @Override\n      public double doubleVal(int doc) {\n        //? limit to Rect or call getBoundingBox()? latter would encourage bad practice\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        return rect==null ? 0 : score(rect, null);\n      }\n\n      @Override\n      public boolean exists(int doc) {\n        return shapeValues.exists(doc);\n      }\n\n      @Override\n      public Explanation explain(int doc) {\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        if (rect == null)\n          return Explanation.noMatch(\"no rect\");\n        AtomicReference<Explanation> explanation = new AtomicReference<>();\n        score(rect, explanation);\n        return explanation.get();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxSimilarityValueSource#getValues(Map,LeafReaderContext).mjava","pathOld":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxSimilarityValueSource#getValues(Map,LeafReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n\n    final FunctionValues shapeValues = bboxValueSource.getValues(context, readerContext);\n\n    return new DoubleDocValues(this) {\n      @Override\n      public double doubleVal(int doc) throws IOException {\n        //? limit to Rect or call getBoundingBox()? latter would encourage bad practice\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        return rect==null ? 0 : score(rect, null);\n      }\n\n      @Override\n      public boolean exists(int doc) throws IOException {\n        return shapeValues.exists(doc);\n      }\n\n      @Override\n      public Explanation explain(int doc) throws IOException {\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        if (rect == null) {\n          return Explanation.noMatch(\"no rect\");\n        }\n        AtomicReference<Explanation> explanation = new AtomicReference<>();\n        score(rect, explanation);\n        return explanation.get();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n\n    final FunctionValues shapeValues = bboxValueSource.getValues(context, readerContext);\n\n    return new DoubleDocValues(this) {\n      @Override\n      public double doubleVal(int doc) {\n        //? limit to Rect or call getBoundingBox()? latter would encourage bad practice\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        return rect==null ? 0 : score(rect, null);\n      }\n\n      @Override\n      public boolean exists(int doc) {\n        return shapeValues.exists(doc);\n      }\n\n      @Override\n      public Explanation explain(int doc) {\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        if (rect == null)\n          return Explanation.noMatch(\"no rect\");\n        AtomicReference<Explanation> explanation = new AtomicReference<>();\n        score(rect, explanation);\n        return explanation.get();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxSimilarityValueSource#getValues(Map,LeafReaderContext).mjava","pathOld":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxSimilarityValueSource#getValues(Map,LeafReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n\n    final FunctionValues shapeValues = bboxValueSource.getValues(context, readerContext);\n\n    return new DoubleDocValues(this) {\n      @Override\n      public double doubleVal(int doc) throws IOException {\n        //? limit to Rect or call getBoundingBox()? latter would encourage bad practice\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        return rect==null ? 0 : score(rect, null);\n      }\n\n      @Override\n      public boolean exists(int doc) throws IOException {\n        return shapeValues.exists(doc);\n      }\n\n      @Override\n      public Explanation explain(int doc) throws IOException {\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        if (rect == null) {\n          return Explanation.noMatch(\"no rect\");\n        }\n        AtomicReference<Explanation> explanation = new AtomicReference<>();\n        score(rect, explanation);\n        return explanation.get();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n\n    final FunctionValues shapeValues = bboxValueSource.getValues(context, readerContext);\n\n    return new DoubleDocValues(this) {\n      @Override\n      public double doubleVal(int doc) {\n        //? limit to Rect or call getBoundingBox()? latter would encourage bad practice\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        return rect==null ? 0 : score(rect, null);\n      }\n\n      @Override\n      public boolean exists(int doc) {\n        return shapeValues.exists(doc);\n      }\n\n      @Override\n      public Explanation explain(int doc) {\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        if (rect == null)\n          return Explanation.noMatch(\"no rect\");\n        AtomicReference<Explanation> explanation = new AtomicReference<>();\n        score(rect, explanation);\n        return explanation.get();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"32b9119890a8e82252b6cc341ac491d18fa1e49b","date":1498575219,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxSimilarityValueSource#getValues(Map,LeafReaderContext).mjava","sourceNew":null,"sourceOld":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n\n    final FunctionValues shapeValues = bboxValueSource.getValues(context, readerContext);\n\n    return new DoubleDocValues(this) {\n      @Override\n      public double doubleVal(int doc) throws IOException {\n        //? limit to Rect or call getBoundingBox()? latter would encourage bad practice\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        return rect==null ? 0 : score(rect, null);\n      }\n\n      @Override\n      public boolean exists(int doc) throws IOException {\n        return shapeValues.exists(doc);\n      }\n\n      @Override\n      public Explanation explain(int doc) throws IOException {\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        if (rect == null) {\n          return Explanation.noMatch(\"no rect\");\n        }\n        AtomicReference<Explanation> explanation = new AtomicReference<>();\n        score(rect, explanation);\n        return explanation.get();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98f11c416d30e556e0004a9a84960702d12d35b1","date":1498628359,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxSimilarityValueSource#getValues(Map,LeafReaderContext).mjava","sourceNew":null,"sourceOld":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n\n    final FunctionValues shapeValues = bboxValueSource.getValues(context, readerContext);\n\n    return new DoubleDocValues(this) {\n      @Override\n      public double doubleVal(int doc) throws IOException {\n        //? limit to Rect or call getBoundingBox()? latter would encourage bad practice\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        return rect==null ? 0 : score(rect, null);\n      }\n\n      @Override\n      public boolean exists(int doc) throws IOException {\n        return shapeValues.exists(doc);\n      }\n\n      @Override\n      public Explanation explain(int doc) throws IOException {\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        if (rect == null) {\n          return Explanation.noMatch(\"no rect\");\n        }\n        AtomicReference<Explanation> explanation = new AtomicReference<>();\n        score(rect, explanation);\n        return explanation.get();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxSimilarityValueSource#getValues(Map,LeafReaderContext).mjava","sourceNew":null,"sourceOld":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n\n    final FunctionValues shapeValues = bboxValueSource.getValues(context, readerContext);\n\n    return new DoubleDocValues(this) {\n      @Override\n      public double doubleVal(int doc) throws IOException {\n        //? limit to Rect or call getBoundingBox()? latter would encourage bad practice\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        return rect==null ? 0 : score(rect, null);\n      }\n\n      @Override\n      public boolean exists(int doc) throws IOException {\n        return shapeValues.exists(doc);\n      }\n\n      @Override\n      public Explanation explain(int doc) throws IOException {\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        if (rect == null) {\n          return Explanation.noMatch(\"no rect\");\n        }\n        AtomicReference<Explanation> explanation = new AtomicReference<>();\n        score(rect, explanation);\n        return explanation.get();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","112d77ac8d3e10a362516ad834c9a11d35c94234"],"32b9119890a8e82252b6cc341ac491d18fa1e49b":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["af2638813028b254a88b418ebeafb541afb49653","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["af2638813028b254a88b418ebeafb541afb49653"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28288370235ed02234a64753cdbf0c6ec096304a":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","32b9119890a8e82252b6cc341ac491d18fa1e49b"],"98f11c416d30e556e0004a9a84960702d12d35b1":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","32b9119890a8e82252b6cc341ac491d18fa1e49b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["af2638813028b254a88b418ebeafb541afb49653","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"32b9119890a8e82252b6cc341ac491d18fa1e49b":["28288370235ed02234a64753cdbf0c6ec096304a","98f11c416d30e556e0004a9a84960702d12d35b1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["32b9119890a8e82252b6cc341ac491d18fa1e49b","28288370235ed02234a64753cdbf0c6ec096304a","98f11c416d30e556e0004a9a84960702d12d35b1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"98f11c416d30e556e0004a9a84960702d12d35b1":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["98f11c416d30e556e0004a9a84960702d12d35b1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}