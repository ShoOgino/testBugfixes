{"path":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#toSolrInputDocument(String,SolrInputDocument,Map[String,Object]).mjava","commits":[{"id":"073f1aa70444ec64f3e216816af2a3b43fa38fe7","date":1488920481,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#toSolrInputDocument(String,SolrInputDocument,Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  public static void toSolrInputDocument(String prefix, SolrInputDocument doc, Map<String, Object> map) {\n    for (Map.Entry<String, Object> entry : map.entrySet()) {\n      if (entry.getValue() instanceof Map) { // flatten recursively\n        toSolrInputDocument(entry.getKey(), doc, (Map<String, Object>)entry.getValue());\n      } else {\n        String key = prefix != null ? prefix + \".\" + entry.getKey() : entry.getKey();\n        doc.addField(key, entry.getValue());\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f34d83c894e07c24f5f957820777b5da2cc29e5a","date":1489491395,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#toSolrInputDocument(String,SolrInputDocument,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#toSolrInputDocument(String,SolrInputDocument,Map[String,Object]).mjava","sourceNew":"  public static void toSolrInputDocument(String prefix, SolrInputDocument doc, Object o) {\n    if (!(o instanceof Map)) {\n      String key = prefix != null ? prefix : VALUE;\n      doc.addField(key, o);\n      return;\n    }\n    Map<String, Object> map = (Map<String, Object>)o;\n    for (Map.Entry<String, Object> entry : map.entrySet()) {\n      if (entry.getValue() instanceof Map) { // flatten recursively\n        toSolrInputDocument(entry.getKey(), doc, entry.getValue());\n      } else {\n        String key = prefix != null ? prefix + \".\" + entry.getKey() : entry.getKey();\n        doc.addField(key, entry.getValue());\n      }\n    }\n  }\n\n","sourceOld":"  public static void toSolrInputDocument(String prefix, SolrInputDocument doc, Map<String, Object> map) {\n    for (Map.Entry<String, Object> entry : map.entrySet()) {\n      if (entry.getValue() instanceof Map) { // flatten recursively\n        toSolrInputDocument(entry.getKey(), doc, (Map<String, Object>)entry.getValue());\n      } else {\n        String key = prefix != null ? prefix + \".\" + entry.getKey() : entry.getKey();\n        doc.addField(key, entry.getValue());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d5e442cae8cd58c4f22df43dacbd0018fc0ac1b","date":1489651910,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#toSolrInputDocument(String,SolrInputDocument,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#toSolrInputDocument(String,SolrInputDocument,Map[String,Object]).mjava","sourceNew":"  public static void toSolrInputDocument(String prefix, SolrInputDocument doc, Object o) {\n    if (!(o instanceof Map)) {\n      String key = prefix != null ? prefix : VALUE;\n      doc.addField(key, o);\n      return;\n    }\n    Map<String, Object> map = (Map<String, Object>)o;\n    for (Map.Entry<String, Object> entry : map.entrySet()) {\n      if (entry.getValue() instanceof Map) { // flatten recursively\n        toSolrInputDocument(entry.getKey(), doc, entry.getValue());\n      } else {\n        String key = prefix != null ? prefix + \".\" + entry.getKey() : entry.getKey();\n        doc.addField(key, entry.getValue());\n      }\n    }\n  }\n\n","sourceOld":"  public static void toSolrInputDocument(String prefix, SolrInputDocument doc, Map<String, Object> map) {\n    for (Map.Entry<String, Object> entry : map.entrySet()) {\n      if (entry.getValue() instanceof Map) { // flatten recursively\n        toSolrInputDocument(entry.getKey(), doc, (Map<String, Object>)entry.getValue());\n      } else {\n        String key = prefix != null ? prefix + \".\" + entry.getKey() : entry.getKey();\n        doc.addField(key, entry.getValue());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab68488225b6a6c357dda72ed11dedca9914a192","date":1490013111,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#toSolrInputDocument(String,SolrInputDocument,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#toSolrInputDocument(String,SolrInputDocument,Map[String,Object]).mjava","sourceNew":"  public static void toSolrInputDocument(String prefix, SolrInputDocument doc, Object o) {\n    if (!(o instanceof Map)) {\n      String key = prefix != null ? prefix : VALUE;\n      doc.addField(key, o);\n      return;\n    }\n    Map<String, Object> map = (Map<String, Object>)o;\n    for (Map.Entry<String, Object> entry : map.entrySet()) {\n      if (entry.getValue() instanceof Map) { // flatten recursively\n        toSolrInputDocument(entry.getKey(), doc, entry.getValue());\n      } else {\n        String key = prefix != null ? prefix + \".\" + entry.getKey() : entry.getKey();\n        doc.addField(key, entry.getValue());\n      }\n    }\n  }\n\n","sourceOld":"  public static void toSolrInputDocument(String prefix, SolrInputDocument doc, Map<String, Object> map) {\n    for (Map.Entry<String, Object> entry : map.entrySet()) {\n      if (entry.getValue() instanceof Map) { // flatten recursively\n        toSolrInputDocument(entry.getKey(), doc, (Map<String, Object>)entry.getValue());\n      } else {\n        String key = prefix != null ? prefix + \".\" + entry.getKey() : entry.getKey();\n        doc.addField(key, entry.getValue());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"073f1aa70444ec64f3e216816af2a3b43fa38fe7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f34d83c894e07c24f5f957820777b5da2cc29e5a":["073f1aa70444ec64f3e216816af2a3b43fa38fe7"],"ab68488225b6a6c357dda72ed11dedca9914a192":["073f1aa70444ec64f3e216816af2a3b43fa38fe7","0d5e442cae8cd58c4f22df43dacbd0018fc0ac1b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f34d83c894e07c24f5f957820777b5da2cc29e5a"],"0d5e442cae8cd58c4f22df43dacbd0018fc0ac1b":["073f1aa70444ec64f3e216816af2a3b43fa38fe7"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["073f1aa70444ec64f3e216816af2a3b43fa38fe7"],"073f1aa70444ec64f3e216816af2a3b43fa38fe7":["f34d83c894e07c24f5f957820777b5da2cc29e5a","ab68488225b6a6c357dda72ed11dedca9914a192","0d5e442cae8cd58c4f22df43dacbd0018fc0ac1b"],"f34d83c894e07c24f5f957820777b5da2cc29e5a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ab68488225b6a6c357dda72ed11dedca9914a192":[],"0d5e442cae8cd58c4f22df43dacbd0018fc0ac1b":["ab68488225b6a6c357dda72ed11dedca9914a192"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ab68488225b6a6c357dda72ed11dedca9914a192","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}