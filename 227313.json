{"path":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase.MockSynonymFilter#incrementToken().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase.MockSynonymFilter#incrementToken().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase.MockSynonymFilter#incrementToken().mjava","sourceNew":"    @Override\n    public final boolean incrementToken() throws IOException {\n      if (addSynonym) { // inject our synonym\n        clearAttributes();\n        termAtt.setEmpty().append(\"dog\");\n        posIncAtt.setPositionIncrement(0);\n        addSynonym = false;\n        return true;\n      }\n      \n      if (input.incrementToken()) {\n        addSynonym = termAtt.toString().equals(\"dogs\");\n        return true;\n      } else {\n        return false;\n      }\n    } \n\n","sourceOld":"    @Override\n    public final boolean incrementToken() throws IOException {\n      if (addSynonym) { // inject our synonym\n        clearAttributes();\n        termAtt.setEmpty().append(\"dog\");\n        posIncAtt.setPositionIncrement(0);\n        addSynonym = false;\n        return true;\n      }\n      \n      if (input.incrementToken()) {\n        addSynonym = termAtt.toString().equals(\"dogs\");\n        return true;\n      } else {\n        return false;\n      }\n    } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"138a352a6d4e54824d0275bc7aa1b784e78c81fe","date":1467756222,"type":4,"author":"Steve Rowe","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase.MockSynonymFilter#incrementToken().mjava","sourceNew":null,"sourceOld":"    @Override\n    public final boolean incrementToken() throws IOException {\n      if (addSynonym) { // inject our synonym\n        clearAttributes();\n        termAtt.setEmpty().append(\"dog\");\n        posIncAtt.setPositionIncrement(0);\n        addSynonym = false;\n        return true;\n      }\n      \n      if (input.incrementToken()) {\n        addSynonym = termAtt.toString().equals(\"dogs\");\n        return true;\n      } else {\n        return false;\n      }\n    } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase.MockSynonymFilter#incrementToken().mjava","sourceNew":null,"sourceOld":"    @Override\n    public final boolean incrementToken() throws IOException {\n      if (addSynonym) { // inject our synonym\n        clearAttributes();\n        termAtt.setEmpty().append(\"dog\");\n        posIncAtt.setPositionIncrement(0);\n        addSynonym = false;\n        return true;\n      }\n      \n      if (input.incrementToken()) {\n        addSynonym = termAtt.toString().equals(\"dogs\");\n        return true;\n      } else {\n        return false;\n      }\n    } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"138a352a6d4e54824d0275bc7aa1b784e78c81fe":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["b89678825b68eccaf09e6ab71675fc0b0af1e099","138a352a6d4e54824d0275bc7aa1b784e78c81fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["138a352a6d4e54824d0275bc7aa1b784e78c81fe"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["138a352a6d4e54824d0275bc7aa1b784e78c81fe","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"138a352a6d4e54824d0275bc7aa1b784e78c81fe":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}