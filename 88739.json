{"path":"solr/core/src/test/org/apache/solr/cloud/autoscaling/SearchRateTriggerIntegrationTest.TestSearchRateAction#process(TriggerEvent,ActionContext).mjava","commits":[{"id":"deb2c2675f0afd2a8c2722ff302e4b4b5eb872b4","date":1522388336,"type":2,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/SearchRateTriggerIntegrationTest.TestSearchRateAction#process(TriggerEvent,ActionContext).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/TriggerIntegrationTest.TestSearchRateAction#process(TriggerEvent,ActionContext).mjava","sourceNew":"    @Override\n    public void process(TriggerEvent event, ActionContext context) throws Exception {\n      try {\n        events.add(event);\n        long currentTimeNanos = timeSource.getTimeNs();\n        long eventTimeNanos = event.getEventTime();\n        long waitForNanos = TimeUnit.NANOSECONDS.convert(waitForSeconds, TimeUnit.SECONDS) - WAIT_FOR_DELTA_NANOS;\n        if (currentTimeNanos - eventTimeNanos <= waitForNanos) {\n          fail(event.source + \" was fired before the configured waitFor period\");\n        }\n        triggerFiredLatch.countDown();\n      } catch (Throwable t) {\n        log.debug(\"--throwable\", t);\n        throw t;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void process(TriggerEvent event, ActionContext context) throws Exception {\n      try {\n        events.add(event);\n        long currentTimeNanos = timeSource.getTimeNs();\n        long eventTimeNanos = event.getEventTime();\n        long waitForNanos = TimeUnit.NANOSECONDS.convert(waitForSeconds, TimeUnit.SECONDS) - WAIT_FOR_DELTA_NANOS;\n        if (currentTimeNanos - eventTimeNanos <= waitForNanos) {\n          fail(event.source + \" was fired before the configured waitFor period\");\n        }\n        getTriggerFiredLatch().countDown();\n      } catch (Throwable t) {\n        log.debug(\"--throwable\", t);\n        throw t;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acfe8d3b837b6b66eaddf114bb99cf9e2257764d","date":1522406637,"type":2,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/SearchRateTriggerIntegrationTest.TestSearchRateAction#process(TriggerEvent,ActionContext).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/TriggerIntegrationTest.TestSearchRateAction#process(TriggerEvent,ActionContext).mjava","sourceNew":"    @Override\n    public void process(TriggerEvent event, ActionContext context) throws Exception {\n      try {\n        events.add(event);\n        long currentTimeNanos = timeSource.getTimeNs();\n        long eventTimeNanos = event.getEventTime();\n        long waitForNanos = TimeUnit.NANOSECONDS.convert(waitForSeconds, TimeUnit.SECONDS) - WAIT_FOR_DELTA_NANOS;\n        if (currentTimeNanos - eventTimeNanos <= waitForNanos) {\n          fail(event.source + \" was fired before the configured waitFor period\");\n        }\n        triggerFiredLatch.countDown();\n      } catch (Throwable t) {\n        log.debug(\"--throwable\", t);\n        throw t;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void process(TriggerEvent event, ActionContext context) throws Exception {\n      try {\n        events.add(event);\n        long currentTimeNanos = timeSource.getTimeNs();\n        long eventTimeNanos = event.getEventTime();\n        long waitForNanos = TimeUnit.NANOSECONDS.convert(waitForSeconds, TimeUnit.SECONDS) - WAIT_FOR_DELTA_NANOS;\n        if (currentTimeNanos - eventTimeNanos <= waitForNanos) {\n          fail(event.source + \" was fired before the configured waitFor period\");\n        }\n        getTriggerFiredLatch().countDown();\n      } catch (Throwable t) {\n        log.debug(\"--throwable\", t);\n        throw t;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0b90ab8b228b1f7a05d5ddfbe879ce962d8964a","date":1524514741,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/SearchRateTriggerIntegrationTest.TestSearchRateAction#process(TriggerEvent,ActionContext).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void process(TriggerEvent event, ActionContext context) throws Exception {\n      try {\n        events.add(event);\n        long currentTimeNanos = timeSource.getTimeNs();\n        long eventTimeNanos = event.getEventTime();\n        long waitForNanos = TimeUnit.NANOSECONDS.convert(waitForSeconds, TimeUnit.SECONDS) - WAIT_FOR_DELTA_NANOS;\n        if (currentTimeNanos - eventTimeNanos <= waitForNanos) {\n          fail(event.source + \" was fired before the configured waitFor period\");\n        }\n        triggerFiredLatch.countDown();\n      } catch (Throwable t) {\n        log.debug(\"--throwable\", t);\n        throw t;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c0b90ab8b228b1f7a05d5ddfbe879ce962d8964a":["acfe8d3b837b6b66eaddf114bb99cf9e2257764d"],"deb2c2675f0afd2a8c2722ff302e4b4b5eb872b4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"acfe8d3b837b6b66eaddf114bb99cf9e2257764d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","deb2c2675f0afd2a8c2722ff302e4b4b5eb872b4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c0b90ab8b228b1f7a05d5ddfbe879ce962d8964a"]},"commit2Childs":{"c0b90ab8b228b1f7a05d5ddfbe879ce962d8964a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"deb2c2675f0afd2a8c2722ff302e4b4b5eb872b4":["acfe8d3b837b6b66eaddf114bb99cf9e2257764d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["deb2c2675f0afd2a8c2722ff302e4b4b5eb872b4","acfe8d3b837b6b66eaddf114bb99cf9e2257764d"],"acfe8d3b837b6b66eaddf114bb99cf9e2257764d":["c0b90ab8b228b1f7a05d5ddfbe879ce962d8964a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}