{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#serializeToStreamWriter(OutputStreamWriter).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#serializeToStreamWriter(OutputStreamWriter).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#serializeToStreamWriter(OutputStreamWriter).mjava","sourceNew":"  /**\n   * Serializes the content of this CategoryPath to a byte stream, using UTF-8\n   * encoding to convert characters to bytes, and treating the ends as 16-bit\n   * characters. \n   * \n   * @param osw\n   *          The output byte stream.\n   * @throws IOException\n   *           If there are encoding errors.\n   */\n  // TODO (Facet): consolidate all de/serialize method names to\n  // serialize() and unserialize()\n  public void serializeToStreamWriter(OutputStreamWriter osw)\n      throws IOException {\n    osw.write(this.ncomponents);\n    if (this.ncomponents <= 0) {\n      return;\n    }\n    for (int j = 0; j < this.ncomponents; j++) {\n      osw.write(this.ends[j]);\n    }\n    osw.write(this.chars, 0, this.ends[this.ncomponents - 1]);\n  }\n\n","sourceOld":"  /**\n   * Serializes the content of this CategoryPath to a byte stream, using UTF-8\n   * encoding to convert characters to bytes, and treating the ends as 16-bit\n   * characters. \n   * \n   * @param osw\n   *          The output byte stream.\n   * @throws IOException\n   *           If there are encoding errors.\n   */\n  // TODO (Facet): consolidate all de/serialize method names to\n  // serialize() and unserialize()\n  public void serializeToStreamWriter(OutputStreamWriter osw)\n      throws IOException {\n    osw.write(this.ncomponents);\n    if (this.ncomponents <= 0) {\n      return;\n    }\n    for (int j = 0; j < this.ncomponents; j++) {\n      osw.write(this.ends[j]);\n    }\n    osw.write(this.chars, 0, this.ends[this.ncomponents - 1]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1","date":1357499264,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#serializeToStreamWriter(OutputStreamWriter).mjava","sourceNew":null,"sourceOld":"  /**\n   * Serializes the content of this CategoryPath to a byte stream, using UTF-8\n   * encoding to convert characters to bytes, and treating the ends as 16-bit\n   * characters. \n   * \n   * @param osw\n   *          The output byte stream.\n   * @throws IOException\n   *           If there are encoding errors.\n   */\n  // TODO (Facet): consolidate all de/serialize method names to\n  // serialize() and unserialize()\n  public void serializeToStreamWriter(OutputStreamWriter osw)\n      throws IOException {\n    osw.write(this.ncomponents);\n    if (this.ncomponents <= 0) {\n      return;\n    }\n    for (int j = 0; j < this.ncomponents; j++) {\n      osw.write(this.ends[j]);\n    }\n    osw.write(this.chars, 0, this.ends[this.ncomponents - 1]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#serializeToStreamWriter(OutputStreamWriter).mjava","sourceNew":null,"sourceOld":"  /**\n   * Serializes the content of this CategoryPath to a byte stream, using UTF-8\n   * encoding to convert characters to bytes, and treating the ends as 16-bit\n   * characters. \n   * \n   * @param osw\n   *          The output byte stream.\n   * @throws IOException\n   *           If there are encoding errors.\n   */\n  // TODO (Facet): consolidate all de/serialize method names to\n  // serialize() and unserialize()\n  public void serializeToStreamWriter(OutputStreamWriter osw)\n      throws IOException {\n    osw.write(this.ncomponents);\n    if (this.ncomponents <= 0) {\n      return;\n    }\n    for (int j = 0; j < this.ncomponents; j++) {\n      osw.write(this.ends[j]);\n    }\n    osw.write(this.chars, 0, this.ends[this.ncomponents - 1]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b89678825b68eccaf09e6ab71675fc0b0af1e099","d90771c07d45c6ad884c5ef9cb3a6eeb257238d1"],"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d90771c07d45c6ad884c5ef9cb3a6eeb257238d1"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d90771c07d45c6ad884c5ef9cb3a6eeb257238d1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}