{"path":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/LineDocSourceTest#writeDocsToFile(BufferedWriter,boolean,Properties).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/LineDocSourceTest#writeDocsToFile(BufferedWriter,boolean,Properties).mjava","pathOld":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/LineDocSourceTest#writeDocsToFile(BufferedWriter,boolean,Properties).mjava","sourceNew":"  private void writeDocsToFile(BufferedWriter writer, boolean addHeader, Properties otherFields) throws IOException {\n    if (addHeader) {\n      writer.write(WriteLineDocTask.FIELDS_HEADER_INDICATOR);\n      writer.write(WriteLineDocTask.SEP);\n      writer.write(DocMaker.TITLE_FIELD);\n      writer.write(WriteLineDocTask.SEP);\n      writer.write(DocMaker.DATE_FIELD);\n      writer.write(WriteLineDocTask.SEP);\n      writer.write(DocMaker.BODY_FIELD);\n      if (otherFields!=null) {\n        // additional field names in the header \n        for (Object fn : otherFields.keySet()) {\n          writer.write(WriteLineDocTask.SEP);\n          writer.write(fn.toString());\n        }\n      }\n      writer.newLine();\n    }\n    StringBuilder doc = new StringBuilder();\n    doc.append(\"title\").append(WriteLineDocTask.SEP).append(\"date\").append(WriteLineDocTask.SEP).append(DocMaker.BODY_FIELD);\n    if (otherFields!=null) {\n      // additional field values in the doc line \n      for (Object fv : otherFields.values()) {\n        doc.append(WriteLineDocTask.SEP).append(fv.toString());\n      }\n    }\n    writer.write(doc.toString());\n    writer.newLine();\n  }\n\n","sourceOld":"  private void writeDocsToFile(BufferedWriter writer, boolean addHeader, Properties otherFields) throws IOException {\n    if (addHeader) {\n      writer.write(WriteLineDocTask.FIELDS_HEADER_INDICATOR);\n      writer.write(WriteLineDocTask.SEP);\n      writer.write(DocMaker.TITLE_FIELD);\n      writer.write(WriteLineDocTask.SEP);\n      writer.write(DocMaker.DATE_FIELD);\n      writer.write(WriteLineDocTask.SEP);\n      writer.write(DocMaker.BODY_FIELD);\n      if (otherFields!=null) {\n        // additional field names in the header \n        for (Object fn : otherFields.keySet()) {\n          writer.write(WriteLineDocTask.SEP);\n          writer.write(fn.toString());\n        }\n      }\n      writer.newLine();\n    }\n    StringBuilder doc = new StringBuilder();\n    doc.append(\"title\").append(WriteLineDocTask.SEP).append(\"date\").append(WriteLineDocTask.SEP).append(DocMaker.BODY_FIELD);\n    if (otherFields!=null) {\n      // additional field values in the doc line \n      for (Object fv : otherFields.values()) {\n        doc.append(WriteLineDocTask.SEP).append(fv.toString());\n      }\n    }\n    writer.write(doc.toString());\n    writer.newLine();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}