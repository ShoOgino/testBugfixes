{"path":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector#create(Sort,int,boolean,boolean,boolean).mjava","commits":[{"id":"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f","date":1421314520,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector#create(Sort,int,boolean,boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector#create(Sort,int,boolean,boolean,boolean,boolean).mjava","sourceNew":"  /**\n   * Creates a new {@link TopFieldCollector} from the given\n   * arguments.\n   *\n   * <p><b>NOTE</b>: The instances returned by this method\n   * pre-allocate a full array of length\n   * <code>numHits</code>.\n   *\n   * @param sort\n   *          the sort criteria (SortFields).\n   * @param numHits\n   *          the number of results to collect.\n   * @param fillFields\n   *          specifies whether the actual field values should be returned on\n   *          the results (FieldDoc).\n   * @param trackDocScores\n   *          specifies whether document scores should be tracked and set on the\n   *          results. Note that if set to false, then the results' scores will\n   *          be set to Float.NaN. Setting this to true affects performance, as\n   *          it incurs the score computation on each competitive result.\n   *          Therefore if document scores are not required by the application,\n   *          it is recommended to set it to false.\n   * @param trackMaxScore\n   *          specifies whether the query's maxScore should be tracked and set\n   *          on the resulting {@link TopDocs}. Note that if set to false,\n   *          {@link TopDocs#getMaxScore()} returns Float.NaN. Setting this to\n   *          true affects performance as it incurs the score computation on\n   *          each result. Also, setting this true automatically sets\n   *          <code>trackDocScores</code> to true as well.\n   * @return a {@link TopFieldCollector} instance which will sort the results by\n   *         the sort criteria.\n   * @throws IOException if there is a low-level I/O error\n   */\n  public static TopFieldCollector create(Sort sort, int numHits,\n      boolean fillFields, boolean trackDocScores, boolean trackMaxScore)\n      throws IOException {\n    return create(sort, numHits, null, fillFields, trackDocScores, trackMaxScore);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link TopFieldCollector} from the given\n   * arguments.\n   *\n   * <p><b>NOTE</b>: The instances returned by this method\n   * pre-allocate a full array of length\n   * <code>numHits</code>.\n   *\n   * @param sort\n   *          the sort criteria (SortFields).\n   * @param numHits\n   *          the number of results to collect.\n   * @param fillFields\n   *          specifies whether the actual field values should be returned on\n   *          the results (FieldDoc).\n   * @param trackDocScores\n   *          specifies whether document scores should be tracked and set on the\n   *          results. Note that if set to false, then the results' scores will\n   *          be set to Float.NaN. Setting this to true affects performance, as\n   *          it incurs the score computation on each competitive result.\n   *          Therefore if document scores are not required by the application,\n   *          it is recommended to set it to false.\n   * @param trackMaxScore\n   *          specifies whether the query's maxScore should be tracked and set\n   *          on the resulting {@link TopDocs}. Note that if set to false,\n   *          {@link TopDocs#getMaxScore()} returns Float.NaN. Setting this to\n   *          true affects performance as it incurs the score computation on\n   *          each result. Also, setting this true automatically sets\n   *          <code>trackDocScores</code> to true as well.\n   * @param docsScoredInOrder\n   *          specifies whether documents are scored in doc Id order or not by\n   *          the given {@link Scorer} in {@link LeafCollector#setScorer(Scorer)}.\n   * @return a {@link TopFieldCollector} instance which will sort the results by\n   *         the sort criteria.\n   * @throws IOException if there is a low-level I/O error\n   */\n  public static TopFieldCollector create(Sort sort, int numHits,\n      boolean fillFields, boolean trackDocScores, boolean trackMaxScore,\n      boolean docsScoredInOrder)\n      throws IOException {\n    return create(sort, numHits, null, fillFields, trackDocScores, trackMaxScore, docsScoredInOrder);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ae958a739da1866696f442384393ba2f13e33e5","date":1491819018,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector#create(Sort,int,boolean,boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector#create(Sort,int,boolean,boolean,boolean).mjava","sourceNew":"  /**\n   * Creates a new {@link TopFieldCollector} from the given\n   * arguments.\n   *\n   * <p><b>NOTE</b>: The instances returned by this method\n   * pre-allocate a full array of length\n   * <code>numHits</code>.\n   *\n   * @param sort\n   *          the sort criteria (SortFields).\n   * @param numHits\n   *          the number of results to collect.\n   * @param fillFields\n   *          specifies whether the actual field values should be returned on\n   *          the results (FieldDoc).\n   * @param trackDocScores\n   *          specifies whether document scores should be tracked and set on the\n   *          results. Note that if set to false, then the results' scores will\n   *          be set to Float.NaN. Setting this to true affects performance, as\n   *          it incurs the score computation on each competitive result.\n   *          Therefore if document scores are not required by the application,\n   *          it is recommended to set it to false.\n   * @param trackMaxScore\n   *          specifies whether the query's maxScore should be tracked and set\n   *          on the resulting {@link TopDocs}. Note that if set to false,\n   *          {@link TopDocs#getMaxScore()} returns Float.NaN. Setting this to\n   *          true affects performance as it incurs the score computation on\n   *          each result. Also, setting this true automatically sets\n   *          <code>trackDocScores</code> to true as well.\n   * @return a {@link TopFieldCollector} instance which will sort the results by\n   *         the sort criteria.\n   */\n  public static TopFieldCollector create(Sort sort, int numHits,\n      boolean fillFields, boolean trackDocScores, boolean trackMaxScore) {\n    return create(sort, numHits, null, fillFields, trackDocScores, trackMaxScore);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link TopFieldCollector} from the given\n   * arguments.\n   *\n   * <p><b>NOTE</b>: The instances returned by this method\n   * pre-allocate a full array of length\n   * <code>numHits</code>.\n   *\n   * @param sort\n   *          the sort criteria (SortFields).\n   * @param numHits\n   *          the number of results to collect.\n   * @param fillFields\n   *          specifies whether the actual field values should be returned on\n   *          the results (FieldDoc).\n   * @param trackDocScores\n   *          specifies whether document scores should be tracked and set on the\n   *          results. Note that if set to false, then the results' scores will\n   *          be set to Float.NaN. Setting this to true affects performance, as\n   *          it incurs the score computation on each competitive result.\n   *          Therefore if document scores are not required by the application,\n   *          it is recommended to set it to false.\n   * @param trackMaxScore\n   *          specifies whether the query's maxScore should be tracked and set\n   *          on the resulting {@link TopDocs}. Note that if set to false,\n   *          {@link TopDocs#getMaxScore()} returns Float.NaN. Setting this to\n   *          true affects performance as it incurs the score computation on\n   *          each result. Also, setting this true automatically sets\n   *          <code>trackDocScores</code> to true as well.\n   * @return a {@link TopFieldCollector} instance which will sort the results by\n   *         the sort criteria.\n   * @throws IOException if there is a low-level I/O error\n   */\n  public static TopFieldCollector create(Sort sort, int numHits,\n      boolean fillFields, boolean trackDocScores, boolean trackMaxScore)\n      throws IOException {\n    return create(sort, numHits, null, fillFields, trackDocScores, trackMaxScore);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector#create(Sort,int,boolean,boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector#create(Sort,int,boolean,boolean,boolean).mjava","sourceNew":"  /**\n   * Creates a new {@link TopFieldCollector} from the given\n   * arguments.\n   *\n   * <p><b>NOTE</b>: The instances returned by this method\n   * pre-allocate a full array of length\n   * <code>numHits</code>.\n   *\n   * @param sort\n   *          the sort criteria (SortFields).\n   * @param numHits\n   *          the number of results to collect.\n   * @param fillFields\n   *          specifies whether the actual field values should be returned on\n   *          the results (FieldDoc).\n   * @param trackDocScores\n   *          specifies whether document scores should be tracked and set on the\n   *          results. Note that if set to false, then the results' scores will\n   *          be set to Float.NaN. Setting this to true affects performance, as\n   *          it incurs the score computation on each competitive result.\n   *          Therefore if document scores are not required by the application,\n   *          it is recommended to set it to false.\n   * @param trackMaxScore\n   *          specifies whether the query's maxScore should be tracked and set\n   *          on the resulting {@link TopDocs}. Note that if set to false,\n   *          {@link TopDocs#getMaxScore()} returns Float.NaN. Setting this to\n   *          true affects performance as it incurs the score computation on\n   *          each result. Also, setting this true automatically sets\n   *          <code>trackDocScores</code> to true as well.\n   * @return a {@link TopFieldCollector} instance which will sort the results by\n   *         the sort criteria.\n   */\n  public static TopFieldCollector create(Sort sort, int numHits,\n      boolean fillFields, boolean trackDocScores, boolean trackMaxScore) {\n    return create(sort, numHits, null, fillFields, trackDocScores, trackMaxScore);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link TopFieldCollector} from the given\n   * arguments.\n   *\n   * <p><b>NOTE</b>: The instances returned by this method\n   * pre-allocate a full array of length\n   * <code>numHits</code>.\n   *\n   * @param sort\n   *          the sort criteria (SortFields).\n   * @param numHits\n   *          the number of results to collect.\n   * @param fillFields\n   *          specifies whether the actual field values should be returned on\n   *          the results (FieldDoc).\n   * @param trackDocScores\n   *          specifies whether document scores should be tracked and set on the\n   *          results. Note that if set to false, then the results' scores will\n   *          be set to Float.NaN. Setting this to true affects performance, as\n   *          it incurs the score computation on each competitive result.\n   *          Therefore if document scores are not required by the application,\n   *          it is recommended to set it to false.\n   * @param trackMaxScore\n   *          specifies whether the query's maxScore should be tracked and set\n   *          on the resulting {@link TopDocs}. Note that if set to false,\n   *          {@link TopDocs#getMaxScore()} returns Float.NaN. Setting this to\n   *          true affects performance as it incurs the score computation on\n   *          each result. Also, setting this true automatically sets\n   *          <code>trackDocScores</code> to true as well.\n   * @return a {@link TopFieldCollector} instance which will sort the results by\n   *         the sort criteria.\n   * @throws IOException if there is a low-level I/O error\n   */\n  public static TopFieldCollector create(Sort sort, int numHits,\n      boolean fillFields, boolean trackDocScores, boolean trackMaxScore)\n      throws IOException {\n    return create(sort, numHits, null, fillFields, trackDocScores, trackMaxScore);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"404d1ab7f6f396235047017c88d545fec15dafb7","date":1511975378,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector#create(Sort,int,boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector#create(Sort,int,boolean,boolean,boolean).mjava","sourceNew":"  /**\n   * Creates a new {@link TopFieldCollector} from the given\n   * arguments.\n   *\n   * <p><b>NOTE</b>: The instances returned by this method\n   * pre-allocate a full array of length\n   * <code>numHits</code>.\n   *\n   * @param sort\n   *          the sort criteria (SortFields).\n   * @param numHits\n   *          the number of results to collect.\n   * @param fillFields\n   *          specifies whether the actual field values should be returned on\n   *          the results (FieldDoc).\n   * @param trackDocScores\n   *          specifies whether document scores should be tracked and set on the\n   *          results. Note that if set to false, then the results' scores will\n   *          be set to Float.NaN. Setting this to true affects performance, as\n   *          it incurs the score computation on each competitive result.\n   *          Therefore if document scores are not required by the application,\n   *          it is recommended to set it to false.\n   * @param trackMaxScore\n   *          specifies whether the query's maxScore should be tracked and set\n   *          on the resulting {@link TopDocs}. Note that if set to false,\n   *          {@link TopDocs#getMaxScore()} returns Float.NaN. Setting this to\n   *          true affects performance as it incurs the score computation on\n   *          each result. Also, setting this true automatically sets\n   *          <code>trackDocScores</code> to true as well.\n   * @param trackTotalHits\n   *          specifies whether the total number of hits should be tracked. If\n   *          set to false, the value of {@link TopFieldDocs#totalHits} will be\n   *          approximated.\n   * @return a {@link TopFieldCollector} instance which will sort the results by\n   *         the sort criteria.\n   */\n  public static TopFieldCollector create(Sort sort, int numHits,\n      boolean fillFields, boolean trackDocScores, boolean trackMaxScore, boolean trackTotalHits) {\n    return create(sort, numHits, null, fillFields, trackDocScores, trackMaxScore, trackTotalHits);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link TopFieldCollector} from the given\n   * arguments.\n   *\n   * <p><b>NOTE</b>: The instances returned by this method\n   * pre-allocate a full array of length\n   * <code>numHits</code>.\n   *\n   * @param sort\n   *          the sort criteria (SortFields).\n   * @param numHits\n   *          the number of results to collect.\n   * @param fillFields\n   *          specifies whether the actual field values should be returned on\n   *          the results (FieldDoc).\n   * @param trackDocScores\n   *          specifies whether document scores should be tracked and set on the\n   *          results. Note that if set to false, then the results' scores will\n   *          be set to Float.NaN. Setting this to true affects performance, as\n   *          it incurs the score computation on each competitive result.\n   *          Therefore if document scores are not required by the application,\n   *          it is recommended to set it to false.\n   * @param trackMaxScore\n   *          specifies whether the query's maxScore should be tracked and set\n   *          on the resulting {@link TopDocs}. Note that if set to false,\n   *          {@link TopDocs#getMaxScore()} returns Float.NaN. Setting this to\n   *          true affects performance as it incurs the score computation on\n   *          each result. Also, setting this true automatically sets\n   *          <code>trackDocScores</code> to true as well.\n   * @return a {@link TopFieldCollector} instance which will sort the results by\n   *         the sort criteria.\n   */\n  public static TopFieldCollector create(Sort sort, int numHits,\n      boolean fillFields, boolean trackDocScores, boolean trackMaxScore) {\n    return create(sort, numHits, null, fillFields, trackDocScores, trackMaxScore);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1aad05eeff7818b0833c02ac6b743aa72054963b","date":1512093122,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector#create(Sort,int,boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector#create(Sort,int,boolean,boolean,boolean).mjava","sourceNew":"  /**\n   * Creates a new {@link TopFieldCollector} from the given\n   * arguments.\n   *\n   * <p><b>NOTE</b>: The instances returned by this method\n   * pre-allocate a full array of length\n   * <code>numHits</code>.\n   *\n   * @param sort\n   *          the sort criteria (SortFields).\n   * @param numHits\n   *          the number of results to collect.\n   * @param fillFields\n   *          specifies whether the actual field values should be returned on\n   *          the results (FieldDoc).\n   * @param trackDocScores\n   *          specifies whether document scores should be tracked and set on the\n   *          results. Note that if set to false, then the results' scores will\n   *          be set to Float.NaN. Setting this to true affects performance, as\n   *          it incurs the score computation on each competitive result.\n   *          Therefore if document scores are not required by the application,\n   *          it is recommended to set it to false.\n   * @param trackMaxScore\n   *          specifies whether the query's maxScore should be tracked and set\n   *          on the resulting {@link TopDocs}. Note that if set to false,\n   *          {@link TopDocs#getMaxScore()} returns Float.NaN. Setting this to\n   *          true affects performance as it incurs the score computation on\n   *          each result. Also, setting this true automatically sets\n   *          <code>trackDocScores</code> to true as well.\n   * @param trackTotalHits\n   *          specifies whether the total number of hits should be tracked. If\n   *          set to false, the value of {@link TopFieldDocs#totalHits} will be\n   *          approximated.\n   * @return a {@link TopFieldCollector} instance which will sort the results by\n   *         the sort criteria.\n   */\n  public static TopFieldCollector create(Sort sort, int numHits,\n      boolean fillFields, boolean trackDocScores, boolean trackMaxScore, boolean trackTotalHits) {\n    return create(sort, numHits, null, fillFields, trackDocScores, trackMaxScore, trackTotalHits);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link TopFieldCollector} from the given\n   * arguments.\n   *\n   * <p><b>NOTE</b>: The instances returned by this method\n   * pre-allocate a full array of length\n   * <code>numHits</code>.\n   *\n   * @param sort\n   *          the sort criteria (SortFields).\n   * @param numHits\n   *          the number of results to collect.\n   * @param fillFields\n   *          specifies whether the actual field values should be returned on\n   *          the results (FieldDoc).\n   * @param trackDocScores\n   *          specifies whether document scores should be tracked and set on the\n   *          results. Note that if set to false, then the results' scores will\n   *          be set to Float.NaN. Setting this to true affects performance, as\n   *          it incurs the score computation on each competitive result.\n   *          Therefore if document scores are not required by the application,\n   *          it is recommended to set it to false.\n   * @param trackMaxScore\n   *          specifies whether the query's maxScore should be tracked and set\n   *          on the resulting {@link TopDocs}. Note that if set to false,\n   *          {@link TopDocs#getMaxScore()} returns Float.NaN. Setting this to\n   *          true affects performance as it incurs the score computation on\n   *          each result. Also, setting this true automatically sets\n   *          <code>trackDocScores</code> to true as well.\n   * @return a {@link TopFieldCollector} instance which will sort the results by\n   *         the sort criteria.\n   */\n  public static TopFieldCollector create(Sort sort, int numHits,\n      boolean fillFields, boolean trackDocScores, boolean trackMaxScore) {\n    return create(sort, numHits, null, fillFields, trackDocScores, trackMaxScore);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81fff83bdb893c1471efd78f6a9a3ce4f98120b9","date":1531895937,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector#create(Sort,int,boolean,boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector#create(Sort,int,boolean,boolean,boolean,boolean).mjava","sourceNew":"  /**\n   * Creates a new {@link TopFieldCollector} from the given\n   * arguments.\n   *\n   * <p><b>NOTE</b>: The instances returned by this method\n   * pre-allocate a full array of length\n   * <code>numHits</code>.\n   *\n   * @param sort\n   *          the sort criteria (SortFields).\n   * @param numHits\n   *          the number of results to collect.\n   * @param fillFields\n   *          specifies whether the actual field values should be returned on\n   *          the results (FieldDoc).\n   * @param trackDocScores\n   *          specifies whether document scores should be tracked and set on the\n   *          results. Note that if set to false, then the results' scores will\n   *          be set to Float.NaN. Setting this to true affects performance, as\n   *          it incurs the score computation on each competitive result.\n   *          Therefore if document scores are not required by the application,\n   *          it is recommended to set it to false.\n   * @param trackTotalHits\n   *          specifies whether the total number of hits should be tracked. If\n   *          set to false, the value of {@link TopFieldDocs#totalHits} will be\n   *          approximated.\n   * @return a {@link TopFieldCollector} instance which will sort the results by\n   *         the sort criteria.\n   */\n  public static TopFieldCollector create(Sort sort, int numHits,\n      boolean fillFields, boolean trackDocScores, boolean trackTotalHits) {\n    return create(sort, numHits, null, fillFields, trackDocScores, trackTotalHits);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link TopFieldCollector} from the given\n   * arguments.\n   *\n   * <p><b>NOTE</b>: The instances returned by this method\n   * pre-allocate a full array of length\n   * <code>numHits</code>.\n   *\n   * @param sort\n   *          the sort criteria (SortFields).\n   * @param numHits\n   *          the number of results to collect.\n   * @param fillFields\n   *          specifies whether the actual field values should be returned on\n   *          the results (FieldDoc).\n   * @param trackDocScores\n   *          specifies whether document scores should be tracked and set on the\n   *          results. Note that if set to false, then the results' scores will\n   *          be set to Float.NaN. Setting this to true affects performance, as\n   *          it incurs the score computation on each competitive result.\n   *          Therefore if document scores are not required by the application,\n   *          it is recommended to set it to false.\n   * @param trackMaxScore\n   *          specifies whether the query's maxScore should be tracked and set\n   *          on the resulting {@link TopDocs}. Note that if set to false,\n   *          {@link TopDocs#getMaxScore()} returns Float.NaN. Setting this to\n   *          true affects performance as it incurs the score computation on\n   *          each result. Also, setting this true automatically sets\n   *          <code>trackDocScores</code> to true as well.\n   * @param trackTotalHits\n   *          specifies whether the total number of hits should be tracked. If\n   *          set to false, the value of {@link TopFieldDocs#totalHits} will be\n   *          approximated.\n   * @return a {@link TopFieldCollector} instance which will sort the results by\n   *         the sort criteria.\n   */\n  public static TopFieldCollector create(Sort sort, int numHits,\n      boolean fillFields, boolean trackDocScores, boolean trackMaxScore, boolean trackTotalHits) {\n    return create(sort, numHits, null, fillFields, trackDocScores, trackMaxScore, trackTotalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":0,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector#create(Sort,int,boolean,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a new {@link TopFieldCollector} from the given\n   * arguments.\n   *\n   * <p><b>NOTE</b>: The instances returned by this method\n   * pre-allocate a full array of length\n   * <code>numHits</code>.\n   *\n   * @param sort\n   *          the sort criteria (SortFields).\n   * @param numHits\n   *          the number of results to collect.\n   * @param fillFields\n   *          specifies whether the actual field values should be returned on\n   *          the results (FieldDoc).\n   * @param trackDocScores\n   *          specifies whether document scores should be tracked and set on the\n   *          results. Note that if set to false, then the results' scores will\n   *          be set to Float.NaN. Setting this to true affects performance, as\n   *          it incurs the score computation on each competitive result.\n   *          Therefore if document scores are not required by the application,\n   *          it is recommended to set it to false.\n   * @param trackTotalHits\n   *          specifies whether the total number of hits should be tracked. If\n   *          set to false, the value of {@link TopFieldDocs#totalHits} will be\n   *          approximated.\n   * @return a {@link TopFieldCollector} instance which will sort the results by\n   *         the sort criteria.\n   */\n  public static TopFieldCollector create(Sort sort, int numHits,\n      boolean fillFields, boolean trackDocScores, boolean trackTotalHits) {\n    return create(sort, numHits, null, fillFields, trackDocScores, trackTotalHits);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04c370507e5521b2eb998530736f1c19b851ed5a","date":1531911305,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector#create(Sort,int,boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector#create(Sort,int,boolean,boolean,boolean).mjava","sourceNew":"  /**\n   * Creates a new {@link TopFieldCollector} from the given\n   * arguments.\n   *\n   * <p><b>NOTE</b>: The instances returned by this method\n   * pre-allocate a full array of length\n   * <code>numHits</code>.\n   *\n   * @param sort\n   *          the sort criteria (SortFields).\n   * @param numHits\n   *          the number of results to collect.\n   * @param trackDocScores\n   *          specifies whether document scores should be tracked and set on the\n   *          results. Note that if set to false, then the results' scores will\n   *          be set to Float.NaN. Setting this to true affects performance, as\n   *          it incurs the score computation on each competitive result.\n   *          Therefore if document scores are not required by the application,\n   *          it is recommended to set it to false.\n   * @param trackTotalHits\n   *          specifies whether the total number of hits should be tracked. If\n   *          set to false, the value of {@link TopFieldDocs#totalHits} will be\n   *          approximated.\n   * @return a {@link TopFieldCollector} instance which will sort the results by\n   *         the sort criteria.\n   */\n  public static TopFieldCollector create(Sort sort, int numHits,\n      boolean trackDocScores, boolean trackTotalHits) {\n    return create(sort, numHits, null, trackDocScores, trackTotalHits);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link TopFieldCollector} from the given\n   * arguments.\n   *\n   * <p><b>NOTE</b>: The instances returned by this method\n   * pre-allocate a full array of length\n   * <code>numHits</code>.\n   *\n   * @param sort\n   *          the sort criteria (SortFields).\n   * @param numHits\n   *          the number of results to collect.\n   * @param fillFields\n   *          specifies whether the actual field values should be returned on\n   *          the results (FieldDoc).\n   * @param trackDocScores\n   *          specifies whether document scores should be tracked and set on the\n   *          results. Note that if set to false, then the results' scores will\n   *          be set to Float.NaN. Setting this to true affects performance, as\n   *          it incurs the score computation on each competitive result.\n   *          Therefore if document scores are not required by the application,\n   *          it is recommended to set it to false.\n   * @param trackTotalHits\n   *          specifies whether the total number of hits should be tracked. If\n   *          set to false, the value of {@link TopFieldDocs#totalHits} will be\n   *          approximated.\n   * @return a {@link TopFieldCollector} instance which will sort the results by\n   *         the sort criteria.\n   */\n  public static TopFieldCollector create(Sort sort, int numHits,\n      boolean fillFields, boolean trackDocScores, boolean trackTotalHits) {\n    return create(sort, numHits, null, fillFields, trackDocScores, trackTotalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["f582f18c13d4852b01d4fe0a0196432c5c6f2b7f"],"1aad05eeff7818b0833c02ac6b743aa72054963b":["7ae958a739da1866696f442384393ba2f13e33e5","404d1ab7f6f396235047017c88d545fec15dafb7"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["1aad05eeff7818b0833c02ac6b743aa72054963b","81fff83bdb893c1471efd78f6a9a3ce4f98120b9"],"404d1ab7f6f396235047017c88d545fec15dafb7":["7ae958a739da1866696f442384393ba2f13e33e5"],"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"04c370507e5521b2eb998530736f1c19b851ed5a":["81fff83bdb893c1471efd78f6a9a3ce4f98120b9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"81fff83bdb893c1471efd78f6a9a3ce4f98120b9":["1aad05eeff7818b0833c02ac6b743aa72054963b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["04c370507e5521b2eb998530736f1c19b851ed5a"],"7ae958a739da1866696f442384393ba2f13e33e5":["f582f18c13d4852b01d4fe0a0196432c5c6f2b7f"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"1aad05eeff7818b0833c02ac6b743aa72054963b":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","81fff83bdb893c1471efd78f6a9a3ce4f98120b9"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"404d1ab7f6f396235047017c88d545fec15dafb7":["1aad05eeff7818b0833c02ac6b743aa72054963b"],"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","7ae958a739da1866696f442384393ba2f13e33e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f582f18c13d4852b01d4fe0a0196432c5c6f2b7f"],"04c370507e5521b2eb998530736f1c19b851ed5a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"81fff83bdb893c1471efd78f6a9a3ce4f98120b9":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","04c370507e5521b2eb998530736f1c19b851ed5a"],"7ae958a739da1866696f442384393ba2f13e33e5":["1aad05eeff7818b0833c02ac6b743aa72054963b","404d1ab7f6f396235047017c88d545fec15dafb7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}