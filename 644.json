{"path":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testClean().mjava","commits":[{"id":"658b4708302d03c7c4956029f78f65d74a660655","date":1352825787,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testClean().mjava","pathOld":"/dev/null","sourceNew":"  public void testClean() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    \n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    zkClient.makePath(\"/test/path/here\", true);\n    \n    zkClient.makePath(\"/zz/path/here\", true);\n    \n    zkClient.clean(\"/\");\n    \n    assertFalse(zkClient.exists(\"/test\", true));\n    assertFalse(zkClient.exists(\"/zz\", true));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testClean().mjava","pathOld":"/dev/null","sourceNew":"  public void testClean() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    \n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    zkClient.makePath(\"/test/path/here\", true);\n    \n    zkClient.makePath(\"/zz/path/here\", true);\n    \n    zkClient.clean(\"/\");\n    \n    assertFalse(zkClient.exists(\"/test\", true));\n    assertFalse(zkClient.exists(\"/zz\", true));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testClean().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testClean().mjava","sourceNew":"  public void testClean() throws Exception {\n    String zkDir = createTempDir().getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    \n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    zkClient.makePath(\"/test/path/here\", true);\n    \n    zkClient.makePath(\"/zz/path/here\", true);\n    \n    zkClient.clean(\"/\");\n    \n    assertFalse(zkClient.exists(\"/test\", true));\n    assertFalse(zkClient.exists(\"/zz\", true));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","sourceOld":"  public void testClean() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    \n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    zkClient.makePath(\"/test/path/here\", true);\n    \n    zkClient.makePath(\"/zz/path/here\", true);\n    \n    zkClient.clean(\"/\");\n    \n    assertFalse(zkClient.exists(\"/test\", true));\n    assertFalse(zkClient.exists(\"/zz\", true));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e9ce820cd3ed9efb959c181daaafd22f0c70143","date":1396201051,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testClean().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testClean().mjava","sourceNew":"  public void testClean() throws Exception {\n    String zkDir = createTempDir(\"zkData\").getAbsolutePath();\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    \n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    zkClient.makePath(\"/test/path/here\", true);\n    \n    zkClient.makePath(\"/zz/path/here\", true);\n    \n    zkClient.clean(\"/\");\n    \n    assertFalse(zkClient.exists(\"/test\", true));\n    assertFalse(zkClient.exists(\"/zz\", true));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","sourceOld":"  public void testClean() throws Exception {\n    String zkDir = createTempDir().getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    \n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    zkClient.makePath(\"/test/path/here\", true);\n    \n    zkClient.makePath(\"/zz/path/here\", true);\n    \n    zkClient.clean(\"/\");\n    \n    assertFalse(zkClient.exists(\"/test\", true));\n    assertFalse(zkClient.exists(\"/zz\", true));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","bugFix":["bb1f22cfa77230b5f05b7784feae5367f6bbb488","658b4708302d03c7c4956029f78f65d74a660655"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testClean().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testClean().mjava","sourceNew":"  public void testClean() throws Exception {\n    String zkDir = createTempDir(\"zkData\").getAbsolutePath();\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    \n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    zkClient.makePath(\"/test/path/here\", true);\n    \n    zkClient.makePath(\"/zz/path/here\", true);\n    \n    zkClient.clean(\"/\");\n    \n    assertFalse(zkClient.exists(\"/test\", true));\n    assertFalse(zkClient.exists(\"/zz\", true));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","sourceOld":"  public void testClean() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    \n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    zkClient.makePath(\"/test/path/here\", true);\n    \n    zkClient.makePath(\"/zz/path/here\", true);\n    \n    zkClient.clean(\"/\");\n    \n    assertFalse(zkClient.exists(\"/test\", true));\n    assertFalse(zkClient.exists(\"/zz\", true));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8650ae4e5d74a324411f8b7dd6201774f2b6fb2e","date":1406603075,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testClean().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testClean().mjava","sourceNew":"  public void testClean() throws Exception {\n    try (ZkConnection conn = new ZkConnection ()) {\n      final SolrZkClient zkClient = conn.getClient();\n\n      zkClient.makePath(\"/test/path/here\", true);\n\n      zkClient.makePath(\"/zz/path/here\", true);\n\n      zkClient.clean(\"/\");\n\n      assertFalse(zkClient.exists(\"/test\", true));\n      assertFalse(zkClient.exists(\"/zz\", true));\n    }\n  }\n\n","sourceOld":"  public void testClean() throws Exception {\n    String zkDir = createTempDir(\"zkData\").getAbsolutePath();\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    \n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    zkClient.makePath(\"/test/path/here\", true);\n    \n    zkClient.makePath(\"/zz/path/here\", true);\n    \n    zkClient.clean(\"/\");\n    \n    assertFalse(zkClient.exists(\"/test\", true));\n    assertFalse(zkClient.exists(\"/zz\", true));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa2585c33d5d66a1c837c312221eb55ddb3c4300","date":1592493170,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testClean().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testClean().mjava","sourceNew":"  @SuppressWarnings({\"try\"})\n  public void testClean() throws Exception {\n    try (ZkConnection conn = new ZkConnection ()) {\n      final SolrZkClient zkClient = conn.getClient();\n\n      zkClient.makePath(\"/test/path/here\", true);\n\n      zkClient.makePath(\"/zz/path/here\", true);\n\n      zkClient.clean(\"/\");\n\n      assertFalse(zkClient.exists(\"/test\", true));\n      assertFalse(zkClient.exists(\"/zz\", true));\n    }\n  }\n\n","sourceOld":"  public void testClean() throws Exception {\n    try (ZkConnection conn = new ZkConnection ()) {\n      final SolrZkClient zkClient = conn.getClient();\n\n      zkClient.makePath(\"/test/path/here\", true);\n\n      zkClient.makePath(\"/zz/path/here\", true);\n\n      zkClient.clean(\"/\");\n\n      assertFalse(zkClient.exists(\"/test\", true));\n      assertFalse(zkClient.exists(\"/zz\", true));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"658b4708302d03c7c4956029f78f65d74a660655":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["8650ae4e5d74a324411f8b7dd6201774f2b6fb2e"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["658b4708302d03c7c4956029f78f65d74a660655"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["658b4708302d03c7c4956029f78f65d74a660655","1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"8650ae4e5d74a324411f8b7dd6201774f2b6fb2e":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","658b4708302d03c7c4956029f78f65d74a660655"],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"]},"commit2Childs":{"658b4708302d03c7c4956029f78f65d74a660655":["bb1f22cfa77230b5f05b7784feae5367f6bbb488","2a0f5bb79c600763ffe7b8141df59a3169d31e48","407687e67faf6e1f02a211ca078d8e3eed631027"],"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["8650ae4e5d74a324411f8b7dd6201774f2b6fb2e"],"8650ae4e5d74a324411f8b7dd6201774f2b6fb2e":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["658b4708302d03c7c4956029f78f65d74a660655","407687e67faf6e1f02a211ca078d8e3eed631027"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}