{"path":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/ConcatenateFunction#getValues(Map,AtomicReaderContext).mjava","commits":[{"id":"e54446e96838c67613d570a2513c8c4032046c28","date":1386916801,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/ConcatenateFunction#getValues(Map,AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    return new Values(valsArr(sources, context, readerContext)) {\n\n      @Override\n      public String strVal(int doc) {\n        StringBuilder stringBuilder = new StringBuilder();\n        for (FunctionValues functionValues : valsArr) {\n          if (functionValues.exists(doc)) {\n            stringBuilder.append(functionValues.strVal(doc));\n          }\n        }\n        return stringBuilder.toString();\n      }\n\n      @Override\n      public Object objectVal(int doc) {\n        return strVal(doc);\n      }\n\n      @Override\n      public boolean exists(int doc) {\n        for (FunctionValues vals : valsArr) {\n          if (vals.exists(doc)) {\n            return true;\n          }\n        }\n        return false;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e4149d33e9ee4e4b86e9959d0ac9826b6da12f96","date":1386930343,"type":4,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/ConcatenateFunction#getValues(Map,AtomicReaderContext).mjava","sourceNew":null,"sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    return new Values(valsArr(sources, context, readerContext)) {\n\n      @Override\n      public String strVal(int doc) {\n        StringBuilder stringBuilder = new StringBuilder();\n        for (FunctionValues functionValues : valsArr) {\n          if (functionValues.exists(doc)) {\n            stringBuilder.append(functionValues.strVal(doc));\n          }\n        }\n        return stringBuilder.toString();\n      }\n\n      @Override\n      public Object objectVal(int doc) {\n        return strVal(doc);\n      }\n\n      @Override\n      public boolean exists(int doc) {\n        for (FunctionValues vals : valsArr) {\n          if (vals.exists(doc)) {\n            return true;\n          }\n        }\n        return false;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e4149d33e9ee4e4b86e9959d0ac9826b6da12f96":["e54446e96838c67613d570a2513c8c4032046c28"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e54446e96838c67613d570a2513c8c4032046c28":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e4149d33e9ee4e4b86e9959d0ac9826b6da12f96"]},"commit2Childs":{"e4149d33e9ee4e4b86e9959d0ac9826b6da12f96":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e54446e96838c67613d570a2513c8c4032046c28"],"e54446e96838c67613d570a2513c8c4032046c28":["e4149d33e9ee4e4b86e9959d0ac9826b6da12f96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}