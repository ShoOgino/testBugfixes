{"path":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#verifyRuleParams(CoreContainer,Map[String,Object]).mjava","commits":[{"id":"07dbf37ea1062f6f3f4fc7deb3ae385ab837ebc8","date":1431966199,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#verifyRuleParams(CoreContainer,Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  public static void verifyRuleParams(CoreContainer cc, Map<String, Object> m) {\n    List l = (List) m.get(RULE);\n    if (l != null) {\n      for (Object o : l) {\n        Map map = (Map) o;\n        try {\n          new Rule(map);\n        } catch (Exception e) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error in rule \" + m, e);\n        }\n      }\n    }\n    ReplicaAssigner.verifySnitchConf(cc, (List) m.get(SNITCH));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["6397103f7076f0b5ee4edf5b3a63c750a072ff65"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6397103f7076f0b5ee4edf5b3a63c750a072ff65","date":1510231708,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#verifyRuleParams(CoreContainer,Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#verifyRuleParams(CoreContainer,Map[String,Object]).mjava","sourceNew":"  public static void verifyRuleParams(CoreContainer cc, Map<String, Object> m) {\n    List l = (List) m.get(RULE);\n    if (l != null) {\n      for (Object o : l) {\n        Map map = (Map) o;\n        try {\n          new Rule(map);\n        } catch (Exception e) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error in rule \" + m, e);\n        }\n      }\n    }\n    if (cc != null && cc.isZooKeeperAware())\n      ReplicaAssigner.verifySnitchConf(cc.getZkController().getSolrCloudManager(), (List) m.get(SNITCH));\n  }\n\n","sourceOld":"  public static void verifyRuleParams(CoreContainer cc, Map<String, Object> m) {\n    List l = (List) m.get(RULE);\n    if (l != null) {\n      for (Object o : l) {\n        Map map = (Map) o;\n        try {\n          new Rule(map);\n        } catch (Exception e) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error in rule \" + m, e);\n        }\n      }\n    }\n    ReplicaAssigner.verifySnitchConf(cc, (List) m.get(SNITCH));\n  }\n\n","bugFix":["07dbf37ea1062f6f3f4fc7deb3ae385ab837ebc8"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba055e19afc289adcb5bedaf68513793a7254012","date":1591268575,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#verifyRuleParams(CoreContainer,Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#verifyRuleParams(CoreContainer,Map[String,Object]).mjava","sourceNew":"  public static void verifyRuleParams(CoreContainer cc, Map<String, Object> m) {\n    @SuppressWarnings({\"rawtypes\"})\n    List l = (List) m.get(RULE);\n    if (l != null) {\n      for (Object o : l) {\n        @SuppressWarnings({\"rawtypes\"})\n        Map map = (Map) o;\n        try {\n          new Rule(map);\n        } catch (Exception e) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error in rule \" + m, e);\n        }\n      }\n    }\n    if (cc != null && cc.isZooKeeperAware())\n      ReplicaAssigner.verifySnitchConf(cc.getZkController().getSolrCloudManager(), (List) m.get(SNITCH));\n  }\n\n","sourceOld":"  public static void verifyRuleParams(CoreContainer cc, Map<String, Object> m) {\n    List l = (List) m.get(RULE);\n    if (l != null) {\n      for (Object o : l) {\n        Map map = (Map) o;\n        try {\n          new Rule(map);\n        } catch (Exception e) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error in rule \" + m, e);\n        }\n      }\n    }\n    if (cc != null && cc.isZooKeeperAware())\n      ReplicaAssigner.verifySnitchConf(cc.getZkController().getSolrCloudManager(), (List) m.get(SNITCH));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ba055e19afc289adcb5bedaf68513793a7254012":["6397103f7076f0b5ee4edf5b3a63c750a072ff65"],"6397103f7076f0b5ee4edf5b3a63c750a072ff65":["07dbf37ea1062f6f3f4fc7deb3ae385ab837ebc8"],"07dbf37ea1062f6f3f4fc7deb3ae385ab837ebc8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba055e19afc289adcb5bedaf68513793a7254012"]},"commit2Childs":{"ba055e19afc289adcb5bedaf68513793a7254012":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6397103f7076f0b5ee4edf5b3a63c750a072ff65":["ba055e19afc289adcb5bedaf68513793a7254012"],"07dbf37ea1062f6f3f4fc7deb3ae385ab837ebc8":["6397103f7076f0b5ee4edf5b3a63c750a072ff65"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["07dbf37ea1062f6f3f4fc7deb3ae385ab837ebc8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}