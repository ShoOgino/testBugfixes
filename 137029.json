{"path":"solr/core/src/test/org/apache/solr/cloud/TestCloudPivotFacet#buildRandomDocument(int).mjava","commits":[{"id":"92751ba9273251eab6a2e379ec42a1697a32ff96","date":1407954233,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestCloudPivotFacet#buildRandomDocument(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a document with randomized field values, some of which be missing values, \n   * some of which will be multi-valued (per the schema) and some of which will be \n   * skewed so that small subsets of the ranges will be more common (resulting in an \n   * increased likelihood of duplicate values)\n   * \n   * @see #buildRandomPivot\n   */\n  private static SolrInputDocument buildRandomDocument(int id) {\n    SolrInputDocument doc = sdoc(\"id\", id);\n    // most fields are in most docs\n    // if field is in a doc, then \"skewed\" chance val is from a dense range\n    // (hopefully with lots of duplication)\n    for (String prefix : new String[] { \"pivot_i\", \"pivot_ti\" }) {\n      if (useField()) {\n        doc.addField(prefix+\"1\", skewed(TestUtil.nextInt(random(), 20, 50),\n                                        random().nextInt()));\n                                        \n      }\n      if (useField()) {\n        int numMulti = atLeast(1);\n        while (0 < numMulti--) {\n          doc.addField(prefix, skewed(TestUtil.nextInt(random(), 20, 50), \n                                      random().nextInt()));\n        }\n      }\n    }\n    for (String prefix : new String[] { \"pivot_l\", \"pivot_tl\" }) {\n      if (useField()) {\n        doc.addField(prefix+\"1\", skewed(TestUtil.nextInt(random(), 5000, 5100),\n                                        random().nextLong()));\n      }\n      if (useField()) {\n        int numMulti = atLeast(1);\n        while (0 < numMulti--) {\n          doc.addField(prefix, skewed(TestUtil.nextInt(random(), 5000, 5100), \n                                      random().nextLong()));\n        }\n      }\n    }\n    for (String prefix : new String[] { \"pivot_f\", \"pivot_tf\" }) {\n      if (useField()) {\n        doc.addField(prefix+\"1\", skewed(1.0F / random().nextInt(13),\n                                        random().nextFloat() * random().nextInt()));\n      }\n      if (useField()) {\n        int numMulti = atLeast(1);\n        while (0 < numMulti--) {\n          doc.addField(prefix, skewed(1.0F / random().nextInt(13),\n                                      random().nextFloat() * random().nextInt()));\n        }\n      }\n    }\n    for (String prefix : new String[] { \"pivot_d\", \"pivot_td\" }) {\n      if (useField()) {\n        doc.addField(prefix+\"1\", skewed(1.0D / random().nextInt(19),\n                                        random().nextDouble() * random().nextInt()));\n      }\n      if (useField()) {\n        int numMulti = atLeast(1);\n        while (0 < numMulti--) {\n          doc.addField(prefix, skewed(1.0D / random().nextInt(19),\n                                      random().nextDouble() * random().nextInt()));\n        }\n      }\n    }\n    for (String prefix : new String[] { \"pivot_dt\", \"pivot_tdt\" }) {\n      if (useField()) {\n        doc.addField(prefix+\"1\", skewed(randomSkewedDate(), randomDate()));\n                                        \n      }\n      if (useField()) {\n        int numMulti = atLeast(1);\n        while (0 < numMulti--) {\n          doc.addField(prefix, skewed(randomSkewedDate(), randomDate()));\n                                      \n        }\n      }\n    }\n    {\n      String prefix = \"pivot_b\";\n      if (useField()) {\n        doc.addField(prefix+\"1\", random().nextBoolean() ? \"t\" : \"f\");\n      }\n      if (useField()) {\n        int numMulti = atLeast(1);\n        while (0 < numMulti--) {\n          doc.addField(prefix, random().nextBoolean() ? \"t\" : \"f\");\n        }\n      }\n    }\n    for (String prefix : new String[] { \"pivot_x_s\", \"pivot_y_s\", \"pivot_z_s\"}) {\n      if (useField()) {\n        doc.addField(prefix+\"1\", skewed(TestUtil.randomSimpleString(random(), 1, 1),\n                                        randomXmlUsableUnicodeString()));\n      }\n      if (useField()) {\n        int numMulti = atLeast(1);\n        while (0 < numMulti--) {\n          doc.addField(prefix, skewed(TestUtil.randomSimpleString(random(), 1, 1),\n                                      randomXmlUsableUnicodeString()));\n        }\n      }\n    }\n\n    //\n    // for the remaining fields, make every doc have a value in a dense range\n    //\n\n    for (String prefix : new String[] { \"dense_pivot_x_s\", \"dense_pivot_y_s\" }) {\n      if (useField()) {\n        doc.addField(prefix+\"1\", TestUtil.randomSimpleString(random(), 1, 1));\n      }\n      if (useField()) {\n        int numMulti = atLeast(1);\n        while (0 < numMulti--) {\n          doc.addField(prefix, TestUtil.randomSimpleString(random(), 1, 1));\n        }\n      }\n    }\n    for (String prefix : new String[] { \"dense_pivot_i\", \"dense_pivot_ti\" }) {\n      if (useField()) {\n        doc.addField(prefix+\"1\", TestUtil.nextInt(random(), 20, 50));\n      }\n      if (useField()) {\n        int numMulti = atLeast(1);\n        while (0 < numMulti--) {\n          doc.addField(prefix, TestUtil.nextInt(random(), 20, 50));\n        }\n      }\n    }\n\n    return doc;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"92751ba9273251eab6a2e379ec42a1697a32ff96":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["92751ba9273251eab6a2e379ec42a1697a32ff96"]},"commit2Childs":{"92751ba9273251eab6a2e379ec42a1697a32ff96":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["92751ba9273251eab6a2e379ec42a1697a32ff96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}