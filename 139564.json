{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/response/SuggesterResponse#getSuggestedTerms().mjava","commits":[{"id":"096ce9d7ec9914ca48a630b7686cc0a413cb74d7","date":1437121947,"type":0,"author":"Tommaso Teofili","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/SuggesterResponse#getSuggestedTerms().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * This getter is lazily initialized and returns a simplified map dictionary : List of suggested terms\n   * This is useful for simple use cases when you simply need the suggested terms and no weight or payload\n   *\n   * @return a Map dictionary name : List of suggested terms\n   */\n  public Map<String, List<String>> getSuggestedTerms() {\n    Map<String, List<String>> suggestedTermsPerDictionary = new LinkedHashMap<>();\n    for (Map.Entry<String, List<Suggestion>> entry : suggestionsPerDictionary.entrySet()) {\n      List<Suggestion> suggestions = entry.getValue();\n      List<String> suggestionTerms = new LinkedList<String>();\n      for (Suggestion s : suggestions) {\n        suggestionTerms.add(s.getTerm());\n      }\n      suggestedTermsPerDictionary.put(entry.getKey(), suggestionTerms);\n    }\n    return suggestedTermsPerDictionary;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9dec2d3920a73691e8110290418baf8efad1303","date":1437131425,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/SuggesterResponse#getSuggestedTerms().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * This getter is lazily initialized and returns a simplified map dictionary : List of suggested terms\n   * This is useful for simple use cases when you simply need the suggested terms and no weight or payload\n   *\n   * @return a Map dictionary name : List of suggested terms\n   */\n  public Map<String, List<String>> getSuggestedTerms() {\n    Map<String, List<String>> suggestedTermsPerDictionary = new LinkedHashMap<>();\n    for (Map.Entry<String, List<Suggestion>> entry : suggestionsPerDictionary.entrySet()) {\n      List<Suggestion> suggestions = entry.getValue();\n      List<String> suggestionTerms = new LinkedList<String>();\n      for (Suggestion s : suggestions) {\n        suggestionTerms.add(s.getTerm());\n      }\n      suggestedTermsPerDictionary.put(entry.getKey(), suggestionTerms);\n    }\n    return suggestedTermsPerDictionary;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f9dec2d3920a73691e8110290418baf8efad1303":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","096ce9d7ec9914ca48a630b7686cc0a413cb74d7"],"096ce9d7ec9914ca48a630b7686cc0a413cb74d7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["096ce9d7ec9914ca48a630b7686cc0a413cb74d7"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f9dec2d3920a73691e8110290418baf8efad1303","096ce9d7ec9914ca48a630b7686cc0a413cb74d7"],"f9dec2d3920a73691e8110290418baf8efad1303":[],"096ce9d7ec9914ca48a630b7686cc0a413cb74d7":["f9dec2d3920a73691e8110290418baf8efad1303","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f9dec2d3920a73691e8110290418baf8efad1303","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}