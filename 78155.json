{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/Cell#getTokenBytes(BytesRef).mjava","commits":[{"id":"4de14be4bd1b857ba37ca138b61c4661c6d1bed3","date":1396628861,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/Cell#getTokenBytes(BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the bytes for this cell.\n   * The result param is used to save object allocation, though it's bytes aren't used.\n   * @param result where the result goes, or null to create new\n   */\n  public BytesRef getTokenBytes(BytesRef result) {\n    if (result == null)\n      result = new BytesRef();\n    result.bytes = bytes;\n    result.offset = b_off;\n    result.length = b_len;\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15e323346eac5e4685c0a9f2df85eb96b4239bbb","date":1396688577,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/Cell#getTokenBytes(BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the bytes for this cell.\n   * The result param is used to save object allocation, though it's bytes aren't used.\n   * @param result where the result goes, or null to create new\n   */\n  public BytesRef getTokenBytes(BytesRef result) {\n    if (result == null)\n      result = new BytesRef();\n    result.bytes = bytes;\n    result.offset = b_off;\n    result.length = b_len;\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6","date":1397789149,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/Cell#getTokenBytesWithLeaf(BytesRef).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/Cell#getTokenBytes(BytesRef).mjava","sourceNew":"  /**\n   * Returns the bytes for this cell, with a leaf byte if this is a leaf cell.\n   * The result param is used to save object allocation, though it's bytes aren't used.\n   * @param result where the result goes, or null to create new\n   */\n  BytesRef getTokenBytesWithLeaf(BytesRef result);\n\n","sourceOld":"  /**\n   * Returns the bytes for this cell.\n   * The result param is used to save object allocation, though it's bytes aren't used.\n   * @param result where the result goes, or null to create new\n   */\n  public BytesRef getTokenBytes(BytesRef result) {\n    if (result == null)\n      result = new BytesRef();\n    result.bytes = bytes;\n    result.offset = b_off;\n    result.length = b_len;\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6","date":1397789149,"type":6,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/LegacyCell#getTokenBytesNoLeaf(BytesRef).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/Cell#getTokenBytes(BytesRef).mjava","sourceNew":"  @Override\n  public BytesRef getTokenBytesNoLeaf(BytesRef result) {\n    if (result == null)\n      return new BytesRef(bytes, b_off, b_len);\n    result.bytes = bytes;\n    result.offset = b_off;\n    result.length = b_len;\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Returns the bytes for this cell.\n   * The result param is used to save object allocation, though it's bytes aren't used.\n   * @param result where the result goes, or null to create new\n   */\n  public BytesRef getTokenBytes(BytesRef result) {\n    if (result == null)\n      result = new BytesRef();\n    result.bytes = bytes;\n    result.offset = b_off;\n    result.length = b_len;\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"15e323346eac5e4685c0a9f2df85eb96b4239bbb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4de14be4bd1b857ba37ca138b61c4661c6d1bed3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4de14be4bd1b857ba37ca138b61c4661c6d1bed3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6":["4de14be4bd1b857ba37ca138b61c4661c6d1bed3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6"]},"commit2Childs":{"15e323346eac5e4685c0a9f2df85eb96b4239bbb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","4de14be4bd1b857ba37ca138b61c4661c6d1bed3"],"4de14be4bd1b857ba37ca138b61c4661c6d1bed3":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6"],"8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}