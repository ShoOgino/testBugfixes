{"path":"solr/core/src/test/org/apache/solr/cloud/CloudTestUtils#suspendTrigger(SolrCloudManager,String).mjava","commits":[{"id":"89948af0461fead48f44ba8fb7866f107ce83f22","date":1545157711,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CloudTestUtils#suspendTrigger(SolrCloudManager,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Suspends the trigger with the specified name\n   * <p>\n   * This is a convenience method that sends a <code>suspend-trigger</code> command to the autoscaling\n   * API for the specified trigger.  It is particularly useful for tests that may need to disable automatic\n   * triggers such as <code>.scheduled_maintenance</code> in order to test their own\n   * triggers.\n   * </p>\n   *\n   * @param cloudManager current instance of {@link SolrCloudManager}\n   * @param triggerName the name of the trigger to suspend.  This must already be scheduled.\n   */\n  public static void suspendTrigger(final SolrCloudManager cloudManager,\n                                    final String triggerName) throws IOException {\n    \n    final SolrRequest req = AutoScalingRequest.create(SolrRequest.METHOD.POST,\n                                                      \"{'suspend-trigger' : {'name' : '\"+triggerName+\"'} }\");\n    final SolrResponse rsp = cloudManager.request(req);\n    final String result = rsp.getResponse().get(\"result\").toString();\n    Assert.assertEquals(\"Unexpected 'result' in response: \" + rsp,\n                        \"success\", result);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"914270355efc1f9583010cb165bb031a1e698f84","date":1546908784,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CloudTestUtils#suspendTrigger(SolrCloudManager,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CloudTestUtils#suspendTrigger(SolrCloudManager,String).mjava","sourceNew":"  /**\n   * Suspends the trigger with the specified name\n   * <p>\n   * This is a convenience method that sends a <code>suspend-trigger</code> command to the autoscaling\n   * API for the specified trigger.  It is particularly useful for tests that may need to disable automatic\n   * triggers such as <code>.scheduled_maintenance</code> in order to test their own\n   * triggers.\n   * </p>\n   *\n   * @param cloudManager current instance of {@link SolrCloudManager}\n   * @param triggerName the name of the trigger to suspend.  This must already be scheduled.\n   * @see #assertAutoScalingRequest\n   * @see #waitForTriggerToBeScheduled\n   */\n  public static void suspendTrigger(final SolrCloudManager cloudManager,\n                                    final String triggerName) throws IOException {\n    assertAutoScalingRequest(cloudManager, \"{'suspend-trigger' : {'name' : '\"+triggerName+\"'} }\");\n  }\n\n","sourceOld":"  /**\n   * Suspends the trigger with the specified name\n   * <p>\n   * This is a convenience method that sends a <code>suspend-trigger</code> command to the autoscaling\n   * API for the specified trigger.  It is particularly useful for tests that may need to disable automatic\n   * triggers such as <code>.scheduled_maintenance</code> in order to test their own\n   * triggers.\n   * </p>\n   *\n   * @param cloudManager current instance of {@link SolrCloudManager}\n   * @param triggerName the name of the trigger to suspend.  This must already be scheduled.\n   */\n  public static void suspendTrigger(final SolrCloudManager cloudManager,\n                                    final String triggerName) throws IOException {\n    \n    final SolrRequest req = AutoScalingRequest.create(SolrRequest.METHOD.POST,\n                                                      \"{'suspend-trigger' : {'name' : '\"+triggerName+\"'} }\");\n    final SolrResponse rsp = cloudManager.request(req);\n    final String result = rsp.getResponse().get(\"result\").toString();\n    Assert.assertEquals(\"Unexpected 'result' in response: \" + rsp,\n                        \"success\", result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/CloudTestUtils#suspendTrigger(SolrCloudManager,String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Suspends the trigger with the specified name\n   * <p>\n   * This is a convenience method that sends a <code>suspend-trigger</code> command to the autoscaling\n   * API for the specified trigger.  It is particularly useful for tests that may need to disable automatic\n   * triggers such as <code>.scheduled_maintenance</code> in order to test their own\n   * triggers.\n   * </p>\n   *\n   * @param cloudManager current instance of {@link SolrCloudManager}\n   * @param triggerName the name of the trigger to suspend.  This must already be scheduled.\n   * @see #assertAutoScalingRequest\n   * @see #waitForTriggerToBeScheduled\n   */\n  public static void suspendTrigger(final SolrCloudManager cloudManager,\n                                    final String triggerName) throws IOException {\n    assertAutoScalingRequest(cloudManager, \"{'suspend-trigger' : {'name' : '\"+triggerName+\"'} }\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"914270355efc1f9583010cb165bb031a1e698f84":["89948af0461fead48f44ba8fb7866f107ce83f22"],"3f504512a03d978990cbff30db0522b354e846db":["914270355efc1f9583010cb165bb031a1e698f84"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"89948af0461fead48f44ba8fb7866f107ce83f22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"914270355efc1f9583010cb165bb031a1e698f84":["3f504512a03d978990cbff30db0522b354e846db"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["89948af0461fead48f44ba8fb7866f107ce83f22"],"89948af0461fead48f44ba8fb7866f107ce83f22":["914270355efc1f9583010cb165bb031a1e698f84"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}