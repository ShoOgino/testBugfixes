{"path":"lucene/src/java/org/apache/lucene/index/codecs/intblock/VariableIntBlockIndexOutput#close().mjava","commits":[{"id":"03b152509ee3fa8cf52abb8a4a0cfe7287c59fc8","date":1281277545,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/intblock/VariableIntBlockIndexOutput#close().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void close() throws IOException {\n    try {\n      // stuff 0s in until the \"real\" data is flushed:\n      int stuffed = 0;\n      while(upto > stuffed) {\n        upto -= add(0)-1;\n        assert upto >= 0;\n        stuffed += 1;\n      }\n    } finally {\n      out.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["c353e4af405956c3890d2c52dd7916bbf3bb8916"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/intblock/VariableIntBlockIndexOutput#close().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void close() throws IOException {\n    try {\n      // stuff 0s in until the \"real\" data is flushed:\n      int stuffed = 0;\n      while(upto > stuffed) {\n        upto -= add(0)-1;\n        assert upto >= 0;\n        stuffed += 1;\n      }\n    } finally {\n      out.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c353e4af405956c3890d2c52dd7916bbf3bb8916","date":1306425463,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/intblock/VariableIntBlockIndexOutput#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/intblock/VariableIntBlockIndexOutput#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    try {\n      if (!hitExcDuringWrite) {\n        // stuff 0s in until the \"real\" data is flushed:\n        int stuffed = 0;\n        while(upto > stuffed) {\n          upto -= add(0)-1;\n          assert upto >= 0;\n          stuffed += 1;\n        }\n      }\n    } finally {\n      out.close();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    try {\n      // stuff 0s in until the \"real\" data is flushed:\n      int stuffed = 0;\n      while(upto > stuffed) {\n        upto -= add(0)-1;\n        assert upto >= 0;\n        stuffed += 1;\n      }\n    } finally {\n      out.close();\n    }\n  }\n\n","bugFix":["03b152509ee3fa8cf52abb8a4a0cfe7287c59fc8"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/intblock/VariableIntBlockIndexOutput#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/intblock/VariableIntBlockIndexOutput#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    try {\n      if (!hitExcDuringWrite) {\n        // stuff 0s in until the \"real\" data is flushed:\n        int stuffed = 0;\n        while(upto > stuffed) {\n          upto -= add(0)-1;\n          assert upto >= 0;\n          stuffed += 1;\n        }\n      }\n    } finally {\n      out.close();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    try {\n      // stuff 0s in until the \"real\" data is flushed:\n      int stuffed = 0;\n      while(upto > stuffed) {\n        upto -= add(0)-1;\n        assert upto >= 0;\n        stuffed += 1;\n      }\n    } finally {\n      out.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/intblock/VariableIntBlockIndexOutput#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/intblock/VariableIntBlockIndexOutput#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    try {\n      if (!hitExcDuringWrite) {\n        // stuff 0s in until the \"real\" data is flushed:\n        int stuffed = 0;\n        while(upto > stuffed) {\n          upto -= add(0)-1;\n          assert upto >= 0;\n          stuffed += 1;\n        }\n      }\n    } finally {\n      out.close();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    try {\n      // stuff 0s in until the \"real\" data is flushed:\n      int stuffed = 0;\n      while(upto > stuffed) {\n        upto -= add(0)-1;\n        assert upto >= 0;\n        stuffed += 1;\n      }\n    } finally {\n      out.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/intblock/VariableIntBlockIndexOutput#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/intblock/VariableIntBlockIndexOutput#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    try {\n      if (!hitExcDuringWrite) {\n        // stuff 0s in until the \"real\" data is flushed:\n        int stuffed = 0;\n        while(upto > stuffed) {\n          upto -= add(0)-1;\n          assert upto >= 0;\n          stuffed += 1;\n        }\n      }\n    } finally {\n      out.close();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    try {\n      if (!hitExcDuringWrite) {\n        // stuff 0s in until the \"real\" data is flushed:\n        int stuffed = 0;\n        while(upto > stuffed) {\n          upto -= add(0)-1;\n          assert upto >= 0;\n          stuffed += 1;\n        }\n      }\n    } finally {\n      out.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"03b152509ee3fa8cf52abb8a4a0cfe7287c59fc8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c353e4af405956c3890d2c52dd7916bbf3bb8916":["03b152509ee3fa8cf52abb8a4a0cfe7287c59fc8"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["03b152509ee3fa8cf52abb8a4a0cfe7287c59fc8","c353e4af405956c3890d2c52dd7916bbf3bb8916"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","03b152509ee3fa8cf52abb8a4a0cfe7287c59fc8"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["c353e4af405956c3890d2c52dd7916bbf3bb8916"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["03b152509ee3fa8cf52abb8a4a0cfe7287c59fc8","c353e4af405956c3890d2c52dd7916bbf3bb8916"]},"commit2Childs":{"03b152509ee3fa8cf52abb8a4a0cfe7287c59fc8":["c353e4af405956c3890d2c52dd7916bbf3bb8916","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"c353e4af405956c3890d2c52dd7916bbf3bb8916":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","a0ae5e3ed1232483b7b8a014f175a5fe43595982","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["03b152509ee3fa8cf52abb8a4a0cfe7287c59fc8","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}