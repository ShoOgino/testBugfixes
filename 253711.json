{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#getBoundingBox(GeoShape).mjava","commits":[{"id":"f9f97ca977ad649f14b4f60a888adef2edd7a64e","date":1432702490,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#getBoundingBox(GeoShape).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTest#getBoundingBox(GeoShape).mjava","sourceNew":"  protected GeoBBox getBoundingBox(final GeoShape path) {\n      Bounds bounds = path.getBounds(null);\n\n      double leftLon;\n      double rightLon;\n      if (bounds.checkNoLongitudeBound()) {\n        leftLon = -Math.PI;\n        rightLon = Math.PI;\n      } else {\n        leftLon = bounds.getLeftLongitude().doubleValue();\n        rightLon = bounds.getRightLongitude().doubleValue();\n      }\n      double minLat;\n      if (bounds.checkNoBottomLatitudeBound()) {\n        minLat = -Math.PI * 0.5;\n      } else {\n        minLat = bounds.getMinLatitude().doubleValue();\n      }\n      double maxLat;\n      if (bounds.checkNoTopLatitudeBound()) {\n        maxLat = Math.PI * 0.5;\n      } else {\n        maxLat = bounds.getMaxLatitude().doubleValue();\n      }\n      return GeoBBoxFactory.makeGeoBBox(planetModel, maxLat, minLat, leftLon, rightLon);\n  }\n\n","sourceOld":"  protected static GeoBBox getBoundingBox(final GeoShape path) {\n      Bounds bounds = path.getBounds(null);\n\n      double leftLon;\n      double rightLon;\n      if (bounds.checkNoLongitudeBound()) {\n        leftLon = -Math.PI;\n        rightLon = Math.PI;\n      } else {\n        leftLon = bounds.getLeftLongitude().doubleValue();\n        rightLon = bounds.getRightLongitude().doubleValue();\n      }\n      double minLat;\n      if (bounds.checkNoBottomLatitudeBound()) {\n        minLat = -Math.PI * 0.5;\n      } else {\n        minLat = bounds.getMinLatitude().doubleValue();\n      }\n      double maxLat;\n      if (bounds.checkNoTopLatitudeBound()) {\n        maxLat = Math.PI * 0.5;\n      } else {\n        maxLat = bounds.getMaxLatitude().doubleValue();\n      }\n      return GeoBBoxFactory.makeGeoBBox(maxLat, minLat, leftLon, rightLon);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fec06d6753751ae302c7d35866763e6cb414112d","date":1433250698,"type":1,"author":"David Wayne Smiley","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#getBoundingBox(GeoShape).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTest#getBoundingBox(GeoShape).mjava","sourceNew":"  protected GeoBBox getBoundingBox(final GeoShape path) {\n      Bounds bounds = path.getBounds(null);\n\n      double leftLon;\n      double rightLon;\n      if (bounds.checkNoLongitudeBound()) {\n        leftLon = -Math.PI;\n        rightLon = Math.PI;\n      } else {\n        leftLon = bounds.getLeftLongitude().doubleValue();\n        rightLon = bounds.getRightLongitude().doubleValue();\n      }\n      double minLat;\n      if (bounds.checkNoBottomLatitudeBound()) {\n        minLat = -Math.PI * 0.5;\n      } else {\n        minLat = bounds.getMinLatitude().doubleValue();\n      }\n      double maxLat;\n      if (bounds.checkNoTopLatitudeBound()) {\n        maxLat = Math.PI * 0.5;\n      } else {\n        maxLat = bounds.getMaxLatitude().doubleValue();\n      }\n      return GeoBBoxFactory.makeGeoBBox(planetModel, maxLat, minLat, leftLon, rightLon);\n  }\n\n","sourceOld":"  protected static GeoBBox getBoundingBox(final GeoShape path) {\n      Bounds bounds = path.getBounds(null);\n\n      double leftLon;\n      double rightLon;\n      if (bounds.checkNoLongitudeBound()) {\n        leftLon = -Math.PI;\n        rightLon = Math.PI;\n      } else {\n        leftLon = bounds.getLeftLongitude().doubleValue();\n        rightLon = bounds.getRightLongitude().doubleValue();\n      }\n      double minLat;\n      if (bounds.checkNoBottomLatitudeBound()) {\n        minLat = -Math.PI * 0.5;\n      } else {\n        minLat = bounds.getMinLatitude().doubleValue();\n      }\n      double maxLat;\n      if (bounds.checkNoTopLatitudeBound()) {\n        maxLat = Math.PI * 0.5;\n      } else {\n        maxLat = bounds.getMaxLatitude().doubleValue();\n      }\n      return GeoBBoxFactory.makeGeoBBox(maxLat, minLat, leftLon, rightLon);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f64b7098768253180859cd8faeae6b1a185b06ed","date":1441223971,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#getBoundingBox(GeoShape).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#getBoundingBox(GeoShape).mjava","sourceNew":"  protected GeoBBox getBoundingBox(final GeoShape path) {\n    LatLonBounds bounds = new LatLonBounds();\n    path.getBounds(bounds);\n\n    double leftLon;\n    double rightLon;\n    if (bounds.checkNoLongitudeBound()) {\n      leftLon = -Math.PI;\n      rightLon = Math.PI;\n    } else {\n      leftLon = bounds.getLeftLongitude().doubleValue();\n      rightLon = bounds.getRightLongitude().doubleValue();\n    }\n    double minLat;\n    if (bounds.checkNoBottomLatitudeBound()) {\n      minLat = -Math.PI * 0.5;\n    } else {\n      minLat = bounds.getMinLatitude().doubleValue();\n    }\n    double maxLat;\n    if (bounds.checkNoTopLatitudeBound()) {\n      maxLat = Math.PI * 0.5;\n    } else {\n      maxLat = bounds.getMaxLatitude().doubleValue();\n    }\n    return GeoBBoxFactory.makeGeoBBox(planetModel, maxLat, minLat, leftLon, rightLon);\n  }\n\n","sourceOld":"  protected GeoBBox getBoundingBox(final GeoShape path) {\n      Bounds bounds = path.getBounds(null);\n\n      double leftLon;\n      double rightLon;\n      if (bounds.checkNoLongitudeBound()) {\n        leftLon = -Math.PI;\n        rightLon = Math.PI;\n      } else {\n        leftLon = bounds.getLeftLongitude().doubleValue();\n        rightLon = bounds.getRightLongitude().doubleValue();\n      }\n      double minLat;\n      if (bounds.checkNoBottomLatitudeBound()) {\n        minLat = -Math.PI * 0.5;\n      } else {\n        minLat = bounds.getMinLatitude().doubleValue();\n      }\n      double maxLat;\n      if (bounds.checkNoTopLatitudeBound()) {\n        maxLat = Math.PI * 0.5;\n      } else {\n        maxLat = bounds.getMaxLatitude().doubleValue();\n      }\n      return GeoBBoxFactory.makeGeoBBox(planetModel, maxLat, minLat, leftLon, rightLon);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#getBoundingBox(GeoShape).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#getBoundingBox(GeoShape).mjava","sourceNew":"  protected GeoBBox getBoundingBox(final GeoShape path) {\n    LatLonBounds bounds = new LatLonBounds();\n    path.getBounds(bounds);\n\n    double leftLon;\n    double rightLon;\n    if (bounds.checkNoLongitudeBound()) {\n      leftLon = -Math.PI;\n      rightLon = Math.PI;\n    } else {\n      leftLon = bounds.getLeftLongitude().doubleValue();\n      rightLon = bounds.getRightLongitude().doubleValue();\n    }\n    double minLat;\n    if (bounds.checkNoBottomLatitudeBound()) {\n      minLat = -Math.PI * 0.5;\n    } else {\n      minLat = bounds.getMinLatitude().doubleValue();\n    }\n    double maxLat;\n    if (bounds.checkNoTopLatitudeBound()) {\n      maxLat = Math.PI * 0.5;\n    } else {\n      maxLat = bounds.getMaxLatitude().doubleValue();\n    }\n    return GeoBBoxFactory.makeGeoBBox(planetModel, maxLat, minLat, leftLon, rightLon);\n  }\n\n","sourceOld":"  protected GeoBBox getBoundingBox(final GeoShape path) {\n    LatLonBounds bounds = new LatLonBounds();\n    path.getBounds(bounds);\n\n    double leftLon;\n    double rightLon;\n    if (bounds.checkNoLongitudeBound()) {\n      leftLon = -Math.PI;\n      rightLon = Math.PI;\n    } else {\n      leftLon = bounds.getLeftLongitude().doubleValue();\n      rightLon = bounds.getRightLongitude().doubleValue();\n    }\n    double minLat;\n    if (bounds.checkNoBottomLatitudeBound()) {\n      minLat = -Math.PI * 0.5;\n    } else {\n      minLat = bounds.getMinLatitude().doubleValue();\n    }\n    double maxLat;\n    if (bounds.checkNoTopLatitudeBound()) {\n      maxLat = Math.PI * 0.5;\n    } else {\n      maxLat = bounds.getMaxLatitude().doubleValue();\n    }\n    return GeoBBoxFactory.makeGeoBBox(planetModel, maxLat, minLat, leftLon, rightLon);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#getBoundingBox(GeoShape).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#getBoundingBox(GeoShape).mjava","sourceNew":"  protected GeoBBox getBoundingBox(final GeoShape path) {\n    LatLonBounds bounds = new LatLonBounds();\n    path.getBounds(bounds);\n\n    double leftLon;\n    double rightLon;\n    if (bounds.checkNoLongitudeBound()) {\n      leftLon = -Math.PI;\n      rightLon = Math.PI;\n    } else {\n      leftLon = bounds.getLeftLongitude().doubleValue();\n      rightLon = bounds.getRightLongitude().doubleValue();\n    }\n    double minLat;\n    if (bounds.checkNoBottomLatitudeBound()) {\n      minLat = -Math.PI * 0.5;\n    } else {\n      minLat = bounds.getMinLatitude().doubleValue();\n    }\n    double maxLat;\n    if (bounds.checkNoTopLatitudeBound()) {\n      maxLat = Math.PI * 0.5;\n    } else {\n      maxLat = bounds.getMaxLatitude().doubleValue();\n    }\n    return GeoBBoxFactory.makeGeoBBox(planetModel, maxLat, minLat, leftLon, rightLon);\n  }\n\n","sourceOld":"  protected GeoBBox getBoundingBox(final GeoShape path) {\n    LatLonBounds bounds = new LatLonBounds();\n    path.getBounds(bounds);\n\n    double leftLon;\n    double rightLon;\n    if (bounds.checkNoLongitudeBound()) {\n      leftLon = -Math.PI;\n      rightLon = Math.PI;\n    } else {\n      leftLon = bounds.getLeftLongitude().doubleValue();\n      rightLon = bounds.getRightLongitude().doubleValue();\n    }\n    double minLat;\n    if (bounds.checkNoBottomLatitudeBound()) {\n      minLat = -Math.PI * 0.5;\n    } else {\n      minLat = bounds.getMinLatitude().doubleValue();\n    }\n    double maxLat;\n    if (bounds.checkNoTopLatitudeBound()) {\n      maxLat = Math.PI * 0.5;\n    } else {\n      maxLat = bounds.getMaxLatitude().doubleValue();\n    }\n    return GeoBBoxFactory.makeGeoBBox(planetModel, maxLat, minLat, leftLon, rightLon);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["f64b7098768253180859cd8faeae6b1a185b06ed","112d77ac8d3e10a362516ad834c9a11d35c94234"],"f64b7098768253180859cd8faeae6b1a185b06ed":["fec06d6753751ae302c7d35866763e6cb414112d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fec06d6753751ae302c7d35866763e6cb414112d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f9f97ca977ad649f14b4f60a888adef2edd7a64e"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["f64b7098768253180859cd8faeae6b1a185b06ed"],"f9f97ca977ad649f14b4f60a888adef2edd7a64e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f64b7098768253180859cd8faeae6b1a185b06ed":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"fec06d6753751ae302c7d35866763e6cb414112d":["f64b7098768253180859cd8faeae6b1a185b06ed"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fec06d6753751ae302c7d35866763e6cb414112d","f9f97ca977ad649f14b4f60a888adef2edd7a64e"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"f9f97ca977ad649f14b4f60a888adef2edd7a64e":["fec06d6753751ae302c7d35866763e6cb414112d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}