{"path":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterStartupWithNoActivity().mjava","commits":[{"id":"eeb2d6b1dec4189402e35f8d8a39d411e80e140d","date":1359563345,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterStartupWithNoActivity().mjava","pathOld":"/dev/null","sourceNew":"  private void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    String factory = System.getProperty(\"solr.directoryFactory\");\n    System.out.println(\"factory:\" + factory);\n    useFactory(null);\n    try {\n    \n    //stop slave\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n    //change solrconfig having 'replicateAfter startup' option on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    // now we restart to test what happens with no activity before the slave tries to\n    // replicate\n    masterJetty.stop();\n    masterJetty.start(true);\n \n    //masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    //start slave\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    // NOTE: the master only replicates after startup now!\n    // revert that change.\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    //start slave\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    } finally {\n      resetFactory();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["43e5779eeb016d5b6980fbf3437f3e8ff4dbf1d6","1432a0acddbd504d67af13ed2d8cf80e43abf049"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"61d5f95d14e5b9b046998c51e16709a398c15226","date":1359603451,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterStartupWithNoActivity().mjava","pathOld":"/dev/null","sourceNew":"  private void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    String factory = System.getProperty(\"solr.directoryFactory\");\n    System.out.println(\"factory:\" + factory);\n    useFactory(null);\n    try {\n    \n    //stop slave\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n    //change solrconfig having 'replicateAfter startup' option on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    // now we restart to test what happens with no activity before the slave tries to\n    // replicate\n    masterJetty.stop();\n    masterJetty.start(true);\n \n    //masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    //start slave\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    // NOTE: the master only replicates after startup now!\n    // revert that change.\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    //start slave\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    } finally {\n      resetFactory();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43e5779eeb016d5b6980fbf3437f3e8ff4dbf1d6","date":1361552322,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterStartupWithNoActivity().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterStartupWithNoActivity().mjava","sourceNew":"  private void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n    \n    //stop slave\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n    //change solrconfig having 'replicateAfter startup' option on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    // now we restart to test what happens with no activity before the slave tries to\n    // replicate\n    masterJetty.stop();\n    masterJetty.start(true);\n \n    //masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    //start slave\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    // NOTE: the master only replicates after startup now!\n    // revert that change.\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    //start slave\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    } finally {\n      resetFactory();\n    }\n  }\n\n","sourceOld":"  private void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    String factory = System.getProperty(\"solr.directoryFactory\");\n    System.out.println(\"factory:\" + factory);\n    useFactory(null);\n    try {\n    \n    //stop slave\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n    //change solrconfig having 'replicateAfter startup' option on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    // now we restart to test what happens with no activity before the slave tries to\n    // replicate\n    masterJetty.stop();\n    masterJetty.start(true);\n \n    //masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    //start slave\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    // NOTE: the master only replicates after startup now!\n    // revert that change.\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    //start slave\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    } finally {\n      resetFactory();\n    }\n  }\n\n","bugFix":["eeb2d6b1dec4189402e35f8d8a39d411e80e140d"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1432a0acddbd504d67af13ed2d8cf80e43abf049","date":1361579532,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterStartupWithNoActivity().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterStartupWithNoActivity().mjava","sourceNew":"  @Test\n  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n    \n    //stop slave\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n    //change solrconfig having 'replicateAfter startup' option on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    // now we restart to test what happens with no activity before the slave tries to\n    // replicate\n    masterJetty.stop();\n    masterJetty.start(true);\n \n    //masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    //start slave\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    // NOTE: the master only replicates after startup now!\n    // revert that change.\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    //start slave\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    } finally {\n      resetFactory();\n    }\n  }\n\n","sourceOld":"  private void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n    \n    //stop slave\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n    //change solrconfig having 'replicateAfter startup' option on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    // now we restart to test what happens with no activity before the slave tries to\n    // replicate\n    masterJetty.stop();\n    masterJetty.start(true);\n \n    //masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    //start slave\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    // NOTE: the master only replicates after startup now!\n    // revert that change.\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    //start slave\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    } finally {\n      resetFactory();\n    }\n  }\n\n","bugFix":["eeb2d6b1dec4189402e35f8d8a39d411e80e140d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0821fb2632567b97517fef4d350c09297f996615","date":1361720082,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterStartupWithNoActivity().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterStartupWithNoActivity().mjava","sourceNew":"  @Test\n  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      // stop slave\n      slaveJetty.stop();\n      \n      nDocs--;\n      masterClient.deleteByQuery(\"*:*\");\n      \n      masterClient.commit();\n      \n      // change solrconfig having 'replicateAfter startup' option on master\n      master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n          \"solrconfig.xml\");\n      \n      masterJetty.stop();\n      \n      masterJetty = createJetty(master);\n      masterClient = createNewSolrServer(masterJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      // now we restart to test what happens with no activity before the slave\n      // tries to\n      // replicate\n      masterJetty.stop();\n      masterJetty.start(true);\n      \n      // masterClient = createNewSolrServer(masterJetty.getLocalPort());\n      \n      NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n      SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, masterQueryResult.getNumFound());\n      \n      slave.setTestPort(masterJetty.getLocalPort());\n      slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      // start slave\n      slaveJetty = createJetty(slave);\n      slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n      \n      // get docs from slave and check if number is equal to master\n      NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n      SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, slaveQueryResult.getNumFound());\n      \n      // compare results\n      String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult,\n          slaveQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n    \n    //stop slave\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n    //change solrconfig having 'replicateAfter startup' option on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    // now we restart to test what happens with no activity before the slave tries to\n    // replicate\n    masterJetty.stop();\n    masterJetty.start(true);\n \n    //masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    //start slave\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    // NOTE: the master only replicates after startup now!\n    // revert that change.\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    //start slave\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    } finally {\n      resetFactory();\n    }\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4c7856260bc28f285ae7bfefa99b28db4dca6daf","date":1395253500,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterStartupWithNoActivity().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterStartupWithNoActivity().mjava","sourceNew":"  @Test\n  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      // stop slave\n      slaveJetty.stop();\n      \n      nDocs--;\n      masterClient.deleteByQuery(\"*:*\");\n      \n      masterClient.commit();\n      \n      // change solrconfig having 'replicateAfter startup' option on master\n      master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n          \"solrconfig.xml\");\n      \n      masterJetty.stop();\n      \n      masterJetty = createJetty(master);\n      masterClient.shutdown();\n      masterClient = createNewSolrServer(masterJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      // now we restart to test what happens with no activity before the slave\n      // tries to\n      // replicate\n      masterJetty.stop();\n      masterJetty.start(true);\n      \n      // masterClient = createNewSolrServer(masterJetty.getLocalPort());\n      \n      NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n      SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, masterQueryResult.getNumFound());\n      \n      slave.setTestPort(masterJetty.getLocalPort());\n      slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      // start slave\n      slaveJetty = createJetty(slave);\n      slaveClient.shutdown();\n      slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n      \n      // get docs from slave and check if number is equal to master\n      NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n      SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, slaveQueryResult.getNumFound());\n      \n      // compare results\n      String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult,\n          slaveQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      // stop slave\n      slaveJetty.stop();\n      \n      nDocs--;\n      masterClient.deleteByQuery(\"*:*\");\n      \n      masterClient.commit();\n      \n      // change solrconfig having 'replicateAfter startup' option on master\n      master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n          \"solrconfig.xml\");\n      \n      masterJetty.stop();\n      \n      masterJetty = createJetty(master);\n      masterClient = createNewSolrServer(masterJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      // now we restart to test what happens with no activity before the slave\n      // tries to\n      // replicate\n      masterJetty.stop();\n      masterJetty.start(true);\n      \n      // masterClient = createNewSolrServer(masterJetty.getLocalPort());\n      \n      NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n      SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, masterQueryResult.getNumFound());\n      \n      slave.setTestPort(masterJetty.getLocalPort());\n      slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      // start slave\n      slaveJetty = createJetty(slave);\n      slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n      \n      // get docs from slave and check if number is equal to master\n      NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n      SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, slaveQueryResult.getNumFound());\n      \n      // compare results\n      String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult,\n          slaveQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterStartupWithNoActivity().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterStartupWithNoActivity().mjava","sourceNew":"  @Test\n  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      // stop slave\n      slaveJetty.stop();\n      \n      nDocs--;\n      masterClient.deleteByQuery(\"*:*\");\n      \n      masterClient.commit();\n      \n      // change solrconfig having 'replicateAfter startup' option on master\n      master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n          \"solrconfig.xml\");\n      \n      masterJetty.stop();\n      \n      masterJetty = createJetty(master);\n      masterClient.shutdown();\n      masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      // now we restart to test what happens with no activity before the slave\n      // tries to\n      // replicate\n      masterJetty.stop();\n      masterJetty.start(true);\n      \n      // masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n      SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, masterQueryResult.getNumFound());\n      \n      slave.setTestPort(masterJetty.getLocalPort());\n      slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      // start slave\n      slaveJetty = createJetty(slave);\n      slaveClient.shutdown();\n      slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n      \n      // get docs from slave and check if number is equal to master\n      NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n      SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, slaveQueryResult.getNumFound());\n      \n      // compare results\n      String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult,\n          slaveQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      // stop slave\n      slaveJetty.stop();\n      \n      nDocs--;\n      masterClient.deleteByQuery(\"*:*\");\n      \n      masterClient.commit();\n      \n      // change solrconfig having 'replicateAfter startup' option on master\n      master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n          \"solrconfig.xml\");\n      \n      masterJetty.stop();\n      \n      masterJetty = createJetty(master);\n      masterClient.shutdown();\n      masterClient = createNewSolrServer(masterJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      // now we restart to test what happens with no activity before the slave\n      // tries to\n      // replicate\n      masterJetty.stop();\n      masterJetty.start(true);\n      \n      // masterClient = createNewSolrServer(masterJetty.getLocalPort());\n      \n      NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n      SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, masterQueryResult.getNumFound());\n      \n      slave.setTestPort(masterJetty.getLocalPort());\n      slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      // start slave\n      slaveJetty = createJetty(slave);\n      slaveClient.shutdown();\n      slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n      \n      // get docs from slave and check if number is equal to master\n      NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n      SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, slaveQueryResult.getNumFound());\n      \n      // compare results\n      String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult,\n          slaveQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cc3b13b430571c2e169f98fe38e1e7666f88522d","date":1422446157,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterStartupWithNoActivity().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterStartupWithNoActivity().mjava","sourceNew":"  @Test\n  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      // stop slave\n      slaveJetty.stop();\n      \n      nDocs--;\n      masterClient.deleteByQuery(\"*:*\");\n      \n      masterClient.commit();\n      \n      // change solrconfig having 'replicateAfter startup' option on master\n      master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n          \"solrconfig.xml\");\n      \n      masterJetty.stop();\n      \n      masterJetty = createJetty(master);\n      masterClient.close();\n      masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      // now we restart to test what happens with no activity before the slave\n      // tries to\n      // replicate\n      masterJetty.stop();\n      masterJetty.start(true);\n      \n      // masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n      SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, masterQueryResult.getNumFound());\n      \n      slave.setTestPort(masterJetty.getLocalPort());\n      slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      // start slave\n      slaveJetty = createJetty(slave);\n      slaveClient.close();\n      slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n      \n      // get docs from slave and check if number is equal to master\n      NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n      SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, slaveQueryResult.getNumFound());\n      \n      // compare results\n      String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult,\n          slaveQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      // stop slave\n      slaveJetty.stop();\n      \n      nDocs--;\n      masterClient.deleteByQuery(\"*:*\");\n      \n      masterClient.commit();\n      \n      // change solrconfig having 'replicateAfter startup' option on master\n      master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n          \"solrconfig.xml\");\n      \n      masterJetty.stop();\n      \n      masterJetty = createJetty(master);\n      masterClient.shutdown();\n      masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      // now we restart to test what happens with no activity before the slave\n      // tries to\n      // replicate\n      masterJetty.stop();\n      masterJetty.start(true);\n      \n      // masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n      SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, masterQueryResult.getNumFound());\n      \n      slave.setTestPort(masterJetty.getLocalPort());\n      slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      // start slave\n      slaveJetty = createJetty(slave);\n      slaveClient.shutdown();\n      slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n      \n      // get docs from slave and check if number is equal to master\n      NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n      SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, slaveQueryResult.getNumFound());\n      \n      // compare results\n      String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult,\n          slaveQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9bc766d645fa848f86c381c7f6acf2c881c99399","date":1425549246,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterStartupWithNoActivity().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterStartupWithNoActivity().mjava","sourceNew":"  @Test\n  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      // stop slave\n      slaveJetty.stop();\n      \n      nDocs--;\n      masterClient.deleteByQuery(\"*:*\");\n      \n      masterClient.commit();\n      \n      // change solrconfig having 'replicateAfter startup' option on master\n      master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n          \"solrconfig.xml\");\n      \n      masterJetty.stop();\n      \n      masterJetty = createJetty(master);\n      masterClient.close();\n      masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      // now we restart to test what happens with no activity before the slave\n      // tries to\n      // replicate\n      masterJetty.stop();\n      masterJetty.start();\n      \n      // masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n      SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, masterQueryResult.getNumFound());\n      \n      slave.setTestPort(masterJetty.getLocalPort());\n      slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      // start slave\n      slaveJetty = createJetty(slave);\n      slaveClient.close();\n      slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n      \n      // get docs from slave and check if number is equal to master\n      NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n      SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, slaveQueryResult.getNumFound());\n      \n      // compare results\n      String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult,\n          slaveQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      // stop slave\n      slaveJetty.stop();\n      \n      nDocs--;\n      masterClient.deleteByQuery(\"*:*\");\n      \n      masterClient.commit();\n      \n      // change solrconfig having 'replicateAfter startup' option on master\n      master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n          \"solrconfig.xml\");\n      \n      masterJetty.stop();\n      \n      masterJetty = createJetty(master);\n      masterClient.close();\n      masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      // now we restart to test what happens with no activity before the slave\n      // tries to\n      // replicate\n      masterJetty.stop();\n      masterJetty.start(true);\n      \n      // masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n      SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, masterQueryResult.getNumFound());\n      \n      slave.setTestPort(masterJetty.getLocalPort());\n      slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      // start slave\n      slaveJetty = createJetty(slave);\n      slaveClient.close();\n      slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n      \n      // get docs from slave and check if number is equal to master\n      NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n      SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, slaveQueryResult.getNumFound());\n      \n      // compare results\n      String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult,\n          slaveQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterStartupWithNoActivity().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterStartupWithNoActivity().mjava","sourceNew":"  @Test\n  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      // stop slave\n      slaveJetty.stop();\n      \n      nDocs--;\n      masterClient.deleteByQuery(\"*:*\");\n      \n      masterClient.commit();\n      \n      // change solrconfig having 'replicateAfter startup' option on master\n      master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n          \"solrconfig.xml\");\n      \n      masterJetty.stop();\n      \n      masterJetty = createJetty(master);\n      masterClient.close();\n      masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      // now we restart to test what happens with no activity before the slave\n      // tries to\n      // replicate\n      masterJetty.stop();\n      masterJetty.start();\n      \n      // masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n      SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, masterQueryResult.getNumFound());\n      \n      slave.setTestPort(masterJetty.getLocalPort());\n      slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      // start slave\n      slaveJetty = createJetty(slave);\n      slaveClient.close();\n      slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n      \n      // get docs from slave and check if number is equal to master\n      NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n      SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, slaveQueryResult.getNumFound());\n      \n      // compare results\n      String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult,\n          slaveQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      // stop slave\n      slaveJetty.stop();\n      \n      nDocs--;\n      masterClient.deleteByQuery(\"*:*\");\n      \n      masterClient.commit();\n      \n      // change solrconfig having 'replicateAfter startup' option on master\n      master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n          \"solrconfig.xml\");\n      \n      masterJetty.stop();\n      \n      masterJetty = createJetty(master);\n      masterClient.close();\n      masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      // now we restart to test what happens with no activity before the slave\n      // tries to\n      // replicate\n      masterJetty.stop();\n      masterJetty.start(true);\n      \n      // masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n      SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, masterQueryResult.getNumFound());\n      \n      slave.setTestPort(masterJetty.getLocalPort());\n      slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      // start slave\n      slaveJetty = createJetty(slave);\n      slaveClient.close();\n      slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n      \n      // get docs from slave and check if number is equal to master\n      NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n      SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, slaveQueryResult.getNumFound());\n      \n      // compare results\n      String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult,\n          slaveQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterStartupWithNoActivity().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterStartupWithNoActivity().mjava","sourceNew":"  @Test\n  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      // stop slave\n      slaveJetty.stop();\n      \n      nDocs--;\n      masterClient.deleteByQuery(\"*:*\");\n      \n      masterClient.commit();\n      \n      // change solrconfig having 'replicateAfter startup' option on master\n      master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n          \"solrconfig.xml\");\n      \n      masterJetty.stop();\n      \n      masterJetty = createAndStartJetty(master);\n      masterClient.close();\n      masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      // now we restart to test what happens with no activity before the slave\n      // tries to\n      // replicate\n      masterJetty.stop();\n      masterJetty.start();\n      \n      // masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n      SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, masterQueryResult.getNumFound());\n      \n      slave.setTestPort(masterJetty.getLocalPort());\n      slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      // start slave\n      slaveJetty = createAndStartJetty(slave);\n      slaveClient.close();\n      slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n      \n      // get docs from slave and check if number is equal to master\n      NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n      SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, slaveQueryResult.getNumFound());\n      \n      // compare results\n      String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult,\n          slaveQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      // stop slave\n      slaveJetty.stop();\n      \n      nDocs--;\n      masterClient.deleteByQuery(\"*:*\");\n      \n      masterClient.commit();\n      \n      // change solrconfig having 'replicateAfter startup' option on master\n      master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n          \"solrconfig.xml\");\n      \n      masterJetty.stop();\n      \n      masterJetty = createJetty(master);\n      masterClient.close();\n      masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      // now we restart to test what happens with no activity before the slave\n      // tries to\n      // replicate\n      masterJetty.stop();\n      masterJetty.start();\n      \n      // masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n      SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, masterQueryResult.getNumFound());\n      \n      slave.setTestPort(masterJetty.getLocalPort());\n      slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      // start slave\n      slaveJetty = createJetty(slave);\n      slaveClient.close();\n      slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n      \n      // get docs from slave and check if number is equal to master\n      NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n      SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, slaveQueryResult.getNumFound());\n      \n      // compare results\n      String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult,\n          slaveQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n\n","bugFix":["0821fb2632567b97517fef4d350c09297f996615"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterStartupWithNoActivity().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterStartupWithNoActivity().mjava","sourceNew":"  @Test\n  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      // stop slave\n      slaveJetty.stop();\n      \n      nDocs--;\n      masterClient.deleteByQuery(\"*:*\");\n      \n      masterClient.commit();\n      \n      // change solrconfig having 'replicateAfter startup' option on master\n      master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n          \"solrconfig.xml\");\n      \n      masterJetty.stop();\n      \n      masterJetty = createAndStartJetty(master);\n      masterClient.close();\n      masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      // now we restart to test what happens with no activity before the slave\n      // tries to\n      // replicate\n      masterJetty.stop();\n      masterJetty.start();\n      \n      // masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      @SuppressWarnings({\"rawtypes\"})\n      NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n      SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, masterQueryResult.getNumFound());\n      \n      slave.setTestPort(masterJetty.getLocalPort());\n      slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      // start slave\n      slaveJetty = createAndStartJetty(slave);\n      slaveClient.close();\n      slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n      \n      // get docs from slave and check if number is equal to master\n      @SuppressWarnings({\"rawtypes\"})\n      NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n      SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, slaveQueryResult.getNumFound());\n      \n      // compare results\n      String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult,\n          slaveQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      // stop slave\n      slaveJetty.stop();\n      \n      nDocs--;\n      masterClient.deleteByQuery(\"*:*\");\n      \n      masterClient.commit();\n      \n      // change solrconfig having 'replicateAfter startup' option on master\n      master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n          \"solrconfig.xml\");\n      \n      masterJetty.stop();\n      \n      masterJetty = createAndStartJetty(master);\n      masterClient.close();\n      masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      // now we restart to test what happens with no activity before the slave\n      // tries to\n      // replicate\n      masterJetty.stop();\n      masterJetty.start();\n      \n      // masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n      SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, masterQueryResult.getNumFound());\n      \n      slave.setTestPort(masterJetty.getLocalPort());\n      slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      // start slave\n      slaveJetty = createAndStartJetty(slave);\n      slaveClient.close();\n      slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n      \n      // get docs from slave and check if number is equal to master\n      NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n      SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, slaveQueryResult.getNumFound());\n      \n      // compare results\n      String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult,\n          slaveQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65a5d87a40f9143cd55be76eb1dde1b32a8dae5e","date":1596664368,"type":3,"author":"Marcus","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterStartupWithNoActivity().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterStartupWithNoActivity().mjava","sourceNew":"  @Test\n  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      // stop follower\n      followerJetty.stop();\n      \n      nDocs--;\n      leaderClient.deleteByQuery(\"*:*\");\n      \n      leaderClient.commit();\n      \n      // change solrconfig having 'replicateAfter startup' option on leader\n      leader.copyConfigFile(CONF_DIR + \"solrconfig-leader2.xml\",\n          \"solrconfig.xml\");\n      \n      leaderJetty.stop();\n      \n      leaderJetty = createAndStartJetty(leader);\n      leaderClient.close();\n      leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      leaderClient.commit();\n      \n      // now we restart to test what happens with no activity before the follower\n      // tries to\n      // replicate\n      leaderJetty.stop();\n      leaderJetty.start();\n      \n      // leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n      \n      @SuppressWarnings({\"rawtypes\"})\n      NamedList leaderQueryRsp = rQuery(nDocs, \"*:*\", leaderClient);\n      SolrDocumentList leaderQueryResult = (SolrDocumentList) leaderQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, leaderQueryResult.getNumFound());\n      \n      follower.setTestPort(leaderJetty.getLocalPort());\n      follower.copyConfigFile(follower.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      // start follower\n      followerJetty = createAndStartJetty(follower);\n      followerClient.close();\n      followerClient = createNewSolrClient(followerJetty.getLocalPort());\n      \n      // get docs from follower and check if number is equal to leader\n      @SuppressWarnings({\"rawtypes\"})\n      NamedList followerQueryRsp = rQuery(nDocs, \"*:*\", followerClient);\n      SolrDocumentList followerQueryResult = (SolrDocumentList) followerQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, followerQueryResult.getNumFound());\n      \n      // compare results\n      String cmp = BaseDistributedSearchTestCase.compare(leaderQueryResult,\n          followerQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      // stop slave\n      slaveJetty.stop();\n      \n      nDocs--;\n      masterClient.deleteByQuery(\"*:*\");\n      \n      masterClient.commit();\n      \n      // change solrconfig having 'replicateAfter startup' option on master\n      master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n          \"solrconfig.xml\");\n      \n      masterJetty.stop();\n      \n      masterJetty = createAndStartJetty(master);\n      masterClient.close();\n      masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      // now we restart to test what happens with no activity before the slave\n      // tries to\n      // replicate\n      masterJetty.stop();\n      masterJetty.start();\n      \n      // masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      @SuppressWarnings({\"rawtypes\"})\n      NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n      SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, masterQueryResult.getNumFound());\n      \n      slave.setTestPort(masterJetty.getLocalPort());\n      slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      // start slave\n      slaveJetty = createAndStartJetty(slave);\n      slaveClient.close();\n      slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n      \n      // get docs from slave and check if number is equal to master\n      @SuppressWarnings({\"rawtypes\"})\n      NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n      SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, slaveQueryResult.getNumFound());\n      \n      // compare results\n      String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult,\n          slaveQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"65a5d87a40f9143cd55be76eb1dde1b32a8dae5e":["e98520789adb1d5ad05afb4956eca0944a929688"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["9bc766d645fa848f86c381c7f6acf2c881c99399"],"9bc766d645fa848f86c381c7f6acf2c881c99399":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"bafca15d8e408346a67f4282ad1143b88023893b":["4c7856260bc28f285ae7bfefa99b28db4dca6daf"],"e98520789adb1d5ad05afb4956eca0944a929688":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["cc3b13b430571c2e169f98fe38e1e7666f88522d","9bc766d645fa848f86c381c7f6acf2c881c99399"],"eeb2d6b1dec4189402e35f8d8a39d411e80e140d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"61d5f95d14e5b9b046998c51e16709a398c15226":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","eeb2d6b1dec4189402e35f8d8a39d411e80e140d"],"4c7856260bc28f285ae7bfefa99b28db4dca6daf":["0821fb2632567b97517fef4d350c09297f996615"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["bafca15d8e408346a67f4282ad1143b88023893b"],"43e5779eeb016d5b6980fbf3437f3e8ff4dbf1d6":["eeb2d6b1dec4189402e35f8d8a39d411e80e140d"],"0821fb2632567b97517fef4d350c09297f996615":["1432a0acddbd504d67af13ed2d8cf80e43abf049"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["65a5d87a40f9143cd55be76eb1dde1b32a8dae5e"],"1432a0acddbd504d67af13ed2d8cf80e43abf049":["43e5779eeb016d5b6980fbf3437f3e8ff4dbf1d6"]},"commit2Childs":{"65a5d87a40f9143cd55be76eb1dde1b32a8dae5e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["e98520789adb1d5ad05afb4956eca0944a929688"],"9bc766d645fa848f86c381c7f6acf2c881c99399":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"bafca15d8e408346a67f4282ad1143b88023893b":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"e98520789adb1d5ad05afb4956eca0944a929688":["65a5d87a40f9143cd55be76eb1dde1b32a8dae5e"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"eeb2d6b1dec4189402e35f8d8a39d411e80e140d":["61d5f95d14e5b9b046998c51e16709a398c15226","43e5779eeb016d5b6980fbf3437f3e8ff4dbf1d6"],"61d5f95d14e5b9b046998c51e16709a398c15226":[],"4c7856260bc28f285ae7bfefa99b28db4dca6daf":["bafca15d8e408346a67f4282ad1143b88023893b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eeb2d6b1dec4189402e35f8d8a39d411e80e140d","61d5f95d14e5b9b046998c51e16709a398c15226"],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["9bc766d645fa848f86c381c7f6acf2c881c99399","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"43e5779eeb016d5b6980fbf3437f3e8ff4dbf1d6":["1432a0acddbd504d67af13ed2d8cf80e43abf049"],"0821fb2632567b97517fef4d350c09297f996615":["4c7856260bc28f285ae7bfefa99b28db4dca6daf"],"1432a0acddbd504d67af13ed2d8cf80e43abf049":["0821fb2632567b97517fef4d350c09297f996615"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","61d5f95d14e5b9b046998c51e16709a398c15226","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}