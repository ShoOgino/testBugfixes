{"path":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","pathOld":"src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","sourceNew":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n  }\n\n","sourceOld":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05564658d3fa47b6a8e3f61231dec9a84052a909","date":1269365098,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","sourceNew":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n  }\n\n","sourceOld":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8c99f43af5ceee3bc32feaeeacd0fbf5f29de6db","date":1287581040,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","sourceNew":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n    \n    // System.out.println(IOUtils.toString(new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"))));\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n    } finally {\n      fis.close();\n    }\n \n  }\n\n","sourceOld":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n  }\n\n","bugFix":null,"bugIntro":["c94352b6e8631393ac6c6021150b7c4dc21798ea","d1c2f76fc022aa441f0c9fed67189098870656a7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8017ab6544f30f93b106e419e7298173bad77f69","date":1287608126,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","sourceNew":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n    \n    // System.out.println(IOUtils.toString(new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"))));\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n    } finally {\n      fis.close();\n    }\n \n  }\n\n","sourceOld":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","sourceNew":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n    \n    // System.out.println(IOUtils.toString(new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"))));\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n    } finally {\n      fis.close();\n    }\n \n  }\n\n","sourceOld":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c94352b6e8631393ac6c6021150b7c4dc21798ea","date":1303227845,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","sourceNew":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n    \n    // System.out.println(IOUtils.toString(new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"))));\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n    } finally {\n      fis.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n    \n    // System.out.println(IOUtils.toString(new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"))));\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n    } finally {\n      fis.close();\n    }\n \n  }\n\n","bugFix":["8c99f43af5ceee3bc32feaeeacd0fbf5f29de6db"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d1c2f76fc022aa441f0c9fed67189098870656a7","date":1303317531,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","sourceNew":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n    \n    //System.out.println(IOUtils.toString(new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"))));\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(exists(\"/solr/cores[@hostPort='8983']\", document));\n      assertTrue(exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n    } finally {\n      fis.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n    \n    // System.out.println(IOUtils.toString(new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"))));\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n    } finally {\n      fis.close();\n    }\n  }\n\n","bugFix":["8c99f43af5ceee3bc32feaeeacd0fbf5f29de6db"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d493718201f0d0c54c773fb323d87bbd2fbffe41","date":1303546048,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","sourceNew":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n    \n    //System.out.println(IOUtils.toString(new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"))));\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(exists(\"/solr/cores[@hostPort='8983']\", document));\n      assertTrue(exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n    } finally {\n      fis.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n    \n    // System.out.println(IOUtils.toString(new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"))));\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n    } finally {\n      fis.close();\n    }\n \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","sourceNew":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n    \n    //System.out.println(IOUtils.toString(new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"))));\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(exists(\"/solr/cores[@hostPort='8983']\", document));\n      assertTrue(exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n    } finally {\n      fis.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n    \n    // System.out.println(IOUtils.toString(new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"))));\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n    } finally {\n      fis.close();\n    }\n \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","sourceNew":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n    \n    //System.out.println(IOUtils.toString(new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"))));\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(exists(\"/solr/cores[@hostPort='8983']\", document));\n      assertTrue(exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n    } finally {\n      fis.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n    \n    // System.out.println(IOUtils.toString(new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"))));\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n    } finally {\n      fis.close();\n    }\n \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d2901bdb2faeb41d619d969ce5655adf783746d","date":1309912641,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","sourceNew":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n    \n    System.out.println(IOUtils.toString(new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"))));\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(exists(\"/solr/cores[@hostPort='8983']\", document));\n      assertTrue(exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n    } finally {\n      fis.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n    \n    //System.out.println(IOUtils.toString(new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"))));\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(exists(\"/solr/cores[@hostPort='8983']\", document));\n      assertTrue(exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n    } finally {\n      fis.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","sourceNew":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n    \n    System.out.println(IOUtils.toString(new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"))));\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(exists(\"/solr/cores[@hostPort='8983']\", document));\n      assertTrue(exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n    } finally {\n      fis.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n    \n    //System.out.println(IOUtils.toString(new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"))));\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(exists(\"/solr/cores[@hostPort='8983']\", document));\n      assertTrue(exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n    } finally {\n      fis.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","sourceNew":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n    \n    System.out.println(IOUtils.toString(new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"))));\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(exists(\"/solr/cores[@hostPort='8983']\", document));\n      assertTrue(exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n    } finally {\n      fis.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n    \n    //System.out.println(IOUtils.toString(new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"))));\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(exists(\"/solr/cores[@hostPort='8983']\", document));\n      assertTrue(exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n    } finally {\n      fis.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db87dff140a22a01ba4481cb704283398dcfdccc","date":1310079380,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","sourceNew":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n\n    if (VERBOSE) {\n      FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n      try {\n        System.out.println(IOUtils.toString(fis));\n      } finally {\n        fis.close();\n      }\n    }\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(exists(\"/solr/cores[@hostPort='8983']\", document));\n      assertTrue(exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n    } finally {\n      fis.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n    \n    System.out.println(IOUtils.toString(new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"))));\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(exists(\"/solr/cores[@hostPort='8983']\", document));\n      assertTrue(exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n    } finally {\n      fis.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","sourceNew":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n    \n    System.out.println(IOUtils.toString(new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"))));\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(exists(\"/solr/cores[@hostPort='8983']\", document));\n      assertTrue(exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n    } finally {\n      fis.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n    \n    System.out.println(IOUtils.toString(new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"))));\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(exists(\"/solr/cores[@hostPort='8983']\", document));\n      assertTrue(exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n    } finally {\n      fis.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","sourceNew":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n\n    if (VERBOSE) {\n      FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n      try {\n        System.out.println(IOUtils.toString(fis));\n      } finally {\n        fis.close();\n      }\n    }\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(exists(\"/solr/cores[@hostPort='8983']\", document));\n      assertTrue(exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n    } finally {\n      fis.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n\n    if (VERBOSE) {\n      FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n      try {\n        System.out.println(IOUtils.toString(fis));\n      } finally {\n        fis.close();\n      }\n    }\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(exists(\"/solr/cores[@hostPort='8983']\", document));\n      assertTrue(exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n    } finally {\n      fis.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1291e4568eb7d9463d751627596ef14baf4c1603","date":1310112572,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","sourceNew":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n\n    if (VERBOSE) {\n      FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n      try {\n        System.out.println(IOUtils.toString(fis));\n      } finally {\n        fis.close();\n      }\n    }\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(exists(\"/solr/cores[@hostPort='8983']\", document));\n      assertTrue(exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n    } finally {\n      fis.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n    \n    System.out.println(IOUtils.toString(new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"))));\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(exists(\"/solr/cores[@hostPort='8983']\", document));\n      assertTrue(exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n    } finally {\n      fis.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","sourceNew":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n\n    if (VERBOSE) {\n      FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n      try {\n        System.out.println(IOUtils.toString(fis));\n      } finally {\n        fis.close();\n      }\n    }\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(exists(\"/solr/cores[@hostPort='8983']\", document));\n      assertTrue(exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n    } finally {\n      fis.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    SolrTestCaseJ4.ignoreException(\"unknown field\");\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      SolrTestCaseJ4.ignoreException(\"core0\");\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n    \n    SolrTestCaseJ4.resetExceptionIgnores();\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n\n    if (VERBOSE) {\n      FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n      try {\n        System.out.println(IOUtils.toString(fis));\n      } finally {\n        fis.close();\n      }\n    }\n    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    FileInputStream fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores[@defaultCoreName='core0']\", document));\n      assertTrue(exists(\"/solr/cores[@host='127.0.0.1']\", document));\n      assertTrue(exists(\"/solr/cores[@hostPort='8983']\", document));\n      assertTrue(exists(\"/solr/cores[@zkClientTimeout='8000']\", document));\n      assertTrue(exists(\"/solr/cores[@hostContext='solr']\", document));\n      \n    } finally {\n      fis.close();\n    }\n    \n    CoreAdminRequest.renameCore(name, \"renamed_core\", coreadmin);\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", getRenamedSolrAdmin());\n    \n    fis = new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"));\n    try {\n      Document document = builder.parse(fis);\n      assertTrue(exists(\"/solr/cores/core[@name='renamed_core']\", document));\n    } finally {\n      fis.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"db87dff140a22a01ba4481cb704283398dcfdccc":["8d2901bdb2faeb41d619d969ce5655adf783746d"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["db87dff140a22a01ba4481cb704283398dcfdccc","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"d1c2f76fc022aa441f0c9fed67189098870656a7":["c94352b6e8631393ac6c6021150b7c4dc21798ea"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["8017ab6544f30f93b106e419e7298173bad77f69","d1c2f76fc022aa441f0c9fed67189098870656a7"],"8c99f43af5ceee3bc32feaeeacd0fbf5f29de6db":["05564658d3fa47b6a8e3f61231dec9a84052a909"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["05564658d3fa47b6a8e3f61231dec9a84052a909","8c99f43af5ceee3bc32feaeeacd0fbf5f29de6db"],"d493718201f0d0c54c773fb323d87bbd2fbffe41":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d1c2f76fc022aa441f0c9fed67189098870656a7"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["d1c2f76fc022aa441f0c9fed67189098870656a7","8d2901bdb2faeb41d619d969ce5655adf783746d"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a3776dccca01c11e7046323cfad46a3b4a471233","8d2901bdb2faeb41d619d969ce5655adf783746d"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"c94352b6e8631393ac6c6021150b7c4dc21798ea":["8c99f43af5ceee3bc32feaeeacd0fbf5f29de6db"],"05564658d3fa47b6a8e3f61231dec9a84052a909":["1da8d55113b689b06716246649de6f62430f15c0"],"1291e4568eb7d9463d751627596ef14baf4c1603":["d083e83f225b11e5fdd900e83d26ddb385b6955c","db87dff140a22a01ba4481cb704283398dcfdccc"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["817d8435e9135b756f08ce6710ab0baac51bdf88"],"a3776dccca01c11e7046323cfad46a3b4a471233":["8c99f43af5ceee3bc32feaeeacd0fbf5f29de6db","d1c2f76fc022aa441f0c9fed67189098870656a7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8d2901bdb2faeb41d619d969ce5655adf783746d":["d1c2f76fc022aa441f0c9fed67189098870656a7"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["db87dff140a22a01ba4481cb704283398dcfdccc"],"8017ab6544f30f93b106e419e7298173bad77f69":["05564658d3fa47b6a8e3f61231dec9a84052a909","8c99f43af5ceee3bc32feaeeacd0fbf5f29de6db"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"db87dff140a22a01ba4481cb704283398dcfdccc":["c26f00b574427b55127e869b935845554afde1fa","1291e4568eb7d9463d751627596ef14baf4c1603","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d1c2f76fc022aa441f0c9fed67189098870656a7":["135621f3a0670a9394eb563224a3b76cc4dddc0f","d493718201f0d0c54c773fb323d87bbd2fbffe41","d083e83f225b11e5fdd900e83d26ddb385b6955c","a3776dccca01c11e7046323cfad46a3b4a471233","8d2901bdb2faeb41d619d969ce5655adf783746d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"8c99f43af5ceee3bc32feaeeacd0fbf5f29de6db":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c94352b6e8631393ac6c6021150b7c4dc21798ea","a3776dccca01c11e7046323cfad46a3b4a471233","8017ab6544f30f93b106e419e7298173bad77f69"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d493718201f0d0c54c773fb323d87bbd2fbffe41"],"d493718201f0d0c54c773fb323d87bbd2fbffe41":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["1291e4568eb7d9463d751627596ef14baf4c1603"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"1da8d55113b689b06716246649de6f62430f15c0":["05564658d3fa47b6a8e3f61231dec9a84052a909"],"c94352b6e8631393ac6c6021150b7c4dc21798ea":["d1c2f76fc022aa441f0c9fed67189098870656a7"],"05564658d3fa47b6a8e3f61231dec9a84052a909":["8c99f43af5ceee3bc32feaeeacd0fbf5f29de6db","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","8017ab6544f30f93b106e419e7298173bad77f69"],"1291e4568eb7d9463d751627596ef14baf4c1603":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a3776dccca01c11e7046323cfad46a3b4a471233":["817d8435e9135b756f08ce6710ab0baac51bdf88"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"8d2901bdb2faeb41d619d969ce5655adf783746d":["db87dff140a22a01ba4481cb704283398dcfdccc","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"8017ab6544f30f93b106e419e7298173bad77f69":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","d493718201f0d0c54c773fb323d87bbd2fbffe41","1291e4568eb7d9463d751627596ef14baf4c1603","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}