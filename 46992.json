{"path":"lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#setMaxThreadCount(int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#setMaxThreadCount(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#setMaxThreadCount(int).mjava","sourceNew":"  /** Sets the max # simultaneous merge threads that should\n   *  be running at once.  This must be <= {@link\n   *  #setMaxMergeCount}. */\n  public void setMaxThreadCount(int count) {\n    if (count < 1) {\n      throw new IllegalArgumentException(\"count should be at least 1\");\n    }\n    if (count > maxMergeCount) {\n      throw new IllegalArgumentException(\"count should be <= maxMergeCount (= \" + maxMergeCount + \")\");\n    }\n    maxThreadCount = count;\n  }\n\n","sourceOld":"  /** Sets the max # simultaneous merge threads that should\n   *  be running at once.  This must be <= {@link\n   *  #setMaxMergeCount}. */\n  public void setMaxThreadCount(int count) {\n    if (count < 1) {\n      throw new IllegalArgumentException(\"count should be at least 1\");\n    }\n    if (count > maxMergeCount) {\n      throw new IllegalArgumentException(\"count should be <= maxMergeCount (= \" + maxMergeCount + \")\");\n    }\n    maxThreadCount = count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be3b141eed4372b3eb04def61ab79f86f572f481","date":1372468407,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#setMaxThreadCount(int).mjava","sourceNew":null,"sourceOld":"  /** Sets the max # simultaneous merge threads that should\n   *  be running at once.  This must be <= {@link\n   *  #setMaxMergeCount}. */\n  public void setMaxThreadCount(int count) {\n    if (count < 1) {\n      throw new IllegalArgumentException(\"count should be at least 1\");\n    }\n    if (count > maxMergeCount) {\n      throw new IllegalArgumentException(\"count should be <= maxMergeCount (= \" + maxMergeCount + \")\");\n    }\n    maxThreadCount = count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":4,"author":"Han Jiang","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#setMaxThreadCount(int).mjava","sourceNew":null,"sourceOld":"  /** Sets the max # simultaneous merge threads that should\n   *  be running at once.  This must be <= {@link\n   *  #setMaxMergeCount}. */\n  public void setMaxThreadCount(int count) {\n    if (count < 1) {\n      throw new IllegalArgumentException(\"count should be at least 1\");\n    }\n    if (count > maxMergeCount) {\n      throw new IllegalArgumentException(\"count should be <= maxMergeCount (= \" + maxMergeCount + \")\");\n    }\n    maxThreadCount = count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","be3b141eed4372b3eb04def61ab79f86f572f481"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"be3b141eed4372b3eb04def61ab79f86f572f481":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["be3b141eed4372b3eb04def61ab79f86f572f481"]},"commit2Childs":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["37a0f60745e53927c4c876cfe5b5a58170f0646c","be3b141eed4372b3eb04def61ab79f86f572f481"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"be3b141eed4372b3eb04def61ab79f86f572f481":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}