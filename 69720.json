{"path":"lucene/src/test-framework/java/org/apache/lucene/analysis/MockTokenizer#MockTokenizer(AttributeFactory,Reader,CharacterRunAutomaton,boolean,int).mjava","commits":[{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/analysis/MockTokenizer#MockTokenizer(AttributeFactory,Reader,CharacterRunAutomaton,boolean,int).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenizer#MockTokenizer(AttributeFactory,Reader,CharacterRunAutomaton,boolean,int).mjava","sourceNew":"  public MockTokenizer(AttributeFactory factory, Reader input, CharacterRunAutomaton runAutomaton, boolean lowerCase, int maxTokenLength) {\n    super(factory, input);\n    this.runAutomaton = runAutomaton;\n    this.lowerCase = lowerCase;\n    this.state = runAutomaton.getInitialState();\n    this.streamState = State.SETREADER;\n    this.maxTokenLength = maxTokenLength;\n  }\n\n","sourceOld":"  public MockTokenizer(AttributeFactory factory, Reader input, CharacterRunAutomaton runAutomaton, boolean lowerCase, int maxTokenLength) {\n    super(factory, input);\n    this.runAutomaton = runAutomaton;\n    this.lowerCase = lowerCase;\n    this.state = runAutomaton.getInitialState();\n    this.streamState = State.SETREADER;\n    this.maxTokenLength = maxTokenLength;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockTokenizer#MockTokenizer(AttributeFactory,Reader,CharacterRunAutomaton,boolean,int).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/analysis/MockTokenizer#MockTokenizer(AttributeFactory,Reader,CharacterRunAutomaton,boolean,int).mjava","sourceNew":"  public MockTokenizer(AttributeFactory factory, Reader input, CharacterRunAutomaton runAutomaton, boolean lowerCase, int maxTokenLength) {\n    super(factory, input);\n    this.runAutomaton = runAutomaton;\n    this.lowerCase = lowerCase;\n    this.state = runAutomaton.getInitialState();\n    this.streamState = State.SETREADER;\n    this.maxTokenLength = maxTokenLength;\n  }\n\n","sourceOld":"  public MockTokenizer(AttributeFactory factory, Reader input, CharacterRunAutomaton runAutomaton, boolean lowerCase, int maxTokenLength) {\n    super(factory, input);\n    this.runAutomaton = runAutomaton;\n    this.lowerCase = lowerCase;\n    this.state = runAutomaton.getInitialState();\n    this.streamState = State.SETREADER;\n    this.maxTokenLength = maxTokenLength;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["7b91922b55d15444d554721b352861d028eb8278"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b91922b55d15444d554721b352861d028eb8278"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}