{"path":"lucene/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9172d6bebb12f0bba2ebb1756779c2f8948ab7e","date":1327848882,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = IndexReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"f9172d6bebb12f0bba2ebb1756779c2f8948ab7e":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["1f653cfcf159baeaafe5d01682a911e95bba4012","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d572389229127c297dd1fa5ce4758e1cec41e799":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d572389229127c297dd1fa5ce4758e1cec41e799","1f653cfcf159baeaafe5d01682a911e95bba4012"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["f2c5f0cb44df114db4228c8f77861714b5cabaea","f9172d6bebb12f0bba2ebb1756779c2f8948ab7e"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"a3776dccca01c11e7046323cfad46a3b4a471233":["1f653cfcf159baeaafe5d01682a911e95bba4012","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b21422ff1d1d56499dec481f193b402e5e8def5b":["d572389229127c297dd1fa5ce4758e1cec41e799"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f9172d6bebb12f0bba2ebb1756779c2f8948ab7e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"d572389229127c297dd1fa5ce4758e1cec41e799":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b21422ff1d1d56499dec481f193b402e5e8def5b"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["f9172d6bebb12f0bba2ebb1756779c2f8948ab7e","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","5cab9a86bd67202d20b6adc463008c8e982b070a","a3776dccca01c11e7046323cfad46a3b4a471233"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["135621f3a0670a9394eb563224a3b76cc4dddc0f","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d572389229127c297dd1fa5ce4758e1cec41e799"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}