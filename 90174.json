{"path":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#initMergeReaders(IOUtils.IOFunction[SegmentCommitInfo,MergeReader]).mjava","commits":[{"id":"c2a23476693f2bd9a4b44cc3187c429a2e21dac2","date":1593289545,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#initMergeReaders(IOUtils.IOFunction[SegmentCommitInfo,MergeReader]).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Sets the merge readers for this merge.\n     */\n    void initMergeReaders(IOUtils.IOFunction<SegmentCommitInfo, MergeReader> readerFactory) throws IOException {\n      assert mergeReaders.isEmpty() : \"merge readers must be empty\";\n      assert mergeCompleted.isDone() == false : \"merge is already done\";\n      final ArrayList<MergeReader> readers = new ArrayList<>(segments.size());\n      try {\n        for (final SegmentCommitInfo info : segments) {\n          // Hold onto the \"live\" reader; we will use this to\n          // commit merged deletes\n          readers.add(readerFactory.apply(info));\n        }\n      } finally {\n        // ensure we assign this to close them in the case of an exception\n        this.mergeReaders = List.copyOf(readers); // we do a copy here to ensure that mergeReaders are an immutable list\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c2a23476693f2bd9a4b44cc3187c429a2e21dac2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c2a23476693f2bd9a4b44cc3187c429a2e21dac2"]},"commit2Childs":{"c2a23476693f2bd9a4b44cc3187c429a2e21dac2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c2a23476693f2bd9a4b44cc3187c429a2e21dac2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}