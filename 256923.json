{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DoubleEvaluator#doWork(Object).mjava","commits":[{"id":"d60fd4bf1b42425aefd75d8a133d8d7ea41722e9","date":1564497726,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DoubleEvaluator#doWork(Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      return ((List<?>)value).stream().map(innerValue -> doWork(innerValue)).collect(Collectors.toList());\n    }\n    else{\n      return Double.valueOf(value.toString());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":0,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DoubleEvaluator#doWork(Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      return ((List<?>)value).stream().map(innerValue -> doWork(innerValue)).collect(Collectors.toList());\n    }\n    else{\n      return Double.valueOf(value.toString());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3eb251dab40cb8cabcea8ed646a2c060d423f18","date":1570756765,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DoubleEvaluator#doWork(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DoubleEvaluator#doWork(Object).mjava","sourceNew":"  @Override\n  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      return ((List<?>)value).stream().map(innerValue -> doWork(innerValue)).collect(Collectors.toList());\n    }\n    else{\n      if(value instanceof String) {\n        return Double.valueOf(value.toString());\n      } else {\n        return ((Number) value).doubleValue();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      return ((List<?>)value).stream().map(innerValue -> doWork(innerValue)).collect(Collectors.toList());\n    }\n    else{\n      return Double.valueOf(value.toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DoubleEvaluator#doWork(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/DoubleEvaluator#doWork(Object).mjava","sourceNew":"  @Override\n  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      return ((List<?>)value).stream().map(innerValue -> doWork(innerValue)).collect(Collectors.toList());\n    }\n    else{\n      if(value instanceof String) {\n        return Double.valueOf(value.toString());\n      } else {\n        return ((Number) value).doubleValue();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      return ((List<?>)value).stream().map(innerValue -> doWork(innerValue)).collect(Collectors.toList());\n    }\n    else{\n      return Double.valueOf(value.toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c3eb251dab40cb8cabcea8ed646a2c060d423f18":["d60fd4bf1b42425aefd75d8a133d8d7ea41722e9"],"d60fd4bf1b42425aefd75d8a133d8d7ea41722e9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f8061ddd97f3352007d927dae445884a6f3d857b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d60fd4bf1b42425aefd75d8a133d8d7ea41722e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c3eb251dab40cb8cabcea8ed646a2c060d423f18"],"b0b597c65628ca9e73913a07e81691f8229bae35":["d60fd4bf1b42425aefd75d8a133d8d7ea41722e9","c3eb251dab40cb8cabcea8ed646a2c060d423f18"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d60fd4bf1b42425aefd75d8a133d8d7ea41722e9","f8061ddd97f3352007d927dae445884a6f3d857b"],"c3eb251dab40cb8cabcea8ed646a2c060d423f18":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"d60fd4bf1b42425aefd75d8a133d8d7ea41722e9":["c3eb251dab40cb8cabcea8ed646a2c060d423f18","f8061ddd97f3352007d927dae445884a6f3d857b","b0b597c65628ca9e73913a07e81691f8229bae35"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}