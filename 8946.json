{"path":"solr/solrj/src/test/org/apache/solr/common/util/DOMUtilTest#testAddToNamedListPrimitiveTypes().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/DOMUtilTest#testAddToNamedListPrimitiveTypes().mjava","pathOld":"solr/src/test/org/apache/solr/common/util/DOMUtilTest#testAddToNamedListPrimitiveTypes().mjava","sourceNew":"  public void testAddToNamedListPrimitiveTypes() throws Exception {\n    NamedList<Object> namedList = new SimpleOrderedMap<Object>();\n    DOMUtil.addToNamedList( getNode( \"<str name=\\\"String\\\">STRING</str>\", \"/str\" ), namedList, null );\n    assertTypeAndValue( namedList, \"String\", \"STRING\" );\n    DOMUtil.addToNamedList( getNode( \"<int name=\\\"Integer\\\">100</int>\", \"/int\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Integer\", Integer.valueOf( 100 ) );\n    DOMUtil.addToNamedList( getNode( \"<long name=\\\"Long\\\">200</long>\", \"/long\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Long\", Long.valueOf( 200 ) );\n    DOMUtil.addToNamedList( getNode( \"<float name=\\\"Float\\\">300</float>\", \"/float\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Float\", Float.valueOf( 300 ) );\n    DOMUtil.addToNamedList( getNode( \"<double name=\\\"Double\\\">400</double>\", \"/double\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Double\", Double.valueOf( 400 ) );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">true</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">on</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">yes</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">false</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">off</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">no</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n  }\n\n","sourceOld":"  public void testAddToNamedListPrimitiveTypes() throws Exception {\n    NamedList<Object> namedList = new SimpleOrderedMap<Object>();\n    DOMUtil.addToNamedList( getNode( \"<str name=\\\"String\\\">STRING</str>\", \"/str\" ), namedList, null );\n    assertTypeAndValue( namedList, \"String\", \"STRING\" );\n    DOMUtil.addToNamedList( getNode( \"<int name=\\\"Integer\\\">100</int>\", \"/int\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Integer\", Integer.valueOf( 100 ) );\n    DOMUtil.addToNamedList( getNode( \"<long name=\\\"Long\\\">200</long>\", \"/long\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Long\", Long.valueOf( 200 ) );\n    DOMUtil.addToNamedList( getNode( \"<float name=\\\"Float\\\">300</float>\", \"/float\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Float\", Float.valueOf( 300 ) );\n    DOMUtil.addToNamedList( getNode( \"<double name=\\\"Double\\\">400</double>\", \"/double\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Double\", Double.valueOf( 400 ) );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">true</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">on</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">yes</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">false</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">off</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">no</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/DOMUtilTest#testAddToNamedListPrimitiveTypes().mjava","pathOld":"solr/src/test/org/apache/solr/common/util/DOMUtilTest#testAddToNamedListPrimitiveTypes().mjava","sourceNew":"  public void testAddToNamedListPrimitiveTypes() throws Exception {\n    NamedList<Object> namedList = new SimpleOrderedMap<Object>();\n    DOMUtil.addToNamedList( getNode( \"<str name=\\\"String\\\">STRING</str>\", \"/str\" ), namedList, null );\n    assertTypeAndValue( namedList, \"String\", \"STRING\" );\n    DOMUtil.addToNamedList( getNode( \"<int name=\\\"Integer\\\">100</int>\", \"/int\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Integer\", Integer.valueOf( 100 ) );\n    DOMUtil.addToNamedList( getNode( \"<long name=\\\"Long\\\">200</long>\", \"/long\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Long\", Long.valueOf( 200 ) );\n    DOMUtil.addToNamedList( getNode( \"<float name=\\\"Float\\\">300</float>\", \"/float\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Float\", Float.valueOf( 300 ) );\n    DOMUtil.addToNamedList( getNode( \"<double name=\\\"Double\\\">400</double>\", \"/double\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Double\", Double.valueOf( 400 ) );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">true</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">on</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">yes</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">false</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">off</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">no</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n  }\n\n","sourceOld":"  public void testAddToNamedListPrimitiveTypes() throws Exception {\n    NamedList<Object> namedList = new SimpleOrderedMap<Object>();\n    DOMUtil.addToNamedList( getNode( \"<str name=\\\"String\\\">STRING</str>\", \"/str\" ), namedList, null );\n    assertTypeAndValue( namedList, \"String\", \"STRING\" );\n    DOMUtil.addToNamedList( getNode( \"<int name=\\\"Integer\\\">100</int>\", \"/int\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Integer\", Integer.valueOf( 100 ) );\n    DOMUtil.addToNamedList( getNode( \"<long name=\\\"Long\\\">200</long>\", \"/long\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Long\", Long.valueOf( 200 ) );\n    DOMUtil.addToNamedList( getNode( \"<float name=\\\"Float\\\">300</float>\", \"/float\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Float\", Float.valueOf( 300 ) );\n    DOMUtil.addToNamedList( getNode( \"<double name=\\\"Double\\\">400</double>\", \"/double\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Double\", Double.valueOf( 400 ) );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">true</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">on</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">yes</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">false</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">off</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">no</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/DOMUtilTest#testAddToNamedListPrimitiveTypes().mjava","pathOld":"solr/src/test/org/apache/solr/common/util/DOMUtilTest#testAddToNamedListPrimitiveTypes().mjava","sourceNew":"  public void testAddToNamedListPrimitiveTypes() throws Exception {\n    NamedList<Object> namedList = new SimpleOrderedMap<Object>();\n    DOMUtil.addToNamedList( getNode( \"<str name=\\\"String\\\">STRING</str>\", \"/str\" ), namedList, null );\n    assertTypeAndValue( namedList, \"String\", \"STRING\" );\n    DOMUtil.addToNamedList( getNode( \"<int name=\\\"Integer\\\">100</int>\", \"/int\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Integer\", Integer.valueOf( 100 ) );\n    DOMUtil.addToNamedList( getNode( \"<long name=\\\"Long\\\">200</long>\", \"/long\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Long\", Long.valueOf( 200 ) );\n    DOMUtil.addToNamedList( getNode( \"<float name=\\\"Float\\\">300</float>\", \"/float\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Float\", Float.valueOf( 300 ) );\n    DOMUtil.addToNamedList( getNode( \"<double name=\\\"Double\\\">400</double>\", \"/double\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Double\", Double.valueOf( 400 ) );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">true</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">on</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">yes</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">false</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">off</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">no</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n  }\n\n","sourceOld":"  public void testAddToNamedListPrimitiveTypes() throws Exception {\n    NamedList<Object> namedList = new SimpleOrderedMap<Object>();\n    DOMUtil.addToNamedList( getNode( \"<str name=\\\"String\\\">STRING</str>\", \"/str\" ), namedList, null );\n    assertTypeAndValue( namedList, \"String\", \"STRING\" );\n    DOMUtil.addToNamedList( getNode( \"<int name=\\\"Integer\\\">100</int>\", \"/int\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Integer\", Integer.valueOf( 100 ) );\n    DOMUtil.addToNamedList( getNode( \"<long name=\\\"Long\\\">200</long>\", \"/long\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Long\", Long.valueOf( 200 ) );\n    DOMUtil.addToNamedList( getNode( \"<float name=\\\"Float\\\">300</float>\", \"/float\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Float\", Float.valueOf( 300 ) );\n    DOMUtil.addToNamedList( getNode( \"<double name=\\\"Double\\\">400</double>\", \"/double\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Double\", Double.valueOf( 400 ) );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">true</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">on</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">yes</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">false</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">off</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">no</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6a2315ba749856e5787b2ad962fa124bc3ed121","date":1334194349,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/DOMUtilTest#testAddToNamedListPrimitiveTypes().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/DOMUtilTest#testAddToNamedListPrimitiveTypes().mjava","sourceNew":"  public void testAddToNamedListPrimitiveTypes() throws Exception {\n    NamedList<Object> namedList = new SimpleOrderedMap<Object>();\n    DOMUtil.addToNamedList( getNode( \"<str name=\\\"String\\\">STRING</str>\", \"/str\" ), namedList, null );\n    assertTypeAndValue( namedList, \"String\", \"STRING\" );\n    DOMUtil.addToNamedList( getNode( \"<int name=\\\"Integer\\\">100</int>\", \"/int\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Integer\", Integer.valueOf( 100 ) );\n    DOMUtil.addToNamedList( getNode( \"<long name=\\\"Long\\\">200</long>\", \"/long\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Long\", Long.valueOf( 200 ) );\n    DOMUtil.addToNamedList( getNode( \"<float name=\\\"Float\\\">300</float>\", \"/float\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Float\", Float.valueOf( 300 ) );\n    DOMUtil.addToNamedList( getNode( \"<double name=\\\"Double\\\">400</double>\", \"/double\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Double\", Double.valueOf( 400 ) );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">true</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">on</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">yes</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">false</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">off</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">no</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n  }\n\n","sourceOld":"  public void testAddToNamedListPrimitiveTypes() throws Exception {\n    NamedList<Object> namedList = new SimpleOrderedMap<Object>();\n    DOMUtil.addToNamedList( getNode( \"<str name=\\\"String\\\">STRING</str>\", \"/str\" ), namedList, null );\n    assertTypeAndValue( namedList, \"String\", \"STRING\" );\n    DOMUtil.addToNamedList( getNode( \"<int name=\\\"Integer\\\">100</int>\", \"/int\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Integer\", Integer.valueOf( 100 ) );\n    DOMUtil.addToNamedList( getNode( \"<long name=\\\"Long\\\">200</long>\", \"/long\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Long\", Long.valueOf( 200 ) );\n    DOMUtil.addToNamedList( getNode( \"<float name=\\\"Float\\\">300</float>\", \"/float\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Float\", Float.valueOf( 300 ) );\n    DOMUtil.addToNamedList( getNode( \"<double name=\\\"Double\\\">400</double>\", \"/double\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Double\", Double.valueOf( 400 ) );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">true</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">on</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">yes</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">false</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">off</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">no</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23a18981fcc2648fd6e83e9e84e8fa023eb0484b","date":1602334330,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/DOMUtilTest#testAddToNamedListPrimitiveTypes().mjava","pathOld":"solr/core/src/test/org/apache/solr/util/DOMUtilTest#testAddToNamedListPrimitiveTypes().mjava","sourceNew":"  public void testAddToNamedListPrimitiveTypes() throws Exception {\n    NamedList<Object> namedList = new SimpleOrderedMap<>();\n    DOMUtil.addToNamedList( getNode( \"<str name=\\\"String\\\">STRING</str>\", \"/str\" ), namedList, null );\n    assertTypeAndValue( namedList, \"String\", \"STRING\" );\n    DOMUtil.addToNamedList( getNode( \"<int name=\\\"Integer\\\">100</int>\", \"/int\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Integer\", Integer.valueOf( 100 ) );\n    DOMUtil.addToNamedList( getNode( \"<long name=\\\"Long\\\">200</long>\", \"/long\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Long\", Long.valueOf( 200 ) );\n    DOMUtil.addToNamedList( getNode( \"<float name=\\\"Float\\\">300</float>\", \"/float\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Float\", Float.valueOf( 300 ) );\n    DOMUtil.addToNamedList( getNode( \"<double name=\\\"Double\\\">400</double>\", \"/double\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Double\", Double.valueOf( 400 ) );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">true</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">on</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">yes</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">false</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">off</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">no</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n  }\n\n","sourceOld":"  public void testAddToNamedListPrimitiveTypes() throws Exception {\n    NamedList<Object> namedList = new SimpleOrderedMap<>();\n    DOMUtil.addToNamedList( getNode( \"<str name=\\\"String\\\">STRING</str>\", \"/str\" ), namedList, null );\n    assertTypeAndValue( namedList, \"String\", \"STRING\" );\n    DOMUtil.addToNamedList( getNode( \"<int name=\\\"Integer\\\">100</int>\", \"/int\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Integer\", Integer.valueOf( 100 ) );\n    DOMUtil.addToNamedList( getNode( \"<long name=\\\"Long\\\">200</long>\", \"/long\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Long\", Long.valueOf( 200 ) );\n    DOMUtil.addToNamedList( getNode( \"<float name=\\\"Float\\\">300</float>\", \"/float\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Float\", Float.valueOf( 300 ) );\n    DOMUtil.addToNamedList( getNode( \"<double name=\\\"Double\\\">400</double>\", \"/double\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Double\", Double.valueOf( 400 ) );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">true</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">on</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">yes</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">false</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">off</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">no</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"23a18981fcc2648fd6e83e9e84e8fa023eb0484b":["e6a2315ba749856e5787b2ad962fa124bc3ed121"],"e6a2315ba749856e5787b2ad962fa124bc3ed121":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["23a18981fcc2648fd6e83e9e84e8fa023eb0484b"]},"commit2Childs":{"23a18981fcc2648fd6e83e9e84e8fa023eb0484b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e6a2315ba749856e5787b2ad962fa124bc3ed121":["23a18981fcc2648fd6e83e9e84e8fa023eb0484b"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["e6a2315ba749856e5787b2ad962fa124bc3ed121"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}