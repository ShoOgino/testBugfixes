{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeletesCheckIndexOutput().mjava","commits":[{"id":"90dfa8ee4e9e118b4c2c1c042bf57d9b460613de","date":1349114144,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeletesCheckIndexOutput().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-4455\n  public void testDeletesCheckIndexOutput() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(2);\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"0\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"field\", \"1\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n\n    w.deleteDocuments(new Term(\"field\", \"0\"));\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n    w.close();\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n    CheckIndex checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos, false, \"UTF-8\"), false);\n    CheckIndex.Status indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    String s = bos.toString(\"UTF-8\");\n\n    // Segment should have deletions:\n    assertTrue(s.contains(\"has deletions\"));\n    w = new IndexWriter(dir, iwc);\n    w.forceMerge(1);\n    w.close();\n\n    bos = new ByteArrayOutputStream(1024);\n    checker.setInfoStream(new PrintStream(bos, false, \"UTF-8\"), false);\n    indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    s = bos.toString(\"UTF-8\");\n    assertFalse(s.contains(\"has deletions\"));\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4ce24aa081e44190692bbebc8aead342ad7060e8"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4ce24aa081e44190692bbebc8aead342ad7060e8","date":1374951664,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeletesCheckIndexOutput().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeletesCheckIndexOutput().mjava","sourceNew":"  // LUCENE-4455\n  public void testDeletesCheckIndexOutput() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(2);\n    IndexWriter w = new IndexWriter(dir, iwc.clone());\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"0\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"field\", \"1\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n\n    w.deleteDocuments(new Term(\"field\", \"0\"));\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n    w.close();\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n    CheckIndex checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos, false, \"UTF-8\"), false);\n    CheckIndex.Status indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    String s = bos.toString(\"UTF-8\");\n\n    // Segment should have deletions:\n    assertTrue(s.contains(\"has deletions\"));\n    w = new IndexWriter(dir, iwc.clone());\n    w.forceMerge(1);\n    w.close();\n\n    bos = new ByteArrayOutputStream(1024);\n    checker.setInfoStream(new PrintStream(bos, false, \"UTF-8\"), false);\n    indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    s = bos.toString(\"UTF-8\");\n    assertFalse(s.contains(\"has deletions\"));\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-4455\n  public void testDeletesCheckIndexOutput() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(2);\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"0\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"field\", \"1\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n\n    w.deleteDocuments(new Term(\"field\", \"0\"));\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n    w.close();\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n    CheckIndex checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos, false, \"UTF-8\"), false);\n    CheckIndex.Status indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    String s = bos.toString(\"UTF-8\");\n\n    // Segment should have deletions:\n    assertTrue(s.contains(\"has deletions\"));\n    w = new IndexWriter(dir, iwc);\n    w.forceMerge(1);\n    w.close();\n\n    bos = new ByteArrayOutputStream(1024);\n    checker.setInfoStream(new PrintStream(bos, false, \"UTF-8\"), false);\n    indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    s = bos.toString(\"UTF-8\");\n    assertFalse(s.contains(\"has deletions\"));\n    dir.close();\n  }\n\n","bugFix":["90dfa8ee4e9e118b4c2c1c042bf57d9b460613de"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeletesCheckIndexOutput().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeletesCheckIndexOutput().mjava","sourceNew":"  // LUCENE-4455\n  public void testDeletesCheckIndexOutput() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(2);\n    IndexWriter w = new IndexWriter(dir, iwc.clone());\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"0\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"field\", \"1\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n\n    w.deleteDocuments(new Term(\"field\", \"0\"));\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n    w.close();\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n    CheckIndex checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos, false, \"UTF-8\"), false);\n    CheckIndex.Status indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    String s = bos.toString(\"UTF-8\");\n\n    // Segment should have deletions:\n    assertTrue(s.contains(\"has deletions\"));\n    w = new IndexWriter(dir, iwc.clone());\n    w.forceMerge(1);\n    w.close();\n\n    bos = new ByteArrayOutputStream(1024);\n    checker.setInfoStream(new PrintStream(bos, false, \"UTF-8\"), false);\n    indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    s = bos.toString(\"UTF-8\");\n    assertFalse(s.contains(\"has deletions\"));\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-4455\n  public void testDeletesCheckIndexOutput() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(2);\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"0\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"field\", \"1\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n\n    w.deleteDocuments(new Term(\"field\", \"0\"));\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n    w.close();\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n    CheckIndex checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos, false, \"UTF-8\"), false);\n    CheckIndex.Status indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    String s = bos.toString(\"UTF-8\");\n\n    // Segment should have deletions:\n    assertTrue(s.contains(\"has deletions\"));\n    w = new IndexWriter(dir, iwc);\n    w.forceMerge(1);\n    w.close();\n\n    bos = new ByteArrayOutputStream(1024);\n    checker.setInfoStream(new PrintStream(bos, false, \"UTF-8\"), false);\n    indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    s = bos.toString(\"UTF-8\");\n    assertFalse(s.contains(\"has deletions\"));\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeletesCheckIndexOutput().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeletesCheckIndexOutput().mjava","sourceNew":"  // LUCENE-4455\n  public void testDeletesCheckIndexOutput() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(2);\n    IndexWriter w = new IndexWriter(dir, iwc.clone());\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"0\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"field\", \"1\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n\n    w.deleteDocuments(new Term(\"field\", \"0\"));\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n    w.close();\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n    CheckIndex checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    CheckIndex.Status indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    String s = bos.toString(IOUtils.UTF_8);\n\n    // Segment should have deletions:\n    assertTrue(s.contains(\"has deletions\"));\n    w = new IndexWriter(dir, iwc.clone());\n    w.forceMerge(1);\n    w.close();\n\n    bos = new ByteArrayOutputStream(1024);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    s = bos.toString(IOUtils.UTF_8);\n    assertFalse(s.contains(\"has deletions\"));\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-4455\n  public void testDeletesCheckIndexOutput() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(2);\n    IndexWriter w = new IndexWriter(dir, iwc.clone());\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"0\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"field\", \"1\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n\n    w.deleteDocuments(new Term(\"field\", \"0\"));\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n    w.close();\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n    CheckIndex checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos, false, \"UTF-8\"), false);\n    CheckIndex.Status indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    String s = bos.toString(\"UTF-8\");\n\n    // Segment should have deletions:\n    assertTrue(s.contains(\"has deletions\"));\n    w = new IndexWriter(dir, iwc.clone());\n    w.forceMerge(1);\n    w.close();\n\n    bos = new ByteArrayOutputStream(1024);\n    checker.setInfoStream(new PrintStream(bos, false, \"UTF-8\"), false);\n    indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    s = bos.toString(\"UTF-8\");\n    assertFalse(s.contains(\"has deletions\"));\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeletesCheckIndexOutput().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeletesCheckIndexOutput().mjava","sourceNew":"  // LUCENE-4455\n  public void testDeletesCheckIndexOutput() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(2);\n    IndexWriter w = new IndexWriter(dir, iwc.clone());\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"0\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"field\", \"1\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n\n    w.deleteDocuments(new Term(\"field\", \"0\"));\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n    w.close();\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n    CheckIndex checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    CheckIndex.Status indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    String s = bos.toString(IOUtils.UTF_8);\n\n    // Segment should have deletions:\n    assertTrue(s.contains(\"has deletions\"));\n    w = new IndexWriter(dir, iwc.clone());\n    w.forceMerge(1);\n    w.close();\n\n    bos = new ByteArrayOutputStream(1024);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    s = bos.toString(IOUtils.UTF_8);\n    assertFalse(s.contains(\"has deletions\"));\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-4455\n  public void testDeletesCheckIndexOutput() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(2);\n    IndexWriter w = new IndexWriter(dir, iwc.clone());\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"0\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"field\", \"1\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n\n    w.deleteDocuments(new Term(\"field\", \"0\"));\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n    w.close();\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n    CheckIndex checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos, false, \"UTF-8\"), false);\n    CheckIndex.Status indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    String s = bos.toString(\"UTF-8\");\n\n    // Segment should have deletions:\n    assertTrue(s.contains(\"has deletions\"));\n    w = new IndexWriter(dir, iwc.clone());\n    w.forceMerge(1);\n    w.close();\n\n    bos = new ByteArrayOutputStream(1024);\n    checker.setInfoStream(new PrintStream(bos, false, \"UTF-8\"), false);\n    indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    s = bos.toString(\"UTF-8\");\n    assertFalse(s.contains(\"has deletions\"));\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeletesCheckIndexOutput().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeletesCheckIndexOutput().mjava","sourceNew":"  // LUCENE-4455\n  public void testDeletesCheckIndexOutput() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(2);\n    IndexWriter w = new IndexWriter(dir, iwc.clone());\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"0\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"field\", \"1\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n\n    w.deleteDocuments(new Term(\"field\", \"0\"));\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n    w.shutdown();\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n    CheckIndex checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    CheckIndex.Status indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    String s = bos.toString(IOUtils.UTF_8);\n\n    // Segment should have deletions:\n    assertTrue(s.contains(\"has deletions\"));\n    w = new IndexWriter(dir, iwc.clone());\n    w.forceMerge(1);\n    w.shutdown();\n\n    bos = new ByteArrayOutputStream(1024);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    s = bos.toString(IOUtils.UTF_8);\n    assertFalse(s.contains(\"has deletions\"));\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-4455\n  public void testDeletesCheckIndexOutput() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(2);\n    IndexWriter w = new IndexWriter(dir, iwc.clone());\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"0\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"field\", \"1\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n\n    w.deleteDocuments(new Term(\"field\", \"0\"));\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n    w.close();\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n    CheckIndex checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    CheckIndex.Status indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    String s = bos.toString(IOUtils.UTF_8);\n\n    // Segment should have deletions:\n    assertTrue(s.contains(\"has deletions\"));\n    w = new IndexWriter(dir, iwc.clone());\n    w.forceMerge(1);\n    w.close();\n\n    bos = new ByteArrayOutputStream(1024);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    s = bos.toString(IOUtils.UTF_8);\n    assertFalse(s.contains(\"has deletions\"));\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cfc45818441587d8004ff1a119fb60ac9ecb9a14","date":1401437797,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeletesCheckIndexOutput().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeletesCheckIndexOutput().mjava","sourceNew":"  // LUCENE-4455\n  public void testDeletesCheckIndexOutput() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(2);\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"0\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"field\", \"1\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n\n    w.deleteDocuments(new Term(\"field\", \"0\"));\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n    w.shutdown();\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n    CheckIndex checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    CheckIndex.Status indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    String s = bos.toString(IOUtils.UTF_8);\n\n    // Segment should have deletions:\n    assertTrue(s.contains(\"has deletions\"));\n    iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    w = new IndexWriter(dir, iwc);\n    w.forceMerge(1);\n    w.shutdown();\n\n    bos = new ByteArrayOutputStream(1024);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    s = bos.toString(IOUtils.UTF_8);\n    assertFalse(s.contains(\"has deletions\"));\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-4455\n  public void testDeletesCheckIndexOutput() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(2);\n    IndexWriter w = new IndexWriter(dir, iwc.clone());\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"0\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"field\", \"1\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n\n    w.deleteDocuments(new Term(\"field\", \"0\"));\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n    w.shutdown();\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n    CheckIndex checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    CheckIndex.Status indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    String s = bos.toString(IOUtils.UTF_8);\n\n    // Segment should have deletions:\n    assertTrue(s.contains(\"has deletions\"));\n    w = new IndexWriter(dir, iwc.clone());\n    w.forceMerge(1);\n    w.shutdown();\n\n    bos = new ByteArrayOutputStream(1024);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    s = bos.toString(IOUtils.UTF_8);\n    assertFalse(s.contains(\"has deletions\"));\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeletesCheckIndexOutput().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeletesCheckIndexOutput().mjava","sourceNew":"  // LUCENE-4455\n  public void testDeletesCheckIndexOutput() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(2);\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"0\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"field\", \"1\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n\n    w.deleteDocuments(new Term(\"field\", \"0\"));\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n    w.close();\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n    CheckIndex checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    CheckIndex.Status indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    String s = bos.toString(IOUtils.UTF_8);\n\n    // Segment should have deletions:\n    assertTrue(s.contains(\"has deletions\"));\n    iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    w = new IndexWriter(dir, iwc);\n    w.forceMerge(1);\n    w.close();\n\n    bos = new ByteArrayOutputStream(1024);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    s = bos.toString(IOUtils.UTF_8);\n    assertFalse(s.contains(\"has deletions\"));\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-4455\n  public void testDeletesCheckIndexOutput() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(2);\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"0\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"field\", \"1\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n\n    w.deleteDocuments(new Term(\"field\", \"0\"));\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n    w.shutdown();\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n    CheckIndex checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    CheckIndex.Status indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    String s = bos.toString(IOUtils.UTF_8);\n\n    // Segment should have deletions:\n    assertTrue(s.contains(\"has deletions\"));\n    iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    w = new IndexWriter(dir, iwc);\n    w.forceMerge(1);\n    w.shutdown();\n\n    bos = new ByteArrayOutputStream(1024);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    s = bos.toString(IOUtils.UTF_8);\n    assertFalse(s.contains(\"has deletions\"));\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7523916a1350712e1ae710affd4e88ccd7c431d","date":1412161942,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeletesCheckIndexOutput().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeletesCheckIndexOutput().mjava","sourceNew":"  // LUCENE-4455\n  public void testDeletesCheckIndexOutput() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(2);\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"0\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"field\", \"1\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n\n    w.deleteDocuments(new Term(\"field\", \"0\"));\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n    w.close();\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n    CheckIndex checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    CheckIndex.Status indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    checker.close();\n    String s = bos.toString(IOUtils.UTF_8);\n\n    // Segment should have deletions:\n    assertTrue(s.contains(\"has deletions\"));\n    iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    w = new IndexWriter(dir, iwc);\n    w.forceMerge(1);\n    w.close();\n\n    bos = new ByteArrayOutputStream(1024);\n    checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    checker.close();\n    s = bos.toString(IOUtils.UTF_8);\n    assertFalse(s.contains(\"has deletions\"));\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-4455\n  public void testDeletesCheckIndexOutput() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(2);\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"0\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"field\", \"1\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n\n    w.deleteDocuments(new Term(\"field\", \"0\"));\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n    w.close();\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n    CheckIndex checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    CheckIndex.Status indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    String s = bos.toString(IOUtils.UTF_8);\n\n    // Segment should have deletions:\n    assertTrue(s.contains(\"has deletions\"));\n    iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    w = new IndexWriter(dir, iwc);\n    w.forceMerge(1);\n    w.close();\n\n    bos = new ByteArrayOutputStream(1024);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    s = bos.toString(IOUtils.UTF_8);\n    assertFalse(s.contains(\"has deletions\"));\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9a47902d6207303f5ed3e7aaca62ca33433af66","date":1412435312,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeletesCheckIndexOutput().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeletesCheckIndexOutput().mjava","sourceNew":"  // LUCENE-4455\n  public void testDeletesCheckIndexOutput() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(2);\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"0\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"field\", \"1\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n\n    w.deleteDocuments(new Term(\"field\", \"0\"));\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n    w.close();\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n    CheckIndex checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    CheckIndex.Status indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    checker.close();\n    String s = bos.toString(IOUtils.UTF_8);\n\n    // Segment should have deletions:\n    assertTrue(s.contains(\"has deletions\"));\n    iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    w = new IndexWriter(dir, iwc);\n    w.forceMerge(1);\n    w.close();\n\n    bos = new ByteArrayOutputStream(1024);\n    checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    checker.close();\n    s = bos.toString(IOUtils.UTF_8);\n    assertFalse(s.contains(\"has deletions\"));\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-4455\n  public void testDeletesCheckIndexOutput() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(2);\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"0\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"field\", \"1\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n\n    w.deleteDocuments(new Term(\"field\", \"0\"));\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n    w.close();\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n    CheckIndex checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    CheckIndex.Status indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    String s = bos.toString(IOUtils.UTF_8);\n\n    // Segment should have deletions:\n    assertTrue(s.contains(\"has deletions\"));\n    iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    w = new IndexWriter(dir, iwc);\n    w.forceMerge(1);\n    w.close();\n\n    bos = new ByteArrayOutputStream(1024);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    s = bos.toString(IOUtils.UTF_8);\n    assertFalse(s.contains(\"has deletions\"));\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a90cc8c90aa53ddf51fbd15019989ac269514a3","date":1531845066,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeletesCheckIndexOutput().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeletesCheckIndexOutput().mjava","sourceNew":"  // LUCENE-4455\n  public void testDeletesCheckIndexOutput() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setMergePolicy(NoMergePolicy.INSTANCE);\n    iwc.setMaxBufferedDocs(2);\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"0\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"field\", \"1\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n\n    w.deleteDocuments(new Term(\"field\", \"0\"));\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n    w.close();\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n    CheckIndex checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    CheckIndex.Status indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    checker.close();\n    String s = bos.toString(IOUtils.UTF_8);\n\n    // Segment should have deletions:\n    assertTrue(s.contains(\"has deletions\"));\n    iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    w = new IndexWriter(dir, iwc);\n    w.forceMerge(1);\n    w.close();\n\n    bos = new ByteArrayOutputStream(1024);\n    checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    checker.close();\n    s = bos.toString(IOUtils.UTF_8);\n    assertFalse(s.contains(\"has deletions\"));\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-4455\n  public void testDeletesCheckIndexOutput() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(2);\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"0\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"field\", \"1\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n\n    w.deleteDocuments(new Term(\"field\", \"0\"));\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n    w.close();\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n    CheckIndex checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    CheckIndex.Status indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    checker.close();\n    String s = bos.toString(IOUtils.UTF_8);\n\n    // Segment should have deletions:\n    assertTrue(s.contains(\"has deletions\"));\n    iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    w = new IndexWriter(dir, iwc);\n    w.forceMerge(1);\n    w.close();\n\n    bos = new ByteArrayOutputStream(1024);\n    checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    checker.close();\n    s = bos.toString(IOUtils.UTF_8);\n    assertFalse(s.contains(\"has deletions\"));\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeletesCheckIndexOutput().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeletesCheckIndexOutput().mjava","sourceNew":"  // LUCENE-4455\n  public void testDeletesCheckIndexOutput() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setMergePolicy(NoMergePolicy.INSTANCE);\n    iwc.setMaxBufferedDocs(2);\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"0\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"field\", \"1\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n\n    w.deleteDocuments(new Term(\"field\", \"0\"));\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n    w.close();\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n    CheckIndex checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    CheckIndex.Status indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    checker.close();\n    String s = bos.toString(IOUtils.UTF_8);\n\n    // Segment should have deletions:\n    assertTrue(s.contains(\"has deletions\"));\n    iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    w = new IndexWriter(dir, iwc);\n    w.forceMerge(1);\n    w.close();\n\n    bos = new ByteArrayOutputStream(1024);\n    checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    checker.close();\n    s = bos.toString(IOUtils.UTF_8);\n    assertFalse(s.contains(\"has deletions\"));\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-4455\n  public void testDeletesCheckIndexOutput() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setMaxBufferedDocs(2);\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"0\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"field\", \"1\", StringField.TYPE_NOT_STORED));\n    w.addDocument(doc);\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n\n    w.deleteDocuments(new Term(\"field\", \"0\"));\n    w.commit();\n    assertEquals(1, w.getSegmentCount());\n    w.close();\n\n    ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n    CheckIndex checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    CheckIndex.Status indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    checker.close();\n    String s = bos.toString(IOUtils.UTF_8);\n\n    // Segment should have deletions:\n    assertTrue(s.contains(\"has deletions\"));\n    iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    w = new IndexWriter(dir, iwc);\n    w.forceMerge(1);\n    w.close();\n\n    bos = new ByteArrayOutputStream(1024);\n    checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos, false, IOUtils.UTF_8), false);\n    indexStatus = checker.checkIndex(null);\n    assertTrue(indexStatus.clean);\n    checker.close();\n    s = bos.toString(IOUtils.UTF_8);\n    assertFalse(s.contains(\"has deletions\"));\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["4ce24aa081e44190692bbebc8aead342ad7060e8","7d89d7e4e5101347833eea558851bf4209218619"],"cfc45818441587d8004ff1a119fb60ac9ecb9a14":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"f7523916a1350712e1ae710affd4e88ccd7c431d":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":["d0ef034a4f10871667ae75181537775ddcf8ade4","f7523916a1350712e1ae710affd4e88ccd7c431d"],"4a90cc8c90aa53ddf51fbd15019989ac269514a3":["f7523916a1350712e1ae710affd4e88ccd7c431d"],"7d89d7e4e5101347833eea558851bf4209218619":["4ce24aa081e44190692bbebc8aead342ad7060e8"],"4ce24aa081e44190692bbebc8aead342ad7060e8":["90dfa8ee4e9e118b4c2c1c042bf57d9b460613de"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["f7523916a1350712e1ae710affd4e88ccd7c431d","4a90cc8c90aa53ddf51fbd15019989ac269514a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cfc45818441587d8004ff1a119fb60ac9ecb9a14"],"90dfa8ee4e9e118b4c2c1c042bf57d9b460613de":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["90dfa8ee4e9e118b4c2c1c042bf57d9b460613de"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["7d89d7e4e5101347833eea558851bf4209218619"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4a90cc8c90aa53ddf51fbd15019989ac269514a3"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"cfc45818441587d8004ff1a119fb60ac9ecb9a14":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"f7523916a1350712e1ae710affd4e88ccd7c431d":["d9a47902d6207303f5ed3e7aaca62ca33433af66","4a90cc8c90aa53ddf51fbd15019989ac269514a3","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":[],"4a90cc8c90aa53ddf51fbd15019989ac269514a3":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7d89d7e4e5101347833eea558851bf4209218619":["5eb2511ababf862ea11e10761c70ee560cd84510","ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"4ce24aa081e44190692bbebc8aead342ad7060e8":["5eb2511ababf862ea11e10761c70ee560cd84510","7d89d7e4e5101347833eea558851bf4209218619"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["90dfa8ee4e9e118b4c2c1c042bf57d9b460613de"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["f7523916a1350712e1ae710affd4e88ccd7c431d","d9a47902d6207303f5ed3e7aaca62ca33433af66"],"90dfa8ee4e9e118b4c2c1c042bf57d9b460613de":["4ce24aa081e44190692bbebc8aead342ad7060e8","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["cfc45818441587d8004ff1a119fb60ac9ecb9a14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","d9a47902d6207303f5ed3e7aaca62ca33433af66","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}