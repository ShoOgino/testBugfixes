{"path":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","pathOld":"modules/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","sourceNew":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir,\n                            OrdinalMap map, IndexWriter destIndexWriter,\n                            DirectoryTaxonomyWriter destTaxWriter) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomies(new Directory[] { srcTaxDir }, new OrdinalMap[] { map });\n\n    PayloadProcessorProvider payloadProcessor = new FacetsPayloadProcessorProvider(\n        srcIndexDir, map.getMap(), new DefaultFacetIndexingParams());\n    destIndexWriter.setPayloadProcessorProvider(payloadProcessor);\n\n    IndexReader reader = IndexReader.open(srcIndexDir);\n    try {\n      destIndexWriter.addIndexes(reader);\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir,\n                            OrdinalMap map, IndexWriter destIndexWriter,\n                            DirectoryTaxonomyWriter destTaxWriter) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomies(new Directory[] { srcTaxDir }, new OrdinalMap[] { map });\n\n    PayloadProcessorProvider payloadProcessor = new FacetsPayloadProcessorProvider(\n        srcIndexDir, map.getMap(), new DefaultFacetIndexingParams());\n    destIndexWriter.setPayloadProcessorProvider(payloadProcessor);\n\n    IndexReader reader = IndexReader.open(srcIndexDir);\n    try {\n      destIndexWriter.addIndexes(reader);\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0cebe7d662ef6b6c677383085b295b9878ba1795","date":1337155300,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","pathOld":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","sourceNew":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir,\n                            OrdinalMap map, IndexWriter destIndexWriter,\n                            DirectoryTaxonomyWriter destTaxWriter) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n\n    PayloadProcessorProvider payloadProcessor = new FacetsPayloadProcessorProvider(\n        srcIndexDir, map.getMap(), new DefaultFacetIndexingParams());\n    destIndexWriter.setPayloadProcessorProvider(payloadProcessor);\n\n    IndexReader reader = IndexReader.open(srcIndexDir);\n    try {\n      destIndexWriter.addIndexes(reader);\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir,\n                            OrdinalMap map, IndexWriter destIndexWriter,\n                            DirectoryTaxonomyWriter destTaxWriter) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomies(new Directory[] { srcTaxDir }, new OrdinalMap[] { map });\n\n    PayloadProcessorProvider payloadProcessor = new FacetsPayloadProcessorProvider(\n        srcIndexDir, map.getMap(), new DefaultFacetIndexingParams());\n    destIndexWriter.setPayloadProcessorProvider(payloadProcessor);\n\n    IndexReader reader = IndexReader.open(srcIndexDir);\n    try {\n      destIndexWriter.addIndexes(reader);\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef0d8a69209261514c5739c770bba706c2308450","date":1337607597,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","pathOld":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","sourceNew":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir,\n                            OrdinalMap map, IndexWriter destIndexWriter,\n                            DirectoryTaxonomyWriter destTaxWriter) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n\n    PayloadProcessorProvider payloadProcessor = new FacetsPayloadProcessorProvider(\n        srcIndexDir, map.getMap(), new DefaultFacetIndexingParams());\n    destIndexWriter.setPayloadProcessorProvider(payloadProcessor);\n\n    IndexReader reader = IndexReader.open(srcIndexDir);\n    try {\n      destIndexWriter.addIndexes(reader);\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir,\n                            OrdinalMap map, IndexWriter destIndexWriter,\n                            DirectoryTaxonomyWriter destTaxWriter) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomies(new Directory[] { srcTaxDir }, new OrdinalMap[] { map });\n\n    PayloadProcessorProvider payloadProcessor = new FacetsPayloadProcessorProvider(\n        srcIndexDir, map.getMap(), new DefaultFacetIndexingParams());\n    destIndexWriter.setPayloadProcessorProvider(payloadProcessor);\n\n    IndexReader reader = IndexReader.open(srcIndexDir);\n    try {\n      destIndexWriter.addIndexes(reader);\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","pathOld":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","sourceNew":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir,\n                            OrdinalMap map, IndexWriter destIndexWriter,\n                            DirectoryTaxonomyWriter destTaxWriter) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n\n    PayloadProcessorProvider payloadProcessor = new FacetsPayloadProcessorProvider(\n        srcIndexDir, map.getMap(), new DefaultFacetIndexingParams());\n    destIndexWriter.setPayloadProcessorProvider(payloadProcessor);\n\n    IndexReader reader = DirectoryReader.open(srcIndexDir);\n    try {\n      destIndexWriter.addIndexes(reader);\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir,\n                            OrdinalMap map, IndexWriter destIndexWriter,\n                            DirectoryTaxonomyWriter destTaxWriter) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n\n    PayloadProcessorProvider payloadProcessor = new FacetsPayloadProcessorProvider(\n        srcIndexDir, map.getMap(), new DefaultFacetIndexingParams());\n    destIndexWriter.setPayloadProcessorProvider(payloadProcessor);\n\n    IndexReader reader = IndexReader.open(srcIndexDir);\n    try {\n      destIndexWriter.addIndexes(reader);\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc124b3b129ef11a255212f3af482b771c5b3a6c","date":1344947616,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","pathOld":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","sourceNew":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir,\n                            OrdinalMap map, IndexWriter destIndexWriter,\n                            DirectoryTaxonomyWriter destTaxWriter) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n\n    int ordinalMap[] = map.getMap();\n    FacetIndexingParams params = new DefaultFacetIndexingParams();\n\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir, -1);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    AtomicReader wrappedLeaves[] = new AtomicReader[leaves.size()];\n    for (int i = 0; i < leaves.size(); i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir,\n                            OrdinalMap map, IndexWriter destIndexWriter,\n                            DirectoryTaxonomyWriter destTaxWriter) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n\n    PayloadProcessorProvider payloadProcessor = new FacetsPayloadProcessorProvider(\n        srcIndexDir, map.getMap(), new DefaultFacetIndexingParams());\n    destIndexWriter.setPayloadProcessorProvider(payloadProcessor);\n\n    IndexReader reader = DirectoryReader.open(srcIndexDir);\n    try {\n      destIndexWriter.addIndexes(reader);\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","date":1345029782,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","pathOld":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","sourceNew":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir,\n                            OrdinalMap map, IndexWriter destIndexWriter,\n                            DirectoryTaxonomyWriter destTaxWriter) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n\n    int ordinalMap[] = map.getMap();\n    FacetIndexingParams params = new DefaultFacetIndexingParams();\n\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir, -1);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    AtomicReader wrappedLeaves[] = new AtomicReader[leaves.size()];\n    for (int i = 0; i < leaves.size(); i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir,\n                            OrdinalMap map, IndexWriter destIndexWriter,\n                            DirectoryTaxonomyWriter destTaxWriter) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n\n    PayloadProcessorProvider payloadProcessor = new FacetsPayloadProcessorProvider(\n        srcIndexDir, map.getMap(), new DefaultFacetIndexingParams());\n    destIndexWriter.setPayloadProcessorProvider(payloadProcessor);\n\n    IndexReader reader = DirectoryReader.open(srcIndexDir);\n    try {\n      destIndexWriter.addIndexes(reader);\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b05c56a41b733e02a189c48895922b5bd8c7f3d1","date":1345033322,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","pathOld":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","sourceNew":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir,\n                            OrdinalMap map, IndexWriter destIndexWriter,\n                            DirectoryTaxonomyWriter destTaxWriter) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n\n    int ordinalMap[] = map.getMap();\n    FacetIndexingParams params = new DefaultFacetIndexingParams();\n\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir, -1);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    AtomicReader wrappedLeaves[] = new AtomicReader[leaves.size()];\n    for (int i = 0; i < leaves.size(); i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir,\n                            OrdinalMap map, IndexWriter destIndexWriter,\n                            DirectoryTaxonomyWriter destTaxWriter) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n\n    PayloadProcessorProvider payloadProcessor = new FacetsPayloadProcessorProvider(\n        srcIndexDir, map.getMap(), new DefaultFacetIndexingParams());\n    destIndexWriter.setPayloadProcessorProvider(payloadProcessor);\n\n    IndexReader reader = DirectoryReader.open(srcIndexDir);\n    try {\n      destIndexWriter.addIndexes(reader);\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4c6c7f3cda7a0595cabd16e5e9107ca29852708","date":1355402234,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","pathOld":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","sourceNew":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir,\n                            OrdinalMap map, IndexWriter destIndexWriter,\n                            DirectoryTaxonomyWriter destTaxWriter) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n\n    int ordinalMap[] = map.getMap();\n    FacetIndexingParams params = FacetIndexingParams.ALL_PARENTS;\n\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir, -1);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    AtomicReader wrappedLeaves[] = new AtomicReader[leaves.size()];\n    for (int i = 0; i < leaves.size(); i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir,\n                            OrdinalMap map, IndexWriter destIndexWriter,\n                            DirectoryTaxonomyWriter destTaxWriter) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n\n    int ordinalMap[] = map.getMap();\n    FacetIndexingParams params = new DefaultFacetIndexingParams();\n\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir, -1);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    AtomicReader wrappedLeaves[] = new AtomicReader[leaves.size()];\n    for (int i = 0; i < leaves.size(); i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","pathOld":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","sourceNew":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir,\n                            OrdinalMap map, IndexWriter destIndexWriter,\n                            DirectoryTaxonomyWriter destTaxWriter) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n\n    int ordinalMap[] = map.getMap();\n    FacetIndexingParams params = FacetIndexingParams.ALL_PARENTS;\n\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir, -1);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    AtomicReader wrappedLeaves[] = new AtomicReader[leaves.size()];\n    for (int i = 0; i < leaves.size(); i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir,\n                            OrdinalMap map, IndexWriter destIndexWriter,\n                            DirectoryTaxonomyWriter destTaxWriter) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n\n    int ordinalMap[] = map.getMap();\n    FacetIndexingParams params = new DefaultFacetIndexingParams();\n\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir, -1);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    AtomicReader wrappedLeaves[] = new AtomicReader[leaves.size()];\n    for (int i = 0; i < leaves.size(); i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c2cd18c7da6f499a33f06fc89c07a463ec074c0","date":1358329431,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","pathOld":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","sourceNew":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir,\n                            OrdinalMap map, IndexWriter destIndexWriter,\n                            DirectoryTaxonomyWriter destTaxWriter) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n\n    int ordinalMap[] = map.getMap();\n    FacetIndexingParams params = FacetIndexingParams.ALL_PARENTS;\n\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir, -1);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    int numReaders = leaves.size();\n    AtomicReader wrappedLeaves[] = new AtomicReader[numReaders];\n    for (int i = 0; i < numReaders; i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir,\n                            OrdinalMap map, IndexWriter destIndexWriter,\n                            DirectoryTaxonomyWriter destTaxWriter) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n\n    int ordinalMap[] = map.getMap();\n    FacetIndexingParams params = FacetIndexingParams.ALL_PARENTS;\n\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir, -1);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    AtomicReader wrappedLeaves[] = new AtomicReader[leaves.size()];\n    for (int i = 0; i < leaves.size(); i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4015cd39dff8d4dec562d909f9766debac53aa6","date":1358548736,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","pathOld":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","sourceNew":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir,\n                            OrdinalMap map, IndexWriter destIndexWriter,\n                            DirectoryTaxonomyWriter destTaxWriter) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n\n    int ordinalMap[] = map.getMap();\n    FacetIndexingParams params = FacetIndexingParams.ALL_PARENTS;\n\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir, -1);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    int numReaders = leaves.size();\n    AtomicReader wrappedLeaves[] = new AtomicReader[numReaders];\n    for (int i = 0; i < numReaders; i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir,\n                            OrdinalMap map, IndexWriter destIndexWriter,\n                            DirectoryTaxonomyWriter destTaxWriter) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n\n    int ordinalMap[] = map.getMap();\n    FacetIndexingParams params = FacetIndexingParams.ALL_PARENTS;\n\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir, -1);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    AtomicReader wrappedLeaves[] = new AtomicReader[leaves.size()];\n    for (int i = 0; i < leaves.size(); i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90213788e5007cc5e2b3d88200a8265de9d4e6d4","date":1359060940,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams).mjava","pathOld":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","sourceNew":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir, OrdinalMap map, IndexWriter destIndexWriter, \n      DirectoryTaxonomyWriter destTaxWriter, FacetIndexingParams params) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n    int ordinalMap[] = map.getMap();\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir, -1);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    int numReaders = leaves.size();\n    AtomicReader wrappedLeaves[] = new AtomicReader[numReaders];\n    for (int i = 0; i < numReaders; i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir,\n                            OrdinalMap map, IndexWriter destIndexWriter,\n                            DirectoryTaxonomyWriter destTaxWriter) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n\n    int ordinalMap[] = map.getMap();\n    FacetIndexingParams params = FacetIndexingParams.ALL_PARENTS;\n\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir, -1);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    int numReaders = leaves.size();\n    AtomicReader wrappedLeaves[] = new AtomicReader[numReaders];\n    for (int i = 0; i < numReaders; i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd45d4a2ee01a1932d33eec42f5272c2402da679","date":1359316912,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams).mjava","pathOld":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","sourceNew":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir, OrdinalMap map, IndexWriter destIndexWriter, \n      DirectoryTaxonomyWriter destTaxWriter, FacetIndexingParams params) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n    int ordinalMap[] = map.getMap();\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir, -1);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    int numReaders = leaves.size();\n    AtomicReader wrappedLeaves[] = new AtomicReader[numReaders];\n    for (int i = 0; i < numReaders; i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir,\n                            OrdinalMap map, IndexWriter destIndexWriter,\n                            DirectoryTaxonomyWriter destTaxWriter) throws IOException {\n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n\n    int ordinalMap[] = map.getMap();\n    FacetIndexingParams params = FacetIndexingParams.ALL_PARENTS;\n\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir, -1);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    int numReaders = leaves.size();\n    AtomicReader wrappedLeaves[] = new AtomicReader[numReaders];\n    for (int i = 0; i < numReaders; i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, params);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["bc124b3b129ef11a255212f3af482b771c5b3a6c","d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"c4015cd39dff8d4dec562d909f9766debac53aa6":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","6c2cd18c7da6f499a33f06fc89c07a463ec074c0"],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","bc124b3b129ef11a255212f3af482b771c5b3a6c"],"0cebe7d662ef6b6c677383085b295b9878ba1795":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"dd45d4a2ee01a1932d33eec42f5272c2402da679":["c4015cd39dff8d4dec562d909f9766debac53aa6","90213788e5007cc5e2b3d88200a8265de9d4e6d4"],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","bc124b3b129ef11a255212f3af482b771c5b3a6c"],"90213788e5007cc5e2b3d88200a8265de9d4e6d4":["6c2cd18c7da6f499a33f06fc89c07a463ec074c0"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["0cebe7d662ef6b6c677383085b295b9878ba1795"],"d4c6c7f3cda7a0595cabd16e5e9107ca29852708":["bc124b3b129ef11a255212f3af482b771c5b3a6c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bc124b3b129ef11a255212f3af482b771c5b3a6c":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"6c2cd18c7da6f499a33f06fc89c07a463ec074c0":["d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"ef0d8a69209261514c5739c770bba706c2308450":["b89678825b68eccaf09e6ab71675fc0b0af1e099","0cebe7d662ef6b6c677383085b295b9878ba1795"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90213788e5007cc5e2b3d88200a8265de9d4e6d4"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["c4015cd39dff8d4dec562d909f9766debac53aa6"],"c4015cd39dff8d4dec562d909f9766debac53aa6":["dd45d4a2ee01a1932d33eec42f5272c2402da679"],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":[],"0cebe7d662ef6b6c677383085b295b9878ba1795":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","ef0d8a69209261514c5739c770bba706c2308450"],"dd45d4a2ee01a1932d33eec42f5272c2402da679":[],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["0cebe7d662ef6b6c677383085b295b9878ba1795","ef0d8a69209261514c5739c770bba706c2308450"],"90213788e5007cc5e2b3d88200a8265de9d4e6d4":["dd45d4a2ee01a1932d33eec42f5272c2402da679","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["b05c56a41b733e02a189c48895922b5bd8c7f3d1","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","bc124b3b129ef11a255212f3af482b771c5b3a6c"],"d4c6c7f3cda7a0595cabd16e5e9107ca29852708":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","6c2cd18c7da6f499a33f06fc89c07a463ec074c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"bc124b3b129ef11a255212f3af482b771c5b3a6c":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","b05c56a41b733e02a189c48895922b5bd8c7f3d1","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"6c2cd18c7da6f499a33f06fc89c07a463ec074c0":["c4015cd39dff8d4dec562d909f9766debac53aa6","90213788e5007cc5e2b3d88200a8265de9d4e6d4"],"ef0d8a69209261514c5739c770bba706c2308450":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b05c56a41b733e02a189c48895922b5bd8c7f3d1","dd45d4a2ee01a1932d33eec42f5272c2402da679","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","ef0d8a69209261514c5739c770bba706c2308450","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}