{"path":"lucene/core/src/test/org/apache/lucene/store/TestMockDirectoryWrapper#testFailIfIndexWriterNotClosed().mjava","commits":[{"id":"9da55e77929b768e725f2821d8c01f64de01dbc8","date":1345030717,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMockDirectoryWrapper#testFailIfIndexWriterNotClosed().mjava","pathOld":"/dev/null","sourceNew":"  public void testFailIfIndexWriterNotClosed() throws IOException {\n    MockDirectoryWrapper dir = newMockDirectory();\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, null));\n    try {\n      dir.close();\n      fail();\n    } catch (Exception expected) {\n      assertTrue(expected.getMessage().contains(\"there are still open locks\"));\n    }\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b05c56a41b733e02a189c48895922b5bd8c7f3d1","date":1345033322,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMockDirectoryWrapper#testFailIfIndexWriterNotClosed().mjava","pathOld":"/dev/null","sourceNew":"  public void testFailIfIndexWriterNotClosed() throws IOException {\n    MockDirectoryWrapper dir = newMockDirectory();\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, null));\n    try {\n      dir.close();\n      fail();\n    } catch (Exception expected) {\n      assertTrue(expected.getMessage().contains(\"there are still open locks\"));\n    }\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"616c1830142ff5c1ddedec1ed898733b73c8e23b","date":1345368925,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMockDirectoryWrapper#testFailIfIndexWriterNotClosed().mjava","pathOld":"/dev/null","sourceNew":"  public void testFailIfIndexWriterNotClosed() throws IOException {\n    MockDirectoryWrapper dir = newMockDirectory();\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, null));\n    try {\n      dir.close();\n      fail();\n    } catch (Exception expected) {\n      assertTrue(expected.getMessage().contains(\"there are still open locks\"));\n    }\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMockDirectoryWrapper#testFailIfIndexWriterNotClosed().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestMockDirectoryWrapper#testFailIfIndexWriterNotClosed().mjava","sourceNew":"  public void testFailIfIndexWriterNotClosed() throws IOException {\n    MockDirectoryWrapper dir = newMockDirectory();\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, null));\n    try {\n      dir.close();\n      fail();\n    } catch (Exception expected) {\n      assertTrue(expected.getMessage().contains(\"there are still open locks\"));\n    }\n    iw.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  public void testFailIfIndexWriterNotClosed() throws IOException {\n    MockDirectoryWrapper dir = newMockDirectory();\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, null));\n    try {\n      dir.close();\n      fail();\n    } catch (Exception expected) {\n      assertTrue(expected.getMessage().contains(\"there are still open locks\"));\n    }\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMockDirectoryWrapper#testFailIfIndexWriterNotClosed().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestMockDirectoryWrapper#testFailIfIndexWriterNotClosed().mjava","sourceNew":"  public void testFailIfIndexWriterNotClosed() throws IOException {\n    MockDirectoryWrapper dir = newMockDirectory();\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(null));\n    try {\n      dir.close();\n      fail();\n    } catch (Exception expected) {\n      assertTrue(expected.getMessage().contains(\"there are still open locks\"));\n    }\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testFailIfIndexWriterNotClosed() throws IOException {\n    MockDirectoryWrapper dir = newMockDirectory();\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, null));\n    try {\n      dir.close();\n      fail();\n    } catch (Exception expected) {\n      assertTrue(expected.getMessage().contains(\"there are still open locks\"));\n    }\n    iw.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b07132423639577d6f68cebbec9c83599d5d5a3a","date":1419020622,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMockDirectoryWrapper#testFailIfIndexWriterNotClosed().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestMockDirectoryWrapper#testFailIfIndexWriterNotClosed().mjava","sourceNew":"  public void testFailIfIndexWriterNotClosed() throws IOException {\n    MockDirectoryWrapper dir = newMockDirectory();\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(null));\n    try {\n      dir.close();\n      fail();\n    } catch (Exception expected) {\n      assertTrue(expected.getMessage().contains(\"there are still open locks\"));\n    } finally {\n      IOUtils.closeWhileHandlingException(iw);\n    }\n  }\n\n","sourceOld":"  public void testFailIfIndexWriterNotClosed() throws IOException {\n    MockDirectoryWrapper dir = newMockDirectory();\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(null));\n    try {\n      dir.close();\n      fail();\n    } catch (Exception expected) {\n      assertTrue(expected.getMessage().contains(\"there are still open locks\"));\n    }\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a","date":1429550638,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/store/TestMockDirectoryWrapper#testFailIfIndexWriterNotClosed().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestMockDirectoryWrapper#testFailIfIndexWriterNotClosed().mjava","sourceNew":"  public void testFailIfIndexWriterNotClosed() throws IOException {\n    MockDirectoryWrapper dir = newMockDirectory();\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(null));\n    try {\n      dir.close();\n      fail();\n    } catch (Exception expected) {\n      assertTrue(expected.getMessage().contains(\"there are still open locks\"));\n    } finally {\n      IOUtils.closeWhileHandlingException(iw);\n    }\n  }\n\n","sourceOld":"  public void testFailIfIndexWriterNotClosed() throws IOException {\n    MockDirectoryWrapper dir = newMockDirectory();\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(null));\n    try {\n      dir.close();\n      fail();\n    } catch (Exception expected) {\n      assertTrue(expected.getMessage().contains(\"there are still open locks\"));\n    } finally {\n      IOUtils.closeWhileHandlingException(iw);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b07132423639577d6f68cebbec9c83599d5d5a3a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"616c1830142ff5c1ddedec1ed898733b73c8e23b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9da55e77929b768e725f2821d8c01f64de01dbc8"],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9da55e77929b768e725f2821d8c01f64de01dbc8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["9da55e77929b768e725f2821d8c01f64de01dbc8"],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["b07132423639577d6f68cebbec9c83599d5d5a3a"],"9da55e77929b768e725f2821d8c01f64de01dbc8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"]},"commit2Childs":{"b07132423639577d6f68cebbec9c83599d5d5a3a":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"],"616c1830142ff5c1ddedec1ed898733b73c8e23b":[],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["616c1830142ff5c1ddedec1ed898733b73c8e23b","b05c56a41b733e02a189c48895922b5bd8c7f3d1","9da55e77929b768e725f2821d8c01f64de01dbc8"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["b07132423639577d6f68cebbec9c83599d5d5a3a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9da55e77929b768e725f2821d8c01f64de01dbc8":["616c1830142ff5c1ddedec1ed898733b73c8e23b","b05c56a41b733e02a189c48895922b5bd8c7f3d1","ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["616c1830142ff5c1ddedec1ed898733b73c8e23b","b05c56a41b733e02a189c48895922b5bd8c7f3d1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}