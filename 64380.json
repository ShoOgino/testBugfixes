{"path":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/demohtml/HTMLParser#generateParseException().mjava","commits":[{"id":"81ea17596392ebd5d12741eb9e3b2516258b9413","date":1298090976,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/demohtml/HTMLParser#generateParseException().mjava","pathOld":"lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser#generateParseException().mjava","sourceNew":"  /** Generate ParseException. */\n  public ParseException generateParseException() {\n    jj_expentries.clear();\n    boolean[] la1tokens = new boolean[31];\n    if (jj_kind >= 0) {\n      la1tokens[jj_kind] = true;\n      jj_kind = -1;\n    }\n    for (int i = 0; i < 14; i++) {\n      if (jj_la1[i] == jj_gen) {\n        for (int j = 0; j < 32; j++) {\n          if ((jj_la1_0[i] & (1<<j)) != 0) {\n            la1tokens[j] = true;\n          }\n        }\n      }\n    }\n    for (int i = 0; i < 31; i++) {\n      if (la1tokens[i]) {\n        jj_expentry = new int[1];\n        jj_expentry[0] = i;\n        jj_expentries.add(jj_expentry);\n      }\n    }\n    jj_endpos = 0;\n    jj_rescan_token();\n    jj_add_error_token(0, 0);\n    int[][] exptokseq = new int[jj_expentries.size()][];\n    for (int i = 0; i < jj_expentries.size(); i++) {\n      exptokseq[i] = jj_expentries.get(i);\n    }\n    return new ParseException(token, exptokseq, tokenImage);\n  }\n\n","sourceOld":"  /** Generate ParseException. */\n  public ParseException generateParseException() {\n    jj_expentries.clear();\n    boolean[] la1tokens = new boolean[31];\n    if (jj_kind >= 0) {\n      la1tokens[jj_kind] = true;\n      jj_kind = -1;\n    }\n    for (int i = 0; i < 14; i++) {\n      if (jj_la1[i] == jj_gen) {\n        for (int j = 0; j < 32; j++) {\n          if ((jj_la1_0[i] & (1<<j)) != 0) {\n            la1tokens[j] = true;\n          }\n        }\n      }\n    }\n    for (int i = 0; i < 31; i++) {\n      if (la1tokens[i]) {\n        jj_expentry = new int[1];\n        jj_expentry[0] = i;\n        jj_expentries.add(jj_expentry);\n      }\n    }\n    jj_endpos = 0;\n    jj_rescan_token();\n    jj_add_error_token(0, 0);\n    int[][] exptokseq = new int[jj_expentries.size()][];\n    for (int i = 0; i < jj_expentries.size(); i++) {\n      exptokseq[i] = jj_expentries.get(i);\n    }\n    return new ParseException(token, exptokseq, tokenImage);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/demohtml/HTMLParser#generateParseException().mjava","pathOld":"lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser#generateParseException().mjava","sourceNew":"  /** Generate ParseException. */\n  public ParseException generateParseException() {\n    jj_expentries.clear();\n    boolean[] la1tokens = new boolean[31];\n    if (jj_kind >= 0) {\n      la1tokens[jj_kind] = true;\n      jj_kind = -1;\n    }\n    for (int i = 0; i < 14; i++) {\n      if (jj_la1[i] == jj_gen) {\n        for (int j = 0; j < 32; j++) {\n          if ((jj_la1_0[i] & (1<<j)) != 0) {\n            la1tokens[j] = true;\n          }\n        }\n      }\n    }\n    for (int i = 0; i < 31; i++) {\n      if (la1tokens[i]) {\n        jj_expentry = new int[1];\n        jj_expentry[0] = i;\n        jj_expentries.add(jj_expentry);\n      }\n    }\n    jj_endpos = 0;\n    jj_rescan_token();\n    jj_add_error_token(0, 0);\n    int[][] exptokseq = new int[jj_expentries.size()][];\n    for (int i = 0; i < jj_expentries.size(); i++) {\n      exptokseq[i] = jj_expentries.get(i);\n    }\n    return new ParseException(token, exptokseq, tokenImage);\n  }\n\n","sourceOld":"  /** Generate ParseException. */\n  public ParseException generateParseException() {\n    jj_expentries.clear();\n    boolean[] la1tokens = new boolean[31];\n    if (jj_kind >= 0) {\n      la1tokens[jj_kind] = true;\n      jj_kind = -1;\n    }\n    for (int i = 0; i < 14; i++) {\n      if (jj_la1[i] == jj_gen) {\n        for (int j = 0; j < 32; j++) {\n          if ((jj_la1_0[i] & (1<<j)) != 0) {\n            la1tokens[j] = true;\n          }\n        }\n      }\n    }\n    for (int i = 0; i < 31; i++) {\n      if (la1tokens[i]) {\n        jj_expentry = new int[1];\n        jj_expentry[0] = i;\n        jj_expentries.add(jj_expentry);\n      }\n    }\n    jj_endpos = 0;\n    jj_rescan_token();\n    jj_add_error_token(0, 0);\n    int[][] exptokseq = new int[jj_expentries.size()][];\n    for (int i = 0; i < jj_expentries.size(); i++) {\n      exptokseq[i] = jj_expentries.get(i);\n    }\n    return new ParseException(token, exptokseq, tokenImage);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/demohtml/HTMLParser#generateParseException().mjava","pathOld":"lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser#generateParseException().mjava","sourceNew":"  /** Generate ParseException. */\n  public ParseException generateParseException() {\n    jj_expentries.clear();\n    boolean[] la1tokens = new boolean[31];\n    if (jj_kind >= 0) {\n      la1tokens[jj_kind] = true;\n      jj_kind = -1;\n    }\n    for (int i = 0; i < 14; i++) {\n      if (jj_la1[i] == jj_gen) {\n        for (int j = 0; j < 32; j++) {\n          if ((jj_la1_0[i] & (1<<j)) != 0) {\n            la1tokens[j] = true;\n          }\n        }\n      }\n    }\n    for (int i = 0; i < 31; i++) {\n      if (la1tokens[i]) {\n        jj_expentry = new int[1];\n        jj_expentry[0] = i;\n        jj_expentries.add(jj_expentry);\n      }\n    }\n    jj_endpos = 0;\n    jj_rescan_token();\n    jj_add_error_token(0, 0);\n    int[][] exptokseq = new int[jj_expentries.size()][];\n    for (int i = 0; i < jj_expentries.size(); i++) {\n      exptokseq[i] = jj_expentries.get(i);\n    }\n    return new ParseException(token, exptokseq, tokenImage);\n  }\n\n","sourceOld":"  /** Generate ParseException. */\n  public ParseException generateParseException() {\n    jj_expentries.clear();\n    boolean[] la1tokens = new boolean[31];\n    if (jj_kind >= 0) {\n      la1tokens[jj_kind] = true;\n      jj_kind = -1;\n    }\n    for (int i = 0; i < 14; i++) {\n      if (jj_la1[i] == jj_gen) {\n        for (int j = 0; j < 32; j++) {\n          if ((jj_la1_0[i] & (1<<j)) != 0) {\n            la1tokens[j] = true;\n          }\n        }\n      }\n    }\n    for (int i = 0; i < 31; i++) {\n      if (la1tokens[i]) {\n        jj_expentry = new int[1];\n        jj_expentry[0] = i;\n        jj_expentries.add(jj_expentry);\n      }\n    }\n    jj_endpos = 0;\n    jj_rescan_token();\n    jj_add_error_token(0, 0);\n    int[][] exptokseq = new int[jj_expentries.size()][];\n    for (int i = 0; i < jj_expentries.size(); i++) {\n      exptokseq[i] = jj_expentries.get(i);\n    }\n    return new ParseException(token, exptokseq, tokenImage);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/demohtml/HTMLParser#generateParseException().mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/demohtml/HTMLParser#generateParseException().mjava","sourceNew":"  /** Generate ParseException. */\n  public ParseException generateParseException() {\n    jj_expentries.clear();\n    boolean[] la1tokens = new boolean[31];\n    if (jj_kind >= 0) {\n      la1tokens[jj_kind] = true;\n      jj_kind = -1;\n    }\n    for (int i = 0; i < 14; i++) {\n      if (jj_la1[i] == jj_gen) {\n        for (int j = 0; j < 32; j++) {\n          if ((jj_la1_0[i] & (1<<j)) != 0) {\n            la1tokens[j] = true;\n          }\n        }\n      }\n    }\n    for (int i = 0; i < 31; i++) {\n      if (la1tokens[i]) {\n        jj_expentry = new int[1];\n        jj_expentry[0] = i;\n        jj_expentries.add(jj_expentry);\n      }\n    }\n    jj_endpos = 0;\n    jj_rescan_token();\n    jj_add_error_token(0, 0);\n    int[][] exptokseq = new int[jj_expentries.size()][];\n    for (int i = 0; i < jj_expentries.size(); i++) {\n      exptokseq[i] = jj_expentries.get(i);\n    }\n    return new ParseException(token, exptokseq, tokenImage);\n  }\n\n","sourceOld":"  /** Generate ParseException. */\n  public ParseException generateParseException() {\n    jj_expentries.clear();\n    boolean[] la1tokens = new boolean[31];\n    if (jj_kind >= 0) {\n      la1tokens[jj_kind] = true;\n      jj_kind = -1;\n    }\n    for (int i = 0; i < 14; i++) {\n      if (jj_la1[i] == jj_gen) {\n        for (int j = 0; j < 32; j++) {\n          if ((jj_la1_0[i] & (1<<j)) != 0) {\n            la1tokens[j] = true;\n          }\n        }\n      }\n    }\n    for (int i = 0; i < 31; i++) {\n      if (la1tokens[i]) {\n        jj_expentry = new int[1];\n        jj_expentry[0] = i;\n        jj_expentries.add(jj_expentry);\n      }\n    }\n    jj_endpos = 0;\n    jj_rescan_token();\n    jj_add_error_token(0, 0);\n    int[][] exptokseq = new int[jj_expentries.size()][];\n    for (int i = 0; i < jj_expentries.size(); i++) {\n      exptokseq[i] = jj_expentries.get(i);\n    }\n    return new ParseException(token, exptokseq, tokenImage);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["81ea17596392ebd5d12741eb9e3b2516258b9413"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","81ea17596392ebd5d12741eb9e3b2516258b9413"],"81ea17596392ebd5d12741eb9e3b2516258b9413":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","81ea17596392ebd5d12741eb9e3b2516258b9413"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":[],"81ea17596392ebd5d12741eb9e3b2516258b9413":["b89678825b68eccaf09e6ab71675fc0b0af1e099","f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f1bdbf92da222965b46c0a942c3857ba56e5c638","81ea17596392ebd5d12741eb9e3b2516258b9413","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}