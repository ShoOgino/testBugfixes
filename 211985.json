{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestSingleTokenTokenFilter#test().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestSingleTokenTokenFilter#test().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestSingleTokenTokenFilter#test().mjava","sourceNew":"  public void test() throws IOException {\n    Token token = new Token();\n    SingleTokenTokenStream ts = new SingleTokenTokenStream(token);\n    AttributeImpl tokenAtt = (AttributeImpl) ts.addAttribute(CharTermAttribute.class);\n    assertTrue(tokenAtt instanceof Token);\n    ts.reset();\n\n    assertTrue(ts.incrementToken());\n    assertEquals(token, tokenAtt);\n    assertFalse(ts.incrementToken());\n    \n    token = new Token(\"hallo\", 10, 20, \"someType\");\n    ts.setToken(token);\n    ts.reset();\n\n    assertTrue(ts.incrementToken());\n    assertEquals(token, tokenAtt);\n    assertFalse(ts.incrementToken());\n  }\n\n","sourceOld":"  public void test() throws IOException {\n    Token token = new Token();\n    SingleTokenTokenStream ts = new SingleTokenTokenStream(token);\n    AttributeImpl tokenAtt = (AttributeImpl) ts.addAttribute(CharTermAttribute.class);\n    assertTrue(tokenAtt instanceof Token);\n    ts.reset();\n\n    assertTrue(ts.incrementToken());\n    assertEquals(token, tokenAtt);\n    assertFalse(ts.incrementToken());\n    \n    token = new Token(\"hallo\", 10, 20, \"someType\");\n    ts.setToken(token);\n    ts.reset();\n\n    assertTrue(ts.incrementToken());\n    assertEquals(token, tokenAtt);\n    assertFalse(ts.incrementToken());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"923f36bb0db6f793cf62dbb68723ae3bfbaf1d75","date":1399205975,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestSingleTokenTokenFilter#test().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestSingleTokenTokenFilter#test().mjava","sourceNew":"  public void test() throws IOException {\n    Token token = new Token();\n    SingleTokenTokenStream ts = new SingleTokenTokenStream(token);\n    AttributeImpl tokenAtt = (AttributeImpl) ts.addAttribute(CharTermAttribute.class);\n    assertTrue(tokenAtt instanceof Token);\n    ts.reset();\n\n    assertTrue(ts.incrementToken());\n    assertEquals(token, tokenAtt);\n    assertFalse(ts.incrementToken());\n    \n    token = new Token(\"hallo\", 10, 20);\n    token.setType(\"someType\");\n    ts.setToken(token);\n    ts.reset();\n\n    assertTrue(ts.incrementToken());\n    assertEquals(token, tokenAtt);\n    assertFalse(ts.incrementToken());\n  }\n\n","sourceOld":"  public void test() throws IOException {\n    Token token = new Token();\n    SingleTokenTokenStream ts = new SingleTokenTokenStream(token);\n    AttributeImpl tokenAtt = (AttributeImpl) ts.addAttribute(CharTermAttribute.class);\n    assertTrue(tokenAtt instanceof Token);\n    ts.reset();\n\n    assertTrue(ts.incrementToken());\n    assertEquals(token, tokenAtt);\n    assertFalse(ts.incrementToken());\n    \n    token = new Token(\"hallo\", 10, 20, \"someType\");\n    ts.setToken(token);\n    ts.reset();\n\n    assertTrue(ts.incrementToken());\n    assertEquals(token, tokenAtt);\n    assertFalse(ts.incrementToken());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6fc92bf7f56dcfe9d5bd75dfdc902b9597ea95b3","date":1417215914,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestSingleTokenTokenFilter#test().mjava","sourceNew":null,"sourceOld":"  public void test() throws IOException {\n    Token token = new Token();\n    SingleTokenTokenStream ts = new SingleTokenTokenStream(token);\n    AttributeImpl tokenAtt = (AttributeImpl) ts.addAttribute(CharTermAttribute.class);\n    assertTrue(tokenAtt instanceof Token);\n    ts.reset();\n\n    assertTrue(ts.incrementToken());\n    assertEquals(token, tokenAtt);\n    assertFalse(ts.incrementToken());\n    \n    token = new Token(\"hallo\", 10, 20);\n    token.setType(\"someType\");\n    ts.setToken(token);\n    ts.reset();\n\n    assertTrue(ts.incrementToken());\n    assertEquals(token, tokenAtt);\n    assertFalse(ts.incrementToken());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"923f36bb0db6f793cf62dbb68723ae3bfbaf1d75":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6fc92bf7f56dcfe9d5bd75dfdc902b9597ea95b3":["923f36bb0db6f793cf62dbb68723ae3bfbaf1d75"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6fc92bf7f56dcfe9d5bd75dfdc902b9597ea95b3"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["923f36bb0db6f793cf62dbb68723ae3bfbaf1d75"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"923f36bb0db6f793cf62dbb68723ae3bfbaf1d75":["6fc92bf7f56dcfe9d5bd75dfdc902b9597ea95b3"],"6fc92bf7f56dcfe9d5bd75dfdc902b9597ea95b3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}