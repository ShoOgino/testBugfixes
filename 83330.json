{"path":"solr/core/src/test/org/apache/solr/handler/component/DistributedQueryElevationComponentTest#doTest().mjava","commits":[{"id":"e1a45617f98e5cd25b73e9ae4ea69e0a0edacebe","date":1332176888,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedQueryElevationComponentTest#doTest().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    \n    \n    del(\"*:*\");\n    indexr(id,\"1\", \"int_i\", \"1\", \"text\", \"XXXX XXXX\", \"field_t\", \"anything\");\n    indexr(id,\"2\", \"int_i\", \"2\", \"text\", \"YYYY YYYY\", \"plow_t\", \"rake\");\n    indexr(id,\"3\", \"int_i\", \"3\", \"text\", \"ZZZZ ZZZZ\");\n    indexr(id,\"4\", \"int_i\", \"4\", \"text\", \"XXXX XXXX\");\n    indexr(id,\"5\", \"int_i\", \"5\", \"text\", \"ZZZZ ZZZZ ZZZZ\");\n    indexr(id,\"6\", \"int_i\", \"6\", \"text\", \"ZZZZ\");\n    \n    index_specific(2, id, \"7\", \"int_i\", \"7\", \"text\", \"solr\");\n    commit();\n    \n    handle.put(\"explain\", SKIPVAL);\n    handle.put(\"debug\", SKIPVAL);\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"score\", SKIPVAL);\n    handle.put(\"wt\", SKIP);\n    handle.put(\"distrib\", SKIP);\n    handle.put(\"shards.qt\", SKIP);\n    handle.put(\"shards\", SKIP);\n    handle.put(\"q\", SKIP);\n    handle.put(\"qt\", SKIP);\n    query(\"q\", \"*:*\", \"qt\", \"/elevate\", \"shards.qt\", \"/elevate\", \"rows\", \"500\", \"sort\", \"id desc\", CommonParams.FL, \"id, score, [elevated]\");\n\n    query(\"q\", \"ZZZZ\", \"qt\", \"/elevate\", \"shards.qt\", \"/elevate\", \"rows\", \"500\", CommonParams.FL, \"*, [elevated]\", \"forceElevation\", \"true\", \"sort\", \"int_i desc\");\n    \n    query(\"q\", \"solr\", \"qt\", \"/elevate\", \"shards.qt\", \"/elevate\", \"rows\", \"500\", CommonParams.FL, \"*, [elevated]\", \"forceElevation\", \"true\", \"sort\", \"int_i asc\");\n    \n    query(\"q\", \"ZZZZ\", \"qt\", \"/elevate\", \"shards.qt\", \"/elevate\", \"rows\", \"500\", CommonParams.FL, \"*, [elevated]\", \"forceElevation\", \"true\", \"sort\", \"id desc\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["072f211dfa8387028bb978d128c35bf9a450bbbf","3e7b27a300329af820c16fc531452a07a2833681"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"072f211dfa8387028bb978d128c35bf9a450bbbf","date":1406041363,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedQueryElevationComponentTest#doTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedQueryElevationComponentTest#doTest().mjava","sourceNew":"  @Override\n  public void doTest() throws Exception {\n    \n    \n    del(\"*:*\");\n    indexr(id,\"1\", \"int_i\", \"1\", \"text\", \"XXXX XXXX\", \"field_t\", \"anything\");\n    indexr(id,\"2\", \"int_i\", \"2\", \"text\", \"YYYY YYYY\", \"plow_t\", \"rake\");\n    indexr(id,\"3\", \"int_i\", \"3\", \"text\", \"ZZZZ ZZZZ\");\n    indexr(id,\"4\", \"int_i\", \"4\", \"text\", \"XXXX XXXX\");\n    indexr(id,\"5\", \"int_i\", \"5\", \"text\", \"ZZZZ ZZZZ ZZZZ\");\n    indexr(id,\"6\", \"int_i\", \"6\", \"text\", \"ZZZZ\");\n    \n    index_specific(2, id, \"7\", \"int_i\", \"7\", \"text\", \"solr\");\n    commit();\n    \n    handle.put(\"explain\", SKIPVAL);\n    handle.put(\"debug\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"score\", SKIPVAL);\n    handle.put(\"wt\", SKIP);\n    handle.put(\"distrib\", SKIP);\n    handle.put(\"shards.qt\", SKIP);\n    handle.put(\"shards\", SKIP);\n    handle.put(\"q\", SKIP);\n    handle.put(\"qt\", SKIP);\n    query(\"q\", \"*:*\", \"qt\", \"/elevate\", \"shards.qt\", \"/elevate\", \"rows\", \"500\", \"sort\", \"id desc\", CommonParams.FL, \"id, score, [elevated]\");\n\n    query(\"q\", \"ZZZZ\", \"qt\", \"/elevate\", \"shards.qt\", \"/elevate\", \"rows\", \"500\", CommonParams.FL, \"*, [elevated]\", \"forceElevation\", \"true\", \"sort\", \"int_i desc\");\n    \n    query(\"q\", \"solr\", \"qt\", \"/elevate\", \"shards.qt\", \"/elevate\", \"rows\", \"500\", CommonParams.FL, \"*, [elevated]\", \"forceElevation\", \"true\", \"sort\", \"int_i asc\");\n    \n    query(\"q\", \"ZZZZ\", \"qt\", \"/elevate\", \"shards.qt\", \"/elevate\", \"rows\", \"500\", CommonParams.FL, \"*, [elevated]\", \"forceElevation\", \"true\", \"sort\", \"id desc\");\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    \n    \n    del(\"*:*\");\n    indexr(id,\"1\", \"int_i\", \"1\", \"text\", \"XXXX XXXX\", \"field_t\", \"anything\");\n    indexr(id,\"2\", \"int_i\", \"2\", \"text\", \"YYYY YYYY\", \"plow_t\", \"rake\");\n    indexr(id,\"3\", \"int_i\", \"3\", \"text\", \"ZZZZ ZZZZ\");\n    indexr(id,\"4\", \"int_i\", \"4\", \"text\", \"XXXX XXXX\");\n    indexr(id,\"5\", \"int_i\", \"5\", \"text\", \"ZZZZ ZZZZ ZZZZ\");\n    indexr(id,\"6\", \"int_i\", \"6\", \"text\", \"ZZZZ\");\n    \n    index_specific(2, id, \"7\", \"int_i\", \"7\", \"text\", \"solr\");\n    commit();\n    \n    handle.put(\"explain\", SKIPVAL);\n    handle.put(\"debug\", SKIPVAL);\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"score\", SKIPVAL);\n    handle.put(\"wt\", SKIP);\n    handle.put(\"distrib\", SKIP);\n    handle.put(\"shards.qt\", SKIP);\n    handle.put(\"shards\", SKIP);\n    handle.put(\"q\", SKIP);\n    handle.put(\"qt\", SKIP);\n    query(\"q\", \"*:*\", \"qt\", \"/elevate\", \"shards.qt\", \"/elevate\", \"rows\", \"500\", \"sort\", \"id desc\", CommonParams.FL, \"id, score, [elevated]\");\n\n    query(\"q\", \"ZZZZ\", \"qt\", \"/elevate\", \"shards.qt\", \"/elevate\", \"rows\", \"500\", CommonParams.FL, \"*, [elevated]\", \"forceElevation\", \"true\", \"sort\", \"int_i desc\");\n    \n    query(\"q\", \"solr\", \"qt\", \"/elevate\", \"shards.qt\", \"/elevate\", \"rows\", \"500\", CommonParams.FL, \"*, [elevated]\", \"forceElevation\", \"true\", \"sort\", \"int_i asc\");\n    \n    query(\"q\", \"ZZZZ\", \"qt\", \"/elevate\", \"shards.qt\", \"/elevate\", \"rows\", \"500\", CommonParams.FL, \"*, [elevated]\", \"forceElevation\", \"true\", \"sort\", \"id desc\");\n  }\n\n","bugFix":["e1a45617f98e5cd25b73e9ae4ea69e0a0edacebe"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"abb23fcc2461782ab204e61213240feb77d355aa","date":1422029612,"type":5,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedQueryElevationComponentTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedQueryElevationComponentTest#doTest().mjava","sourceNew":"  @Test\n  @ShardsFixed(num = 3)\n  public void test() throws Exception {\n    \n    \n    del(\"*:*\");\n    indexr(id,\"1\", \"int_i\", \"1\", \"text\", \"XXXX XXXX\", \"field_t\", \"anything\");\n    indexr(id,\"2\", \"int_i\", \"2\", \"text\", \"YYYY YYYY\", \"plow_t\", \"rake\");\n    indexr(id,\"3\", \"int_i\", \"3\", \"text\", \"ZZZZ ZZZZ\");\n    indexr(id,\"4\", \"int_i\", \"4\", \"text\", \"XXXX XXXX\");\n    indexr(id,\"5\", \"int_i\", \"5\", \"text\", \"ZZZZ ZZZZ ZZZZ\");\n    indexr(id,\"6\", \"int_i\", \"6\", \"text\", \"ZZZZ\");\n    \n    index_specific(2, id, \"7\", \"int_i\", \"7\", \"text\", \"solr\");\n    commit();\n    \n    handle.put(\"explain\", SKIPVAL);\n    handle.put(\"debug\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"score\", SKIPVAL);\n    handle.put(\"wt\", SKIP);\n    handle.put(\"distrib\", SKIP);\n    handle.put(\"shards.qt\", SKIP);\n    handle.put(\"shards\", SKIP);\n    handle.put(\"q\", SKIP);\n    handle.put(\"qt\", SKIP);\n    query(\"q\", \"*:*\", \"qt\", \"/elevate\", \"shards.qt\", \"/elevate\", \"rows\", \"500\", \"sort\", \"id desc\", CommonParams.FL, \"id, score, [elevated]\");\n\n    query(\"q\", \"ZZZZ\", \"qt\", \"/elevate\", \"shards.qt\", \"/elevate\", \"rows\", \"500\", CommonParams.FL, \"*, [elevated]\", \"forceElevation\", \"true\", \"sort\", \"int_i desc\");\n    \n    query(\"q\", \"solr\", \"qt\", \"/elevate\", \"shards.qt\", \"/elevate\", \"rows\", \"500\", CommonParams.FL, \"*, [elevated]\", \"forceElevation\", \"true\", \"sort\", \"int_i asc\");\n    \n    query(\"q\", \"ZZZZ\", \"qt\", \"/elevate\", \"shards.qt\", \"/elevate\", \"rows\", \"500\", CommonParams.FL, \"*, [elevated]\", \"forceElevation\", \"true\", \"sort\", \"id desc\");\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    \n    \n    del(\"*:*\");\n    indexr(id,\"1\", \"int_i\", \"1\", \"text\", \"XXXX XXXX\", \"field_t\", \"anything\");\n    indexr(id,\"2\", \"int_i\", \"2\", \"text\", \"YYYY YYYY\", \"plow_t\", \"rake\");\n    indexr(id,\"3\", \"int_i\", \"3\", \"text\", \"ZZZZ ZZZZ\");\n    indexr(id,\"4\", \"int_i\", \"4\", \"text\", \"XXXX XXXX\");\n    indexr(id,\"5\", \"int_i\", \"5\", \"text\", \"ZZZZ ZZZZ ZZZZ\");\n    indexr(id,\"6\", \"int_i\", \"6\", \"text\", \"ZZZZ\");\n    \n    index_specific(2, id, \"7\", \"int_i\", \"7\", \"text\", \"solr\");\n    commit();\n    \n    handle.put(\"explain\", SKIPVAL);\n    handle.put(\"debug\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"score\", SKIPVAL);\n    handle.put(\"wt\", SKIP);\n    handle.put(\"distrib\", SKIP);\n    handle.put(\"shards.qt\", SKIP);\n    handle.put(\"shards\", SKIP);\n    handle.put(\"q\", SKIP);\n    handle.put(\"qt\", SKIP);\n    query(\"q\", \"*:*\", \"qt\", \"/elevate\", \"shards.qt\", \"/elevate\", \"rows\", \"500\", \"sort\", \"id desc\", CommonParams.FL, \"id, score, [elevated]\");\n\n    query(\"q\", \"ZZZZ\", \"qt\", \"/elevate\", \"shards.qt\", \"/elevate\", \"rows\", \"500\", CommonParams.FL, \"*, [elevated]\", \"forceElevation\", \"true\", \"sort\", \"int_i desc\");\n    \n    query(\"q\", \"solr\", \"qt\", \"/elevate\", \"shards.qt\", \"/elevate\", \"rows\", \"500\", CommonParams.FL, \"*, [elevated]\", \"forceElevation\", \"true\", \"sort\", \"int_i asc\");\n    \n    query(\"q\", \"ZZZZ\", \"qt\", \"/elevate\", \"shards.qt\", \"/elevate\", \"rows\", \"500\", CommonParams.FL, \"*, [elevated]\", \"forceElevation\", \"true\", \"sort\", \"id desc\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"072f211dfa8387028bb978d128c35bf9a450bbbf":["e1a45617f98e5cd25b73e9ae4ea69e0a0edacebe"],"abb23fcc2461782ab204e61213240feb77d355aa":["072f211dfa8387028bb978d128c35bf9a450bbbf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e1a45617f98e5cd25b73e9ae4ea69e0a0edacebe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["abb23fcc2461782ab204e61213240feb77d355aa"]},"commit2Childs":{"072f211dfa8387028bb978d128c35bf9a450bbbf":["abb23fcc2461782ab204e61213240feb77d355aa"],"abb23fcc2461782ab204e61213240feb77d355aa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e1a45617f98e5cd25b73e9ae4ea69e0a0edacebe"],"e1a45617f98e5cd25b73e9ae4ea69e0a0edacebe":["072f211dfa8387028bb978d128c35bf9a450bbbf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}