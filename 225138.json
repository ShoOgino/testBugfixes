{"path":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#setTopQueryResults(IndexReader,String,String[],String[]).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#setTopQueryResults(IndexReader,String,String[],String[]).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/QueryElevationComponent#setTopQueryResults(IndexReader,String,String[],String[]).mjava","sourceNew":"  /**\n   * Helpful for testing without loading config.xml\n   * @throws IOException \n   */\n  void setTopQueryResults( IndexReader reader, String query, String[] ids, String[] ex ) throws IOException\n  {\n    if( ids == null ) {\n      ids = new String[0];\n    }\n    if( ex == null ) {\n      ex = new String[0];\n    }\n    \n    Map<String,ElevationObj> elev = elevationCache.get( reader );\n    if( elev == null ) {\n      elev = new HashMap<String, ElevationObj>();\n      elevationCache.put( reader, elev );\n    }\n    ElevationObj obj = new ElevationObj( query, Arrays.asList(ids), Arrays.asList(ex) );\n    elev.put( obj.analyzed, obj );\n  }\n\n","sourceOld":"  /**\n   * Helpful for testing without loading config.xml\n   * @throws IOException \n   */\n  void setTopQueryResults( IndexReader reader, String query, String[] ids, String[] ex ) throws IOException\n  {\n    if( ids == null ) {\n      ids = new String[0];\n    }\n    if( ex == null ) {\n      ex = new String[0];\n    }\n    \n    Map<String,ElevationObj> elev = elevationCache.get( reader );\n    if( elev == null ) {\n      elev = new HashMap<String, ElevationObj>();\n      elevationCache.put( reader, elev );\n    }\n    ElevationObj obj = new ElevationObj( query, Arrays.asList(ids), Arrays.asList(ex) );\n    elev.put( obj.analyzed, obj );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#setTopQueryResults(IndexReader,String,String[],String[]).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/QueryElevationComponent#setTopQueryResults(IndexReader,String,String[],String[]).mjava","sourceNew":"  /**\n   * Helpful for testing without loading config.xml\n   * @throws IOException \n   */\n  void setTopQueryResults( IndexReader reader, String query, String[] ids, String[] ex ) throws IOException\n  {\n    if( ids == null ) {\n      ids = new String[0];\n    }\n    if( ex == null ) {\n      ex = new String[0];\n    }\n    \n    Map<String,ElevationObj> elev = elevationCache.get( reader );\n    if( elev == null ) {\n      elev = new HashMap<String, ElevationObj>();\n      elevationCache.put( reader, elev );\n    }\n    ElevationObj obj = new ElevationObj( query, Arrays.asList(ids), Arrays.asList(ex) );\n    elev.put( obj.analyzed, obj );\n  }\n\n","sourceOld":"  /**\n   * Helpful for testing without loading config.xml\n   * @throws IOException \n   */\n  void setTopQueryResults( IndexReader reader, String query, String[] ids, String[] ex ) throws IOException\n  {\n    if( ids == null ) {\n      ids = new String[0];\n    }\n    if( ex == null ) {\n      ex = new String[0];\n    }\n    \n    Map<String,ElevationObj> elev = elevationCache.get( reader );\n    if( elev == null ) {\n      elev = new HashMap<String, ElevationObj>();\n      elevationCache.put( reader, elev );\n    }\n    ElevationObj obj = new ElevationObj( query, Arrays.asList(ids), Arrays.asList(ex) );\n    elev.put( obj.analyzed, obj );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#setTopQueryResults(IndexReader,String,String[],String[]).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/QueryElevationComponent#setTopQueryResults(IndexReader,String,String[],String[]).mjava","sourceNew":"  /**\n   * Helpful for testing without loading config.xml\n   * @throws IOException \n   */\n  void setTopQueryResults( IndexReader reader, String query, String[] ids, String[] ex ) throws IOException\n  {\n    if( ids == null ) {\n      ids = new String[0];\n    }\n    if( ex == null ) {\n      ex = new String[0];\n    }\n    \n    Map<String,ElevationObj> elev = elevationCache.get( reader );\n    if( elev == null ) {\n      elev = new HashMap<String, ElevationObj>();\n      elevationCache.put( reader, elev );\n    }\n    ElevationObj obj = new ElevationObj( query, Arrays.asList(ids), Arrays.asList(ex) );\n    elev.put( obj.analyzed, obj );\n  }\n\n","sourceOld":"  /**\n   * Helpful for testing without loading config.xml\n   * @throws IOException \n   */\n  void setTopQueryResults( IndexReader reader, String query, String[] ids, String[] ex ) throws IOException\n  {\n    if( ids == null ) {\n      ids = new String[0];\n    }\n    if( ex == null ) {\n      ex = new String[0];\n    }\n    \n    Map<String,ElevationObj> elev = elevationCache.get( reader );\n    if( elev == null ) {\n      elev = new HashMap<String, ElevationObj>();\n      elevationCache.put( reader, elev );\n    }\n    ElevationObj obj = new ElevationObj( query, Arrays.asList(ids), Arrays.asList(ex) );\n    elev.put( obj.analyzed, obj );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d0561cea94adff1867218e77bb763c7583be279","date":1324334341,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#setTopQueryResults(IndexReader,String,String[],String[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#setTopQueryResults(IndexReader,String,String[],String[]).mjava","sourceNew":"  /**\n   * Helpful for testing without loading config.xml\n   *\n   * @throws IOException\n   */\n  void setTopQueryResults(IndexReader reader, String query, String[] ids, String[] ex) throws IOException {\n    if (ids == null) {\n      ids = new String[0];\n    }\n    if (ex == null) {\n      ex = new String[0];\n    }\n\n    Map<String, ElevationObj> elev = elevationCache.get(reader);\n    if (elev == null) {\n      elev = new HashMap<String, ElevationObj>();\n      elevationCache.put(reader, elev);\n    }\n    ElevationObj obj = new ElevationObj(query, Arrays.asList(ids), Arrays.asList(ex));\n    elev.put(obj.analyzed, obj);\n  }\n\n","sourceOld":"  /**\n   * Helpful for testing without loading config.xml\n   * @throws IOException \n   */\n  void setTopQueryResults( IndexReader reader, String query, String[] ids, String[] ex ) throws IOException\n  {\n    if( ids == null ) {\n      ids = new String[0];\n    }\n    if( ex == null ) {\n      ex = new String[0];\n    }\n    \n    Map<String,ElevationObj> elev = elevationCache.get( reader );\n    if( elev == null ) {\n      elev = new HashMap<String, ElevationObj>();\n      elevationCache.put( reader, elev );\n    }\n    ElevationObj obj = new ElevationObj( query, Arrays.asList(ids), Arrays.asList(ex) );\n    elev.put( obj.analyzed, obj );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#setTopQueryResults(IndexReader,String,String[],String[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#setTopQueryResults(IndexReader,String,String[],String[]).mjava","sourceNew":"  /**\n   * Helpful for testing without loading config.xml\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  void setTopQueryResults(IndexReader reader, String query, String[] ids, String[] ex) throws IOException {\n    if (ids == null) {\n      ids = new String[0];\n    }\n    if (ex == null) {\n      ex = new String[0];\n    }\n\n    Map<String, ElevationObj> elev = elevationCache.get(reader);\n    if (elev == null) {\n      elev = new HashMap<String, ElevationObj>();\n      elevationCache.put(reader, elev);\n    }\n    ElevationObj obj = new ElevationObj(query, Arrays.asList(ids), Arrays.asList(ex));\n    elev.put(obj.analyzed, obj);\n  }\n\n","sourceOld":"  /**\n   * Helpful for testing without loading config.xml\n   *\n   * @throws IOException\n   */\n  void setTopQueryResults(IndexReader reader, String query, String[] ids, String[] ex) throws IOException {\n    if (ids == null) {\n      ids = new String[0];\n    }\n    if (ex == null) {\n      ex = new String[0];\n    }\n\n    Map<String, ElevationObj> elev = elevationCache.get(reader);\n    if (elev == null) {\n      elev = new HashMap<String, ElevationObj>();\n      elevationCache.put(reader, elev);\n    }\n    ElevationObj obj = new ElevationObj(query, Arrays.asList(ids), Arrays.asList(ex));\n    elev.put(obj.analyzed, obj);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#setTopQueryResults(IndexReader,String,String[],String[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#setTopQueryResults(IndexReader,String,String[],String[]).mjava","sourceNew":"  /**\n   * Helpful for testing without loading config.xml\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  void setTopQueryResults(IndexReader reader, String query, String[] ids, String[] ex) throws IOException {\n    if (ids == null) {\n      ids = new String[0];\n    }\n    if (ex == null) {\n      ex = new String[0];\n    }\n\n    Map<String, ElevationObj> elev = elevationCache.get(reader);\n    if (elev == null) {\n      elev = new HashMap<>();\n      elevationCache.put(reader, elev);\n    }\n    ElevationObj obj = new ElevationObj(query, Arrays.asList(ids), Arrays.asList(ex));\n    elev.put(obj.analyzed, obj);\n  }\n\n","sourceOld":"  /**\n   * Helpful for testing without loading config.xml\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  void setTopQueryResults(IndexReader reader, String query, String[] ids, String[] ex) throws IOException {\n    if (ids == null) {\n      ids = new String[0];\n    }\n    if (ex == null) {\n      ex = new String[0];\n    }\n\n    Map<String, ElevationObj> elev = elevationCache.get(reader);\n    if (elev == null) {\n      elev = new HashMap<String, ElevationObj>();\n      elevationCache.put(reader, elev);\n    }\n    ElevationObj obj = new ElevationObj(query, Arrays.asList(ids), Arrays.asList(ex));\n    elev.put(obj.analyzed, obj);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ad458affd82a1d762eb506003907d9363a333cb","date":1528558344,"type":4,"author":"broustant","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#setTopQueryResults(IndexReader,String,String[],String[]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Helpful for testing without loading config.xml\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  void setTopQueryResults(IndexReader reader, String query, String[] ids, String[] ex) throws IOException {\n    if (ids == null) {\n      ids = new String[0];\n    }\n    if (ex == null) {\n      ex = new String[0];\n    }\n\n    Map<String, ElevationObj> elev = elevationCache.get(reader);\n    if (elev == null) {\n      elev = new HashMap<>();\n      elevationCache.put(reader, elev);\n    }\n    ElevationObj obj = new ElevationObj(query, Arrays.asList(ids), Arrays.asList(ex));\n    elev.put(obj.analyzed, obj);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":4,"author":"Michael Braun","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#setTopQueryResults(IndexReader,String,String[],String[]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Helpful for testing without loading config.xml\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  void setTopQueryResults(IndexReader reader, String query, String[] ids, String[] ex) throws IOException {\n    if (ids == null) {\n      ids = new String[0];\n    }\n    if (ex == null) {\n      ex = new String[0];\n    }\n\n    Map<String, ElevationObj> elev = elevationCache.get(reader);\n    if (elev == null) {\n      elev = new HashMap<>();\n      elevationCache.put(reader, elev);\n    }\n    ElevationObj obj = new ElevationObj(query, Arrays.asList(ids), Arrays.asList(ex));\n    elev.put(obj.analyzed, obj);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":4,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#setTopQueryResults(IndexReader,String,String[],String[]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Helpful for testing without loading config.xml\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  void setTopQueryResults(IndexReader reader, String query, String[] ids, String[] ex) throws IOException {\n    if (ids == null) {\n      ids = new String[0];\n    }\n    if (ex == null) {\n      ex = new String[0];\n    }\n\n    Map<String, ElevationObj> elev = elevationCache.get(reader);\n    if (elev == null) {\n      elev = new HashMap<>();\n      elevationCache.put(reader, elev);\n    }\n    ElevationObj obj = new ElevationObj(query, Arrays.asList(ids), Arrays.asList(ex));\n    elev.put(obj.analyzed, obj);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["1d0561cea94adff1867218e77bb763c7583be279"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","2ad458affd82a1d762eb506003907d9363a333cb"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2ad458affd82a1d762eb506003907d9363a333cb":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1d0561cea94adff1867218e77bb763c7583be279":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2ad458affd82a1d762eb506003907d9363a333cb"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","2ad458affd82a1d762eb506003907d9363a333cb"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","2ad458affd82a1d762eb506003907d9363a333cb","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["1d0561cea94adff1867218e77bb763c7583be279"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"2ad458affd82a1d762eb506003907d9363a333cb":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"1d0561cea94adff1867218e77bb763c7583be279":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}