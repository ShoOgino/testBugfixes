{"path":"lucene/src/java/org/apache/lucene/index/values/FixedSortedBytesImpl.FixedSortedSource#FixedSortedSource(IndexInput,IndexInput,int,int,Comparator[BytesRef]).mjava","commits":[{"id":"e128967bca58657bc0039d4bfe631e63e81f1977","date":1317978310,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/FixedSortedBytesImpl.FixedSortedSource#FixedSortedSource(IndexInput,IndexInput,int,int,Comparator[BytesRef]).mjava","pathOld":"/dev/null","sourceNew":"    FixedSortedSource(IndexInput datIn, IndexInput idxIn, int size,\n        int numValues, Comparator<BytesRef> comp) throws IOException {\n      super(datIn, idxIn, comp, size * numValues, ValueType.BYTES_FIXED_SORTED);\n      this.size = size;\n      this.valueCount = numValues;\n      closeIndexInput();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1346e81f172438a4f28d91266cdd03851f94b831","date":1318404834,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/FixedSortedBytesImpl.FixedSortedSource#FixedSortedSource(IndexInput,IndexInput,int,int,Comparator[BytesRef]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/FixedSortedBytesImpl.FixedSortedSource#FixedSortedSource(IndexInput,IndexInput,int,int,Comparator[BytesRef]).mjava","sourceNew":"    FixedSortedSource(IndexInput datIn, IndexInput idxIn, int size,\n        int numValues, Comparator<BytesRef> comp) throws IOException {\n      super(datIn, idxIn, comp, size * numValues, ValueType.BYTES_FIXED_SORTED,\n          false);\n      this.size = size;\n      this.valueCount = numValues;\n      closeIndexInput();\n    }\n\n","sourceOld":"    FixedSortedSource(IndexInput datIn, IndexInput idxIn, int size,\n        int numValues, Comparator<BytesRef> comp) throws IOException {\n      super(datIn, idxIn, comp, size * numValues, ValueType.BYTES_FIXED_SORTED);\n      this.size = size;\n      this.valueCount = numValues;\n      closeIndexInput();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9efc72acdea22f5285be0a808f8bba51bb8e367","date":1323217280,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/FixedSortedBytesImpl.FixedSortedSource#FixedSortedSource(IndexInput,IndexInput,int,int,Comparator[BytesRef]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/FixedSortedBytesImpl.FixedSortedSource#FixedSortedSource(IndexInput,IndexInput,int,int,Comparator[BytesRef]).mjava","sourceNew":"    FixedSortedSource(IndexInput datIn, IndexInput idxIn, int size,\n        int numValues, Comparator<BytesRef> comp) throws IOException {\n      super(datIn, idxIn, comp, size * numValues, ValueType.BYTES_FIXED_SORTED,\n          false);\n      this.size = size;\n      this.valueCount = numValues;\n      closeIndexInput();\n    }\n\n","sourceOld":"    FixedSortedSource(IndexInput datIn, IndexInput idxIn, int size,\n        int numValues, Comparator<BytesRef> comp) throws IOException {\n      super(datIn, idxIn, comp, size * numValues, ValueType.BYTES_FIXED_SORTED,\n          false);\n      this.size = size;\n      this.valueCount = numValues;\n      closeIndexInput();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/FixedSortedBytesImpl.FixedSortedSource#FixedSortedSource(IndexInput,IndexInput,int,int,Comparator[BytesRef]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/FixedSortedBytesImpl.FixedSortedSource#FixedSortedSource(IndexInput,IndexInput,int,int,Comparator[BytesRef]).mjava","sourceNew":"    FixedSortedSource(IndexInput datIn, IndexInput idxIn, int size,\n        int numValues, Comparator<BytesRef> comp) throws IOException {\n      super(datIn, idxIn, comp, size * numValues, Type.BYTES_FIXED_SORTED,\n          false);\n      this.size = size;\n      this.valueCount = numValues;\n      closeIndexInput();\n    }\n\n","sourceOld":"    FixedSortedSource(IndexInput datIn, IndexInput idxIn, int size,\n        int numValues, Comparator<BytesRef> comp) throws IOException {\n      super(datIn, idxIn, comp, size * numValues, ValueType.BYTES_FIXED_SORTED,\n          false);\n      this.size = size;\n      this.valueCount = numValues;\n      closeIndexInput();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1346e81f172438a4f28d91266cdd03851f94b831":["e128967bca58657bc0039d4bfe631e63e81f1977"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f9efc72acdea22f5285be0a808f8bba51bb8e367":["1346e81f172438a4f28d91266cdd03851f94b831"],"e128967bca58657bc0039d4bfe631e63e81f1977":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["1346e81f172438a4f28d91266cdd03851f94b831","f9efc72acdea22f5285be0a808f8bba51bb8e367"]},"commit2Childs":{"1346e81f172438a4f28d91266cdd03851f94b831":["f9efc72acdea22f5285be0a808f8bba51bb8e367","d638301ad1cfcae567b681b893bc8781f0ee48a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e128967bca58657bc0039d4bfe631e63e81f1977"],"f9efc72acdea22f5285be0a808f8bba51bb8e367":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"e128967bca58657bc0039d4bfe631e63e81f1977":["1346e81f172438a4f28d91266cdd03851f94b831"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}