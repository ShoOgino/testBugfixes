{"path":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropertySub().mjava","commits":[{"id":"6e764e9a107f93be9fa3c922bc6a197b3eec387e","date":1373560501,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropertySub().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropretySub().mjava","sourceNew":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropertySub() throws IOException {\n\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\");\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"newShareSchema\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n\n    SolrResourceLoader loader = null;\n    try {\n      loader = new SolrResourceLoader(solrHome.getAbsolutePath());\n      ConfigSolr cfg = ConfigSolr.fromSolrHome(loader, solrHome.getAbsolutePath());\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_COREROOTDIRECTORY, null), \"myCoreRoot\");\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_HOSTPORT, 0), 8888);\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_SHARESCHEMA, null), \"newShareSchema\");\n    }\n    finally {\n      loader.close();\n    }\n  }\n\n","sourceOld":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropretySub() throws IOException, ParserConfigurationException, SAXException {\n\n    String coreRoot = System.getProperty(\"coreRootDirectory\");\n    String hostPort = System.getProperty(\"hostPort\");\n    String shareSchema = System.getProperty(\"shareSchema\");\n    String socketTimeout = System.getProperty(\"socketTimeout\");\n    String connTimeout = System.getProperty(\"connTimeout\");\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\");\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"newShareSchema\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    CoreContainer cc = null;\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n    try {\n      InputStream is = new FileInputStream(new File(solrHome, \"solr.xml\"));\n      Config config = new Config(new SolrResourceLoader(\"solr/collection1\"), null, new InputSource(is), null, false);\n      boolean oldStyle = (config.getNode(\"solr/cores\", false) != null);\n      ConfigSolr cfg;\n      if (oldStyle) {\n        cfg = new ConfigSolrXmlOld(config);\n      } else {\n        cfg = new ConfigSolrXml(config, cc);\n      }\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_COREROOTDIRECTORY, null), \"myCoreRoot\");\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_HOSTPORT, 0), 8888);\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_SHARESCHEMA, null), \"newShareSchema\");\n\n    } finally {\n      if (cc != null) cc.shutdown();\n      if (coreRoot != null) System.setProperty(\"coreRootDirectory\", coreRoot);\n      else System.clearProperty(\"coreRootDirectory\");\n\n      if (hostPort != null) System.setProperty(\"hostPort\", hostPort);\n      else System.clearProperty(\"hostPort\");\n\n      if (shareSchema != null) System.setProperty(\"shareSchema\", shareSchema);\n      else System.clearProperty(\"shareSchema\");\n\n      if (socketTimeout != null) System.setProperty(\"socketTimeout\", socketTimeout);\n      else System.clearProperty(\"socketTimeout\");\n\n      if (connTimeout != null) System.setProperty(\"connTimeout\", connTimeout);\n      else System.clearProperty(\"connTimeout\");\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropertySub().mjava","pathOld":"/dev/null","sourceNew":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropertySub() throws IOException {\n\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\");\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"newShareSchema\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n\n    SolrResourceLoader loader = null;\n    try {\n      loader = new SolrResourceLoader(solrHome.getAbsolutePath());\n      ConfigSolr cfg = ConfigSolr.fromSolrHome(loader, solrHome.getAbsolutePath());\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_COREROOTDIRECTORY, null), \"myCoreRoot\");\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_HOSTPORT, 0), 8888);\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_SHARESCHEMA, null), \"newShareSchema\");\n    }\n    finally {\n      loader.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"03681d28699f1218ed73de3e36e303ca6bcadec7","date":1394805879,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropertySub().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropertySub().mjava","sourceNew":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropertySub() throws IOException {\n\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\");\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"newShareSchema\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n\n    SolrResourceLoader loader = null;\n    try {\n      loader = new SolrResourceLoader(solrHome.getAbsolutePath());\n      ConfigSolr cfg = ConfigSolr.fromSolrHome(loader, solrHome.getAbsolutePath());\n      assertEquals(\"Did not find expected value\", \"myCoreRoot\", cfg.get(ConfigSolr.CfgProp.SOLR_COREROOTDIRECTORY, null));\n      assertEquals(\"Did not find expected value\", 8888, cfg.getInt(ConfigSolr.CfgProp.SOLR_HOSTPORT, 0));\n      assertEquals(\"Did not find expected value\", \"newShareSchema\", cfg.get(ConfigSolr.CfgProp.SOLR_SHARESCHEMA, null));\n    }\n    finally {\n      loader.close();\n    }\n  }\n\n","sourceOld":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropertySub() throws IOException {\n\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\");\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"newShareSchema\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n\n    SolrResourceLoader loader = null;\n    try {\n      loader = new SolrResourceLoader(solrHome.getAbsolutePath());\n      ConfigSolr cfg = ConfigSolr.fromSolrHome(loader, solrHome.getAbsolutePath());\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_COREROOTDIRECTORY, null), \"myCoreRoot\");\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_HOSTPORT, 0), 8888);\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_SHARESCHEMA, null), \"newShareSchema\");\n    }\n    finally {\n      loader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":["a877077e0a22a42eebce7d1052c58e97d3afb12d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a877077e0a22a42eebce7d1052c58e97d3afb12d","date":1405981118,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropertySub().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropertySub().mjava","sourceNew":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropertySub() throws IOException {\n\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\");\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"false\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n\n    ConfigSolr cfg = ConfigSolr.fromSolrHome(loader, solrHome.getAbsolutePath());\n    assertEquals(\"core root dir\", \"myCoreRoot\", cfg.getCoreRootDirectory());\n    assertEquals(\"zk host port\", \"8888\", cfg.getZkHostPort());\n    assertEquals(\"schema cache\", false, cfg.hasSchemaCache());\n  }\n\n","sourceOld":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropertySub() throws IOException {\n\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\");\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"newShareSchema\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n\n    SolrResourceLoader loader = null;\n    try {\n      loader = new SolrResourceLoader(solrHome.getAbsolutePath());\n      ConfigSolr cfg = ConfigSolr.fromSolrHome(loader, solrHome.getAbsolutePath());\n      assertEquals(\"Did not find expected value\", \"myCoreRoot\", cfg.get(ConfigSolr.CfgProp.SOLR_COREROOTDIRECTORY, null));\n      assertEquals(\"Did not find expected value\", 8888, cfg.getInt(ConfigSolr.CfgProp.SOLR_HOSTPORT, 0));\n      assertEquals(\"Did not find expected value\", \"newShareSchema\", cfg.get(ConfigSolr.CfgProp.SOLR_SHARESCHEMA, null));\n    }\n    finally {\n      loader.close();\n    }\n  }\n\n","bugFix":["6e764e9a107f93be9fa3c922bc6a197b3eec387e","03681d28699f1218ed73de3e36e303ca6bcadec7"],"bugIntro":["4b02ae24808d82a22a424499d7ad8840dc668120","d2c1938c9f5c1c27e65b3a92640108988277ee9b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4b02ae24808d82a22a424499d7ad8840dc668120","date":1408388109,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropertySub().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropertySub().mjava","sourceNew":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropertySub() throws IOException {\n\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\" + File.separator);\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"false\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n\n    ConfigSolr cfg = ConfigSolr.fromSolrHome(loader, solrHome.getAbsolutePath());\n    assertEquals(\"core root dir\", \"myCoreRoot\" + File.separator, cfg.getCoreRootDirectory());\n    assertEquals(\"zk host port\", \"8888\", cfg.getZkHostPort());\n    assertEquals(\"schema cache\", false, cfg.hasSchemaCache());\n  }\n\n","sourceOld":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropertySub() throws IOException {\n\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\");\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"false\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n\n    ConfigSolr cfg = ConfigSolr.fromSolrHome(loader, solrHome.getAbsolutePath());\n    assertEquals(\"core root dir\", \"myCoreRoot\", cfg.getCoreRootDirectory());\n    assertEquals(\"zk host port\", \"8888\", cfg.getZkHostPort());\n    assertEquals(\"schema cache\", false, cfg.hasSchemaCache());\n  }\n\n","bugFix":["6e764e9a107f93be9fa3c922bc6a197b3eec387e","a877077e0a22a42eebce7d1052c58e97d3afb12d"],"bugIntro":["4bb5e36693e1b5167f92325b87847a0d8bf100f5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d2c1938c9f5c1c27e65b3a92640108988277ee9b","date":1418411102,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropertySub().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropertySub().mjava","sourceNew":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropertySub() throws IOException {\n\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\" + File.separator);\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"false\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n\n    ConfigSolr cfg = ConfigSolr.fromSolrHome(loader, solrHome.getAbsolutePath());\n    assertEquals(\"core root dir\", \"myCoreRoot\" + File.separator, cfg.getCoreRootDirectory());\n    assertEquals(\"solr host port\", \"8888\", cfg.getSolrHostPort());\n    assertEquals(\"schema cache\", false, cfg.hasSchemaCache());\n  }\n\n","sourceOld":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropertySub() throws IOException {\n\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\" + File.separator);\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"false\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n\n    ConfigSolr cfg = ConfigSolr.fromSolrHome(loader, solrHome.getAbsolutePath());\n    assertEquals(\"core root dir\", \"myCoreRoot\" + File.separator, cfg.getCoreRootDirectory());\n    assertEquals(\"zk host port\", \"8888\", cfg.getZkHostPort());\n    assertEquals(\"schema cache\", false, cfg.hasSchemaCache());\n  }\n\n","bugFix":["a877077e0a22a42eebce7d1052c58e97d3afb12d"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4bb5e36693e1b5167f92325b87847a0d8bf100f5","date":1418983514,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropertySub().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropertySub().mjava","sourceNew":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropertySub() throws IOException {\n\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\" + File.separator);\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"false\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n\n    ConfigSolr cfg = ConfigSolr.fromSolrHome(loader, solrHome.getAbsolutePath());\n    assertThat(cfg.getCoreRootDirectory(), containsString(\"myCoreRoot\"));\n    assertEquals(\"solr host port\", \"8888\", cfg.getSolrHostPort());\n    assertEquals(\"schema cache\", false, cfg.hasSchemaCache());\n  }\n\n","sourceOld":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropertySub() throws IOException {\n\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\" + File.separator);\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"false\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n\n    ConfigSolr cfg = ConfigSolr.fromSolrHome(loader, solrHome.getAbsolutePath());\n    assertEquals(\"core root dir\", \"myCoreRoot\" + File.separator, cfg.getCoreRootDirectory());\n    assertEquals(\"solr host port\", \"8888\", cfg.getSolrHostPort());\n    assertEquals(\"schema cache\", false, cfg.hasSchemaCache());\n  }\n\n","bugFix":["4b02ae24808d82a22a424499d7ad8840dc668120"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e15199583d3635cb940942caed05132dd6c4c7c6","date":1424875551,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropertySub().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropertySub().mjava","sourceNew":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropertySub() throws IOException {\n\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\" + File.separator);\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"false\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n\n    NodeConfig cfg = SolrXmlConfig.fromSolrHome(loader, solrHome.getAbsolutePath());\n    assertThat(cfg.getCoreRootDirectory(), containsString(\"myCoreRoot\"));\n    assertEquals(\"solr host port\", 8888, cfg.getCloudConfig().getSolrHostPort());\n    assertEquals(\"schema cache\", false, cfg.hasSchemaCache());\n  }\n\n","sourceOld":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropertySub() throws IOException {\n\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\" + File.separator);\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"false\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n\n    ConfigSolr cfg = ConfigSolr.fromSolrHome(loader, solrHome.getAbsolutePath());\n    assertThat(cfg.getCoreRootDirectory(), containsString(\"myCoreRoot\"));\n    assertEquals(\"solr host port\", \"8888\", cfg.getSolrHostPort());\n    assertEquals(\"schema cache\", false, cfg.hasSchemaCache());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropertySub().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropertySub().mjava","sourceNew":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropertySub() throws IOException {\n\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\" + File.separator);\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"false\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n\n    NodeConfig cfg = SolrXmlConfig.fromSolrHome(loader, solrHome.getAbsolutePath());\n    assertThat(cfg.getCoreRootDirectory(), containsString(\"myCoreRoot\"));\n    assertEquals(\"solr host port\", 8888, cfg.getCloudConfig().getSolrHostPort());\n    assertEquals(\"schema cache\", false, cfg.hasSchemaCache());\n  }\n\n","sourceOld":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropertySub() throws IOException {\n\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\" + File.separator);\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"false\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n\n    ConfigSolr cfg = ConfigSolr.fromSolrHome(loader, solrHome.getAbsolutePath());\n    assertThat(cfg.getCoreRootDirectory(), containsString(\"myCoreRoot\"));\n    assertEquals(\"solr host port\", \"8888\", cfg.getSolrHostPort());\n    assertEquals(\"schema cache\", false, cfg.hasSchemaCache());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9dc6df6d3cec2cda16c96f408123470a6c069a29","date":1447321406,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropertySub().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropertySub().mjava","sourceNew":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropertySub() throws IOException {\n\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\" + File.separator);\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"false\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n\n    NodeConfig cfg = SolrXmlConfig.fromSolrHome(loader, solrHome.getAbsolutePath());\n    assertThat(cfg.getCoreRootDirectory().toString(), containsString(\"myCoreRoot\"));\n    assertEquals(\"solr host port\", 8888, cfg.getCloudConfig().getSolrHostPort());\n    assertEquals(\"schema cache\", false, cfg.hasSchemaCache());\n  }\n\n","sourceOld":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropertySub() throws IOException {\n\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\" + File.separator);\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"false\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n\n    NodeConfig cfg = SolrXmlConfig.fromSolrHome(loader, solrHome.getAbsolutePath());\n    assertThat(cfg.getCoreRootDirectory(), containsString(\"myCoreRoot\"));\n    assertEquals(\"solr host port\", 8888, cfg.getCloudConfig().getSolrHostPort());\n    assertEquals(\"schema cache\", false, cfg.hasSchemaCache());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a626ec4d1c92e59fe390724d6220081047b03ce7","date":1448021525,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropertySub().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropertySub().mjava","sourceNew":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropertySub() throws IOException {\n\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\" + File.separator);\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"false\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n\n    NodeConfig cfg = SolrXmlConfig.fromSolrHome(loader, solrHome.toPath());\n    assertThat(cfg.getCoreRootDirectory().toString(), containsString(\"myCoreRoot\"));\n    assertEquals(\"solr host port\", 8888, cfg.getCloudConfig().getSolrHostPort());\n    assertEquals(\"schema cache\", false, cfg.hasSchemaCache());\n  }\n\n","sourceOld":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropertySub() throws IOException {\n\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\" + File.separator);\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"false\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n\n    NodeConfig cfg = SolrXmlConfig.fromSolrHome(loader, solrHome.getAbsolutePath());\n    assertThat(cfg.getCoreRootDirectory().toString(), containsString(\"myCoreRoot\"));\n    assertEquals(\"solr host port\", 8888, cfg.getCloudConfig().getSolrHostPort());\n    assertEquals(\"schema cache\", false, cfg.hasSchemaCache());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","date":1583932828,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropertySub().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropertySub().mjava","sourceNew":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropertySub() throws IOException {\n\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\" + File.separator);\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"false\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    Path testSrcRoot = TEST_PATH();\n    Files.copy(testSrcRoot.resolve(\"solr-50-all.xml\"), solrHome.resolve(\"solr.xml\"));\n\n    NodeConfig cfg = SolrXmlConfig.fromSolrHome(solrHome, new Properties());\n    assertThat(cfg.getCoreRootDirectory().toString(), containsString(\"myCoreRoot\"));\n    assertEquals(\"solr host port\", 8888, cfg.getCloudConfig().getSolrHostPort());\n    assertEquals(\"schema cache\", false, cfg.hasSchemaCache());\n  }\n\n","sourceOld":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropertySub() throws IOException {\n\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\" + File.separator);\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"false\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n\n    NodeConfig cfg = SolrXmlConfig.fromSolrHome(loader, solrHome.toPath());\n    assertThat(cfg.getCoreRootDirectory().toString(), containsString(\"myCoreRoot\"));\n    assertEquals(\"solr host port\", 8888, cfg.getCloudConfig().getSolrHostPort());\n    assertEquals(\"schema cache\", false, cfg.hasSchemaCache());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4b02ae24808d82a22a424499d7ad8840dc668120":["a877077e0a22a42eebce7d1052c58e97d3afb12d"],"d2c1938c9f5c1c27e65b3a92640108988277ee9b":["4b02ae24808d82a22a424499d7ad8840dc668120"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"a877077e0a22a42eebce7d1052c58e97d3afb12d":["03681d28699f1218ed73de3e36e303ca6bcadec7"],"e15199583d3635cb940942caed05132dd6c4c7c6":["4bb5e36693e1b5167f92325b87847a0d8bf100f5"],"03681d28699f1218ed73de3e36e303ca6bcadec7":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["4bb5e36693e1b5167f92325b87847a0d8bf100f5","e15199583d3635cb940942caed05132dd6c4c7c6"],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["9dc6df6d3cec2cda16c96f408123470a6c069a29"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9dc6df6d3cec2cda16c96f408123470a6c069a29":["e15199583d3635cb940942caed05132dd6c4c7c6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"4bb5e36693e1b5167f92325b87847a0d8bf100f5":["d2c1938c9f5c1c27e65b3a92640108988277ee9b"]},"commit2Childs":{"4b02ae24808d82a22a424499d7ad8840dc668120":["d2c1938c9f5c1c27e65b3a92640108988277ee9b"],"d2c1938c9f5c1c27e65b3a92640108988277ee9b":["4bb5e36693e1b5167f92325b87847a0d8bf100f5"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a877077e0a22a42eebce7d1052c58e97d3afb12d":["4b02ae24808d82a22a424499d7ad8840dc668120"],"03681d28699f1218ed73de3e36e303ca6bcadec7":["a877077e0a22a42eebce7d1052c58e97d3afb12d"],"e15199583d3635cb940942caed05132dd6c4c7c6":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","9dc6df6d3cec2cda16c96f408123470a6c069a29"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["37a0f60745e53927c4c876cfe5b5a58170f0646c","03681d28699f1218ed73de3e36e303ca6bcadec7"],"9dc6df6d3cec2cda16c96f408123470a6c069a29":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"4bb5e36693e1b5167f92325b87847a0d8bf100f5":["e15199583d3635cb940942caed05132dd6c4c7c6","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}