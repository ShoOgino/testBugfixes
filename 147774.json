{"path":"lucene/core/src/test/org/apache/lucene/index/TestParallelCompositeReader#getDir2(Random).mjava","commits":[{"id":"6e09a3a223be07d75777515a717312813221fe58","date":1328908385,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestParallelCompositeReader#getDir2(Random).mjava","pathOld":"/dev/null","sourceNew":"  // subreader structure: (1,2,1) \n  private Directory getDir2(Random random) throws IOException {\n    Directory dir2 = newDirectory();\n    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random)).setMergePolicy(NoMergePolicy.NO_COMPOUND_FILES));\n    Document d1 = new Document();\n    d1.add(newField(\"f3\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f4\", \"v1\", TextField.TYPE_STORED));\n    w2.addDocument(d1);\n    w2.commit();\n    Document d2 = new Document();\n    d2.add(newField(\"f3\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f4\", \"v2\", TextField.TYPE_STORED));\n    w2.addDocument(d2);\n    Document d3 = new Document();\n    d3.add(newField(\"f3\", \"v3\", TextField.TYPE_STORED));\n    d3.add(newField(\"f4\", \"v3\", TextField.TYPE_STORED));\n    w2.addDocument(d3);\n    w2.commit();\n    Document d4 = new Document();\n    d4.add(newField(\"f3\", \"v4\", TextField.TYPE_STORED));\n    d4.add(newField(\"f4\", \"v4\", TextField.TYPE_STORED));\n    w2.addDocument(d4);\n    w2.close();\n    return dir2;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestParallelCompositeReader#getDir2(Random).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestParallelCompositeReader#getDir2(Random).mjava","sourceNew":"  // subreader structure: (1,2,1) \n  private Directory getDir2(Random random) throws IOException {\n    Directory dir2 = newDirectory();\n    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random)).setMergePolicy(NoMergePolicy.NO_COMPOUND_FILES));\n    Document d1 = new Document();\n    d1.add(newTextField(\"f3\", \"v1\", Field.Store.YES));\n    d1.add(newTextField(\"f4\", \"v1\", Field.Store.YES));\n    w2.addDocument(d1);\n    w2.commit();\n    Document d2 = new Document();\n    d2.add(newTextField(\"f3\", \"v2\", Field.Store.YES));\n    d2.add(newTextField(\"f4\", \"v2\", Field.Store.YES));\n    w2.addDocument(d2);\n    Document d3 = new Document();\n    d3.add(newTextField(\"f3\", \"v3\", Field.Store.YES));\n    d3.add(newTextField(\"f4\", \"v3\", Field.Store.YES));\n    w2.addDocument(d3);\n    w2.commit();\n    Document d4 = new Document();\n    d4.add(newTextField(\"f3\", \"v4\", Field.Store.YES));\n    d4.add(newTextField(\"f4\", \"v4\", Field.Store.YES));\n    w2.addDocument(d4);\n    w2.close();\n    return dir2;\n  }\n\n","sourceOld":"  // subreader structure: (1,2,1) \n  private Directory getDir2(Random random) throws IOException {\n    Directory dir2 = newDirectory();\n    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random)).setMergePolicy(NoMergePolicy.NO_COMPOUND_FILES));\n    Document d1 = new Document();\n    d1.add(newField(\"f3\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f4\", \"v1\", TextField.TYPE_STORED));\n    w2.addDocument(d1);\n    w2.commit();\n    Document d2 = new Document();\n    d2.add(newField(\"f3\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f4\", \"v2\", TextField.TYPE_STORED));\n    w2.addDocument(d2);\n    Document d3 = new Document();\n    d3.add(newField(\"f3\", \"v3\", TextField.TYPE_STORED));\n    d3.add(newField(\"f4\", \"v3\", TextField.TYPE_STORED));\n    w2.addDocument(d3);\n    w2.commit();\n    Document d4 = new Document();\n    d4.add(newField(\"f3\", \"v4\", TextField.TYPE_STORED));\n    d4.add(newField(\"f4\", \"v4\", TextField.TYPE_STORED));\n    w2.addDocument(d4);\n    w2.close();\n    return dir2;\n  }\n\n","bugFix":["6e09a3a223be07d75777515a717312813221fe58"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestParallelCompositeReader#getDir2(Random).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestParallelCompositeReader#getDir2(Random).mjava","sourceNew":"  // subreader structure: (1,2,1) \n  private Directory getDir2(Random random) throws IOException {\n    Directory dir2 = newDirectory();\n    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random)).setMergePolicy(NoMergePolicy.NO_COMPOUND_FILES));\n    Document d1 = new Document();\n    d1.add(newTextField(\"f3\", \"v1\", Field.Store.YES));\n    d1.add(newTextField(\"f4\", \"v1\", Field.Store.YES));\n    w2.addDocument(d1);\n    w2.commit();\n    Document d2 = new Document();\n    d2.add(newTextField(\"f3\", \"v2\", Field.Store.YES));\n    d2.add(newTextField(\"f4\", \"v2\", Field.Store.YES));\n    w2.addDocument(d2);\n    Document d3 = new Document();\n    d3.add(newTextField(\"f3\", \"v3\", Field.Store.YES));\n    d3.add(newTextField(\"f4\", \"v3\", Field.Store.YES));\n    w2.addDocument(d3);\n    w2.commit();\n    Document d4 = new Document();\n    d4.add(newTextField(\"f3\", \"v4\", Field.Store.YES));\n    d4.add(newTextField(\"f4\", \"v4\", Field.Store.YES));\n    w2.addDocument(d4);\n    w2.shutdown();\n    return dir2;\n  }\n\n","sourceOld":"  // subreader structure: (1,2,1) \n  private Directory getDir2(Random random) throws IOException {\n    Directory dir2 = newDirectory();\n    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random)).setMergePolicy(NoMergePolicy.NO_COMPOUND_FILES));\n    Document d1 = new Document();\n    d1.add(newTextField(\"f3\", \"v1\", Field.Store.YES));\n    d1.add(newTextField(\"f4\", \"v1\", Field.Store.YES));\n    w2.addDocument(d1);\n    w2.commit();\n    Document d2 = new Document();\n    d2.add(newTextField(\"f3\", \"v2\", Field.Store.YES));\n    d2.add(newTextField(\"f4\", \"v2\", Field.Store.YES));\n    w2.addDocument(d2);\n    Document d3 = new Document();\n    d3.add(newTextField(\"f3\", \"v3\", Field.Store.YES));\n    d3.add(newTextField(\"f4\", \"v3\", Field.Store.YES));\n    w2.addDocument(d3);\n    w2.commit();\n    Document d4 = new Document();\n    d4.add(newTextField(\"f3\", \"v4\", Field.Store.YES));\n    d4.add(newTextField(\"f4\", \"v4\", Field.Store.YES));\n    w2.addDocument(d4);\n    w2.close();\n    return dir2;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e2fb55c0777755badd3b46d8140f3d4301febed","date":1398881584,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestParallelCompositeReader#getDir2(Random).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestParallelCompositeReader#getDir2(Random).mjava","sourceNew":"  // subreader structure: (1,2,1) \n  private Directory getDir2(Random random) throws IOException {\n    Directory dir2 = newDirectory();\n    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random)).setMergePolicy(NoMergePolicy.INSTANCE));\n    Document d1 = new Document();\n    d1.add(newTextField(\"f3\", \"v1\", Field.Store.YES));\n    d1.add(newTextField(\"f4\", \"v1\", Field.Store.YES));\n    w2.addDocument(d1);\n    w2.commit();\n    Document d2 = new Document();\n    d2.add(newTextField(\"f3\", \"v2\", Field.Store.YES));\n    d2.add(newTextField(\"f4\", \"v2\", Field.Store.YES));\n    w2.addDocument(d2);\n    Document d3 = new Document();\n    d3.add(newTextField(\"f3\", \"v3\", Field.Store.YES));\n    d3.add(newTextField(\"f4\", \"v3\", Field.Store.YES));\n    w2.addDocument(d3);\n    w2.commit();\n    Document d4 = new Document();\n    d4.add(newTextField(\"f3\", \"v4\", Field.Store.YES));\n    d4.add(newTextField(\"f4\", \"v4\", Field.Store.YES));\n    w2.addDocument(d4);\n    w2.shutdown();\n    return dir2;\n  }\n\n","sourceOld":"  // subreader structure: (1,2,1) \n  private Directory getDir2(Random random) throws IOException {\n    Directory dir2 = newDirectory();\n    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random)).setMergePolicy(NoMergePolicy.NO_COMPOUND_FILES));\n    Document d1 = new Document();\n    d1.add(newTextField(\"f3\", \"v1\", Field.Store.YES));\n    d1.add(newTextField(\"f4\", \"v1\", Field.Store.YES));\n    w2.addDocument(d1);\n    w2.commit();\n    Document d2 = new Document();\n    d2.add(newTextField(\"f3\", \"v2\", Field.Store.YES));\n    d2.add(newTextField(\"f4\", \"v2\", Field.Store.YES));\n    w2.addDocument(d2);\n    Document d3 = new Document();\n    d3.add(newTextField(\"f3\", \"v3\", Field.Store.YES));\n    d3.add(newTextField(\"f4\", \"v3\", Field.Store.YES));\n    w2.addDocument(d3);\n    w2.commit();\n    Document d4 = new Document();\n    d4.add(newTextField(\"f3\", \"v4\", Field.Store.YES));\n    d4.add(newTextField(\"f4\", \"v4\", Field.Store.YES));\n    w2.addDocument(d4);\n    w2.shutdown();\n    return dir2;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestParallelCompositeReader#getDir2(Random).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestParallelCompositeReader#getDir2(Random).mjava","sourceNew":"  // subreader structure: (1,2,1) \n  private Directory getDir2(Random random) throws IOException {\n    Directory dir2 = newDirectory();\n    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random))\n                                             .setMergePolicy(NoMergePolicy.INSTANCE));\n    Document d1 = new Document();\n    d1.add(newTextField(\"f3\", \"v1\", Field.Store.YES));\n    d1.add(newTextField(\"f4\", \"v1\", Field.Store.YES));\n    w2.addDocument(d1);\n    w2.commit();\n    Document d2 = new Document();\n    d2.add(newTextField(\"f3\", \"v2\", Field.Store.YES));\n    d2.add(newTextField(\"f4\", \"v2\", Field.Store.YES));\n    w2.addDocument(d2);\n    Document d3 = new Document();\n    d3.add(newTextField(\"f3\", \"v3\", Field.Store.YES));\n    d3.add(newTextField(\"f4\", \"v3\", Field.Store.YES));\n    w2.addDocument(d3);\n    w2.commit();\n    Document d4 = new Document();\n    d4.add(newTextField(\"f3\", \"v4\", Field.Store.YES));\n    d4.add(newTextField(\"f4\", \"v4\", Field.Store.YES));\n    w2.addDocument(d4);\n    w2.shutdown();\n    return dir2;\n  }\n\n","sourceOld":"  // subreader structure: (1,2,1) \n  private Directory getDir2(Random random) throws IOException {\n    Directory dir2 = newDirectory();\n    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random)).setMergePolicy(NoMergePolicy.INSTANCE));\n    Document d1 = new Document();\n    d1.add(newTextField(\"f3\", \"v1\", Field.Store.YES));\n    d1.add(newTextField(\"f4\", \"v1\", Field.Store.YES));\n    w2.addDocument(d1);\n    w2.commit();\n    Document d2 = new Document();\n    d2.add(newTextField(\"f3\", \"v2\", Field.Store.YES));\n    d2.add(newTextField(\"f4\", \"v2\", Field.Store.YES));\n    w2.addDocument(d2);\n    Document d3 = new Document();\n    d3.add(newTextField(\"f3\", \"v3\", Field.Store.YES));\n    d3.add(newTextField(\"f4\", \"v3\", Field.Store.YES));\n    w2.addDocument(d3);\n    w2.commit();\n    Document d4 = new Document();\n    d4.add(newTextField(\"f3\", \"v4\", Field.Store.YES));\n    d4.add(newTextField(\"f4\", \"v4\", Field.Store.YES));\n    w2.addDocument(d4);\n    w2.shutdown();\n    return dir2;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestParallelCompositeReader#getDir2(Random).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestParallelCompositeReader#getDir2(Random).mjava","sourceNew":"  // subreader structure: (1,2,1) \n  private Directory getDir2(Random random) throws IOException {\n    Directory dir2 = newDirectory();\n    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random))\n                                             .setMergePolicy(NoMergePolicy.INSTANCE));\n    Document d1 = new Document();\n    d1.add(newTextField(\"f3\", \"v1\", Field.Store.YES));\n    d1.add(newTextField(\"f4\", \"v1\", Field.Store.YES));\n    w2.addDocument(d1);\n    w2.commit();\n    Document d2 = new Document();\n    d2.add(newTextField(\"f3\", \"v2\", Field.Store.YES));\n    d2.add(newTextField(\"f4\", \"v2\", Field.Store.YES));\n    w2.addDocument(d2);\n    Document d3 = new Document();\n    d3.add(newTextField(\"f3\", \"v3\", Field.Store.YES));\n    d3.add(newTextField(\"f4\", \"v3\", Field.Store.YES));\n    w2.addDocument(d3);\n    w2.commit();\n    Document d4 = new Document();\n    d4.add(newTextField(\"f3\", \"v4\", Field.Store.YES));\n    d4.add(newTextField(\"f4\", \"v4\", Field.Store.YES));\n    w2.addDocument(d4);\n    w2.close();\n    return dir2;\n  }\n\n","sourceOld":"  // subreader structure: (1,2,1) \n  private Directory getDir2(Random random) throws IOException {\n    Directory dir2 = newDirectory();\n    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random))\n                                             .setMergePolicy(NoMergePolicy.INSTANCE));\n    Document d1 = new Document();\n    d1.add(newTextField(\"f3\", \"v1\", Field.Store.YES));\n    d1.add(newTextField(\"f4\", \"v1\", Field.Store.YES));\n    w2.addDocument(d1);\n    w2.commit();\n    Document d2 = new Document();\n    d2.add(newTextField(\"f3\", \"v2\", Field.Store.YES));\n    d2.add(newTextField(\"f4\", \"v2\", Field.Store.YES));\n    w2.addDocument(d2);\n    Document d3 = new Document();\n    d3.add(newTextField(\"f3\", \"v3\", Field.Store.YES));\n    d3.add(newTextField(\"f4\", \"v3\", Field.Store.YES));\n    w2.addDocument(d3);\n    w2.commit();\n    Document d4 = new Document();\n    d4.add(newTextField(\"f3\", \"v4\", Field.Store.YES));\n    d4.add(newTextField(\"f4\", \"v4\", Field.Store.YES));\n    w2.addDocument(d4);\n    w2.shutdown();\n    return dir2;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e2fb55c0777755badd3b46d8140f3d4301febed":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["6e09a3a223be07d75777515a717312813221fe58"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["7e2fb55c0777755badd3b46d8140f3d4301febed"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"6e09a3a223be07d75777515a717312813221fe58":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"7e2fb55c0777755badd3b46d8140f3d4301febed":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6e09a3a223be07d75777515a717312813221fe58"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["7e2fb55c0777755badd3b46d8140f3d4301febed"],"6e09a3a223be07d75777515a717312813221fe58":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}