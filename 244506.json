{"path":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testCustomScoreQueryHighlight().mjava","commits":[{"id":"a4388b311bcdd7863e5e3c63404688e60d8e14fe","date":1434124772,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testCustomScoreQueryHighlight().mjava","pathOld":"/dev/null","sourceNew":"  public void testCustomScoreQueryHighlight() throws Exception{\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType offsetsType = new FieldType(TextField.TYPE_STORED);\n    offsetsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);\n    Field body = new Field(\"body\", \"\", offsetsType);\n    Document doc = new Document();\n    doc.add(body);\n    \n    body.setStringValue(\"This piece of text refers to Kennedy at the beginning then has a longer piece of text that is very long in the middle and finally ends with another reference to Kennedy\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n\n    TermQuery termQuery = new TermQuery(new Term(\"body\", \"very\"));\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    CustomScoreQuery query = new CustomScoreQuery(termQuery);\n\n    IndexSearcher searcher = newSearcher(ir);\n    TopDocs hits = searcher.search(query, 10);\n    assertEquals(1, hits.totalHits);\n\n    String snippets[] = highlighter.highlight(\"body\", query, searcher, hits);\n    assertEquals(1, snippets.length);\n    assertEquals(\"This piece of text refers to Kennedy at the beginning then has a longer piece of text that is <b>very</b> long in the middle and finally ends with another reference to Kennedy\",\n                 snippets[0]);\n\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"381618eac2691bb34ab9a3fca76ad55c6274517e","date":1495564791,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testCustomScoreQueryHighlight().mjava","sourceNew":null,"sourceOld":"  public void testCustomScoreQueryHighlight() throws Exception{\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType offsetsType = new FieldType(TextField.TYPE_STORED);\n    offsetsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);\n    Field body = new Field(\"body\", \"\", offsetsType);\n    Document doc = new Document();\n    doc.add(body);\n    \n    body.setStringValue(\"This piece of text refers to Kennedy at the beginning then has a longer piece of text that is very long in the middle and finally ends with another reference to Kennedy\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n\n    TermQuery termQuery = new TermQuery(new Term(\"body\", \"very\"));\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    CustomScoreQuery query = new CustomScoreQuery(termQuery);\n\n    IndexSearcher searcher = newSearcher(ir);\n    TopDocs hits = searcher.search(query, 10);\n    assertEquals(1, hits.totalHits);\n\n    String snippets[] = highlighter.highlight(\"body\", query, searcher, hits);\n    assertEquals(1, snippets.length);\n    assertEquals(\"This piece of text refers to Kennedy at the beginning then has a longer piece of text that is <b>very</b> long in the middle and finally ends with another reference to Kennedy\",\n                 snippets[0]);\n\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testCustomScoreQueryHighlight().mjava","sourceNew":null,"sourceOld":"  public void testCustomScoreQueryHighlight() throws Exception{\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwc);\n    \n    FieldType offsetsType = new FieldType(TextField.TYPE_STORED);\n    offsetsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);\n    Field body = new Field(\"body\", \"\", offsetsType);\n    Document doc = new Document();\n    doc.add(body);\n    \n    body.setStringValue(\"This piece of text refers to Kennedy at the beginning then has a longer piece of text that is very long in the middle and finally ends with another reference to Kennedy\");\n    iw.addDocument(doc);\n    \n    IndexReader ir = iw.getReader();\n    iw.close();\n\n    TermQuery termQuery = new TermQuery(new Term(\"body\", \"very\"));\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    CustomScoreQuery query = new CustomScoreQuery(termQuery);\n\n    IndexSearcher searcher = newSearcher(ir);\n    TopDocs hits = searcher.search(query, 10);\n    assertEquals(1, hits.totalHits);\n\n    String snippets[] = highlighter.highlight(\"body\", query, searcher, hits);\n    assertEquals(1, snippets.length);\n    assertEquals(\"This piece of text refers to Kennedy at the beginning then has a longer piece of text that is <b>very</b> long in the middle and finally ends with another reference to Kennedy\",\n                 snippets[0]);\n\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"381618eac2691bb34ab9a3fca76ad55c6274517e":["a4388b311bcdd7863e5e3c63404688e60d8e14fe"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["a4388b311bcdd7863e5e3c63404688e60d8e14fe","381618eac2691bb34ab9a3fca76ad55c6274517e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a4388b311bcdd7863e5e3c63404688e60d8e14fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["381618eac2691bb34ab9a3fca76ad55c6274517e"]},"commit2Childs":{"381618eac2691bb34ab9a3fca76ad55c6274517e":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a4388b311bcdd7863e5e3c63404688e60d8e14fe"],"a4388b311bcdd7863e5e3c63404688e60d8e14fe":["381618eac2691bb34ab9a3fca76ad55c6274517e","e9017cf144952056066919f1ebc7897ff9bd71b1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}