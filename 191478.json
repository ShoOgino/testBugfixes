{"path":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/ReplicaFileDeleter#incRef(Collection[String]).mjava","commits":[{"id":"0d49a158012a8ff48f328a4558e4bfcffbaed16f","date":1453677440,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/ReplicaFileDeleter#incRef(Collection[String]).mjava","pathOld":"/dev/null","sourceNew":"  public synchronized void incRef(Collection<String> fileNames) throws IOException {\n    for(String fileName : fileNames) {\n\n      if (pending.contains(fileName)) {\n        throw new IllegalStateException(\"cannot incRef file \\\"\" + fileName + \"\\\": it is pending delete\");\n      }\n\n      assert slowFileExists(dir, fileName): \"file \" + fileName + \" does not exist!\";\n\n      Integer curCount = refCounts.get(fileName);\n      if (curCount == null) {\n        refCounts.put(fileName, 1);\n      } else {\n        refCounts.put(fileName, curCount.intValue() + 1);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b72a3c8c250ce67d9dd59e06316f982cd77bdb3c","date":1454874368,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/ReplicaFileDeleter#incRef(Collection[String]).mjava","pathOld":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/ReplicaFileDeleter#incRef(Collection[String]).mjava","sourceNew":"  public synchronized void incRef(Collection<String> fileNames) throws IOException {\n    for(String fileName : fileNames) {\n\n      assert slowFileExists(dir, fileName): \"file \" + fileName + \" does not exist!\";\n\n      Integer curCount = refCounts.get(fileName);\n      if (curCount == null) {\n        refCounts.put(fileName, 1);\n      } else {\n        refCounts.put(fileName, curCount.intValue() + 1);\n      }\n    }\n  }\n\n","sourceOld":"  public synchronized void incRef(Collection<String> fileNames) throws IOException {\n    for(String fileName : fileNames) {\n\n      if (pending.contains(fileName)) {\n        throw new IllegalStateException(\"cannot incRef file \\\"\" + fileName + \"\\\": it is pending delete\");\n      }\n\n      assert slowFileExists(dir, fileName): \"file \" + fileName + \" does not exist!\";\n\n      Integer curCount = refCounts.get(fileName);\n      if (curCount == null) {\n        refCounts.put(fileName, 1);\n      } else {\n        refCounts.put(fileName, curCount.intValue() + 1);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68496c2200e559fb7802f7575427b7a482659afb","date":1455207618,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/ReplicaFileDeleter#incRef(Collection[String]).mjava","pathOld":"/dev/null","sourceNew":"  public synchronized void incRef(Collection<String> fileNames) throws IOException {\n    for(String fileName : fileNames) {\n\n      assert slowFileExists(dir, fileName): \"file \" + fileName + \" does not exist!\";\n\n      Integer curCount = refCounts.get(fileName);\n      if (curCount == null) {\n        refCounts.put(fileName, 1);\n      } else {\n        refCounts.put(fileName, curCount.intValue() + 1);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b72a3c8c250ce67d9dd59e06316f982cd77bdb3c":["0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"68496c2200e559fb7802f7575427b7a482659afb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b72a3c8c250ce67d9dd59e06316f982cd77bdb3c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["68496c2200e559fb7802f7575427b7a482659afb"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b72a3c8c250ce67d9dd59e06316f982cd77bdb3c":["68496c2200e559fb7802f7575427b7a482659afb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["68496c2200e559fb7802f7575427b7a482659afb","0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"68496c2200e559fb7802f7575427b7a482659afb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["b72a3c8c250ce67d9dd59e06316f982cd77bdb3c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}