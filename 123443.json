{"path":"src/java/org/apache/solr/handler/XppUpdateRequestHandler#readDoc(DocumentBuilder,XmlPullParser).mjava","commits":[{"id":"2b27e1327d2a2f9ea6abc93e203d0219091f09f3","date":1183228826,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/XppUpdateRequestHandler#readDoc(DocumentBuilder,XmlPullParser).mjava","pathOld":"src/java/org/apache/solr/handler/XmlUpdateRequestHandler#readDoc(DocumentBuilder,XmlPullParser).mjava","sourceNew":"  private void readDoc(DocumentBuilder builder, XmlPullParser xpp) throws IOException, XmlPullParserException {\n    // xpp should be at <doc> at this point\n\n    builder.startDoc();\n\n    int attrcount = xpp.getAttributeCount();\n    float docBoost = 1.0f;\n\n    for (int i=0; i<attrcount; i++) {\n      String attrName = xpp.getAttributeName(i);\n      String attrVal = xpp.getAttributeValue(i);\n      if (\"boost\".equals(attrName)) {\n        docBoost = Float.parseFloat(attrVal);\n        builder.setBoost(docBoost);\n      } else {\n        log.warning(\"Unknown attribute doc/@\" + attrName);\n      }\n    }\n    if (docBoost != 1.0f) builder.setBoost(docBoost);\n\n    // while (findNextTag(xpp,\"field\") != XmlPullParser.END_DOCUMENT) {\n\n    while(true) {\n      int eventType = xpp.nextTag();\n      if (eventType == XmlPullParser.END_TAG) break;  // </doc>\n\n      String tname=xpp.getName();\n      // System.out.println(\"FIELD READER AT TAG \" + tname);\n\n      if (!\"field\".equals(tname)) {\n        log.warning(\"unexpected XML tag doc/\"+tname);\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"unexpected XML tag doc/\"+tname);\n      }\n\n      //\n      // get field name and parse field attributes\n      //\n      attrcount = xpp.getAttributeCount();\n      String name=null;\n      float boost=1.0f;\n      boolean isNull=false;\n\n      for (int i=0; i<attrcount; i++) {\n        String attrName = xpp.getAttributeName(i);\n        String attrVal = xpp.getAttributeValue(i);\n        if (\"name\".equals(attrName)) {\n          name=attrVal;\n        } else if (\"boost\".equals(attrName)) {\n          boost=Float.parseFloat(attrVal);\n        } else if (\"null\".equals(attrName)) {\n          isNull=StrUtils.parseBoolean(attrVal);\n        } else {\n          log.warning(\"Unknown attribute doc/field/@\" + attrName);\n        }\n      }\n\n      // now get the field value\n      String val = xpp.nextText();      // todo... text event for <field></field>???\n                                        // need this line for isNull???\n      // Don't add fields marked as null (for now at least)\n      if (!isNull) {\n        if (boost != 1.0f) {\n          builder.addField(name,val,boost);\n        } else {\n          builder.addField(name,val);\n        }\n      }\n\n      // do I have to do a nextTag here to read the end_tag?\n\n    } // end field loop\n  }\n\n","sourceOld":"  private void readDoc(DocumentBuilder builder, XmlPullParser xpp) throws IOException, XmlPullParserException {\n    // xpp should be at <doc> at this point\n\n    builder.startDoc();\n\n    int attrcount = xpp.getAttributeCount();\n    float docBoost = 1.0f;\n\n    for (int i=0; i<attrcount; i++) {\n      String attrName = xpp.getAttributeName(i);\n      String attrVal = xpp.getAttributeValue(i);\n      if (\"boost\".equals(attrName)) {\n        docBoost = Float.parseFloat(attrVal);\n        builder.setBoost(docBoost);\n      } else {\n        log.warning(\"Unknown attribute doc/@\" + attrName);\n      }\n    }\n    if (docBoost != 1.0f) builder.setBoost(docBoost);\n\n    // while (findNextTag(xpp,\"field\") != XmlPullParser.END_DOCUMENT) {\n\n    while(true) {\n      int eventType = xpp.nextTag();\n      if (eventType == XmlPullParser.END_TAG) break;  // </doc>\n\n      String tname=xpp.getName();\n      // System.out.println(\"FIELD READER AT TAG \" + tname);\n\n      if (!\"field\".equals(tname)) {\n        log.warning(\"unexpected XML tag doc/\"+tname);\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"unexpected XML tag doc/\"+tname);\n      }\n\n      //\n      // get field name and parse field attributes\n      //\n      attrcount = xpp.getAttributeCount();\n      String name=null;\n      float boost=1.0f;\n      boolean isNull=false;\n\n      for (int i=0; i<attrcount; i++) {\n        String attrName = xpp.getAttributeName(i);\n        String attrVal = xpp.getAttributeValue(i);\n        if (\"name\".equals(attrName)) {\n          name=attrVal;\n        } else if (\"boost\".equals(attrName)) {\n          boost=Float.parseFloat(attrVal);\n        } else if (\"null\".equals(attrName)) {\n          isNull=StrUtils.parseBoolean(attrVal);\n        } else {\n          log.warning(\"Unknown attribute doc/field/@\" + attrName);\n        }\n      }\n\n      // now get the field value\n      String val = xpp.nextText();      // todo... text event for <field></field>???\n                                        // need this line for isNull???\n      // Don't add fields marked as null (for now at least)\n      if (!isNull) {\n        if (boost != 1.0f) {\n          builder.addField(name,val,boost);\n        } else {\n          builder.addField(name,val);\n        }\n      }\n\n      // do I have to do a nextTag here to read the end_tag?\n\n    } // end field loop\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5885124115570b7d9ef89b27bc02cbbf0fc9b7a7","date":1198778275,"type":4,"author":"Ryan McKinley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/solr/handler/XppUpdateRequestHandler#readDoc(DocumentBuilder,XmlPullParser).mjava","sourceNew":null,"sourceOld":"  private void readDoc(DocumentBuilder builder, XmlPullParser xpp) throws IOException, XmlPullParserException {\n    // xpp should be at <doc> at this point\n\n    builder.startDoc();\n\n    int attrcount = xpp.getAttributeCount();\n    float docBoost = 1.0f;\n\n    for (int i=0; i<attrcount; i++) {\n      String attrName = xpp.getAttributeName(i);\n      String attrVal = xpp.getAttributeValue(i);\n      if (\"boost\".equals(attrName)) {\n        docBoost = Float.parseFloat(attrVal);\n        builder.setBoost(docBoost);\n      } else {\n        log.warning(\"Unknown attribute doc/@\" + attrName);\n      }\n    }\n    if (docBoost != 1.0f) builder.setBoost(docBoost);\n\n    // while (findNextTag(xpp,\"field\") != XmlPullParser.END_DOCUMENT) {\n\n    while(true) {\n      int eventType = xpp.nextTag();\n      if (eventType == XmlPullParser.END_TAG) break;  // </doc>\n\n      String tname=xpp.getName();\n      // System.out.println(\"FIELD READER AT TAG \" + tname);\n\n      if (!\"field\".equals(tname)) {\n        log.warning(\"unexpected XML tag doc/\"+tname);\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"unexpected XML tag doc/\"+tname);\n      }\n\n      //\n      // get field name and parse field attributes\n      //\n      attrcount = xpp.getAttributeCount();\n      String name=null;\n      float boost=1.0f;\n      boolean isNull=false;\n\n      for (int i=0; i<attrcount; i++) {\n        String attrName = xpp.getAttributeName(i);\n        String attrVal = xpp.getAttributeValue(i);\n        if (\"name\".equals(attrName)) {\n          name=attrVal;\n        } else if (\"boost\".equals(attrName)) {\n          boost=Float.parseFloat(attrVal);\n        } else if (\"null\".equals(attrName)) {\n          isNull=StrUtils.parseBoolean(attrVal);\n        } else {\n          log.warning(\"Unknown attribute doc/field/@\" + attrName);\n        }\n      }\n\n      // now get the field value\n      String val = xpp.nextText();      // todo... text event for <field></field>???\n                                        // need this line for isNull???\n      // Don't add fields marked as null (for now at least)\n      if (!isNull) {\n        if (boost != 1.0f) {\n          builder.addField(name,val,boost);\n        } else {\n          builder.addField(name,val);\n        }\n      }\n\n      // do I have to do a nextTag here to read the end_tag?\n\n    } // end field loop\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"2b27e1327d2a2f9ea6abc93e203d0219091f09f3":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"5885124115570b7d9ef89b27bc02cbbf0fc9b7a7":["2b27e1327d2a2f9ea6abc93e203d0219091f09f3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["2b27e1327d2a2f9ea6abc93e203d0219091f09f3"],"2b27e1327d2a2f9ea6abc93e203d0219091f09f3":["5885124115570b7d9ef89b27bc02cbbf0fc9b7a7"],"5885124115570b7d9ef89b27bc02cbbf0fc9b7a7":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5885124115570b7d9ef89b27bc02cbbf0fc9b7a7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}