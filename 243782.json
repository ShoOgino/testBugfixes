{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/FilteringTokenFilter#setEnablePositionIncrements(boolean).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/FilteringTokenFilter#setEnablePositionIncrements(boolean).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/FilteringTokenFilter#setEnablePositionIncrements(boolean).mjava","sourceNew":"  /**\n   * If <code>true</code>, this TokenFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set org.apache.lucene.queryparser.classic.QueryParser#setEnablePositionIncrements if\n   * you use QueryParser to create queries.\n   */\n  public void setEnablePositionIncrements(boolean enable) {\n    this.enablePositionIncrements = enable;\n  }\n\n","sourceOld":"  /**\n   * If <code>true</code>, this TokenFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set org.apache.lucene.queryparser.classic.QueryParser#setEnablePositionIncrements if\n   * you use QueryParser to create queries.\n   */\n  public void setEnablePositionIncrements(boolean enable) {\n    this.enablePositionIncrements = enable;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eafa8c5eabc3dacd34680054e6a33bda024080ac","date":1367691488,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/FilteringTokenFilter#setEnablePositionIncrements(boolean).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/FilteringTokenFilter#setEnablePositionIncrements(boolean).mjava","sourceNew":"  /**\n   * If <code>true</code>, this TokenFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set org.apache.lucene.queryparser.classic.QueryParser#setEnablePositionIncrements if\n   * you use QueryParser to create queries.\n   * @deprecated enablePositionIncrements=false is not supported anymore as of Lucene 4.4\n   */\n  @Deprecated\n  public void setEnablePositionIncrements(boolean enable) {\n    checkPositionIncrement(version, enable);\n    this.enablePositionIncrements = enable;\n  }\n\n","sourceOld":"  /**\n   * If <code>true</code>, this TokenFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set org.apache.lucene.queryparser.classic.QueryParser#setEnablePositionIncrements if\n   * you use QueryParser to create queries.\n   */\n  public void setEnablePositionIncrements(boolean enable) {\n    this.enablePositionIncrements = enable;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"192e49c0445803405b0bc0eebc8b758485480c21","date":1367699151,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/FilteringTokenFilter#setEnablePositionIncrements(boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * If <code>true</code>, this TokenFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set org.apache.lucene.queryparser.classic.QueryParser#setEnablePositionIncrements if\n   * you use QueryParser to create queries.\n   * @deprecated enablePositionIncrements=false is not supported anymore as of Lucene 4.4\n   */\n  @Deprecated\n  public void setEnablePositionIncrements(boolean enable) {\n    checkPositionIncrement(version, enable);\n    this.enablePositionIncrements = enable;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"192e49c0445803405b0bc0eebc8b758485480c21":["eafa8c5eabc3dacd34680054e6a33bda024080ac"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"eafa8c5eabc3dacd34680054e6a33bda024080ac":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["192e49c0445803405b0bc0eebc8b758485480c21"]},"commit2Childs":{"192e49c0445803405b0bc0eebc8b758485480c21":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["eafa8c5eabc3dacd34680054e6a33bda024080ac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"eafa8c5eabc3dacd34680054e6a33bda024080ac":["192e49c0445803405b0bc0eebc8b758485480c21"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}