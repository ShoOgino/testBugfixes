{"path":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#decRefWhileHandlingException(Collection[String]).mjava","commits":[{"id":"cefe924a3b76c22b7df9a075329750871699af6b","date":1409757963,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#decRefWhileHandlingException(Collection[String]).mjava","pathOld":"/dev/null","sourceNew":"  /** Decrefs all provided files, ignoring any exceptions hit; call this if\n   *  you are already handling an exception. */\n  void decRefWhileHandlingException(Collection<String> files) throws IOException {\n    assert locked();\n    for(final String file : files) {\n      try {\n        decRef(file);\n      } catch (Throwable t) {\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7599427f762eb1b4265584fd6e96521e4a1a4f3c","date":1413100083,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#decRefWhileHandlingException(Collection[String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#decRefWhileHandlingException(Collection[String]).mjava","sourceNew":"  /** Decrefs all provided files, ignoring any exceptions hit; call this if\n   *  you are already handling an exception. */\n  void decRefWhileHandlingException(Collection<String> files) {\n    assert locked();\n    for(final String file : files) {\n      try {\n        decRef(file);\n      } catch (Throwable t) {\n      }\n    }\n  }\n\n","sourceOld":"  /** Decrefs all provided files, ignoring any exceptions hit; call this if\n   *  you are already handling an exception. */\n  void decRefWhileHandlingException(Collection<String> files) throws IOException {\n    assert locked();\n    for(final String file : files) {\n      try {\n        decRef(file);\n      } catch (Throwable t) {\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55980207f1977bd1463465de1659b821347e2fa8","date":1413336386,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#decRefWhileHandlingException(Collection[String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#decRefWhileHandlingException(Collection[String]).mjava","sourceNew":"  /** Decrefs all provided files, ignoring any exceptions hit; call this if\n   *  you are already handling an exception. */\n  void decRefWhileHandlingException(Collection<String> files) {\n    assert locked();\n    for(final String file : files) {\n      try {\n        decRef(file);\n      } catch (Throwable t) {\n      }\n    }\n  }\n\n","sourceOld":"  /** Decrefs all provided files, ignoring any exceptions hit; call this if\n   *  you are already handling an exception. */\n  void decRefWhileHandlingException(Collection<String> files) throws IOException {\n    assert locked();\n    for(final String file : files) {\n      try {\n        decRef(file);\n      } catch (Throwable t) {\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"950882a2bd2a5f9dc16a154871584eaa643d882a","date":1436366563,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#decRefWhileHandlingException(Collection[String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#decRefWhileHandlingException(Collection[String]).mjava","sourceNew":"  /** Decrefs all provided files, ignoring any exceptions hit; call this if\n   *  you are already handling an exception. */\n  void decRefWhileHandlingException(Collection<String> files) {\n    assert locked();\n    for(final String file : files) {\n      try {\n        decRef(file);\n      } catch (Throwable t) {\n      }\n    }\n\n    try {\n      deletePendingFiles();\n    } catch (Throwable t) {\n    }\n  }\n\n","sourceOld":"  /** Decrefs all provided files, ignoring any exceptions hit; call this if\n   *  you are already handling an exception. */\n  void decRefWhileHandlingException(Collection<String> files) {\n    assert locked();\n    for(final String file : files) {\n      try {\n        decRef(file);\n      } catch (Throwable t) {\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bfe104fc023fadc9e709f8d17403d2cc61133fe","date":1454446396,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#decRefWhileHandlingException(Collection[String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#decRefWhileHandlingException(Collection[String]).mjava","sourceNew":"  /** Decrefs all provided files, ignoring any exceptions hit; call this if\n   *  you are already handling an exception. */\n  void decRefWhileHandlingException(Collection<String> files) {\n    assert locked();\n    Set<String> toDelete = new HashSet<>();\n    for(final String file : files) {\n      try {\n        if (decRef(file)) {\n          toDelete.add(file);\n        }\n      } catch (Throwable t) {\n      }\n    }\n\n    try {\n      deleteFiles(toDelete);\n    } catch (Throwable t) {\n    }\n  }\n\n","sourceOld":"  /** Decrefs all provided files, ignoring any exceptions hit; call this if\n   *  you are already handling an exception. */\n  void decRefWhileHandlingException(Collection<String> files) {\n    assert locked();\n    for(final String file : files) {\n      try {\n        decRef(file);\n      } catch (Throwable t) {\n      }\n    }\n\n    try {\n      deletePendingFiles();\n    } catch (Throwable t) {\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b470f36a9372c97283360b1304eacbde22df6c0d","date":1454765175,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#decRefWhileHandlingException(Collection[String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#decRefWhileHandlingException(Collection[String]).mjava","sourceNew":"  /** Decrefs all provided files, ignoring any exceptions hit; call this if\n   *  you are already handling an exception. */\n  void decRefWhileHandlingException(Collection<String> files) {\n    assert locked();\n    Set<String> toDelete = new HashSet<>();\n    for(final String file : files) {\n      try {\n        if (decRef(file)) {\n          toDelete.add(file);\n        }\n      } catch (Throwable t) {\n      }\n    }\n\n    try {\n      deleteFiles(toDelete);\n    } catch (Throwable t) {\n    }\n  }\n\n","sourceOld":"  /** Decrefs all provided files, ignoring any exceptions hit; call this if\n   *  you are already handling an exception. */\n  void decRefWhileHandlingException(Collection<String> files) {\n    assert locked();\n    for(final String file : files) {\n      try {\n        decRef(file);\n      } catch (Throwable t) {\n      }\n    }\n\n    try {\n      deletePendingFiles();\n    } catch (Throwable t) {\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#decRefWhileHandlingException(Collection[String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#decRefWhileHandlingException(Collection[String]).mjava","sourceNew":"  /** Decrefs all provided files, ignoring any exceptions hit; call this if\n   *  you are already handling an exception. */\n  void decRefWhileHandlingException(Collection<String> files) {\n    assert locked();\n    Set<String> toDelete = new HashSet<>();\n    for(final String file : files) {\n      try {\n        if (decRef(file)) {\n          toDelete.add(file);\n        }\n      } catch (Throwable t) {\n      }\n    }\n\n    try {\n      deleteFiles(toDelete);\n    } catch (Throwable t) {\n    }\n  }\n\n","sourceOld":"  /** Decrefs all provided files, ignoring any exceptions hit; call this if\n   *  you are already handling an exception. */\n  void decRefWhileHandlingException(Collection<String> files) {\n    assert locked();\n    for(final String file : files) {\n      try {\n        decRef(file);\n      } catch (Throwable t) {\n      }\n    }\n\n    try {\n      deletePendingFiles();\n    } catch (Throwable t) {\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a207d19eac354d649c3f0e2cce070017c78125e","date":1454776470,"type":3,"author":"Erick Erickson","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#decRefWhileHandlingException(Collection[String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#decRefWhileHandlingException(Collection[String]).mjava","sourceNew":"  /** Decrefs all provided files, ignoring any exceptions hit; call this if\n   *  you are already handling an exception. */\n  void decRefWhileHandlingException(Collection<String> files) {\n    assert locked();\n    Set<String> toDelete = new HashSet<>();\n    for(final String file : files) {\n      try {\n        if (decRef(file)) {\n          toDelete.add(file);\n        }\n      } catch (Throwable t) {\n      }\n    }\n\n    try {\n      deleteFiles(toDelete);\n    } catch (Throwable t) {\n    }\n  }\n\n","sourceOld":"  /** Decrefs all provided files, ignoring any exceptions hit; call this if\n   *  you are already handling an exception. */\n  void decRefWhileHandlingException(Collection<String> files) {\n    assert locked();\n    for(final String file : files) {\n      try {\n        decRef(file);\n      } catch (Throwable t) {\n      }\n    }\n\n    try {\n      deletePendingFiles();\n    } catch (Throwable t) {\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb04d6a79e860154f2a1c519790fc42f5a792915","date":1521621668,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#decRefWhileHandlingException(Collection[String]).mjava","sourceNew":null,"sourceOld":"  /** Decrefs all provided files, ignoring any exceptions hit; call this if\n   *  you are already handling an exception. */\n  void decRefWhileHandlingException(Collection<String> files) {\n    assert locked();\n    Set<String> toDelete = new HashSet<>();\n    for(final String file : files) {\n      try {\n        if (decRef(file)) {\n          toDelete.add(file);\n        }\n      } catch (Throwable t) {\n      }\n    }\n\n    try {\n      deleteFiles(toDelete);\n    } catch (Throwable t) {\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43","date":1521731438,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#decRefWhileHandlingException(Collection[String]).mjava","sourceNew":null,"sourceOld":"  /** Decrefs all provided files, ignoring any exceptions hit; call this if\n   *  you are already handling an exception. */\n  void decRefWhileHandlingException(Collection<String> files) {\n    assert locked();\n    Set<String> toDelete = new HashSet<>();\n    for(final String file : files) {\n      try {\n        if (decRef(file)) {\n          toDelete.add(file);\n        }\n      } catch (Throwable t) {\n      }\n    }\n\n    try {\n      deleteFiles(toDelete);\n    } catch (Throwable t) {\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7599427f762eb1b4265584fd6e96521e4a1a4f3c":["cefe924a3b76c22b7df9a075329750871699af6b"],"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43":["5a207d19eac354d649c3f0e2cce070017c78125e","bb04d6a79e860154f2a1c519790fc42f5a792915"],"55980207f1977bd1463465de1659b821347e2fa8":["cefe924a3b76c22b7df9a075329750871699af6b","7599427f762eb1b4265584fd6e96521e4a1a4f3c"],"cefe924a3b76c22b7df9a075329750871699af6b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5a207d19eac354d649c3f0e2cce070017c78125e":["950882a2bd2a5f9dc16a154871584eaa643d882a","b470f36a9372c97283360b1304eacbde22df6c0d"],"b470f36a9372c97283360b1304eacbde22df6c0d":["950882a2bd2a5f9dc16a154871584eaa643d882a","6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["950882a2bd2a5f9dc16a154871584eaa643d882a","b470f36a9372c97283360b1304eacbde22df6c0d"],"950882a2bd2a5f9dc16a154871584eaa643d882a":["7599427f762eb1b4265584fd6e96521e4a1a4f3c"],"bb04d6a79e860154f2a1c519790fc42f5a792915":["5a207d19eac354d649c3f0e2cce070017c78125e"],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["950882a2bd2a5f9dc16a154871584eaa643d882a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43"]},"commit2Childs":{"7599427f762eb1b4265584fd6e96521e4a1a4f3c":["55980207f1977bd1463465de1659b821347e2fa8","950882a2bd2a5f9dc16a154871584eaa643d882a"],"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"55980207f1977bd1463465de1659b821347e2fa8":[],"cefe924a3b76c22b7df9a075329750871699af6b":["7599427f762eb1b4265584fd6e96521e4a1a4f3c","55980207f1977bd1463465de1659b821347e2fa8"],"5a207d19eac354d649c3f0e2cce070017c78125e":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43","bb04d6a79e860154f2a1c519790fc42f5a792915"],"b470f36a9372c97283360b1304eacbde22df6c0d":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cefe924a3b76c22b7df9a075329750871699af6b"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"bb04d6a79e860154f2a1c519790fc42f5a792915":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43"],"950882a2bd2a5f9dc16a154871584eaa643d882a":["5a207d19eac354d649c3f0e2cce070017c78125e","b470f36a9372c97283360b1304eacbde22df6c0d","1e6acbaae7af722f17204ceccf0f7db5753eccf3","6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["b470f36a9372c97283360b1304eacbde22df6c0d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["55980207f1977bd1463465de1659b821347e2fa8","1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}