{"path":"solr/core/src/java/org/apache/solr/cloud/overseer/SliceMutator#updateReplica(DocCollection,Slice,String,Replica).mjava","commits":[{"id":"24a5da2a0d397ff29f3de8f6cf451d3412c2509a","date":1417276391,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/overseer/SliceMutator#updateReplica(DocCollection,Slice,String,Replica).mjava","pathOld":"/dev/null","sourceNew":"  public static DocCollection updateReplica(DocCollection collection, final Slice slice, String coreNodeName, final Replica replica) {\n    Map<String, Replica> copy = slice.getReplicasCopy();\n    if (replica == null) {\n      copy.remove(coreNodeName);\n    } else {\n      copy.put(replica.getName(), replica);\n    }\n    Slice newSlice = new Slice(slice.getName(), copy, slice.getProperties());\n    return CollectionMutator.updateSlice(collection.getName(), collection, newSlice);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61c45e99cf6676da48f19d7511c73712ad39402b","date":1495508331,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/overseer/SliceMutator#updateReplica(DocCollection,Slice,String,Replica).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/overseer/SliceMutator#updateReplica(DocCollection,Slice,String,Replica).mjava","sourceNew":"  public static DocCollection updateReplica(DocCollection collection, final Slice slice, String coreNodeName, final Replica replica) {\n    Map<String, Replica> replicasCopy = slice.getReplicasCopy();\n    if (replica == null) {\n      replicasCopy.remove(coreNodeName);\n    } else {\n      replicasCopy.put(replica.getName(), replica);\n    }\n    Slice newSlice = new Slice(slice.getName(), replicasCopy, slice.getProperties());\n    log.debug(\"Old Slice: {}\", slice);\n    log.debug(\"New Slice: {}\", newSlice);\n    return CollectionMutator.updateSlice(collection.getName(), collection, newSlice);\n  }\n\n","sourceOld":"  public static DocCollection updateReplica(DocCollection collection, final Slice slice, String coreNodeName, final Replica replica) {\n    Map<String, Replica> copy = slice.getReplicasCopy();\n    if (replica == null) {\n      copy.remove(coreNodeName);\n    } else {\n      copy.put(replica.getName(), replica);\n    }\n    Slice newSlice = new Slice(slice.getName(), copy, slice.getProperties());\n    return CollectionMutator.updateSlice(collection.getName(), collection, newSlice);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/overseer/SliceMutator#updateReplica(DocCollection,Slice,String,Replica).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/overseer/SliceMutator#updateReplica(DocCollection,Slice,String,Replica).mjava","sourceNew":"  public static DocCollection updateReplica(DocCollection collection, final Slice slice, String coreNodeName, final Replica replica) {\n    Map<String, Replica> replicasCopy = slice.getReplicasCopy();\n    if (replica == null) {\n      replicasCopy.remove(coreNodeName);\n    } else {\n      replicasCopy.put(replica.getName(), replica);\n    }\n    Slice newSlice = new Slice(slice.getName(), replicasCopy, slice.getProperties());\n    log.debug(\"Old Slice: {}\", slice);\n    log.debug(\"New Slice: {}\", newSlice);\n    return CollectionMutator.updateSlice(collection.getName(), collection, newSlice);\n  }\n\n","sourceOld":"  public static DocCollection updateReplica(DocCollection collection, final Slice slice, String coreNodeName, final Replica replica) {\n    Map<String, Replica> copy = slice.getReplicasCopy();\n    if (replica == null) {\n      copy.remove(coreNodeName);\n    } else {\n      copy.put(replica.getName(), replica);\n    }\n    Slice newSlice = new Slice(slice.getName(), copy, slice.getProperties());\n    return CollectionMutator.updateSlice(collection.getName(), collection, newSlice);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6681d02f2302c363be938426e68f8dfd090cc1bf","date":1575339019,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/overseer/SliceMutator#updateReplica(DocCollection,Slice,String,Replica).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/overseer/SliceMutator#updateReplica(DocCollection,Slice,String,Replica).mjava","sourceNew":"  public static DocCollection updateReplica(DocCollection collection, final Slice slice, String coreNodeName, final Replica replica) {\n    Map<String, Replica> replicasCopy = slice.getReplicasCopy();\n    if (replica == null) {\n      replicasCopy.remove(coreNodeName);\n    } else {\n      replicasCopy.put(replica.getName(), replica);\n    }\n    Slice newSlice = new Slice(slice.getName(), replicasCopy, slice.getProperties(), collection.getName());\n    log.debug(\"Old Slice: {}\", slice);\n    log.debug(\"New Slice: {}\", newSlice);\n    return CollectionMutator.updateSlice(collection.getName(), collection, newSlice);\n  }\n\n","sourceOld":"  public static DocCollection updateReplica(DocCollection collection, final Slice slice, String coreNodeName, final Replica replica) {\n    Map<String, Replica> replicasCopy = slice.getReplicasCopy();\n    if (replica == null) {\n      replicasCopy.remove(coreNodeName);\n    } else {\n      replicasCopy.put(replica.getName(), replica);\n    }\n    Slice newSlice = new Slice(slice.getName(), replicasCopy, slice.getProperties());\n    log.debug(\"Old Slice: {}\", slice);\n    log.debug(\"New Slice: {}\", newSlice);\n    return CollectionMutator.updateSlice(collection.getName(), collection, newSlice);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3aa683bba99315838c968fefedf3d74f44aa993","date":1575395112,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/overseer/SliceMutator#updateReplica(DocCollection,Slice,String,Replica).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/overseer/SliceMutator#updateReplica(DocCollection,Slice,String,Replica).mjava","sourceNew":"  public static DocCollection updateReplica(DocCollection collection, final Slice slice, String coreNodeName, final Replica replica) {\n    Map<String, Replica> replicasCopy = slice.getReplicasCopy();\n    if (replica == null) {\n      replicasCopy.remove(coreNodeName);\n    } else {\n      replicasCopy.put(replica.getName(), replica);\n    }\n    Slice newSlice = new Slice(slice.getName(), replicasCopy, slice.getProperties(), collection.getName());\n    log.debug(\"Old Slice: {}\", slice);\n    log.debug(\"New Slice: {}\", newSlice);\n    return CollectionMutator.updateSlice(collection.getName(), collection, newSlice);\n  }\n\n","sourceOld":"  public static DocCollection updateReplica(DocCollection collection, final Slice slice, String coreNodeName, final Replica replica) {\n    Map<String, Replica> replicasCopy = slice.getReplicasCopy();\n    if (replica == null) {\n      replicasCopy.remove(coreNodeName);\n    } else {\n      replicasCopy.put(replica.getName(), replica);\n    }\n    Slice newSlice = new Slice(slice.getName(), replicasCopy, slice.getProperties());\n    log.debug(\"Old Slice: {}\", slice);\n    log.debug(\"New Slice: {}\", newSlice);\n    return CollectionMutator.updateSlice(collection.getName(), collection, newSlice);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3aa683bba99315838c968fefedf3d74f44aa993":["61c45e99cf6676da48f19d7511c73712ad39402b","6681d02f2302c363be938426e68f8dfd090cc1bf"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["24a5da2a0d397ff29f3de8f6cf451d3412c2509a","61c45e99cf6676da48f19d7511c73712ad39402b"],"24a5da2a0d397ff29f3de8f6cf451d3412c2509a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"61c45e99cf6676da48f19d7511c73712ad39402b":["24a5da2a0d397ff29f3de8f6cf451d3412c2509a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6681d02f2302c363be938426e68f8dfd090cc1bf"],"6681d02f2302c363be938426e68f8dfd090cc1bf":["61c45e99cf6676da48f19d7511c73712ad39402b"]},"commit2Childs":{"d3aa683bba99315838c968fefedf3d74f44aa993":[],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"24a5da2a0d397ff29f3de8f6cf451d3412c2509a":["e9017cf144952056066919f1ebc7897ff9bd71b1","61c45e99cf6676da48f19d7511c73712ad39402b"],"61c45e99cf6676da48f19d7511c73712ad39402b":["d3aa683bba99315838c968fefedf3d74f44aa993","e9017cf144952056066919f1ebc7897ff9bd71b1","6681d02f2302c363be938426e68f8dfd090cc1bf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["24a5da2a0d397ff29f3de8f6cf451d3412c2509a"],"6681d02f2302c363be938426e68f8dfd090cc1bf":["d3aa683bba99315838c968fefedf3d74f44aa993","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3aa683bba99315838c968fefedf3d74f44aa993","e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}