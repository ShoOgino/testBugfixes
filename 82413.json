{"path":"solr/core/src/java/org/apache/solr/cloud/OverseerTaskProcessor#cleanUpWorkQueue().mjava","commits":[{"id":"2209af2c265d2258ec4b29c8cc78622d36994a15","date":1440641916,"type":1,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerTaskProcessor#cleanUpWorkQueue().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerProcessor#cleanUpWorkQueue().mjava","sourceNew":"  private void cleanUpWorkQueue() throws KeeperException, InterruptedException {\n    synchronized (completedTasks) {\n      for (String id : completedTasks.keySet()) {\n        workQueue.remove(completedTasks.get(id));\n        runningZKTasks.remove(id);\n      }\n      completedTasks.clear();\n    }\n  }\n\n","sourceOld":"  private void cleanUpWorkQueue() throws KeeperException, InterruptedException {\n    synchronized (completedTasks) {\n      for (String id : completedTasks.keySet()) {\n        workQueue.remove(completedTasks.get(id));\n        runningZKTasks.remove(id);\n      }\n      completedTasks.clear();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerTaskProcessor#cleanUpWorkQueue().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerTaskProcessor#cleanUpWorkQueue().mjava","sourceNew":"  private void cleanUpWorkQueue() throws KeeperException, InterruptedException {\n    synchronized (completedTasks) {\n      for (String id : completedTasks.keySet()) {\n        workQueue.remove(completedTasks.get(id));\n        synchronized (runningTasks) {\n          runningZKTasks.remove(id);\n        }\n      }\n      completedTasks.clear();\n    }\n  }\n\n","sourceOld":"  private void cleanUpWorkQueue() throws KeeperException, InterruptedException {\n    synchronized (completedTasks) {\n      for (String id : completedTasks.keySet()) {\n        workQueue.remove(completedTasks.get(id));\n        runningZKTasks.remove(id);\n      }\n      completedTasks.clear();\n    }\n  }\n\n","bugFix":["6f26f74e4969851a019d28f10315cb1c77786f22"],"bugIntro":["6ae2143d8147bf35f8f826070eb0bb2dceab10e8"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6ae2143d8147bf35f8f826070eb0bb2dceab10e8","date":1544571942,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerTaskProcessor#cleanUpWorkQueue().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerTaskProcessor#cleanUpWorkQueue().mjava","sourceNew":"  private void cleanUpWorkQueue() throws KeeperException, InterruptedException {\n    synchronized (completedTasks) {\n      for (String id : completedTasks.keySet()) {\n        workQueue.remove(completedTasks.get(id));\n        synchronized (runningZKTasks) {\n          runningZKTasks.remove(id);\n        }\n      }\n      completedTasks.clear();\n    }\n  }\n\n","sourceOld":"  private void cleanUpWorkQueue() throws KeeperException, InterruptedException {\n    synchronized (completedTasks) {\n      for (String id : completedTasks.keySet()) {\n        workQueue.remove(completedTasks.get(id));\n        synchronized (runningTasks) {\n          runningZKTasks.remove(id);\n        }\n      }\n      completedTasks.clear();\n    }\n  }\n\n","bugFix":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b22e06bed98cf8dceb4f71c4d5265e798e7fbd0","date":1571070979,"type":3,"author":"Koen De Groote","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerTaskProcessor#cleanUpWorkQueue().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerTaskProcessor#cleanUpWorkQueue().mjava","sourceNew":"  private void cleanUpWorkQueue() throws KeeperException, InterruptedException {\n    synchronized (completedTasks) {\n      for (Map.Entry<String, QueueEvent> entry : completedTasks.entrySet()) {\n        workQueue.remove(entry.getValue());\n        synchronized (runningZKTasks) {\n          runningZKTasks.remove(entry.getKey());\n        }\n      }\n      completedTasks.clear();\n    }\n  }\n\n","sourceOld":"  private void cleanUpWorkQueue() throws KeeperException, InterruptedException {\n    synchronized (completedTasks) {\n      for (String id : completedTasks.keySet()) {\n        workQueue.remove(completedTasks.get(id));\n        synchronized (runningZKTasks) {\n          runningZKTasks.remove(id);\n        }\n      }\n      completedTasks.clear();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerTaskProcessor#cleanUpWorkQueue().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerTaskProcessor#cleanUpWorkQueue().mjava","sourceNew":"  private void cleanUpWorkQueue() throws KeeperException, InterruptedException {\n    synchronized (completedTasks) {\n      for (Map.Entry<String, QueueEvent> entry : completedTasks.entrySet()) {\n        workQueue.remove(entry.getValue());\n        synchronized (runningZKTasks) {\n          runningZKTasks.remove(entry.getKey());\n        }\n      }\n      completedTasks.clear();\n    }\n  }\n\n","sourceOld":"  private void cleanUpWorkQueue() throws KeeperException, InterruptedException {\n    synchronized (completedTasks) {\n      for (String id : completedTasks.keySet()) {\n        workQueue.remove(completedTasks.get(id));\n        synchronized (runningZKTasks) {\n          runningZKTasks.remove(id);\n        }\n      }\n      completedTasks.clear();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98b85aeea4d572e94fd5e6ba67043b5b363f1380","date":1592921806,"type":3,"author":"Ilan Ginzburg","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerTaskProcessor#cleanUpWorkQueue().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerTaskProcessor#cleanUpWorkQueue().mjava","sourceNew":"  private void cleanUpWorkQueue() throws KeeperException, InterruptedException {\n    Iterator<Map.Entry<String, QueueEvent>> it = completedTasks.entrySet().iterator();\n    while (it.hasNext()) {\n      Map.Entry<String, QueueEvent> entry = it.next();\n      workQueue.remove(entry.getValue());\n      runningZKTasks.remove(entry.getKey());\n      it.remove();\n    }\n  }\n\n","sourceOld":"  private void cleanUpWorkQueue() throws KeeperException, InterruptedException {\n    synchronized (completedTasks) {\n      for (Map.Entry<String, QueueEvent> entry : completedTasks.entrySet()) {\n        workQueue.remove(entry.getValue());\n        synchronized (runningZKTasks) {\n          runningZKTasks.remove(entry.getKey());\n        }\n      }\n      completedTasks.clear();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b22e06bed98cf8dceb4f71c4d5265e798e7fbd0":["6ae2143d8147bf35f8f826070eb0bb2dceab10e8"],"2209af2c265d2258ec4b29c8cc78622d36994a15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"98b85aeea4d572e94fd5e6ba67043b5b363f1380":["7b22e06bed98cf8dceb4f71c4d5265e798e7fbd0"],"6ae2143d8147bf35f8f826070eb0bb2dceab10e8":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["98b85aeea4d572e94fd5e6ba67043b5b363f1380"],"b0b597c65628ca9e73913a07e81691f8229bae35":["6ae2143d8147bf35f8f826070eb0bb2dceab10e8","7b22e06bed98cf8dceb4f71c4d5265e798e7fbd0"]},"commit2Childs":{"7b22e06bed98cf8dceb4f71c4d5265e798e7fbd0":["98b85aeea4d572e94fd5e6ba67043b5b363f1380","b0b597c65628ca9e73913a07e81691f8229bae35"],"2209af2c265d2258ec4b29c8cc78622d36994a15":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["6ae2143d8147bf35f8f826070eb0bb2dceab10e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"6ae2143d8147bf35f8f826070eb0bb2dceab10e8":["7b22e06bed98cf8dceb4f71c4d5265e798e7fbd0","b0b597c65628ca9e73913a07e81691f8229bae35"],"98b85aeea4d572e94fd5e6ba67043b5b363f1380":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}