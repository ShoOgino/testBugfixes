{"path":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#addDocs2(IndexWriter,int).mjava","commits":[{"id":"fb10b6bcde550b87d8f10e5f010bd8f3021023b6","date":1274974592,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#addDocs2(IndexWriter,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#addDocs2(IndexWriter,int).mjava","sourceNew":"  private void addDocs2(IndexWriter writer, int numDocs) throws IOException {\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"content\", \"bbb\", Field.Store.NO,\n                        Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n  }\n\n","sourceOld":"  private void addDocs2(IndexWriter writer, int numDocs) throws IOException {\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"content\", \"bbb\", Field.Store.NO,\n                        Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"132903c28af3aa6f67284b78de91c0f0a99488c2","date":1284282129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#addDocs2(IndexWriter,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#addDocs2(IndexWriter,int).mjava","sourceNew":"  private void addDocs2(IndexWriter writer, int numDocs) throws IOException {\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"content\", \"bbb\", Field.Store.NO,\n                        Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n  }\n\n","sourceOld":"  private void addDocs2(IndexWriter writer, int numDocs) throws IOException {\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"content\", \"bbb\", Field.Store.NO,\n                        Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#addDocs2(IndexWriter,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#addDocs2(IndexWriter,int).mjava","sourceNew":"  private void addDocs2(IndexWriter writer, int numDocs) throws IOException {\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"content\", \"bbb\", Field.Store.NO,\n                        Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n  }\n\n","sourceOld":"  private void addDocs2(IndexWriter writer, int numDocs) throws IOException {\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"content\", \"bbb\", Field.Store.NO,\n                        Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#addDocs2(IndexWriter,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#addDocs2(IndexWriter,int).mjava","sourceNew":"  private void addDocs2(IndexWriter writer, int numDocs) throws IOException {\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"content\", \"bbb\", TextField.TYPE_UNSTORED));\n      writer.addDocument(doc);\n    }\n  }\n\n","sourceOld":"  private void addDocs2(IndexWriter writer, int numDocs) throws IOException {\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"content\", \"bbb\", Field.Store.NO,\n                        Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#addDocs2(IndexWriter,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#addDocs2(IndexWriter,int).mjava","sourceNew":"  private void addDocs2(IndexWriter writer, int numDocs) throws IOException {\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"content\", \"bbb\", TextField.TYPE_UNSTORED));\n      writer.addDocument(doc);\n    }\n  }\n\n","sourceOld":"  private void addDocs2(IndexWriter writer, int numDocs) throws IOException {\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"content\", \"bbb\", TextField.TYPE_UNSTORED));\n      writer.addDocument(doc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"132903c28af3aa6f67284b78de91c0f0a99488c2":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6","132903c28af3aa6f67284b78de91c0f0a99488c2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["1509f151d7692d84fae414b2b799ac06ba60fcb4","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["132903c28af3aa6f67284b78de91c0f0a99488c2","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}