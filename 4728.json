{"path":"src/test-deprecated/org/apache/lucene/index/TestIndexReader#testBasicDelete().mjava","commits":[{"id":"5b5461affe637a07375542c763a4805300802be8","date":1102270918,"type":0,"author":"Bernhard Messer","isMerge":false,"pathNew":"src/test-deprecated/org/apache/lucene/index/TestIndexReader#testBasicDelete().mjava","pathOld":"/dev/null","sourceNew":"    public void testBasicDelete() throws IOException\n    {\n        Directory dir = new RAMDirectory();\n\n        IndexWriter writer = null;\n        IndexReader reader = null;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 100 documents with term : aaa\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true);\n        for (int i = 0; i < 100; i++)\n        {\n            addDoc(writer, searchTerm.text());\n        }\n        writer.close();\n\n        // OPEN READER AT THIS POINT - this should fix the view of the\n        // index at the point of having 100 \"aaa\" documents and 0 \"bbb\"\n        reader = IndexReader.open(dir);\n        assertEquals(\"first docFreq\", 100, reader.docFreq(searchTerm));\n        assertTermDocsCount(\"first reader\", reader, searchTerm, 100);\n\n        // DELETE DOCUMENTS CONTAINING TERM: aaa\n        int deleted = 0;\n        reader = IndexReader.open(dir);\n        deleted = reader.delete(searchTerm);\n        assertEquals(\"deleted count\", 100, deleted);\n        assertEquals(\"deleted docFreq\", 100, reader.docFreq(searchTerm));\n        assertTermDocsCount(\"deleted termDocs\", reader, searchTerm, 0);\n        reader.close();\n\n        // CREATE A NEW READER and re-test\n        reader = IndexReader.open(dir);\n        assertEquals(\"deleted docFreq\", 100, reader.docFreq(searchTerm));\n        assertTermDocsCount(\"deleted termDocs\", reader, searchTerm, 0);\n        reader.close();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c69e98ffd83f56083b99e5443ca713cd5783a2ae","date":1142955392,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test-deprecated/org/apache/lucene/index/TestIndexReader#testBasicDelete().mjava","sourceNew":null,"sourceOld":"    public void testBasicDelete() throws IOException\n    {\n        Directory dir = new RAMDirectory();\n\n        IndexWriter writer = null;\n        IndexReader reader = null;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 100 documents with term : aaa\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true);\n        for (int i = 0; i < 100; i++)\n        {\n            addDoc(writer, searchTerm.text());\n        }\n        writer.close();\n\n        // OPEN READER AT THIS POINT - this should fix the view of the\n        // index at the point of having 100 \"aaa\" documents and 0 \"bbb\"\n        reader = IndexReader.open(dir);\n        assertEquals(\"first docFreq\", 100, reader.docFreq(searchTerm));\n        assertTermDocsCount(\"first reader\", reader, searchTerm, 100);\n\n        // DELETE DOCUMENTS CONTAINING TERM: aaa\n        int deleted = 0;\n        reader = IndexReader.open(dir);\n        deleted = reader.delete(searchTerm);\n        assertEquals(\"deleted count\", 100, deleted);\n        assertEquals(\"deleted docFreq\", 100, reader.docFreq(searchTerm));\n        assertTermDocsCount(\"deleted termDocs\", reader, searchTerm, 0);\n        reader.close();\n\n        // CREATE A NEW READER and re-test\n        reader = IndexReader.open(dir);\n        assertEquals(\"deleted docFreq\", 100, reader.docFreq(searchTerm));\n        assertTermDocsCount(\"deleted termDocs\", reader, searchTerm, 0);\n        reader.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5b5461affe637a07375542c763a4805300802be8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["5b5461affe637a07375542c763a4805300802be8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"]},"commit2Childs":{"5b5461affe637a07375542c763a4805300802be8":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5b5461affe637a07375542c763a4805300802be8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}