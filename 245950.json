{"path":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanQueryBuilder#getOccursValue(Element).mjava","commits":[{"id":"d3c3c2404d1200c39220fa15054fae854db4e1ee","date":1140827958,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanQueryBuilder#getOccursValue(Element).mjava","pathOld":"/dev/null","sourceNew":"\tprivate BooleanClause.Occur getOccursValue(Element clauseElem) throws ParserException\r\n\t{\r\n\t\tString occs=clauseElem.getAttribute(\"occurs\");\r\n\t\tBooleanClause.Occur occurs=BooleanClause.Occur.SHOULD;\r\n\t\tif(\"must\".equalsIgnoreCase(occs))\r\n\t\t{\r\n\t\t\toccurs=BooleanClause.Occur.MUST;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(\"mustNot\".equalsIgnoreCase(occs))\r\n\t\t\t{\r\n\t\t\t\toccurs=BooleanClause.Occur.MUST_NOT;\r\n\t\t\t}\t\t\t\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif((\"should\".equalsIgnoreCase(occs))||(\"\".equals(occs)))\r\n\t\t\t\t{\r\n\t\t\t\t\toccurs=BooleanClause.Occur.SHOULD;\r\n\t\t\t\t}\t\t\t\r\n\t\t\t\telse\t\t\t\t\r\n\t\t\t\t{\r\n\t\t\t\t\tif(occs!=null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthrow new ParserException(\"Invalid value for \\\"occurs\\\" attribute of clause:\"+occs);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn occurs;\r\n\t\t\r\n\t}\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"175da89dff77515cdda7604b3c6cf6de96d4ac23","date":1143444217,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanQueryBuilder#getOccursValue(Element).mjava","pathOld":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanQueryBuilder#getOccursValue(Element).mjava","sourceNew":"\tstatic BooleanClause.Occur getOccursValue(Element clauseElem) throws ParserException\r\n\t{\r\n\t\tString occs=clauseElem.getAttribute(\"occurs\");\r\n\t\tBooleanClause.Occur occurs=BooleanClause.Occur.SHOULD;\r\n\t\tif(\"must\".equalsIgnoreCase(occs))\r\n\t\t{\r\n\t\t\toccurs=BooleanClause.Occur.MUST;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(\"mustNot\".equalsIgnoreCase(occs))\r\n\t\t\t{\r\n\t\t\t\toccurs=BooleanClause.Occur.MUST_NOT;\r\n\t\t\t}\t\t\t\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif((\"should\".equalsIgnoreCase(occs))||(\"\".equals(occs)))\r\n\t\t\t\t{\r\n\t\t\t\t\toccurs=BooleanClause.Occur.SHOULD;\r\n\t\t\t\t}\t\t\t\r\n\t\t\t\telse\t\t\t\t\r\n\t\t\t\t{\r\n\t\t\t\t\tif(occs!=null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthrow new ParserException(\"Invalid value for \\\"occurs\\\" attribute of clause:\"+occs);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn occurs;\r\n\t\t\r\n\t}\r\n\n","sourceOld":"\tprivate BooleanClause.Occur getOccursValue(Element clauseElem) throws ParserException\r\n\t{\r\n\t\tString occs=clauseElem.getAttribute(\"occurs\");\r\n\t\tBooleanClause.Occur occurs=BooleanClause.Occur.SHOULD;\r\n\t\tif(\"must\".equalsIgnoreCase(occs))\r\n\t\t{\r\n\t\t\toccurs=BooleanClause.Occur.MUST;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(\"mustNot\".equalsIgnoreCase(occs))\r\n\t\t\t{\r\n\t\t\t\toccurs=BooleanClause.Occur.MUST_NOT;\r\n\t\t\t}\t\t\t\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif((\"should\".equalsIgnoreCase(occs))||(\"\".equals(occs)))\r\n\t\t\t\t{\r\n\t\t\t\t\toccurs=BooleanClause.Occur.SHOULD;\r\n\t\t\t\t}\t\t\t\r\n\t\t\t\telse\t\t\t\t\r\n\t\t\t\t{\r\n\t\t\t\t\tif(occs!=null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthrow new ParserException(\"Invalid value for \\\"occurs\\\" attribute of clause:\"+occs);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn occurs;\r\n\t\t\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a361a621b184d9b73c9c9a37323a9845b8f8260","date":1226370946,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanQueryBuilder#getOccursValue(Element).mjava","pathOld":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanQueryBuilder#getOccursValue(Element).mjava","sourceNew":"\tstatic BooleanClause.Occur getOccursValue(Element clauseElem) throws ParserException\n\t{\n\t\tString occs=clauseElem.getAttribute(\"occurs\");\n\t\tBooleanClause.Occur occurs=BooleanClause.Occur.SHOULD;\n\t\tif(\"must\".equalsIgnoreCase(occs))\n\t\t{\n\t\t\toccurs=BooleanClause.Occur.MUST;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(\"mustNot\".equalsIgnoreCase(occs))\n\t\t\t{\n\t\t\t\toccurs=BooleanClause.Occur.MUST_NOT;\n\t\t\t}\t\t\t\n\t\t\telse\n\t\t\t{\n\t\t\t\tif((\"should\".equalsIgnoreCase(occs))||(\"\".equals(occs)))\n\t\t\t\t{\n\t\t\t\t\toccurs=BooleanClause.Occur.SHOULD;\n\t\t\t\t}\t\t\t\n\t\t\t\telse\t\t\t\t\n\t\t\t\t{\n\t\t\t\t\tif(occs!=null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new ParserException(\"Invalid value for \\\"occurs\\\" attribute of clause:\"+occs);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn occurs;\n\t\t\n\t}\n\n","sourceOld":"\tstatic BooleanClause.Occur getOccursValue(Element clauseElem) throws ParserException\r\n\t{\r\n\t\tString occs=clauseElem.getAttribute(\"occurs\");\r\n\t\tBooleanClause.Occur occurs=BooleanClause.Occur.SHOULD;\r\n\t\tif(\"must\".equalsIgnoreCase(occs))\r\n\t\t{\r\n\t\t\toccurs=BooleanClause.Occur.MUST;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(\"mustNot\".equalsIgnoreCase(occs))\r\n\t\t\t{\r\n\t\t\t\toccurs=BooleanClause.Occur.MUST_NOT;\r\n\t\t\t}\t\t\t\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif((\"should\".equalsIgnoreCase(occs))||(\"\".equals(occs)))\r\n\t\t\t\t{\r\n\t\t\t\t\toccurs=BooleanClause.Occur.SHOULD;\r\n\t\t\t\t}\t\t\t\r\n\t\t\t\telse\t\t\t\t\r\n\t\t\t\t{\r\n\t\t\t\t\tif(occs!=null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthrow new ParserException(\"Invalid value for \\\"occurs\\\" attribute of clause:\"+occs);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn occurs;\r\n\t\t\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanQueryBuilder#getOccursValue(Element).mjava","pathOld":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanQueryBuilder#getOccursValue(Element).mjava","sourceNew":"\tstatic BooleanClause.Occur getOccursValue(Element clauseElem) throws ParserException\n\t{\n\t\tString occs=clauseElem.getAttribute(\"occurs\");\n\t\tBooleanClause.Occur occurs=BooleanClause.Occur.SHOULD;\n\t\tif(\"must\".equalsIgnoreCase(occs))\n\t\t{\n\t\t\toccurs=BooleanClause.Occur.MUST;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(\"mustNot\".equalsIgnoreCase(occs))\n\t\t\t{\n\t\t\t\toccurs=BooleanClause.Occur.MUST_NOT;\n\t\t\t}\t\t\t\n\t\t\telse\n\t\t\t{\n\t\t\t\tif((\"should\".equalsIgnoreCase(occs))||(\"\".equals(occs)))\n\t\t\t\t{\n\t\t\t\t\toccurs=BooleanClause.Occur.SHOULD;\n\t\t\t\t}\t\t\t\n\t\t\t\telse\t\t\t\t\n\t\t\t\t{\n\t\t\t\t\tif(occs!=null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new ParserException(\"Invalid value for \\\"occurs\\\" attribute of clause:\"+occs);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn occurs;\n\t\t\n\t}\n\n","sourceOld":"\tstatic BooleanClause.Occur getOccursValue(Element clauseElem) throws ParserException\n\t{\n\t\tString occs=clauseElem.getAttribute(\"occurs\");\n\t\tBooleanClause.Occur occurs=BooleanClause.Occur.SHOULD;\n\t\tif(\"must\".equalsIgnoreCase(occs))\n\t\t{\n\t\t\toccurs=BooleanClause.Occur.MUST;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(\"mustNot\".equalsIgnoreCase(occs))\n\t\t\t{\n\t\t\t\toccurs=BooleanClause.Occur.MUST_NOT;\n\t\t\t}\t\t\t\n\t\t\telse\n\t\t\t{\n\t\t\t\tif((\"should\".equalsIgnoreCase(occs))||(\"\".equals(occs)))\n\t\t\t\t{\n\t\t\t\t\toccurs=BooleanClause.Occur.SHOULD;\n\t\t\t\t}\t\t\t\n\t\t\t\telse\t\t\t\t\n\t\t\t\t{\n\t\t\t\t\tif(occs!=null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new ParserException(\"Invalid value for \\\"occurs\\\" attribute of clause:\"+occs);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn occurs;\n\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"175da89dff77515cdda7604b3c6cf6de96d4ac23":["d3c3c2404d1200c39220fa15054fae854db4e1ee"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["175da89dff77515cdda7604b3c6cf6de96d4ac23"],"d3c3c2404d1200c39220fa15054fae854db4e1ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["6a361a621b184d9b73c9c9a37323a9845b8f8260"]},"commit2Childs":{"175da89dff77515cdda7604b3c6cf6de96d4ac23":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3c3c2404d1200c39220fa15054fae854db4e1ee"],"d3c3c2404d1200c39220fa15054fae854db4e1ee":["175da89dff77515cdda7604b3c6cf6de96d4ac23"],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}