{"path":"solr/core/src/java/org/apache/solr/util/circuitbreaker/CircuitBreakerManager#buildCBConfig(PluginInfo).mjava","commits":[{"id":"0ef286034ca1be064a363aaec38e34e64a59154c","date":1598517382,"type":0,"author":"Atri Sharma","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/circuitbreaker/CircuitBreakerManager#buildCBConfig(PluginInfo).mjava","pathOld":"/dev/null","sourceNew":"  @VisibleForTesting\n  @SuppressWarnings({\"rawtypes\"})\n  public static CircuitBreaker.CircuitBreakerConfig buildCBConfig(PluginInfo pluginInfo) {\n    boolean enabled = Boolean.parseBoolean(pluginInfo.attributes.get(\"enabled\"));\n    boolean cpuCBEnabled = false;\n    boolean memCBEnabled = false;\n    int memCBThreshold = 100;\n    int cpuCBThreshold = 100;\n\n    NamedList args = pluginInfo.initArgs;\n\n    if (args != null) {\n      cpuCBEnabled = args.getBooleanArg(\"cpuEnabled\");\n      memCBEnabled = args.getBooleanArg(\"memEnabled\");\n      memCBThreshold = Integer.parseInt((String) args.get(\"memThreshold\"));\n      cpuCBThreshold = Integer.parseInt((String) args.get(\"cpuThreshold\"));\n    }\n\n    return new CircuitBreaker.CircuitBreakerConfig(enabled, memCBEnabled, memCBThreshold, cpuCBEnabled, cpuCBThreshold);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71338c625d76442a93288306e3b2f35687ca6800","date":1598541732,"type":3,"author":"Atri Sharma","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/circuitbreaker/CircuitBreakerManager#buildCBConfig(PluginInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/circuitbreaker/CircuitBreakerManager#buildCBConfig(PluginInfo).mjava","sourceNew":"  @VisibleForTesting\n  @SuppressWarnings({\"rawtypes\"})\n  public static CircuitBreaker.CircuitBreakerConfig buildCBConfig(PluginInfo pluginInfo) {\n    boolean enabled = false;\n    boolean cpuCBEnabled = false;\n    boolean memCBEnabled = false;\n    int memCBThreshold = 100;\n    int cpuCBThreshold = 100;\n\n\n    if (pluginInfo != null) {\n      NamedList args = pluginInfo.initArgs;\n\n      enabled = Boolean.parseBoolean(pluginInfo.attributes.getOrDefault(\"enabled\", \"false\"));\n\n      if (args != null) {\n        cpuCBEnabled = Boolean.parseBoolean(args._getStr(\"cpuEnabled\", \"false\"));\n        memCBEnabled = Boolean.parseBoolean(args._getStr(\"memEnabled\", \"false\"));\n        memCBThreshold = Integer.parseInt(args._getStr(\"memThreshold\", \"100\"));\n        cpuCBThreshold = Integer.parseInt(args._getStr(\"cpuThreshold\", \"100\"));\n      }\n    }\n\n    return new CircuitBreaker.CircuitBreakerConfig(enabled, memCBEnabled, memCBThreshold, cpuCBEnabled, cpuCBThreshold);\n  }\n\n","sourceOld":"  @VisibleForTesting\n  @SuppressWarnings({\"rawtypes\"})\n  public static CircuitBreaker.CircuitBreakerConfig buildCBConfig(PluginInfo pluginInfo) {\n    boolean enabled = Boolean.parseBoolean(pluginInfo.attributes.get(\"enabled\"));\n    boolean cpuCBEnabled = false;\n    boolean memCBEnabled = false;\n    int memCBThreshold = 100;\n    int cpuCBThreshold = 100;\n\n    NamedList args = pluginInfo.initArgs;\n\n    if (args != null) {\n      cpuCBEnabled = args.getBooleanArg(\"cpuEnabled\");\n      memCBEnabled = args.getBooleanArg(\"memEnabled\");\n      memCBThreshold = Integer.parseInt((String) args.get(\"memThreshold\"));\n      cpuCBThreshold = Integer.parseInt((String) args.get(\"cpuThreshold\"));\n    }\n\n    return new CircuitBreaker.CircuitBreakerConfig(enabled, memCBEnabled, memCBThreshold, cpuCBEnabled, cpuCBThreshold);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0ef286034ca1be064a363aaec38e34e64a59154c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71338c625d76442a93288306e3b2f35687ca6800"],"71338c625d76442a93288306e3b2f35687ca6800":["0ef286034ca1be064a363aaec38e34e64a59154c"]},"commit2Childs":{"0ef286034ca1be064a363aaec38e34e64a59154c":["71338c625d76442a93288306e3b2f35687ca6800"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0ef286034ca1be064a363aaec38e34e64a59154c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"71338c625d76442a93288306e3b2f35687ca6800":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}