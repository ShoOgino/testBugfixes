{"path":"src/java/org/apache/lucene/index/DirectoryIndexReader#init(Directory,SegmentInfos,boolean).mjava","commits":[{"id":"125b5699f11b58d9be0820c6ce8b1648812902e8","date":1190273227,"type":1,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DirectoryIndexReader#init(Directory,SegmentInfos,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#init(Directory,SegmentInfos,boolean,boolean).mjava","sourceNew":"  void init(Directory directory, SegmentInfos segmentInfos, boolean closeDirectory) {\n    this.directory = directory;\n    this.segmentInfos = segmentInfos;\n    this.closeDirectory = closeDirectory;\n  }\n\n","sourceOld":"  void init(Directory directory, SegmentInfos segmentInfos, boolean closeDirectory, boolean directoryOwner) {\n    this.directory = directory;\n    this.segmentInfos = segmentInfos;\n    this.directoryOwner = directoryOwner;\n    this.closeDirectory = closeDirectory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e82780afe6097066eb5befb86e9432f077667e3d","date":1202756169,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DirectoryIndexReader#init(Directory,SegmentInfos,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/DirectoryIndexReader#init(Directory,SegmentInfos,boolean).mjava","sourceNew":"  void init(Directory directory, SegmentInfos segmentInfos, boolean closeDirectory)\n    throws IOException {\n    this.directory = directory;\n    this.segmentInfos = segmentInfos;\n    this.closeDirectory = closeDirectory;\n\n    if (segmentInfos != null) {\n      // We assume that this segments_N was previously\n      // properly sync'd:\n      for(int i=0;i<segmentInfos.size();i++) {\n        final SegmentInfo info = segmentInfos.info(i);\n        List files = info.files();\n        for(int j=0;j<files.size();j++)\n          synced.add(files.get(j));\n      }\n    }\n  }\n\n","sourceOld":"  void init(Directory directory, SegmentInfos segmentInfos, boolean closeDirectory) {\n    this.directory = directory;\n    this.segmentInfos = segmentInfos;\n    this.closeDirectory = closeDirectory;\n  }\n\n","bugFix":null,"bugIntro":["0f44610301174bfb430443d89a88dc1c502feea1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5712975970a595c28f1988efd007e1b8a617a92f","date":1219499238,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DirectoryIndexReader#init(Directory,SegmentInfos,boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/DirectoryIndexReader#init(Directory,SegmentInfos,boolean).mjava","sourceNew":"  void init(Directory directory, SegmentInfos segmentInfos, boolean closeDirectory, boolean readOnly)\n    throws IOException {\n    this.directory = directory;\n    this.segmentInfos = segmentInfos;\n    this.closeDirectory = closeDirectory;\n    this.readOnly = readOnly;\n\n    if (!readOnly && segmentInfos != null) {\n      // We assume that this segments_N was previously\n      // properly sync'd:\n      for(int i=0;i<segmentInfos.size();i++) {\n        final SegmentInfo info = segmentInfos.info(i);\n        List files = info.files();\n        for(int j=0;j<files.size();j++)\n          synced.add(files.get(j));\n      }\n    }\n  }\n\n","sourceOld":"  void init(Directory directory, SegmentInfos segmentInfos, boolean closeDirectory)\n    throws IOException {\n    this.directory = directory;\n    this.segmentInfos = segmentInfos;\n    this.closeDirectory = closeDirectory;\n\n    if (segmentInfos != null) {\n      // We assume that this segments_N was previously\n      // properly sync'd:\n      for(int i=0;i<segmentInfos.size();i++) {\n        final SegmentInfo info = segmentInfos.info(i);\n        List files = info.files();\n        for(int j=0;j<files.size();j++)\n          synced.add(files.get(j));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"125b5699f11b58d9be0820c6ce8b1648812902e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5712975970a595c28f1988efd007e1b8a617a92f":["e82780afe6097066eb5befb86e9432f077667e3d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e82780afe6097066eb5befb86e9432f077667e3d":["125b5699f11b58d9be0820c6ce8b1648812902e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5712975970a595c28f1988efd007e1b8a617a92f"]},"commit2Childs":{"125b5699f11b58d9be0820c6ce8b1648812902e8":["e82780afe6097066eb5befb86e9432f077667e3d"],"5712975970a595c28f1988efd007e1b8a617a92f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["125b5699f11b58d9be0820c6ce8b1648812902e8"],"e82780afe6097066eb5befb86e9432f077667e3d":["5712975970a595c28f1988efd007e1b8a617a92f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}