{"path":"solr/core/src/java/org/apache/solr/request/SolrRequestInfo#getClientTimeZone().mjava","commits":[{"id":"b3c7501e15f71c01b69ba22749b192827fa2019b","date":1335285341,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SolrRequestInfo#getClientTimeZone().mjava","pathOld":"/dev/null","sourceNew":"  /** The TimeZone specified by the request, or null if none was specified */\n  public TimeZone getClientTimeZone() {    \n\n    if (tz == null)  {\n      String tzStr = req.getParams().get(CommonParams.TZ);\n      if (tzStr != null) {\n        tz = TimeZoneUtils.getTimeZone(tzStr);\n        if (null == tz) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                                  \"Solr JVM does not support TZ: \" + tzStr);\n        }\n      } \n    }\n    return tz;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SolrRequestInfo#getClientTimeZone().mjava","pathOld":"solr/core/src/java/org/apache/solr/request/SolrRequestInfo#getClientTimeZone().mjava","sourceNew":"  /** The TimeZone specified by the request, or null if none was specified */\n  public TimeZone getClientTimeZone() {    \n\n    if (tz == null)  {\n      String tzStr = req.getParams().get(CommonParams.TZ);\n      if (tzStr != null) {\n        tz = TimeZoneUtils.getTimeZone(tzStr);\n        if (null == tz) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                                  \"Solr JVM does not support TZ: \" + tzStr);\n        }\n      } \n    }\n    return tz;\n  }\n\n","sourceOld":"  /** The TimeZone specified by the request, or null if none was specified */\n  public TimeZone getClientTimeZone() {    \n\n    if (tz == null)  {\n      String tzStr = req.getParams().get(CommonParams.TZ);\n      if (tzStr != null) {\n        tz = TimeZoneUtils.getTimeZone(tzStr);\n        if (null == tz) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                                  \"Solr JVM does not support TZ: \" + tzStr);\n        }\n      } \n    }\n    return tz;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/request/SolrRequestInfo#getClientTimeZone().mjava","pathOld":"solr/core/src/java/org/apache/solr/request/SolrRequestInfo#getClientTimeZone().mjava","sourceNew":"  /** The TimeZone specified by the request, or null if none was specified */\n  public TimeZone getClientTimeZone() {    \n\n    if (tz == null)  {\n      String tzStr = req.getParams().get(CommonParams.TZ);\n      if (tzStr != null) {\n        tz = TimeZoneUtils.getTimeZone(tzStr);\n        if (null == tz) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                                  \"Solr JVM does not support TZ: \" + tzStr);\n        }\n      } \n    }\n    return tz;\n  }\n\n","sourceOld":"  /** The TimeZone specified by the request, or null if none was specified */\n  public TimeZone getClientTimeZone() {    \n\n    if (tz == null)  {\n      String tzStr = req.getParams().get(CommonParams.TZ);\n      if (tzStr != null) {\n        tz = TimeZoneUtils.getTimeZone(tzStr);\n        if (null == tz) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                                  \"Solr JVM does not support TZ: \" + tzStr);\n        }\n      } \n    }\n    return tz;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af3e10d8a1fbcc5c79b22f7477e79de467dd326c","date":1515178406,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SolrRequestInfo#getClientTimeZone().mjava","pathOld":"solr/core/src/java/org/apache/solr/request/SolrRequestInfo#getClientTimeZone().mjava","sourceNew":"  /** The TimeZone specified by the request, or null if none was specified */\n  public TimeZone getClientTimeZone() {\n    if (tz == null)  {\n      tz = TimeZoneUtils.parseTimezone(req.getParams().get(CommonParams.TZ));\n    }\n    return tz;\n  }\n\n","sourceOld":"  /** The TimeZone specified by the request, or null if none was specified */\n  public TimeZone getClientTimeZone() {    \n\n    if (tz == null)  {\n      String tzStr = req.getParams().get(CommonParams.TZ);\n      if (tzStr != null) {\n        tz = TimeZoneUtils.getTimeZone(tzStr);\n        if (null == tz) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                                  \"Solr JVM does not support TZ: \" + tzStr);\n        }\n      } \n    }\n    return tz;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/request/SolrRequestInfo#getClientTimeZone().mjava","pathOld":"solr/core/src/java/org/apache/solr/request/SolrRequestInfo#getClientTimeZone().mjava","sourceNew":"  /** The TimeZone specified by the request, or null if none was specified */\n  public TimeZone getClientTimeZone() {\n    if (tz == null)  {\n      tz = TimeZoneUtils.parseTimezone(req.getParams().get(CommonParams.TZ));\n    }\n    return tz;\n  }\n\n","sourceOld":"  /** The TimeZone specified by the request, or null if none was specified */\n  public TimeZone getClientTimeZone() {    \n\n    if (tz == null)  {\n      String tzStr = req.getParams().get(CommonParams.TZ);\n      if (tzStr != null) {\n        tz = TimeZoneUtils.getTimeZone(tzStr);\n        if (null == tz) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                                  \"Solr JVM does not support TZ: \" + tzStr);\n        }\n      } \n    }\n    return tz;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6857f8205f8c5b4ff39a54d8aebb4fdfb7cfb691","date":1516909549,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SolrRequestInfo#getClientTimeZone().mjava","pathOld":"solr/core/src/java/org/apache/solr/request/SolrRequestInfo#getClientTimeZone().mjava","sourceNew":"  /** The TimeZone specified by the request, or UTC if none was specified. */\n  public TimeZone getClientTimeZone() {\n    if (tz == null)  {\n      tz = TimeZoneUtils.parseTimezone(req.getParams().get(CommonParams.TZ));\n    }\n    return tz;\n  }\n\n","sourceOld":"  /** The TimeZone specified by the request, or null if none was specified */\n  public TimeZone getClientTimeZone() {\n    if (tz == null)  {\n      tz = TimeZoneUtils.parseTimezone(req.getParams().get(CommonParams.TZ));\n    }\n    return tz;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["19275ba31e621f6da1b83bf13af75233876fd3d4","af3e10d8a1fbcc5c79b22f7477e79de467dd326c"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["b3c7501e15f71c01b69ba22749b192827fa2019b","19275ba31e621f6da1b83bf13af75233876fd3d4"],"b3c7501e15f71c01b69ba22749b192827fa2019b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"af3e10d8a1fbcc5c79b22f7477e79de467dd326c":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["b3c7501e15f71c01b69ba22749b192827fa2019b"],"6857f8205f8c5b4ff39a54d8aebb4fdfb7cfb691":["b94236357aaa22b76c10629851fe4e376e0cea82"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6857f8205f8c5b4ff39a54d8aebb4fdfb7cfb691"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["6857f8205f8c5b4ff39a54d8aebb4fdfb7cfb691"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"af3e10d8a1fbcc5c79b22f7477e79de467dd326c":["b94236357aaa22b76c10629851fe4e376e0cea82"],"b3c7501e15f71c01b69ba22749b192827fa2019b":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b3c7501e15f71c01b69ba22749b192827fa2019b"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["b94236357aaa22b76c10629851fe4e376e0cea82","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","af3e10d8a1fbcc5c79b22f7477e79de467dd326c"],"6857f8205f8c5b4ff39a54d8aebb4fdfb7cfb691":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}