{"path":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPointDistanceQuery#testNegativeRadius().mjava","commits":[{"id":"94ee361295fb38310ac4d53cb4773d1622423d68","date":1456833885,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPointDistanceQuery#testNegativeRadius().mjava","pathOld":"/dev/null","sourceNew":"  /** negative distance queries are not allowed */\n  public void testNegativeRadius() {\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      LatLonPoint.newDistanceQuery(\"field\", 18, 19, -1);\n    });\n    assertTrue(expected.getMessage().contains(\"radiusMeters\"));\n    assertTrue(expected.getMessage().contains(\"is invalid\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPointDistanceQuery#testNegativeRadius().mjava","pathOld":"/dev/null","sourceNew":"  /** negative distance queries are not allowed */\n  public void testNegativeRadius() {\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      LatLonPoint.newDistanceQuery(\"field\", 18, 19, -1);\n    });\n    assertTrue(expected.getMessage().contains(\"radiusMeters\"));\n    assertTrue(expected.getMessage().contains(\"is invalid\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6c59bc551f4e523ce6a321280cc6733424fb824","date":1458837690,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/BaseGeoPointTestCase#testDistanceNegative().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPointDistanceQuery#testNegativeRadius().mjava","sourceNew":"  /** negative distance queries are not allowed */\n  public void testDistanceNegative() {\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      newDistanceQuery(\"field\", 18, 19, -1);\n    });\n    assertTrue(expected.getMessage().contains(\"radiusMeters\"));\n    assertTrue(expected.getMessage().contains(\"invalid\"));\n  }\n\n","sourceOld":"  /** negative distance queries are not allowed */\n  public void testNegativeRadius() {\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      LatLonPoint.newDistanceQuery(\"field\", 18, 19, -1);\n    });\n    assertTrue(expected.getMessage().contains(\"radiusMeters\"));\n    assertTrue(expected.getMessage().contains(\"is invalid\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"94ee361295fb38310ac4d53cb4773d1622423d68":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","94ee361295fb38310ac4d53cb4773d1622423d68"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d6c59bc551f4e523ce6a321280cc6733424fb824"],"d6c59bc551f4e523ce6a321280cc6733424fb824":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["94ee361295fb38310ac4d53cb4773d1622423d68","cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"94ee361295fb38310ac4d53cb4773d1622423d68":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["d6c59bc551f4e523ce6a321280cc6733424fb824"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"d6c59bc551f4e523ce6a321280cc6733424fb824":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}