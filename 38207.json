{"path":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeLeafBlockPackedValue(IndexOutput,int[],byte[],int).mjava","commits":[{"id":"16ffb58ba57f805651a528311c104f104d9f4573","date":1457861471,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeLeafBlockPackedValue(IndexOutput,int[],byte[],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeLeafBlockPackedValue(IndexOutput,int[],byte[]).mjava","sourceNew":"  protected void writeLeafBlockPackedValue(IndexOutput out, int[] commonPrefixLengths, byte[] bytes, int offset) throws IOException {\n    for(int dim=0;dim<numDims;dim++) {\n      int prefix = commonPrefixLengths[dim];\n      out.writeBytes(bytes, offset+dim*bytesPerDim+prefix, bytesPerDim-prefix);\n    }\n  }\n\n","sourceOld":"  protected void writeLeafBlockPackedValue(IndexOutput out, int[] commonPrefixLengths, byte[] bytes) throws IOException {\n    for(int dim=0;dim<numDims;dim++) {\n      int prefix = commonPrefixLengths[dim];\n      out.writeBytes(bytes, dim*bytesPerDim+prefix, bytesPerDim-prefix);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b9028cf27fe30db95667505bb92ecaee8fa3aef7","date":1457861734,"type":1,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeLeafBlockPackedValue(IndexOutput,int[],byte[],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeLeafBlockPackedValue(IndexOutput,int[],byte[]).mjava","sourceNew":"  protected void writeLeafBlockPackedValue(IndexOutput out, int[] commonPrefixLengths, byte[] bytes, int offset) throws IOException {\n    for(int dim=0;dim<numDims;dim++) {\n      int prefix = commonPrefixLengths[dim];\n      out.writeBytes(bytes, offset+dim*bytesPerDim+prefix, bytesPerDim-prefix);\n    }\n  }\n\n","sourceOld":"  protected void writeLeafBlockPackedValue(IndexOutput out, int[] commonPrefixLengths, byte[] bytes) throws IOException {\n    for(int dim=0;dim<numDims;dim++) {\n      int prefix = commonPrefixLengths[dim];\n      out.writeBytes(bytes, dim*bytesPerDim+prefix, bytesPerDim-prefix);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3ca40baa99f9578eb8408ee5b9177f7ffe6f65d6","date":1468339076,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeLeafBlockPackedValue(IndexOutput,int[],byte[],int).mjava","sourceNew":null,"sourceOld":"  protected void writeLeafBlockPackedValue(IndexOutput out, int[] commonPrefixLengths, byte[] bytes, int offset) throws IOException {\n    for(int dim=0;dim<numDims;dim++) {\n      int prefix = commonPrefixLengths[dim];\n      out.writeBytes(bytes, offset+dim*bytesPerDim+prefix, bytesPerDim-prefix);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeLeafBlockPackedValue(IndexOutput,int[],byte[],int).mjava","sourceNew":null,"sourceOld":"  protected void writeLeafBlockPackedValue(IndexOutput out, int[] commonPrefixLengths, byte[] bytes, int offset) throws IOException {\n    for(int dim=0;dim<numDims;dim++) {\n      int prefix = commonPrefixLengths[dim];\n      out.writeBytes(bytes, offset+dim*bytesPerDim+prefix, bytesPerDim-prefix);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"16ffb58ba57f805651a528311c104f104d9f4573":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b9028cf27fe30db95667505bb92ecaee8fa3aef7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","16ffb58ba57f805651a528311c104f104d9f4573"],"3ca40baa99f9578eb8408ee5b9177f7ffe6f65d6":["b9028cf27fe30db95667505bb92ecaee8fa3aef7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["b9028cf27fe30db95667505bb92ecaee8fa3aef7","3ca40baa99f9578eb8408ee5b9177f7ffe6f65d6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3ca40baa99f9578eb8408ee5b9177f7ffe6f65d6"]},"commit2Childs":{"16ffb58ba57f805651a528311c104f104d9f4573":["b9028cf27fe30db95667505bb92ecaee8fa3aef7"],"b9028cf27fe30db95667505bb92ecaee8fa3aef7":["3ca40baa99f9578eb8408ee5b9177f7ffe6f65d6","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["16ffb58ba57f805651a528311c104f104d9f4573","b9028cf27fe30db95667505bb92ecaee8fa3aef7"],"3ca40baa99f9578eb8408ee5b9177f7ffe6f65d6":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}