{"path":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#totalBytesSize().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#totalBytesSize().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/MergePolicy.OneMerge#totalBytesSize().mjava","sourceNew":"    /**\n     * Returns the total size in bytes of this merge. Note that this does not\n     * indicate the size of the merged segment, but the input total size.\n     * */\n    public long totalBytesSize() throws IOException {\n      long total = 0;\n      for (SegmentInfo info : segments) {\n        total += info.sizeInBytes();\n      }\n      return total;\n    }\n\n","sourceOld":"    /**\n     * Returns the total size in bytes of this merge. Note that this does not\n     * indicate the size of the merged segment, but the input total size.\n     * */\n    public long totalBytesSize() throws IOException {\n      long total = 0;\n      for (SegmentInfo info : segments) {\n        total += info.sizeInBytes();\n      }\n      return total;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d153abcf92dc5329d98571a8c3035df9bd80648","date":1337702630,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#totalBytesSize().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#totalBytesSize().mjava","sourceNew":"    /**\n     * Returns the total size in bytes of this merge. Note that this does not\n     * indicate the size of the merged segment, but the input total size.\n     * */\n    public long totalBytesSize() throws IOException {\n      long total = 0;\n      for (SegmentInfoPerCommit info : segments) {\n        total += info.info.sizeInBytes();\n      }\n      return total;\n    }\n\n","sourceOld":"    /**\n     * Returns the total size in bytes of this merge. Note that this does not\n     * indicate the size of the merged segment, but the input total size.\n     * */\n    public long totalBytesSize() throws IOException {\n      long total = 0;\n      for (SegmentInfo info : segments) {\n        total += info.sizeInBytes();\n      }\n      return total;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#totalBytesSize().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#totalBytesSize().mjava","sourceNew":"    /**\n     * Returns the total size in bytes of this merge. Note that this does not\n     * indicate the size of the merged segment, but the input total size.\n     * */\n    public long totalBytesSize() throws IOException {\n      long total = 0;\n      for (SegmentInfoPerCommit info : segments) {\n        total += info.info.sizeInBytes();\n      }\n      return total;\n    }\n\n","sourceOld":"    /**\n     * Returns the total size in bytes of this merge. Note that this does not\n     * indicate the size of the merged segment, but the input total size.\n     * */\n    public long totalBytesSize() throws IOException {\n      long total = 0;\n      for (SegmentInfo info : segments) {\n        total += info.sizeInBytes();\n      }\n      return total;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b47dabfbaff6449eedcd4321017ab2f73dfa06ab","date":1360797548,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#totalBytesSize().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#totalBytesSize().mjava","sourceNew":"    /**\n     * Returns the total size in bytes of this merge. Note that this does not\n     * indicate the size of the merged segment, but the\n     * input total size. This is only set once the merge is\n     * initialized by IndexWriter.\n     */\n    public long totalBytesSize() throws IOException {\n      return totalMergeBytes;\n    }\n\n","sourceOld":"    /**\n     * Returns the total size in bytes of this merge. Note that this does not\n     * indicate the size of the merged segment, but the input total size.\n     * */\n    public long totalBytesSize() throws IOException {\n      long total = 0;\n      for (SegmentInfoPerCommit info : segments) {\n        total += info.info.sizeInBytes();\n      }\n      return total;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b41f996b22bd5518650f897d050088ff808ec03","date":1360969107,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#totalBytesSize().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#totalBytesSize().mjava","sourceNew":"    /**\n     * Returns the total size in bytes of this merge. Note that this does not\n     * indicate the size of the merged segment, but the\n     * input total size. This is only set once the merge is\n     * initialized by IndexWriter.\n     */\n    public long totalBytesSize() throws IOException {\n      return totalMergeBytes;\n    }\n\n","sourceOld":"    /**\n     * Returns the total size in bytes of this merge. Note that this does not\n     * indicate the size of the merged segment, but the input total size.\n     * */\n    public long totalBytesSize() throws IOException {\n      long total = 0;\n      for (SegmentInfoPerCommit info : segments) {\n        total += info.info.sizeInBytes();\n      }\n      return total;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ae87c7be37e537f40fa3bb2c35fa4a368d12a72","date":1523453225,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#totalBytesSize().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#totalBytesSize().mjava","sourceNew":"    /**\n     * Returns the total size in bytes of this merge. Note that this does not\n     * indicate the size of the merged segment, but the\n     * input total size. This is only set once the merge is\n     * initialized by IndexWriter.\n     */\n    public long totalBytesSize() {\n      return totalMergeBytes;\n    }\n\n","sourceOld":"    /**\n     * Returns the total size in bytes of this merge. Note that this does not\n     * indicate the size of the merged segment, but the\n     * input total size. This is only set once the merge is\n     * initialized by IndexWriter.\n     */\n    public long totalBytesSize() throws IOException {\n      return totalMergeBytes;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43345f1452f9510f8aaadae6156fe0c834e7d957","date":1523483670,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#totalBytesSize().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergePolicy.OneMerge#totalBytesSize().mjava","sourceNew":"    /**\n     * Returns the total size in bytes of this merge. Note that this does not\n     * indicate the size of the merged segment, but the\n     * input total size. This is only set once the merge is\n     * initialized by IndexWriter.\n     */\n    public long totalBytesSize() {\n      return totalMergeBytes;\n    }\n\n","sourceOld":"    /**\n     * Returns the total size in bytes of this merge. Note that this does not\n     * indicate the size of the merged segment, but the\n     * input total size. This is only set once the merge is\n     * initialized by IndexWriter.\n     */\n    public long totalBytesSize() throws IOException {\n      return totalMergeBytes;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","9d153abcf92dc5329d98571a8c3035df9bd80648"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9ae87c7be37e537f40fa3bb2c35fa4a368d12a72":["b47dabfbaff6449eedcd4321017ab2f73dfa06ab"],"3b41f996b22bd5518650f897d050088ff808ec03":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","b47dabfbaff6449eedcd4321017ab2f73dfa06ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9d153abcf92dc5329d98571a8c3035df9bd80648":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"43345f1452f9510f8aaadae6156fe0c834e7d957":["b47dabfbaff6449eedcd4321017ab2f73dfa06ab","9ae87c7be37e537f40fa3bb2c35fa4a368d12a72"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["43345f1452f9510f8aaadae6156fe0c834e7d957"],"b47dabfbaff6449eedcd4321017ab2f73dfa06ab":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"]},"commit2Childs":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["3b41f996b22bd5518650f897d050088ff808ec03","b47dabfbaff6449eedcd4321017ab2f73dfa06ab"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","9d153abcf92dc5329d98571a8c3035df9bd80648"],"9ae87c7be37e537f40fa3bb2c35fa4a368d12a72":["43345f1452f9510f8aaadae6156fe0c834e7d957"],"3b41f996b22bd5518650f897d050088ff808ec03":[],"9d153abcf92dc5329d98571a8c3035df9bd80648":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"43345f1452f9510f8aaadae6156fe0c834e7d957":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b47dabfbaff6449eedcd4321017ab2f73dfa06ab":["9ae87c7be37e537f40fa3bb2c35fa4a368d12a72","3b41f996b22bd5518650f897d050088ff808ec03","43345f1452f9510f8aaadae6156fe0c834e7d957"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3b41f996b22bd5518650f897d050088ff808ec03","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}