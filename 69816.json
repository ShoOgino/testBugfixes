{"path":"lucene/backwards/src/java/org/apache/lucene/analysis/WordlistLoader#getStemDict(File).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/analysis/WordlistLoader#getStemDict(File).mjava","pathOld":"backwards/src/java/org/apache/lucene/analysis/WordlistLoader#getStemDict(File).mjava","sourceNew":"  /**\n   * Reads a stem dictionary. Each line contains:\n   * <pre>word<b>\\t</b>stem</pre>\n   * (i.e. two tab seperated words)\n   *\n   * @return stem dictionary that overrules the stemming algorithm\n   * @throws IOException \n   */\n  public static HashMap<String, String> getStemDict(File wordstemfile) throws IOException {\n    if (wordstemfile == null)\n      throw new NullPointerException(\"wordstemfile may not be null\");\n    HashMap<String, String> result = new HashMap<String, String>();\n    BufferedReader br = null;\n    FileReader fr = null;\n    try {\n      fr = new FileReader(wordstemfile);\n      br = new BufferedReader(fr);\n      String line;\n      while ((line = br.readLine()) != null) {\n        String[] wordstem = line.split(\"\\t\", 2);\n        result.put(wordstem[0], wordstem[1]);\n      }\n    } finally {\n      if (fr != null)\n        fr.close();\n      if (br != null)\n        br.close();\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Reads a stem dictionary. Each line contains:\n   * <pre>word<b>\\t</b>stem</pre>\n   * (i.e. two tab seperated words)\n   *\n   * @return stem dictionary that overrules the stemming algorithm\n   * @throws IOException \n   */\n  public static HashMap<String, String> getStemDict(File wordstemfile) throws IOException {\n    if (wordstemfile == null)\n      throw new NullPointerException(\"wordstemfile may not be null\");\n    HashMap<String, String> result = new HashMap<String, String>();\n    BufferedReader br = null;\n    FileReader fr = null;\n    try {\n      fr = new FileReader(wordstemfile);\n      br = new BufferedReader(fr);\n      String line;\n      while ((line = br.readLine()) != null) {\n        String[] wordstem = line.split(\"\\t\", 2);\n        result.put(wordstem[0], wordstem[1]);\n      }\n    } finally {\n      if (fr != null)\n        fr.close();\n      if (br != null)\n        br.close();\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/analysis/WordlistLoader#getStemDict(File).mjava","sourceNew":null,"sourceOld":"  /**\n   * Reads a stem dictionary. Each line contains:\n   * <pre>word<b>\\t</b>stem</pre>\n   * (i.e. two tab seperated words)\n   *\n   * @return stem dictionary that overrules the stemming algorithm\n   * @throws IOException \n   */\n  public static HashMap<String, String> getStemDict(File wordstemfile) throws IOException {\n    if (wordstemfile == null)\n      throw new NullPointerException(\"wordstemfile may not be null\");\n    HashMap<String, String> result = new HashMap<String, String>();\n    BufferedReader br = null;\n    FileReader fr = null;\n    try {\n      fr = new FileReader(wordstemfile);\n      br = new BufferedReader(fr);\n      String line;\n      while ((line = br.readLine()) != null) {\n        String[] wordstem = line.split(\"\\t\", 2);\n        result.put(wordstem[0], wordstem[1]);\n      }\n    } finally {\n      if (fr != null)\n        fr.close();\n      if (br != null)\n        br.close();\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}