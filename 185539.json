{"path":"solr/core/src/java/org/apache/solr/pkg/PackageAPI.Edit#refresh(SolrQueryRequest,SolrQueryResponse,PayloadObj[String]).mjava","commits":[{"id":"954ae83b7dfacaa33d48ea056448ae11f7745a93","date":1571867711,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/pkg/PackageAPI.Edit#refresh(SolrQueryRequest,SolrQueryResponse,PayloadObj[String]).mjava","pathOld":"/dev/null","sourceNew":"    @Command(name = \"refresh\")\n    public void refresh(SolrQueryRequest req, SolrQueryResponse rsp, PayloadObj<String> payload) {\n      String p = payload.get();\n      if (p == null) {\n        payload.addError(\"Package null\");\n        return;\n      }\n      PackageLoader.Package pkg = coreContainer.getPackageLoader().getPackage(p);\n      if (pkg == null) {\n        payload.addError(\"No such package: \" + p);\n        return;\n      }\n\n      for (String s : coreContainer.getPackageStoreAPI().shuffledNodes()) {\n        Utils.executeGET(coreContainer.getUpdateShardHandler().getDefaultHttpClient(),\n            coreContainer.getZkController().zkStateReader.getBaseUrlForNodeName(s).replace(\"/solr\", \"/api\") + \"/cluster/package?wt=javabin&omitHeader=true&refreshPackage=\" + p,\n            Utils.JAVABINCONSUMER);\n      }\n\n\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"215a3569e5c9b0005e2e489967978f7bd6db2af8","date":1574029800,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/pkg/PackageAPI.Edit#refresh(SolrQueryRequest,SolrQueryResponse,PayloadObj[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/pkg/PackageAPI.Edit#refresh(SolrQueryRequest,SolrQueryResponse,PayloadObj[String]).mjava","sourceNew":"    @Command(name = \"refresh\")\n    public void refresh(SolrQueryRequest req, SolrQueryResponse rsp, PayloadObj<String> payload) {\n      String p = payload.get();\n      if (p == null) {\n        payload.addError(\"Package null\");\n        return;\n      }\n      PackageLoader.Package pkg = coreContainer.getPackageLoader().getPackage(p);\n      if (pkg == null) {\n        payload.addError(\"No such package: \" + p);\n        return;\n      }\n      //first refresh my own\n      packageLoader.notifyListeners(p);\n      for (String s : coreContainer.getPackageStoreAPI().shuffledNodes()) {\n        Utils.executeGET(coreContainer.getUpdateShardHandler().getDefaultHttpClient(),\n            coreContainer.getZkController().zkStateReader.getBaseUrlForNodeName(s).replace(\"/solr\", \"/api\") + \"/cluster/package?wt=javabin&omitHeader=true&refreshPackage=\" + p,\n            Utils.JAVABINCONSUMER);\n      }\n\n\n    }\n\n","sourceOld":"    @Command(name = \"refresh\")\n    public void refresh(SolrQueryRequest req, SolrQueryResponse rsp, PayloadObj<String> payload) {\n      String p = payload.get();\n      if (p == null) {\n        payload.addError(\"Package null\");\n        return;\n      }\n      PackageLoader.Package pkg = coreContainer.getPackageLoader().getPackage(p);\n      if (pkg == null) {\n        payload.addError(\"No such package: \" + p);\n        return;\n      }\n\n      for (String s : coreContainer.getPackageStoreAPI().shuffledNodes()) {\n        Utils.executeGET(coreContainer.getUpdateShardHandler().getDefaultHttpClient(),\n            coreContainer.getZkController().zkStateReader.getBaseUrlForNodeName(s).replace(\"/solr\", \"/api\") + \"/cluster/package?wt=javabin&omitHeader=true&refreshPackage=\" + p,\n            Utils.JAVABINCONSUMER);\n      }\n\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fbcc7055e8c549bce2c868275542860dba71a0e","date":1593065764,"type":5,"author":"noble","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/pkg/PackageAPI.Edit#refresh(PayloadObj[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/pkg/PackageAPI.Edit#refresh(SolrQueryRequest,SolrQueryResponse,PayloadObj[String]).mjava","sourceNew":"    @Command(name = \"refresh\")\n    public void refresh(PayloadObj<String> payload) {\n      String p = payload.get();\n      if (p == null) {\n        payload.addError(\"Package null\");\n        return;\n      }\n      PackageLoader.Package pkg = coreContainer.getPackageLoader().getPackage(p);\n      if (pkg == null) {\n        payload.addError(\"No such package: \" + p);\n        return;\n      }\n      //first refresh my own\n      packageLoader.notifyListeners(p);\n      for (String s : coreContainer.getPackageStoreAPI().shuffledNodes()) {\n        Utils.executeGET(coreContainer.getUpdateShardHandler().getDefaultHttpClient(),\n            coreContainer.getZkController().zkStateReader.getBaseUrlForNodeName(s).replace(\"/solr\", \"/api\") + \"/cluster/package?wt=javabin&omitHeader=true&refreshPackage=\" + p,\n            Utils.JAVABINCONSUMER);\n      }\n    }\n\n","sourceOld":"    @Command(name = \"refresh\")\n    public void refresh(SolrQueryRequest req, SolrQueryResponse rsp, PayloadObj<String> payload) {\n      String p = payload.get();\n      if (p == null) {\n        payload.addError(\"Package null\");\n        return;\n      }\n      PackageLoader.Package pkg = coreContainer.getPackageLoader().getPackage(p);\n      if (pkg == null) {\n        payload.addError(\"No such package: \" + p);\n        return;\n      }\n      //first refresh my own\n      packageLoader.notifyListeners(p);\n      for (String s : coreContainer.getPackageStoreAPI().shuffledNodes()) {\n        Utils.executeGET(coreContainer.getUpdateShardHandler().getDefaultHttpClient(),\n            coreContainer.getZkController().zkStateReader.getBaseUrlForNodeName(s).replace(\"/solr\", \"/api\") + \"/cluster/package?wt=javabin&omitHeader=true&refreshPackage=\" + p,\n            Utils.JAVABINCONSUMER);\n      }\n\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9fbcc7055e8c549bce2c868275542860dba71a0e":["215a3569e5c9b0005e2e489967978f7bd6db2af8"],"954ae83b7dfacaa33d48ea056448ae11f7745a93":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"215a3569e5c9b0005e2e489967978f7bd6db2af8":["954ae83b7dfacaa33d48ea056448ae11f7745a93"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9fbcc7055e8c549bce2c868275542860dba71a0e"]},"commit2Childs":{"9fbcc7055e8c549bce2c868275542860dba71a0e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"954ae83b7dfacaa33d48ea056448ae11f7745a93":["215a3569e5c9b0005e2e489967978f7bd6db2af8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["954ae83b7dfacaa33d48ea056448ae11f7745a93"],"215a3569e5c9b0005e2e489967978f7bd6db2af8":["9fbcc7055e8c549bce2c868275542860dba71a0e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}