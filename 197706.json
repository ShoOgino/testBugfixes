{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/WordnetSynonymParser#addInternal(CharsRef[],int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/WordnetSynonymParser#addInternal(CharsRef[],int).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/synonym/WordnetSynonymParser#addInternal(CharsRef[],int).mjava","sourceNew":"  private void addInternal(CharsRef synset[], int size) throws IOException {\n    if (size <= 1) {\n      return; // nothing to do\n    }\n    \n    if (expand) {\n      for (int i = 0; i < size; i++) {\n        for (int j = 0; j < size; j++) {\n          add(synset[i], synset[j], false);\n        }\n      }\n    } else {\n      for (int i = 0; i < size; i++) {\n        add(synset[i], synset[0], false);\n      }\n    }\n  }\n\n","sourceOld":"  private void addInternal(CharsRef synset[], int size) throws IOException {\n    if (size <= 1) {\n      return; // nothing to do\n    }\n    \n    if (expand) {\n      for (int i = 0; i < size; i++) {\n        for (int j = 0; j < size; j++) {\n          add(synset[i], synset[j], false);\n        }\n      }\n    } else {\n      for (int i = 0; i < size; i++) {\n        add(synset[i], synset[0], false);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/WordnetSynonymParser#addInternal(CharsRef[],int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/WordnetSynonymParser#addInternal(CharsRef[],int).mjava","sourceNew":"  private void addInternal(CharsRef synset[], int size) {\n    if (size <= 1) {\n      return; // nothing to do\n    }\n    \n    if (expand) {\n      for (int i = 0; i < size; i++) {\n        for (int j = 0; j < size; j++) {\n          add(synset[i], synset[j], false);\n        }\n      }\n    } else {\n      for (int i = 0; i < size; i++) {\n        add(synset[i], synset[0], false);\n      }\n    }\n  }\n\n","sourceOld":"  private void addInternal(CharsRef synset[], int size) throws IOException {\n    if (size <= 1) {\n      return; // nothing to do\n    }\n    \n    if (expand) {\n      for (int i = 0; i < size; i++) {\n        for (int j = 0; j < size; j++) {\n          add(synset[i], synset[j], false);\n        }\n      }\n    } else {\n      for (int i = 0; i < size; i++) {\n        add(synset[i], synset[0], false);\n      }\n    }\n  }\n\n","bugFix":["44d6f0ab53c1962856b9f48dedb7a2a6cc18905c"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/WordnetSynonymParser#addInternal(CharsRef[],int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/WordnetSynonymParser#addInternal(CharsRef[],int).mjava","sourceNew":"  private void addInternal(CharsRef synset[], int size) {\n    if (size <= 1) {\n      return; // nothing to do\n    }\n    \n    if (expand) {\n      for (int i = 0; i < size; i++) {\n        for (int j = 0; j < size; j++) {\n          add(synset[i], synset[j], false);\n        }\n      }\n    } else {\n      for (int i = 0; i < size; i++) {\n        add(synset[i], synset[0], false);\n      }\n    }\n  }\n\n","sourceOld":"  private void addInternal(CharsRef synset[], int size) throws IOException {\n    if (size <= 1) {\n      return; // nothing to do\n    }\n    \n    if (expand) {\n      for (int i = 0; i < size; i++) {\n        for (int j = 0; j < size; j++) {\n          add(synset[i], synset[j], false);\n        }\n      }\n    } else {\n      for (int i = 0; i < size; i++) {\n        add(synset[i], synset[0], false);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8adcebbdb54c09c53799ed05f287c1a1e04ca010","date":1573659646,"type":3,"author":"Christoph BÃ¼scher","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/WordnetSynonymParser#addInternal(CharsRef[],int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/WordnetSynonymParser#addInternal(CharsRef[],int).mjava","sourceNew":"  private void addInternal(CharsRef synset[], int size) {\n    if (size <= 1) {\n      return; // nothing to do\n    }\n    \n    if (expand) {\n      for (int i = 0; i < size; i++) {\n        for (int j = 0; j < size; j++) {\n          if (i != j) {\n            add(synset[i], synset[j], true);\n          }\n        }\n      }\n    } else {\n      for (int i = 0; i < size; i++) {\n        add(synset[i], synset[0], false);\n      }\n    }\n  }\n\n","sourceOld":"  private void addInternal(CharsRef synset[], int size) {\n    if (size <= 1) {\n      return; // nothing to do\n    }\n    \n    if (expand) {\n      for (int i = 0; i < size; i++) {\n        for (int j = 0; j < size; j++) {\n          add(synset[i], synset[j], false);\n        }\n      }\n    } else {\n      for (int i = 0; i < size; i++) {\n        add(synset[i], synset[0], false);\n      }\n    }\n  }\n\n","bugFix":["44d6f0ab53c1962856b9f48dedb7a2a6cc18905c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8adcebbdb54c09c53799ed05f287c1a1e04ca010":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8adcebbdb54c09c53799ed05f287c1a1e04ca010"]},"commit2Childs":{"8adcebbdb54c09c53799ed05f287c1a1e04ca010":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["8adcebbdb54c09c53799ed05f287c1a1e04ca010","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}