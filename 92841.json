{"path":"sandbox/contributions/webcrawler-LARM/src/hplb/xml/Tokenizer#isNameChar(int).mjava","commits":[{"id":"05d36e0b328ec96237035fbcca240e73631396e5","date":1020520725,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/hplb/xml/Tokenizer#isNameChar(int).mjava","pathOld":"/dev/null","sourceNew":"//    public static final boolean isCtlOrTspecial(int c)\n//    {\n//        return (c < 256 ? isCtlOrTSpecial[c] : false);\n//    }\n//\n//    private static final boolean[] isNameChar =\n//    {\n//        /* 0 */     false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 14 */    false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 28 */    false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 42 */    false, false, false, true , true , false, true , true , true , true , true , true , true , true ,\n//        /* 56 */    true , true , false, false, false, false, false, false, false, true , true , true , true , true ,\n//        /* 70 */    true , true , true , true , true , true , true , true , true , true , true , true , true , true ,\n//        /* 84 */    true , true , true , true , true , true , true , false, false, false, false, true , false, true ,\n//        /* 98 */    true , true , true , true , true , true , true , true , true , true , true , true , true , true ,\n//        /* 112 */   true , true , true , true , true , true , true , true , true , true , true , false, false, false,\n//        /* 126 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 140 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 154 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 168 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 182 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 196 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 210 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 224 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 238 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 252 */   false, false, false, false\n//    };\n//    public static final boolean isNameChar(int c)\n//    {\n//        return (c < 256 ? isNameChar[c] : false);\n//    }\n//\n    /*\n    // I don't think this is a very standard definition of what can\n    // go into tag and attribute names.*/\n    public static final boolean isNameChar(int c) {\n        return ('a' <= c && c <= 'z') ||\n               ('A' <= c && c <= 'Z') ||\n               ('0' <= c && c <= '9') ||\n               c == '.' || c == '-' || c == '_';\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e","date":1022957716,"type":4,"author":"cmarschner","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/src/hplb/xml/Tokenizer#isNameChar(int).mjava","sourceNew":null,"sourceOld":"//    public static final boolean isCtlOrTspecial(int c)\n//    {\n//        return (c < 256 ? isCtlOrTSpecial[c] : false);\n//    }\n//\n//    private static final boolean[] isNameChar =\n//    {\n//        /* 0 */     false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 14 */    false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 28 */    false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 42 */    false, false, false, true , true , false, true , true , true , true , true , true , true , true ,\n//        /* 56 */    true , true , false, false, false, false, false, false, false, true , true , true , true , true ,\n//        /* 70 */    true , true , true , true , true , true , true , true , true , true , true , true , true , true ,\n//        /* 84 */    true , true , true , true , true , true , true , false, false, false, false, true , false, true ,\n//        /* 98 */    true , true , true , true , true , true , true , true , true , true , true , true , true , true ,\n//        /* 112 */   true , true , true , true , true , true , true , true , true , true , true , false, false, false,\n//        /* 126 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 140 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 154 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 168 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 182 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 196 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 210 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 224 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 238 */   false, false, false, false, false, false, false, false, false, false, false, false, false, false,\n//        /* 252 */   false, false, false, false\n//    };\n//    public static final boolean isNameChar(int c)\n//    {\n//        return (c < 256 ? isNameChar[c] : false);\n//    }\n//\n    /*\n    // I don't think this is a very standard definition of what can\n    // go into tag and attribute names.*/\n    public static final boolean isNameChar(int c) {\n        return ('a' <= c && c <= 'z') ||\n               ('A' <= c && c <= 'Z') ||\n               ('0' <= c && c <= '9') ||\n               c == '.' || c == '-' || c == '_';\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e":["05d36e0b328ec96237035fbcca240e73631396e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05d36e0b328ec96237035fbcca240e73631396e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e"]},"commit2Childs":{"12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05d36e0b328ec96237035fbcca240e73631396e5"],"05d36e0b328ec96237035fbcca240e73631396e5":["12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}