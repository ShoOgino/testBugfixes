{"path":"solr/core/src/java/org/apache/solr/logging/log4j2/Log4j2Watcher#registerListener(ListenerConfig).mjava","commits":[{"id":"93baf46bd12096e0de407258b3b32cfaaf58e448","date":1522030569,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/logging/log4j2/Log4j2Watcher#registerListener(ListenerConfig).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void registerListener(ListenerConfig cfg) {\n    if (history != null)\n      throw new IllegalStateException(\"History already registered\");\n\n    history = new CircularList<LogEvent>(cfg.size);\n\n    Level threshold = (cfg.threshold != null) ? Level.toLevel(cfg.threshold) : Level.WARN;\n    ThresholdFilter filter = ThresholdFilter.createFilter(threshold, Filter.Result.ACCEPT, Filter.Result.DENY);\n\n    // If there's already an appender like this, remove it\n    LoggerContext ctx = (LoggerContext) LogManager.getContext(false);\n    LoggerConfig config = getLoggerConfig(ctx, LoggerInfo.ROOT_NAME);\n\n    appender = new Log4j2Appender(this, filter, threshold); // \"Log4j2WatcherAppender\"\n\n    config.removeAppender(appender.getName());\n\n    if (!appender.isStarted())\n      appender.start();\n\n    config.addAppender(appender, threshold, filter);\n    ctx.updateLoggers();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f67a921f6ec5ab488ce397cf05f95fcd8ce631b6","date":1522059649,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/logging/log4j2/Log4j2Watcher#registerListener(ListenerConfig).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void registerListener(ListenerConfig cfg) {\n    if (history != null)\n      throw new IllegalStateException(\"History already registered\");\n\n    history = new CircularList<LogEvent>(cfg.size);\n\n    Level threshold = (cfg.threshold != null) ? Level.toLevel(cfg.threshold) : Level.WARN;\n    ThresholdFilter filter = ThresholdFilter.createFilter(threshold, Filter.Result.ACCEPT, Filter.Result.DENY);\n\n    // If there's already an appender like this, remove it\n    LoggerContext ctx = (LoggerContext) LogManager.getContext(false);\n    LoggerConfig config = getLoggerConfig(ctx, LoggerInfo.ROOT_NAME);\n\n    appender = new Log4j2Appender(this, filter, threshold); // \"Log4j2WatcherAppender\"\n\n    config.removeAppender(appender.getName());\n\n    if (!appender.isStarted())\n      appender.start();\n\n    config.addAppender(appender, threshold, filter);\n    ctx.updateLoggers();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"93baf46bd12096e0de407258b3b32cfaaf58e448":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f67a921f6ec5ab488ce397cf05f95fcd8ce631b6"],"f67a921f6ec5ab488ce397cf05f95fcd8ce631b6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","93baf46bd12096e0de407258b3b32cfaaf58e448"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["93baf46bd12096e0de407258b3b32cfaaf58e448","f67a921f6ec5ab488ce397cf05f95fcd8ce631b6"],"93baf46bd12096e0de407258b3b32cfaaf58e448":["f67a921f6ec5ab488ce397cf05f95fcd8ce631b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f67a921f6ec5ab488ce397cf05f95fcd8ce631b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}