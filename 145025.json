{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene45/Lucene45RWDocValuesFormat#fieldsConsumer(SegmentWriteState).mjava","commits":[{"id":"f0106fc8bd579fa78caf3372887b2d50907b5635","date":1402916839,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene45/Lucene45RWDocValuesFormat#fieldsConsumer(SegmentWriteState).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocValuesConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n    if (LuceneTestCase.OLD_FORMAT_IMPERSONATION_IS_ACTIVE) {\n      return new Lucene45DocValuesConsumer(state, DATA_CODEC, DATA_EXTENSION, META_CODEC, META_EXTENSION) {\n        @Override\n        void checkCanWrite(FieldInfo field) {\n           // allow writing all fields \n        }\n      };\n    } else {\n      return super.fieldsConsumer(state);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6f080a2ab37c464dd98db173f6cbf10dc74f211","date":1402946779,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene45/Lucene45RWDocValuesFormat#fieldsConsumer(SegmentWriteState).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocValuesConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n    if (LuceneTestCase.OLD_FORMAT_IMPERSONATION_IS_ACTIVE) {\n      return new Lucene45DocValuesConsumer(state, DATA_CODEC, DATA_EXTENSION, META_CODEC, META_EXTENSION) {\n        @Override\n        void checkCanWrite(FieldInfo field) {\n           // allow writing all fields \n        }\n      };\n    } else {\n      return super.fieldsConsumer(state);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene45/Lucene45RWDocValuesFormat#fieldsConsumer(SegmentWriteState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene45/Lucene45RWDocValuesFormat#fieldsConsumer(SegmentWriteState).mjava","sourceNew":"  @Override\n  public DocValuesConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n    if (LuceneTestCase.OLD_FORMAT_IMPERSONATION_IS_ACTIVE) {\n      return new Lucene45DocValuesConsumer(state, DATA_CODEC, DATA_EXTENSION, META_CODEC, META_EXTENSION) {\n        @Override\n        void checkCanWrite(FieldInfo field) {\n           // allow writing all fields \n        }\n      };\n    } else {\n      return super.fieldsConsumer(state);\n    }\n  }\n\n","sourceOld":"  @Override\n  public DocValuesConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n    if (LuceneTestCase.OLD_FORMAT_IMPERSONATION_IS_ACTIVE) {\n      return new Lucene45DocValuesConsumer(state, DATA_CODEC, DATA_EXTENSION, META_CODEC, META_EXTENSION) {\n        @Override\n        void checkCanWrite(FieldInfo field) {\n           // allow writing all fields \n        }\n      };\n    } else {\n      return super.fieldsConsumer(state);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene45/Lucene45RWDocValuesFormat#fieldsConsumer(SegmentWriteState).mjava","sourceNew":null,"sourceOld":"  @Override\n  public DocValuesConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n    if (LuceneTestCase.OLD_FORMAT_IMPERSONATION_IS_ACTIVE) {\n      return new Lucene45DocValuesConsumer(state, DATA_CODEC, DATA_EXTENSION, META_CODEC, META_EXTENSION) {\n        @Override\n        void checkCanWrite(FieldInfo field) {\n           // allow writing all fields \n        }\n      };\n    } else {\n      return super.fieldsConsumer(state);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["f0106fc8bd579fa78caf3372887b2d50907b5635"],"f0106fc8bd579fa78caf3372887b2d50907b5635":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0106fc8bd579fa78caf3372887b2d50907b5635"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["f0106fc8bd579fa78caf3372887b2d50907b5635","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f0106fc8bd579fa78caf3372887b2d50907b5635","c6f080a2ab37c464dd98db173f6cbf10dc74f211"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"f0106fc8bd579fa78caf3372887b2d50907b5635":["4cc45c615dbb82bf79d5f9550286098367874fbf","c6f080a2ab37c464dd98db173f6cbf10dc74f211","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}