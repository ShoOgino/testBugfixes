{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ConnectionImpl#ConnectionImpl(String,String,String,Properties).mjava","commits":[{"id":"5d70b751e35173c43ca80385daa4642aedd91a55","date":1452882611,"type":1,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ConnectionImpl#ConnectionImpl(String,String,String,Properties).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ConnectionImpl#ConnectionImpl(String,String,Properties).mjava","sourceNew":"  ConnectionImpl(String url, String zkHost, String collection, Properties props) {\n    this.url = url;\n    this.client = sqlSolrClientCache.getCloudSolrClient(zkHost);\n    this.collection = collection;\n    this.props = props;\n  }\n\n","sourceOld":"  ConnectionImpl(String zkHost, String collection, Properties props) {\n    this.client = sqlSolrClientCache.getCloudSolrClient(zkHost);\n    this.collection = collection;\n    this.props = props;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bf38d05ea0037f06f6e05ed747948f19a746d3c","date":1453230855,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ConnectionImpl#ConnectionImpl(String,String,String,Properties).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ConnectionImpl#ConnectionImpl(String,String,String,Properties).mjava","sourceNew":"  ConnectionImpl(String url, String zkHost, String collection, Properties properties) {\n    this.url = url;\n    this.client = solrClientCache.getCloudSolrClient(zkHost);\n    this.collection = collection;\n    this.properties = properties;\n  }\n\n","sourceOld":"  ConnectionImpl(String url, String zkHost, String collection, Properties props) {\n    this.url = url;\n    this.client = sqlSolrClientCache.getCloudSolrClient(zkHost);\n    this.collection = collection;\n    this.props = props;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2af3708aa5f155e8f27905be60c119be0e39be8","date":1454361673,"type":3,"author":"jbernste","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ConnectionImpl#ConnectionImpl(String,String,String,Properties).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ConnectionImpl#ConnectionImpl(String,String,String,Properties).mjava","sourceNew":"  ConnectionImpl(String url, String zkHost, String collection, Properties properties) throws SQLException {\n    this.url = url;\n    this.client = solrClientCache.getCloudSolrClient(zkHost);\n    this.collection = collection;\n    this.properties = properties;\n    this.connectionStatement = createStatement();\n    this.databaseMetaData = new DatabaseMetaDataImpl(this, this.connectionStatement);\n  }\n\n","sourceOld":"  ConnectionImpl(String url, String zkHost, String collection, Properties properties) {\n    this.url = url;\n    this.client = solrClientCache.getCloudSolrClient(zkHost);\n    this.collection = collection;\n    this.properties = properties;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ConnectionImpl#ConnectionImpl(String,String,String,Properties).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ConnectionImpl#ConnectionImpl(String,String,String,Properties).mjava","sourceNew":"  ConnectionImpl(String url, String zkHost, String collection, Properties properties) throws SQLException {\n    this.url = url;\n    this.client = solrClientCache.getCloudSolrClient(zkHost);\n    this.collection = collection;\n    this.properties = properties;\n    this.connectionStatement = createStatement();\n    this.databaseMetaData = new DatabaseMetaDataImpl(this, this.connectionStatement);\n  }\n\n","sourceOld":"  ConnectionImpl(String url, String zkHost, String collection, Properties properties) {\n    this.url = url;\n    this.client = solrClientCache.getCloudSolrClient(zkHost);\n    this.collection = collection;\n    this.properties = properties;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0b28b82b1214a85c0ebf5455e17f96a096eb6c6c","date":1454808351,"type":3,"author":"jbernste","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ConnectionImpl#ConnectionImpl(String,String,String,Properties).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ConnectionImpl#ConnectionImpl(String,String,String,Properties).mjava","sourceNew":"  ConnectionImpl(String url, String zkHost, String collection, Properties properties) throws SQLException {\n    this.url = url;\n    this.client = this.solrClientCache.getCloudSolrClient(zkHost);\n    this.setSchema(collection);\n    this.properties = properties;\n    this.connectionStatement = createStatement();\n    this.databaseMetaData = new DatabaseMetaDataImpl(this, this.connectionStatement);\n  }\n\n","sourceOld":"  ConnectionImpl(String url, String zkHost, String collection, Properties properties) throws SQLException {\n    this.url = url;\n    this.client = solrClientCache.getCloudSolrClient(zkHost);\n    this.collection = collection;\n    this.properties = properties;\n    this.connectionStatement = createStatement();\n    this.databaseMetaData = new DatabaseMetaDataImpl(this, this.connectionStatement);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd75f58072bba84066e89d61bd7028de1bd5b632","date":1454871793,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ConnectionImpl#ConnectionImpl(String,String,String,Properties).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ConnectionImpl#ConnectionImpl(String,String,String,Properties).mjava","sourceNew":"  ConnectionImpl(String url, String zkHost, String collection, Properties properties) throws SQLException {\n    this.url = url;\n    this.client = this.solrClientCache.getCloudSolrClient(zkHost);\n    this.setSchema(collection);\n    this.properties = properties;\n    this.connectionStatement = createStatement();\n    this.databaseMetaData = new DatabaseMetaDataImpl(this, this.connectionStatement);\n  }\n\n","sourceOld":"  ConnectionImpl(String url, String zkHost, String collection, Properties properties) throws SQLException {\n    this.url = url;\n    this.client = solrClientCache.getCloudSolrClient(zkHost);\n    this.collection = collection;\n    this.properties = properties;\n    this.connectionStatement = createStatement();\n    this.databaseMetaData = new DatabaseMetaDataImpl(this, this.connectionStatement);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa9b48fdb08e049dc94a4077226b510eb68f2b24","date":1458766161,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ConnectionImpl#ConnectionImpl(String,String,String,Properties).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ConnectionImpl#ConnectionImpl(String,String,String,Properties).mjava","sourceNew":"  ConnectionImpl(String url, String zkHost, String collection, Properties properties) throws SQLException {\n    this.url = url;\n    this.client = this.solrClientCache.getCloudSolrClient(zkHost);\n    this.collection = collection;\n    this.properties = properties;\n    this.connectionStatement = createStatement();\n    this.databaseMetaData = new DatabaseMetaDataImpl(this, this.connectionStatement);\n  }\n\n","sourceOld":"  ConnectionImpl(String url, String zkHost, String collection, Properties properties) throws SQLException {\n    this.url = url;\n    this.client = this.solrClientCache.getCloudSolrClient(zkHost);\n    this.setSchema(collection);\n    this.properties = properties;\n    this.connectionStatement = createStatement();\n    this.databaseMetaData = new DatabaseMetaDataImpl(this, this.connectionStatement);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2af3708aa5f155e8f27905be60c119be0e39be8":["9bf38d05ea0037f06f6e05ed747948f19a746d3c"],"dd75f58072bba84066e89d61bd7028de1bd5b632":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","0b28b82b1214a85c0ebf5455e17f96a096eb6c6c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["9bf38d05ea0037f06f6e05ed747948f19a746d3c","d2af3708aa5f155e8f27905be60c119be0e39be8"],"aa9b48fdb08e049dc94a4077226b510eb68f2b24":["0b28b82b1214a85c0ebf5455e17f96a096eb6c6c"],"9bf38d05ea0037f06f6e05ed747948f19a746d3c":["5d70b751e35173c43ca80385daa4642aedd91a55"],"5d70b751e35173c43ca80385daa4642aedd91a55":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["aa9b48fdb08e049dc94a4077226b510eb68f2b24"],"0b28b82b1214a85c0ebf5455e17f96a096eb6c6c":["d2af3708aa5f155e8f27905be60c119be0e39be8"]},"commit2Childs":{"d2af3708aa5f155e8f27905be60c119be0e39be8":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","0b28b82b1214a85c0ebf5455e17f96a096eb6c6c"],"dd75f58072bba84066e89d61bd7028de1bd5b632":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["dd75f58072bba84066e89d61bd7028de1bd5b632"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5d70b751e35173c43ca80385daa4642aedd91a55"],"aa9b48fdb08e049dc94a4077226b510eb68f2b24":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9bf38d05ea0037f06f6e05ed747948f19a746d3c":["d2af3708aa5f155e8f27905be60c119be0e39be8","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"5d70b751e35173c43ca80385daa4642aedd91a55":["9bf38d05ea0037f06f6e05ed747948f19a746d3c"],"0b28b82b1214a85c0ebf5455e17f96a096eb6c6c":["dd75f58072bba84066e89d61bd7028de1bd5b632","aa9b48fdb08e049dc94a4077226b510eb68f2b24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["dd75f58072bba84066e89d61bd7028de1bd5b632","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}