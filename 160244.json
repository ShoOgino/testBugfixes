{"path":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/servlet/AbstractGdataServlet#service(HttpServletRequest,HttpServletResponse).mjava","commits":[{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/servlet/AbstractGdataServlet#service(HttpServletRequest,HttpServletResponse).mjava","pathOld":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/servlet/AbstractGdataServlet#service(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"    /** \n     * This overwrites the protected <code>service</code> method to dispatch \n     * the request to the correponding <code>do</code> method. There is \n     * ususaly no need for overwriting this method. The GData protool and the \n     * Google GData API uses the <code>x-http-method-override</code> header to \n     * get through firewalls. The http method will be overritten by the \n     * <code>x-http-method-override</code> and dispatched to the \n     * <code>do</code><i>Xxx</i> methods defined in this class. This method \n     * is an GDATA-specific version of the {@link javax.servlet.Servlet#service} \n     * method. \n     *  \n     * @see HttpServlet#service(javax.servlet.http.HttpServletRequest, \n     *      javax.servlet.http.HttpServletResponse) \n     */ \n    @Override \n    protected void service(HttpServletRequest arg0, HttpServletResponse arg1) \n            throws ServletException, IOException { \n        if (arg0.getHeader(METHOD_HEADER_NAME) == null) { \n            super.service(arg0, arg1); \n            return; \n        } \n        overrideMethod(arg0, arg1); \n \n    } \n\n","sourceOld":"    /** \n     * This overwrites the protected <code>service</code> method to dispatch \n     * the request to the correponding <code>do</code> method. There is \n     * ususaly no need for overwriting this method. The GData protool and the \n     * Google GData API uses the <code>x-http-method-override</code> header to \n     * get through firewalls. The http method will be overritten by the \n     * <code>x-http-method-override</code> and dispatched to the \n     * <code>do</code><i>Xxx</i> methods defined in this class. This method \n     * is an GDATA-specific version of the {@link javax.servlet.Servlet#service} \n     * method. \n     *  \n     * @see HttpServlet#service(javax.servlet.http.HttpServletRequest, \n     *      javax.servlet.http.HttpServletResponse) \n     */ \n    @Override \n    protected void service(HttpServletRequest arg0, HttpServletResponse arg1) \n            throws ServletException, IOException { \n        if (arg0.getHeader(METHOD_HEADER_NAME) == null) { \n            super.service(arg0, arg1); \n            return; \n        } \n        overrideMethod(arg0, arg1); \n \n    } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe","date":1195519587,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/servlet/AbstractGdataServlet#service(HttpServletRequest,HttpServletResponse).mjava","sourceNew":null,"sourceOld":"    /** \n     * This overwrites the protected <code>service</code> method to dispatch \n     * the request to the correponding <code>do</code> method. There is \n     * ususaly no need for overwriting this method. The GData protool and the \n     * Google GData API uses the <code>x-http-method-override</code> header to \n     * get through firewalls. The http method will be overritten by the \n     * <code>x-http-method-override</code> and dispatched to the \n     * <code>do</code><i>Xxx</i> methods defined in this class. This method \n     * is an GDATA-specific version of the {@link javax.servlet.Servlet#service} \n     * method. \n     *  \n     * @see HttpServlet#service(javax.servlet.http.HttpServletRequest, \n     *      javax.servlet.http.HttpServletResponse) \n     */ \n    @Override \n    protected void service(HttpServletRequest arg0, HttpServletResponse arg1) \n            throws ServletException, IOException { \n        if (arg0.getHeader(METHOD_HEADER_NAME) == null) { \n            super.service(arg0, arg1); \n            return; \n        } \n        overrideMethod(arg0, arg1); \n \n    } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}