{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/CompletionFieldsConsumer#write(Fields,NormsProducer).mjava","commits":[{"id":"622a708571e534680618b3c5e0c28ac539a47776","date":1517406892,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/CompletionFieldsConsumer#write(Fields,NormsProducer).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/CompletionFieldsConsumer#write(Fields).mjava","sourceNew":"  @Override\n  public void write(Fields fields, NormsProducer norms) throws IOException {\n    delegateFieldsConsumer.write(fields, norms);\n\n    for (String field : fields) {\n      CompletionTermWriter termWriter = new CompletionTermWriter();\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        // this can happen from ghost fields, where the incoming Fields iterator claims a field exists but it does not\n        continue;\n      }\n      TermsEnum termsEnum = terms.iterator();\n\n      // write terms\n      BytesRef term;\n      while ((term = termsEnum.next()) != null) {\n        termWriter.write(term, termsEnum);\n      }\n\n      // store lookup, if needed\n      long filePointer = dictOut.getFilePointer();\n      if (termWriter.finish(dictOut)) {\n        seenFields.put(field, new CompletionMetaData(filePointer,\n            termWriter.minWeight,\n            termWriter.maxWeight,\n            termWriter.type));\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void write(Fields fields) throws IOException {\n    delegateFieldsConsumer.write(fields);\n\n    for (String field : fields) {\n      CompletionTermWriter termWriter = new CompletionTermWriter();\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        // this can happen from ghost fields, where the incoming Fields iterator claims a field exists but it does not\n        continue;\n      }\n      TermsEnum termsEnum = terms.iterator();\n\n      // write terms\n      BytesRef term;\n      while ((term = termsEnum.next()) != null) {\n        termWriter.write(term, termsEnum);\n      }\n\n      // store lookup, if needed\n      long filePointer = dictOut.getFilePointer();\n      if (termWriter.finish(dictOut)) {\n        seenFields.put(field, new CompletionMetaData(filePointer,\n            termWriter.minWeight,\n            termWriter.maxWeight,\n            termWriter.type));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"622a708571e534680618b3c5e0c28ac539a47776":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["622a708571e534680618b3c5e0c28ac539a47776"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["622a708571e534680618b3c5e0c28ac539a47776"],"622a708571e534680618b3c5e0c28ac539a47776":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}