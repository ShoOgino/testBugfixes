{"path":"lucene/src/test/org/apache/lucene/index/codecs/preflex/TermInfosWriter#initialize(Directory,String,FieldInfos,int,boolean).mjava","commits":[{"id":"08932c793647a36953d1816b1060121f48820d3f","date":1277386540,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/preflex/TermInfosWriter#initialize(Directory,String,FieldInfos,int,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private void initialize(Directory directory, String segment, FieldInfos fis,\n                          int interval, boolean isi) throws IOException {\n    indexInterval = interval;\n    fieldInfos = fis;\n    isIndex = isi;\n    output = directory.createOutput(segment + (isIndex ? \".tii\" : \".tis\"));\n    output.writeInt(FORMAT_CURRENT);              // write format\n    output.writeLong(0);                          // leave space for size\n    output.writeInt(indexInterval);               // write indexInterval\n    output.writeInt(skipInterval);                // write skipInterval\n    output.writeInt(maxSkipLevels);               // write maxSkipLevels\n    assert initUTF16Results();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/preflex/TermInfosWriter#initialize(Directory,String,FieldInfos,int,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private void initialize(Directory directory, String segment, FieldInfos fis,\n                          int interval, boolean isi) throws IOException {\n    indexInterval = interval;\n    fieldInfos = fis;\n    isIndex = isi;\n    output = directory.createOutput(segment + (isIndex ? \".tii\" : \".tis\"));\n    output.writeInt(FORMAT_CURRENT);              // write format\n    output.writeLong(0);                          // leave space for size\n    output.writeInt(indexInterval);               // write indexInterval\n    output.writeInt(skipInterval);                // write skipInterval\n    output.writeInt(maxSkipLevels);               // write maxSkipLevels\n    assert initUTF16Results();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"163fe85a71d778fd2b7747f65ca27b54829e2e57","date":1279898785,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/preflexrw/TermInfosWriter#initialize(Directory,String,FieldInfos,int,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/preflex/TermInfosWriter#initialize(Directory,String,FieldInfos,int,boolean).mjava","sourceNew":"  private void initialize(Directory directory, String segment, FieldInfos fis,\n                          int interval, boolean isi) throws IOException {\n    indexInterval = interval;\n    fieldInfos = fis;\n    isIndex = isi;\n    output = directory.createOutput(segment + (isIndex ? \".tii\" : \".tis\"));\n    output.writeInt(FORMAT_CURRENT);              // write format\n    output.writeLong(0);                          // leave space for size\n    output.writeInt(indexInterval);               // write indexInterval\n    output.writeInt(skipInterval);                // write skipInterval\n    output.writeInt(maxSkipLevels);               // write maxSkipLevels\n    assert initUTF16Results();\n  }\n\n","sourceOld":"  private void initialize(Directory directory, String segment, FieldInfos fis,\n                          int interval, boolean isi) throws IOException {\n    indexInterval = interval;\n    fieldInfos = fis;\n    isIndex = isi;\n    output = directory.createOutput(segment + (isIndex ? \".tii\" : \".tis\"));\n    output.writeInt(FORMAT_CURRENT);              // write format\n    output.writeLong(0);                          // leave space for size\n    output.writeInt(indexInterval);               // write indexInterval\n    output.writeInt(skipInterval);                // write skipInterval\n    output.writeInt(maxSkipLevels);               // write maxSkipLevels\n    assert initUTF16Results();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b103252dee6afa1b6d7a622c773d178788eb85a","date":1280180143,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/preflexrw/TermInfosWriter#initialize(Directory,String,FieldInfos,int,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/preflex/TermInfosWriter#initialize(Directory,String,FieldInfos,int,boolean).mjava","sourceNew":"  private void initialize(Directory directory, String segment, FieldInfos fis,\n                          int interval, boolean isi) throws IOException {\n    indexInterval = interval;\n    fieldInfos = fis;\n    isIndex = isi;\n    output = directory.createOutput(segment + (isIndex ? \".tii\" : \".tis\"));\n    output.writeInt(FORMAT_CURRENT);              // write format\n    output.writeLong(0);                          // leave space for size\n    output.writeInt(indexInterval);               // write indexInterval\n    output.writeInt(skipInterval);                // write skipInterval\n    output.writeInt(maxSkipLevels);               // write maxSkipLevels\n    assert initUTF16Results();\n  }\n\n","sourceOld":"  private void initialize(Directory directory, String segment, FieldInfos fis,\n                          int interval, boolean isi) throws IOException {\n    indexInterval = interval;\n    fieldInfos = fis;\n    isIndex = isi;\n    output = directory.createOutput(segment + (isIndex ? \".tii\" : \".tis\"));\n    output.writeInt(FORMAT_CURRENT);              // write format\n    output.writeLong(0);                          // leave space for size\n    output.writeInt(indexInterval);               // write indexInterval\n    output.writeInt(skipInterval);                // write skipInterval\n    output.writeInt(maxSkipLevels);               // write maxSkipLevels\n    assert initUTF16Results();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3242a09f703274d3b9283f2064a1a33064b53a1b","date":1280263474,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/preflexrw/TermInfosWriter#initialize(Directory,String,FieldInfos,int,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/preflex/TermInfosWriter#initialize(Directory,String,FieldInfos,int,boolean).mjava","sourceNew":"  private void initialize(Directory directory, String segment, FieldInfos fis,\n                          int interval, boolean isi) throws IOException {\n    indexInterval = interval;\n    fieldInfos = fis;\n    isIndex = isi;\n    output = directory.createOutput(segment + (isIndex ? \".tii\" : \".tis\"));\n    output.writeInt(FORMAT_CURRENT);              // write format\n    output.writeLong(0);                          // leave space for size\n    output.writeInt(indexInterval);               // write indexInterval\n    output.writeInt(skipInterval);                // write skipInterval\n    output.writeInt(maxSkipLevels);               // write maxSkipLevels\n    assert initUTF16Results();\n  }\n\n","sourceOld":"  private void initialize(Directory directory, String segment, FieldInfos fis,\n                          int interval, boolean isi) throws IOException {\n    indexInterval = interval;\n    fieldInfos = fis;\n    isIndex = isi;\n    output = directory.createOutput(segment + (isIndex ? \".tii\" : \".tis\"));\n    output.writeInt(FORMAT_CURRENT);              // write format\n    output.writeLong(0);                          // leave space for size\n    output.writeInt(indexInterval);               // write indexInterval\n    output.writeInt(skipInterval);                // write skipInterval\n    output.writeInt(maxSkipLevels);               // write maxSkipLevels\n    assert initUTF16Results();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"08932c793647a36953d1816b1060121f48820d3f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3242a09f703274d3b9283f2064a1a33064b53a1b":["5f4e87790277826a2aea119328600dfb07761f32","4b103252dee6afa1b6d7a622c773d178788eb85a"],"4b103252dee6afa1b6d7a622c773d178788eb85a":["08932c793647a36953d1816b1060121f48820d3f","163fe85a71d778fd2b7747f65ca27b54829e2e57"],"163fe85a71d778fd2b7747f65ca27b54829e2e57":["08932c793647a36953d1816b1060121f48820d3f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5f4e87790277826a2aea119328600dfb07761f32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","08932c793647a36953d1816b1060121f48820d3f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4b103252dee6afa1b6d7a622c773d178788eb85a"]},"commit2Childs":{"08932c793647a36953d1816b1060121f48820d3f":["4b103252dee6afa1b6d7a622c773d178788eb85a","163fe85a71d778fd2b7747f65ca27b54829e2e57","5f4e87790277826a2aea119328600dfb07761f32"],"3242a09f703274d3b9283f2064a1a33064b53a1b":[],"4b103252dee6afa1b6d7a622c773d178788eb85a":["3242a09f703274d3b9283f2064a1a33064b53a1b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"163fe85a71d778fd2b7747f65ca27b54829e2e57":["4b103252dee6afa1b6d7a622c773d178788eb85a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["08932c793647a36953d1816b1060121f48820d3f","5f4e87790277826a2aea119328600dfb07761f32"],"5f4e87790277826a2aea119328600dfb07761f32":["3242a09f703274d3b9283f2064a1a33064b53a1b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3242a09f703274d3b9283f2064a1a33064b53a1b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}