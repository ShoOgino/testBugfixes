{"path":"lucene/demo/src/java/org/apache/lucene/demo/facet/RangeFacetsExample#drillSideways(LongRange).mjava","commits":[{"id":"ac51e5c002c3c24b58fb52ed2d97742edd10d1ba","date":1487415382,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/RangeFacetsExample#drillSideways(LongRange).mjava","pathOld":"/dev/null","sourceNew":"  public DrillSideways.DrillSidewaysResult drillSideways(LongRange range) throws IOException {\n    // Passing no baseQuery means we drill down on all\n    // documents (\"browse only\"):\n    DrillDownQuery q = new DrillDownQuery(getConfig());\n    q.add(\"timestamp\", LongPoint.newRangeQuery(\"timestamp\", range.min, range.max));\n\n    // DrillSideways only handles taxonomy and sorted set drill facets by default; to do range facets we must subclass and override the\n    // buildFacetsResult method.\n    DrillSideways.DrillSidewaysResult result = new DrillSideways(searcher, getConfig(), null, null) {\n      @Override\n      protected Facets buildFacetsResult(FacetsCollector drillDowns, FacetsCollector[] drillSideways, String[] drillSidewaysDims) throws IOException {\n        // If we had other dims we would also compute their drill-down or drill-sideways facets here:\n        assert drillSidewaysDims[0].equals(\"timestamp\");\n        return new LongRangeFacetCounts(\"timestamp\", drillSideways[0],\n                                        PAST_HOUR,\n                                        PAST_SIX_HOURS,\n                                        PAST_DAY);\n      }\n    }.search(q, 10);\n\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ca735d636c948d062653c0aec9f739583cdf0bc","date":1487424849,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/RangeFacetsExample#drillSideways(LongRange).mjava","pathOld":"lucene/demo/src/java/org/apache/lucene/demo/facet/RangeFacetsExample#drillSideways(LongRange).mjava","sourceNew":"  /** User drills down on the specified range, and also computes drill sideways counts. */\n  public DrillSideways.DrillSidewaysResult drillSideways(LongRange range) throws IOException {\n    // Passing no baseQuery means we drill down on all\n    // documents (\"browse only\"):\n    DrillDownQuery q = new DrillDownQuery(getConfig());\n    q.add(\"timestamp\", LongPoint.newRangeQuery(\"timestamp\", range.min, range.max));\n\n    // DrillSideways only handles taxonomy and sorted set drill facets by default; to do range facets we must subclass and override the\n    // buildFacetsResult method.\n    DrillSideways.DrillSidewaysResult result = new DrillSideways(searcher, getConfig(), null, null) {\n      @Override\n      protected Facets buildFacetsResult(FacetsCollector drillDowns, FacetsCollector[] drillSideways, String[] drillSidewaysDims) throws IOException {\n        // If we had other dims we would also compute their drill-down or drill-sideways facets here:\n        assert drillSidewaysDims[0].equals(\"timestamp\");\n        return new LongRangeFacetCounts(\"timestamp\", drillSideways[0],\n                                        PAST_HOUR,\n                                        PAST_SIX_HOURS,\n                                        PAST_DAY);\n      }\n    }.search(q, 10);\n\n    return result;\n  }\n\n","sourceOld":"  public DrillSideways.DrillSidewaysResult drillSideways(LongRange range) throws IOException {\n    // Passing no baseQuery means we drill down on all\n    // documents (\"browse only\"):\n    DrillDownQuery q = new DrillDownQuery(getConfig());\n    q.add(\"timestamp\", LongPoint.newRangeQuery(\"timestamp\", range.min, range.max));\n\n    // DrillSideways only handles taxonomy and sorted set drill facets by default; to do range facets we must subclass and override the\n    // buildFacetsResult method.\n    DrillSideways.DrillSidewaysResult result = new DrillSideways(searcher, getConfig(), null, null) {\n      @Override\n      protected Facets buildFacetsResult(FacetsCollector drillDowns, FacetsCollector[] drillSideways, String[] drillSidewaysDims) throws IOException {\n        // If we had other dims we would also compute their drill-down or drill-sideways facets here:\n        assert drillSidewaysDims[0].equals(\"timestamp\");\n        return new LongRangeFacetCounts(\"timestamp\", drillSideways[0],\n                                        PAST_HOUR,\n                                        PAST_SIX_HOURS,\n                                        PAST_DAY);\n      }\n    }.search(q, 10);\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5ca735d636c948d062653c0aec9f739583cdf0bc":["ac51e5c002c3c24b58fb52ed2d97742edd10d1ba"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ac51e5c002c3c24b58fb52ed2d97742edd10d1ba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5ca735d636c948d062653c0aec9f739583cdf0bc"]},"commit2Childs":{"5ca735d636c948d062653c0aec9f739583cdf0bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ac51e5c002c3c24b58fb52ed2d97742edd10d1ba"],"ac51e5c002c3c24b58fb52ed2d97742edd10d1ba":["5ca735d636c948d062653c0aec9f739583cdf0bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}