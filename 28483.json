{"path":"src/java/org/apache/solr/handler/component/FieldFacetStats#facet(int,Double).mjava","commits":[{"id":"861fa37cce2d9d3f8978bbb767e87a91d41ed4a8","date":1252682465,"type":1,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/component/FieldFacetStats#facet(int,Double).mjava","pathOld":"src/java/org/apache/solr/handler/component/FieldFacetStats[StatsComponent]#facet(int,Double).mjava","sourceNew":"  public boolean facet(int docID, Double v) {\n    if (v == null) return false;\n\n    int term = termNum[docID];\n    int arrIdx = term - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      String key = ft.indexedToReadable(terms[term]);\n      StatsValues stats = facetStatsValues.get(key);\n      if (stats == null) {\n        stats = new StatsValues();\n        facetStatsValues.put(key, stats);\n      }\n      stats.accumulate(v);\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  public boolean facet( int docID, Double v )\n  {\n    if( v == null ) return false;\n    \n    int term = termNum[docID];\n    int arrIdx = term-startTermIndex;\n    if (arrIdx>=0 && arrIdx<nTerms) {\n      String key = ft.indexedToReadable( terms[term] );\n      StatsValues stats = facetStatsValues.get( key );\n      if( stats == null ) {\n        stats = new StatsValues();\n        facetStatsValues.put(key, stats);\n      }\n      stats.accumulate( v );\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56da5612f2fd2e0e08ecc709069a20adc9ab234","date":1254490277,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/component/FieldFacetStats#facet(int,Double).mjava","pathOld":"src/java/org/apache/solr/handler/component/FieldFacetStats#facet(int,Double).mjava","sourceNew":"  public boolean facet(int docID, Double v) {\n    int term = termNum[docID];\n    int arrIdx = term - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      String key = ft.indexedToReadable(terms[term]);\n      StatsValues stats = facetStatsValues.get(key);\n      if (stats == null) {\n        stats = new StatsValues();\n        facetStatsValues.put(key, stats);\n      }\n      if (v != null) {\n        stats.accumulate(v);\n      } else {\n        stats.missing++;\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  public boolean facet(int docID, Double v) {\n    if (v == null) return false;\n\n    int term = termNum[docID];\n    int arrIdx = term - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      String key = ft.indexedToReadable(terms[term]);\n      StatsValues stats = facetStatsValues.get(key);\n      if (stats == null) {\n        stats = new StatsValues();\n        facetStatsValues.put(key, stats);\n      }\n      stats.accumulate(v);\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":["861fa37cce2d9d3f8978bbb767e87a91d41ed4a8"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/component/FieldFacetStats#facet(int,Double).mjava","pathOld":"src/java/org/apache/solr/handler/component/FieldFacetStats#facet(int,Double).mjava","sourceNew":"  public boolean facet(int docID, Double v) {\n    int term = termNum[docID];\n    int arrIdx = term - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      String key = ft.indexedToReadable(terms[term]);\n      StatsValues stats = facetStatsValues.get(key);\n      if (stats == null) {\n        stats = new StatsValues();\n        facetStatsValues.put(key, stats);\n      }\n      if (v != null) {\n        stats.accumulate(v);\n      } else {\n        stats.missing++;\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  public boolean facet(int docID, Double v) {\n    int term = termNum[docID];\n    int arrIdx = term - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      String key = ft.indexedToReadable(terms[term]);\n      StatsValues stats = facetStatsValues.get(key);\n      if (stats == null) {\n        stats = new StatsValues();\n        facetStatsValues.put(key, stats);\n      }\n      if (v != null) {\n        stats.accumulate(v);\n      } else {\n        stats.missing++;\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a56da5612f2fd2e0e08ecc709069a20adc9ab234":["861fa37cce2d9d3f8978bbb767e87a91d41ed4a8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["a56da5612f2fd2e0e08ecc709069a20adc9ab234"],"861fa37cce2d9d3f8978bbb767e87a91d41ed4a8":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a56da5612f2fd2e0e08ecc709069a20adc9ab234":["ad94625fb8d088209f46650c8097196fec67f00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["861fa37cce2d9d3f8978bbb767e87a91d41ed4a8"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"861fa37cce2d9d3f8978bbb767e87a91d41ed4a8":["a56da5612f2fd2e0e08ecc709069a20adc9ab234"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}