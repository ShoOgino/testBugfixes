{"path":"contrib/spatial/src/java/org/apache/lucene/spatial/geometry/DistanceUnits#findDistanceUnit(String).mjava","commits":[{"id":"0ffa9f5c51e7bbe3489bc384c0397cf904787438","date":1262729028,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/spatial/src/java/org/apache/lucene/spatial/geometry/DistanceUnits#findDistanceUnit(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the DistanceUnit which represents the given unit\n   *\n   * @param unit Unit whose DistanceUnit should be found\n   * @return DistanceUnit representing the unit\n   * @throws IllegalArgumentException if no DistanceUnit which represents the given unit is found\n   */\n  public static DistanceUnits findDistanceUnit(String unit) {\n    if (MILES.getUnit().equals(unit)) {\n      return MILES;\n    }\n\n    if (KILOMETERS.getUnit().equals(unit)) {\n      return KILOMETERS;\n    }\n\n    throw new IllegalArgumentException(\"Unknown distance unit \" + unit);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/geometry/DistanceUnits#findDistanceUnit(String).mjava","pathOld":"contrib/spatial/src/java/org/apache/lucene/spatial/geometry/DistanceUnits#findDistanceUnit(String).mjava","sourceNew":"  /**\n   * Returns the DistanceUnit which represents the given unit\n   *\n   * @param unit Unit whose DistanceUnit should be found\n   * @return DistanceUnit representing the unit\n   * @throws IllegalArgumentException if no DistanceUnit which represents the given unit is found\n   */\n  public static DistanceUnits findDistanceUnit(String unit) {\n    if (MILES.getUnit().equals(unit)) {\n      return MILES;\n    }\n\n    if (KILOMETERS.getUnit().equals(unit)) {\n      return KILOMETERS;\n    }\n\n    throw new IllegalArgumentException(\"Unknown distance unit \" + unit);\n  }\n\n","sourceOld":"  /**\n   * Returns the DistanceUnit which represents the given unit\n   *\n   * @param unit Unit whose DistanceUnit should be found\n   * @return DistanceUnit representing the unit\n   * @throws IllegalArgumentException if no DistanceUnit which represents the given unit is found\n   */\n  public static DistanceUnits findDistanceUnit(String unit) {\n    if (MILES.getUnit().equals(unit)) {\n      return MILES;\n    }\n\n    if (KILOMETERS.getUnit().equals(unit)) {\n      return KILOMETERS;\n    }\n\n    throw new IllegalArgumentException(\"Unknown distance unit \" + unit);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0ffa9f5c51e7bbe3489bc384c0397cf904787438":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0ffa9f5c51e7bbe3489bc384c0397cf904787438"]},"commit2Childs":{"0ffa9f5c51e7bbe3489bc384c0397cf904787438":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0ffa9f5c51e7bbe3489bc384c0397cf904787438"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}