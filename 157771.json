{"path":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xCodec#separateFiles(Directory,SegmentInfo,Set[String]).mjava","commits":[{"id":"e15e00c15671f631ae164c18814f3370d54155bb","date":1327842152,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xCodec#separateFiles(Directory,SegmentInfo,Set[String]).mjava","pathOld":"/dev/null","sourceNew":"  // override the default implementation in codec.java to handle separate norms files\n  @Override\n  public void separateFiles(Directory dir, SegmentInfo info, Set<String> files) throws IOException {\n    super.separateFiles(dir, info, files);\n    normsFormat().separateFiles(dir, info, files);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"94178119d0991364aefca2b8e6dfe429a6843ad0","date":1327843096,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xCodec#separateFiles(Directory,SegmentInfo,Set[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xCodec#separateFiles(Directory,SegmentInfo,Set[String]).mjava","sourceNew":"  // override the default implementation in codec.java to handle separate norms files, and shared compound docstores\n  @Override\n  public void separateFiles(Directory dir, SegmentInfo info, Set<String> files) throws IOException {\n    super.separateFiles(dir, info, files);\n    normsFormat().separateFiles(dir, info, files);\n    if (info.getDocStoreOffset() != -1) {\n      // We are sharing doc stores (stored fields, term\n      // vectors) with other segments\n      assert info.getDocStoreSegment() != null;\n      if (info.getDocStoreIsCompoundFile()) {\n        files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", IndexFileNames.COMPOUND_FILE_STORE_EXTENSION));\n      }\n      // otherwise, if its not a compound docstore, storedfieldsformat/termvectorsformat are each adding their relevant files\n    }\n  }\n\n","sourceOld":"  // override the default implementation in codec.java to handle separate norms files\n  @Override\n  public void separateFiles(Directory dir, SegmentInfo info, Set<String> files) throws IOException {\n    super.separateFiles(dir, info, files);\n    normsFormat().separateFiles(dir, info, files);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"78977ccc47b451a8e645b77504e2ef0a05e4b1a3","date":1327846052,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xCodec#separateFiles(SegmentInfo,Set[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xCodec#separateFiles(Directory,SegmentInfo,Set[String]).mjava","sourceNew":"  // override the default implementation in codec.java to handle separate norms files, and shared compound docstores\n  @Override\n  public void separateFiles(SegmentInfo info, Set<String> files) throws IOException {\n    super.separateFiles(info, files);\n    normsFormat().separateFiles(info, files);\n    if (info.getDocStoreOffset() != -1) {\n      // We are sharing doc stores (stored fields, term\n      // vectors) with other segments\n      assert info.getDocStoreSegment() != null;\n      if (info.getDocStoreIsCompoundFile()) {\n        files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", IndexFileNames.COMPOUND_FILE_STORE_EXTENSION));\n      }\n      // otherwise, if its not a compound docstore, storedfieldsformat/termvectorsformat are each adding their relevant files\n    }\n  }\n\n","sourceOld":"  // override the default implementation in codec.java to handle separate norms files, and shared compound docstores\n  @Override\n  public void separateFiles(Directory dir, SegmentInfo info, Set<String> files) throws IOException {\n    super.separateFiles(dir, info, files);\n    normsFormat().separateFiles(dir, info, files);\n    if (info.getDocStoreOffset() != -1) {\n      // We are sharing doc stores (stored fields, term\n      // vectors) with other segments\n      assert info.getDocStoreSegment() != null;\n      if (info.getDocStoreIsCompoundFile()) {\n        files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", IndexFileNames.COMPOUND_FILE_STORE_EXTENSION));\n      }\n      // otherwise, if its not a compound docstore, storedfieldsformat/termvectorsformat are each adding their relevant files\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"94178119d0991364aefca2b8e6dfe429a6843ad0":["e15e00c15671f631ae164c18814f3370d54155bb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"78977ccc47b451a8e645b77504e2ef0a05e4b1a3":["94178119d0991364aefca2b8e6dfe429a6843ad0"],"e15e00c15671f631ae164c18814f3370d54155bb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"94178119d0991364aefca2b8e6dfe429a6843ad0":["78977ccc47b451a8e645b77504e2ef0a05e4b1a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e15e00c15671f631ae164c18814f3370d54155bb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"78977ccc47b451a8e645b77504e2ef0a05e4b1a3":[],"e15e00c15671f631ae164c18814f3370d54155bb":["94178119d0991364aefca2b8e6dfe429a6843ad0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["78977ccc47b451a8e645b77504e2ef0a05e4b1a3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}