{"path":"contrib/misc/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testBoost().mjava","commits":[{"id":"48bedd31c61edafb8baaff4bcbcac19449fb7c3a","date":1251468037,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testBoost().mjava","pathOld":"contrib/miscellaneous/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testBoost().mjava","sourceNew":"  public void testBoost()\n    throws Exception {\n    StandardAnalyzer oneStopAnalyzer = new StandardAnalyzer(new String[]{\"on\"});\n    PrecedenceQueryParser qp = new PrecedenceQueryParser(\"field\", oneStopAnalyzer);\n    Query q = qp.parse(\"on^1.0\");\n    assertNotNull(q);\n    q = qp.parse(\"\\\"hello\\\"^2.0\");\n    assertNotNull(q);\n    assertEquals(q.getBoost(), (float) 2.0, (float) 0.5);\n    q = qp.parse(\"hello^2.0\");\n    assertNotNull(q);\n    assertEquals(q.getBoost(), (float) 2.0, (float) 0.5);\n    q = qp.parse(\"\\\"on\\\"^1.0\");\n    assertNotNull(q);\n\n    q = getParser(new StandardAnalyzer()).parse(\"the^3\");\n    assertNotNull(q);\n  }\n\n","sourceOld":"  public void testBoost()\n    throws Exception {\n    StandardAnalyzer oneStopAnalyzer = new StandardAnalyzer(new String[]{\"on\"});\n    PrecedenceQueryParser qp = new PrecedenceQueryParser(\"field\", oneStopAnalyzer);\n    Query q = qp.parse(\"on^1.0\");\n    assertNotNull(q);\n    q = qp.parse(\"\\\"hello\\\"^2.0\");\n    assertNotNull(q);\n    assertEquals(q.getBoost(), (float) 2.0, (float) 0.5);\n    q = qp.parse(\"hello^2.0\");\n    assertNotNull(q);\n    assertEquals(q.getBoost(), (float) 2.0, (float) 0.5);\n    q = qp.parse(\"\\\"on\\\"^1.0\");\n    assertNotNull(q);\n\n    q = getParser(new StandardAnalyzer()).parse(\"the^3\");\n    assertNotNull(q);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9","date":1256127131,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testBoost().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testBoost().mjava","sourceNew":"  public void testBoost()\n    throws Exception {\n    StandardAnalyzer oneStopAnalyzer = new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT, Collections.singleton(\"on\"));\n    PrecedenceQueryParser qp = new PrecedenceQueryParser(\"field\", oneStopAnalyzer);\n    Query q = qp.parse(\"on^1.0\");\n    assertNotNull(q);\n    q = qp.parse(\"\\\"hello\\\"^2.0\");\n    assertNotNull(q);\n    assertEquals(q.getBoost(), (float) 2.0, (float) 0.5);\n    q = qp.parse(\"hello^2.0\");\n    assertNotNull(q);\n    assertEquals(q.getBoost(), (float) 2.0, (float) 0.5);\n    q = qp.parse(\"\\\"on\\\"^1.0\");\n    assertNotNull(q);\n\n    q = getParser(new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT)).parse(\"the^3\");\n    assertNotNull(q);\n  }\n\n","sourceOld":"  public void testBoost()\n    throws Exception {\n    StandardAnalyzer oneStopAnalyzer = new StandardAnalyzer(new String[]{\"on\"});\n    PrecedenceQueryParser qp = new PrecedenceQueryParser(\"field\", oneStopAnalyzer);\n    Query q = qp.parse(\"on^1.0\");\n    assertNotNull(q);\n    q = qp.parse(\"\\\"hello\\\"^2.0\");\n    assertNotNull(q);\n    assertEquals(q.getBoost(), (float) 2.0, (float) 0.5);\n    q = qp.parse(\"hello^2.0\");\n    assertNotNull(q);\n    assertEquals(q.getBoost(), (float) 2.0, (float) 0.5);\n    q = qp.parse(\"\\\"on\\\"^1.0\");\n    assertNotNull(q);\n\n    q = getParser(new StandardAnalyzer()).parse(\"the^3\");\n    assertNotNull(q);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testBoost().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testBoost().mjava","sourceNew":"  public void testBoost()\n    throws Exception {\n    StandardAnalyzer oneStopAnalyzer = new StandardAnalyzer(TEST_VERSION_CURRENT, Collections.singleton(\"on\"));\n    PrecedenceQueryParser qp = new PrecedenceQueryParser(\"field\", oneStopAnalyzer);\n    Query q = qp.parse(\"on^1.0\");\n    assertNotNull(q);\n    q = qp.parse(\"\\\"hello\\\"^2.0\");\n    assertNotNull(q);\n    assertEquals(q.getBoost(), (float) 2.0, (float) 0.5);\n    q = qp.parse(\"hello^2.0\");\n    assertNotNull(q);\n    assertEquals(q.getBoost(), (float) 2.0, (float) 0.5);\n    q = qp.parse(\"\\\"on\\\"^1.0\");\n    assertNotNull(q);\n\n    q = getParser(new StandardAnalyzer(TEST_VERSION_CURRENT)).parse(\"the^3\");\n    assertNotNull(q);\n  }\n\n","sourceOld":"  public void testBoost()\n    throws Exception {\n    StandardAnalyzer oneStopAnalyzer = new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT, Collections.singleton(\"on\"));\n    PrecedenceQueryParser qp = new PrecedenceQueryParser(\"field\", oneStopAnalyzer);\n    Query q = qp.parse(\"on^1.0\");\n    assertNotNull(q);\n    q = qp.parse(\"\\\"hello\\\"^2.0\");\n    assertNotNull(q);\n    assertEquals(q.getBoost(), (float) 2.0, (float) 0.5);\n    q = qp.parse(\"hello^2.0\");\n    assertNotNull(q);\n    assertEquals(q.getBoost(), (float) 2.0, (float) 0.5);\n    q = qp.parse(\"\\\"on\\\"^1.0\");\n    assertNotNull(q);\n\n    q = getParser(new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT)).parse(\"the^3\");\n    assertNotNull(q);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testBoost().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testBoost().mjava","sourceNew":"  public void testBoost()\n    throws Exception {\n    StandardAnalyzer oneStopAnalyzer = new StandardAnalyzer(TEST_VERSION_CURRENT, Collections.singleton(\"on\"));\n    PrecedenceQueryParser qp = new PrecedenceQueryParser(\"field\", oneStopAnalyzer);\n    Query q = qp.parse(\"on^1.0\");\n    assertNotNull(q);\n    q = qp.parse(\"\\\"hello\\\"^2.0\");\n    assertNotNull(q);\n    assertEquals(q.getBoost(), (float) 2.0, (float) 0.5);\n    q = qp.parse(\"hello^2.0\");\n    assertNotNull(q);\n    assertEquals(q.getBoost(), (float) 2.0, (float) 0.5);\n    q = qp.parse(\"\\\"on\\\"^1.0\");\n    assertNotNull(q);\n\n    q = getParser(new StandardAnalyzer(TEST_VERSION_CURRENT)).parse(\"the^3\");\n    assertNotNull(q);\n  }\n\n","sourceOld":"  public void testBoost()\n    throws Exception {\n    StandardAnalyzer oneStopAnalyzer = new StandardAnalyzer(TEST_VERSION_CURRENT, Collections.singleton(\"on\"));\n    PrecedenceQueryParser qp = new PrecedenceQueryParser(\"field\", oneStopAnalyzer);\n    Query q = qp.parse(\"on^1.0\");\n    assertNotNull(q);\n    q = qp.parse(\"\\\"hello\\\"^2.0\");\n    assertNotNull(q);\n    assertEquals(q.getBoost(), (float) 2.0, (float) 0.5);\n    q = qp.parse(\"hello^2.0\");\n    assertNotNull(q);\n    assertEquals(q.getBoost(), (float) 2.0, (float) 0.5);\n    q = qp.parse(\"\\\"on\\\"^1.0\");\n    assertNotNull(q);\n\n    q = getParser(new StandardAnalyzer(TEST_VERSION_CURRENT)).parse(\"the^3\");\n    assertNotNull(q);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"]},"commit2Childs":{"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}