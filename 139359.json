{"path":"lucene/contrib/misc/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#generateParseException().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#generateParseException().mjava","pathOld":"contrib/misc/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#generateParseException().mjava","sourceNew":"  /** Generate ParseException. */\n  public ParseException generateParseException() {\n    jj_expentries.clear();\n    boolean[] la1tokens = new boolean[32];\n    if (jj_kind >= 0) {\n      la1tokens[jj_kind] = true;\n      jj_kind = -1;\n    }\n    for (int i = 0; i < 24; i++) {\n      if (jj_la1[i] == jj_gen) {\n        for (int j = 0; j < 32; j++) {\n          if ((jj_la1_0[i] & (1<<j)) != 0) {\n            la1tokens[j] = true;\n          }\n        }\n      }\n    }\n    for (int i = 0; i < 32; i++) {\n      if (la1tokens[i]) {\n        jj_expentry = new int[1];\n        jj_expentry[0] = i;\n        jj_expentries.add(jj_expentry);\n      }\n    }\n    jj_endpos = 0;\n    jj_rescan_token();\n    jj_add_error_token(0, 0);\n    int[][] exptokseq = new int[jj_expentries.size()][];\n    for (int i = 0; i < jj_expentries.size(); i++) {\n      exptokseq[i] = jj_expentries.get(i);\n    }\n    return new ParseException(token, exptokseq, tokenImage);\n  }\n\n","sourceOld":"  /** Generate ParseException. */\n  public ParseException generateParseException() {\n    jj_expentries.clear();\n    boolean[] la1tokens = new boolean[32];\n    if (jj_kind >= 0) {\n      la1tokens[jj_kind] = true;\n      jj_kind = -1;\n    }\n    for (int i = 0; i < 24; i++) {\n      if (jj_la1[i] == jj_gen) {\n        for (int j = 0; j < 32; j++) {\n          if ((jj_la1_0[i] & (1<<j)) != 0) {\n            la1tokens[j] = true;\n          }\n        }\n      }\n    }\n    for (int i = 0; i < 32; i++) {\n      if (la1tokens[i]) {\n        jj_expentry = new int[1];\n        jj_expentry[0] = i;\n        jj_expentries.add(jj_expentry);\n      }\n    }\n    jj_endpos = 0;\n    jj_rescan_token();\n    jj_add_error_token(0, 0);\n    int[][] exptokseq = new int[jj_expentries.size()][];\n    for (int i = 0; i < jj_expentries.size(); i++) {\n      exptokseq[i] = jj_expentries.get(i);\n    }\n    return new ParseException(token, exptokseq, tokenImage);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36f91bf9cfc9d0c3155edab43359e7670ea8a5af","date":1269580873,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#generateParseException().mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#generateParseException().mjava","sourceNew":"  /** Generate ParseException. */\n  public ParseException generateParseException() {\n    jj_expentries.clear();\n    boolean[] la1tokens = new boolean[32];\n    if (jj_kind >= 0) {\n      la1tokens[jj_kind] = true;\n      jj_kind = -1;\n    }\n    for (int i = 0; i < 24; i++) {\n      if (jj_la1[i] == jj_gen) {\n        for (int j = 0; j < 32; j++) {\n          if ((jj_la1_0[i] & (1<<j)) != 0) {\n            la1tokens[j] = true;\n          }\n        }\n      }\n    }\n    for (int i = 0; i < 32; i++) {\n      if (la1tokens[i]) {\n        jj_expentry = new int[1];\n        jj_expentry[0] = i;\n        jj_expentries.add(jj_expentry);\n      }\n    }\n    jj_endpos = 0;\n    jj_rescan_token();\n    jj_add_error_token(0, 0);\n    int[][] exptokseq = new int[jj_expentries.size()][];\n    for (int i = 0; i < jj_expentries.size(); i++) {\n      exptokseq[i] = jj_expentries.get(i);\n    }\n    return new ParseException(token, exptokseq, tokenImage);\n  }\n\n","sourceOld":"  /** Generate ParseException. */\n  public ParseException generateParseException() {\n    jj_expentries.clear();\n    boolean[] la1tokens = new boolean[32];\n    if (jj_kind >= 0) {\n      la1tokens[jj_kind] = true;\n      jj_kind = -1;\n    }\n    for (int i = 0; i < 24; i++) {\n      if (jj_la1[i] == jj_gen) {\n        for (int j = 0; j < 32; j++) {\n          if ((jj_la1_0[i] & (1<<j)) != 0) {\n            la1tokens[j] = true;\n          }\n        }\n      }\n    }\n    for (int i = 0; i < 32; i++) {\n      if (la1tokens[i]) {\n        jj_expentry = new int[1];\n        jj_expentry[0] = i;\n        jj_expentries.add(jj_expentry);\n      }\n    }\n    jj_endpos = 0;\n    jj_rescan_token();\n    jj_add_error_token(0, 0);\n    int[][] exptokseq = new int[jj_expentries.size()][];\n    for (int i = 0; i < jj_expentries.size(); i++) {\n      exptokseq[i] = jj_expentries.get(i);\n    }\n    return new ParseException(token, exptokseq, tokenImage);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}