{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/LogTransformer#transformRow(Map[String,Object],Context).mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/LogTransformer#transformRow(Map[String,Object],Context).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/LogTransformer#transformRow(Map[String,Object],Context).mjava","sourceNew":"  @Override\n  public Object transformRow(Map<String, Object> row, Context ctx) {\n    String expr = ctx.getEntityAttribute(LOG_TEMPLATE);\n    String level = ctx.replaceTokens(ctx.getEntityAttribute(LOG_LEVEL));\n\n    if (expr == null || level == null) return row;\n\n    if (\"info\".equals(level)) {\n      if (LOG.isInfoEnabled())\n        LOG.info(ctx.replaceTokens(expr));\n    } else if (\"trace\".equals(level)) {\n      if (LOG.isTraceEnabled())\n        LOG.trace(ctx.replaceTokens(expr));\n    } else if (\"warn\".equals(level)) {\n      if (LOG.isWarnEnabled())\n        LOG.warn(ctx.replaceTokens(expr));\n    } else if (\"error\".equals(level)) {\n      if (LOG.isErrorEnabled())\n        LOG.error(ctx.replaceTokens(expr));\n    } else if (\"debug\".equals(level)) {\n      if (LOG.isDebugEnabled())\n        LOG.debug(ctx.replaceTokens(expr));\n    }\n\n    return row;\n  }\n\n","sourceOld":"  @Override\n  public Object transformRow(Map<String, Object> row, Context ctx) {\n    String expr = ctx.getEntityAttribute(LOG_TEMPLATE);\n    String level = ctx.replaceTokens(ctx.getEntityAttribute(LOG_LEVEL));\n\n    if (expr == null || level == null) return row;\n\n    if (\"info\".equals(level)) {\n      if (LOG.isInfoEnabled())\n        LOG.info(ctx.replaceTokens(expr));\n    } else if (\"trace\".equals(level)) {\n      if (LOG.isTraceEnabled())\n        LOG.trace(ctx.replaceTokens(expr));\n    } else if (\"warn\".equals(level)) {\n      if (LOG.isWarnEnabled())\n        LOG.warn(ctx.replaceTokens(expr));\n    } else if (\"error\".equals(level)) {\n      if (LOG.isErrorEnabled())\n        LOG.error(ctx.replaceTokens(expr));\n    } else if (\"debug\".equals(level)) {\n      if (LOG.isDebugEnabled())\n        LOG.debug(ctx.replaceTokens(expr));\n    }\n\n    return row;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/LogTransformer#transformRow(Map[String,Object],Context).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/LogTransformer#transformRow(Map[String,Object],Context).mjava","sourceNew":"  @Override\n  public Object transformRow(Map<String, Object> row, Context ctx) {\n    String expr = ctx.getEntityAttribute(LOG_TEMPLATE);\n    String level = ctx.replaceTokens(ctx.getEntityAttribute(LOG_LEVEL));\n\n    if (expr == null || level == null) return row;\n\n    if (\"info\".equals(level)) {\n      if (LOG.isInfoEnabled())\n        LOG.info(ctx.replaceTokens(expr));\n    } else if (\"trace\".equals(level)) {\n      if (LOG.isTraceEnabled())\n        LOG.trace(ctx.replaceTokens(expr));\n    } else if (\"warn\".equals(level)) {\n      if (LOG.isWarnEnabled())\n        LOG.warn(ctx.replaceTokens(expr));\n    } else if (\"error\".equals(level)) {\n      if (LOG.isErrorEnabled())\n        LOG.error(ctx.replaceTokens(expr));\n    } else if (\"debug\".equals(level)) {\n      if (LOG.isDebugEnabled())\n        LOG.debug(ctx.replaceTokens(expr));\n    }\n\n    return row;\n  }\n\n","sourceOld":"  @Override\n  public Object transformRow(Map<String, Object> row, Context ctx) {\n    String expr = ctx.getEntityAttribute(LOG_TEMPLATE);\n    String level = ctx.replaceTokens(ctx.getEntityAttribute(LOG_LEVEL));\n\n    if (expr == null || level == null) return row;\n\n    if (\"info\".equals(level)) {\n      if (LOG.isInfoEnabled())\n        LOG.info(ctx.replaceTokens(expr));\n    } else if (\"trace\".equals(level)) {\n      if (LOG.isTraceEnabled())\n        LOG.trace(ctx.replaceTokens(expr));\n    } else if (\"warn\".equals(level)) {\n      if (LOG.isWarnEnabled())\n        LOG.warn(ctx.replaceTokens(expr));\n    } else if (\"error\".equals(level)) {\n      if (LOG.isErrorEnabled())\n        LOG.error(ctx.replaceTokens(expr));\n    } else if (\"debug\".equals(level)) {\n      if (LOG.isDebugEnabled())\n        LOG.debug(ctx.replaceTokens(expr));\n    }\n\n    return row;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd","date":1534976797,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/LogTransformer#transformRow(Map[String,Object],Context).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/LogTransformer#transformRow(Map[String,Object],Context).mjava","sourceNew":"  @Override\n  public Object transformRow(Map<String, Object> row, Context ctx) {\n    String expr = ctx.getEntityAttribute(LOG_TEMPLATE);\n    String level = ctx.replaceTokens(ctx.getEntityAttribute(LOG_LEVEL));\n\n    if (expr == null || level == null) return row;\n\n    if (\"info\".equals(level)) {\n      if (log.isInfoEnabled())\n        log.info(ctx.replaceTokens(expr));\n    } else if (\"trace\".equals(level)) {\n      if (log.isTraceEnabled())\n        log.trace(ctx.replaceTokens(expr));\n    } else if (\"warn\".equals(level)) {\n      if (log.isWarnEnabled())\n        log.warn(ctx.replaceTokens(expr));\n    } else if (\"error\".equals(level)) {\n      if (log.isErrorEnabled())\n        log.error(ctx.replaceTokens(expr));\n    } else if (\"debug\".equals(level)) {\n      if (log.isDebugEnabled())\n        log.debug(ctx.replaceTokens(expr));\n    }\n\n    return row;\n  }\n\n","sourceOld":"  @Override\n  public Object transformRow(Map<String, Object> row, Context ctx) {\n    String expr = ctx.getEntityAttribute(LOG_TEMPLATE);\n    String level = ctx.replaceTokens(ctx.getEntityAttribute(LOG_LEVEL));\n\n    if (expr == null || level == null) return row;\n\n    if (\"info\".equals(level)) {\n      if (LOG.isInfoEnabled())\n        LOG.info(ctx.replaceTokens(expr));\n    } else if (\"trace\".equals(level)) {\n      if (LOG.isTraceEnabled())\n        LOG.trace(ctx.replaceTokens(expr));\n    } else if (\"warn\".equals(level)) {\n      if (LOG.isWarnEnabled())\n        LOG.warn(ctx.replaceTokens(expr));\n    } else if (\"error\".equals(level)) {\n      if (LOG.isErrorEnabled())\n        LOG.error(ctx.replaceTokens(expr));\n    } else if (\"debug\".equals(level)) {\n      if (LOG.isDebugEnabled())\n        LOG.debug(ctx.replaceTokens(expr));\n    }\n\n    return row;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/LogTransformer#transformRow(Map[String,Object],Context).mjava","sourceNew":null,"sourceOld":"  @Override\n  public Object transformRow(Map<String, Object> row, Context ctx) {\n    String expr = ctx.getEntityAttribute(LOG_TEMPLATE);\n    String level = ctx.replaceTokens(ctx.getEntityAttribute(LOG_LEVEL));\n\n    if (expr == null || level == null) return row;\n\n    if (\"info\".equals(level)) {\n      if (log.isInfoEnabled())\n        log.info(ctx.replaceTokens(expr));\n    } else if (\"trace\".equals(level)) {\n      if (log.isTraceEnabled())\n        log.trace(ctx.replaceTokens(expr));\n    } else if (\"warn\".equals(level)) {\n      if (log.isWarnEnabled())\n        log.warn(ctx.replaceTokens(expr));\n    } else if (\"error\".equals(level)) {\n      if (log.isErrorEnabled())\n        log.error(ctx.replaceTokens(expr));\n    } else if (\"debug\".equals(level)) {\n      if (log.isDebugEnabled())\n        log.debug(ctx.replaceTokens(expr));\n    }\n\n    return row;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}