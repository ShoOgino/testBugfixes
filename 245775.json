{"path":"solr/core/src/java/org/apache/solr/handler/export/BoolFieldWriter#write(SortDoc,LeafReader,MapWriter.EntryWriter,int).mjava","commits":[{"id":"a7eb5b8b79759ebbe90a0605a50c666ba0b83789","date":1535046490,"type":0,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/export/BoolFieldWriter#write(SortDoc,LeafReader,MapWriter.EntryWriter,int).mjava","pathOld":"/dev/null","sourceNew":"  public boolean write(SortDoc sortDoc, LeafReader reader, MapWriter.EntryWriter ew, int fieldIndex) throws IOException {\n    BytesRef ref;\n    SortValue sortValue = sortDoc.getSortValue(this.field);\n    if (sortValue != null) {\n      if (sortValue.isPresent()) {\n        ref = (BytesRef) sortValue.getCurrentValue();\n      } else { //empty-value\n        return false;\n      }\n    } else {\n      // field is not part of 'sort' param, but part of 'fl' param\n      SortedDocValues vals = DocValues.getSorted(reader, this.field);\n      if (vals.advance(sortDoc.docId) != sortDoc.docId) {\n        return false;\n      }\n      int ord = vals.ordValue();\n      ref = vals.lookupOrd(ord);\n    }\n\n    fieldType.indexedToReadable(ref, cref);\n    ew.put(this.field, \"true\".equals(cref.toString()));\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a7eb5b8b79759ebbe90a0605a50c666ba0b83789":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a7eb5b8b79759ebbe90a0605a50c666ba0b83789"]},"commit2Childs":{"a7eb5b8b79759ebbe90a0605a50c666ba0b83789":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a7eb5b8b79759ebbe90a0605a50c666ba0b83789"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}