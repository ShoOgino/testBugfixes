{"path":"src/test/org/apache/solr/search/TestDocSet#getRandomHashDocset(int,int).mjava","commits":[{"id":"0e97c9c9ecb6ca9b558635bc9787f15f4cf19040","date":1169358391,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/search/TestDocSet#getRandomHashDocset(int,int).mjava","pathOld":"/dev/null","sourceNew":"  public HashDocSet getRandomHashDocset(int maxSetSize, int maxDoc) {\n    int n = rand.nextInt(maxSetSize);\n    OpenBitSet obs = new OpenBitSet(maxDoc);\n    int[] a = new int[n];\n    for (int i=0; i<n; i++) {\n      for(;;) {\n        int idx = rand.nextInt(maxDoc);\n        if (obs.getAndSet(idx)) continue;\n        a[i]=idx;\n        break;\n      }\n    }\n    return loadfactor!=0 ? new HashDocSet(a,0,n,1/loadfactor) : new HashDocSet(a,0,n);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30391436869a41b74d4ba7098c40d955b686a10c","date":1242835871,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/search/TestDocSet#getRandomDocSet(int,int).mjava","pathOld":"src/test/org/apache/solr/search/TestDocSet#getRandomHashDocset(int,int).mjava","sourceNew":"  public DocSet getRandomDocSet(int n, int maxDoc) {\n    OpenBitSet obs = new OpenBitSet(maxDoc);\n    int[] a = new int[n];\n    for (int i=0; i<n; i++) {\n      for(;;) {\n        int idx = rand.nextInt(maxDoc);\n        if (obs.getAndSet(idx)) continue;\n        a[i]=idx;\n        break;\n      }\n    }\n\n    if (n <= smallSetCuttoff) {\n      if (smallSetType ==0) {\n        Arrays.sort(a);\n        return new SortedIntDocSet(a);\n      } else if (smallSetType ==1) {\n        Arrays.sort(a);\n        return loadfactor!=0 ? new HashDocSet(a,0,n,1/loadfactor) : new HashDocSet(a,0,n);\n      }\n    }\n\n    return new BitDocSet(obs, n);\n  }\n\n","sourceOld":"  public HashDocSet getRandomHashDocset(int maxSetSize, int maxDoc) {\n    int n = rand.nextInt(maxSetSize);\n    OpenBitSet obs = new OpenBitSet(maxDoc);\n    int[] a = new int[n];\n    for (int i=0; i<n; i++) {\n      for(;;) {\n        int idx = rand.nextInt(maxDoc);\n        if (obs.getAndSet(idx)) continue;\n        a[i]=idx;\n        break;\n      }\n    }\n    return loadfactor!=0 ? new HashDocSet(a,0,n,1/loadfactor) : new HashDocSet(a,0,n);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"30391436869a41b74d4ba7098c40d955b686a10c":["0e97c9c9ecb6ca9b558635bc9787f15f4cf19040"],"0e97c9c9ecb6ca9b558635bc9787f15f4cf19040":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0e97c9c9ecb6ca9b558635bc9787f15f4cf19040"],"30391436869a41b74d4ba7098c40d955b686a10c":[],"0e97c9c9ecb6ca9b558635bc9787f15f4cf19040":["30391436869a41b74d4ba7098c40d955b686a10c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["30391436869a41b74d4ba7098c40d955b686a10c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}