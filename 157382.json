{"path":"contrib/swing/src/java/org/apache/lucene/swing/models/TableSearcher#resetSearchResults(IndexSearcher,Query).mjava","commits":[{"id":"0f148c02ddd6ba981c65ca685d0e56c3a98368e1","date":1254892102,"type":1,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/swing/src/java/org/apache/lucene/swing/models/TableSearcher#resetSearchResults(IndexSearcher,Query).mjava","pathOld":"contrib/swing/src/java/org/apache/lucene/swing/models/TableSearcher#resetSearchResults(Hits).mjava","sourceNew":"    /**\n     *\n     * @param hits The new result set to set this table to.\n     */\n    private void resetSearchResults(IndexSearcher searcher, Query query) {\n        try {\n            //clear our index mapping this table model rows to\n            //the decorated inner table model\n            rowToModelIndex.clear();\n            \n            CountingCollector countingCollector = new CountingCollector();\n            searcher.search(query, countingCollector);\n            ScoreDoc[] hits = searcher.search(query, countingCollector.numHits).scoreDocs;\n            \n            //iterate through the hits\n            //get the row number stored at the index\n            //that number is the row number of the decorated\n            //table model row that we are mapping to\n            for (int t=0; t<hits.length; t++){\n                Document document = searcher.doc(hits[t].doc);\n                Fieldable field = document.getField(ROW_NUMBER);\n                rowToModelIndex.add(Integer.valueOf(field.stringValue()));\n            }\n        } catch (Exception e){\n            e.printStackTrace();\n        }\n    }\n\n","sourceOld":"    /**\n     *\n     * @param hits The new result set to set this table to.\n     */\n    private void resetSearchResults(Hits hits) {\n        try {\n            //clear our index mapping this table model rows to\n            //the decorated inner table model\n            rowToModelIndex.clear();\n            //iterate through the hits\n            //get the row number stored at the index\n            //that number is the row number of the decorated\n            //table model row that we are mapping to\n            for (int t=0; t<hits.length(); t++){\n                Document document = hits.doc(t);\n                Fieldable field = document.getField(ROW_NUMBER);\n                rowToModelIndex.add(Integer.valueOf(field.stringValue()));\n            }\n        } catch (Exception e){\n            e.printStackTrace();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/swing/src/java/org/apache/lucene/swing/models/TableSearcher#resetSearchResults(IndexSearcher,Query).mjava","pathOld":"contrib/swing/src/java/org/apache/lucene/swing/models/TableSearcher#resetSearchResults(IndexSearcher,Query).mjava","sourceNew":"    /**\n     *\n     * @param hits The new result set to set this table to.\n     */\n    private void resetSearchResults(IndexSearcher searcher, Query query) {\n        try {\n            //clear our index mapping this table model rows to\n            //the decorated inner table model\n            rowToModelIndex.clear();\n            \n            CountingCollector countingCollector = new CountingCollector();\n            searcher.search(query, countingCollector);\n            ScoreDoc[] hits = searcher.search(query, countingCollector.numHits).scoreDocs;\n            \n            //iterate through the hits\n            //get the row number stored at the index\n            //that number is the row number of the decorated\n            //table model row that we are mapping to\n            for (int t=0; t<hits.length; t++){\n                Document document = searcher.doc(hits[t].doc);\n                Fieldable field = document.getField(ROW_NUMBER);\n                rowToModelIndex.add(Integer.valueOf(field.stringValue()));\n            }\n        } catch (Exception e){\n            e.printStackTrace();\n        }\n    }\n\n","sourceOld":"    /**\n     *\n     * @param hits The new result set to set this table to.\n     */\n    private void resetSearchResults(IndexSearcher searcher, Query query) {\n        try {\n            //clear our index mapping this table model rows to\n            //the decorated inner table model\n            rowToModelIndex.clear();\n            \n            CountingCollector countingCollector = new CountingCollector();\n            searcher.search(query, countingCollector);\n            ScoreDoc[] hits = searcher.search(query, countingCollector.numHits).scoreDocs;\n            \n            //iterate through the hits\n            //get the row number stored at the index\n            //that number is the row number of the decorated\n            //table model row that we are mapping to\n            for (int t=0; t<hits.length; t++){\n                Document document = searcher.doc(hits[t].doc);\n                Fieldable field = document.getField(ROW_NUMBER);\n                rowToModelIndex.add(Integer.valueOf(field.stringValue()));\n            }\n        } catch (Exception e){\n            e.printStackTrace();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f148c02ddd6ba981c65ca685d0e56c3a98368e1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f148c02ddd6ba981c65ca685d0e56c3a98368e1"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f148c02ddd6ba981c65ca685d0e56c3a98368e1"],"0f148c02ddd6ba981c65ca685d0e56c3a98368e1":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}