{"path":"solr/solrj/src/test/org/apache/solr/autoscaling/TestPolicy#testRow().mjava","commits":[{"id":"653c1ca305e0065ee988a09e59c8316b8cde02fd","date":1492506780,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/autoscaling/TestPolicy#testRow().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/recipe/TestPolicy#testRow().mjava","sourceNew":"  public void testRow() {\n    Row row = new Row(\"nodex\", new Cell[]{new Cell(0, \"node\", \"nodex\")}, false, new HashMap<>(), new ArrayList<>());\n    Row r1 = row.addReplica(\"c1\", \"s1\");\n    Row r2 = r1.addReplica(\"c1\", \"s1\");\n    assertEquals(1, r1.replicaInfo.get(\"c1\").get(\"s1\").size());\n    assertEquals(2, r2.replicaInfo.get(\"c1\").get(\"s1\").size());\n    assertTrue(r2.replicaInfo.get(\"c1\").get(\"s1\").get(0) instanceof Policy.ReplicaInfo);\n    assertTrue(r2.replicaInfo.get(\"c1\").get(\"s1\").get(1) instanceof Policy.ReplicaInfo);\n  }\n\n","sourceOld":"  public void testRow() {\n    Row row = new Row(\"nodex\", new Cell[]{new Cell(0, \"node\", \"nodex\")}, false, new HashMap<>(), new ArrayList<>());\n    Row r1 = row.addReplica(\"c1\", \"s1\");\n    Row r2 = r1.addReplica(\"c1\", \"s1\");\n    assertEquals(1, r1.replicaInfo.get(\"c1\").get(\"s1\").size());\n    assertEquals(2, r2.replicaInfo.get(\"c1\").get(\"s1\").size());\n    assertTrue(r2.replicaInfo.get(\"c1\").get(\"s1\").get(0) instanceof Policy.ReplicaInfo);\n    assertTrue(r2.replicaInfo.get(\"c1\").get(\"s1\").get(1) instanceof Policy.ReplicaInfo);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e5541f5cc0c9aacf1f335982e2924c4ebeb56f92","date":1492510959,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/cloud/autoscaling/TestPolicy#testRow().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/autoscaling/TestPolicy#testRow().mjava","sourceNew":"  public void testRow() {\n    Row row = new Row(\"nodex\", new Cell[]{new Cell(0, \"node\", \"nodex\")}, false, new HashMap<>(), new ArrayList<>());\n    Row r1 = row.addReplica(\"c1\", \"s1\");\n    Row r2 = r1.addReplica(\"c1\", \"s1\");\n    assertEquals(1, r1.replicaInfo.get(\"c1\").get(\"s1\").size());\n    assertEquals(2, r2.replicaInfo.get(\"c1\").get(\"s1\").size());\n    assertTrue(r2.replicaInfo.get(\"c1\").get(\"s1\").get(0) instanceof Policy.ReplicaInfo);\n    assertTrue(r2.replicaInfo.get(\"c1\").get(\"s1\").get(1) instanceof Policy.ReplicaInfo);\n  }\n\n","sourceOld":"  public void testRow() {\n    Row row = new Row(\"nodex\", new Cell[]{new Cell(0, \"node\", \"nodex\")}, false, new HashMap<>(), new ArrayList<>());\n    Row r1 = row.addReplica(\"c1\", \"s1\");\n    Row r2 = r1.addReplica(\"c1\", \"s1\");\n    assertEquals(1, r1.replicaInfo.get(\"c1\").get(\"s1\").size());\n    assertEquals(2, r2.replicaInfo.get(\"c1\").get(\"s1\").size());\n    assertTrue(r2.replicaInfo.get(\"c1\").get(\"s1\").get(0) instanceof Policy.ReplicaInfo);\n    assertTrue(r2.replicaInfo.get(\"c1\").get(\"s1\").get(1) instanceof Policy.ReplicaInfo);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"653c1ca305e0065ee988a09e59c8316b8cde02fd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e5541f5cc0c9aacf1f335982e2924c4ebeb56f92":["653c1ca305e0065ee988a09e59c8316b8cde02fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["653c1ca305e0065ee988a09e59c8316b8cde02fd","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"653c1ca305e0065ee988a09e59c8316b8cde02fd":["e5541f5cc0c9aacf1f335982e2924c4ebeb56f92"],"e5541f5cc0c9aacf1f335982e2924c4ebeb56f92":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e5541f5cc0c9aacf1f335982e2924c4ebeb56f92","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}