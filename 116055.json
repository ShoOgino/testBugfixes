{"path":"src/java/org/apache/solr/schema/FieldType#getRangeQuery(String,String,String,boolean).mjava","commits":[{"id":"d0b3b236a1a9fb0ab54d5afc732ee5e580b607df","date":1236801004,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/FieldType#getRangeQuery(String,String,String,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns a Query instance for doing range searches on this field type\n   *\n   * @param field the name of the field\n   * @param part1 the lower boundary of the range\n   * @param part2 the upper boundary of the range\n   * @param inclusive whether the range is inclusive or not\n   * @return a Query instance to perform range search according to given parameters\n   */\n  public Query getRangeQuery(String field, String part1, String part2, boolean inclusive) {\n    RangeQuery rangeQuery = new RangeQuery(\n            field,\n            \"*\".equals(part1) ? null : toInternal(part1),\n            \"*\".equals(part2) ? null : toInternal(part2),\n            inclusive, inclusive);\n    rangeQuery.setConstantScoreRewrite(true);\n    return rangeQuery;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6607c2e2193cd450f258dfc01588ecbb25a75ae","date":1236839053,"type":4,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/solr/schema/FieldType#getRangeQuery(String,String,String,boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns a Query instance for doing range searches on this field type\n   *\n   * @param field the name of the field\n   * @param part1 the lower boundary of the range\n   * @param part2 the upper boundary of the range\n   * @param inclusive whether the range is inclusive or not\n   * @return a Query instance to perform range search according to given parameters\n   */\n  public Query getRangeQuery(String field, String part1, String part2, boolean inclusive) {\n    RangeQuery rangeQuery = new RangeQuery(\n            field,\n            \"*\".equals(part1) ? null : toInternal(part1),\n            \"*\".equals(part2) ? null : toInternal(part2),\n            inclusive, inclusive);\n    rangeQuery.setConstantScoreRewrite(true);\n    return rangeQuery;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"d0b3b236a1a9fb0ab54d5afc732ee5e580b607df":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"c6607c2e2193cd450f258dfc01588ecbb25a75ae":["d0b3b236a1a9fb0ab54d5afc732ee5e580b607df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["d0b3b236a1a9fb0ab54d5afc732ee5e580b607df"],"d0b3b236a1a9fb0ab54d5afc732ee5e580b607df":["c6607c2e2193cd450f258dfc01588ecbb25a75ae"],"c6607c2e2193cd450f258dfc01588ecbb25a75ae":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c6607c2e2193cd450f258dfc01588ecbb25a75ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}