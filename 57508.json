{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/charstream/CharStream#backup(int).mjava","commits":[{"id":"5f43184d94158070757ac9bb9d71dc7b72925013","date":1600412010,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/charstream/CharStream#backup(int).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/CharStream#backup(int).mjava","sourceNew":"  /**\n   * Backs up the input stream by amount steps. Lexer calls this method if it\n   * had already read some characters, but could not use them to match a\n   * (longer) token. So, they will be used again as the prefix of the next\n   * token and it is the implementation's responsibility to do this right.\n   */\n  void backup(int amount);\n\n","sourceOld":"  /**\n   * Backs up the input stream by amount steps. Lexer calls this method if it\n   * had already read some characters, but could not use them to match a\n   * (longer) token. So, they will be used again as the prefix of the next\n   * token and it is the implementation's responsibility to do this right.\n   */\n  void backup(int amount);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5f43184d94158070757ac9bb9d71dc7b72925013":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5f43184d94158070757ac9bb9d71dc7b72925013"]},"commit2Childs":{"5f43184d94158070757ac9bb9d71dc7b72925013":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5f43184d94158070757ac9bb9d71dc7b72925013"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}