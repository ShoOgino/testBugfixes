{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testReallyNoNormsForDrillDown().mjava","commits":[{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testReallyNoNormsForDrillDown().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetCounts#testReallyNoNormsForDrillDown().mjava","sourceNew":"  public void testReallyNoNormsForDrillDown() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setSimilarity(new PerFieldSimilarityWrapper() {\n        final Similarity sim = new DefaultSimilarity();\n\n        @Override\n        public Similarity get(String name) {\n          assertEquals(\"field\", name);\n          return sim;\n        }\n      });\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, iwc);\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"a\", \"path\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n    IOUtils.close(writer, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testReallyNoNormsForDrillDown() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setSimilarity(new PerFieldSimilarityWrapper() {\n        final Similarity sim = new DefaultSimilarity();\n\n        @Override\n        public Similarity get(String name) {\n          assertEquals(\"field\", name);\n          return sim;\n        }\n      });\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, iwc);\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"a\", \"path\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n    IOUtils.close(writer, taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testReallyNoNormsForDrillDown().mjava","pathOld":"/dev/null","sourceNew":"  public void testReallyNoNormsForDrillDown() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setSimilarity(new PerFieldSimilarityWrapper() {\n        final Similarity sim = new DefaultSimilarity();\n\n        @Override\n        public Similarity get(String name) {\n          assertEquals(\"field\", name);\n          return sim;\n        }\n      });\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, iwc);\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"a\", \"path\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n    IOUtils.close(writer, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testReallyNoNormsForDrillDown().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testReallyNoNormsForDrillDown().mjava","sourceNew":"  public void testReallyNoNormsForDrillDown() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setSimilarity(new PerFieldSimilarityWrapper() {\n        final Similarity sim = new DefaultSimilarity();\n\n        @Override\n        public Similarity get(String name) {\n          assertEquals(\"field\", name);\n          return sim;\n        }\n      });\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, iwc);\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"a\", \"path\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n    writer.shutdown();\n    IOUtils.close(taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testReallyNoNormsForDrillDown() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setSimilarity(new PerFieldSimilarityWrapper() {\n        final Similarity sim = new DefaultSimilarity();\n\n        @Override\n        public Similarity get(String name) {\n          assertEquals(\"field\", name);\n          return sim;\n        }\n      });\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, iwc);\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"a\", \"path\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n    IOUtils.close(writer, taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testReallyNoNormsForDrillDown().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testReallyNoNormsForDrillDown().mjava","sourceNew":"  public void testReallyNoNormsForDrillDown() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setSimilarity(new PerFieldSimilarityWrapper() {\n        final Similarity sim = new DefaultSimilarity();\n\n        @Override\n        public Similarity get(String name) {\n          assertEquals(\"field\", name);\n          return sim;\n        }\n      });\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, iwc);\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"a\", \"path\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n    writer.shutdown();\n    IOUtils.close(taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testReallyNoNormsForDrillDown() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setSimilarity(new PerFieldSimilarityWrapper() {\n        final Similarity sim = new DefaultSimilarity();\n\n        @Override\n        public Similarity get(String name) {\n          assertEquals(\"field\", name);\n          return sim;\n        }\n      });\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, iwc);\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"a\", \"path\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n    writer.shutdown();\n    IOUtils.close(taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testReallyNoNormsForDrillDown().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testReallyNoNormsForDrillDown().mjava","sourceNew":"  public void testReallyNoNormsForDrillDown() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setSimilarity(new PerFieldSimilarityWrapper() {\n        final Similarity sim = new DefaultSimilarity();\n\n        @Override\n        public Similarity get(String name) {\n          assertEquals(\"field\", name);\n          return sim;\n        }\n      });\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, iwc);\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"a\", \"path\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n    writer.close();\n    IOUtils.close(taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testReallyNoNormsForDrillDown() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setSimilarity(new PerFieldSimilarityWrapper() {\n        final Similarity sim = new DefaultSimilarity();\n\n        @Override\n        public Similarity get(String name) {\n          assertEquals(\"field\", name);\n          return sim;\n        }\n      });\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, iwc);\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"a\", \"path\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n    writer.shutdown();\n    IOUtils.close(taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81d0720146de53dd3a4a023d2a3d1089d86d748d","date":1442268215,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testReallyNoNormsForDrillDown().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testReallyNoNormsForDrillDown().mjava","sourceNew":"  public void testReallyNoNormsForDrillDown() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setSimilarity(new PerFieldSimilarityWrapper() {\n        final Similarity sim = new ClassicSimilarity();\n\n        @Override\n        public Similarity get(String name) {\n          assertEquals(\"field\", name);\n          return sim;\n        }\n      });\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, iwc);\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"a\", \"path\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n    writer.close();\n    IOUtils.close(taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testReallyNoNormsForDrillDown() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setSimilarity(new PerFieldSimilarityWrapper() {\n        final Similarity sim = new DefaultSimilarity();\n\n        @Override\n        public Similarity get(String name) {\n          assertEquals(\"field\", name);\n          return sim;\n        }\n      });\n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, iwc);\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"a\", \"path\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n    writer.close();\n    IOUtils.close(taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"4edc984f0f4ac77c37e48ace2932f780f888453c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4edc984f0f4ac77c37e48ace2932f780f888453c"],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["81d0720146de53dd3a4a023d2a3d1089d86d748d"]},"commit2Childs":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4edc984f0f4ac77c37e48ace2932f780f888453c","3cc728b07df73b197e6d940d27f9b08b63918f13"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["81d0720146de53dd3a4a023d2a3d1089d86d748d"],"4edc984f0f4ac77c37e48ace2932f780f888453c":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}