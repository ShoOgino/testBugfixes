{"path":"src/test/org/apache/lucene/util/TestRamUsageEstimator#testBasic().mjava","commits":[{"id":"e69f59b863731d864bf3047235e718f0f88f8841","date":1250105498,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/TestRamUsageEstimator#testBasic().mjava","pathOld":"/dev/null","sourceNew":"  public void testBasic() {\n    String string = new String(\"test str\");\n    RamUsageEstimator rue = new RamUsageEstimator();\n    long size = rue.estimateRamUsage(string);\n    System.out.println(\"size:\" + size);\n    \n    string = new String(\"test strin\");\n    size = rue.estimateRamUsage(string);\n    System.out.println(\"size:\" + size);\n    \n    Holder holder = new Holder();\n    holder.holder = new Holder(\"string2\", 5000L);\n    size = rue.estimateRamUsage(holder);\n    System.out.println(\"size:\" + size);\n    \n    String[] strings = new String[]{new String(\"test strin\"), new String(\"hollow\"), new String(\"catchmaster\")};\n    size = rue.estimateRamUsage(strings);\n    System.out.println(\"size:\" + size);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3f120eb94865fb64d985b156707fd31a5b7f16d","date":1263504859,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/TestRamUsageEstimator#testBasic().mjava","pathOld":"src/test/org/apache/lucene/util/TestRamUsageEstimator#testBasic().mjava","sourceNew":"  public void testBasic() {\n    String string = new String(\"test str\");\n    RamUsageEstimator rue = new RamUsageEstimator();\n    long size = rue.estimateRamUsage(string);\n    //System.out.println(\"size:\" + size);\n    \n    string = new String(\"test strin\");\n    size = rue.estimateRamUsage(string);\n    //System.out.println(\"size:\" + size);\n    \n    Holder holder = new Holder();\n    holder.holder = new Holder(\"string2\", 5000L);\n    size = rue.estimateRamUsage(holder);\n    //System.out.println(\"size:\" + size);\n    \n    String[] strings = new String[]{new String(\"test strin\"), new String(\"hollow\"), new String(\"catchmaster\")};\n    size = rue.estimateRamUsage(strings);\n    //System.out.println(\"size:\" + size);\n  }\n\n","sourceOld":"  public void testBasic() {\n    String string = new String(\"test str\");\n    RamUsageEstimator rue = new RamUsageEstimator();\n    long size = rue.estimateRamUsage(string);\n    System.out.println(\"size:\" + size);\n    \n    string = new String(\"test strin\");\n    size = rue.estimateRamUsage(string);\n    System.out.println(\"size:\" + size);\n    \n    Holder holder = new Holder();\n    holder.holder = new Holder(\"string2\", 5000L);\n    size = rue.estimateRamUsage(holder);\n    System.out.println(\"size:\" + size);\n    \n    String[] strings = new String[]{new String(\"test strin\"), new String(\"hollow\"), new String(\"catchmaster\")};\n    size = rue.estimateRamUsage(strings);\n    System.out.println(\"size:\" + size);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/TestRamUsageEstimator#testBasic().mjava","pathOld":"src/test/org/apache/lucene/util/TestRamUsageEstimator#testBasic().mjava","sourceNew":"  public void testBasic() {\n    RamUsageEstimator rue = new RamUsageEstimator();\n    rue.estimateRamUsage(\"test str\");\n    \n    rue.estimateRamUsage(\"test strin\");\n    \n    Holder holder = new Holder();\n    holder.holder = new Holder(\"string2\", 5000L);\n    rue.estimateRamUsage(holder);\n    \n    String[] strings = new String[]{new String(\"test strin\"), new String(\"hollow\"), new String(\"catchmaster\")};\n    rue.estimateRamUsage(strings);\n  }\n\n","sourceOld":"  public void testBasic() {\n    String string = new String(\"test str\");\n    RamUsageEstimator rue = new RamUsageEstimator();\n    long size = rue.estimateRamUsage(string);\n    //System.out.println(\"size:\" + size);\n    \n    string = new String(\"test strin\");\n    size = rue.estimateRamUsage(string);\n    //System.out.println(\"size:\" + size);\n    \n    Holder holder = new Holder();\n    holder.holder = new Holder(\"string2\", 5000L);\n    size = rue.estimateRamUsage(holder);\n    //System.out.println(\"size:\" + size);\n    \n    String[] strings = new String[]{new String(\"test strin\"), new String(\"hollow\"), new String(\"catchmaster\")};\n    size = rue.estimateRamUsage(strings);\n    //System.out.println(\"size:\" + size);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/TestRamUsageEstimator#testBasic().mjava","pathOld":"src/test/org/apache/lucene/util/TestRamUsageEstimator#testBasic().mjava","sourceNew":"  public void testBasic() {\n    RamUsageEstimator rue = new RamUsageEstimator();\n    rue.estimateRamUsage(\"test str\");\n    \n    rue.estimateRamUsage(\"test strin\");\n    \n    Holder holder = new Holder();\n    holder.holder = new Holder(\"string2\", 5000L);\n    rue.estimateRamUsage(holder);\n    \n    String[] strings = new String[]{new String(\"test strin\"), new String(\"hollow\"), new String(\"catchmaster\")};\n    rue.estimateRamUsage(strings);\n  }\n\n","sourceOld":"  public void testBasic() {\n    RamUsageEstimator rue = new RamUsageEstimator();\n    rue.estimateRamUsage(\"test str\");\n    \n    rue.estimateRamUsage(\"test strin\");\n    \n    Holder holder = new Holder();\n    holder.holder = new Holder(\"string2\", 5000L);\n    rue.estimateRamUsage(holder);\n    \n    String[] strings = new String[]{new String(\"test strin\"), new String(\"hollow\"), new String(\"catchmaster\")};\n    rue.estimateRamUsage(strings);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e69f59b863731d864bf3047235e718f0f88f8841":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3f120eb94865fb64d985b156707fd31a5b7f16d":["e69f59b863731d864bf3047235e718f0f88f8841"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["a3f120eb94865fb64d985b156707fd31a5b7f16d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"]},"commit2Childs":{"e69f59b863731d864bf3047235e718f0f88f8841":["a3f120eb94865fb64d985b156707fd31a5b7f16d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e69f59b863731d864bf3047235e718f0f88f8841"],"a3f120eb94865fb64d985b156707fd31a5b7f16d":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}