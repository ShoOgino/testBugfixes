{"path":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSnapshotCloudManager#testComplexSnapshot().mjava","commits":[{"id":"d3d2a34ea3732f91149b31bcad82026ad85fda69","date":1567850949,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSnapshotCloudManager#testComplexSnapshot().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testComplexSnapshot() throws Exception {\n    File snapshotDir = new File(TEST_HOME(), \"simSnapshot\");\n    SnapshotCloudManager snapshotCloudManager = SnapshotCloudManager.readSnapshot(snapshotDir);\n    assertEquals(48, snapshotCloudManager.getClusterStateProvider().getLiveNodes().size());\n    assertEquals(16, snapshotCloudManager.getClusterStateProvider().getClusterState().getCollectionStates().size());\n    try (SimCloudManager simCloudManager = SimCloudManager.createCluster(snapshotCloudManager, null, TimeSource.get(\"simTime:50\"))) {\n      List<Suggester.SuggestionInfo> suggestions = PolicyHelper.getSuggestions(simCloudManager.getDistribStateManager().getAutoScalingConfig(), simCloudManager);\n      assertEquals(1, suggestions.size());\n      Suggester.SuggestionInfo suggestion = suggestions.get(0);\n      assertEquals(Suggestion.Type.improvement.toString(), suggestion.toMap(new HashMap<>()).get(\"type\").toString());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ff2bd5b972343cb757395c4fc17ff79cca899a3","date":1567887802,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSnapshotCloudManager#testComplexSnapshot().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSnapshotCloudManager#testComplexSnapshot().mjava","sourceNew":"  @Test\n  public void testComplexSnapshot() throws Exception {\n    File snapshotDir = new File(TEST_HOME(), \"simSnapshot\");\n    SnapshotCloudManager snapshotCloudManager = SnapshotCloudManager.readSnapshot(snapshotDir);\n    assertEquals(48, snapshotCloudManager.getClusterStateProvider().getLiveNodes().size());\n    assertEquals(16, snapshotCloudManager.getClusterStateProvider().getClusterState().getCollectionStates().size());\n    try (SimCloudManager simCloudManager = SimCloudManager.createCluster(snapshotCloudManager, null, TimeSource.get(\"simTime:50\"))) {\n      List<Suggester.SuggestionInfo> suggestions = PolicyHelper.getSuggestions(simCloudManager.getDistribStateManager().getAutoScalingConfig(), simCloudManager);\n      //assertEquals(1, suggestions.size());\n      if (suggestions.size() > 0) {\n        Suggester.SuggestionInfo suggestion = suggestions.get(0);\n        assertEquals(Suggestion.Type.improvement.toString(), suggestion.toMap(new HashMap<>()).get(\"type\").toString());\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testComplexSnapshot() throws Exception {\n    File snapshotDir = new File(TEST_HOME(), \"simSnapshot\");\n    SnapshotCloudManager snapshotCloudManager = SnapshotCloudManager.readSnapshot(snapshotDir);\n    assertEquals(48, snapshotCloudManager.getClusterStateProvider().getLiveNodes().size());\n    assertEquals(16, snapshotCloudManager.getClusterStateProvider().getClusterState().getCollectionStates().size());\n    try (SimCloudManager simCloudManager = SimCloudManager.createCluster(snapshotCloudManager, null, TimeSource.get(\"simTime:50\"))) {\n      List<Suggester.SuggestionInfo> suggestions = PolicyHelper.getSuggestions(simCloudManager.getDistribStateManager().getAutoScalingConfig(), simCloudManager);\n      assertEquals(1, suggestions.size());\n      Suggester.SuggestionInfo suggestion = suggestions.get(0);\n      assertEquals(Suggestion.Type.improvement.toString(), suggestion.toMap(new HashMap<>()).get(\"type\").toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSnapshotCloudManager#testComplexSnapshot().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testComplexSnapshot() throws Exception {\n    File snapshotDir = new File(TEST_HOME(), \"simSnapshot\");\n    SnapshotCloudManager snapshotCloudManager = SnapshotCloudManager.readSnapshot(snapshotDir);\n    assertEquals(48, snapshotCloudManager.getClusterStateProvider().getLiveNodes().size());\n    assertEquals(16, snapshotCloudManager.getClusterStateProvider().getClusterState().getCollectionStates().size());\n    try (SimCloudManager simCloudManager = SimCloudManager.createCluster(snapshotCloudManager, null, TimeSource.get(\"simTime:50\"))) {\n      List<Suggester.SuggestionInfo> suggestions = PolicyHelper.getSuggestions(simCloudManager.getDistribStateManager().getAutoScalingConfig(), simCloudManager);\n      //assertEquals(1, suggestions.size());\n      if (suggestions.size() > 0) {\n        Suggester.SuggestionInfo suggestion = suggestions.get(0);\n        assertEquals(Suggestion.Type.improvement.toString(), suggestion.toMap(new HashMap<>()).get(\"type\").toString());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3d2a34ea3732f91149b31bcad82026ad85fda69":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7ff2bd5b972343cb757395c4fc17ff79cca899a3":["d3d2a34ea3732f91149b31bcad82026ad85fda69"],"3f504512a03d978990cbff30db0522b354e846db":["7ff2bd5b972343cb757395c4fc17ff79cca899a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"d3d2a34ea3732f91149b31bcad82026ad85fda69":["7ff2bd5b972343cb757395c4fc17ff79cca899a3"],"7ff2bd5b972343cb757395c4fc17ff79cca899a3":["3f504512a03d978990cbff30db0522b354e846db"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3d2a34ea3732f91149b31bcad82026ad85fda69"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}