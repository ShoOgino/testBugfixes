{"path":"solr/core/src/java/org/apache/solr/handler/FilesStream#setStreamContext(StreamContext).mjava","commits":[{"id":"4e7e81cd6c3e108547bc12beb23ba00ae90448b9","date":1564060380,"type":0,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/FilesStream#setStreamContext(StreamContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setStreamContext(StreamContext context) {\n    this.context = context;\n    Object solrCoreObj = context.get(\"solr-core\");\n    if (solrCoreObj == null || !(solrCoreObj instanceof SolrCore) ) {\n      throw new SolrException(SolrException.ErrorCode.INVALID_STATE, \"StreamContext must have SolrCore in solr-core key\");\n    }\n    final SolrCore core = (SolrCore) context.get(\"solr-core\");\n\n    this.chroot = Paths.get(core.getCoreContainer().getSolrHome(), SolrResourceLoader.USER_FILES_DIRECTORY).toString();\n    if (! new File(this.chroot).exists()) {\n      throw new IllegalStateException(SolrResourceLoader.USER_FILES_DIRECTORY + \" directory used to load files must exist but could not be found!\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa57c615885d274eb8087f89b6a9e1f84e655a74","date":1565267901,"type":5,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/CatStream#setStreamContext(StreamContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/FilesStream#setStreamContext(StreamContext).mjava","sourceNew":"  @Override\n  public void setStreamContext(StreamContext context) {\n    this.context = context;\n    Object solrCoreObj = context.get(\"solr-core\");\n    if (solrCoreObj == null || !(solrCoreObj instanceof SolrCore) ) {\n      throw new SolrException(SolrException.ErrorCode.INVALID_STATE, \"StreamContext must have SolrCore in solr-core key\");\n    }\n    final SolrCore core = (SolrCore) context.get(\"solr-core\");\n\n    this.chroot = Paths.get(core.getCoreContainer().getSolrHome(), SolrResourceLoader.USER_FILES_DIRECTORY).toString();\n    if (! new File(this.chroot).exists()) {\n      throw new IllegalStateException(SolrResourceLoader.USER_FILES_DIRECTORY + \" directory used to load files must exist but could not be found!\");\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setStreamContext(StreamContext context) {\n    this.context = context;\n    Object solrCoreObj = context.get(\"solr-core\");\n    if (solrCoreObj == null || !(solrCoreObj instanceof SolrCore) ) {\n      throw new SolrException(SolrException.ErrorCode.INVALID_STATE, \"StreamContext must have SolrCore in solr-core key\");\n    }\n    final SolrCore core = (SolrCore) context.get(\"solr-core\");\n\n    this.chroot = Paths.get(core.getCoreContainer().getSolrHome(), SolrResourceLoader.USER_FILES_DIRECTORY).toString();\n    if (! new File(this.chroot).exists()) {\n      throw new IllegalStateException(SolrResourceLoader.USER_FILES_DIRECTORY + \" directory used to load files must exist but could not be found!\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4e7e81cd6c3e108547bc12beb23ba00ae90448b9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fa57c615885d274eb8087f89b6a9e1f84e655a74":["4e7e81cd6c3e108547bc12beb23ba00ae90448b9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fa57c615885d274eb8087f89b6a9e1f84e655a74"]},"commit2Childs":{"4e7e81cd6c3e108547bc12beb23ba00ae90448b9":["fa57c615885d274eb8087f89b6a9e1f84e655a74"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4e7e81cd6c3e108547bc12beb23ba00ae90448b9"],"fa57c615885d274eb8087f89b6a9e1f84e655a74":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}