{"path":"sandbox/contributions/webcrawler-LARM/src/HTTPClient/HTTPConnection#determineKeepAlive(Response).mjava","commits":[{"id":"05d36e0b328ec96237035fbcca240e73631396e5","date":1020520725,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/HTTPClient/HTTPConnection#determineKeepAlive(Response).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Description of the Method\n     *\n     * @param resp             Description of the Parameter\n     * @exception IOException  Description of the Exception\n     */\n    private void determineKeepAlive(Response resp)\n        throws IOException\n    {\n        // try and determine if this server does keep-alives\n\n        String con;\n\n        try\n        {\n            if (ServerProtocolVersion >= HTTP_1_1 ||\n                    (\n                    (\n                    ((Proxy_Host == null || Protocol == HTTPS) &&\n                    (con = resp.getHeader(\"Connection\")) != null)\n                     ||\n                    ((Proxy_Host != null && Protocol != HTTPS) &&\n                    (con = resp.getHeader(\"Proxy-Connection\")) != null)\n                    ) &&\n                    Util.hasToken(con, \"keep-alive\")\n                    )\n                    )\n            {\n                doesKeepAlive = true;\n                keepAliveUnknown = false;\n\n                Log.write(Log.CONN, \"Conn:  Keep-Alive enabled\");\n            }\n            else if (resp.getStatusCode() < 400)\n            {\n                keepAliveUnknown = false;\n            }\n\n            // get maximum number of requests\n\n            if (doesKeepAlive && ServerProtocolVersion == HTTP_1_0 &&\n                    (con = resp.getHeader(\"Keep-Alive\")) != null)\n            {\n                HttpHeaderElement max =\n                        Util.getElement(Util.parseHeader(con), \"max\");\n                if (max != null && max.getValue() != null)\n                {\n                    keepAliveReqMax = Integer.parseInt(max.getValue());\n                    keepAliveReqLeft = keepAliveReqMax;\n\n                    Log.write(Log.CONN, \"Conn:  Max Keep-Alive requests: \" +\n                            keepAliveReqMax);\n                }\n            }\n        }\n        catch (ParseException pe)\n        {\n        }\n        catch (NumberFormatException nfe)\n        {\n        }\n        catch (ClassCastException cce)\n        {\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afc16d717d9ed1a8e45371668ca6de674164d624","date":1103345442,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/src/HTTPClient/HTTPConnection#determineKeepAlive(Response).mjava","sourceNew":null,"sourceOld":"    /**\n     * Description of the Method\n     *\n     * @param resp             Description of the Parameter\n     * @exception IOException  Description of the Exception\n     */\n    private void determineKeepAlive(Response resp)\n        throws IOException\n    {\n        // try and determine if this server does keep-alives\n\n        String con;\n\n        try\n        {\n            if (ServerProtocolVersion >= HTTP_1_1 ||\n                    (\n                    (\n                    ((Proxy_Host == null || Protocol == HTTPS) &&\n                    (con = resp.getHeader(\"Connection\")) != null)\n                     ||\n                    ((Proxy_Host != null && Protocol != HTTPS) &&\n                    (con = resp.getHeader(\"Proxy-Connection\")) != null)\n                    ) &&\n                    Util.hasToken(con, \"keep-alive\")\n                    )\n                    )\n            {\n                doesKeepAlive = true;\n                keepAliveUnknown = false;\n\n                Log.write(Log.CONN, \"Conn:  Keep-Alive enabled\");\n            }\n            else if (resp.getStatusCode() < 400)\n            {\n                keepAliveUnknown = false;\n            }\n\n            // get maximum number of requests\n\n            if (doesKeepAlive && ServerProtocolVersion == HTTP_1_0 &&\n                    (con = resp.getHeader(\"Keep-Alive\")) != null)\n            {\n                HttpHeaderElement max =\n                        Util.getElement(Util.parseHeader(con), \"max\");\n                if (max != null && max.getValue() != null)\n                {\n                    keepAliveReqMax = Integer.parseInt(max.getValue());\n                    keepAliveReqLeft = keepAliveReqMax;\n\n                    Log.write(Log.CONN, \"Conn:  Max Keep-Alive requests: \" +\n                            keepAliveReqMax);\n                }\n            }\n        }\n        catch (ParseException pe)\n        {\n        }\n        catch (NumberFormatException nfe)\n        {\n        }\n        catch (ClassCastException cce)\n        {\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afc16d717d9ed1a8e45371668ca6de674164d624":["05d36e0b328ec96237035fbcca240e73631396e5"],"05d36e0b328ec96237035fbcca240e73631396e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afc16d717d9ed1a8e45371668ca6de674164d624"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05d36e0b328ec96237035fbcca240e73631396e5"],"afc16d717d9ed1a8e45371668ca6de674164d624":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"05d36e0b328ec96237035fbcca240e73631396e5":["afc16d717d9ed1a8e45371668ca6de674164d624"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}