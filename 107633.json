{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/request/json/JsonQueryRequest#withFacet(String,Map[String,Object]).mjava","commits":[{"id":"e361c91e3f3d36ea61c7ab9f2d4459792480783e","date":1541904265,"type":0,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/json/JsonQueryRequest#withFacet(String,Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Specify a facet sent as a part of this JSON request.\n   *\n   * This method may be called multiple times.  Each call made with a different {@code facetName} value will add a new\n   * top-level facet.  Repeating {@code facetName} values will cause previous facets with that {@code facetName} to be\n   * overwritten.\n   * <p>\n   * <b>Example:</b> You wish to send the JSON request: {\"query\": \"*:*\", \"facet\": { \"top_cats\":{\"type\": \"terms\", \"field\":\"cat\"}}}.  You\n   * would represent (and attach) the facet in this request as follows:\n   * <pre>{@code\n   *     final Map<String, Object> catFacetMap = new HashMap<>();\n   *     catFacetMap.put(\"type\", \"terms\");\n   *     catFacetMap.put(\"field\", \"cat\");\n   *\n   *     jsonQueryRequest.withStatFacet(\"top_cats\", catFacetMap);\n   * }</pre>\n   *\n   * @param facetName the name of the top-level facet you'd like to add.\n   * @param facetJson a Map of values representing the facet you wish to add to the request\n   */\n  public JsonQueryRequest withFacet(String facetName, Map<String, Object> facetJson) {\n    if (facetName == null) {\n      throw new IllegalArgumentException(\"'facetName' parameter must be non-null\");\n    }\n    if (facetJson == null) {\n      throw new IllegalArgumentException(\"'facetMap' parameter must be non-null\");\n    }\n\n    if (! jsonRequestMap.containsKey(\"facet\")) {\n      jsonRequestMap.put(\"facet\", new HashMap<String, Object>());\n    }\n\n    final Map<String, Object> facetMap = (Map<String, Object>) jsonRequestMap.get(\"facet\");\n    facetMap.put(facetName, facetJson);\n    return this;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07feaa572dd3645c2013be127176350b3f4cd6a2","date":1542492880,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/json/JsonQueryRequest#withFacet(String,Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/json/JsonQueryRequest#withFacet(String,Map[String,Object]).mjava","sourceNew":"  /**\n   * Specify a facet sent as a part of this JSON request.\n   *\n   * This method may be called multiple times.  Each call made with a different {@code facetName} value will add a new\n   * top-level facet.  Repeating {@code facetName} values will cause previous facets with that {@code facetName} to be\n   * overwritten.\n   * <p>\n   * <b>Example:</b> You wish to send the JSON request: {\"query\": \"*:*\", \"facet\": { \"top_cats\":{\"type\": \"terms\", \"field\":\"cat\"}}}.  You\n   * would represent (and attach) the facet in this request as follows:\n   * <pre>{@code\n   *     final Map<String, Object> catFacetMap = new HashMap<>();\n   *     catFacetMap.put(\"type\", \"terms\");\n   *     catFacetMap.put(\"field\", \"cat\");\n   *\n   *     jsonQueryRequest.withStatFacet(\"top_cats\", catFacetMap);\n   * }</pre>\n   *\n   * @param facetName the name of the top-level facet you'd like to add.  Avoid choosing facet names which overload\n   *                  properties already present in the JSON response schema (e.g. \"count\", \"val\", \"minX\", etc.)\n   * @param facetJson a Map of values representing the facet you wish to add to the request\n   */\n  public JsonQueryRequest withFacet(String facetName, Map<String, Object> facetJson) {\n    if (facetName == null) {\n      throw new IllegalArgumentException(\"'facetName' parameter must be non-null\");\n    }\n    if (facetJson == null) {\n      throw new IllegalArgumentException(\"'facetMap' parameter must be non-null\");\n    }\n\n    if (! jsonRequestMap.containsKey(\"facet\")) {\n      jsonRequestMap.put(\"facet\", new HashMap<String, Object>());\n    }\n\n    final Map<String, Object> facetMap = (Map<String, Object>) jsonRequestMap.get(\"facet\");\n    facetMap.put(facetName, facetJson);\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Specify a facet sent as a part of this JSON request.\n   *\n   * This method may be called multiple times.  Each call made with a different {@code facetName} value will add a new\n   * top-level facet.  Repeating {@code facetName} values will cause previous facets with that {@code facetName} to be\n   * overwritten.\n   * <p>\n   * <b>Example:</b> You wish to send the JSON request: {\"query\": \"*:*\", \"facet\": { \"top_cats\":{\"type\": \"terms\", \"field\":\"cat\"}}}.  You\n   * would represent (and attach) the facet in this request as follows:\n   * <pre>{@code\n   *     final Map<String, Object> catFacetMap = new HashMap<>();\n   *     catFacetMap.put(\"type\", \"terms\");\n   *     catFacetMap.put(\"field\", \"cat\");\n   *\n   *     jsonQueryRequest.withStatFacet(\"top_cats\", catFacetMap);\n   * }</pre>\n   *\n   * @param facetName the name of the top-level facet you'd like to add.\n   * @param facetJson a Map of values representing the facet you wish to add to the request\n   */\n  public JsonQueryRequest withFacet(String facetName, Map<String, Object> facetJson) {\n    if (facetName == null) {\n      throw new IllegalArgumentException(\"'facetName' parameter must be non-null\");\n    }\n    if (facetJson == null) {\n      throw new IllegalArgumentException(\"'facetMap' parameter must be non-null\");\n    }\n\n    if (! jsonRequestMap.containsKey(\"facet\")) {\n      jsonRequestMap.put(\"facet\", new HashMap<String, Object>());\n    }\n\n    final Map<String, Object> facetMap = (Map<String, Object>) jsonRequestMap.get(\"facet\");\n    facetMap.put(facetName, facetJson);\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7dfea4f7c80813344b0152e37fc18b31369e8ff","date":1592136683,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/json/JsonQueryRequest#withFacet(String,Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/json/JsonQueryRequest#withFacet(String,Map[String,Object]).mjava","sourceNew":"  /**\n   * Specify a facet sent as a part of this JSON request.\n   *\n   * This method may be called multiple times.  Each call made with a different {@code facetName} value will add a new\n   * top-level facet.  Repeating {@code facetName} values will cause previous facets with that {@code facetName} to be\n   * overwritten.\n   * <p>\n   * <b>Example:</b> You wish to send the JSON request: {\"query\": \"*:*\", \"facet\": { \"top_cats\":{\"type\": \"terms\", \"field\":\"cat\"}}}.  You\n   * would represent (and attach) the facet in this request as follows:\n   * <pre>{@code\n   *     final Map<String, Object> catFacetMap = new HashMap<>();\n   *     catFacetMap.put(\"type\", \"terms\");\n   *     catFacetMap.put(\"field\", \"cat\");\n   *\n   *     jsonQueryRequest.withStatFacet(\"top_cats\", catFacetMap);\n   * }</pre>\n   *\n   * @param facetName the name of the top-level facet you'd like to add.  Avoid choosing facet names which overload\n   *                  properties already present in the JSON response schema (e.g. \"count\", \"val\", \"minX\", etc.)\n   * @param facetJson a Map of values representing the facet you wish to add to the request\n   */\n  public JsonQueryRequest withFacet(String facetName, Map<String, Object> facetJson) {\n    if (facetName == null) {\n      throw new IllegalArgumentException(\"'facetName' parameter must be non-null\");\n    }\n    if (facetJson == null) {\n      throw new IllegalArgumentException(\"'facetMap' parameter must be non-null\");\n    }\n\n    if (! jsonRequestMap.containsKey(\"facet\")) {\n      jsonRequestMap.put(\"facet\", new HashMap<String, Object>());\n    }\n\n    @SuppressWarnings({\"unchecked\"})\n    final Map<String, Object> facetMap = (Map<String, Object>) jsonRequestMap.get(\"facet\");\n    facetMap.put(facetName, facetJson);\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Specify a facet sent as a part of this JSON request.\n   *\n   * This method may be called multiple times.  Each call made with a different {@code facetName} value will add a new\n   * top-level facet.  Repeating {@code facetName} values will cause previous facets with that {@code facetName} to be\n   * overwritten.\n   * <p>\n   * <b>Example:</b> You wish to send the JSON request: {\"query\": \"*:*\", \"facet\": { \"top_cats\":{\"type\": \"terms\", \"field\":\"cat\"}}}.  You\n   * would represent (and attach) the facet in this request as follows:\n   * <pre>{@code\n   *     final Map<String, Object> catFacetMap = new HashMap<>();\n   *     catFacetMap.put(\"type\", \"terms\");\n   *     catFacetMap.put(\"field\", \"cat\");\n   *\n   *     jsonQueryRequest.withStatFacet(\"top_cats\", catFacetMap);\n   * }</pre>\n   *\n   * @param facetName the name of the top-level facet you'd like to add.  Avoid choosing facet names which overload\n   *                  properties already present in the JSON response schema (e.g. \"count\", \"val\", \"minX\", etc.)\n   * @param facetJson a Map of values representing the facet you wish to add to the request\n   */\n  public JsonQueryRequest withFacet(String facetName, Map<String, Object> facetJson) {\n    if (facetName == null) {\n      throw new IllegalArgumentException(\"'facetName' parameter must be non-null\");\n    }\n    if (facetJson == null) {\n      throw new IllegalArgumentException(\"'facetMap' parameter must be non-null\");\n    }\n\n    if (! jsonRequestMap.containsKey(\"facet\")) {\n      jsonRequestMap.put(\"facet\", new HashMap<String, Object>());\n    }\n\n    final Map<String, Object> facetMap = (Map<String, Object>) jsonRequestMap.get(\"facet\");\n    facetMap.put(facetName, facetJson);\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a7dfea4f7c80813344b0152e37fc18b31369e8ff":["07feaa572dd3645c2013be127176350b3f4cd6a2"],"e361c91e3f3d36ea61c7ab9f2d4459792480783e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a7dfea4f7c80813344b0152e37fc18b31369e8ff"],"07feaa572dd3645c2013be127176350b3f4cd6a2":["e361c91e3f3d36ea61c7ab9f2d4459792480783e"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e361c91e3f3d36ea61c7ab9f2d4459792480783e"],"a7dfea4f7c80813344b0152e37fc18b31369e8ff":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e361c91e3f3d36ea61c7ab9f2d4459792480783e":["07feaa572dd3645c2013be127176350b3f4cd6a2"],"07feaa572dd3645c2013be127176350b3f4cd6a2":["a7dfea4f7c80813344b0152e37fc18b31369e8ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}