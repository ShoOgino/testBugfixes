{"path":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/RandomGeoPolygonTest#checkPoint(GeoPolygon,GeoPolygon,GeoPoint,List[GeoPoint]).mjava","commits":[{"id":"dfd30bf34a6f7f23d1d1c7188427856736263380","date":1524741267,"type":0,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/RandomGeoPolygonTest#checkPoint(GeoPolygon,GeoPolygon,GeoPoint,List[GeoPoint]).mjava","pathOld":"/dev/null","sourceNew":"  private void checkPoint(final GeoPolygon polygon, final GeoPolygon largePolygon, final GeoPoint point, final List<GeoPoint> orderedPoints) {\n    final boolean withIn1 = polygon.isWithin(point);\n    final boolean withIn2 = largePolygon.isWithin(point);\n    StringBuilder buffer = new StringBuilder();\n    if (withIn1 != withIn2) {\n      //NOTE: Standard and large polygon are mathematically slightly different\n      //close to the edges (due to bounding planes). Nothing we can do about that\n      //so we filter the differences.\n      final double d1 = polygon.computeOutsideDistance(DistanceStyle.ARC, point);\n      final double d2  = largePolygon.computeOutsideDistance(DistanceStyle.ARC, point);\n      if (d1 == 0 && d2 == 0) {\n        return;\n      }\n      buffer = buffer.append(\"\\nStandard polygon: \" + polygon.toString() +\"\\n\");\n      buffer = buffer.append(\"\\nLarge polygon: \" + largePolygon.toString() +\"\\n\");\n      buffer = buffer.append(\"\\nPoint: \" + point.toString() +\"\\n\");\n      buffer.append(\"\\nWKT: \" + getWKT(orderedPoints));\n      buffer.append(\"\\nWKT: POINT(\" + Geo3DUtil.toDegrees(point.getLongitude()) + \" \" + Geo3DUtil.toDegrees(point.getLatitude()) + \")\\n\");\n      buffer.append(\"normal polygon: \" +withIn1 + \"\\n\");\n      buffer.append(\"large polygon: \" + withIn2 + \"\\n\");\n    }\n    assertTrue(buffer.toString(), withIn1 == withIn2);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dfd30bf34a6f7f23d1d1c7188427856736263380":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dfd30bf34a6f7f23d1d1c7188427856736263380"]},"commit2Childs":{"dfd30bf34a6f7f23d1d1c7188427856736263380":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dfd30bf34a6f7f23d1d1c7188427856736263380"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}