{"path":"lucene/tools/src/java/org/apache/lucene/dependencies/GetMavenDependenciesTask#writeFiltersFile().mjava","commits":[{"id":"71b83dcf02fe2854488bc83d70dee29c5baa7e5c","date":1383232808,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/tools/src/java/org/apache/lucene/dependencies/GetMavenDependenciesTask#writeFiltersFile().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Write out an Ant filters file to be used when copying POMs.\n   */\n  private void writeFiltersFile() {\n    Writer writer = null;\n    try {\n      FileOutputStream outputStream = new FileOutputStream(mavenDependenciesFiltersFile);\n      writer = new OutputStreamWriter(outputStream, \"ISO-8859-1\");\n      allProperties.store(writer, null);\n    } catch (FileNotFoundException e) {\n      throw new BuildException(\"Can't find file: '\" + mavenDependenciesFiltersFile.getPath() + \"'\", e);\n    } catch (UnsupportedEncodingException e) {\n      throw new BuildException(e);\n    } catch (IOException e) {\n      throw new BuildException(\"Exception writing out '\" + mavenDependenciesFiltersFile.getPath() + \"'\", e);\n    } finally {\n      if (null != writer) {\n        try {\n          writer.close();\n        } catch (IOException e) {\n          // ignore\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/tools/src/java/org/apache/lucene/dependencies/GetMavenDependenciesTask#writeFiltersFile().mjava","pathOld":"lucene/tools/src/java/org/apache/lucene/dependencies/GetMavenDependenciesTask#writeFiltersFile().mjava","sourceNew":"  /**\n   * Write out an Ant filters file to be used when copying POMs.\n   */\n  private void writeFiltersFile() {\n    Writer writer = null;\n    try {\n      FileOutputStream outputStream = new FileOutputStream(mavenDependenciesFiltersFile);\n      writer = new OutputStreamWriter(outputStream, StandardCharsets.ISO_8859_1);\n      allProperties.store(writer, null);\n    } catch (FileNotFoundException e) {\n      throw new BuildException(\"Can't find file: '\" + mavenDependenciesFiltersFile.getPath() + \"'\", e);\n    } catch (UnsupportedEncodingException e) {\n      throw new BuildException(e);\n    } catch (IOException e) {\n      throw new BuildException(\"Exception writing out '\" + mavenDependenciesFiltersFile.getPath() + \"'\", e);\n    } finally {\n      if (null != writer) {\n        try {\n          writer.close();\n        } catch (IOException e) {\n          // ignore\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Write out an Ant filters file to be used when copying POMs.\n   */\n  private void writeFiltersFile() {\n    Writer writer = null;\n    try {\n      FileOutputStream outputStream = new FileOutputStream(mavenDependenciesFiltersFile);\n      writer = new OutputStreamWriter(outputStream, \"ISO-8859-1\");\n      allProperties.store(writer, null);\n    } catch (FileNotFoundException e) {\n      throw new BuildException(\"Can't find file: '\" + mavenDependenciesFiltersFile.getPath() + \"'\", e);\n    } catch (UnsupportedEncodingException e) {\n      throw new BuildException(e);\n    } catch (IOException e) {\n      throw new BuildException(\"Exception writing out '\" + mavenDependenciesFiltersFile.getPath() + \"'\", e);\n    } finally {\n      if (null != writer) {\n        try {\n          writer.close();\n        } catch (IOException e) {\n          // ignore\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c841533d6a964b33e87eb453b536bfa7d9dbe3cb","date":1396308403,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/tools/src/java/org/apache/lucene/dependencies/GetMavenDependenciesTask#writeFiltersFile().mjava","pathOld":"lucene/tools/src/java/org/apache/lucene/dependencies/GetMavenDependenciesTask#writeFiltersFile().mjava","sourceNew":"  /**\n   * Write out an Ant filters file to be used when copying POMs.\n   */\n  private void writeFiltersFile() {\n    Writer writer = null;\n    try {\n      FileOutputStream outputStream = new FileOutputStream(mavenDependenciesFiltersFile);\n      writer = new OutputStreamWriter(outputStream, StandardCharsets.ISO_8859_1);\n      allProperties.store(writer, null);\n    } catch (FileNotFoundException e) {\n      throw new BuildException(\"Can't find file: '\" + mavenDependenciesFiltersFile.getPath() + \"'\", e);\n    } catch (IOException e) {\n      throw new BuildException(\"Exception writing out '\" + mavenDependenciesFiltersFile.getPath() + \"'\", e);\n    } finally {\n      if (null != writer) {\n        try {\n          writer.close();\n        } catch (IOException e) {\n          // ignore\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Write out an Ant filters file to be used when copying POMs.\n   */\n  private void writeFiltersFile() {\n    Writer writer = null;\n    try {\n      FileOutputStream outputStream = new FileOutputStream(mavenDependenciesFiltersFile);\n      writer = new OutputStreamWriter(outputStream, StandardCharsets.ISO_8859_1);\n      allProperties.store(writer, null);\n    } catch (FileNotFoundException e) {\n      throw new BuildException(\"Can't find file: '\" + mavenDependenciesFiltersFile.getPath() + \"'\", e);\n    } catch (UnsupportedEncodingException e) {\n      throw new BuildException(e);\n    } catch (IOException e) {\n      throw new BuildException(\"Exception writing out '\" + mavenDependenciesFiltersFile.getPath() + \"'\", e);\n    } finally {\n      if (null != writer) {\n        try {\n          writer.close();\n        } catch (IOException e) {\n          // ignore\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/tools/src/java/org/apache/lucene/dependencies/GetMavenDependenciesTask#writeFiltersFile().mjava","pathOld":"lucene/tools/src/java/org/apache/lucene/dependencies/GetMavenDependenciesTask#writeFiltersFile().mjava","sourceNew":"  /**\n   * Write out an Ant filters file to be used when copying POMs.\n   */\n  private void writeFiltersFile() {\n    Writer writer = null;\n    try {\n      FileOutputStream outputStream = new FileOutputStream(mavenDependenciesFiltersFile);\n      writer = new OutputStreamWriter(outputStream, StandardCharsets.ISO_8859_1);\n      allProperties.store(writer, null);\n    } catch (FileNotFoundException e) {\n      throw new BuildException(\"Can't find file: '\" + mavenDependenciesFiltersFile.getPath() + \"'\", e);\n    } catch (IOException e) {\n      throw new BuildException(\"Exception writing out '\" + mavenDependenciesFiltersFile.getPath() + \"'\", e);\n    } finally {\n      if (null != writer) {\n        try {\n          writer.close();\n        } catch (IOException e) {\n          // ignore\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Write out an Ant filters file to be used when copying POMs.\n   */\n  private void writeFiltersFile() {\n    Writer writer = null;\n    try {\n      FileOutputStream outputStream = new FileOutputStream(mavenDependenciesFiltersFile);\n      writer = new OutputStreamWriter(outputStream, \"ISO-8859-1\");\n      allProperties.store(writer, null);\n    } catch (FileNotFoundException e) {\n      throw new BuildException(\"Can't find file: '\" + mavenDependenciesFiltersFile.getPath() + \"'\", e);\n    } catch (UnsupportedEncodingException e) {\n      throw new BuildException(e);\n    } catch (IOException e) {\n      throw new BuildException(\"Exception writing out '\" + mavenDependenciesFiltersFile.getPath() + \"'\", e);\n    } finally {\n      if (null != writer) {\n        try {\n          writer.close();\n        } catch (IOException e) {\n          // ignore\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e025cf1c07150c8db28879d785db17eb3a66ca9f","date":1598788864,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/tools/src/java/org/apache/lucene/dependencies/GetMavenDependenciesTask#writeFiltersFile().mjava","sourceNew":null,"sourceOld":"  /**\n   * Write out an Ant filters file to be used when copying POMs.\n   */\n  private void writeFiltersFile() {\n    Writer writer = null;\n    try {\n      FileOutputStream outputStream = new FileOutputStream(mavenDependenciesFiltersFile);\n      writer = new OutputStreamWriter(outputStream, StandardCharsets.ISO_8859_1);\n      allProperties.store(writer, null);\n    } catch (FileNotFoundException e) {\n      throw new BuildException(\"Can't find file: '\" + mavenDependenciesFiltersFile.getPath() + \"'\", e);\n    } catch (IOException e) {\n      throw new BuildException(\"Exception writing out '\" + mavenDependenciesFiltersFile.getPath() + \"'\", e);\n    } finally {\n      if (null != writer) {\n        try {\n          writer.close();\n        } catch (IOException e) {\n          // ignore\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["71b83dcf02fe2854488bc83d70dee29c5baa7e5c","c841533d6a964b33e87eb453b536bfa7d9dbe3cb"],"c841533d6a964b33e87eb453b536bfa7d9dbe3cb":["7d89d7e4e5101347833eea558851bf4209218619"],"e025cf1c07150c8db28879d785db17eb3a66ca9f":["c841533d6a964b33e87eb453b536bfa7d9dbe3cb"],"71b83dcf02fe2854488bc83d70dee29c5baa7e5c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7d89d7e4e5101347833eea558851bf4209218619":["71b83dcf02fe2854488bc83d70dee29c5baa7e5c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e025cf1c07150c8db28879d785db17eb3a66ca9f"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"c841533d6a964b33e87eb453b536bfa7d9dbe3cb":["5eb2511ababf862ea11e10761c70ee560cd84510","e025cf1c07150c8db28879d785db17eb3a66ca9f"],"71b83dcf02fe2854488bc83d70dee29c5baa7e5c":["5eb2511ababf862ea11e10761c70ee560cd84510","7d89d7e4e5101347833eea558851bf4209218619"],"e025cf1c07150c8db28879d785db17eb3a66ca9f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["71b83dcf02fe2854488bc83d70dee29c5baa7e5c"],"7d89d7e4e5101347833eea558851bf4209218619":["c841533d6a964b33e87eb453b536bfa7d9dbe3cb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}