{"path":"lucene/test-framework/src/java/org/apache/lucene/mockfile/LeakFS#onClose().mjava","commits":[{"id":"7cefb6c0aa217f293070c43e7a77682dd56e0a33","date":1416928878,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/mockfile/LeakFS#onClose().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public synchronized void onClose() {\n    if (!openHandles.isEmpty()) {\n      // print the first one as its very verbose otherwise\n      Exception cause = null;\n      Iterator<Exception> stacktraces = openHandles.values().iterator();\n      if (stacktraces.hasNext()) {\n        cause = stacktraces.next();\n      }\n      throw new RuntimeException(\"file handle leaks: \" + openHandles.keySet(), cause);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","date":1419400138,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/mockfile/LeakFS#onClose().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/mockfile/LeakFS#onClose().mjava","sourceNew":"  @Override\n  public synchronized void onClose() {\n    if (!openHandles.isEmpty()) {\n      // print the first one as it's very verbose otherwise\n      Exception cause = null;\n      Iterator<Exception> stacktraces = openHandles.values().iterator();\n      if (stacktraces.hasNext()) {\n        cause = stacktraces.next();\n      }\n      throw new RuntimeException(\"file handle leaks: \" + openHandles.keySet(), cause);\n    }\n  }\n\n","sourceOld":"  @Override\n  public synchronized void onClose() {\n    if (!openHandles.isEmpty()) {\n      // print the first one as its very verbose otherwise\n      Exception cause = null;\n      Iterator<Exception> stacktraces = openHandles.values().iterator();\n      if (stacktraces.hasNext()) {\n        cause = stacktraces.next();\n      }\n      throw new RuntimeException(\"file handle leaks: \" + openHandles.keySet(), cause);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["7cefb6c0aa217f293070c43e7a77682dd56e0a33"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7cefb6c0aa217f293070c43e7a77682dd56e0a33":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"]},"commit2Childs":{"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7cefb6c0aa217f293070c43e7a77682dd56e0a33"],"7cefb6c0aa217f293070c43e7a77682dd56e0a33":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}