{"path":"lucene/core/src/java/org/apache/lucene/index/NormValuesWriter#addValue(int,long).mjava","commits":[{"id":"22a2e66dfda83847e80095b8693c660742ab3e9c","date":1408628796,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NormValuesWriter#addValue(int,long).mjava","pathOld":"/dev/null","sourceNew":"  public void addValue(int docID, long value) {\n    // Fill in any holes:\n    for (int i = (int)pending.size(); i < docID; ++i) {\n      pending.add(MISSING);\n    }\n\n    pending.add(value);\n    updateBytesUsed();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f3090f7e0cab5b1f5acf12d21f31f00fe74a262","date":1475755647,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NormValuesWriter#addValue(int,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NormValuesWriter#addValue(int,long).mjava","sourceNew":"  public void addValue(int docID, long value) {\n    if (docID <= lastDocID) {\n      throw new IllegalArgumentException(\"Norm for \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n\n    pending.add(value);\n    docsWithField = FixedBitSet.ensureCapacity(docsWithField, docID);\n    docsWithField.set(docID);\n\n    updateBytesUsed();\n\n    lastDocID = docID;\n  }\n\n","sourceOld":"  public void addValue(int docID, long value) {\n    // Fill in any holes:\n    for (int i = (int)pending.size(); i < docID; ++i) {\n      pending.add(MISSING);\n    }\n\n    pending.add(value);\n    updateBytesUsed();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NormValuesWriter#addValue(int,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NormValuesWriter#addValue(int,long).mjava","sourceNew":"  public void addValue(int docID, long value) {\n    if (docID <= lastDocID) {\n      throw new IllegalArgumentException(\"Norm for \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n\n    pending.add(value);\n    docsWithField = FixedBitSet.ensureCapacity(docsWithField, docID);\n    docsWithField.set(docID);\n\n    updateBytesUsed();\n\n    lastDocID = docID;\n  }\n\n","sourceOld":"  public void addValue(int docID, long value) {\n    // Fill in any holes:\n    for (int i = (int)pending.size(); i < docID; ++i) {\n      pending.add(MISSING);\n    }\n\n    pending.add(value);\n    updateBytesUsed();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ceec64003e8cc400e862d44c8589a41570432ab9","date":1478783055,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NormValuesWriter#addValue(int,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NormValuesWriter#addValue(int,long).mjava","sourceNew":"  public void addValue(int docID, long value) {\n    if (docID <= lastDocID) {\n      throw new IllegalArgumentException(\"Norm for \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n\n    pending.add(value);\n    docsWithField.add(docID);\n\n    updateBytesUsed();\n\n    lastDocID = docID;\n  }\n\n","sourceOld":"  public void addValue(int docID, long value) {\n    if (docID <= lastDocID) {\n      throw new IllegalArgumentException(\"Norm for \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n\n    pending.add(value);\n    docsWithField = FixedBitSet.ensureCapacity(docsWithField, docID);\n    docsWithField.set(docID);\n\n    updateBytesUsed();\n\n    lastDocID = docID;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199dfa410f1fdbfd3294106b04096cce5ed34b21","date":1478812506,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NormValuesWriter#addValue(int,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NormValuesWriter#addValue(int,long).mjava","sourceNew":"  public void addValue(int docID, long value) {\n    if (docID <= lastDocID) {\n      throw new IllegalArgumentException(\"Norm for \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n\n    pending.add(value);\n    docsWithField.add(docID);\n\n    updateBytesUsed();\n\n    lastDocID = docID;\n  }\n\n","sourceOld":"  public void addValue(int docID, long value) {\n    if (docID <= lastDocID) {\n      throw new IllegalArgumentException(\"Norm for \\\"\" + fieldInfo.name + \"\\\" appears more than once in this document (only one value is allowed per field)\");\n    }\n\n    pending.add(value);\n    docsWithField = FixedBitSet.ensureCapacity(docsWithField, docID);\n    docsWithField.set(docID);\n\n    updateBytesUsed();\n\n    lastDocID = docID;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7f3090f7e0cab5b1f5acf12d21f31f00fe74a262":["22a2e66dfda83847e80095b8693c660742ab3e9c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"22a2e66dfda83847e80095b8693c660742ab3e9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","ceec64003e8cc400e862d44c8589a41570432ab9"],"ceec64003e8cc400e862d44c8589a41570432ab9":["7f3090f7e0cab5b1f5acf12d21f31f00fe74a262"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["22a2e66dfda83847e80095b8693c660742ab3e9c","7f3090f7e0cab5b1f5acf12d21f31f00fe74a262"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ceec64003e8cc400e862d44c8589a41570432ab9"]},"commit2Childs":{"7f3090f7e0cab5b1f5acf12d21f31f00fe74a262":["ceec64003e8cc400e862d44c8589a41570432ab9","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["22a2e66dfda83847e80095b8693c660742ab3e9c"],"22a2e66dfda83847e80095b8693c660742ab3e9c":["7f3090f7e0cab5b1f5acf12d21f31f00fe74a262","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":[],"ceec64003e8cc400e862d44c8589a41570432ab9":["199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["199dfa410f1fdbfd3294106b04096cce5ed34b21"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}