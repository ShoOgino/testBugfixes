{"path":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#impacts(SimScorer,int).mjava","commits":[{"id":"622a708571e534680618b3c5e0c28ac539a47776","date":1517406892,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#impacts(SimScorer,int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public ImpactsEnum impacts(SimScorer scorer, int flags) throws IOException {\n      assertThread(\"Terms enums\", creationThread);\n      assert state == State.POSITIONED: \"docs(...) called on unpositioned TermsEnum\";\n      assert (flags & PostingsEnum.FREQS) != 0 : \"Freqs should be requested on impacts\";\n\n      return new AssertingImpactsEnum(super.impacts(scorer, flags));\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a692be6c8e120ef6dbfcd5dde3de42815813cd2","date":1525265372,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#impacts(int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingTermsEnum#impacts(SimScorer,int).mjava","sourceNew":"    @Override\n    public ImpactsEnum impacts(int flags) throws IOException {\n      assertThread(\"Terms enums\", creationThread);\n      assert state == State.POSITIONED: \"docs(...) called on unpositioned TermsEnum\";\n      assert (flags & PostingsEnum.FREQS) != 0 : \"Freqs should be requested on impacts\";\n\n      return new AssertingImpactsEnum(super.impacts(flags));\n    }\n\n","sourceOld":"    @Override\n    public ImpactsEnum impacts(SimScorer scorer, int flags) throws IOException {\n      assertThread(\"Terms enums\", creationThread);\n      assert state == State.POSITIONED: \"docs(...) called on unpositioned TermsEnum\";\n      assert (flags & PostingsEnum.FREQS) != 0 : \"Freqs should be requested on impacts\";\n\n      return new AssertingImpactsEnum(super.impacts(scorer, flags));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6a692be6c8e120ef6dbfcd5dde3de42815813cd2":["622a708571e534680618b3c5e0c28ac539a47776"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"622a708571e534680618b3c5e0c28ac539a47776":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6a692be6c8e120ef6dbfcd5dde3de42815813cd2"]},"commit2Childs":{"6a692be6c8e120ef6dbfcd5dde3de42815813cd2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["622a708571e534680618b3c5e0c28ac539a47776"],"622a708571e534680618b3c5e0c28ac539a47776":["6a692be6c8e120ef6dbfcd5dde3de42815813cd2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}