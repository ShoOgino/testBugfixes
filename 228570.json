{"path":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/ICUNormalizer2FilterFactory#ICUNormalizer2FilterFactory(Map[String,String]).mjava","commits":[{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/ICUNormalizer2FilterFactory#ICUNormalizer2FilterFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/ICUNormalizer2FilterFactory#init(Map[String,String]).mjava","sourceNew":"  /** Creates a new ICUNormalizer2FilterFactory */\n  public ICUNormalizer2FilterFactory(Map<String,String> args) {\n    super(args);\n    String name = args.remove(\"name\");\n    if (name == null)\n      name = \"nfkc_cf\";\n    String mode = args.remove(\"mode\");\n    if (mode == null)\n      mode = \"compose\";\n    \n    Normalizer2 normalizer;\n    if (mode.equals(\"compose\"))\n      normalizer = Normalizer2.getInstance(null, name, Normalizer2.Mode.COMPOSE);\n    else if (mode.equals(\"decompose\"))\n      normalizer = Normalizer2.getInstance(null, name, Normalizer2.Mode.DECOMPOSE);\n    else \n      throw new IllegalArgumentException(\"Invalid mode: \" + mode);\n    \n    String filter = args.remove(\"filter\");\n    if (filter != null) {\n      UnicodeSet set = new UnicodeSet(filter);\n      if (!set.isEmpty()) {\n        set.freeze();\n        normalizer = new FilteredNormalizer2(normalizer, set);\n      }\n    }\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n    this.normalizer = normalizer;\n  }\n\n","sourceOld":"  // TODO: support custom normalization\n  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    String name = args.get(\"name\");\n    if (name == null)\n      name = \"nfkc_cf\";\n    String mode = args.get(\"mode\");\n    if (mode == null)\n      mode = \"compose\";\n    \n    if (mode.equals(\"compose\"))\n      normalizer = Normalizer2.getInstance(null, name, Normalizer2.Mode.COMPOSE);\n    else if (mode.equals(\"decompose\"))\n      normalizer = Normalizer2.getInstance(null, name, Normalizer2.Mode.DECOMPOSE);\n    else \n      throw new IllegalArgumentException(\"Invalid mode: \" + mode);\n    \n    String filter = args.get(\"filter\");\n    if (filter != null) {\n      UnicodeSet set = new UnicodeSet(filter);\n      if (!set.isEmpty()) {\n        set.freeze();\n        normalizer = new FilteredNormalizer2(normalizer, set);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dcae30df9fe9300569835aef42ec65802c7c0afb","date":1364859933,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/ICUNormalizer2FilterFactory#ICUNormalizer2FilterFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/ICUNormalizer2FilterFactory#ICUNormalizer2FilterFactory(Map[String,String]).mjava","sourceNew":"  /** Creates a new ICUNormalizer2FilterFactory */\n  public ICUNormalizer2FilterFactory(Map<String,String> args) {\n    super(args);\n    String name = get(args, \"name\", \"nfkc_cf\");\n    String mode = get(args, \"mode\", Arrays.asList(\"compose\", \"decompose\"), \"compose\");\n    Normalizer2 normalizer = Normalizer2.getInstance\n        (null, name, \"compose\".equals(mode) ? Normalizer2.Mode.COMPOSE : Normalizer2.Mode.DECOMPOSE);\n    \n    String filter = get(args, \"filter\");\n    if (filter != null) {\n      UnicodeSet set = new UnicodeSet(filter);\n      if (!set.isEmpty()) {\n        set.freeze();\n        normalizer = new FilteredNormalizer2(normalizer, set);\n      }\n    }\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n    this.normalizer = normalizer;\n  }\n\n","sourceOld":"  /** Creates a new ICUNormalizer2FilterFactory */\n  public ICUNormalizer2FilterFactory(Map<String,String> args) {\n    super(args);\n    String name = args.remove(\"name\");\n    if (name == null)\n      name = \"nfkc_cf\";\n    String mode = args.remove(\"mode\");\n    if (mode == null)\n      mode = \"compose\";\n    \n    Normalizer2 normalizer;\n    if (mode.equals(\"compose\"))\n      normalizer = Normalizer2.getInstance(null, name, Normalizer2.Mode.COMPOSE);\n    else if (mode.equals(\"decompose\"))\n      normalizer = Normalizer2.getInstance(null, name, Normalizer2.Mode.DECOMPOSE);\n    else \n      throw new IllegalArgumentException(\"Invalid mode: \" + mode);\n    \n    String filter = args.remove(\"filter\");\n    if (filter != null) {\n      UnicodeSet set = new UnicodeSet(filter);\n      if (!set.isEmpty()) {\n        set.freeze();\n        normalizer = new FilteredNormalizer2(normalizer, set);\n      }\n    }\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n    this.normalizer = normalizer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e5d5f93ad06a6cd0361e369202b3361b93c13709","date":1565501611,"type":3,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/ICUNormalizer2FilterFactory#ICUNormalizer2FilterFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/ICUNormalizer2FilterFactory#ICUNormalizer2FilterFactory(Map[String,String]).mjava","sourceNew":"  /** Creates a new ICUNormalizer2FilterFactory */\n  public ICUNormalizer2FilterFactory(Map<String,String> args) {\n    super(args);\n    String form = get(args, \"form\", \"nfkc_cf\");\n    String mode = get(args, \"mode\", Arrays.asList(\"compose\", \"decompose\"), \"compose\");\n    Normalizer2 normalizer = Normalizer2.getInstance\n        (null, form, \"compose\".equals(mode) ? Normalizer2.Mode.COMPOSE : Normalizer2.Mode.DECOMPOSE);\n    \n    String filter = get(args, \"filter\");\n    if (filter != null) {\n      UnicodeSet set = new UnicodeSet(filter);\n      if (!set.isEmpty()) {\n        set.freeze();\n        normalizer = new FilteredNormalizer2(normalizer, set);\n      }\n    }\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n    this.normalizer = normalizer;\n  }\n\n","sourceOld":"  /** Creates a new ICUNormalizer2FilterFactory */\n  public ICUNormalizer2FilterFactory(Map<String,String> args) {\n    super(args);\n    String name = get(args, \"name\", \"nfkc_cf\");\n    String mode = get(args, \"mode\", Arrays.asList(\"compose\", \"decompose\"), \"compose\");\n    Normalizer2 normalizer = Normalizer2.getInstance\n        (null, name, \"compose\".equals(mode) ? Normalizer2.Mode.COMPOSE : Normalizer2.Mode.DECOMPOSE);\n    \n    String filter = get(args, \"filter\");\n    if (filter != null) {\n      UnicodeSet set = new UnicodeSet(filter);\n      if (!set.isEmpty()) {\n        set.freeze();\n        normalizer = new FilteredNormalizer2(normalizer, set);\n      }\n    }\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n    this.normalizer = normalizer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e5d5f93ad06a6cd0361e369202b3361b93c13709":["dcae30df9fe9300569835aef42ec65802c7c0afb"],"dcae30df9fe9300569835aef42ec65802c7c0afb":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e5d5f93ad06a6cd0361e369202b3361b93c13709"]},"commit2Childs":{"e5d5f93ad06a6cd0361e369202b3361b93c13709":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"dcae30df9fe9300569835aef42ec65802c7c0afb":["e5d5f93ad06a6cd0361e369202b3361b93c13709"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["dcae30df9fe9300569835aef42ec65802c7c0afb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}