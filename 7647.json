{"path":"solr/core/src/test/org/apache/solr/update/DocumentBuilderTest#testBuildDocument().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/DocumentBuilderTest#testBuildDocument().mjava","pathOld":"solr/src/test/org/apache/solr/update/DocumentBuilderTest#testBuildDocument().mjava","sourceNew":"  @Test\n  public void testBuildDocument() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    // undefined field\n    try {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.setField( \"unknown field\", 12345, 1.0f );\n      DocumentBuilder.toDocument( doc, core.getSchema() );\n      fail( \"should throw an error\" );\n    }\n    catch( SolrException ex ) {\n      assertEquals( \"should be bad request\", 400, ex.code() );\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBuildDocument() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    // undefined field\n    try {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.setField( \"unknown field\", 12345, 1.0f );\n      DocumentBuilder.toDocument( doc, core.getSchema() );\n      fail( \"should throw an error\" );\n    }\n    catch( SolrException ex ) {\n      assertEquals( \"should be bad request\", 400, ex.code() );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/DocumentBuilderTest#testBuildDocument().mjava","pathOld":"solr/src/test/org/apache/solr/update/DocumentBuilderTest#testBuildDocument().mjava","sourceNew":"  @Test\n  public void testBuildDocument() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    // undefined field\n    try {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.setField( \"unknown field\", 12345, 1.0f );\n      DocumentBuilder.toDocument( doc, core.getSchema() );\n      fail( \"should throw an error\" );\n    }\n    catch( SolrException ex ) {\n      assertEquals( \"should be bad request\", 400, ex.code() );\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBuildDocument() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    // undefined field\n    try {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.setField( \"unknown field\", 12345, 1.0f );\n      DocumentBuilder.toDocument( doc, core.getSchema() );\n      fail( \"should throw an error\" );\n    }\n    catch( SolrException ex ) {\n      assertEquals( \"should be bad request\", 400, ex.code() );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/DocumentBuilderTest#testBuildDocument().mjava","pathOld":"solr/src/test/org/apache/solr/update/DocumentBuilderTest#testBuildDocument().mjava","sourceNew":"  @Test\n  public void testBuildDocument() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    // undefined field\n    try {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.setField( \"unknown field\", 12345, 1.0f );\n      DocumentBuilder.toDocument( doc, core.getSchema() );\n      fail( \"should throw an error\" );\n    }\n    catch( SolrException ex ) {\n      assertEquals( \"should be bad request\", 400, ex.code() );\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBuildDocument() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    // undefined field\n    try {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.setField( \"unknown field\", 12345, 1.0f );\n      DocumentBuilder.toDocument( doc, core.getSchema() );\n      fail( \"should throw an error\" );\n    }\n    catch( SolrException ex ) {\n      assertEquals( \"should be bad request\", 400, ex.code() );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08970e5b8411182a29412c177eff67ec1110095b","date":1366640815,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/DocumentBuilderTest#testBuildDocument().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/DocumentBuilderTest#testBuildDocument().mjava","sourceNew":"  @Test\n  public void testBuildDocument() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    // undefined field\n    try {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.setField( \"unknown field\", 12345, 1.0f );\n      DocumentBuilder.toDocument( doc, core.getLatestSchema() );\n      fail( \"should throw an error\" );\n    }\n    catch( SolrException ex ) {\n      assertEquals( \"should be bad request\", 400, ex.code() );\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBuildDocument() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    // undefined field\n    try {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.setField( \"unknown field\", 12345, 1.0f );\n      DocumentBuilder.toDocument( doc, core.getSchema() );\n      fail( \"should throw an error\" );\n    }\n    catch( SolrException ex ) {\n      assertEquals( \"should be bad request\", 400, ex.code() );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/DocumentBuilderTest#testBuildDocument().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/DocumentBuilderTest#testBuildDocument().mjava","sourceNew":"  @Test\n  public void testBuildDocument() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    // undefined field\n    try {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.setField( \"unknown field\", 12345 );\n      DocumentBuilder.toDocument( doc, core.getLatestSchema() );\n      fail( \"should throw an error\" );\n    }\n    catch( SolrException ex ) {\n      assertEquals( \"should be bad request\", 400, ex.code() );\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBuildDocument() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    // undefined field\n    try {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.setField( \"unknown field\", 12345, 1.0f );\n      DocumentBuilder.toDocument( doc, core.getLatestSchema() );\n      fail( \"should throw an error\" );\n    }\n    catch( SolrException ex ) {\n      assertEquals( \"should be bad request\", 400, ex.code() );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1a307447328c95a00248512b40d7a5ff12ecd6a","date":1564817449,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/DocumentBuilderTest#testBuildDocument().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/DocumentBuilderTest#testBuildDocument().mjava","sourceNew":"  @Test\n  public void testBuildDocument() throws Exception {\n    SolrCore core = h.getCore();\n    // undefined field\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"unknown field\", 12345 );\n\n    SolrException ex = expectThrows(SolrException.class, () -> DocumentBuilder.toDocument( doc, core.getLatestSchema() ));\n    assertEquals(\"should be bad request\", 400, ex.code());\n  }\n\n","sourceOld":"  @Test\n  public void testBuildDocument() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    // undefined field\n    try {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.setField( \"unknown field\", 12345 );\n      DocumentBuilder.toDocument( doc, core.getLatestSchema() );\n      fail( \"should throw an error\" );\n    }\n    catch( SolrException ex ) {\n      assertEquals( \"should be bad request\", 400, ex.code() );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/DocumentBuilderTest#testBuildDocument().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/DocumentBuilderTest#testBuildDocument().mjava","sourceNew":"  @Test\n  public void testBuildDocument() throws Exception {\n    SolrCore core = h.getCore();\n    // undefined field\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"unknown field\", 12345 );\n\n    SolrException ex = expectThrows(SolrException.class, () -> DocumentBuilder.toDocument( doc, core.getLatestSchema() ));\n    assertEquals(\"should be bad request\", 400, ex.code());\n  }\n\n","sourceOld":"  @Test\n  public void testBuildDocument() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    // undefined field\n    try {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.setField( \"unknown field\", 12345 );\n      DocumentBuilder.toDocument( doc, core.getLatestSchema() );\n      fail( \"should throw an error\" );\n    }\n    catch( SolrException ex ) {\n      assertEquals( \"should be bad request\", 400, ex.code() );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","date":1565097295,"type":3,"author":"Jan HÃ¸ydahl","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/DocumentBuilderTest#testBuildDocument().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/DocumentBuilderTest#testBuildDocument().mjava","sourceNew":"  @Test\n  public void testBuildDocument() throws Exception {\n    SolrCore core = h.getCore();\n    // undefined field\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"unknown field\", 12345 );\n\n    SolrException ex = expectThrows(SolrException.class, () -> DocumentBuilder.toDocument( doc, core.getLatestSchema() ));\n    assertEquals(\"should be bad request\", 400, ex.code());\n  }\n\n","sourceOld":"  @Test\n  public void testBuildDocument() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    // undefined field\n    try {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.setField( \"unknown field\", 12345 );\n      DocumentBuilder.toDocument( doc, core.getLatestSchema() );\n      fail( \"should throw an error\" );\n    }\n    catch( SolrException ex ) {\n      assertEquals( \"should be bad request\", 400, ex.code() );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["acd9883560fd89e6448b2b447302fe543040cd4f"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":["acd9883560fd89e6448b2b447302fe543040cd4f","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"acd9883560fd89e6448b2b447302fe543040cd4f":["08970e5b8411182a29412c177eff67ec1110095b"],"f8061ddd97f3352007d927dae445884a6f3d857b":["acd9883560fd89e6448b2b447302fe543040cd4f","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1a307447328c95a00248512b40d7a5ff12ecd6a"],"08970e5b8411182a29412c177eff67ec1110095b":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["08970e5b8411182a29412c177eff67ec1110095b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":[],"acd9883560fd89e6448b2b447302fe543040cd4f":["d1a307447328c95a00248512b40d7a5ff12ecd6a","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"08970e5b8411182a29412c177eff67ec1110095b":["acd9883560fd89e6448b2b447302fe543040cd4f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}