{"path":"solr/core/src/java/org/apache/solr/core/MemClassLoader#getByteBuffer(String,AtomicReference[String]).mjava","commits":[{"id":"9aea0485ecacb6734c17da2d02569816c23a69c1","date":1425707735,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/MemClassLoader#getByteBuffer(String,AtomicReference[String]).mjava","pathOld":"/dev/null","sourceNew":"  private ByteBuffer getByteBuffer(String name, AtomicReference<String> jarName) throws Exception {\n    if (!allJarsLoaded) {\n      loadJars();\n\n    }\n\n    String path = name.replace('.', '/').concat(\".class\");\n    ByteBuffer buf = null;\n    for (PluginRegistry.RuntimeLib lib : libs) {\n      try {\n        buf = lib.getFileContent(path);\n        if (buf != null) {\n          jarName.set(lib.name);\n          break;\n        }\n      } catch (Exception exp) {\n        throw new ClassNotFoundException(\"Unable to load class :\" + name, exp);\n      }\n    }\n\n    return buf;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"69cad0546debf9ce9d44e309ecfa26760fecd5d8","date":1425846082,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/MemClassLoader#getByteBuffer(String,AtomicReference[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/MemClassLoader#getByteBuffer(String,AtomicReference[String]).mjava","sourceNew":"  private ByteBuffer getByteBuffer(String name, AtomicReference<String> jarName) throws Exception {\n    if (!allJarsLoaded) {\n      loadJars();\n\n    }\n\n    String path = name.replace('.', '/').concat(\".class\");\n    ByteBuffer buf = null;\n    for (PluginBag.RuntimeLib lib : libs) {\n      try {\n        buf = lib.getFileContent(path);\n        if (buf != null) {\n          jarName.set(lib.name);\n          break;\n        }\n      } catch (Exception exp) {\n        throw new ClassNotFoundException(\"Unable to load class :\" + name, exp);\n      }\n    }\n\n    return buf;\n  }\n\n","sourceOld":"  private ByteBuffer getByteBuffer(String name, AtomicReference<String> jarName) throws Exception {\n    if (!allJarsLoaded) {\n      loadJars();\n\n    }\n\n    String path = name.replace('.', '/').concat(\".class\");\n    ByteBuffer buf = null;\n    for (PluginRegistry.RuntimeLib lib : libs) {\n      try {\n        buf = lib.getFileContent(path);\n        if (buf != null) {\n          jarName.set(lib.name);\n          break;\n        }\n      } catch (Exception exp) {\n        throw new ClassNotFoundException(\"Unable to load class :\" + name, exp);\n      }\n    }\n\n    return buf;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e82d485dfb2d8c31baefb7ef96b64021a1ffa170","date":1425903839,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/MemClassLoader#getByteBuffer(String,AtomicReference[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/MemClassLoader#getByteBuffer(String,AtomicReference[String]).mjava","sourceNew":"  private ByteBuffer getByteBuffer(String name, AtomicReference<String> jarName) throws Exception {\n    if (!allJarsLoaded) {\n      loadJars();\n\n    }\n\n    String path = name.replace('.', '/').concat(\".class\");\n    ByteBuffer buf = null;\n    for (PluginBag.RuntimeLib lib : libs) {\n      try {\n        buf = lib.getFileContent(path);\n        if (buf != null) {\n          jarName.set(lib.getName());\n          break;\n        }\n      } catch (Exception exp) {\n        throw new ClassNotFoundException(\"Unable to load class :\" + name, exp);\n      }\n    }\n\n    return buf;\n  }\n\n","sourceOld":"  private ByteBuffer getByteBuffer(String name, AtomicReference<String> jarName) throws Exception {\n    if (!allJarsLoaded) {\n      loadJars();\n\n    }\n\n    String path = name.replace('.', '/').concat(\".class\");\n    ByteBuffer buf = null;\n    for (PluginBag.RuntimeLib lib : libs) {\n      try {\n        buf = lib.getFileContent(path);\n        if (buf != null) {\n          jarName.set(lib.name);\n          break;\n        }\n      } catch (Exception exp) {\n        throw new ClassNotFoundException(\"Unable to load class :\" + name, exp);\n      }\n    }\n\n    return buf;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/MemClassLoader#getByteBuffer(String,AtomicReference[String]).mjava","pathOld":"/dev/null","sourceNew":"  private ByteBuffer getByteBuffer(String name, AtomicReference<String> jarName) throws Exception {\n    if (!allJarsLoaded) {\n      loadJars();\n\n    }\n\n    String path = name.replace('.', '/').concat(\".class\");\n    ByteBuffer buf = null;\n    for (PluginBag.RuntimeLib lib : libs) {\n      try {\n        buf = lib.getFileContent(path);\n        if (buf != null) {\n          jarName.set(lib.getName());\n          break;\n        }\n      } catch (Exception exp) {\n        throw new ClassNotFoundException(\"Unable to load class :\" + name, exp);\n      }\n    }\n\n    return buf;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb50877dc038c021eba3a70999fd1f6ed85001c1","date":1563596432,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/MemClassLoader#getByteBuffer(String,AtomicReference[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/MemClassLoader#getByteBuffer(String,AtomicReference[String]).mjava","sourceNew":"  private ByteBuffer getByteBuffer(String name, AtomicReference<String> jarName) throws Exception {\n    if (!allJarsLoaded) {\n      loadJars();\n\n    }\n\n    String path = name.replace('.', '/').concat(\".class\");\n    ByteBuffer buf = null;\n    for (RuntimeLib lib : libs) {\n      try {\n        buf = lib.getFileContent(path);\n        if (buf != null) {\n          jarName.set(lib.getName());\n          break;\n        }\n      } catch (Exception exp) {\n        throw new ClassNotFoundException(\"Unable to load class :\" + name, exp);\n      }\n    }\n\n    return buf;\n  }\n\n","sourceOld":"  private ByteBuffer getByteBuffer(String name, AtomicReference<String> jarName) throws Exception {\n    if (!allJarsLoaded) {\n      loadJars();\n\n    }\n\n    String path = name.replace('.', '/').concat(\".class\");\n    ByteBuffer buf = null;\n    for (PluginBag.RuntimeLib lib : libs) {\n      try {\n        buf = lib.getFileContent(path);\n        if (buf != null) {\n          jarName.set(lib.getName());\n          break;\n        }\n      } catch (Exception exp) {\n        throw new ClassNotFoundException(\"Unable to load class :\" + name, exp);\n      }\n    }\n\n    return buf;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c44cc06c26e456fe9c215072b79fce30babe3975","date":1570365040,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/MemClassLoader#getByteBuffer(String,AtomicReference[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/MemClassLoader#getByteBuffer(String,AtomicReference[String]).mjava","sourceNew":"  private ByteBuffer getByteBuffer(String name, AtomicReference<String> jarName) throws Exception {\n    if (!allJarsLoaded) {\n      loadJars();\n\n    }\n\n    String path = name.replace('.', '/').concat(\".class\");\n    ByteBuffer buf = null;\n    for (PluginBag.RuntimeLib lib : libs) {\n      try {\n        buf = lib.getFileContent(path);\n        if (buf != null) {\n          jarName.set(lib.getName());\n          break;\n        }\n      } catch (Exception exp) {\n        throw new ClassNotFoundException(\"Unable to load class :\" + name, exp);\n      }\n    }\n\n    return buf;\n  }\n\n","sourceOld":"  private ByteBuffer getByteBuffer(String name, AtomicReference<String> jarName) throws Exception {\n    if (!allJarsLoaded) {\n      loadJars();\n\n    }\n\n    String path = name.replace('.', '/').concat(\".class\");\n    ByteBuffer buf = null;\n    for (RuntimeLib lib : libs) {\n      try {\n        buf = lib.getFileContent(path);\n        if (buf != null) {\n          jarName.set(lib.getName());\n          break;\n        }\n      } catch (Exception exp) {\n        throw new ClassNotFoundException(\"Unable to load class :\" + name, exp);\n      }\n    }\n\n    return buf;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/MemClassLoader#getByteBuffer(String,AtomicReference[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/MemClassLoader#getByteBuffer(String,AtomicReference[String]).mjava","sourceNew":"  private ByteBuffer getByteBuffer(String name, AtomicReference<String> jarName) throws Exception {\n    if (!allJarsLoaded) {\n      loadJars();\n\n    }\n\n    String path = name.replace('.', '/').concat(\".class\");\n    ByteBuffer buf = null;\n    for (PluginBag.RuntimeLib lib : libs) {\n      try {\n        buf = lib.getFileContent(path);\n        if (buf != null) {\n          jarName.set(lib.getName());\n          break;\n        }\n      } catch (Exception exp) {\n        throw new ClassNotFoundException(\"Unable to load class :\" + name, exp);\n      }\n    }\n\n    return buf;\n  }\n\n","sourceOld":"  private ByteBuffer getByteBuffer(String name, AtomicReference<String> jarName) throws Exception {\n    if (!allJarsLoaded) {\n      loadJars();\n\n    }\n\n    String path = name.replace('.', '/').concat(\".class\");\n    ByteBuffer buf = null;\n    for (RuntimeLib lib : libs) {\n      try {\n        buf = lib.getFileContent(path);\n        if (buf != null) {\n          jarName.set(lib.getName());\n          break;\n        }\n      } catch (Exception exp) {\n        throw new ClassNotFoundException(\"Unable to load class :\" + name, exp);\n      }\n    }\n\n    return buf;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d16198391f70a4ee52a8c8792c91eb87a30f1d6","date":1596695552,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/MemClassLoader#getByteBuffer(String,AtomicReference[String]).mjava","sourceNew":null,"sourceOld":"  private ByteBuffer getByteBuffer(String name, AtomicReference<String> jarName) throws Exception {\n    if (!allJarsLoaded) {\n      loadJars();\n\n    }\n\n    String path = name.replace('.', '/').concat(\".class\");\n    ByteBuffer buf = null;\n    for (PluginBag.RuntimeLib lib : libs) {\n      try {\n        buf = lib.getFileContent(path);\n        if (buf != null) {\n          jarName.set(lib.getName());\n          break;\n        }\n      } catch (Exception exp) {\n        throw new ClassNotFoundException(\"Unable to load class :\" + name, exp);\n      }\n    }\n\n    return buf;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e82d485dfb2d8c31baefb7ef96b64021a1ffa170"],"e82d485dfb2d8c31baefb7ef96b64021a1ffa170":["69cad0546debf9ce9d44e309ecfa26760fecd5d8"],"fb50877dc038c021eba3a70999fd1f6ed85001c1":["e82d485dfb2d8c31baefb7ef96b64021a1ffa170"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0d16198391f70a4ee52a8c8792c91eb87a30f1d6":["c44cc06c26e456fe9c215072b79fce30babe3975"],"69cad0546debf9ce9d44e309ecfa26760fecd5d8":["9aea0485ecacb6734c17da2d02569816c23a69c1"],"c44cc06c26e456fe9c215072b79fce30babe3975":["fb50877dc038c021eba3a70999fd1f6ed85001c1"],"9aea0485ecacb6734c17da2d02569816c23a69c1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0d16198391f70a4ee52a8c8792c91eb87a30f1d6"],"b0b597c65628ca9e73913a07e81691f8229bae35":["fb50877dc038c021eba3a70999fd1f6ed85001c1","c44cc06c26e456fe9c215072b79fce30babe3975"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"e82d485dfb2d8c31baefb7ef96b64021a1ffa170":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","fb50877dc038c021eba3a70999fd1f6ed85001c1"],"fb50877dc038c021eba3a70999fd1f6ed85001c1":["c44cc06c26e456fe9c215072b79fce30babe3975","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","9aea0485ecacb6734c17da2d02569816c23a69c1"],"0d16198391f70a4ee52a8c8792c91eb87a30f1d6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"69cad0546debf9ce9d44e309ecfa26760fecd5d8":["e82d485dfb2d8c31baefb7ef96b64021a1ffa170"],"c44cc06c26e456fe9c215072b79fce30babe3975":["0d16198391f70a4ee52a8c8792c91eb87a30f1d6","b0b597c65628ca9e73913a07e81691f8229bae35"],"9aea0485ecacb6734c17da2d02569816c23a69c1":["69cad0546debf9ce9d44e309ecfa26760fecd5d8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}