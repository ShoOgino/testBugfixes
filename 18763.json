{"path":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#distribSetUp().mjava","commits":[{"id":"abb23fcc2461782ab204e61213240feb77d355aa","date":1422029612,"type":1,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#distribSetUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#setUp().mjava","sourceNew":"  @Override\n  public void distribSetUp() throws Exception {\n    super.distribSetUp();\n    \n    useJettyDataDir = false;\n\n    if (secondConfigSet ) {\n      String zkHost = zkServer.getZkHost();\n      String zkAddress = zkServer.getZkAddress();\n      SolrZkClient zkClient = new SolrZkClient(zkHost, AbstractZkTestCase.TIMEOUT);\n      zkClient.makePath(\"/solr\", false, true);\n      zkClient.close();\n\n      zkClient = new SolrZkClient(zkAddress, AbstractZkTestCase.TIMEOUT);\n\n      File solrhome = new File(TEST_HOME());\n      \n      // for now, always upload the config and schema to the canonical names\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, getCloudSolrConfig(), \"solrconfig.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"schema.xml\", \"schema.xml\");\n\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"solrconfig.snippet.randomindexconfig.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"stopwords.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"protwords.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"currency.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"open-exchange-rates.json\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"mapping-ISOLatin1Accent.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"old_synonyms.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"synonyms.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"elevate.xml\");\n      zkClient.close();\n    }\n    \n    System.setProperty(\"numShards\", Integer.toString(sliceCount));\n\n  }\n\n","sourceOld":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    useJettyDataDir = false;\n\n    if (secondConfigSet ) {\n      String zkHost = zkServer.getZkHost();\n      String zkAddress = zkServer.getZkAddress();\n      SolrZkClient zkClient = new SolrZkClient(zkHost, AbstractZkTestCase.TIMEOUT);\n      zkClient.makePath(\"/solr\", false, true);\n      zkClient.close();\n\n      zkClient = new SolrZkClient(zkAddress, AbstractZkTestCase.TIMEOUT);\n\n      File solrhome = new File(TEST_HOME());\n      \n      // for now, always upload the config and schema to the canonical names\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, getCloudSolrConfig(), \"solrconfig.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"schema.xml\", \"schema.xml\");\n\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"solrconfig.snippet.randomindexconfig.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"stopwords.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"protwords.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"currency.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"open-exchange-rates.json\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"mapping-ISOLatin1Accent.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"old_synonyms.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"synonyms.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"elevate.xml\");\n      zkClient.close();\n    }\n    \n    System.setProperty(\"numShards\", Integer.toString(sliceCount));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d12bbc45d641864ffe03291bc30f178eb34e434c","date":1426001646,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#distribSetUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#distribSetUp().mjava","sourceNew":"  @Override\n  public void distribSetUp() throws Exception {\n    super.distribSetUp();\n    \n    useJettyDataDir = false;\n\n    if (secondConfigSet ) {\n      String zkHost = zkServer.getZkHost();\n      String zkAddress = zkServer.getZkAddress();\n      SolrZkClient zkClient = new SolrZkClient(zkHost, AbstractZkTestCase.TIMEOUT);\n      zkClient.makePath(\"/solr\", false, true);\n      zkClient.close();\n\n      zkClient = new SolrZkClient(zkAddress, AbstractZkTestCase.TIMEOUT);\n\n      File solrhome = new File(TEST_HOME());\n      \n      // for now, always upload the config and schema to the canonical names\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, getCloudSolrConfig(), \"solrconfig.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"schema.xml\", \"schema.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"enumsConfig.xml\", \"enumsConfig.xml\");\n      \n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"solrconfig.snippet.randomindexconfig.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"stopwords.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"protwords.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"currency.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"open-exchange-rates.json\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"mapping-ISOLatin1Accent.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"old_synonyms.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"synonyms.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"elevate.xml\");\n      zkClient.close();\n    }\n    \n    System.setProperty(\"numShards\", Integer.toString(sliceCount));\n\n  }\n\n","sourceOld":"  @Override\n  public void distribSetUp() throws Exception {\n    super.distribSetUp();\n    \n    useJettyDataDir = false;\n\n    if (secondConfigSet ) {\n      String zkHost = zkServer.getZkHost();\n      String zkAddress = zkServer.getZkAddress();\n      SolrZkClient zkClient = new SolrZkClient(zkHost, AbstractZkTestCase.TIMEOUT);\n      zkClient.makePath(\"/solr\", false, true);\n      zkClient.close();\n\n      zkClient = new SolrZkClient(zkAddress, AbstractZkTestCase.TIMEOUT);\n\n      File solrhome = new File(TEST_HOME());\n      \n      // for now, always upload the config and schema to the canonical names\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, getCloudSolrConfig(), \"solrconfig.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"schema.xml\", \"schema.xml\");\n\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"solrconfig.snippet.randomindexconfig.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"stopwords.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"protwords.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"currency.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"open-exchange-rates.json\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"mapping-ISOLatin1Accent.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"old_synonyms.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"synonyms.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"elevate.xml\");\n      zkClient.close();\n    }\n    \n    System.setProperty(\"numShards\", Integer.toString(sliceCount));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#distribSetUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#distribSetUp().mjava","sourceNew":"  @Override\n  public void distribSetUp() throws Exception {\n    super.distribSetUp();\n    \n    useJettyDataDir = false;\n\n    if (secondConfigSet ) {\n      String zkHost = zkServer.getZkHost();\n      String zkAddress = zkServer.getZkAddress();\n      SolrZkClient zkClient = new SolrZkClient(zkHost, AbstractZkTestCase.TIMEOUT);\n      zkClient.makePath(\"/solr\", false, true);\n      zkClient.close();\n\n      zkClient = new SolrZkClient(zkAddress, AbstractZkTestCase.TIMEOUT);\n\n      File solrhome = new File(TEST_HOME());\n      \n      // for now, always upload the config and schema to the canonical names\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, getCloudSolrConfig(), \"solrconfig.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"schema.xml\", \"schema.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"enumsConfig.xml\", \"enumsConfig.xml\");\n      \n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"solrconfig.snippet.randomindexconfig.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"stopwords.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"protwords.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"currency.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"open-exchange-rates.json\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"mapping-ISOLatin1Accent.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"old_synonyms.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"synonyms.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"elevate.xml\");\n      zkClient.close();\n    }\n    \n    System.setProperty(\"numShards\", Integer.toString(sliceCount));\n\n  }\n\n","sourceOld":"  @Override\n  public void distribSetUp() throws Exception {\n    super.distribSetUp();\n    \n    useJettyDataDir = false;\n\n    if (secondConfigSet ) {\n      String zkHost = zkServer.getZkHost();\n      String zkAddress = zkServer.getZkAddress();\n      SolrZkClient zkClient = new SolrZkClient(zkHost, AbstractZkTestCase.TIMEOUT);\n      zkClient.makePath(\"/solr\", false, true);\n      zkClient.close();\n\n      zkClient = new SolrZkClient(zkAddress, AbstractZkTestCase.TIMEOUT);\n\n      File solrhome = new File(TEST_HOME());\n      \n      // for now, always upload the config and schema to the canonical names\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, getCloudSolrConfig(), \"solrconfig.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"schema.xml\", \"schema.xml\");\n\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"solrconfig.snippet.randomindexconfig.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"stopwords.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"protwords.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"currency.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"open-exchange-rates.json\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"mapping-ISOLatin1Accent.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"old_synonyms.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"synonyms.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"elevate.xml\");\n      zkClient.close();\n    }\n    \n    System.setProperty(\"numShards\", Integer.toString(sliceCount));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2bf454e5dea7bb5bcf27f8332ded09afcc4b6a1b","date":1432801743,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#distribSetUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#distribSetUp().mjava","sourceNew":"  @Override\n  public void distribSetUp() throws Exception {\n    super.distribSetUp();\n    \n    if (secondConfigSet ) {\n      String zkHost = zkServer.getZkHost();\n      String zkAddress = zkServer.getZkAddress();\n      SolrZkClient zkClient = new SolrZkClient(zkHost, AbstractZkTestCase.TIMEOUT);\n      zkClient.makePath(\"/solr\", false, true);\n      zkClient.close();\n\n      zkClient = new SolrZkClient(zkAddress, AbstractZkTestCase.TIMEOUT);\n\n      File solrhome = new File(TEST_HOME());\n      \n      // for now, always upload the config and schema to the canonical names\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, getCloudSolrConfig(), \"solrconfig.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"schema.xml\", \"schema.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"enumsConfig.xml\", \"enumsConfig.xml\");\n      \n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"solrconfig.snippet.randomindexconfig.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"stopwords.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"protwords.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"currency.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"open-exchange-rates.json\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"mapping-ISOLatin1Accent.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"old_synonyms.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"synonyms.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"elevate.xml\");\n      zkClient.close();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void distribSetUp() throws Exception {\n    super.distribSetUp();\n    \n    useJettyDataDir = false;\n\n    if (secondConfigSet ) {\n      String zkHost = zkServer.getZkHost();\n      String zkAddress = zkServer.getZkAddress();\n      SolrZkClient zkClient = new SolrZkClient(zkHost, AbstractZkTestCase.TIMEOUT);\n      zkClient.makePath(\"/solr\", false, true);\n      zkClient.close();\n\n      zkClient = new SolrZkClient(zkAddress, AbstractZkTestCase.TIMEOUT);\n\n      File solrhome = new File(TEST_HOME());\n      \n      // for now, always upload the config and schema to the canonical names\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, getCloudSolrConfig(), \"solrconfig.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"schema.xml\", \"schema.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"enumsConfig.xml\", \"enumsConfig.xml\");\n      \n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"solrconfig.snippet.randomindexconfig.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"stopwords.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"protwords.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"currency.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"open-exchange-rates.json\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"mapping-ISOLatin1Accent.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"old_synonyms.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"synonyms.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"elevate.xml\");\n      zkClient.close();\n    }\n    \n    System.setProperty(\"numShards\", Integer.toString(sliceCount));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a4efd3fffdd7acd625bb88e455c8097e17f75735","date":1477647201,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#distribSetUp().mjava","sourceNew":null,"sourceOld":"  @Override\n  public void distribSetUp() throws Exception {\n    super.distribSetUp();\n    \n    if (secondConfigSet ) {\n      String zkHost = zkServer.getZkHost();\n      String zkAddress = zkServer.getZkAddress();\n      SolrZkClient zkClient = new SolrZkClient(zkHost, AbstractZkTestCase.TIMEOUT);\n      zkClient.makePath(\"/solr\", false, true);\n      zkClient.close();\n\n      zkClient = new SolrZkClient(zkAddress, AbstractZkTestCase.TIMEOUT);\n\n      File solrhome = new File(TEST_HOME());\n      \n      // for now, always upload the config and schema to the canonical names\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, getCloudSolrConfig(), \"solrconfig.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"schema.xml\", \"schema.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"enumsConfig.xml\", \"enumsConfig.xml\");\n      \n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"solrconfig.snippet.randomindexconfig.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"stopwords.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"protwords.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"currency.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"open-exchange-rates.json\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"mapping-ISOLatin1Accent.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"old_synonyms.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"synonyms.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"elevate.xml\");\n      zkClient.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59dce44d6a0b58c171de1d47ad8c0a75831f94fd","date":1477668573,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#distribSetUp().mjava","sourceNew":null,"sourceOld":"  @Override\n  public void distribSetUp() throws Exception {\n    super.distribSetUp();\n    \n    if (secondConfigSet ) {\n      String zkHost = zkServer.getZkHost();\n      String zkAddress = zkServer.getZkAddress();\n      SolrZkClient zkClient = new SolrZkClient(zkHost, AbstractZkTestCase.TIMEOUT);\n      zkClient.makePath(\"/solr\", false, true);\n      zkClient.close();\n\n      zkClient = new SolrZkClient(zkAddress, AbstractZkTestCase.TIMEOUT);\n\n      File solrhome = new File(TEST_HOME());\n      \n      // for now, always upload the config and schema to the canonical names\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, getCloudSolrConfig(), \"solrconfig.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"schema.xml\", \"schema.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"enumsConfig.xml\", \"enumsConfig.xml\");\n      \n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"solrconfig.snippet.randomindexconfig.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"stopwords.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"protwords.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"currency.xml\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"open-exchange-rates.json\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"mapping-ISOLatin1Accent.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"old_synonyms.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"synonyms.txt\");\n      AbstractZkTestCase.putConfig(\"conf2\", zkClient, solrhome, \"elevate.xml\");\n      zkClient.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a4efd3fffdd7acd625bb88e455c8097e17f75735":["2bf454e5dea7bb5bcf27f8332ded09afcc4b6a1b"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["abb23fcc2461782ab204e61213240feb77d355aa","d12bbc45d641864ffe03291bc30f178eb34e434c"],"2bf454e5dea7bb5bcf27f8332ded09afcc4b6a1b":["d12bbc45d641864ffe03291bc30f178eb34e434c"],"59dce44d6a0b58c171de1d47ad8c0a75831f94fd":["2bf454e5dea7bb5bcf27f8332ded09afcc4b6a1b","a4efd3fffdd7acd625bb88e455c8097e17f75735"],"abb23fcc2461782ab204e61213240feb77d355aa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d12bbc45d641864ffe03291bc30f178eb34e434c":["abb23fcc2461782ab204e61213240feb77d355aa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a4efd3fffdd7acd625bb88e455c8097e17f75735"]},"commit2Childs":{"a4efd3fffdd7acd625bb88e455c8097e17f75735":["59dce44d6a0b58c171de1d47ad8c0a75831f94fd","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"2bf454e5dea7bb5bcf27f8332ded09afcc4b6a1b":["a4efd3fffdd7acd625bb88e455c8097e17f75735","59dce44d6a0b58c171de1d47ad8c0a75831f94fd"],"59dce44d6a0b58c171de1d47ad8c0a75831f94fd":[],"abb23fcc2461782ab204e61213240feb77d355aa":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","d12bbc45d641864ffe03291bc30f178eb34e434c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["abb23fcc2461782ab204e61213240feb77d355aa"],"d12bbc45d641864ffe03291bc30f178eb34e434c":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","2bf454e5dea7bb5bcf27f8332ded09afcc4b6a1b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","59dce44d6a0b58c171de1d47ad8c0a75831f94fd","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}