{"path":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#IntsReader(Directory,String).mjava","commits":[{"id":"605b061fadf71aa6458c0005eaae83a98350c403","date":1307117658,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#IntsReader(Directory,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsReader#IntsReader(Directory,String).mjava","sourceNew":"    protected IntsReader(Directory dir, String id) throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      boolean success = false;\n      try {\n        CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n        packed = PACKED == datIn.readByte();\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datIn);\n        }\n      }\n    }\n\n","sourceOld":"    protected IntsReader(Directory dir, String id) throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      boolean success = false;\n      try {\n        CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n        packed = PACKED == datIn.readByte();\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datIn);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#IntsReader(Directory,String).mjava","pathOld":"/dev/null","sourceNew":"    protected IntsReader(Directory dir, String id) throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      boolean success = false;\n      try {\n        CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n        packed = PACKED == datIn.readByte();\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datIn);\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#IntsReader(Directory,String).mjava","pathOld":"/dev/null","sourceNew":"    protected IntsReader(Directory dir, String id) throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      boolean success = false;\n      try {\n        CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n        packed = PACKED == datIn.readByte();\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datIn);\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"639c36565ce03aed5b0fce7c9e4448e53a1f7efd","date":1308580104,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#IntsReader(Directory,String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#IntsReader(Directory,String).mjava","sourceNew":"    protected IntsReader(Directory dir, String id, IOContext context) throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION), context);\n      boolean success = false;\n      try {\n        CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n        packed = PACKED == datIn.readByte();\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datIn);\n        }\n      }\n    }\n\n","sourceOld":"    protected IntsReader(Directory dir, String id) throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      boolean success = false;\n      try {\n        CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n        packed = PACKED == datIn.readByte();\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datIn);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93c59ad5034eecd863f267bd75e1df7b8a51e427","date":1309162882,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#IntsReader(Directory,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#IntsReader(Directory,String).mjava","sourceNew":"    protected IntsReader(Directory dir, String id) throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      boolean success = false;\n      try {\n        CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n        type = datIn.readByte();\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datIn);\n        }\n      }\n    }\n\n","sourceOld":"    protected IntsReader(Directory dir, String id) throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      boolean success = false;\n      try {\n        CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n        packed = PACKED == datIn.readByte();\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datIn);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7","date":1309190785,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#IntsReader(Directory,String,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#IntsReader(Directory,String).mjava","sourceNew":"    protected IntsReader(Directory dir, String id, int numDocs) throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      this.numDocs = numDocs;\n      boolean success = false;\n      try {\n        CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n        type = datIn.readByte();\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datIn);\n        }\n      }\n    }\n\n","sourceOld":"    protected IntsReader(Directory dir, String id) throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      boolean success = false;\n      try {\n        CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n        type = datIn.readByte();\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datIn);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#IntsReader(Directory,String,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#IntsReader(Directory,String).mjava","sourceNew":"    protected IntsReader(Directory dir, String id, int numDocs) throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      this.numDocs = numDocs;\n      boolean success = false;\n      try {\n        CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n        type = datIn.readByte();\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datIn);\n        }\n      }\n    }\n\n","sourceOld":"    protected IntsReader(Directory dir, String id) throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      boolean success = false;\n      try {\n        CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n        packed = PACKED == datIn.readByte();\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datIn);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2e8d7ba2175f47e280231533f7d3016249cea88b"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","605b061fadf71aa6458c0005eaae83a98350c403"],"605b061fadf71aa6458c0005eaae83a98350c403":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7":["93c59ad5034eecd863f267bd75e1df7b8a51e427"],"93c59ad5034eecd863f267bd75e1df7b8a51e427":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"2553b00f699380c64959ccb27991289aae87be2e":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["2553b00f699380c64959ccb27991289aae87be2e"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","93c59ad5034eecd863f267bd75e1df7b8a51e427","639c36565ce03aed5b0fce7c9e4448e53a1f7efd"],"605b061fadf71aa6458c0005eaae83a98350c403":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7":["2553b00f699380c64959ccb27991289aae87be2e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"93c59ad5034eecd863f267bd75e1df7b8a51e427":["5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","2e8d7ba2175f47e280231533f7d3016249cea88b","605b061fadf71aa6458c0005eaae83a98350c403"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":[],"2553b00f699380c64959ccb27991289aae87be2e":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["639c36565ce03aed5b0fce7c9e4448e53a1f7efd","2553b00f699380c64959ccb27991289aae87be2e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}