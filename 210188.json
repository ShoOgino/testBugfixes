{"path":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesReaderBase#cloneIndex().mjava","commits":[{"id":"01f60198ece724a6e96cd0b45f289cf42ff83d4f","date":1286864103,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesReaderBase#cloneIndex().mjava","pathOld":"/dev/null","sourceNew":"    protected final IndexInput cloneIndex() {\n      assert !isClosed.get():printEx();\n      return idxIn == null ? null : (IndexInput) idxIn.clone();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e28c49f1fb6215a550fdadcf3805aa629b63ec0","date":1288081775,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesReaderBase#cloneIndex().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesReaderBase#cloneIndex().mjava","sourceNew":"    protected final IndexInput cloneIndex() {\n      return idxIn == null ? null : (IndexInput) idxIn.clone();\n    }\n\n","sourceOld":"    protected final IndexInput cloneIndex() {\n      assert !isClosed.get():printEx();\n      return idxIn == null ? null : (IndexInput) idxIn.clone();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5c559c875836474bafae7243263d93b1b1965db","date":1289581659,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesReaderBase#cloneIndex().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesReaderBase#cloneIndex().mjava","sourceNew":"    protected final IndexInput cloneIndex() { // TODO assert here for null rather than return null\n      return idxIn == null ? null : (IndexInput) idxIn.clone();\n    }\n\n","sourceOld":"    protected final IndexInput cloneIndex() {\n      return idxIn == null ? null : (IndexInput) idxIn.clone();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3ae97ad22c2ae646bfc1c09cab424cb07f9474ca","date":1289932456,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesReaderBase#cloneIndex().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesReaderBase#cloneIndex().mjava","sourceNew":"    protected final IndexInput cloneIndex() { // TODO assert here for null\n                                              // rather than return null\n      return idxIn == null ? null : (IndexInput) idxIn.clone();\n    }\n\n","sourceOld":"    protected final IndexInput cloneIndex() { // TODO assert here for null rather than return null\n      return idxIn == null ? null : (IndexInput) idxIn.clone();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d84736c4614acce6720851cbd2c823d7cd516e4","date":1290551630,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesReaderBase#cloneIndex().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesReaderBase#cloneIndex().mjava","sourceNew":"    protected final IndexInput cloneIndex() { // TODO assert here for null\n      // rather than return null\n      return idxIn == null ? null : (IndexInput) idxIn.clone();\n    }\n\n","sourceOld":"    protected final IndexInput cloneIndex() { // TODO assert here for null\n                                              // rather than return null\n      return idxIn == null ? null : (IndexInput) idxIn.clone();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16dc5aef9648bb8fedce2ef55874f52e62c2766d","date":1293994163,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesReaderBase#cloneIndex().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesReaderBase#cloneIndex().mjava","sourceNew":"    protected final IndexInput cloneIndex() {\n      assert idxIn != null;\n      return (IndexInput) idxIn.clone();\n    }\n\n","sourceOld":"    protected final IndexInput cloneIndex() { // TODO assert here for null\n      // rather than return null\n      return idxIn == null ? null : (IndexInput) idxIn.clone();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85130289d2ed101fcc2d8798511c7c5b020ffab4","date":1297239859,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesReaderBase#cloneIndex().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesReaderBase#cloneIndex().mjava","sourceNew":"    /**\n     * clones and returns the indexing {@link IndexInput}\n     */\n    protected final IndexInput cloneIndex() {\n      assert idxIn != null;\n      return (IndexInput) idxIn.clone();\n    }\n\n","sourceOld":"    protected final IndexInput cloneIndex() {\n      assert idxIn != null;\n      return (IndexInput) idxIn.clone();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesReaderBase#cloneIndex().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * clones and returns the indexing {@link IndexInput}\n     */\n    protected final IndexInput cloneIndex() {\n      assert idxIn != null;\n      return (IndexInput) idxIn.clone();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesReaderBase#cloneIndex().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * clones and returns the indexing {@link IndexInput}\n     */\n    protected final IndexInput cloneIndex() {\n      assert idxIn != null;\n      return (IndexInput) idxIn.clone();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9efc72acdea22f5285be0a808f8bba51bb8e367","date":1323217280,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/Bytes.BytesReaderBase#cloneIndex().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesReaderBase#cloneIndex().mjava","sourceNew":"    /**\n     * clones and returns the indexing {@link IndexInput}\n     */\n    protected final IndexInput cloneIndex() {\n      assert idxIn != null;\n      return (IndexInput) idxIn.clone();\n    }\n\n","sourceOld":"    /**\n     * clones and returns the indexing {@link IndexInput}\n     */\n    protected final IndexInput cloneIndex() {\n      assert idxIn != null;\n      return (IndexInput) idxIn.clone();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/Bytes.BytesReaderBase#cloneIndex().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesReaderBase#cloneIndex().mjava","sourceNew":"    /**\n     * clones and returns the indexing {@link IndexInput}\n     */\n    protected final IndexInput cloneIndex() {\n      assert idxIn != null;\n      return (IndexInput) idxIn.clone();\n    }\n\n","sourceOld":"    /**\n     * clones and returns the indexing {@link IndexInput}\n     */\n    protected final IndexInput cloneIndex() {\n      assert idxIn != null;\n      return (IndexInput) idxIn.clone();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2e8d7ba2175f47e280231533f7d3016249cea88b"],"f9efc72acdea22f5285be0a808f8bba51bb8e367":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"01f60198ece724a6e96cd0b45f289cf42ff83d4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b5c559c875836474bafae7243263d93b1b1965db":["0e28c49f1fb6215a550fdadcf3805aa629b63ec0"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["2e8d7ba2175f47e280231533f7d3016249cea88b","f9efc72acdea22f5285be0a808f8bba51bb8e367"],"2d84736c4614acce6720851cbd2c823d7cd516e4":["3ae97ad22c2ae646bfc1c09cab424cb07f9474ca"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","85130289d2ed101fcc2d8798511c7c5b020ffab4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"16dc5aef9648bb8fedce2ef55874f52e62c2766d":["2d84736c4614acce6720851cbd2c823d7cd516e4"],"85130289d2ed101fcc2d8798511c7c5b020ffab4":["16dc5aef9648bb8fedce2ef55874f52e62c2766d"],"0e28c49f1fb6215a550fdadcf3805aa629b63ec0":["01f60198ece724a6e96cd0b45f289cf42ff83d4f"],"3ae97ad22c2ae646bfc1c09cab424cb07f9474ca":["b5c559c875836474bafae7243263d93b1b1965db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d638301ad1cfcae567b681b893bc8781f0ee48a5"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"f9efc72acdea22f5285be0a808f8bba51bb8e367":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"01f60198ece724a6e96cd0b45f289cf42ff83d4f":["0e28c49f1fb6215a550fdadcf3805aa629b63ec0"],"b5c559c875836474bafae7243263d93b1b1965db":["3ae97ad22c2ae646bfc1c09cab424cb07f9474ca"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2d84736c4614acce6720851cbd2c823d7cd516e4":["16dc5aef9648bb8fedce2ef55874f52e62c2766d"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","f9efc72acdea22f5285be0a808f8bba51bb8e367","d638301ad1cfcae567b681b893bc8781f0ee48a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","01f60198ece724a6e96cd0b45f289cf42ff83d4f","2e8d7ba2175f47e280231533f7d3016249cea88b"],"16dc5aef9648bb8fedce2ef55874f52e62c2766d":["85130289d2ed101fcc2d8798511c7c5b020ffab4"],"85130289d2ed101fcc2d8798511c7c5b020ffab4":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"0e28c49f1fb6215a550fdadcf3805aa629b63ec0":["b5c559c875836474bafae7243263d93b1b1965db"],"3ae97ad22c2ae646bfc1c09cab424cb07f9474ca":["2d84736c4614acce6720851cbd2c823d7cd516e4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}