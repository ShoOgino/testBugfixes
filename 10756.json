{"path":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/search/analysis/TestContentStrategy#testContentStrategyIndexStoreField().mjava","commits":[{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/search/analysis/TestContentStrategy#testContentStrategyIndexStoreField().mjava","pathOld":"contrib/gdata-server/src/test/org/apache/lucene/gdata/search/analysis/TestContentStrategy#testContentStrategyIndexStoreField().mjava","sourceNew":"    public void testContentStrategyIndexStoreField() throws NotIndexableException{\n        IndexSchemaField field = new IndexSchemaField();\n        field.setName(FIELD);\n        \n        \n        this.strategy = new TestStrategy(Field.Index.UN_TOKENIZED,Field.Store.YES,field);\n        this.strategy.processIndexable(null);\n        Field f = this.strategy.createLuceneField()[0];\n        assertEquals(FIELD,f.name());\n        assertEquals(TestStrategy.CONTENT,f.stringValue());\n        assertEquals(1.0f,f.getBoost());\n        assertTrue(f.isIndexed());\n        assertTrue(f.isStored());\n        assertFalse(f.isTokenized());\n        assertFalse(f.isCompressed());\n    }\n\n","sourceOld":"    public void testContentStrategyIndexStoreField() throws NotIndexableException{\n        IndexSchemaField field = new IndexSchemaField();\n        field.setName(FIELD);\n        \n        \n        this.strategy = new TestStrategy(Field.Index.UN_TOKENIZED,Field.Store.YES,field);\n        this.strategy.processIndexable(null);\n        Field f = this.strategy.createLuceneField()[0];\n        assertEquals(FIELD,f.name());\n        assertEquals(TestStrategy.CONTENT,f.stringValue());\n        assertEquals(1.0f,f.getBoost());\n        assertTrue(f.isIndexed());\n        assertTrue(f.isStored());\n        assertFalse(f.isTokenized());\n        assertFalse(f.isCompressed());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/test/org/apache/lucene/gdata/search/analysis/TestContentStrategy#testContentStrategyIndexStoreField().mjava","pathOld":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/search/analysis/TestContentStrategy#testContentStrategyIndexStoreField().mjava","sourceNew":"    public void testContentStrategyIndexStoreField() throws NotIndexableException{\n        IndexSchemaField field = new IndexSchemaField();\n        field.setName(FIELD);\n        \n        \n        this.strategy = new TestStrategy(Field.Index.UN_TOKENIZED,Field.Store.YES,field);\n        this.strategy.processIndexable(null);\n        Field f = this.strategy.createLuceneField()[0];\n        assertEquals(FIELD,f.name());\n        assertEquals(TestStrategy.CONTENT,f.stringValue());\n        assertEquals(1.0f,f.getBoost());\n        assertTrue(f.isIndexed());\n        assertTrue(f.isStored());\n        assertFalse(f.isTokenized());\n        assertFalse(f.isCompressed());\n    }\n\n","sourceOld":"    public void testContentStrategyIndexStoreField() throws NotIndexableException{\n        IndexSchemaField field = new IndexSchemaField();\n        field.setName(FIELD);\n        \n        \n        this.strategy = new TestStrategy(Field.Index.UN_TOKENIZED,Field.Store.YES,field);\n        this.strategy.processIndexable(null);\n        Field f = this.strategy.createLuceneField()[0];\n        assertEquals(FIELD,f.name());\n        assertEquals(TestStrategy.CONTENT,f.stringValue());\n        assertEquals(1.0f,f.getBoost());\n        assertTrue(f.isIndexed());\n        assertTrue(f.isStored());\n        assertFalse(f.isTokenized());\n        assertFalse(f.isCompressed());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}