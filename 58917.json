{"path":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#testMustAndMustNot().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#testMustAndMustNot().mjava","pathOld":"modules/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#testMustAndMustNot().mjava","sourceNew":"  public void testMustAndMustNot() throws Exception {\n    BooleanFilter booleanFilter = new BooleanFilter();\n    booleanFilter.add(getTermsFilter(\"inStock\", \"N\"), Occur.MUST);\n    booleanFilter.add(getTermsFilter(\"price\", \"030\"), Occur.MUST_NOT);\n    tstFilterCard(\"MUST_NOT wins over MUST for same docs\", 0, booleanFilter);\n    \n    // same with a real DISI (no OpenBitSetIterator)\n    booleanFilter = new BooleanFilter();\n    booleanFilter.add(getWrappedTermQuery(\"inStock\", \"N\"), Occur.MUST);\n    booleanFilter.add(getWrappedTermQuery(\"price\", \"030\"), Occur.MUST_NOT);\n    tstFilterCard(\"MUST_NOT wins over MUST for same docs\", 0, booleanFilter);\n  }\n\n","sourceOld":"  public void testMustAndMustNot() throws Exception {\n    BooleanFilter booleanFilter = new BooleanFilter();\n    booleanFilter.add(getTermsFilter(\"inStock\", \"N\"), Occur.MUST);\n    booleanFilter.add(getTermsFilter(\"price\", \"030\"), Occur.MUST_NOT);\n    tstFilterCard(\"MUST_NOT wins over MUST for same docs\", 0, booleanFilter);\n    \n    // same with a real DISI (no OpenBitSetIterator)\n    booleanFilter = new BooleanFilter();\n    booleanFilter.add(getWrappedTermQuery(\"inStock\", \"N\"), Occur.MUST);\n    booleanFilter.add(getWrappedTermQuery(\"price\", \"030\"), Occur.MUST_NOT);\n    tstFilterCard(\"MUST_NOT wins over MUST for same docs\", 0, booleanFilter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"099c774ddd27f4ad437ca5df14d153bab0a3affe","date":1424527689,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#testMustAndMustNot().mjava","sourceNew":null,"sourceOld":"  public void testMustAndMustNot() throws Exception {\n    BooleanFilter booleanFilter = new BooleanFilter();\n    booleanFilter.add(getTermsFilter(\"inStock\", \"N\"), Occur.MUST);\n    booleanFilter.add(getTermsFilter(\"price\", \"030\"), Occur.MUST_NOT);\n    tstFilterCard(\"MUST_NOT wins over MUST for same docs\", 0, booleanFilter);\n    \n    // same with a real DISI (no OpenBitSetIterator)\n    booleanFilter = new BooleanFilter();\n    booleanFilter.add(getWrappedTermQuery(\"inStock\", \"N\"), Occur.MUST);\n    booleanFilter.add(getWrappedTermQuery(\"price\", \"030\"), Occur.MUST_NOT);\n    tstFilterCard(\"MUST_NOT wins over MUST for same docs\", 0, booleanFilter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"099c774ddd27f4ad437ca5df14d153bab0a3affe":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["099c774ddd27f4ad437ca5df14d153bab0a3affe"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["099c774ddd27f4ad437ca5df14d153bab0a3affe"],"099c774ddd27f4ad437ca5df14d153bab0a3affe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}