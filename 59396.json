{"path":"lucene/src/java/org/apache/lucene/search/Searcher#search(Query,int,Sort).mjava","commits":[{"id":"ef49fb70cd4ad5e80a3e651c1b1b38e09f7201ef","date":1286808311,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/Searcher#search(Query,int,Sort).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Search implementation with arbitrary sorting and no filter.\n   * @param query The query to search for\n   * @param n Return only the top n results\n   * @param sort The {@link org.apache.lucene.search.Sort} object\n   * @return The top docs, sorted according to the supplied {@link org.apache.lucene.search.Sort} instance\n   * @throws IOException\n   */\n  public TopFieldDocs search(Query query, int n,\n                             Sort sort) throws IOException {\n    return search(createWeight(query), null, n, sort);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/Searcher#search(Query,int,Sort).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Search implementation with arbitrary sorting and no filter.\n   * @param query The query to search for\n   * @param n Return only the top n results\n   * @param sort The {@link org.apache.lucene.search.Sort} object\n   * @return The top docs, sorted according to the supplied {@link org.apache.lucene.search.Sort} instance\n   * @throws IOException\n   */\n  public TopFieldDocs search(Query query, int n,\n                             Sort sort) throws IOException {\n    return search(createWeight(query), null, n, sort);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b241ea5e635d896cc0af83cd96ffd0322e0aba7","date":1294226200,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/IndexSearcher#search(Query,int,Sort).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/Searcher#search(Query,int,Sort).mjava","sourceNew":"  /**\n   * Search implementation with arbitrary sorting and no filter.\n   * @param query The query to search for\n   * @param n Return only the top n results\n   * @param sort The {@link org.apache.lucene.search.Sort} object\n   * @return The top docs, sorted according to the supplied {@link org.apache.lucene.search.Sort} instance\n   * @throws IOException\n   */\n  public TopFieldDocs search(Query query, int n,\n                             Sort sort) throws IOException {\n    return search(createWeight(query), null, n, sort);\n  }\n\n","sourceOld":"  /**\n   * Search implementation with arbitrary sorting and no filter.\n   * @param query The query to search for\n   * @param n Return only the top n results\n   * @param sort The {@link org.apache.lucene.search.Sort} object\n   * @return The top docs, sorted according to the supplied {@link org.apache.lucene.search.Sort} instance\n   * @throws IOException\n   */\n  public TopFieldDocs search(Query query, int n,\n                             Sort sort) throws IOException {\n    return search(createWeight(query), null, n, sort);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/IndexSearcher#search(Query,int,Sort).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/Searcher#search(Query,int,Sort).mjava","sourceNew":"  /**\n   * Search implementation with arbitrary sorting and no filter.\n   * @param query The query to search for\n   * @param n Return only the top n results\n   * @param sort The {@link org.apache.lucene.search.Sort} object\n   * @return The top docs, sorted according to the supplied {@link org.apache.lucene.search.Sort} instance\n   * @throws IOException\n   */\n  public TopFieldDocs search(Query query, int n,\n                             Sort sort) throws IOException {\n    return search(createWeight(query), null, n, sort);\n  }\n\n","sourceOld":"  /**\n   * Search implementation with arbitrary sorting and no filter.\n   * @param query The query to search for\n   * @param n Return only the top n results\n   * @param sort The {@link org.apache.lucene.search.Sort} object\n   * @return The top docs, sorted according to the supplied {@link org.apache.lucene.search.Sort} instance\n   * @throws IOException\n   */\n  public TopFieldDocs search(Query query, int n,\n                             Sort sort) throws IOException {\n    return search(createWeight(query), null, n, sort);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/IndexSearcher#search(Query,int,Sort).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/Searcher#search(Query,int,Sort).mjava","sourceNew":"  /**\n   * Search implementation with arbitrary sorting and no filter.\n   * @param query The query to search for\n   * @param n Return only the top n results\n   * @param sort The {@link org.apache.lucene.search.Sort} object\n   * @return The top docs, sorted according to the supplied {@link org.apache.lucene.search.Sort} instance\n   * @throws IOException\n   */\n  public TopFieldDocs search(Query query, int n,\n                             Sort sort) throws IOException {\n    return search(createWeight(query), null, n, sort);\n  }\n\n","sourceOld":"  /**\n   * Search implementation with arbitrary sorting and no filter.\n   * @param query The query to search for\n   * @param n Return only the top n results\n   * @param sort The {@link org.apache.lucene.search.Sort} object\n   * @return The top docs, sorted according to the supplied {@link org.apache.lucene.search.Sort} instance\n   * @throws IOException\n   */\n  public TopFieldDocs search(Query query, int n,\n                             Sort sort) throws IOException {\n    return search(createWeight(query), null, n, sort);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["ef49fb70cd4ad5e80a3e651c1b1b38e09f7201ef","8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"ef49fb70cd4ad5e80a3e651c1b1b38e09f7201ef":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8b241ea5e635d896cc0af83cd96ffd0322e0aba7":["ef49fb70cd4ad5e80a3e651c1b1b38e09f7201ef"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ef49fb70cd4ad5e80a3e651c1b1b38e09f7201ef"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8b241ea5e635d896cc0af83cd96ffd0322e0aba7"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"ef49fb70cd4ad5e80a3e651c1b1b38e09f7201ef":["70ad682703b8585f5d0a637efec044d57ec05efb","8b241ea5e635d896cc0af83cd96ffd0322e0aba7","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"8b241ea5e635d896cc0af83cd96ffd0322e0aba7":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ef49fb70cd4ad5e80a3e651c1b1b38e09f7201ef","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}