{"path":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#onDocValuesUpdate(FieldInfo,DocValuesFieldUpdates.Iterator).mjava","commits":[{"id":"f372764a5bd3ebacde5b99ee3303153eb5ec0d2f","date":1525347515,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#onDocValuesUpdate(FieldInfo,DocValuesFieldUpdates.Iterator).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#onDocValuesUpdate(FieldInfo).mjava","sourceNew":"  @Override\n  void onDocValuesUpdate(FieldInfo info, DocValuesFieldUpdates.Iterator iterator) throws IOException {\n    if (this.field.equals(info.name)) {\n      pendingDeleteCount += applySoftDeletes(iterator, getMutableBits());\n      assert dvGeneration < info.getDocValuesGen() : \"we have seen this generation update already: \" + dvGeneration + \" vs. \" + info.getDocValuesGen();\n      assert dvGeneration != -2 : \"docValues generation is still uninitialized\";\n      dvGeneration = info.getDocValuesGen();\n    }\n  }\n\n","sourceOld":"  @Override\n  void onDocValuesUpdate(FieldInfo info) {\n    if (field.equals(info.name)) {\n      assert dvGeneration < info.getDocValuesGen() : \"we have seen this generation update already: \" + dvGeneration + \" vs. \" + info.getDocValuesGen();\n      assert dvGeneration != -2 : \"docValues generation is still uninitialized\";\n      dvGeneration = info.getDocValuesGen();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aef2a94da918b657d107b616a643e1759db43b6a","date":1527706131,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#onDocValuesUpdate(FieldInfo,DocValuesFieldUpdates.Iterator).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#onDocValuesUpdate(FieldInfo,DocValuesFieldUpdates.Iterator).mjava","sourceNew":"  @Override\n  void onDocValuesUpdate(FieldInfo info, DocValuesFieldUpdates.Iterator iterator) throws IOException {\n    if (this.field.equals(info.name)) {\n      pendingDeleteCount += applySoftDeletes(iterator, getMutableBits());\n      assert pendingDeleteCount >= 0 : \" illegal pending delete count: \" + pendingDeleteCount;\n      assert dvGeneration < info.getDocValuesGen() : \"we have seen this generation update already: \" + dvGeneration + \" vs. \" + info.getDocValuesGen();\n      assert dvGeneration != -2 : \"docValues generation is still uninitialized\";\n      dvGeneration = info.getDocValuesGen();\n    }\n  }\n\n","sourceOld":"  @Override\n  void onDocValuesUpdate(FieldInfo info, DocValuesFieldUpdates.Iterator iterator) throws IOException {\n    if (this.field.equals(info.name)) {\n      pendingDeleteCount += applySoftDeletes(iterator, getMutableBits());\n      assert dvGeneration < info.getDocValuesGen() : \"we have seen this generation update already: \" + dvGeneration + \" vs. \" + info.getDocValuesGen();\n      assert dvGeneration != -2 : \"docValues generation is still uninitialized\";\n      dvGeneration = info.getDocValuesGen();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8f2203cb8ae87188877cfbf6ad170c5738a0aad5","date":1528117512,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#onDocValuesUpdate(FieldInfo,DocValuesFieldUpdates.Iterator).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#onDocValuesUpdate(FieldInfo,DocValuesFieldUpdates.Iterator).mjava","sourceNew":"  @Override\n  void onDocValuesUpdate(FieldInfo info, DocValuesFieldUpdates.Iterator iterator) throws IOException {\n    if (this.field.equals(info.name)) {\n      pendingDeleteCount += applySoftDeletes(iterator, getMutableBits());\n      assert assertPendingDeletes();\n      assert dvGeneration < info.getDocValuesGen() : \"we have seen this generation update already: \" + dvGeneration + \" vs. \" + info.getDocValuesGen();\n      assert dvGeneration != -2 : \"docValues generation is still uninitialized\";\n      dvGeneration = info.getDocValuesGen();\n      this.info.setSoftDelCount(this.info.getSoftDelCount() + pendingDeleteCount);\n      super.dropChanges();\n    }\n  }\n\n","sourceOld":"  @Override\n  void onDocValuesUpdate(FieldInfo info, DocValuesFieldUpdates.Iterator iterator) throws IOException {\n    if (this.field.equals(info.name)) {\n      pendingDeleteCount += applySoftDeletes(iterator, getMutableBits());\n      assert pendingDeleteCount >= 0 : \" illegal pending delete count: \" + pendingDeleteCount;\n      assert dvGeneration < info.getDocValuesGen() : \"we have seen this generation update already: \" + dvGeneration + \" vs. \" + info.getDocValuesGen();\n      assert dvGeneration != -2 : \"docValues generation is still uninitialized\";\n      dvGeneration = info.getDocValuesGen();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#onDocValuesUpdate(FieldInfo,DocValuesFieldUpdates.Iterator).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#onDocValuesUpdate(FieldInfo,DocValuesFieldUpdates.Iterator).mjava","sourceNew":"  @Override\n  void onDocValuesUpdate(FieldInfo info, DocValuesFieldUpdates.Iterator iterator) throws IOException {\n    if (this.field.equals(info.name)) {\n      pendingDeleteCount += applySoftDeletes(iterator, getMutableBits());\n      assert assertPendingDeletes();\n      assert dvGeneration < info.getDocValuesGen() : \"we have seen this generation update already: \" + dvGeneration + \" vs. \" + info.getDocValuesGen();\n      assert dvGeneration != -2 : \"docValues generation is still uninitialized\";\n      dvGeneration = info.getDocValuesGen();\n      this.info.setSoftDelCount(this.info.getSoftDelCount() + pendingDeleteCount);\n      super.dropChanges();\n    }\n  }\n\n","sourceOld":"  @Override\n  void onDocValuesUpdate(FieldInfo info, DocValuesFieldUpdates.Iterator iterator) throws IOException {\n    if (this.field.equals(info.name)) {\n      pendingDeleteCount += applySoftDeletes(iterator, getMutableBits());\n      assert pendingDeleteCount >= 0 : \" illegal pending delete count: \" + pendingDeleteCount;\n      assert dvGeneration < info.getDocValuesGen() : \"we have seen this generation update already: \" + dvGeneration + \" vs. \" + info.getDocValuesGen();\n      assert dvGeneration != -2 : \"docValues generation is still uninitialized\";\n      dvGeneration = info.getDocValuesGen();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#onDocValuesUpdate(FieldInfo,DocValuesFieldUpdates.Iterator).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#onDocValuesUpdate(FieldInfo,DocValuesFieldUpdates.Iterator).mjava","sourceNew":"  @Override\n  void onDocValuesUpdate(FieldInfo info, DocValuesFieldUpdates.Iterator iterator) throws IOException {\n    if (this.field.equals(info.name)) {\n      pendingDeleteCount += applySoftDeletes(iterator, getMutableBits());\n      assert assertPendingDeletes();\n      assert dvGeneration < info.getDocValuesGen() : \"we have seen this generation update already: \" + dvGeneration + \" vs. \" + info.getDocValuesGen();\n      assert dvGeneration != -2 : \"docValues generation is still uninitialized\";\n      dvGeneration = info.getDocValuesGen();\n      this.info.setSoftDelCount(this.info.getSoftDelCount() + pendingDeleteCount);\n      super.dropChanges();\n    }\n  }\n\n","sourceOld":"  @Override\n  void onDocValuesUpdate(FieldInfo info, DocValuesFieldUpdates.Iterator iterator) throws IOException {\n    if (this.field.equals(info.name)) {\n      pendingDeleteCount += applySoftDeletes(iterator, getMutableBits());\n      assert pendingDeleteCount >= 0 : \" illegal pending delete count: \" + pendingDeleteCount;\n      assert dvGeneration < info.getDocValuesGen() : \"we have seen this generation update already: \" + dvGeneration + \" vs. \" + info.getDocValuesGen();\n      assert dvGeneration != -2 : \"docValues generation is still uninitialized\";\n      dvGeneration = info.getDocValuesGen();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"76fa08feb5824ec6249c5398bfc8578b93738cd8","date":1530756947,"type":3,"author":"Nhat Nguyen","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#onDocValuesUpdate(FieldInfo,DocValuesFieldUpdates.Iterator).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#onDocValuesUpdate(FieldInfo,DocValuesFieldUpdates.Iterator).mjava","sourceNew":"  @Override\n  void onDocValuesUpdate(FieldInfo info, DocValuesFieldUpdates.Iterator iterator) throws IOException {\n    if (this.field.equals(info.name)) {\n      pendingDeleteCount += applySoftDeletes(iterator, getMutableBits());\n      assert assertPendingDeletes();\n      this.info.setSoftDelCount(this.info.getSoftDelCount() + pendingDeleteCount);\n      super.dropChanges();\n    }\n    assert dvGeneration < info.getDocValuesGen() : \"we have seen this generation update already: \" + dvGeneration + \" vs. \" + info.getDocValuesGen();\n    assert dvGeneration != -2 : \"docValues generation is still uninitialized\";\n    dvGeneration = info.getDocValuesGen();\n  }\n\n","sourceOld":"  @Override\n  void onDocValuesUpdate(FieldInfo info, DocValuesFieldUpdates.Iterator iterator) throws IOException {\n    if (this.field.equals(info.name)) {\n      pendingDeleteCount += applySoftDeletes(iterator, getMutableBits());\n      assert assertPendingDeletes();\n      assert dvGeneration < info.getDocValuesGen() : \"we have seen this generation update already: \" + dvGeneration + \" vs. \" + info.getDocValuesGen();\n      assert dvGeneration != -2 : \"docValues generation is still uninitialized\";\n      dvGeneration = info.getDocValuesGen();\n      this.info.setSoftDelCount(this.info.getSoftDelCount() + pendingDeleteCount);\n      super.dropChanges();\n    }\n  }\n\n","bugFix":["f372764a5bd3ebacde5b99ee3303153eb5ec0d2f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#onDocValuesUpdate(FieldInfo,DocValuesFieldUpdates.Iterator).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#onDocValuesUpdate(FieldInfo,DocValuesFieldUpdates.Iterator).mjava","sourceNew":"  @Override\n  void onDocValuesUpdate(FieldInfo info, DocValuesFieldUpdates.Iterator iterator) throws IOException {\n    if (this.field.equals(info.name)) {\n      pendingDeleteCount += applySoftDeletes(iterator, getMutableBits());\n      assert assertPendingDeletes();\n      this.info.setSoftDelCount(this.info.getSoftDelCount() + pendingDeleteCount);\n      super.dropChanges();\n    }\n    assert dvGeneration < info.getDocValuesGen() : \"we have seen this generation update already: \" + dvGeneration + \" vs. \" + info.getDocValuesGen();\n    assert dvGeneration != -2 : \"docValues generation is still uninitialized\";\n    dvGeneration = info.getDocValuesGen();\n  }\n\n","sourceOld":"  @Override\n  void onDocValuesUpdate(FieldInfo info, DocValuesFieldUpdates.Iterator iterator) throws IOException {\n    if (this.field.equals(info.name)) {\n      pendingDeleteCount += applySoftDeletes(iterator, getMutableBits());\n      assert assertPendingDeletes();\n      assert dvGeneration < info.getDocValuesGen() : \"we have seen this generation update already: \" + dvGeneration + \" vs. \" + info.getDocValuesGen();\n      assert dvGeneration != -2 : \"docValues generation is still uninitialized\";\n      dvGeneration = info.getDocValuesGen();\n      this.info.setSoftDelCount(this.info.getSoftDelCount() + pendingDeleteCount);\n      super.dropChanges();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#onDocValuesUpdate(FieldInfo,DocValuesFieldUpdates.Iterator).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#onDocValuesUpdate(FieldInfo,DocValuesFieldUpdates.Iterator).mjava","sourceNew":"  @Override\n  void onDocValuesUpdate(FieldInfo info, DocValuesFieldUpdates.Iterator iterator) throws IOException {\n    if (this.field.equals(info.name)) {\n      pendingDeleteCount += applySoftDeletes(iterator, getMutableBits());\n      assert assertPendingDeletes();\n      this.info.setSoftDelCount(this.info.getSoftDelCount() + pendingDeleteCount);\n      super.dropChanges();\n    }\n    assert dvGeneration < info.getDocValuesGen() : \"we have seen this generation update already: \" + dvGeneration + \" vs. \" + info.getDocValuesGen();\n    assert dvGeneration != -2 : \"docValues generation is still uninitialized\";\n    dvGeneration = info.getDocValuesGen();\n  }\n\n","sourceOld":"  @Override\n  void onDocValuesUpdate(FieldInfo info, DocValuesFieldUpdates.Iterator iterator) throws IOException {\n    if (this.field.equals(info.name)) {\n      pendingDeleteCount += applySoftDeletes(iterator, getMutableBits());\n      assert assertPendingDeletes();\n      assert dvGeneration < info.getDocValuesGen() : \"we have seen this generation update already: \" + dvGeneration + \" vs. \" + info.getDocValuesGen();\n      assert dvGeneration != -2 : \"docValues generation is still uninitialized\";\n      dvGeneration = info.getDocValuesGen();\n      this.info.setSoftDelCount(this.info.getSoftDelCount() + pendingDeleteCount);\n      super.dropChanges();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["b70042a8a492f7054d480ccdd2be9796510d4327","76fa08feb5824ec6249c5398bfc8578b93738cd8"],"f372764a5bd3ebacde5b99ee3303153eb5ec0d2f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["aef2a94da918b657d107b616a643e1759db43b6a","8f2203cb8ae87188877cfbf6ad170c5738a0aad5"],"76fa08feb5824ec6249c5398bfc8578b93738cd8":["8f2203cb8ae87188877cfbf6ad170c5738a0aad5"],"8f2203cb8ae87188877cfbf6ad170c5738a0aad5":["aef2a94da918b657d107b616a643e1759db43b6a"],"aef2a94da918b657d107b616a643e1759db43b6a":["f372764a5bd3ebacde5b99ee3303153eb5ec0d2f"],"f592209545c71895260367152601e9200399776d":["aef2a94da918b657d107b616a643e1759db43b6a","8f2203cb8ae87188877cfbf6ad170c5738a0aad5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["76fa08feb5824ec6249c5398bfc8578b93738cd8"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["f592209545c71895260367152601e9200399776d","76fa08feb5824ec6249c5398bfc8578b93738cd8"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"f372764a5bd3ebacde5b99ee3303153eb5ec0d2f":["aef2a94da918b657d107b616a643e1759db43b6a"],"b70042a8a492f7054d480ccdd2be9796510d4327":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f372764a5bd3ebacde5b99ee3303153eb5ec0d2f"],"76fa08feb5824ec6249c5398bfc8578b93738cd8":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"8f2203cb8ae87188877cfbf6ad170c5738a0aad5":["b70042a8a492f7054d480ccdd2be9796510d4327","76fa08feb5824ec6249c5398bfc8578b93738cd8","f592209545c71895260367152601e9200399776d"],"aef2a94da918b657d107b616a643e1759db43b6a":["b70042a8a492f7054d480ccdd2be9796510d4327","8f2203cb8ae87188877cfbf6ad170c5738a0aad5","f592209545c71895260367152601e9200399776d"],"f592209545c71895260367152601e9200399776d":["7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}