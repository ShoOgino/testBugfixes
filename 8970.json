{"path":"lucene/test-framework/src/java/org/apache/lucene/search/BaseExplanationTestCase#beforeClassTestExplanations().mjava","commits":[{"id":"40ed2b673f6264a3f84e2f3925b529283f2eb096","date":1415102987,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/BaseExplanationTestCase#beforeClassTestExplanations().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestExplanations#beforeClassTestExplanations().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClassTestExplanations() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer= new RandomIndexWriter(random(), directory, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(KEY, \"\"+i, Field.Store.NO));\n      doc.add(new SortedDocValuesField(KEY, new BytesRef(\"\"+i)));\n      Field f = newTextField(FIELD, docFields[i], Field.Store.NO);\n      f.setBoost(i);\n      doc.add(f);\n      doc.add(newTextField(ALTFIELD, docFields[i], Field.Store.NO));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClassTestExplanations() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer= new RandomIndexWriter(random(), directory, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(KEY, \"\"+i, Field.Store.NO));\n      doc.add(new SortedDocValuesField(KEY, new BytesRef(\"\"+i)));\n      Field f = newTextField(FIELD, docFields[i], Field.Store.NO);\n      f.setBoost(i);\n      doc.add(f);\n      doc.add(newTextField(ALTFIELD, docFields[i], Field.Store.NO));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56958d7f71a28824f20031ffbb2e13502a0274e","date":1425573902,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/BaseExplanationTestCase#beforeClassTestExplanations().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/BaseExplanationTestCase#beforeClassTestExplanations().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClassTestExplanations() throws Exception {\n    directory = newDirectory();\n    analyzer = new MockAnalyzer(random());\n    RandomIndexWriter writer= new RandomIndexWriter(random(), directory, newIndexWriterConfig(analyzer).setMergePolicy(newLogMergePolicy()));\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(KEY, \"\"+i, Field.Store.NO));\n      doc.add(new SortedDocValuesField(KEY, new BytesRef(\"\"+i)));\n      Field f = newTextField(FIELD, docFields[i], Field.Store.NO);\n      f.setBoost(i);\n      doc.add(f);\n      doc.add(newTextField(ALTFIELD, docFields[i], Field.Store.NO));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClassTestExplanations() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer= new RandomIndexWriter(random(), directory, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(KEY, \"\"+i, Field.Store.NO));\n      doc.add(new SortedDocValuesField(KEY, new BytesRef(\"\"+i)));\n      Field f = newTextField(FIELD, docFields[i], Field.Store.NO);\n      f.setBoost(i);\n      doc.add(f);\n      doc.add(newTextField(ALTFIELD, docFields[i], Field.Store.NO));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":["7c82b0d4b7bf499a159eeff92add20bac6599cc1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/BaseExplanationTestCase#beforeClassTestExplanations().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/BaseExplanationTestCase#beforeClassTestExplanations().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClassTestExplanations() throws Exception {\n    directory = newDirectory();\n    analyzer = new MockAnalyzer(random());\n    RandomIndexWriter writer= new RandomIndexWriter(random(), directory, newIndexWriterConfig(analyzer).setMergePolicy(newLogMergePolicy()));\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(KEY, \"\"+i, Field.Store.NO));\n      doc.add(new SortedDocValuesField(KEY, new BytesRef(\"\"+i)));\n      Field f = newTextField(FIELD, docFields[i], Field.Store.NO);\n      f.setBoost(i);\n      doc.add(f);\n      doc.add(newTextField(ALTFIELD, docFields[i], Field.Store.NO));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClassTestExplanations() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer= new RandomIndexWriter(random(), directory, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(KEY, \"\"+i, Field.Store.NO));\n      doc.add(new SortedDocValuesField(KEY, new BytesRef(\"\"+i)));\n      Field f = newTextField(FIELD, docFields[i], Field.Store.NO);\n      f.setBoost(i);\n      doc.add(f);\n      doc.add(newTextField(ALTFIELD, docFields[i], Field.Store.NO));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c82b0d4b7bf499a159eeff92add20bac6599cc1","date":1465223716,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/BaseExplanationTestCase#beforeClassTestExplanations().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/BaseExplanationTestCase#beforeClassTestExplanations().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClassTestExplanations() throws Exception {\n    directory = newDirectory();\n    analyzer = new MockAnalyzer(random());\n    try (RandomIndexWriter writer = new RandomIndexWriter(random(), directory, newIndexWriterConfig(analyzer).setMergePolicy(newLogMergePolicy()))) {\n      for (int i = 0; i < docFields.length; i++) {\n        writer.addDocument(createDoc(i));\n      }\n      reader = writer.getReader();\n      searcher = newSearcher(reader);\n    }\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClassTestExplanations() throws Exception {\n    directory = newDirectory();\n    analyzer = new MockAnalyzer(random());\n    RandomIndexWriter writer= new RandomIndexWriter(random(), directory, newIndexWriterConfig(analyzer).setMergePolicy(newLogMergePolicy()));\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(KEY, \"\"+i, Field.Store.NO));\n      doc.add(new SortedDocValuesField(KEY, new BytesRef(\"\"+i)));\n      Field f = newTextField(FIELD, docFields[i], Field.Store.NO);\n      f.setBoost(i);\n      doc.add(f);\n      doc.add(newTextField(ALTFIELD, docFields[i], Field.Store.NO));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":["790e1fde4caa765b3faaad3fbcd25c6973450336","7a53ba34cf04e8d72c7d4c4bd297d32206a25c05","d0ef034a4f10871667ae75181537775ddcf8ade4","a56958d7f71a28824f20031ffbb2e13502a0274e","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","04f07771a2a7dd3a395700665ed839c3dae2def2","9f504eb84bde3aa0d1d67d3b08172306897f39a9","c084e47df29de3330311d69dabf515ceaa989512"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"191128ac5b85671b1671e2c857437694283b6ebf","date":1465297861,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/BaseExplanationTestCase#beforeClassTestExplanations().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/BaseExplanationTestCase#beforeClassTestExplanations().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClassTestExplanations() throws Exception {\n    directory = newDirectory();\n    analyzer = new MockAnalyzer(random());\n    try (RandomIndexWriter writer = new RandomIndexWriter(random(), directory, newIndexWriterConfig(analyzer).setMergePolicy(newLogMergePolicy()))) {\n      for (int i = 0; i < docFields.length; i++) {\n        writer.addDocument(createDoc(i));\n      }\n      reader = writer.getReader();\n      searcher = newSearcher(reader);\n    }\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClassTestExplanations() throws Exception {\n    directory = newDirectory();\n    analyzer = new MockAnalyzer(random());\n    RandomIndexWriter writer= new RandomIndexWriter(random(), directory, newIndexWriterConfig(analyzer).setMergePolicy(newLogMergePolicy()));\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(KEY, \"\"+i, Field.Store.NO));\n      doc.add(new SortedDocValuesField(KEY, new BytesRef(\"\"+i)));\n      Field f = newTextField(FIELD, docFields[i], Field.Store.NO);\n      f.setBoost(i);\n      doc.add(f);\n      doc.add(newTextField(ALTFIELD, docFields[i], Field.Store.NO));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/BaseExplanationTestCase#beforeClassTestExplanations().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/BaseExplanationTestCase#beforeClassTestExplanations().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClassTestExplanations() throws Exception {\n    directory = newDirectory();\n    analyzer = new MockAnalyzer(random());\n    try (RandomIndexWriter writer = new RandomIndexWriter(random(), directory, newIndexWriterConfig(analyzer).setMergePolicy(newLogMergePolicy()))) {\n      for (int i = 0; i < docFields.length; i++) {\n        writer.addDocument(createDoc(i));\n      }\n      reader = writer.getReader();\n      searcher = newSearcher(reader);\n    }\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClassTestExplanations() throws Exception {\n    directory = newDirectory();\n    analyzer = new MockAnalyzer(random());\n    RandomIndexWriter writer= new RandomIndexWriter(random(), directory, newIndexWriterConfig(analyzer).setMergePolicy(newLogMergePolicy()));\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(KEY, \"\"+i, Field.Store.NO));\n      doc.add(new SortedDocValuesField(KEY, new BytesRef(\"\"+i)));\n      Field f = newTextField(FIELD, docFields[i], Field.Store.NO);\n      f.setBoost(i);\n      doc.add(f);\n      doc.add(newTextField(ALTFIELD, docFields[i], Field.Store.NO));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["40ed2b673f6264a3f84e2f3925b529283f2eb096","a56958d7f71a28824f20031ffbb2e13502a0274e"],"7c82b0d4b7bf499a159eeff92add20bac6599cc1":["a56958d7f71a28824f20031ffbb2e13502a0274e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"40ed2b673f6264a3f84e2f3925b529283f2eb096":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"191128ac5b85671b1671e2c857437694283b6ebf":["a56958d7f71a28824f20031ffbb2e13502a0274e","7c82b0d4b7bf499a159eeff92add20bac6599cc1"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["40ed2b673f6264a3f84e2f3925b529283f2eb096"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a56958d7f71a28824f20031ffbb2e13502a0274e","191128ac5b85671b1671e2c857437694283b6ebf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["191128ac5b85671b1671e2c857437694283b6ebf"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"7c82b0d4b7bf499a159eeff92add20bac6599cc1":["191128ac5b85671b1671e2c857437694283b6ebf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["40ed2b673f6264a3f84e2f3925b529283f2eb096"],"40ed2b673f6264a3f84e2f3925b529283f2eb096":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a56958d7f71a28824f20031ffbb2e13502a0274e"],"191128ac5b85671b1671e2c857437694283b6ebf":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","7c82b0d4b7bf499a159eeff92add20bac6599cc1","191128ac5b85671b1671e2c857437694283b6ebf","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}