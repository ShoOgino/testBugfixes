{"path":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfoFormat#getSegmentInfoWriter().mjava","commits":[{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfoFormat#getSegmentInfoWriter().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfoFormat#getSegmentInfoWriter().mjava","sourceNew":"  // we must unfortunately support write, to allow addIndexes to write a new .si with rewritten filenames:\n  // see LUCENE-5377\n  @Override\n  public SegmentInfoWriter getSegmentInfoWriter() {\n    return writer;\n  }\n\n","sourceOld":"  // we must unfortunately support write, to allow addIndexes to write a new .si with rewritten filenames:\n  // see LUCENE-5377\n  @Override\n  public SegmentInfoWriter getSegmentInfoWriter() {\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfoFormat#getSegmentInfoWriter().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfoFormat#getSegmentInfoWriter().mjava","sourceNew":"  // we must unfortunately support write, to allow addIndexes to write a new .si with rewritten filenames:\n  // see LUCENE-5377\n  @Override\n  public SegmentInfoWriter getSegmentInfoWriter() {\n    return writer;\n  }\n\n","sourceOld":"  // we must unfortunately support write, to allow addIndexes to write a new .si with rewritten filenames:\n  // see LUCENE-5377\n  @Override\n  public SegmentInfoWriter getSegmentInfoWriter() {\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77d177b70aefca41f3edc910b0a703c76283d8b6","date":1411650976,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfoFormat#getSegmentInfoWriter().mjava","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfoFormat#getSegmentInfoWriter().mjava","sourceNew":"  @Override\n  public SegmentInfoWriter getSegmentInfoWriter() {\n    throw new UnsupportedOperationException(\"this codec can only be used for reading\");\n  }\n\n","sourceOld":"  // we must unfortunately support write, to allow addIndexes to write a new .si with rewritten filenames:\n  // see LUCENE-5377\n  @Override\n  public SegmentInfoWriter getSegmentInfoWriter() {\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5f6bd27530a2846413fe2d00030493c0e2d3a072","date":1411811855,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfoFormat#getSegmentInfoWriter().mjava","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfoFormat#getSegmentInfoWriter().mjava","sourceNew":"  @Override\n  public SegmentInfoWriter getSegmentInfoWriter() {\n    throw new UnsupportedOperationException(\"this codec can only be used for reading\");\n  }\n\n","sourceOld":"  // we must unfortunately support write, to allow addIndexes to write a new .si with rewritten filenames:\n  // see LUCENE-5377\n  @Override\n  public SegmentInfoWriter getSegmentInfoWriter() {\n    return writer;\n  }\n\n","bugFix":["624d2da1aed2d2415a83f3c573de0341c4001d90"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e2fe60a17a7a0cfd101b1169acf089221bc6c166","date":1412767493,"type":6,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40FieldInfosFormat#write(Directory,SegmentInfo,String,FieldInfos,IOContext).mjava","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfoFormat#getSegmentInfoWriter().mjava","sourceNew":"  @Override\n  public void write(Directory directory, SegmentInfo segmentInfo, String segmentSuffix, FieldInfos infos, IOContext context) throws IOException {\n    throw new UnsupportedOperationException(\"this codec can only be used for reading\");\n  }\n\n","sourceOld":"  @Override\n  public SegmentInfoWriter getSegmentInfoWriter() {\n    throw new UnsupportedOperationException(\"this codec can only be used for reading\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e2fe60a17a7a0cfd101b1169acf089221bc6c166","date":1412767493,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfoFormat#write(Directory,SegmentInfo,IOContext).mjava","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfoFormat#getSegmentInfoWriter().mjava","sourceNew":"  @Override\n  public void write(Directory dir, SegmentInfo info, IOContext ioContext) throws IOException {\n    throw new UnsupportedOperationException(\"this codec can only be used for reading\");\n  }\n\n","sourceOld":"  @Override\n  public SegmentInfoWriter getSegmentInfoWriter() {\n    throw new UnsupportedOperationException(\"this codec can only be used for reading\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e2fe60a17a7a0cfd101b1169acf089221bc6c166","date":1412767493,"type":6,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene42/Lucene42FieldInfosFormat#write(Directory,SegmentInfo,String,FieldInfos,IOContext).mjava","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfoFormat#getSegmentInfoWriter().mjava","sourceNew":"  @Override\n  public void write(Directory directory, SegmentInfo segmentInfo, String segmentSuffix, FieldInfos infos, IOContext context) throws IOException {\n    throw new UnsupportedOperationException(\"this codec can only be used for reading\");\n  }\n\n","sourceOld":"  @Override\n  public SegmentInfoWriter getSegmentInfoWriter() {\n    throw new UnsupportedOperationException(\"this codec can only be used for reading\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e2fe60a17a7a0cfd101b1169acf089221bc6c166","date":1412767493,"type":6,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene46/Lucene46SegmentInfoFormat#write(Directory,SegmentInfo,IOContext).mjava","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfoFormat#getSegmentInfoWriter().mjava","sourceNew":"  @Override\n  public void write(Directory dir, SegmentInfo info, IOContext ioContext) throws IOException {\n    throw new UnsupportedOperationException(\"this codec can only be used for reading\");\n  }\n\n","sourceOld":"  @Override\n  public SegmentInfoWriter getSegmentInfoWriter() {\n    throw new UnsupportedOperationException(\"this codec can only be used for reading\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55980207f1977bd1463465de1659b821347e2fa8","date":1413336386,"type":6,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40FieldInfosFormat#write(Directory,SegmentInfo,String,FieldInfos,IOContext).mjava","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfoFormat#getSegmentInfoWriter().mjava","sourceNew":"  @Override\n  public void write(Directory directory, SegmentInfo segmentInfo, String segmentSuffix, FieldInfos infos, IOContext context) throws IOException {\n    throw new UnsupportedOperationException(\"this codec can only be used for reading\");\n  }\n\n","sourceOld":"  @Override\n  public SegmentInfoWriter getSegmentInfoWriter() {\n    throw new UnsupportedOperationException(\"this codec can only be used for reading\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55980207f1977bd1463465de1659b821347e2fa8","date":1413336386,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfoFormat#write(Directory,SegmentInfo,IOContext).mjava","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfoFormat#getSegmentInfoWriter().mjava","sourceNew":"  @Override\n  public void write(Directory dir, SegmentInfo info, IOContext ioContext) throws IOException {\n    throw new UnsupportedOperationException(\"this codec can only be used for reading\");\n  }\n\n","sourceOld":"  @Override\n  public SegmentInfoWriter getSegmentInfoWriter() {\n    throw new UnsupportedOperationException(\"this codec can only be used for reading\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55980207f1977bd1463465de1659b821347e2fa8","date":1413336386,"type":6,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene42/Lucene42FieldInfosFormat#write(Directory,SegmentInfo,String,FieldInfos,IOContext).mjava","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfoFormat#getSegmentInfoWriter().mjava","sourceNew":"  @Override\n  public void write(Directory directory, SegmentInfo segmentInfo, String segmentSuffix, FieldInfos infos, IOContext context) throws IOException {\n    throw new UnsupportedOperationException(\"this codec can only be used for reading\");\n  }\n\n","sourceOld":"  @Override\n  public SegmentInfoWriter getSegmentInfoWriter() {\n    throw new UnsupportedOperationException(\"this codec can only be used for reading\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55980207f1977bd1463465de1659b821347e2fa8","date":1413336386,"type":6,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene46/Lucene46SegmentInfoFormat#write(Directory,SegmentInfo,IOContext).mjava","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfoFormat#getSegmentInfoWriter().mjava","sourceNew":"  @Override\n  public void write(Directory dir, SegmentInfo info, IOContext ioContext) throws IOException {\n    throw new UnsupportedOperationException(\"this codec can only be used for reading\");\n  }\n\n","sourceOld":"  @Override\n  public SegmentInfoWriter getSegmentInfoWriter() {\n    throw new UnsupportedOperationException(\"this codec can only be used for reading\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e2fe60a17a7a0cfd101b1169acf089221bc6c166":["5f6bd27530a2846413fe2d00030493c0e2d3a072"],"55980207f1977bd1463465de1659b821347e2fa8":["77d177b70aefca41f3edc910b0a703c76283d8b6","e2fe60a17a7a0cfd101b1169acf089221bc6c166"],"77d177b70aefca41f3edc910b0a703c76283d8b6":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5f6bd27530a2846413fe2d00030493c0e2d3a072":["402ad3ddc9da7b70da1b167667a60ece6a1381fb","77d177b70aefca41f3edc910b0a703c76283d8b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e2fe60a17a7a0cfd101b1169acf089221bc6c166"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"e2fe60a17a7a0cfd101b1169acf089221bc6c166":["55980207f1977bd1463465de1659b821347e2fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"55980207f1977bd1463465de1659b821347e2fa8":[],"77d177b70aefca41f3edc910b0a703c76283d8b6":["55980207f1977bd1463465de1659b821347e2fa8","5f6bd27530a2846413fe2d00030493c0e2d3a072"],"5f6bd27530a2846413fe2d00030493c0e2d3a072":["e2fe60a17a7a0cfd101b1169acf089221bc6c166"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["77d177b70aefca41f3edc910b0a703c76283d8b6","5f6bd27530a2846413fe2d00030493c0e2d3a072"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["55980207f1977bd1463465de1659b821347e2fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}