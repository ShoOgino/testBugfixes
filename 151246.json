{"path":"backwards/src/java/org/apache/lucene/index/IndexDeletionPolicy#onInit(List[#-extends-IndexCommit]).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/index/IndexDeletionPolicy#onInit(List[#-extends-IndexCommit]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * <p>This is called once when a writer is first\n   * instantiated to give the policy a chance to remove old\n   * commit points.</p>\n   * \n   * <p>The writer locates all index commits present in the \n   * index directory and calls this method.  The policy may \n   * choose to delete some of the commit points, doing so by\n   * calling method {@link IndexCommit#delete delete()} \n   * of {@link IndexCommit}.</p>\n   * \n   * <p><u>Note:</u> the last CommitPoint is the most recent one,\n   * i.e. the \"front index state\". Be careful not to delete it,\n   * unless you know for sure what you are doing, and unless \n   * you can afford to lose the index content while doing that. \n   *\n   * @param commits List of current \n   * {@link IndexCommit point-in-time commits},\n   *  sorted by age (the 0th one is the oldest commit).\n   */\n  public void onInit(List<? extends IndexCommit> commits) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/index/IndexDeletionPolicy#onInit(List[#-extends-IndexCommit]).mjava","pathOld":"backwards/src/java/org/apache/lucene/index/IndexDeletionPolicy#onInit(List[#-extends-IndexCommit]).mjava","sourceNew":"  /**\n   * <p>This is called once when a writer is first\n   * instantiated to give the policy a chance to remove old\n   * commit points.</p>\n   * \n   * <p>The writer locates all index commits present in the \n   * index directory and calls this method.  The policy may \n   * choose to delete some of the commit points, doing so by\n   * calling method {@link IndexCommit#delete delete()} \n   * of {@link IndexCommit}.</p>\n   * \n   * <p><u>Note:</u> the last CommitPoint is the most recent one,\n   * i.e. the \"front index state\". Be careful not to delete it,\n   * unless you know for sure what you are doing, and unless \n   * you can afford to lose the index content while doing that. \n   *\n   * @param commits List of current \n   * {@link IndexCommit point-in-time commits},\n   *  sorted by age (the 0th one is the oldest commit).\n   */\n  public void onInit(List<? extends IndexCommit> commits) throws IOException;\n\n","sourceOld":"  /**\n   * <p>This is called once when a writer is first\n   * instantiated to give the policy a chance to remove old\n   * commit points.</p>\n   * \n   * <p>The writer locates all index commits present in the \n   * index directory and calls this method.  The policy may \n   * choose to delete some of the commit points, doing so by\n   * calling method {@link IndexCommit#delete delete()} \n   * of {@link IndexCommit}.</p>\n   * \n   * <p><u>Note:</u> the last CommitPoint is the most recent one,\n   * i.e. the \"front index state\". Be careful not to delete it,\n   * unless you know for sure what you are doing, and unless \n   * you can afford to lose the index content while doing that. \n   *\n   * @param commits List of current \n   * {@link IndexCommit point-in-time commits},\n   *  sorted by age (the 0th one is the oldest commit).\n   */\n  public void onInit(List<? extends IndexCommit> commits) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}