{"path":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCacheImpl#getDocsWithField(LeafReader,String).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCacheImpl#getDocsWithField(LeafReader,String).mjava","pathOld":"/dev/null","sourceNew":"  public Bits getDocsWithField(LeafReader reader, String field) throws IOException {\n    final FieldInfo fieldInfo = reader.getFieldInfos().fieldInfo(field);\n    if (fieldInfo == null) {\n      // field does not exist or has no value\n      return new Bits.MatchNoBits(reader.maxDoc());\n    } else if (fieldInfo.hasDocValues()) {\n      return reader.getDocsWithField(field);\n    } else if (!fieldInfo.isIndexed()) {\n      return new Bits.MatchNoBits(reader.maxDoc());\n    }\n    BitsEntry bitsEntry = (BitsEntry) caches.get(DocsWithFieldCache.class).get(reader, new CacheKey(field, null), false);\n    return bitsEntry.bits;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"556a4aab886d75371b2af129d87be3c2795cea76","date":1414954991,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCacheImpl#getDocsWithField(LeafReader,String).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCacheImpl#getDocsWithField(LeafReader,String).mjava","sourceNew":"  public Bits getDocsWithField(LeafReader reader, String field) throws IOException {\n    final FieldInfo fieldInfo = reader.getFieldInfos().fieldInfo(field);\n    if (fieldInfo == null) {\n      // field does not exist or has no value\n      return new Bits.MatchNoBits(reader.maxDoc());\n    } else if (fieldInfo.getDocValuesType() != DocValuesType.NONE) {\n      return reader.getDocsWithField(field);\n    } else if (fieldInfo.getIndexOptions() == IndexOptions.NONE) {\n      return new Bits.MatchNoBits(reader.maxDoc());\n    }\n    BitsEntry bitsEntry = (BitsEntry) caches.get(DocsWithFieldCache.class).get(reader, new CacheKey(field, null), false);\n    return bitsEntry.bits;\n  }\n\n","sourceOld":"  public Bits getDocsWithField(LeafReader reader, String field) throws IOException {\n    final FieldInfo fieldInfo = reader.getFieldInfos().fieldInfo(field);\n    if (fieldInfo == null) {\n      // field does not exist or has no value\n      return new Bits.MatchNoBits(reader.maxDoc());\n    } else if (fieldInfo.hasDocValues()) {\n      return reader.getDocsWithField(field);\n    } else if (!fieldInfo.isIndexed()) {\n      return new Bits.MatchNoBits(reader.maxDoc());\n    }\n    BitsEntry bitsEntry = (BitsEntry) caches.get(DocsWithFieldCache.class).get(reader, new CacheKey(field, null), false);\n    return bitsEntry.bits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8c146731a64debc22c115bbf11ee1a060aa7ea02","date":1457616596,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCacheImpl#getDocsWithField(LeafReader,String,Parser).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCacheImpl#getDocsWithField(LeafReader,String).mjava","sourceNew":"  public Bits getDocsWithField(LeafReader reader, String field, Parser parser) throws IOException {\n    final FieldInfo fieldInfo = reader.getFieldInfos().fieldInfo(field);\n    if (fieldInfo == null) {\n      // field does not exist or has no value\n      return new Bits.MatchNoBits(reader.maxDoc());\n    } else if (fieldInfo.getDocValuesType() != DocValuesType.NONE) {\n      return reader.getDocsWithField(field);\n    } \n    \n    if (parser instanceof PointParser) {\n      // points case\n      \n    } else {\n      // postings case\n      if (fieldInfo.getIndexOptions() == IndexOptions.NONE) {\n        return new Bits.MatchNoBits(reader.maxDoc());\n      }\n    }\n    BitsEntry bitsEntry = (BitsEntry) caches.get(DocsWithFieldCache.class).get(reader, new CacheKey(field, parser), false);\n    return bitsEntry.bits;\n  }\n\n","sourceOld":"  public Bits getDocsWithField(LeafReader reader, String field) throws IOException {\n    final FieldInfo fieldInfo = reader.getFieldInfos().fieldInfo(field);\n    if (fieldInfo == null) {\n      // field does not exist or has no value\n      return new Bits.MatchNoBits(reader.maxDoc());\n    } else if (fieldInfo.getDocValuesType() != DocValuesType.NONE) {\n      return reader.getDocsWithField(field);\n    } else if (fieldInfo.getIndexOptions() == IndexOptions.NONE) {\n      return new Bits.MatchNoBits(reader.maxDoc());\n    }\n    BitsEntry bitsEntry = (BitsEntry) caches.get(DocsWithFieldCache.class).get(reader, new CacheKey(field, null), false);\n    return bitsEntry.bits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"556a4aab886d75371b2af129d87be3c2795cea76":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"8c146731a64debc22c115bbf11ee1a060aa7ea02":["556a4aab886d75371b2af129d87be3c2795cea76"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8c146731a64debc22c115bbf11ee1a060aa7ea02"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"556a4aab886d75371b2af129d87be3c2795cea76":["8c146731a64debc22c115bbf11ee1a060aa7ea02"],"8c146731a64debc22c115bbf11ee1a060aa7ea02":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["556a4aab886d75371b2af129d87be3c2795cea76"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}