{"path":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","commits":[{"id":"c013889a237f29c0b690ee86faa24c165860f3f8","date":1211577805,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Return a phrase Highlighter appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text CachingTokenStream\n   * @throws IOException \n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, CachingTokenFilter tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = null;\n    \n    highlighter = new Highlighter(getFormatter(fieldName, params), getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n    highlighter.setMaxDocBytesToAnalyze(params.getFieldInt(\n        fieldName, HighlightParams.MAX_CHARS, \n        Highlighter.DEFAULT_MAX_DOC_BYTES_TO_ANALYZE));\n\n    return highlighter;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["82fff9df8ebf1830fe880d4d1cbed04e81684a4d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"82fff9df8ebf1830fe880d4d1cbed04e81684a4d","date":1215474756,"type":3,"author":"Mike Klaas","isMerge":false,"pathNew":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","pathOld":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","sourceNew":"  /**\n   * Return a phrase Highlighter appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text CachingTokenStream\n   * @throws IOException \n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, CachingTokenFilter tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = null;\n    \n    highlighter = new Highlighter(getFormatter(fieldName, params), getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n\n    return highlighter;\n  }\n\n","sourceOld":"  /**\n   * Return a phrase Highlighter appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text CachingTokenStream\n   * @throws IOException \n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, CachingTokenFilter tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = null;\n    \n    highlighter = new Highlighter(getFormatter(fieldName, params), getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n    highlighter.setMaxDocBytesToAnalyze(params.getFieldInt(\n        fieldName, HighlightParams.MAX_CHARS, \n        Highlighter.DEFAULT_MAX_DOC_BYTES_TO_ANALYZE));\n\n    return highlighter;\n  }\n\n","bugFix":["c013889a237f29c0b690ee86faa24c165860f3f8"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","pathOld":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","sourceNew":"  /**\n   * Return a phrase Highlighter appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text CachingTokenStream\n   * @throws IOException \n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, CachingTokenFilter tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = null;\n    \n    highlighter = new Highlighter(getFormatter(fieldName, params), getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n\n    return highlighter;\n  }\n\n","sourceOld":"  /**\n   * Return a phrase Highlighter appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text CachingTokenStream\n   * @throws IOException \n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, CachingTokenFilter tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = null;\n    \n    highlighter = new Highlighter(getFormatter(fieldName, params), getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n\n    return highlighter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"82fff9df8ebf1830fe880d4d1cbed04e81684a4d":["c013889a237f29c0b690ee86faa24c165860f3f8"],"c013889a237f29c0b690ee86faa24c165860f3f8":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["82fff9df8ebf1830fe880d4d1cbed04e81684a4d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"82fff9df8ebf1830fe880d4d1cbed04e81684a4d":["ad94625fb8d088209f46650c8097196fec67f00c"],"c013889a237f29c0b690ee86faa24c165860f3f8":["82fff9df8ebf1830fe880d4d1cbed04e81684a4d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["c013889a237f29c0b690ee86faa24c165860f3f8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}