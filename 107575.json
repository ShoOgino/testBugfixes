{"path":"solr/core/src/test/org/apache/solr/cloud/autoscaling/ScheduledMaintenanceTriggerTest#initTest().mjava","commits":[{"id":"aaf4dd391a41abe663365ff31c6a1ee26462f933","date":1537446450,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/ScheduledMaintenanceTriggerTest#initTest().mjava","pathOld":"/dev/null","sourceNew":"  @Before\n  public void initTest() {\n    triggerFired = new CountDownLatch(1);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7fb1186f5b61e0b74289e6786df8cbecfa471bc","date":1545308188,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/ScheduledMaintenanceTriggerTest#initTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/ScheduledMaintenanceTriggerTest#initTest().mjava","sourceNew":"  @Before\n  public void initTest() throws Exception {\n    // disable .scheduled_maintenance\n    String suspendTriggerCommand = \"{\" +\n        \"'suspend-trigger' : {'name' : '.scheduled_maintenance'}\" +\n        \"}\";\n    SolrRequest req = createAutoScalingRequest(SolrRequest.METHOD.POST, suspendTriggerCommand);\n    NamedList<Object> response = solrClient.request(req);\n    assertEquals(response.get(\"result\").toString(), \"success\");\n    String setPropertiesCommand = \"{\" +\n        \"'set-properties' : {\" +\n        \"'\" + AutoScalingParams.TRIGGER_COOLDOWN_PERIOD_SECONDS + \"': 1\" +\n        \"}\" +\n        \"}\";\n    response = solrClient.request(createAutoScalingRequest(SolrRequest.METHOD.POST, setPropertiesCommand));\n    assertEquals(response.get(\"result\").toString(), \"success\");\n    triggerFired = new CountDownLatch(1);\n  }\n\n","sourceOld":"  @Before\n  public void initTest() {\n    triggerFired = new CountDownLatch(1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6806342c1a54fb5cdcbb43c8a066994ce3f4a8e1","date":1545317399,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/ScheduledMaintenanceTriggerTest#initTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/ScheduledMaintenanceTriggerTest#initTest().mjava","sourceNew":"  @Before\n  public void initTest() throws Exception {\n    // disable .scheduled_maintenance\n    String suspendTriggerCommand = \"{\" +\n        \"'suspend-trigger' : {'name' : '.scheduled_maintenance'}\" +\n        \"}\";\n    SolrRequest req = AutoScalingRequest.create(SolrRequest.METHOD.POST, suspendTriggerCommand);\n    NamedList<Object> response = solrClient.request(req);\n    assertEquals(response.get(\"result\").toString(), \"success\");\n    String setPropertiesCommand = \"{\" +\n        \"'set-properties' : {\" +\n        \"'\" + AutoScalingParams.TRIGGER_COOLDOWN_PERIOD_SECONDS + \"': 1\" +\n        \"}\" +\n        \"}\";\n    response = solrClient.request(AutoScalingRequest.create(SolrRequest.METHOD.POST, setPropertiesCommand));\n    assertEquals(response.get(\"result\").toString(), \"success\");\n    triggerFired = new CountDownLatch(1);\n  }\n\n","sourceOld":"  @Before\n  public void initTest() throws Exception {\n    // disable .scheduled_maintenance\n    String suspendTriggerCommand = \"{\" +\n        \"'suspend-trigger' : {'name' : '.scheduled_maintenance'}\" +\n        \"}\";\n    SolrRequest req = createAutoScalingRequest(SolrRequest.METHOD.POST, suspendTriggerCommand);\n    NamedList<Object> response = solrClient.request(req);\n    assertEquals(response.get(\"result\").toString(), \"success\");\n    String setPropertiesCommand = \"{\" +\n        \"'set-properties' : {\" +\n        \"'\" + AutoScalingParams.TRIGGER_COOLDOWN_PERIOD_SECONDS + \"': 1\" +\n        \"}\" +\n        \"}\";\n    response = solrClient.request(createAutoScalingRequest(SolrRequest.METHOD.POST, setPropertiesCommand));\n    assertEquals(response.get(\"result\").toString(), \"success\");\n    triggerFired = new CountDownLatch(1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa2585c33d5d66a1c837c312221eb55ddb3c4300","date":1592493170,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/ScheduledMaintenanceTriggerTest#initTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/ScheduledMaintenanceTriggerTest#initTest().mjava","sourceNew":"  @Before\n  public void initTest() throws Exception {\n    // disable .scheduled_maintenance\n    String suspendTriggerCommand = \"{\" +\n        \"'suspend-trigger' : {'name' : '.scheduled_maintenance'}\" +\n        \"}\";\n    @SuppressWarnings({\"rawtypes\"})\n    SolrRequest req = AutoScalingRequest.create(SolrRequest.METHOD.POST, suspendTriggerCommand);\n    NamedList<Object> response = solrClient.request(req);\n    assertEquals(response.get(\"result\").toString(), \"success\");\n    String setPropertiesCommand = \"{\" +\n        \"'set-properties' : {\" +\n        \"'\" + AutoScalingParams.TRIGGER_COOLDOWN_PERIOD_SECONDS + \"': 1\" +\n        \"}\" +\n        \"}\";\n    response = solrClient.request(AutoScalingRequest.create(SolrRequest.METHOD.POST, setPropertiesCommand));\n    assertEquals(response.get(\"result\").toString(), \"success\");\n    triggerFired = new CountDownLatch(1);\n  }\n\n","sourceOld":"  @Before\n  public void initTest() throws Exception {\n    // disable .scheduled_maintenance\n    String suspendTriggerCommand = \"{\" +\n        \"'suspend-trigger' : {'name' : '.scheduled_maintenance'}\" +\n        \"}\";\n    SolrRequest req = AutoScalingRequest.create(SolrRequest.METHOD.POST, suspendTriggerCommand);\n    NamedList<Object> response = solrClient.request(req);\n    assertEquals(response.get(\"result\").toString(), \"success\");\n    String setPropertiesCommand = \"{\" +\n        \"'set-properties' : {\" +\n        \"'\" + AutoScalingParams.TRIGGER_COOLDOWN_PERIOD_SECONDS + \"': 1\" +\n        \"}\" +\n        \"}\";\n    response = solrClient.request(AutoScalingRequest.create(SolrRequest.METHOD.POST, setPropertiesCommand));\n    assertEquals(response.get(\"result\").toString(), \"success\");\n    triggerFired = new CountDownLatch(1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/ScheduledMaintenanceTriggerTest#initTest().mjava","sourceNew":null,"sourceOld":"  @Before\n  public void initTest() throws Exception {\n    // disable .scheduled_maintenance\n    String suspendTriggerCommand = \"{\" +\n        \"'suspend-trigger' : {'name' : '.scheduled_maintenance'}\" +\n        \"}\";\n    @SuppressWarnings({\"rawtypes\"})\n    SolrRequest req = AutoScalingRequest.create(SolrRequest.METHOD.POST, suspendTriggerCommand);\n    NamedList<Object> response = solrClient.request(req);\n    assertEquals(response.get(\"result\").toString(), \"success\");\n    String setPropertiesCommand = \"{\" +\n        \"'set-properties' : {\" +\n        \"'\" + AutoScalingParams.TRIGGER_COOLDOWN_PERIOD_SECONDS + \"': 1\" +\n        \"}\" +\n        \"}\";\n    response = solrClient.request(AutoScalingRequest.create(SolrRequest.METHOD.POST, setPropertiesCommand));\n    assertEquals(response.get(\"result\").toString(), \"success\");\n    triggerFired = new CountDownLatch(1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f7fb1186f5b61e0b74289e6786df8cbecfa471bc":["aaf4dd391a41abe663365ff31c6a1ee26462f933"],"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["6806342c1a54fb5cdcbb43c8a066994ce3f4a8e1"],"3f504512a03d978990cbff30db0522b354e846db":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"aaf4dd391a41abe663365ff31c6a1ee26462f933":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6806342c1a54fb5cdcbb43c8a066994ce3f4a8e1":["f7fb1186f5b61e0b74289e6786df8cbecfa471bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"f7fb1186f5b61e0b74289e6786df8cbecfa471bc":["6806342c1a54fb5cdcbb43c8a066994ce3f4a8e1"],"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["3f504512a03d978990cbff30db0522b354e846db"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aaf4dd391a41abe663365ff31c6a1ee26462f933"],"aaf4dd391a41abe663365ff31c6a1ee26462f933":["f7fb1186f5b61e0b74289e6786df8cbecfa471bc"],"6806342c1a54fb5cdcbb43c8a066994ce3f4a8e1":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}