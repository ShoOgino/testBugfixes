{"path":"solr/core/src/test/org/apache/solr/update/TestHdfsUpdateLog#testFSThreadSafety().mjava","commits":[{"id":"70505a4870244b22d4d0f1a98951b08b197d5bb0","date":1424906348,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/TestHdfsUpdateLog#testFSThreadSafety().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testFSThreadSafety() throws Exception {\n\n    final SolrQueryRequest req = req();\n    final UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    ((DirectUpdateHandler2) uhandler).getCommitTracker().setTimeUpperBound(100);\n    ((DirectUpdateHandler2) uhandler).getCommitTracker().setOpenSearcher(false);\n    final UpdateLog ulog = uhandler.getUpdateLog();\n    \n    clearIndex();\n    assertU(commit());\n    \n    // we hammer on init in a background thread to make\n    // sure we don't run into any filesystem already closed\n    // problems (SOLR-7113)\n    \n    Thread thread = new Thread() {\n      public void run() {\n        int cnt = 0;\n        while (true) {\n          ulog.init(uhandler, req.getCore());\n          try {\n            Thread.sleep(100);\n          } catch (InterruptedException e) {\n\n          }\n          if (cnt++ > 50) {\n            break;\n          }\n        }\n      }\n    };\n    \n    Thread thread2 = new Thread() {\n      public void run() {\n        int cnt = 0;\n        while (true) {\n          assertU(adoc(\"id\", Integer.toString(cnt)));\n          try {\n            Thread.sleep(10);\n          } catch (InterruptedException e) {\n\n          }\n          if (cnt++ > 500) {\n            break;\n          }\n        }\n      }\n    };\n    \n\n\n    thread.start();\n    thread2.start();\n    thread.join();\n    thread2.join();\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/TestHdfsUpdateLog#testFSThreadSafety().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testFSThreadSafety() throws Exception {\n\n    final SolrQueryRequest req = req();\n    final UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    ((DirectUpdateHandler2) uhandler).getCommitTracker().setTimeUpperBound(100);\n    ((DirectUpdateHandler2) uhandler).getCommitTracker().setOpenSearcher(false);\n    final UpdateLog ulog = uhandler.getUpdateLog();\n    \n    clearIndex();\n    assertU(commit());\n    \n    // we hammer on init in a background thread to make\n    // sure we don't run into any filesystem already closed\n    // problems (SOLR-7113)\n    \n    Thread thread = new Thread() {\n      public void run() {\n        int cnt = 0;\n        while (true) {\n          ulog.init(uhandler, req.getCore());\n          try {\n            Thread.sleep(100);\n          } catch (InterruptedException e) {\n\n          }\n          if (cnt++ > 50) {\n            break;\n          }\n        }\n      }\n    };\n    \n    Thread thread2 = new Thread() {\n      public void run() {\n        int cnt = 0;\n        while (true) {\n          assertU(adoc(\"id\", Integer.toString(cnt)));\n          try {\n            Thread.sleep(10);\n          } catch (InterruptedException e) {\n\n          }\n          if (cnt++ > 500) {\n            break;\n          }\n        }\n      }\n    };\n    \n\n\n    thread.start();\n    thread2.start();\n    thread.join();\n    thread2.join();\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43ad790248d7f7daee5d9cced548c546f37c7218","date":1527269998,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/TestHdfsUpdateLog#testFSThreadSafety().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/TestHdfsUpdateLog#testFSThreadSafety().mjava","sourceNew":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 21-May-2018\n  public void testFSThreadSafety() throws Exception {\n\n    final SolrQueryRequest req = req();\n    final UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    ((DirectUpdateHandler2) uhandler).getCommitTracker().setTimeUpperBound(100);\n    ((DirectUpdateHandler2) uhandler).getCommitTracker().setOpenSearcher(false);\n    final UpdateLog ulog = uhandler.getUpdateLog();\n    \n    clearIndex();\n    assertU(commit());\n    \n    // we hammer on init in a background thread to make\n    // sure we don't run into any filesystem already closed\n    // problems (SOLR-7113)\n    \n    Thread thread = new Thread() {\n      public void run() {\n        int cnt = 0;\n        while (true) {\n          ulog.init(uhandler, req.getCore());\n          try {\n            Thread.sleep(100);\n          } catch (InterruptedException e) {\n\n          }\n          if (cnt++ > 50) {\n            break;\n          }\n        }\n      }\n    };\n    \n    Thread thread2 = new Thread() {\n      public void run() {\n        int cnt = 0;\n        while (true) {\n          assertU(adoc(\"id\", Integer.toString(cnt)));\n          try {\n            Thread.sleep(10);\n          } catch (InterruptedException e) {\n\n          }\n          if (cnt++ > 500) {\n            break;\n          }\n        }\n      }\n    };\n    \n\n\n    thread.start();\n    thread2.start();\n    thread.join();\n    thread2.join();\n    \n  }\n\n","sourceOld":"  @Test\n  public void testFSThreadSafety() throws Exception {\n\n    final SolrQueryRequest req = req();\n    final UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    ((DirectUpdateHandler2) uhandler).getCommitTracker().setTimeUpperBound(100);\n    ((DirectUpdateHandler2) uhandler).getCommitTracker().setOpenSearcher(false);\n    final UpdateLog ulog = uhandler.getUpdateLog();\n    \n    clearIndex();\n    assertU(commit());\n    \n    // we hammer on init in a background thread to make\n    // sure we don't run into any filesystem already closed\n    // problems (SOLR-7113)\n    \n    Thread thread = new Thread() {\n      public void run() {\n        int cnt = 0;\n        while (true) {\n          ulog.init(uhandler, req.getCore());\n          try {\n            Thread.sleep(100);\n          } catch (InterruptedException e) {\n\n          }\n          if (cnt++ > 50) {\n            break;\n          }\n        }\n      }\n    };\n    \n    Thread thread2 = new Thread() {\n      public void run() {\n        int cnt = 0;\n        while (true) {\n          assertU(adoc(\"id\", Integer.toString(cnt)));\n          try {\n            Thread.sleep(10);\n          } catch (InterruptedException e) {\n\n          }\n          if (cnt++ > 500) {\n            break;\n          }\n        }\n      }\n    };\n    \n\n\n    thread.start();\n    thread2.start();\n    thread.join();\n    thread2.join();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11d6f92dfa9251d9da6d80ec5963a9cbecc90180","date":1530559969,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/TestHdfsUpdateLog#testFSThreadSafety().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/TestHdfsUpdateLog#testFSThreadSafety().mjava","sourceNew":"  @Test\n  //28-June-2018  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 21-May-2018\n  public void testFSThreadSafety() throws Exception {\n\n    final SolrQueryRequest req = req();\n    final UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    ((DirectUpdateHandler2) uhandler).getCommitTracker().setTimeUpperBound(100);\n    ((DirectUpdateHandler2) uhandler).getCommitTracker().setOpenSearcher(false);\n    final UpdateLog ulog = uhandler.getUpdateLog();\n    \n    clearIndex();\n    assertU(commit());\n    \n    // we hammer on init in a background thread to make\n    // sure we don't run into any filesystem already closed\n    // problems (SOLR-7113)\n    \n    Thread thread = new Thread() {\n      public void run() {\n        int cnt = 0;\n        while (true) {\n          ulog.init(uhandler, req.getCore());\n          try {\n            Thread.sleep(100);\n          } catch (InterruptedException e) {\n\n          }\n          if (cnt++ > 50) {\n            break;\n          }\n        }\n      }\n    };\n    \n    Thread thread2 = new Thread() {\n      public void run() {\n        int cnt = 0;\n        while (true) {\n          assertU(adoc(\"id\", Integer.toString(cnt)));\n          try {\n            Thread.sleep(10);\n          } catch (InterruptedException e) {\n\n          }\n          if (cnt++ > 500) {\n            break;\n          }\n        }\n      }\n    };\n    \n\n\n    thread.start();\n    thread2.start();\n    thread.join();\n    thread2.join();\n    \n  }\n\n","sourceOld":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 21-May-2018\n  public void testFSThreadSafety() throws Exception {\n\n    final SolrQueryRequest req = req();\n    final UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    ((DirectUpdateHandler2) uhandler).getCommitTracker().setTimeUpperBound(100);\n    ((DirectUpdateHandler2) uhandler).getCommitTracker().setOpenSearcher(false);\n    final UpdateLog ulog = uhandler.getUpdateLog();\n    \n    clearIndex();\n    assertU(commit());\n    \n    // we hammer on init in a background thread to make\n    // sure we don't run into any filesystem already closed\n    // problems (SOLR-7113)\n    \n    Thread thread = new Thread() {\n      public void run() {\n        int cnt = 0;\n        while (true) {\n          ulog.init(uhandler, req.getCore());\n          try {\n            Thread.sleep(100);\n          } catch (InterruptedException e) {\n\n          }\n          if (cnt++ > 50) {\n            break;\n          }\n        }\n      }\n    };\n    \n    Thread thread2 = new Thread() {\n      public void run() {\n        int cnt = 0;\n        while (true) {\n          assertU(adoc(\"id\", Integer.toString(cnt)));\n          try {\n            Thread.sleep(10);\n          } catch (InterruptedException e) {\n\n          }\n          if (cnt++ > 500) {\n            break;\n          }\n        }\n      }\n    };\n    \n\n\n    thread.start();\n    thread2.start();\n    thread.join();\n    thread2.join();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/TestHdfsUpdateLog#testFSThreadSafety().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/TestHdfsUpdateLog#testFSThreadSafety().mjava","sourceNew":"  @Test\n  //28-June-2018  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 21-May-2018\n  public void testFSThreadSafety() throws Exception {\n\n    final SolrQueryRequest req = req();\n    final UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    ((DirectUpdateHandler2) uhandler).getCommitTracker().setTimeUpperBound(100);\n    ((DirectUpdateHandler2) uhandler).getCommitTracker().setOpenSearcher(false);\n    final UpdateLog ulog = uhandler.getUpdateLog();\n    \n    clearIndex();\n    assertU(commit());\n    \n    // we hammer on init in a background thread to make\n    // sure we don't run into any filesystem already closed\n    // problems (SOLR-7113)\n    \n    Thread thread = new Thread() {\n      public void run() {\n        int cnt = 0;\n        while (true) {\n          ulog.init(uhandler, req.getCore());\n          try {\n            Thread.sleep(100);\n          } catch (InterruptedException e) {\n\n          }\n          if (cnt++ > 50) {\n            break;\n          }\n        }\n      }\n    };\n    \n    Thread thread2 = new Thread() {\n      public void run() {\n        int cnt = 0;\n        while (true) {\n          assertU(adoc(\"id\", Integer.toString(cnt)));\n          try {\n            Thread.sleep(10);\n          } catch (InterruptedException e) {\n\n          }\n          if (cnt++ > 500) {\n            break;\n          }\n        }\n      }\n    };\n    \n\n\n    thread.start();\n    thread2.start();\n    thread.join();\n    thread2.join();\n    \n  }\n\n","sourceOld":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 21-May-2018\n  public void testFSThreadSafety() throws Exception {\n\n    final SolrQueryRequest req = req();\n    final UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    ((DirectUpdateHandler2) uhandler).getCommitTracker().setTimeUpperBound(100);\n    ((DirectUpdateHandler2) uhandler).getCommitTracker().setOpenSearcher(false);\n    final UpdateLog ulog = uhandler.getUpdateLog();\n    \n    clearIndex();\n    assertU(commit());\n    \n    // we hammer on init in a background thread to make\n    // sure we don't run into any filesystem already closed\n    // problems (SOLR-7113)\n    \n    Thread thread = new Thread() {\n      public void run() {\n        int cnt = 0;\n        while (true) {\n          ulog.init(uhandler, req.getCore());\n          try {\n            Thread.sleep(100);\n          } catch (InterruptedException e) {\n\n          }\n          if (cnt++ > 50) {\n            break;\n          }\n        }\n      }\n    };\n    \n    Thread thread2 = new Thread() {\n      public void run() {\n        int cnt = 0;\n        while (true) {\n          assertU(adoc(\"id\", Integer.toString(cnt)));\n          try {\n            Thread.sleep(10);\n          } catch (InterruptedException e) {\n\n          }\n          if (cnt++ > 500) {\n            break;\n          }\n        }\n      }\n    };\n    \n\n\n    thread.start();\n    thread2.start();\n    thread.join();\n    thread2.join();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/TestHdfsUpdateLog#testFSThreadSafety().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/TestHdfsUpdateLog#testFSThreadSafety().mjava","sourceNew":"  @Test\n  //28-June-2018  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 21-May-2018\n  public void testFSThreadSafety() throws Exception {\n\n    final SolrQueryRequest req = req();\n    final UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    ((DirectUpdateHandler2) uhandler).getCommitTracker().setTimeUpperBound(100);\n    ((DirectUpdateHandler2) uhandler).getCommitTracker().setOpenSearcher(false);\n    final UpdateLog ulog = uhandler.getUpdateLog();\n    \n    clearIndex();\n    assertU(commit());\n    \n    // we hammer on init in a background thread to make\n    // sure we don't run into any filesystem already closed\n    // problems (SOLR-7113)\n    \n    Thread thread = new Thread() {\n      public void run() {\n        int cnt = 0;\n        while (true) {\n          ulog.init(uhandler, req.getCore());\n          try {\n            Thread.sleep(100);\n          } catch (InterruptedException e) {\n\n          }\n          if (cnt++ > 50) {\n            break;\n          }\n        }\n      }\n    };\n    \n    Thread thread2 = new Thread() {\n      public void run() {\n        int cnt = 0;\n        while (true) {\n          assertU(adoc(\"id\", Integer.toString(cnt)));\n          try {\n            Thread.sleep(10);\n          } catch (InterruptedException e) {\n\n          }\n          if (cnt++ > 500) {\n            break;\n          }\n        }\n      }\n    };\n    \n\n\n    thread.start();\n    thread2.start();\n    thread.join();\n    thread2.join();\n    \n  }\n\n","sourceOld":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 21-May-2018\n  public void testFSThreadSafety() throws Exception {\n\n    final SolrQueryRequest req = req();\n    final UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    ((DirectUpdateHandler2) uhandler).getCommitTracker().setTimeUpperBound(100);\n    ((DirectUpdateHandler2) uhandler).getCommitTracker().setOpenSearcher(false);\n    final UpdateLog ulog = uhandler.getUpdateLog();\n    \n    clearIndex();\n    assertU(commit());\n    \n    // we hammer on init in a background thread to make\n    // sure we don't run into any filesystem already closed\n    // problems (SOLR-7113)\n    \n    Thread thread = new Thread() {\n      public void run() {\n        int cnt = 0;\n        while (true) {\n          ulog.init(uhandler, req.getCore());\n          try {\n            Thread.sleep(100);\n          } catch (InterruptedException e) {\n\n          }\n          if (cnt++ > 50) {\n            break;\n          }\n        }\n      }\n    };\n    \n    Thread thread2 = new Thread() {\n      public void run() {\n        int cnt = 0;\n        while (true) {\n          assertU(adoc(\"id\", Integer.toString(cnt)));\n          try {\n            Thread.sleep(10);\n          } catch (InterruptedException e) {\n\n          }\n          if (cnt++ > 500) {\n            break;\n          }\n        }\n      }\n    };\n    \n\n\n    thread.start();\n    thread2.start();\n    thread.join();\n    thread2.join();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c801a37c38aedbd2ddbd27f2aaeb30cd5c7af0f","date":1552317217,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/TestHdfsUpdateLog#testFSThreadSafety().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/TestHdfsUpdateLog#testFSThreadSafety().mjava","sourceNew":"  @Test\n  public void testFSThreadSafety() throws Exception {\n    final SolrQueryRequest req = req();\n    final UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    ((DirectUpdateHandler2) uhandler).getCommitTracker().setTimeUpperBound(100);\n    ((DirectUpdateHandler2) uhandler).getCommitTracker().setOpenSearcher(false);\n    final UpdateLog ulog = uhandler.getUpdateLog();\n    \n    clearIndex();\n    assertU(commit());\n    \n    // we hammer on init in a background thread to make\n    // sure we don't run into any filesystem already closed\n    // problems (SOLR-7113)\n    \n    Thread thread = new Thread() {\n      public void run() {\n        int cnt = 0;\n        while (true) {\n          ulog.init(uhandler, req.getCore());\n          try {\n            Thread.sleep(100);\n          } catch (InterruptedException e) {\n\n          }\n          if (cnt++ > 50) {\n            break;\n          }\n        }\n      }\n    };\n    \n    Thread thread2 = new Thread() {\n      public void run() {\n        int cnt = 0;\n        while (true) {\n          assertU(adoc(\"id\", Integer.toString(cnt)));\n          try {\n            Thread.sleep(10);\n          } catch (InterruptedException e) {\n\n          }\n          if (cnt++ > 500) {\n            break;\n          }\n        }\n      }\n    };\n\n    thread.start();\n    thread2.start();\n    thread.join();\n    thread2.join();\n  }\n\n","sourceOld":"  @Test\n  //28-June-2018  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 21-May-2018\n  public void testFSThreadSafety() throws Exception {\n\n    final SolrQueryRequest req = req();\n    final UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    ((DirectUpdateHandler2) uhandler).getCommitTracker().setTimeUpperBound(100);\n    ((DirectUpdateHandler2) uhandler).getCommitTracker().setOpenSearcher(false);\n    final UpdateLog ulog = uhandler.getUpdateLog();\n    \n    clearIndex();\n    assertU(commit());\n    \n    // we hammer on init in a background thread to make\n    // sure we don't run into any filesystem already closed\n    // problems (SOLR-7113)\n    \n    Thread thread = new Thread() {\n      public void run() {\n        int cnt = 0;\n        while (true) {\n          ulog.init(uhandler, req.getCore());\n          try {\n            Thread.sleep(100);\n          } catch (InterruptedException e) {\n\n          }\n          if (cnt++ > 50) {\n            break;\n          }\n        }\n      }\n    };\n    \n    Thread thread2 = new Thread() {\n      public void run() {\n        int cnt = 0;\n        while (true) {\n          assertU(adoc(\"id\", Integer.toString(cnt)));\n          try {\n            Thread.sleep(10);\n          } catch (InterruptedException e) {\n\n          }\n          if (cnt++ > 500) {\n            break;\n          }\n        }\n      }\n    };\n    \n\n\n    thread.start();\n    thread2.start();\n    thread.join();\n    thread2.join();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2c801a37c38aedbd2ddbd27f2aaeb30cd5c7af0f":["11d6f92dfa9251d9da6d80ec5963a9cbecc90180"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","70505a4870244b22d4d0f1a98951b08b197d5bb0"],"11d6f92dfa9251d9da6d80ec5963a9cbecc90180":["43ad790248d7f7daee5d9cced548c546f37c7218"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["43ad790248d7f7daee5d9cced548c546f37c7218","11d6f92dfa9251d9da6d80ec5963a9cbecc90180"],"70505a4870244b22d4d0f1a98951b08b197d5bb0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"43ad790248d7f7daee5d9cced548c546f37c7218":["70505a4870244b22d4d0f1a98951b08b197d5bb0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2c801a37c38aedbd2ddbd27f2aaeb30cd5c7af0f"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["43ad790248d7f7daee5d9cced548c546f37c7218","11d6f92dfa9251d9da6d80ec5963a9cbecc90180"]},"commit2Childs":{"2c801a37c38aedbd2ddbd27f2aaeb30cd5c7af0f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"11d6f92dfa9251d9da6d80ec5963a9cbecc90180":["2c801a37c38aedbd2ddbd27f2aaeb30cd5c7af0f","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"70505a4870244b22d4d0f1a98951b08b197d5bb0":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","43ad790248d7f7daee5d9cced548c546f37c7218"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","70505a4870244b22d4d0f1a98951b08b197d5bb0"],"43ad790248d7f7daee5d9cced548c546f37c7218":["11d6f92dfa9251d9da6d80ec5963a9cbecc90180","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}