{"path":"lucene/luke/src/java/org/apache/lucene/luke/models/search/SearchImpl#search(Query,SimilarityConfig,Sort,Set[String],int,boolean).mjava","commits":[{"id":"f554f2d9b5456248ab6467b9d4f6015686797a6c","date":1554891357,"type":0,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/luke/src/java/org/apache/lucene/luke/models/search/SearchImpl#search(Query,SimilarityConfig,Sort,Set[String],int,boolean).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SearchResults search(\n      Query query, SimilarityConfig simConfig, Sort sort, Set<String> fieldsToLoad, int pageSize, boolean exactHitsCount) {\n    if (pageSize < 0) {\n      throw new LukeException(new IllegalArgumentException(\"Negative integer is not acceptable for page size.\"));\n    }\n\n    // reset internal status to prepare for a new search session\n    this.docs = new ScoreDoc[0];\n    this.currentPage = 0;\n    this.pageSize = pageSize;\n    this.exactHitsCount = exactHitsCount;\n    this.query = Objects.requireNonNull(query);\n    this.sort = sort;\n    this.fieldsToLoad = fieldsToLoad == null ? null : Collections.unmodifiableSet(fieldsToLoad);\n    searcher.setSimilarity(createSimilarity(Objects.requireNonNull(simConfig)));\n\n    try {\n      return search();\n    } catch (IOException e) {\n      throw new LukeException(\"Search Failed.\", e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fde2206cd9f6d0b9e3b572079c4243bb23c6100","date":1555838303,"type":3,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/luke/src/java/org/apache/lucene/luke/models/search/SearchImpl#search(Query,SimilarityConfig,Sort,Set[String],int,boolean).mjava","pathOld":"lucene/luke/src/java/org/apache/lucene/luke/models/search/SearchImpl#search(Query,SimilarityConfig,Sort,Set[String],int,boolean).mjava","sourceNew":"  @Override\n  public SearchResults search(\n      Query query, SimilarityConfig simConfig, Sort sort, Set<String> fieldsToLoad, int pageSize, boolean exactHitsCount) {\n    if (pageSize < 0) {\n      throw new LukeException(new IllegalArgumentException(\"Negative integer is not acceptable for page size.\"));\n    }\n\n    // reset internal status to prepare for a new search session\n    this.docs = new ScoreDoc[0];\n    this.currentPage = 0;\n    this.pageSize = pageSize;\n    this.exactHitsCount = exactHitsCount;\n    this.query = Objects.requireNonNull(query);\n    this.sort = sort;\n    this.fieldsToLoad = fieldsToLoad == null ? null : Set.copyOf(fieldsToLoad);\n    searcher.setSimilarity(createSimilarity(Objects.requireNonNull(simConfig)));\n\n    try {\n      return search();\n    } catch (IOException e) {\n      throw new LukeException(\"Search Failed.\", e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public SearchResults search(\n      Query query, SimilarityConfig simConfig, Sort sort, Set<String> fieldsToLoad, int pageSize, boolean exactHitsCount) {\n    if (pageSize < 0) {\n      throw new LukeException(new IllegalArgumentException(\"Negative integer is not acceptable for page size.\"));\n    }\n\n    // reset internal status to prepare for a new search session\n    this.docs = new ScoreDoc[0];\n    this.currentPage = 0;\n    this.pageSize = pageSize;\n    this.exactHitsCount = exactHitsCount;\n    this.query = Objects.requireNonNull(query);\n    this.sort = sort;\n    this.fieldsToLoad = fieldsToLoad == null ? null : Collections.unmodifiableSet(fieldsToLoad);\n    searcher.setSimilarity(createSimilarity(Objects.requireNonNull(simConfig)));\n\n    try {\n      return search();\n    } catch (IOException e) {\n      throw new LukeException(\"Search Failed.\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2fde2206cd9f6d0b9e3b572079c4243bb23c6100":["f554f2d9b5456248ab6467b9d4f6015686797a6c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f554f2d9b5456248ab6467b9d4f6015686797a6c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2fde2206cd9f6d0b9e3b572079c4243bb23c6100"]},"commit2Childs":{"2fde2206cd9f6d0b9e3b572079c4243bb23c6100":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f554f2d9b5456248ab6467b9d4f6015686797a6c"],"f554f2d9b5456248ab6467b9d4f6015686797a6c":["2fde2206cd9f6d0b9e3b572079c4243bb23c6100"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}