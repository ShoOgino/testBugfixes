{"path":"src/java/org/apache/lucene/analysis/StopFilter#StopFilter(TokenStream,Set,boolean).mjava","commits":[{"id":"286cb6c31750c5add63b4db2aa26094a3572747f","date":1133833013,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopFilter#StopFilter(TokenStream,Set,boolean).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Construct a token stream filtering the given input.\n     * @param input\n     * @param stopWords The set of Stop Words, as Strings.  If ignoreCase is true, all strings should be lower cased\n     * @param ignoreCase -Ignore case when stopping.  The stopWords set must be setup to contain only lower case words \n     */\n    public StopFilter(TokenStream input, Set stopWords, boolean ignoreCase)\n    {\n        super(input);\n        this.ignoreCase = ignoreCase;\n        this.stopWords = stopWords;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6864413dbc0c12104c978c05456f3da1d45adb03","date":1186770873,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopFilter#StopFilter(TokenStream,Set,boolean).mjava","pathOld":"src/java/org/apache/lucene/analysis/StopFilter#StopFilter(TokenStream,Set,boolean).mjava","sourceNew":"  /**\n   * Construct a token stream filtering the given input.\n   * @param input\n   * @param stopWords The set of Stop Words, as Strings.  If ignoreCase is true, all strings should be lower cased\n   * @param ignoreCase -Ignore case when stopping.  The stopWords set must be setup to contain only lower case words \n   */\n  public StopFilter(TokenStream input, Set stopWords, boolean ignoreCase)\n  {\n    super(input);\n    this.ignoreCase = ignoreCase;\n    this.stopWords = new CharArraySet(stopWords.size(), ignoreCase);\n    Iterator it = stopWords.iterator();\n    while(it.hasNext())\n      this.stopWords.add((String) it.next());\n  }\n\n","sourceOld":"    /**\n     * Construct a token stream filtering the given input.\n     * @param input\n     * @param stopWords The set of Stop Words, as Strings.  If ignoreCase is true, all strings should be lower cased\n     * @param ignoreCase -Ignore case when stopping.  The stopWords set must be setup to contain only lower case words \n     */\n    public StopFilter(TokenStream input, Set stopWords, boolean ignoreCase)\n    {\n        super(input);\n        this.ignoreCase = ignoreCase;\n        this.stopWords = stopWords;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"050b03edbe9b8423ff4c09685c6f03d900e86b83","date":1195514584,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopFilter#StopFilter(TokenStream,Set,boolean).mjava","pathOld":"src/java/org/apache/lucene/analysis/StopFilter#StopFilter(TokenStream,Set,boolean).mjava","sourceNew":"  /**\n   * Construct a token stream filtering the given input.\n   * If <code>stopWords</code> is an instance of {@link CharArraySet} (true if\n   * <code>makeStopSet()</code> was used to construct the set) it will be directly used\n   * and <code>ignoreCase</code> will be ignored since <code>CharArraySet</code>\n   * directly controls case sensitivity.\n   * <p/>\n   * If <code>stopWords</code> is not an instance of {@link CharArraySet},\n   * a new CharArraySet will be constructed and <code>ignoreCase</code> will be\n   * used to specify the case sensitivity of that set.\n   *\n   * @param input\n   * @param stopWords The set of Stop Words.\n   * @param ignoreCase -Ignore case when stopping.\n   */\n  public StopFilter(TokenStream input, Set stopWords, boolean ignoreCase)\n  {\n    super(input);\n    if (stopWords instanceof CharArraySet) {\n      this.stopWords = (CharArraySet)stopWords;\n    } else {\n      this.stopWords = new CharArraySet(stopWords.size(), ignoreCase);\n      this.stopWords.addAll(stopWords);\n    }\n  }\n\n","sourceOld":"  /**\n   * Construct a token stream filtering the given input.\n   * @param input\n   * @param stopWords The set of Stop Words, as Strings.  If ignoreCase is true, all strings should be lower cased\n   * @param ignoreCase -Ignore case when stopping.  The stopWords set must be setup to contain only lower case words \n   */\n  public StopFilter(TokenStream input, Set stopWords, boolean ignoreCase)\n  {\n    super(input);\n    this.ignoreCase = ignoreCase;\n    this.stopWords = new CharArraySet(stopWords.size(), ignoreCase);\n    Iterator it = stopWords.iterator();\n    while(it.hasNext())\n      this.stopWords.add((String) it.next());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223","date":1227051709,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopFilter#StopFilter(TokenStream,Set,boolean).mjava","pathOld":"src/java/org/apache/lucene/analysis/StopFilter#StopFilter(TokenStream,Set,boolean).mjava","sourceNew":"  /**\n   * Construct a token stream filtering the given input.\n   * If <code>stopWords</code> is an instance of {@link CharArraySet} (true if\n   * <code>makeStopSet()</code> was used to construct the set) it will be directly used\n   * and <code>ignoreCase</code> will be ignored since <code>CharArraySet</code>\n   * directly controls case sensitivity.\n   * <p/>\n   * If <code>stopWords</code> is not an instance of {@link CharArraySet},\n   * a new CharArraySet will be constructed and <code>ignoreCase</code> will be\n   * used to specify the case sensitivity of that set.\n   *\n   * @param input\n   * @param stopWords The set of Stop Words.\n   * @param ignoreCase -Ignore case when stopping.\n   */\n  public StopFilter(TokenStream input, Set stopWords, boolean ignoreCase)\n  {\n    super(input);\n    if (stopWords instanceof CharArraySet) {\n      this.stopWords = (CharArraySet)stopWords;\n    } else {\n      this.stopWords = new CharArraySet(stopWords.size(), ignoreCase);\n      this.stopWords.addAll(stopWords);\n    }\n    init();\n  }\n\n","sourceOld":"  /**\n   * Construct a token stream filtering the given input.\n   * If <code>stopWords</code> is an instance of {@link CharArraySet} (true if\n   * <code>makeStopSet()</code> was used to construct the set) it will be directly used\n   * and <code>ignoreCase</code> will be ignored since <code>CharArraySet</code>\n   * directly controls case sensitivity.\n   * <p/>\n   * If <code>stopWords</code> is not an instance of {@link CharArraySet},\n   * a new CharArraySet will be constructed and <code>ignoreCase</code> will be\n   * used to specify the case sensitivity of that set.\n   *\n   * @param input\n   * @param stopWords The set of Stop Words.\n   * @param ignoreCase -Ignore case when stopping.\n   */\n  public StopFilter(TokenStream input, Set stopWords, boolean ignoreCase)\n  {\n    super(input);\n    if (stopWords instanceof CharArraySet) {\n      this.stopWords = (CharArraySet)stopWords;\n    } else {\n      this.stopWords = new CharArraySet(stopWords.size(), ignoreCase);\n      this.stopWords.addAll(stopWords);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54c106a73719ede69e08f8b0ffe2950cc9ebfa07","date":1244055085,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopFilter#StopFilter(TokenStream,Set,boolean).mjava","pathOld":"src/java/org/apache/lucene/analysis/StopFilter#StopFilter(TokenStream,Set,boolean).mjava","sourceNew":"  /**\n   * Construct a token stream filtering the given input.\n   * If <code>stopWords</code> is an instance of {@link CharArraySet} (true if\n   * <code>makeStopSet()</code> was used to construct the set) it will be directly used\n   * and <code>ignoreCase</code> will be ignored since <code>CharArraySet</code>\n   * directly controls case sensitivity.\n   * <p/>\n   * If <code>stopWords</code> is not an instance of {@link CharArraySet},\n   * a new CharArraySet will be constructed and <code>ignoreCase</code> will be\n   * used to specify the case sensitivity of that set.\n   *\n   * @param input\n   * @param stopWords The set of Stop Words.\n   * @param ignoreCase -Ignore case when stopping.\n   * @deprecated Use {@link #StopFilter(boolean, TokenStream, Set, boolean)} instead\n   */\n  public StopFilter(TokenStream input, Set stopWords, boolean ignoreCase)\n  {\n    this(ENABLE_POSITION_INCREMENTS_DEFAULT, input, stopWords, ignoreCase);\n  }\n\n","sourceOld":"  /**\n   * Construct a token stream filtering the given input.\n   * If <code>stopWords</code> is an instance of {@link CharArraySet} (true if\n   * <code>makeStopSet()</code> was used to construct the set) it will be directly used\n   * and <code>ignoreCase</code> will be ignored since <code>CharArraySet</code>\n   * directly controls case sensitivity.\n   * <p/>\n   * If <code>stopWords</code> is not an instance of {@link CharArraySet},\n   * a new CharArraySet will be constructed and <code>ignoreCase</code> will be\n   * used to specify the case sensitivity of that set.\n   *\n   * @param input\n   * @param stopWords The set of Stop Words.\n   * @param ignoreCase -Ignore case when stopping.\n   */\n  public StopFilter(TokenStream input, Set stopWords, boolean ignoreCase)\n  {\n    super(input);\n    if (stopWords instanceof CharArraySet) {\n      this.stopWords = (CharArraySet)stopWords;\n    } else {\n      this.stopWords = new CharArraySet(stopWords.size(), ignoreCase);\n      this.stopWords.addAll(stopWords);\n    }\n    init();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9","date":1256127131,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/analysis/StopFilter#StopFilter(TokenStream,Set,boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * Construct a token stream filtering the given input.\n   * If <code>stopWords</code> is an instance of {@link CharArraySet} (true if\n   * <code>makeStopSet()</code> was used to construct the set) it will be directly used\n   * and <code>ignoreCase</code> will be ignored since <code>CharArraySet</code>\n   * directly controls case sensitivity.\n   * <p/>\n   * If <code>stopWords</code> is not an instance of {@link CharArraySet},\n   * a new CharArraySet will be constructed and <code>ignoreCase</code> will be\n   * used to specify the case sensitivity of that set.\n   *\n   * @param input\n   * @param stopWords The set of Stop Words.\n   * @param ignoreCase -Ignore case when stopping.\n   * @deprecated Use {@link #StopFilter(boolean, TokenStream, Set, boolean)} instead\n   */\n  public StopFilter(TokenStream input, Set stopWords, boolean ignoreCase)\n  {\n    this(ENABLE_POSITION_INCREMENTS_DEFAULT, input, stopWords, ignoreCase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6864413dbc0c12104c978c05456f3da1d45adb03":["286cb6c31750c5add63b4db2aa26094a3572747f"],"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223":["050b03edbe9b8423ff4c09685c6f03d900e86b83"],"286cb6c31750c5add63b4db2aa26094a3572747f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["54c106a73719ede69e08f8b0ffe2950cc9ebfa07"],"050b03edbe9b8423ff4c09685c6f03d900e86b83":["6864413dbc0c12104c978c05456f3da1d45adb03"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"54c106a73719ede69e08f8b0ffe2950cc9ebfa07":["74a5e7f20b4a444da9df3b2c0f331fa7a1f64223"]},"commit2Childs":{"6864413dbc0c12104c978c05456f3da1d45adb03":["050b03edbe9b8423ff4c09685c6f03d900e86b83"],"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223":["54c106a73719ede69e08f8b0ffe2950cc9ebfa07"],"286cb6c31750c5add63b4db2aa26094a3572747f":["6864413dbc0c12104c978c05456f3da1d45adb03"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["286cb6c31750c5add63b4db2aa26094a3572747f"],"050b03edbe9b8423ff4c09685c6f03d900e86b83":["74a5e7f20b4a444da9df3b2c0f331fa7a1f64223"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"54c106a73719ede69e08f8b0ffe2950cc9ebfa07":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}