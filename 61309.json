{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractSqlEntityProcessorTestCase#simpleCacheChildEntities(boolean).mjava","commits":[{"id":"b4804614e0358954d5d9f51128fcf3cd79e6e25b","date":1352831451,"type":1,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractSqlEntityProcessorTestCase#simpleCacheChildEntities(boolean).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDIHJdbcTestCase#simpleCacheChildEntities(boolean).mjava","sourceNew":"  protected void simpleCacheChildEntities(boolean checkDatabaseRequests)\n      throws Exception {\n    useSimpleCaches = true;\n    countryEntity = true;\n    sportsEntity = true;\n    countryCached = true;\n    sportsCached = true;\n    int dbRequestsMoreThan = 3;\n    int dbRequestsLessThan = totalPeople() * 2 + 1;\n    h.query(\"/dataimport\", generateRequest());\n    assertQ(req(\"*:*\"), \"//*[@numFound='\" + (totalPeople()) + \"']\");\n    if (!underlyingDataModified\n        || (personNameExists(\"Samantha\") && \"Nauru\"\n            .equals(countryNameByCode(\"NR\")))) {\n      assertQ(req(\"NAME_mult_s:Samantha\"), \"//*[@numFound='1']\",\n          \"//doc/str[@name='COUNTRY_NAME_s']='Nauru'\");\n    }\n    if (!underlyingDataModified) {\n      assertQ(req(\"COUNTRY_CODES_mult_s:NR\"), \"//*[@numFound='2']\",\n          \"//doc/str[@name='COUNTRY_NAME_s']='Nauru'\");\n      assertQ(req(\"SPORT_NAME_mult_s:Sailing\"), \"//*[@numFound='2']\");\n    }\n    String[] michaelsSports = sportNamesByPersonId(3);\n    if (!underlyingDataModified || michaelsSports.length > 0) {\n      String[] xpath = new String[michaelsSports.length + 1];\n      xpath[0] = \"//*[@numFound='1']\";\n      int i = 1;\n      for (String ms : michaelsSports) {\n        xpath[i] = \"//doc/arr[@name='SPORT_NAME_mult_s']/str[\" + i + \"]='\" + ms\n            + \"'\";\n        i++;\n      }\n      assertQ(req(\"NAME_mult_s:Michael\"), xpath);\n    }\n    if (checkDatabaseRequests) {\n      Assert.assertTrue(\"Expecting more than \" + dbRequestsMoreThan\n          + \" database calls, but DIH reported \" + totalDatabaseRequests(),\n          totalDatabaseRequests() > dbRequestsMoreThan);\n      Assert.assertTrue(\"Expecting fewer than \" + dbRequestsLessThan\n          + \" database calls, but DIH reported \" + totalDatabaseRequests(),\n          totalDatabaseRequests() < dbRequestsLessThan);\n    }\n  }\n\n","sourceOld":"  protected void simpleCacheChildEntities(boolean checkDatabaseRequests) throws Exception {\n    useSimpleCaches = true;\n    countryEntity = true;\n    sportsEntity = true;\n    countryCached=true;\n    sportsCached=true;\n    int dbRequestsMoreThan = 3;\n    int dbRequestsLessThan = totalPeople() * 2 + 1;\n    h.query(\"/dataimport\", generateRequest());    \n    assertQ(req(\"*:*\"), \"//*[@numFound='\" + (totalPeople()) + \"']\");\n    if(!underlyingDataModified || (personNameExists(\"Samantha\") && \"Nauru\".equals(countryNameByCode(\"NR\"))))\n    {\n      assertQ(req(\"NAME_mult_s:Samantha\"), \n          \"//*[@numFound='1']\", \"//doc/str[@name='COUNTRY_NAME_s']='Nauru'\");\n    }\n    if(!underlyingDataModified)\n    {\n      assertQ(req(\"COUNTRY_CODES_mult_s:NR\"), \n          \"//*[@numFound='2']\", \"//doc/str[@name='COUNTRY_NAME_s']='Nauru'\");\n      assertQ(req(\"SPORT_NAME_mult_s:Sailing\"), \"//*[@numFound='2']\");\n    }\n    String[] michaelsSports = sportNamesByPersonId(3);\n    if(!underlyingDataModified || michaelsSports.length>0) { \n      String[] xpath = new String[michaelsSports.length + 1];\n      xpath[0] = \"//*[@numFound='1']\";\n      int i=1;\n      for(String ms : michaelsSports) {\n        xpath[i] = \"//doc/arr[@name='SPORT_NAME_mult_s']/str[\" + i + \"]='\" + ms + \"'\";\n        i++;\n      }\n      assertQ(req(\"NAME_mult_s:Michael\"), xpath);\n    }\n    if(checkDatabaseRequests) {\n      Assert.assertTrue(\"Expecting more than \" + dbRequestsMoreThan\n          + \" database calls, but DIH reported \" + totalDatabaseRequests(),\n          totalDatabaseRequests() > dbRequestsMoreThan);\n      Assert.assertTrue(\"Expecting fewer than \" + dbRequestsLessThan\n          + \" database calls, but DIH reported \" + totalDatabaseRequests(),\n          totalDatabaseRequests() < dbRequestsLessThan);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractSqlEntityProcessorTestCase#simpleCacheChildEntities(boolean).mjava","pathOld":"/dev/null","sourceNew":"  protected void simpleCacheChildEntities(boolean checkDatabaseRequests)\n      throws Exception {\n    useSimpleCaches = true;\n    countryEntity = true;\n    sportsEntity = true;\n    countryCached = true;\n    sportsCached = true;\n    int dbRequestsMoreThan = 3;\n    int dbRequestsLessThan = totalPeople() * 2 + 1;\n    h.query(\"/dataimport\", generateRequest());\n    assertQ(req(\"*:*\"), \"//*[@numFound='\" + (totalPeople()) + \"']\");\n    if (!underlyingDataModified\n        || (personNameExists(\"Samantha\") && \"Nauru\"\n            .equals(countryNameByCode(\"NR\")))) {\n      assertQ(req(\"NAME_mult_s:Samantha\"), \"//*[@numFound='1']\",\n          \"//doc/str[@name='COUNTRY_NAME_s']='Nauru'\");\n    }\n    if (!underlyingDataModified) {\n      assertQ(req(\"COUNTRY_CODES_mult_s:NR\"), \"//*[@numFound='2']\",\n          \"//doc/str[@name='COUNTRY_NAME_s']='Nauru'\");\n      assertQ(req(\"SPORT_NAME_mult_s:Sailing\"), \"//*[@numFound='2']\");\n    }\n    String[] michaelsSports = sportNamesByPersonId(3);\n    if (!underlyingDataModified || michaelsSports.length > 0) {\n      String[] xpath = new String[michaelsSports.length + 1];\n      xpath[0] = \"//*[@numFound='1']\";\n      int i = 1;\n      for (String ms : michaelsSports) {\n        xpath[i] = \"//doc/arr[@name='SPORT_NAME_mult_s']/str[\" + i + \"]='\" + ms\n            + \"'\";\n        i++;\n      }\n      assertQ(req(\"NAME_mult_s:Michael\"), xpath);\n    }\n    if (checkDatabaseRequests) {\n      Assert.assertTrue(\"Expecting more than \" + dbRequestsMoreThan\n          + \" database calls, but DIH reported \" + totalDatabaseRequests(),\n          totalDatabaseRequests() > dbRequestsMoreThan);\n      Assert.assertTrue(\"Expecting fewer than \" + dbRequestsLessThan\n          + \" database calls, but DIH reported \" + totalDatabaseRequests(),\n          totalDatabaseRequests() < dbRequestsLessThan);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractSqlEntityProcessorTestCase#simpleCacheChildEntities(boolean).mjava","sourceNew":null,"sourceOld":"  protected void simpleCacheChildEntities(boolean checkDatabaseRequests)\n      throws Exception {\n    useSimpleCaches = true;\n    countryEntity = true;\n    sportsEntity = true;\n    countryCached = true;\n    sportsCached = true;\n    int dbRequestsMoreThan = 3;\n    int dbRequestsLessThan = totalPeople() * 2 + 1;\n    h.query(\"/dataimport\", generateRequest());\n    assertQ(req(\"*:*\"), \"//*[@numFound='\" + (totalPeople()) + \"']\");\n    if (!underlyingDataModified\n        || (personNameExists(\"Samantha\") && \"Nauru\"\n            .equals(countryNameByCode(\"NR\")))) {\n      assertQ(req(\"NAME_mult_s:Samantha\"), \"//*[@numFound='1']\",\n          \"//doc/str[@name='COUNTRY_NAME_s']='Nauru'\");\n    }\n    if (!underlyingDataModified) {\n      assertQ(req(\"COUNTRY_CODES_mult_s:NR\"), \"//*[@numFound='2']\",\n          \"//doc/str[@name='COUNTRY_NAME_s']='Nauru'\");\n      assertQ(req(\"SPORT_NAME_mult_s:Sailing\"), \"//*[@numFound='2']\");\n    }\n    String[] michaelsSports = sportNamesByPersonId(3);\n    if (!underlyingDataModified || michaelsSports.length > 0) {\n      String[] xpath = new String[michaelsSports.length + 1];\n      xpath[0] = \"//*[@numFound='1']\";\n      int i = 1;\n      for (String ms : michaelsSports) {\n        xpath[i] = \"//doc/arr[@name='SPORT_NAME_mult_s']/str[\" + i + \"]='\" + ms\n            + \"'\";\n        i++;\n      }\n      assertQ(req(\"NAME_mult_s:Michael\"), xpath);\n    }\n    if (checkDatabaseRequests) {\n      Assert.assertTrue(\"Expecting more than \" + dbRequestsMoreThan\n          + \" database calls, but DIH reported \" + totalDatabaseRequests(),\n          totalDatabaseRequests() > dbRequestsMoreThan);\n      Assert.assertTrue(\"Expecting fewer than \" + dbRequestsLessThan\n          + \" database calls, but DIH reported \" + totalDatabaseRequests(),\n          totalDatabaseRequests() < dbRequestsLessThan);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b4804614e0358954d5d9f51128fcf3cd79e6e25b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["b4804614e0358954d5d9f51128fcf3cd79e6e25b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b4804614e0358954d5d9f51128fcf3cd79e6e25b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"b4804614e0358954d5d9f51128fcf3cd79e6e25b":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","407687e67faf6e1f02a211ca078d8e3eed631027"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b4804614e0358954d5d9f51128fcf3cd79e6e25b","407687e67faf6e1f02a211ca078d8e3eed631027"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}