{"path":"lucene/src/test/org/apache/lucene/search/spans/TestPayloadSpans#getSpanNotSearcher().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestPayloadSpans#getSpanNotSearcher().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestPayloadSpans#getSpanNotSearcher().mjava","sourceNew":"  public IndexSearcher getSpanNotSearcher()\n      throws IOException {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new PayloadAnalyzer()).setSimilarity(\n        similarity));\n\n    Document doc = new Document();\n    doc.add(new Field(PayloadHelper.FIELD, \"one two three one four three\",\n        Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    searcher.setSimilarity(similarity);\n    return searcher;\n\n  }\n\n","sourceOld":"  public IndexSearcher getSpanNotSearcher()\n      throws IOException {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new PayloadAnalyzer()).setSimilarity(\n        similarity));\n\n    Document doc = new Document();\n    doc.add(new Field(PayloadHelper.FIELD, \"one two three one four three\",\n        Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    searcher.setSimilarity(similarity);\n    return searcher;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","date":1281477834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestPayloadSpans#getSpanNotSearcher().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestPayloadSpans#getSpanNotSearcher().mjava","sourceNew":"  public IndexSearcher getSpanNotSearcher()\n      throws IOException {\n    MockRAMDirectory directory = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new PayloadAnalyzer()).setSimilarity(\n        similarity));\n\n    Document doc = new Document();\n    doc.add(new Field(PayloadHelper.FIELD, \"one two three one four three\",\n        Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    searcher.setSimilarity(similarity);\n    return searcher;\n\n  }\n\n","sourceOld":"  public IndexSearcher getSpanNotSearcher()\n      throws IOException {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new PayloadAnalyzer()).setSimilarity(\n        similarity));\n\n    Document doc = new Document();\n    doc.add(new Field(PayloadHelper.FIELD, \"one two three one four three\",\n        Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    searcher.setSimilarity(similarity);\n    return searcher;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d302ba328993a5b449c2e0b3b5e15ae53e45879","date":1281609097,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestPayloadSpans#getSpanNotSearcher().mjava","sourceNew":null,"sourceOld":"  public IndexSearcher getSpanNotSearcher()\n      throws IOException {\n    MockRAMDirectory directory = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new PayloadAnalyzer()).setSimilarity(\n        similarity));\n\n    Document doc = new Document();\n    doc.add(new Field(PayloadHelper.FIELD, \"one two three one four three\",\n        Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    searcher.setSimilarity(similarity);\n    return searcher;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestPayloadSpans#getSpanNotSearcher().mjava","sourceNew":null,"sourceOld":"  public IndexSearcher getSpanNotSearcher()\n      throws IOException {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new PayloadAnalyzer()).setSimilarity(\n        similarity));\n\n    Document doc = new Document();\n    doc.add(new Field(PayloadHelper.FIELD, \"one two three one four three\",\n        Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    searcher.setSimilarity(similarity);\n    return searcher;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0d302ba328993a5b449c2e0b3b5e15ae53e45879":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","0d302ba328993a5b449c2e0b3b5e15ae53e45879"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0d302ba328993a5b449c2e0b3b5e15ae53e45879"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["0d302ba328993a5b449c2e0b3b5e15ae53e45879"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0d302ba328993a5b449c2e0b3b5e15ae53e45879":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}