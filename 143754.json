{"path":"solr/solrj/src/java/org/noggit/JSONUtil#writeStringPart(char[],int,int,CharArr).mjava","commits":[{"id":"980f4ef5a16664be88d82c37e6af5c49a3d57c9c","date":1557969027,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/noggit/JSONUtil#writeStringPart(char[],int,int,CharArr).mjava","pathOld":"/dev/null","sourceNew":"  public static void writeStringPart(char[] val, int start, int end, CharArr out) {\n    for (int i = start; i < end; i++) {\n      char ch = val[i];\n      // When ch>=1f, (ch*146087937)&0xd6a01f80) is 0 only for characters that need escaping: \" \\\\ u2028 u2029\n      // and has 7 false positives: 204a 4051 802f c022 c044 e04a e04b\n      if (ch > 0x1f && ((ch * 146087937) & 0xd6a01f80) != 0) {\n        out.write(ch);\n      } else {\n        writeChar(ch, out);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"980f4ef5a16664be88d82c37e6af5c49a3d57c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["980f4ef5a16664be88d82c37e6af5c49a3d57c9c"]},"commit2Childs":{"980f4ef5a16664be88d82c37e6af5c49a3d57c9c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["980f4ef5a16664be88d82c37e6af5c49a3d57c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}