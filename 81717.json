{"path":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleTemporaryFilesCleanup#registerToRemoveAfterSuite(File).mjava","commits":[{"id":"4a9c941a7004ea2e95b10aa67dafa319ff8d8c19","date":1400739326,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleTemporaryFilesCleanup#registerToRemoveAfterSuite(File).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#registerToRemoveAfterSuite(File).mjava","sourceNew":"  /**\n   * Register temporary folder for removal after the suite completes.\n   */\n  void registerToRemoveAfterSuite(File f) {\n    assert f != null;\n\n    if (LuceneTestCase.LEAVE_TEMPORARY) {\n      System.err.println(\"INFO: Will leave temporary file: \" + f.getAbsolutePath());\n      return;\n    }\n\n    synchronized (cleanupQueue) {\n      cleanupQueue.add(f);\n    }\n  }\n\n","sourceOld":"  /**\n   * Register temporary folder for removal after the suite completes.\n   */\n  private static void registerToRemoveAfterSuite(File f) {\n    assert f != null;\n\n    if (LuceneTestCase.LEAVE_TEMPORARY) {\n      System.err.println(\"INFO: Will leave temporary file: \" + f.getAbsolutePath());\n      return;\n    }\n\n    synchronized (cleanupQueue) {\n      cleanupQueue.add(f);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7605579001505896d48b07160075a5c8b8e128e","date":1400758727,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleTemporaryFilesCleanup#registerToRemoveAfterSuite(File).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#registerToRemoveAfterSuite(File).mjava","sourceNew":"  /**\n   * Register temporary folder for removal after the suite completes.\n   */\n  void registerToRemoveAfterSuite(File f) {\n    assert f != null;\n\n    if (LuceneTestCase.LEAVE_TEMPORARY) {\n      System.err.println(\"INFO: Will leave temporary file: \" + f.getAbsolutePath());\n      return;\n    }\n\n    synchronized (cleanupQueue) {\n      cleanupQueue.add(f);\n    }\n  }\n\n","sourceOld":"  /**\n   * Register temporary folder for removal after the suite completes.\n   */\n  private static void registerToRemoveAfterSuite(File f) {\n    assert f != null;\n\n    if (LuceneTestCase.LEAVE_TEMPORARY) {\n      System.err.println(\"INFO: Will leave temporary file: \" + f.getAbsolutePath());\n      return;\n    }\n\n    synchronized (cleanupQueue) {\n      cleanupQueue.add(f);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleTemporaryFilesCleanup#registerToRemoveAfterSuite(Path).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleTemporaryFilesCleanup#registerToRemoveAfterSuite(File).mjava","sourceNew":"  /**\n   * Register temporary folder for removal after the suite completes.\n   */\n  void registerToRemoveAfterSuite(Path f) {\n    assert f != null;\n\n    if (LuceneTestCase.LEAVE_TEMPORARY) {\n      System.err.println(\"INFO: Will leave temporary file: \" + f.toAbsolutePath());\n      return;\n    }\n\n    synchronized (cleanupQueue) {\n      cleanupQueue.add(f);\n    }\n  }\n\n","sourceOld":"  /**\n   * Register temporary folder for removal after the suite completes.\n   */\n  void registerToRemoveAfterSuite(File f) {\n    assert f != null;\n\n    if (LuceneTestCase.LEAVE_TEMPORARY) {\n      System.err.println(\"INFO: Will leave temporary file: \" + f.getAbsolutePath());\n      return;\n    }\n\n    synchronized (cleanupQueue) {\n      cleanupQueue.add(f);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7605579001505896d48b07160075a5c8b8e128e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4a9c941a7004ea2e95b10aa67dafa319ff8d8c19"],"f4abec28b874149a7223e32cc7a01704c27790de":["4a9c941a7004ea2e95b10aa67dafa319ff8d8c19"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f4abec28b874149a7223e32cc7a01704c27790de"],"4a9c941a7004ea2e95b10aa67dafa319ff8d8c19":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b7605579001505896d48b07160075a5c8b8e128e","4a9c941a7004ea2e95b10aa67dafa319ff8d8c19"],"b7605579001505896d48b07160075a5c8b8e128e":[],"f4abec28b874149a7223e32cc7a01704c27790de":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4a9c941a7004ea2e95b10aa67dafa319ff8d8c19":["b7605579001505896d48b07160075a5c8b8e128e","f4abec28b874149a7223e32cc7a01704c27790de"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7605579001505896d48b07160075a5c8b8e128e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}