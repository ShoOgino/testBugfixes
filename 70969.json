{"path":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#setUp().mjava","commits":[{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3e06be49006ecac364d39d12b9c9f74882f9b9f","date":1304289513,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5f0dc13f9e59664be282b46015a020c945dc2a48","date":1305657127,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    if (!testsFailed) {\n      assertTrue(\"ensure your tearDown() calls super.tearDown()!!!\", (state == State.INITIAL || state == State.TEARDOWN));\n    }\n    state = State.SETUP;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","bugFix":["37087ea13c0fde1ce1a3b5579f60f827414045a9"],"bugIntro":["558b125bbf6fa91eb5355da7e849d46edaf735bc"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    if (!testsFailed) {\n      assertTrue(\"ensure your tearDown() calls super.tearDown()!!!\", (state == State.INITIAL || state == State.TEARDOWN));\n    }\n    state = State.SETUP;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    if (!testsFailed) {\n      assertTrue(\"ensure your tearDown() calls super.tearDown()!!!\", (state == State.INITIAL || state == State.TEARDOWN));\n    }\n    state = State.SETUP;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b88f145033cba453c8f65cc86eb444c625ee86c0","date":1312803337,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : ThreeLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    if (!testsFailed) {\n      assertTrue(\"ensure your tearDown() calls super.tearDown()!!!\", (state == State.INITIAL || state == State.TEARDOWN));\n    }\n    state = State.SETUP;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    if (!testsFailed) {\n      assertTrue(\"ensure your tearDown() calls super.tearDown()!!!\", (state == State.INITIAL || state == State.TEARDOWN));\n    }\n    state = State.SETUP;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","bugFix":["8d47f68d60cbff5718136b945ba8c55982342f38"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"558b125bbf6fa91eb5355da7e849d46edaf735bc","date":1314371299,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : ThreeLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    State s = state; // capture test execution state\n    state = State.SETUP; // set the state for subsequent tests\n   \n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n        }\n    });\n\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n\n    if (!testsFailed) {\n      assertTrue(\"ensure your tearDown() calls super.tearDown()!!!\", (s == State.INITIAL || s == State.TEARDOWN));\n    }\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : ThreeLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    if (!testsFailed) {\n      assertTrue(\"ensure your tearDown() calls super.tearDown()!!!\", (state == State.INITIAL || state == State.TEARDOWN));\n    }\n    state = State.SETUP;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","bugFix":["d5ff9e61d5748484a6d8e00a9cb7689cb4841922","5f0dc13f9e59664be282b46015a020c945dc2a48"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fdbabcdfbf0ec1640188c28570cd54fd30440942","date":1317820582,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : ThreeLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    State s = state; // capture test execution state\n    state = State.SETUP; // set the state for subsequent tests\n   \n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n        }\n    });\n\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n\n    if (!testsFailed) {\n      assertTrue(\"ensure your tearDown() calls super.tearDown()!!!\", (s == State.INITIAL || s == State.TEARDOWN));\n    }\n    \n    if (useNoMemoryExpensiveCodec) {\n      final String defCodec = CodecProvider.getDefault().getDefaultFieldCodec();\n      // Stupid: assumeFalse in setUp() does not print any information, because\n      // TestWatchman does not watch test during setUp() - getName() is also not defined...\n      // => print info directly and use assume without message:\n      if (\"SimpleText\".equals(defCodec) || \"Memory\".equals(defCodec)) {\n        System.err.println(\"NOTE: A test method in \" + getClass().getSimpleName() + \" was ignored, as it uses too much memory with \" + defCodec + \".\");\n        Assume.assumeTrue(false);\n      }\n    }\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : ThreeLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    State s = state; // capture test execution state\n    state = State.SETUP; // set the state for subsequent tests\n   \n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n        }\n    });\n\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n\n    if (!testsFailed) {\n      assertTrue(\"ensure your tearDown() calls super.tearDown()!!!\", (s == State.INITIAL || s == State.TEARDOWN));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : ThreeLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    State s = state; // capture test execution state\n    state = State.SETUP; // set the state for subsequent tests\n   \n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n        }\n    });\n\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n\n    if (!testsFailed) {\n      assertTrue(\"ensure your tearDown() calls super.tearDown()!!!\", (s == State.INITIAL || s == State.TEARDOWN));\n    }\n    \n    if (useNoMemoryExpensiveCodec) {\n      String defFormat = _TestUtil.getPostingsFormat(\"thisCodeMakesAbsolutelyNoSenseCanWeDeleteIt\");\n      // Stupid: assumeFalse in setUp() does not print any information, because\n      // TestWatchman does not watch test during setUp() - getName() is also not defined...\n      // => print info directly and use assume without message:\n      if (\"SimpleText\".equals(defFormat) || \"Memory\".equals(defFormat)) {\n        System.err.println(\"NOTE: A test method in \" + getClass().getSimpleName() + \" was ignored, as it uses too much memory with \" + defFormat + \".\");\n        Assume.assumeTrue(false);\n      }\n    }\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : ThreeLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    State s = state; // capture test execution state\n    state = State.SETUP; // set the state for subsequent tests\n   \n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n        }\n    });\n\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n\n    if (!testsFailed) {\n      assertTrue(\"ensure your tearDown() calls super.tearDown()!!!\", (s == State.INITIAL || s == State.TEARDOWN));\n    }\n    \n    if (useNoMemoryExpensiveCodec) {\n      final String defCodec = CodecProvider.getDefault().getDefaultFieldCodec();\n      // Stupid: assumeFalse in setUp() does not print any information, because\n      // TestWatchman does not watch test during setUp() - getName() is also not defined...\n      // => print info directly and use assume without message:\n      if (\"SimpleText\".equals(defCodec) || \"Memory\".equals(defCodec)) {\n        System.err.println(\"NOTE: A test method in \" + getClass().getSimpleName() + \" was ignored, as it uses too much memory with \" + defCodec + \".\");\n        Assume.assumeTrue(false);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["4d6dd72a05afb74918c3fe80580e68a5098533a2"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7b91922b55d15444d554721b352861d028eb8278":["fdbabcdfbf0ec1640188c28570cd54fd30440942"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["135621f3a0670a9394eb563224a3b76cc4dddc0f","5f0dc13f9e59664be282b46015a020c945dc2a48"],"a3776dccca01c11e7046323cfad46a3b4a471233":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","5f0dc13f9e59664be282b46015a020c945dc2a48"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"558b125bbf6fa91eb5355da7e849d46edaf735bc":["b88f145033cba453c8f65cc86eb444c625ee86c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fdbabcdfbf0ec1640188c28570cd54fd30440942":["558b125bbf6fa91eb5355da7e849d46edaf735bc"],"5f0dc13f9e59664be282b46015a020c945dc2a48":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"b88f145033cba453c8f65cc86eb444c625ee86c0":["5f0dc13f9e59664be282b46015a020c945dc2a48"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"135621f3a0670a9394eb563224a3b76cc4dddc0f":["c3a8a449466c1ff7ce2274fe73dab487256964b4"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["135621f3a0670a9394eb563224a3b76cc4dddc0f","5f0dc13f9e59664be282b46015a020c945dc2a48"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["b3e06be49006ecac364d39d12b9c9f74882f9b9f","a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"558b125bbf6fa91eb5355da7e849d46edaf735bc":["fdbabcdfbf0ec1640188c28570cd54fd30440942"],"fdbabcdfbf0ec1640188c28570cd54fd30440942":["7b91922b55d15444d554721b352861d028eb8278"],"5f0dc13f9e59664be282b46015a020c945dc2a48":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","b88f145033cba453c8f65cc86eb444c625ee86c0"],"b88f145033cba453c8f65cc86eb444c625ee86c0":["558b125bbf6fa91eb5355da7e849d46edaf735bc"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}