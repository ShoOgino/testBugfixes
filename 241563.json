{"path":"lucene/contrib/demo/src/test/org/apache/lucene/demo/TestDemo#testOneSearch(File,String,int).mjava","commits":[{"id":"87eeb057b3ec12b3b95368edef84373bc9f54147","date":1302173473,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/demo/src/test/org/apache/lucene/demo/TestDemo#testOneSearch(File,String,int).mjava","pathOld":"lucene/contrib/demo/src/test/org/apache/lucene/demo/TestDemo#testOneSearch(String,int).mjava","sourceNew":"  private void testOneSearch(File indexPath, String query, int expectedHitCount) throws Exception {\n    PrintStream outSave = System.out;\n    try {\n      ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n      PrintStream fakeSystemOut = new PrintStream(bytes);\n      System.setOut(fakeSystemOut);\n      SearchFiles.main(new String[] {\"-query\", query, \"-index\", indexPath.getPath()});\n      fakeSystemOut.flush();\n      String output = bytes.toString(); // intentionally use default encoding\n      assertTrue(\"output=\" + output, output.contains(expectedHitCount + \" total matching documents\"));\n    } finally {\n      System.setOut(outSave);\n    }\n  }\n\n","sourceOld":"  private void testOneSearch(String query, int expectedHitCount) throws Exception {\n    PrintStream outSave = System.out;\n    try {\n      ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n      PrintStream fakeSystemOut = new PrintStream(bytes);\n      System.setOut(fakeSystemOut);\n      SearchFiles.main(new String[] {\"-query\", query});\n      fakeSystemOut.flush();\n      String output = bytes.toString(); // intentionally use default encoding\n      assertTrue(\"output=\" + output, output.contains(expectedHitCount + \" total matching documents\"));\n    } finally {\n      System.setOut(outSave);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/demo/src/test/org/apache/lucene/demo/TestDemo#testOneSearch(File,String,int).mjava","pathOld":"lucene/contrib/demo/src/test/org/apache/lucene/demo/TestDemo#testOneSearch(String,int).mjava","sourceNew":"  private void testOneSearch(File indexPath, String query, int expectedHitCount) throws Exception {\n    PrintStream outSave = System.out;\n    try {\n      ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n      PrintStream fakeSystemOut = new PrintStream(bytes);\n      System.setOut(fakeSystemOut);\n      SearchFiles.main(new String[] {\"-query\", query, \"-index\", indexPath.getPath()});\n      fakeSystemOut.flush();\n      String output = bytes.toString(); // intentionally use default encoding\n      assertTrue(\"output=\" + output, output.contains(expectedHitCount + \" total matching documents\"));\n    } finally {\n      System.setOut(outSave);\n    }\n  }\n\n","sourceOld":"  private void testOneSearch(String query, int expectedHitCount) throws Exception {\n    PrintStream outSave = System.out;\n    try {\n      ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n      PrintStream fakeSystemOut = new PrintStream(bytes);\n      System.setOut(fakeSystemOut);\n      SearchFiles.main(new String[] {\"-query\", query});\n      fakeSystemOut.flush();\n      String output = bytes.toString(); // intentionally use default encoding\n      assertTrue(\"output=\" + output, output.contains(expectedHitCount + \" total matching documents\"));\n    } finally {\n      System.setOut(outSave);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/demo/src/test/org/apache/lucene/demo/TestDemo#testOneSearch(File,String,int).mjava","pathOld":"/dev/null","sourceNew":"  private void testOneSearch(File indexPath, String query, int expectedHitCount) throws Exception {\n    PrintStream outSave = System.out;\n    try {\n      ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n      PrintStream fakeSystemOut = new PrintStream(bytes);\n      System.setOut(fakeSystemOut);\n      SearchFiles.main(new String[] {\"-query\", query, \"-index\", indexPath.getPath()});\n      fakeSystemOut.flush();\n      String output = bytes.toString(); // intentionally use default encoding\n      assertTrue(\"output=\" + output, output.contains(expectedHitCount + \" total matching documents\"));\n    } finally {\n      System.setOut(outSave);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/contrib/demo/src/test/org/apache/lucene/demo/TestDemo#testOneSearch(File,String,int).mjava","pathOld":"/dev/null","sourceNew":"  private void testOneSearch(File indexPath, String query, int expectedHitCount) throws Exception {\n    PrintStream outSave = System.out;\n    try {\n      ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n      PrintStream fakeSystemOut = new PrintStream(bytes);\n      System.setOut(fakeSystemOut);\n      SearchFiles.main(new String[] {\"-query\", query, \"-index\", indexPath.getPath()});\n      fakeSystemOut.flush();\n      String output = bytes.toString(); // intentionally use default encoding\n      assertTrue(\"output=\" + output, output.contains(expectedHitCount + \" total matching documents\"));\n    } finally {\n      System.setOut(outSave);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/demo/src/test/org/apache/lucene/demo/TestDemo#testOneSearch(File,String,int).mjava","pathOld":"lucene/contrib/demo/src/test/org/apache/lucene/demo/TestDemo#testOneSearch(File,String,int).mjava","sourceNew":"  private void testOneSearch(File indexPath, String query, int expectedHitCount) throws Exception {\n    PrintStream outSave = System.out;\n    try {\n      ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n      PrintStream fakeSystemOut = new PrintStream(bytes);\n      System.setOut(fakeSystemOut);\n      SearchFiles.main(new String[] {\"-query\", query, \"-index\", indexPath.getPath()});\n      fakeSystemOut.flush();\n      String output = bytes.toString(); // intentionally use default encoding\n      assertTrue(\"output=\" + output, output.contains(expectedHitCount + \" total matching documents\"));\n    } finally {\n      System.setOut(outSave);\n    }\n  }\n\n","sourceOld":"  private void testOneSearch(File indexPath, String query, int expectedHitCount) throws Exception {\n    PrintStream outSave = System.out;\n    try {\n      ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n      PrintStream fakeSystemOut = new PrintStream(bytes);\n      System.setOut(fakeSystemOut);\n      SearchFiles.main(new String[] {\"-query\", query, \"-index\", indexPath.getPath()});\n      fakeSystemOut.flush();\n      String output = bytes.toString(); // intentionally use default encoding\n      assertTrue(\"output=\" + output, output.contains(expectedHitCount + \" total matching documents\"));\n    } finally {\n      System.setOut(outSave);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["87eeb057b3ec12b3b95368edef84373bc9f54147"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","87eeb057b3ec12b3b95368edef84373bc9f54147"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","87eeb057b3ec12b3b95368edef84373bc9f54147"],"962d04139994fce5193143ef35615499a9a96d78":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","87eeb057b3ec12b3b95368edef84373bc9f54147"],"87eeb057b3ec12b3b95368edef84373bc9f54147":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","87eeb057b3ec12b3b95368edef84373bc9f54147"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"962d04139994fce5193143ef35615499a9a96d78":[],"87eeb057b3ec12b3b95368edef84373bc9f54147":["b89678825b68eccaf09e6ab71675fc0b0af1e099","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}