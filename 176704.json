{"path":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#fromPolygon(Polygon...).mjava","commits":[{"id":"f32db9456b1759bf570a512581f5cea321f69f73","date":1463520039,"type":0,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#fromPolygon(Polygon...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n    * Convert a set of Polygon objects into a GeoPolygon.\n    * @param polygons are the Polygon objects.\n    * @return the GeoPolygon.\n    */\n  static GeoPolygon fromPolygon(final Polygon... polygons) {\n    //System.err.println(\"Creating polygon...\");\n    if (polygons.length < 1) {\n      throw new IllegalArgumentException(\"need at least one polygon\");\n    }\n    final GeoPolygon shape;\n    if (polygons.length == 1) {\n      final GeoPolygon component = fromPolygon(polygons[0]);\n      if (component == null) {\n        // Polygon is degenerate\n        shape = new GeoCompositePolygon();\n      } else {\n        shape = component;\n      }\n    } else {\n      final GeoCompositePolygon poly = new GeoCompositePolygon();\n      for (final Polygon p : polygons) {\n        final GeoPolygon component = fromPolygon(p);\n        if (component != null) {\n          poly.addShape(component);\n        }\n      }\n      shape = poly;\n    }\n    return shape;\n    //System.err.println(\"...done\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9c9819d04ff44d2877a5a19257cd662751284a5f","date":1463541580,"type":0,"author":"David Smiley","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#fromPolygon(Polygon...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n    * Convert a set of Polygon objects into a GeoPolygon.\n    * @param polygons are the Polygon objects.\n    * @return the GeoPolygon.\n    */\n  static GeoPolygon fromPolygon(final Polygon... polygons) {\n    //System.err.println(\"Creating polygon...\");\n    if (polygons.length < 1) {\n      throw new IllegalArgumentException(\"need at least one polygon\");\n    }\n    final GeoPolygon shape;\n    if (polygons.length == 1) {\n      final GeoPolygon component = fromPolygon(polygons[0]);\n      if (component == null) {\n        // Polygon is degenerate\n        shape = new GeoCompositePolygon();\n      } else {\n        shape = component;\n      }\n    } else {\n      final GeoCompositePolygon poly = new GeoCompositePolygon();\n      for (final Polygon p : polygons) {\n        final GeoPolygon component = fromPolygon(p);\n        if (component != null) {\n          poly.addShape(component);\n        }\n      }\n      shape = poly;\n    }\n    return shape;\n    //System.err.println(\"...done\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#fromPolygon(Polygon...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n    * Convert a set of Polygon objects into a GeoPolygon.\n    * @param polygons are the Polygon objects.\n    * @return the GeoPolygon.\n    */\n  static GeoPolygon fromPolygon(final Polygon... polygons) {\n    //System.err.println(\"Creating polygon...\");\n    if (polygons.length < 1) {\n      throw new IllegalArgumentException(\"need at least one polygon\");\n    }\n    final GeoPolygon shape;\n    if (polygons.length == 1) {\n      final GeoPolygon component = fromPolygon(polygons[0]);\n      if (component == null) {\n        // Polygon is degenerate\n        shape = new GeoCompositePolygon();\n      } else {\n        shape = component;\n      }\n    } else {\n      final GeoCompositePolygon poly = new GeoCompositePolygon();\n      for (final Polygon p : polygons) {\n        final GeoPolygon component = fromPolygon(p);\n        if (component != null) {\n          poly.addShape(component);\n        }\n      }\n      shape = poly;\n    }\n    return shape;\n    //System.err.println(\"...done\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#fromPolygon(Polygon...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n    * Convert a set of Polygon objects into a GeoPolygon.\n    * @param polygons are the Polygon objects.\n    * @return the GeoPolygon.\n    */\n  static GeoPolygon fromPolygon(final Polygon... polygons) {\n    //System.err.println(\"Creating polygon...\");\n    if (polygons.length < 1) {\n      throw new IllegalArgumentException(\"need at least one polygon\");\n    }\n    final GeoPolygon shape;\n    if (polygons.length == 1) {\n      final GeoPolygon component = fromPolygon(polygons[0]);\n      if (component == null) {\n        // Polygon is degenerate\n        shape = new GeoCompositePolygon();\n      } else {\n        shape = component;\n      }\n    } else {\n      final GeoCompositePolygon poly = new GeoCompositePolygon();\n      for (final Polygon p : polygons) {\n        final GeoPolygon component = fromPolygon(p);\n        if (component != null) {\n          poly.addShape(component);\n        }\n      }\n      shape = poly;\n    }\n    return shape;\n    //System.err.println(\"...done\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a92ffe0d2961113e5588e614f8dc22b42bf10a95","date":1503304229,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#fromPolygon(Polygon...).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#fromPolygon(Polygon...).mjava","sourceNew":"  /**\n    * Convert a set of Polygon objects into a GeoPolygon.\n    * @param polygons are the Polygon objects.\n    * @return the GeoPolygon.\n    */\n  static GeoPolygon fromPolygon(final Polygon... polygons) {\n    //System.err.println(\"Creating polygon...\");\n    if (polygons.length < 1) {\n      throw new IllegalArgumentException(\"need at least one polygon\");\n    }\n    final GeoPolygon shape;\n    if (polygons.length == 1) {\n      final GeoPolygon component = fromPolygon(polygons[0]);\n      if (component == null) {\n        // Polygon is degenerate\n        shape = new GeoCompositePolygon(PlanetModel.WGS84);\n      } else {\n        shape = component;\n      }\n    } else {\n      final GeoCompositePolygon poly = new GeoCompositePolygon(PlanetModel.WGS84);\n      for (final Polygon p : polygons) {\n        final GeoPolygon component = fromPolygon(p);\n        if (component != null) {\n          poly.addShape(component);\n        }\n      }\n      shape = poly;\n    }\n    return shape;\n    //System.err.println(\"...done\");\n  }\n\n","sourceOld":"  /**\n    * Convert a set of Polygon objects into a GeoPolygon.\n    * @param polygons are the Polygon objects.\n    * @return the GeoPolygon.\n    */\n  static GeoPolygon fromPolygon(final Polygon... polygons) {\n    //System.err.println(\"Creating polygon...\");\n    if (polygons.length < 1) {\n      throw new IllegalArgumentException(\"need at least one polygon\");\n    }\n    final GeoPolygon shape;\n    if (polygons.length == 1) {\n      final GeoPolygon component = fromPolygon(polygons[0]);\n      if (component == null) {\n        // Polygon is degenerate\n        shape = new GeoCompositePolygon();\n      } else {\n        shape = component;\n      }\n    } else {\n      final GeoCompositePolygon poly = new GeoCompositePolygon();\n      for (final Polygon p : polygons) {\n        final GeoPolygon component = fromPolygon(p);\n        if (component != null) {\n          poly.addShape(component);\n        }\n      }\n      shape = poly;\n    }\n    return shape;\n    //System.err.println(\"...done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0dcd28a23753c14d56c7d2c5ba71cf1e03d532b","date":1503230479,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#fromPolygon(Polygon...).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#fromPolygon(Polygon...).mjava","sourceNew":"  /**\n    * Convert a set of Polygon objects into a GeoPolygon.\n    * @param polygons are the Polygon objects.\n    * @return the GeoPolygon.\n    */\n  static GeoPolygon fromPolygon(final Polygon... polygons) {\n    //System.err.println(\"Creating polygon...\");\n    if (polygons.length < 1) {\n      throw new IllegalArgumentException(\"need at least one polygon\");\n    }\n    final GeoPolygon shape;\n    if (polygons.length == 1) {\n      final GeoPolygon component = fromPolygon(polygons[0]);\n      if (component == null) {\n        // Polygon is degenerate\n        shape = new GeoCompositePolygon(PlanetModel.WGS84);\n      } else {\n        shape = component;\n      }\n    } else {\n      final GeoCompositePolygon poly = new GeoCompositePolygon(PlanetModel.WGS84);\n      for (final Polygon p : polygons) {\n        final GeoPolygon component = fromPolygon(p);\n        if (component != null) {\n          poly.addShape(component);\n        }\n      }\n      shape = poly;\n    }\n    return shape;\n    //System.err.println(\"...done\");\n  }\n\n","sourceOld":"  /**\n    * Convert a set of Polygon objects into a GeoPolygon.\n    * @param polygons are the Polygon objects.\n    * @return the GeoPolygon.\n    */\n  static GeoPolygon fromPolygon(final Polygon... polygons) {\n    //System.err.println(\"Creating polygon...\");\n    if (polygons.length < 1) {\n      throw new IllegalArgumentException(\"need at least one polygon\");\n    }\n    final GeoPolygon shape;\n    if (polygons.length == 1) {\n      final GeoPolygon component = fromPolygon(polygons[0]);\n      if (component == null) {\n        // Polygon is degenerate\n        shape = new GeoCompositePolygon();\n      } else {\n        shape = component;\n      }\n    } else {\n      final GeoCompositePolygon poly = new GeoCompositePolygon();\n      for (final Polygon p : polygons) {\n        final GeoPolygon component = fromPolygon(p);\n        if (component != null) {\n          poly.addShape(component);\n        }\n      }\n      shape = poly;\n    }\n    return shape;\n    //System.err.println(\"...done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3051d6122751c8f6cc1e9cf24592658b59843ec2","date":1503298024,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#fromPolygon(Polygon...).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#fromPolygon(Polygon...).mjava","sourceNew":"  /**\n    * Convert a set of Polygon objects into a GeoPolygon.\n    * @param polygons are the Polygon objects.\n    * @return the GeoPolygon.\n    */\n  static GeoPolygon fromPolygon(final Polygon... polygons) {\n    //System.err.println(\"Creating polygon...\");\n    if (polygons.length < 1) {\n      throw new IllegalArgumentException(\"need at least one polygon\");\n    }\n    final GeoPolygon shape;\n    if (polygons.length == 1) {\n      final GeoPolygon component = fromPolygon(polygons[0]);\n      if (component == null) {\n        // Polygon is degenerate\n        shape = new GeoCompositePolygon(PlanetModel.WGS84);\n      } else {\n        shape = component;\n      }\n    } else {\n      final GeoCompositePolygon poly = new GeoCompositePolygon(PlanetModel.WGS84);\n      for (final Polygon p : polygons) {\n        final GeoPolygon component = fromPolygon(p);\n        if (component != null) {\n          poly.addShape(component);\n        }\n      }\n      shape = poly;\n    }\n    return shape;\n    //System.err.println(\"...done\");\n  }\n\n","sourceOld":"  /**\n    * Convert a set of Polygon objects into a GeoPolygon.\n    * @param polygons are the Polygon objects.\n    * @return the GeoPolygon.\n    */\n  static GeoPolygon fromPolygon(final Polygon... polygons) {\n    //System.err.println(\"Creating polygon...\");\n    if (polygons.length < 1) {\n      throw new IllegalArgumentException(\"need at least one polygon\");\n    }\n    final GeoPolygon shape;\n    if (polygons.length == 1) {\n      final GeoPolygon component = fromPolygon(polygons[0]);\n      if (component == null) {\n        // Polygon is degenerate\n        shape = new GeoCompositePolygon();\n      } else {\n        shape = component;\n      }\n    } else {\n      final GeoCompositePolygon poly = new GeoCompositePolygon();\n      for (final Polygon p : polygons) {\n        final GeoPolygon component = fromPolygon(p);\n        if (component != null) {\n          poly.addShape(component);\n        }\n      }\n      shape = poly;\n    }\n    return shape;\n    //System.err.println(\"...done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a","date":1583186777,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#fromPolygon(PlanetModel,Polygon...).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#fromPolygon(Polygon...).mjava","sourceNew":"  /**\n    * Convert a set of Polygon objects into a GeoPolygon.\n    * @param polygons are the Polygon objects.\n    * @return the GeoPolygon.\n    */\n  static GeoPolygon fromPolygon(final PlanetModel planetModel, final Polygon... polygons) {\n    //System.err.println(\"Creating polygon...\");\n    if (polygons.length < 1) {\n      throw new IllegalArgumentException(\"need at least one polygon\");\n    }\n    final GeoPolygon shape;\n    if (polygons.length == 1) {\n      final GeoPolygon component = fromPolygon(planetModel, polygons[0]);\n      if (component == null) {\n        // Polygon is degenerate\n        shape = new GeoCompositePolygon(planetModel);\n      } else {\n        shape = component;\n      }\n    } else {\n      final GeoCompositePolygon poly = new GeoCompositePolygon(planetModel);\n      for (final Polygon p : polygons) {\n        final GeoPolygon component = fromPolygon(planetModel, p);\n        if (component != null) {\n          poly.addShape(component);\n        }\n      }\n      shape = poly;\n    }\n    return shape;\n    //System.err.println(\"...done\");\n  }\n\n","sourceOld":"  /**\n    * Convert a set of Polygon objects into a GeoPolygon.\n    * @param polygons are the Polygon objects.\n    * @return the GeoPolygon.\n    */\n  static GeoPolygon fromPolygon(final Polygon... polygons) {\n    //System.err.println(\"Creating polygon...\");\n    if (polygons.length < 1) {\n      throw new IllegalArgumentException(\"need at least one polygon\");\n    }\n    final GeoPolygon shape;\n    if (polygons.length == 1) {\n      final GeoPolygon component = fromPolygon(polygons[0]);\n      if (component == null) {\n        // Polygon is degenerate\n        shape = new GeoCompositePolygon(PlanetModel.WGS84);\n      } else {\n        shape = component;\n      }\n    } else {\n      final GeoCompositePolygon poly = new GeoCompositePolygon(PlanetModel.WGS84);\n      for (final Polygon p : polygons) {\n        final GeoPolygon component = fromPolygon(p);\n        if (component != null) {\n          poly.addShape(component);\n        }\n      }\n      shape = poly;\n    }\n    return shape;\n    //System.err.println(\"...done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9c9819d04ff44d2877a5a19257cd662751284a5f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f32db9456b1759bf570a512581f5cea321f69f73"],"d0dcd28a23753c14d56c7d2c5ba71cf1e03d532b":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3051d6122751c8f6cc1e9cf24592658b59843ec2":["d470c8182e92b264680e34081b75e70a9f2b3c89","d0dcd28a23753c14d56c7d2c5ba71cf1e03d532b"],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["a92ffe0d2961113e5588e614f8dc22b42bf10a95"],"f32db9456b1759bf570a512581f5cea321f69f73":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a92ffe0d2961113e5588e614f8dc22b42bf10a95":["d470c8182e92b264680e34081b75e70a9f2b3c89","d0dcd28a23753c14d56c7d2c5ba71cf1e03d532b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f32db9456b1759bf570a512581f5cea321f69f73"]},"commit2Childs":{"9c9819d04ff44d2877a5a19257cd662751284a5f":[],"d0dcd28a23753c14d56c7d2c5ba71cf1e03d532b":["3051d6122751c8f6cc1e9cf24592658b59843ec2","a92ffe0d2961113e5588e614f8dc22b42bf10a95"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9c9819d04ff44d2877a5a19257cd662751284a5f","f32db9456b1759bf570a512581f5cea321f69f73","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"3051d6122751c8f6cc1e9cf24592658b59843ec2":[],"f32db9456b1759bf570a512581f5cea321f69f73":["9c9819d04ff44d2877a5a19257cd662751284a5f","d470c8182e92b264680e34081b75e70a9f2b3c89"],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a92ffe0d2961113e5588e614f8dc22b42bf10a95":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["d0dcd28a23753c14d56c7d2c5ba71cf1e03d532b","3051d6122751c8f6cc1e9cf24592658b59843ec2","a92ffe0d2961113e5588e614f8dc22b42bf10a95","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9c9819d04ff44d2877a5a19257cd662751284a5f","3051d6122751c8f6cc1e9cf24592658b59843ec2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}