{"path":"src/java/org/apache/lucene/index/SegmentInfos.FindSegmentsFile#doBody(String).mjava","commits":[{"id":"284c1d3c8b19931bf6f312fae7470487f5d9e580","date":1163805527,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfos.FindSegmentsFile#doBody(String).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Subclass must implement this.  The assumption is an\n     * IOException will be thrown if something goes wrong\n     * during the processing that could have been caused by\n     * a writer committing.\n     */\n    protected abstract Object doBody(String segmentFileName) throws IOException;\n","sourceOld":null,"bugFix":null,"bugIntro":["1b54a9bc667895a2095a886184bf69a3179e63df"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1b54a9bc667895a2095a886184bf69a3179e63df","date":1172088096,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfos.FindSegmentsFile#doBody(String).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfos.FindSegmentsFile#doBody(String).mjava","sourceNew":"    /**\n     * Subclass must implement this.  The assumption is an\n     * IOException will be thrown if something goes wrong\n     * during the processing that could have been caused by\n     * a writer committing.\n     */\n    protected abstract Object doBody(String segmentFileName) throws CorruptIndexException, IOException;\n","sourceOld":"    /**\n     * Subclass must implement this.  The assumption is an\n     * IOException will be thrown if something goes wrong\n     * during the processing that could have been caused by\n     * a writer committing.\n     */\n    protected abstract Object doBody(String segmentFileName) throws IOException;\n","bugFix":["284c1d3c8b19931bf6f312fae7470487f5d9e580"],"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a8a6f0cea0d6b50602e9b67dbf17eb1fb8ecf14a","date":1172364225,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfos.FindSegmentsFile#doBody(String).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfos.FindSegmentsFile#doBody(String).mjava","sourceNew":"    /**\n     * Subclass must implement this.  The assumption is an\n     * IOException will be thrown if something goes wrong\n     * during the processing that could have been caused by\n     * a writer committing.\n     */\n    protected abstract Object doBody(String segmentFileName) throws CorruptIndexException, IOException;\n\n","sourceOld":"    /**\n     * Subclass must implement this.  The assumption is an\n     * IOException will be thrown if something goes wrong\n     * during the processing that could have been caused by\n     * a writer committing.\n     */\n    protected abstract Object doBody(String segmentFileName) throws CorruptIndexException, IOException;\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfos.FindSegmentsFile#doBody(String).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfos.FindSegmentsFile#doBody(String).mjava","sourceNew":"    /**\n     * Subclass must implement this.  The assumption is an\n     * IOException will be thrown if something goes wrong\n     * during the processing that could have been caused by\n     * a writer committing.\n     */\n    protected abstract Object doBody(String segmentFileName) throws CorruptIndexException, IOException;\n\n","sourceOld":"    /**\n     * Subclass must implement this.  The assumption is an\n     * IOException will be thrown if something goes wrong\n     * during the processing that could have been caused by\n     * a writer committing.\n     */\n    protected abstract Object doBody(String segmentFileName) throws CorruptIndexException, IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"284c1d3c8b19931bf6f312fae7470487f5d9e580":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1b54a9bc667895a2095a886184bf69a3179e63df":["284c1d3c8b19931bf6f312fae7470487f5d9e580"],"a8a6f0cea0d6b50602e9b67dbf17eb1fb8ecf14a":["1b54a9bc667895a2095a886184bf69a3179e63df"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a8a6f0cea0d6b50602e9b67dbf17eb1fb8ecf14a"]},"commit2Childs":{"284c1d3c8b19931bf6f312fae7470487f5d9e580":["1b54a9bc667895a2095a886184bf69a3179e63df"],"1b54a9bc667895a2095a886184bf69a3179e63df":["a8a6f0cea0d6b50602e9b67dbf17eb1fb8ecf14a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["284c1d3c8b19931bf6f312fae7470487f5d9e580"],"a8a6f0cea0d6b50602e9b67dbf17eb1fb8ecf14a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}