{"path":"solr/core/src/test/org/apache/solr/util/hll/HLLUtilTest#largeEstimatorCutoffTest().mjava","commits":[{"id":"6faa211c4af605e3cf078a76d200c1dc348973f5","date":1437043657,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/hll/HLLUtilTest#largeEstimatorCutoffTest().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Tests that {@link HLLUtil#largeEstimatorCutoff(int, int)} is the same\n     * as a trivial implementation.\n     */\n    @Test\n    public void largeEstimatorCutoffTest() {\n        for(int log2m=HLL.MINIMUM_LOG2M_PARAM; log2m<=HLL.MAXIMUM_LOG2M_PARAM; log2m++) {\n            for(int regWidth=HLL.MINIMUM_REGWIDTH_PARAM; regWidth<=HLL.MINIMUM_REGWIDTH_PARAM; regWidth++) {\n                final double cutoff = HLLUtil.largeEstimatorCutoff(log2m, regWidth);\n\n                // See blog post (http://research.neustar.biz/2013/01/24/hyperloglog-googles-take-on-engineering-hll/)\n                // and original paper (Fig. 3) for information on 2^L and\n                // \"large range correction\" cutoff.\n                final double expected = Math.pow(2, Math.pow(2, regWidth) - 2 + log2m) / 30.0;\n                assertEquals(cutoff, expected, 0.0001);\n            }\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b5ee4c66244bdfcc4796a114519d47701b2c026","date":1437132013,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/util/hll/HLLUtilTest#largeEstimatorCutoffTest().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Tests that {@link HLLUtil#largeEstimatorCutoff(int, int)} is the same\n     * as a trivial implementation.\n     */\n    @Test\n    public void largeEstimatorCutoffTest() {\n        for(int log2m=HLL.MINIMUM_LOG2M_PARAM; log2m<=HLL.MAXIMUM_LOG2M_PARAM; log2m++) {\n            for(int regWidth=HLL.MINIMUM_REGWIDTH_PARAM; regWidth<=HLL.MINIMUM_REGWIDTH_PARAM; regWidth++) {\n                final double cutoff = HLLUtil.largeEstimatorCutoff(log2m, regWidth);\n\n                // See blog post (http://research.neustar.biz/2013/01/24/hyperloglog-googles-take-on-engineering-hll/)\n                // and original paper (Fig. 3) for information on 2^L and\n                // \"large range correction\" cutoff.\n                final double expected = Math.pow(2, Math.pow(2, regWidth) - 2 + log2m) / 30.0;\n                assertEquals(cutoff, expected, 0.0001);\n            }\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3b5ee4c66244bdfcc4796a114519d47701b2c026":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6faa211c4af605e3cf078a76d200c1dc348973f5"],"6faa211c4af605e3cf078a76d200c1dc348973f5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3b5ee4c66244bdfcc4796a114519d47701b2c026"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3b5ee4c66244bdfcc4796a114519d47701b2c026","6faa211c4af605e3cf078a76d200c1dc348973f5"],"3b5ee4c66244bdfcc4796a114519d47701b2c026":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6faa211c4af605e3cf078a76d200c1dc348973f5":["3b5ee4c66244bdfcc4796a114519d47701b2c026"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}