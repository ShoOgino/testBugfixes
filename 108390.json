{"path":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","commits":[{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single().mjava","sourceNew":"  // Fields 1-4 indexed together:\n  private Searcher single(Random random) throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","sourceOld":"  // Fields 1-4 indexed together:\n  private Searcher single() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","sourceNew":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory(random);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","sourceOld":"  // Fields 1-4 indexed together:\n  private Searcher single(Random random) throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","sourceNew":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","sourceOld":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory(random);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"132903c28af3aa6f67284b78de91c0f0a99488c2","date":1284282129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","sourceNew":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","sourceOld":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document d1 = new Document();\n    d1.add(new Field(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(new Field(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(new Field(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(new Field(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","pathOld":"/dev/null","sourceNew":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","sourceNew":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","sourceOld":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","sourceNew":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","sourceOld":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","sourceNew":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","sourceOld":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","sourceNew":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","sourceOld":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","sourceNew":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f2\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f3\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f4\", \"v1\", TextField.TYPE_STORED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f2\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f3\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f4\", \"v2\", TextField.TYPE_STORED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","sourceOld":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f2\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f3\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    d1.add(newField(\"f4\", \"v1\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f2\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f3\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    d2.add(newField(\"f4\", \"v2\", Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2","04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"60e3b31201fd9bb5d73884faa5a38c63ea9239f2","date":1315756041,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","sourceNew":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f2\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f3\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f4\", \"v1\", TextField.TYPE_STORED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f2\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f3\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f4\", \"v2\", TextField.TYPE_STORED));\n    w.addDocument(d2);\n    w.close();\n\n    IndexReader ir = IndexReader.open(dir, false);\n    return newSearcher(ir);\n  }\n\n","sourceOld":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f2\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f3\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f4\", \"v1\", TextField.TYPE_STORED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f2\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f3\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f4\", \"v2\", TextField.TYPE_STORED));\n    w.addDocument(d2);\n    w.close();\n\n    return new IndexSearcher(dir, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1c5b026d03cbbb03ca4c0b97d14e9839682281dc","date":1323049298,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","sourceNew":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f2\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f3\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f4\", \"v1\", TextField.TYPE_STORED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f2\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f3\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f4\", \"v2\", TextField.TYPE_STORED));\n    w.addDocument(d2);\n    w.close();\n\n    IndexReader ir = IndexReader.open(dir);\n    return newSearcher(ir);\n  }\n\n","sourceOld":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f2\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f3\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f4\", \"v1\", TextField.TYPE_STORED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f2\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f3\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f4\", \"v2\", TextField.TYPE_STORED));\n    w.addDocument(d2);\n    w.close();\n\n    IndexReader ir = IndexReader.open(dir, false);\n    return newSearcher(ir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","sourceNew":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f2\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f3\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f4\", \"v1\", TextField.TYPE_STORED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f2\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f3\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f4\", \"v2\", TextField.TYPE_STORED));\n    w.addDocument(d2);\n    w.close();\n\n    IndexReader ir = IndexReader.open(dir);\n    return newSearcher(ir);\n  }\n\n","sourceOld":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f2\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f3\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f4\", \"v1\", TextField.TYPE_STORED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f2\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f3\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f4\", \"v2\", TextField.TYPE_STORED));\n    w.addDocument(d2);\n    w.close();\n\n    IndexReader ir = IndexReader.open(dir, false);\n    return newSearcher(ir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","sourceNew":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f2\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f3\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f4\", \"v1\", TextField.TYPE_STORED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f2\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f3\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f4\", \"v2\", TextField.TYPE_STORED));\n    w.addDocument(d2);\n    w.close();\n\n    IndexReader ir = IndexReader.open(dir);\n    return newSearcher(ir);\n  }\n\n","sourceOld":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f2\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f3\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f4\", \"v1\", TextField.TYPE_STORED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f2\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f3\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f4\", \"v2\", TextField.TYPE_STORED));\n    w.addDocument(d2);\n    w.close();\n\n    IndexReader ir = IndexReader.open(dir, false);\n    return newSearcher(ir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e32cce0ae9c0f432ccb5f8649a16a5a74e6ef92","date":1327858596,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","sourceNew":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f2\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f3\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f4\", \"v1\", TextField.TYPE_STORED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f2\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f3\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f4\", \"v2\", TextField.TYPE_STORED));\n    w.addDocument(d2);\n    w.close();\n\n    DirectoryReader ir = DirectoryReader.open(dir);\n    return newSearcher(ir);\n  }\n\n","sourceOld":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f2\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f3\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f4\", \"v1\", TextField.TYPE_STORED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f2\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f3\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f4\", \"v2\", TextField.TYPE_STORED));\n    w.addDocument(d2);\n    w.close();\n\n    IndexReader ir = IndexReader.open(dir);\n    return newSearcher(ir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","sourceNew":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f2\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f3\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f4\", \"v1\", TextField.TYPE_STORED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f2\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f3\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f4\", \"v2\", TextField.TYPE_STORED));\n    w.addDocument(d2);\n    w.close();\n\n    DirectoryReader ir = DirectoryReader.open(dir);\n    return newSearcher(ir);\n  }\n\n","sourceOld":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f2\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f3\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f4\", \"v1\", TextField.TYPE_STORED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f2\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f3\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f4\", \"v2\", TextField.TYPE_STORED));\n    w.addDocument(d2);\n    w.close();\n\n    IndexReader ir = IndexReader.open(dir);\n    return newSearcher(ir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9ecf541c11d0df215aa1ea806f826d88fb9b5b9b","date":1328624680,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelAtomicReader#single(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","sourceNew":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f2\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f3\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f4\", \"v1\", TextField.TYPE_STORED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f2\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f3\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f4\", \"v2\", TextField.TYPE_STORED));\n    w.addDocument(d2);\n    w.close();\n\n    DirectoryReader ir = DirectoryReader.open(dir);\n    return newSearcher(ir);\n  }\n\n","sourceOld":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f2\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f3\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f4\", \"v1\", TextField.TYPE_STORED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f2\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f3\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f4\", \"v2\", TextField.TYPE_STORED));\n    w.addDocument(d2);\n    w.close();\n\n    DirectoryReader ir = DirectoryReader.open(dir);\n    return newSearcher(ir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9ecf541c11d0df215aa1ea806f826d88fb9b5b9b","date":1328624680,"type":6,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelCompositeReader#single(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","sourceNew":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f2\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f3\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f4\", \"v1\", TextField.TYPE_STORED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f2\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f3\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f4\", \"v2\", TextField.TYPE_STORED));\n    w.addDocument(d2);\n    w.close();\n\n    DirectoryReader ir = DirectoryReader.open(dir);\n    return newSearcher(ir);\n  }\n\n","sourceOld":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f2\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f3\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f4\", \"v1\", TextField.TYPE_STORED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f2\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f3\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f4\", \"v2\", TextField.TYPE_STORED));\n    w.addDocument(d2);\n    w.close();\n\n    DirectoryReader ir = DirectoryReader.open(dir);\n    return newSearcher(ir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"08b385e33541f6749e71618c9ab36fad908a7ed0","date":1328629771,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelAtomicReader#single(Random).mjava","sourceNew":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f2\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f3\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f4\", \"v1\", TextField.TYPE_STORED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f2\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f3\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f4\", \"v2\", TextField.TYPE_STORED));\n    w.addDocument(d2);\n    w.close();\n\n    DirectoryReader ir = DirectoryReader.open(dir);\n    return newSearcher(ir);\n  }\n\n","sourceOld":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f2\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f3\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f4\", \"v1\", TextField.TYPE_STORED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f2\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f3\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f4\", \"v2\", TextField.TYPE_STORED));\n    w.addDocument(d2);\n    w.close();\n\n    DirectoryReader ir = DirectoryReader.open(dir);\n    return newSearcher(ir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#single(Random).mjava","sourceNew":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f2\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f3\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f4\", \"v1\", TextField.TYPE_STORED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f2\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f3\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f4\", \"v2\", TextField.TYPE_STORED));\n    w.addDocument(d2);\n    w.close();\n\n    DirectoryReader ir = DirectoryReader.open(dir);\n    return newSearcher(ir);\n  }\n\n","sourceOld":"  // Fields 1-4 indexed together:\n  private IndexSearcher single(Random random) throws IOException {\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d1 = new Document();\n    d1.add(newField(\"f1\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f2\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f3\", \"v1\", TextField.TYPE_STORED));\n    d1.add(newField(\"f4\", \"v1\", TextField.TYPE_STORED));\n    w.addDocument(d1);\n    Document d2 = new Document();\n    d2.add(newField(\"f1\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f2\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f3\", \"v2\", TextField.TYPE_STORED));\n    d2.add(newField(\"f4\", \"v2\", TextField.TYPE_STORED));\n    w.addDocument(d2);\n    w.close();\n\n    DirectoryReader ir = DirectoryReader.open(dir);\n    return newSearcher(ir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"08b385e33541f6749e71618c9ab36fad908a7ed0":["9ecf541c11d0df215aa1ea806f826d88fb9b5b9b"],"2e32cce0ae9c0f432ccb5f8649a16a5a74e6ef92":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["60e3b31201fd9bb5d73884faa5a38c63ea9239f2","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["08b385e33541f6749e71618c9ab36fad908a7ed0"],"9ecf541c11d0df215aa1ea806f826d88fb9b5b9b":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["132903c28af3aa6f67284b78de91c0f0a99488c2","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"60e3b31201fd9bb5d73884faa5a38c63ea9239f2":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["60e3b31201fd9bb5d73884faa5a38c63ea9239f2"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","132903c28af3aa6f67284b78de91c0f0a99488c2"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3615ce4a1f785ae1b779244de52c6a7d99227e60","2e32cce0ae9c0f432ccb5f8649a16a5a74e6ef92"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a3776dccca01c11e7046323cfad46a3b4a471233":["132903c28af3aa6f67284b78de91c0f0a99488c2","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["60e3b31201fd9bb5d73884faa5a38c63ea9239f2","1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"08b385e33541f6749e71618c9ab36fad908a7ed0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2e32cce0ae9c0f432ccb5f8649a16a5a74e6ef92":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9ecf541c11d0df215aa1ea806f826d88fb9b5b9b":["08b385e33541f6749e71618c9ab36fad908a7ed0"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"60e3b31201fd9bb5d73884faa5a38c63ea9239f2":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","1c5b026d03cbbb03ca4c0b97d14e9839682281dc","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["135621f3a0670a9394eb563224a3b76cc4dddc0f","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["9ecf541c11d0df215aa1ea806f826d88fb9b5b9b"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b21422ff1d1d56499dec481f193b402e5e8def5b"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["2e32cce0ae9c0f432ccb5f8649a16a5a74e6ef92","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","5cab9a86bd67202d20b6adc463008c8e982b070a"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["60e3b31201fd9bb5d73884faa5a38c63ea9239f2"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}