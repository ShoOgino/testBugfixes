{"path":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#checkNoTwoShardsUseTheSameIndexDir().mjava","commits":[{"id":"f0a4eeff354e8081247783f424a8e5a0fe106633","date":1355250757,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#checkNoTwoShardsUseTheSameIndexDir().mjava","pathOld":"/dev/null","sourceNew":"  private void checkNoTwoShardsUseTheSameIndexDir() throws Exception {\n    Map<String, Set<String>> indexDirToShardNamesMap = new HashMap<String, Set<String>>();\n    \n    List<MBeanServer> servers = new LinkedList<MBeanServer>();\n    servers.add(ManagementFactory.getPlatformMBeanServer());\n    servers.addAll(MBeanServerFactory.findMBeanServer(null));\n    for (final MBeanServer server : servers) {\n      Set<ObjectName> mbeans = new HashSet<ObjectName>();\n      mbeans.addAll(server.queryNames(null, null));\n      for (final ObjectName mbean : mbeans) {\n        Object value;\n        Object indexDir;\n        Object name;\n        try {\n          if (((value = server.getAttribute(mbean, \"category\")) != null && value.toString().equals(Category.CORE.toString())) &&\n              ((value = server.getAttribute(mbean, \"source\")) != null && value.toString().contains(SolrCore.class.getSimpleName())) &&\n              ((indexDir = server.getAttribute(mbean, \"indexDir\")) != null) &&\n              ((name = server.getAttribute(mbean, \"name\")) != null)) {\n              if (!indexDirToShardNamesMap.containsKey(indexDir.toString())) {\n                indexDirToShardNamesMap.put(indexDir.toString(), new HashSet<String>());\n              }\n              indexDirToShardNamesMap.get(indexDir.toString()).add(name.toString());\n          }\n        } catch (Exception e) {\n          // ignore, just continue - probably a \"category\" or \"source\" attribute not found\n        }\n      }\n    }\n    \n    assertTrue(\"Something is broken in the assert for no shards using the same indexDir - probably something was changed in the attributes published in the MBean of \" + SolrCore.class.getSimpleName(), indexDirToShardNamesMap.size() > 0);\n    for (Entry<String, Set<String>> entry : indexDirToShardNamesMap.entrySet()) {\n      if (entry.getValue().size() > 1) {\n        fail(\"We have shards using the same indexDir. E.g. shards \" + entry.getValue().toString() + \" all use indexDir \" + entry.getKey());\n      }\n    }\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["273ff2f5b0b365591fcbe91ea23b5e97027ca60d","273ff2f5b0b365591fcbe91ea23b5e97027ca60d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0eff89b16ebd0046c839c5d02ee44500be5c7886","date":1355766557,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#checkNoTwoShardsUseTheSameIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#checkNoTwoShardsUseTheSameIndexDir().mjava","sourceNew":"  private void checkNoTwoShardsUseTheSameIndexDir() throws Exception {\n    Map<String, Set<String>> indexDirToShardNamesMap = new HashMap<String, Set<String>>();\n    \n    List<MBeanServer> servers = new LinkedList<MBeanServer>();\n    servers.add(ManagementFactory.getPlatformMBeanServer());\n    servers.addAll(MBeanServerFactory.findMBeanServer(null));\n    for (final MBeanServer server : servers) {\n      Set<ObjectName> mbeans = new HashSet<ObjectName>();\n      mbeans.addAll(server.queryNames(null, null));\n      for (final ObjectName mbean : mbeans) {\n        Object value;\n        Object indexDir;\n        Object name;\n        try {\n          if (((value = server.getAttribute(mbean, \"category\")) != null && value.toString().equals(Category.CORE.toString())) &&\n              ((value = server.getAttribute(mbean, \"source\")) != null && value.toString().contains(SolrCore.class.getSimpleName())) &&\n              ((indexDir = server.getAttribute(mbean, \"indexDir\")) != null) &&\n              ((name = server.getAttribute(mbean, \"name\")) != null)) {\n              if (!indexDirToShardNamesMap.containsKey(indexDir.toString())) {\n                indexDirToShardNamesMap.put(indexDir.toString(), new HashSet<String>());\n              }\n              indexDirToShardNamesMap.get(indexDir.toString()).add(name.toString());\n          }\n        } catch (Exception e) {\n          // ignore, just continue - probably a \"category\" or \"source\" attribute not found\n        }\n      }\n    }\n    \n    assertTrue(\"Something is broken in the assert for no shards using the same indexDir - probably something was changed in the attributes published in the MBean of \" + SolrCore.class.getSimpleName(), indexDirToShardNamesMap.size() > 0);\n    for (Entry<String, Set<String>> entry : indexDirToShardNamesMap.entrySet()) {\n      if (entry.getValue().size() > 1) {\n        fail(\"We have shards using the same indexDir. E.g. shards \" + entry.getValue().toString() + \" all use indexDir \" + entry.getKey());\n      }\n    }\n    \n  }\n\n","sourceOld":"  private void checkNoTwoShardsUseTheSameIndexDir() throws Exception {\n    Map<String, Set<String>> indexDirToShardNamesMap = new HashMap<String, Set<String>>();\n    \n    List<MBeanServer> servers = new LinkedList<MBeanServer>();\n    servers.add(ManagementFactory.getPlatformMBeanServer());\n    servers.addAll(MBeanServerFactory.findMBeanServer(null));\n    for (final MBeanServer server : servers) {\n      Set<ObjectName> mbeans = new HashSet<ObjectName>();\n      mbeans.addAll(server.queryNames(null, null));\n      for (final ObjectName mbean : mbeans) {\n        Object value;\n        Object indexDir;\n        Object name;\n        try {\n          if (((value = server.getAttribute(mbean, \"category\")) != null && value.toString().equals(Category.CORE.toString())) &&\n              ((value = server.getAttribute(mbean, \"source\")) != null && value.toString().contains(SolrCore.class.getSimpleName())) &&\n              ((indexDir = server.getAttribute(mbean, \"indexDir\")) != null) &&\n              ((name = server.getAttribute(mbean, \"name\")) != null)) {\n              if (!indexDirToShardNamesMap.containsKey(indexDir.toString())) {\n                indexDirToShardNamesMap.put(indexDir.toString(), new HashSet<String>());\n              }\n              indexDirToShardNamesMap.get(indexDir.toString()).add(name.toString());\n          }\n        } catch (Exception e) {\n          // ignore, just continue - probably a \"category\" or \"source\" attribute not found\n        }\n      }\n    }\n    \n    assertTrue(\"Something is broken in the assert for no shards using the same indexDir - probably something was changed in the attributes published in the MBean of \" + SolrCore.class.getSimpleName(), indexDirToShardNamesMap.size() > 0);\n    for (Entry<String, Set<String>> entry : indexDirToShardNamesMap.entrySet()) {\n      if (entry.getValue().size() > 1) {\n        fail(\"We have shards using the same indexDir. E.g. shards \" + entry.getValue().toString() + \" all use indexDir \" + entry.getKey());\n      }\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"f0a4eeff354e8081247783f424a8e5a0fe106633":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0eff89b16ebd0046c839c5d02ee44500be5c7886":["f0a4eeff354e8081247783f424a8e5a0fe106633"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0eff89b16ebd0046c839c5d02ee44500be5c7886"]},"commit2Childs":{"f0a4eeff354e8081247783f424a8e5a0fe106633":["0eff89b16ebd0046c839c5d02ee44500be5c7886"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f0a4eeff354e8081247783f424a8e5a0fe106633"],"0eff89b16ebd0046c839c5d02ee44500be5c7886":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}