{"path":"lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser#jj_scan_token(int).mjava","commits":[{"id":"790c3f61c9b891d66d919c5d10db9fa5216eb0f1","date":1274818604,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser#jj_scan_token(int).mjava","pathOld":"lucene/src/demo/org/apache/lucene/demo/html/HTMLParser#jj_scan_token(int).mjava","sourceNew":"  private boolean jj_scan_token(int kind) {\n    if (jj_scanpos == jj_lastpos) {\n      jj_la--;\n      if (jj_scanpos.next == null) {\n        jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();\n      } else {\n        jj_lastpos = jj_scanpos = jj_scanpos.next;\n      }\n    } else {\n      jj_scanpos = jj_scanpos.next;\n    }\n    if (jj_rescan) {\n      int i = 0; Token tok = token;\n      while (tok != null && tok != jj_scanpos) { i++; tok = tok.next; }\n      if (tok != null) jj_add_error_token(kind, i);\n    }\n    if (jj_scanpos.kind != kind) return true;\n    if (jj_la == 0 && jj_scanpos == jj_lastpos) throw jj_ls;\n    return false;\n  }\n\n","sourceOld":"  private boolean jj_scan_token(int kind) {\n    if (jj_scanpos == jj_lastpos) {\n      jj_la--;\n      if (jj_scanpos.next == null) {\n        jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();\n      } else {\n        jj_lastpos = jj_scanpos = jj_scanpos.next;\n      }\n    } else {\n      jj_scanpos = jj_scanpos.next;\n    }\n    if (jj_rescan) {\n      int i = 0; Token tok = token;\n      while (tok != null && tok != jj_scanpos) { i++; tok = tok.next; }\n      if (tok != null) jj_add_error_token(kind, i);\n    }\n    if (jj_scanpos.kind != kind) return true;\n    if (jj_la == 0 && jj_scanpos == jj_lastpos) throw jj_ls;\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81ea17596392ebd5d12741eb9e3b2516258b9413","date":1298090976,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/demohtml/HTMLParser#jj_scan_token(int).mjava","pathOld":"lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser#jj_scan_token(int).mjava","sourceNew":"  private boolean jj_scan_token(int kind) {\n    if (jj_scanpos == jj_lastpos) {\n      jj_la--;\n      if (jj_scanpos.next == null) {\n        jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();\n      } else {\n        jj_lastpos = jj_scanpos = jj_scanpos.next;\n      }\n    } else {\n      jj_scanpos = jj_scanpos.next;\n    }\n    if (jj_rescan) {\n      int i = 0; Token tok = token;\n      while (tok != null && tok != jj_scanpos) { i++; tok = tok.next; }\n      if (tok != null) jj_add_error_token(kind, i);\n    }\n    if (jj_scanpos.kind != kind) return true;\n    if (jj_la == 0 && jj_scanpos == jj_lastpos) throw jj_ls;\n    return false;\n  }\n\n","sourceOld":"  private boolean jj_scan_token(int kind) {\n    if (jj_scanpos == jj_lastpos) {\n      jj_la--;\n      if (jj_scanpos.next == null) {\n        jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();\n      } else {\n        jj_lastpos = jj_scanpos = jj_scanpos.next;\n      }\n    } else {\n      jj_scanpos = jj_scanpos.next;\n    }\n    if (jj_rescan) {\n      int i = 0; Token tok = token;\n      while (tok != null && tok != jj_scanpos) { i++; tok = tok.next; }\n      if (tok != null) jj_add_error_token(kind, i);\n    }\n    if (jj_scanpos.kind != kind) return true;\n    if (jj_la == 0 && jj_scanpos == jj_lastpos) throw jj_ls;\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/demohtml/HTMLParser#jj_scan_token(int).mjava","pathOld":"lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser#jj_scan_token(int).mjava","sourceNew":"  private boolean jj_scan_token(int kind) {\n    if (jj_scanpos == jj_lastpos) {\n      jj_la--;\n      if (jj_scanpos.next == null) {\n        jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();\n      } else {\n        jj_lastpos = jj_scanpos = jj_scanpos.next;\n      }\n    } else {\n      jj_scanpos = jj_scanpos.next;\n    }\n    if (jj_rescan) {\n      int i = 0; Token tok = token;\n      while (tok != null && tok != jj_scanpos) { i++; tok = tok.next; }\n      if (tok != null) jj_add_error_token(kind, i);\n    }\n    if (jj_scanpos.kind != kind) return true;\n    if (jj_la == 0 && jj_scanpos == jj_lastpos) throw jj_ls;\n    return false;\n  }\n\n","sourceOld":"  private boolean jj_scan_token(int kind) {\n    if (jj_scanpos == jj_lastpos) {\n      jj_la--;\n      if (jj_scanpos.next == null) {\n        jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();\n      } else {\n        jj_lastpos = jj_scanpos = jj_scanpos.next;\n      }\n    } else {\n      jj_scanpos = jj_scanpos.next;\n    }\n    if (jj_rescan) {\n      int i = 0; Token tok = token;\n      while (tok != null && tok != jj_scanpos) { i++; tok = tok.next; }\n      if (tok != null) jj_add_error_token(kind, i);\n    }\n    if (jj_scanpos.kind != kind) return true;\n    if (jj_la == 0 && jj_scanpos == jj_lastpos) throw jj_ls;\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/demohtml/HTMLParser#jj_scan_token(int).mjava","pathOld":"lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser#jj_scan_token(int).mjava","sourceNew":"  private boolean jj_scan_token(int kind) {\n    if (jj_scanpos == jj_lastpos) {\n      jj_la--;\n      if (jj_scanpos.next == null) {\n        jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();\n      } else {\n        jj_lastpos = jj_scanpos = jj_scanpos.next;\n      }\n    } else {\n      jj_scanpos = jj_scanpos.next;\n    }\n    if (jj_rescan) {\n      int i = 0; Token tok = token;\n      while (tok != null && tok != jj_scanpos) { i++; tok = tok.next; }\n      if (tok != null) jj_add_error_token(kind, i);\n    }\n    if (jj_scanpos.kind != kind) return true;\n    if (jj_la == 0 && jj_scanpos == jj_lastpos) throw jj_ls;\n    return false;\n  }\n\n","sourceOld":"  private boolean jj_scan_token(int kind) {\n    if (jj_scanpos == jj_lastpos) {\n      jj_la--;\n      if (jj_scanpos.next == null) {\n        jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();\n      } else {\n        jj_lastpos = jj_scanpos = jj_scanpos.next;\n      }\n    } else {\n      jj_scanpos = jj_scanpos.next;\n    }\n    if (jj_rescan) {\n      int i = 0; Token tok = token;\n      while (tok != null && tok != jj_scanpos) { i++; tok = tok.next; }\n      if (tok != null) jj_add_error_token(kind, i);\n    }\n    if (jj_scanpos.kind != kind) return true;\n    if (jj_la == 0 && jj_scanpos == jj_lastpos) throw jj_ls;\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f1bdbf92da222965b46c0a942c3857ba56e5c638":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1","81ea17596392ebd5d12741eb9e3b2516258b9413"],"81ea17596392ebd5d12741eb9e3b2516258b9413":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1","81ea17596392ebd5d12741eb9e3b2516258b9413"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["81ea17596392ebd5d12741eb9e3b2516258b9413"],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"f1bdbf92da222965b46c0a942c3857ba56e5c638":[],"81ea17596392ebd5d12741eb9e3b2516258b9413":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["f1bdbf92da222965b46c0a942c3857ba56e5c638","81ea17596392ebd5d12741eb9e3b2516258b9413","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}