{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(List[AtomicReader],SegmentInfo,InfoStream,Directory,MergeState.CheckAbort,FieldInfos.FieldNumbers,IOContext,boolean).mjava","commits":[{"id":"1f3b037cd083286b2af89f96e768f85dcd8072d6","date":1396337805,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(List[AtomicReader],SegmentInfo,InfoStream,Directory,MergeState.CheckAbort,FieldInfos.FieldNumbers,IOContext,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(List[AtomicReader],SegmentInfo,InfoStream,Directory,MergeState.CheckAbort,FieldInfos.FieldNumbers,IOContext).mjava","sourceNew":"  // note, just like in codec apis Directory 'dir' is NOT the same as segmentInfo.dir!!\n  SegmentMerger(List<AtomicReader> readers, SegmentInfo segmentInfo, InfoStream infoStream, Directory dir,\n                MergeState.CheckAbort checkAbort, FieldInfos.FieldNumbers fieldNumbers, IOContext context, boolean validate) throws IOException {\n    // validate incoming readers\n    if (validate) {\n      for (AtomicReader reader : readers) {\n        reader.checkIntegrity();\n      }\n    }\n    mergeState = new MergeState(readers, segmentInfo, infoStream, checkAbort);\n    directory = dir;\n    this.codec = segmentInfo.getCodec();\n    this.context = context;\n    this.fieldInfosBuilder = new FieldInfos.Builder(fieldNumbers);\n    mergeState.segmentInfo.setDocCount(setDocMaps());\n  }\n\n","sourceOld":"  // note, just like in codec apis Directory 'dir' is NOT the same as segmentInfo.dir!!\n  SegmentMerger(List<AtomicReader> readers, SegmentInfo segmentInfo, InfoStream infoStream, Directory dir,\n                MergeState.CheckAbort checkAbort, FieldInfos.FieldNumbers fieldNumbers, IOContext context) throws IOException {\n    mergeState = new MergeState(readers, segmentInfo, infoStream, checkAbort);\n    directory = dir;\n    this.codec = segmentInfo.getCodec();\n    this.context = context;\n    this.fieldInfosBuilder = new FieldInfos.Builder(fieldNumbers);\n    mergeState.segmentInfo.setDocCount(setDocMaps());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":1,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(List[AtomicReader],SegmentInfo,InfoStream,Directory,MergeState.CheckAbort,FieldInfos.FieldNumbers,IOContext,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(List[AtomicReader],SegmentInfo,InfoStream,Directory,MergeState.CheckAbort,FieldInfos.FieldNumbers,IOContext).mjava","sourceNew":"  // note, just like in codec apis Directory 'dir' is NOT the same as segmentInfo.dir!!\n  SegmentMerger(List<AtomicReader> readers, SegmentInfo segmentInfo, InfoStream infoStream, Directory dir,\n                MergeState.CheckAbort checkAbort, FieldInfos.FieldNumbers fieldNumbers, IOContext context, boolean validate) throws IOException {\n    // validate incoming readers\n    if (validate) {\n      for (AtomicReader reader : readers) {\n        reader.checkIntegrity();\n      }\n    }\n    mergeState = new MergeState(readers, segmentInfo, infoStream, checkAbort);\n    directory = dir;\n    this.codec = segmentInfo.getCodec();\n    this.context = context;\n    this.fieldInfosBuilder = new FieldInfos.Builder(fieldNumbers);\n    mergeState.segmentInfo.setDocCount(setDocMaps());\n  }\n\n","sourceOld":"  // note, just like in codec apis Directory 'dir' is NOT the same as segmentInfo.dir!!\n  SegmentMerger(List<AtomicReader> readers, SegmentInfo segmentInfo, InfoStream infoStream, Directory dir,\n                MergeState.CheckAbort checkAbort, FieldInfos.FieldNumbers fieldNumbers, IOContext context) throws IOException {\n    mergeState = new MergeState(readers, segmentInfo, infoStream, checkAbort);\n    directory = dir;\n    this.codec = segmentInfo.getCodec();\n    this.context = context;\n    this.fieldInfosBuilder = new FieldInfos.Builder(fieldNumbers);\n    mergeState.segmentInfo.setDocCount(setDocMaps());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":4,"author":"Ryan Ernst","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(List[AtomicReader],SegmentInfo,InfoStream,Directory,MergeState.CheckAbort,FieldInfos.FieldNumbers,IOContext,boolean).mjava","sourceNew":null,"sourceOld":"  // note, just like in codec apis Directory 'dir' is NOT the same as segmentInfo.dir!!\n  SegmentMerger(List<AtomicReader> readers, SegmentInfo segmentInfo, InfoStream infoStream, Directory dir,\n                MergeState.CheckAbort checkAbort, FieldInfos.FieldNumbers fieldNumbers, IOContext context, boolean validate) throws IOException {\n    // validate incoming readers\n    if (validate) {\n      for (AtomicReader reader : readers) {\n        reader.checkIntegrity();\n      }\n    }\n    mergeState = new MergeState(readers, segmentInfo, infoStream, checkAbort);\n    directory = dir;\n    this.codec = segmentInfo.getCodec();\n    this.context = context;\n    this.fieldInfosBuilder = new FieldInfos.Builder(fieldNumbers);\n    mergeState.segmentInfo.setDocCount(setDocMaps());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["1f3b037cd083286b2af89f96e768f85dcd8072d6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["5eb2511ababf862ea11e10761c70ee560cd84510","c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5eb2511ababf862ea11e10761c70ee560cd84510","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}