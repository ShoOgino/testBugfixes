{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/NumberRangeFacetsTest#searchForDocBits(Query).mjava","commits":[{"id":"672b198fc3dce868916c727917cae58c2906763d","date":1443669960,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/NumberRangeFacetsTest#searchForDocBits(Query).mjava","pathOld":"/dev/null","sourceNew":"  private Bits searchForDocBits(Query query) throws IOException {\n    FixedBitSet bitSet = new FixedBitSet(indexSearcher.getIndexReader().maxDoc());\n    indexSearcher.search(query,\n        new SimpleCollector() {\n          int leafDocBase;\n          @Override\n          public void collect(int doc) throws IOException {\n            bitSet.set(leafDocBase + doc);\n          }\n\n          @Override\n          protected void doSetNextReader(LeafReaderContext context) throws IOException {\n            leafDocBase = context.docBase;\n          }\n\n          @Override\n          public boolean needsScores() {\n            return false;\n          }\n        });\n    return bitSet;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/NumberRangeFacetsTest#searchForDocBits(Query).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/NumberRangeFacetsTest#searchForDocBits(Query).mjava","sourceNew":"  private Bits searchForDocBits(Query query) throws IOException {\n    FixedBitSet bitSet = new FixedBitSet(indexSearcher.getIndexReader().maxDoc());\n    indexSearcher.search(query,\n        new SimpleCollector() {\n          int leafDocBase;\n          @Override\n          public void collect(int doc) throws IOException {\n            bitSet.set(leafDocBase + doc);\n          }\n\n          @Override\n          protected void doSetNextReader(LeafReaderContext context) throws IOException {\n            leafDocBase = context.docBase;\n          }\n\n          @Override\n          public boolean needsScores() {\n            return false;\n          }\n        });\n    return bitSet;\n  }\n\n","sourceOld":"  private Bits searchForDocBits(Query query) throws IOException {\n    FixedBitSet bitSet = new FixedBitSet(indexSearcher.getIndexReader().maxDoc());\n    indexSearcher.search(query,\n        new SimpleCollector() {\n          int leafDocBase;\n          @Override\n          public void collect(int doc) throws IOException {\n            bitSet.set(leafDocBase + doc);\n          }\n\n          @Override\n          protected void doSetNextReader(LeafReaderContext context) throws IOException {\n            leafDocBase = context.docBase;\n          }\n\n          @Override\n          public boolean needsScores() {\n            return false;\n          }\n        });\n    return bitSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/NumberRangeFacetsTest#searchForDocBits(Query).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/NumberRangeFacetsTest#searchForDocBits(Query).mjava","sourceNew":"  private Bits searchForDocBits(Query query) throws IOException {\n    FixedBitSet bitSet = new FixedBitSet(indexSearcher.getIndexReader().maxDoc());\n    indexSearcher.search(query,\n        new SimpleCollector() {\n          int leafDocBase;\n          @Override\n          public void collect(int doc) throws IOException {\n            bitSet.set(leafDocBase + doc);\n          }\n\n          @Override\n          protected void doSetNextReader(LeafReaderContext context) throws IOException {\n            leafDocBase = context.docBase;\n          }\n\n          @Override\n          public boolean needsScores() {\n            return false;\n          }\n        });\n    return bitSet;\n  }\n\n","sourceOld":"  private Bits searchForDocBits(Query query) throws IOException {\n    FixedBitSet bitSet = new FixedBitSet(indexSearcher.getIndexReader().maxDoc());\n    indexSearcher.search(query,\n        new SimpleCollector() {\n          int leafDocBase;\n          @Override\n          public void collect(int doc) throws IOException {\n            bitSet.set(leafDocBase + doc);\n          }\n\n          @Override\n          protected void doSetNextReader(LeafReaderContext context) throws IOException {\n            leafDocBase = context.docBase;\n          }\n\n          @Override\n          public boolean needsScores() {\n            return false;\n          }\n        });\n    return bitSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["672b198fc3dce868916c727917cae58c2906763d","112d77ac8d3e10a362516ad834c9a11d35c94234"],"672b198fc3dce868916c727917cae58c2906763d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["672b198fc3dce868916c727917cae58c2906763d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"672b198fc3dce868916c727917cae58c2906763d":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["672b198fc3dce868916c727917cae58c2906763d"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}