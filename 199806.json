{"path":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testBooleanQuery().mjava","commits":[{"id":"36f91bf9cfc9d0c3155edab43359e7670ea8a5af","date":1269580873,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testBooleanQuery().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testBooleanQuery().mjava","sourceNew":"  public void testBooleanQuery() throws Exception {\n    BooleanQuery.setMaxClauseCount(2);\n    try {\n      getParser(new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).parse(\"one two three\");\n      fail(\"ParseException expected due to too many boolean clauses\");\n    } catch (ParseException expected) {\n      // too many boolean clauses, so ParseException is expected\n    }\n  }\n\n","sourceOld":"  public void testBooleanQuery() throws Exception {\n    BooleanQuery.setMaxClauseCount(2);\n    try {\n      getParser(new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).parse(\"one two three\");\n      fail(\"ParseException expected due to too many boolean clauses\");\n    } catch (ParseException expected) {\n      // too many boolean clauses, so ParseException is expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7f8e68717c68517265937c911e1ce9f25750247","date":1274071103,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testBooleanQuery().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testBooleanQuery().mjava","sourceNew":"  public void testBooleanQuery() throws Exception {\n    BooleanQuery.setMaxClauseCount(2);\n    try {\n      getParser(new MockAnalyzer(MockTokenizer.WHITESPACE, false)).parse(\"one two three\");\n      fail(\"ParseException expected due to too many boolean clauses\");\n    } catch (ParseException expected) {\n      // too many boolean clauses, so ParseException is expected\n    }\n  }\n\n","sourceOld":"  public void testBooleanQuery() throws Exception {\n    BooleanQuery.setMaxClauseCount(2);\n    try {\n      getParser(new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).parse(\"one two three\");\n      fail(\"ParseException expected due to too many boolean clauses\");\n    } catch (ParseException expected) {\n      // too many boolean clauses, so ParseException is expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ecaea79e307d83311c31273b0ea89b9fdb0c5a32","date":1287584790,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testBooleanQuery().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testBooleanQuery().mjava","sourceNew":"  public void testBooleanQuery() throws Exception {\n    BooleanQuery.setMaxClauseCount(2);\n    try {\n      getParser(new MockAnalyzer(MockTokenizer.WHITESPACE, false)).parse(\"one two three\", \"field\");\n      fail(\"ParseException expected due to too many boolean clauses\");\n    } catch (QueryNodeException expected) {\n      // too many boolean clauses, so ParseException is expected\n    }\n  }\n\n","sourceOld":"  public void testBooleanQuery() throws Exception {\n    BooleanQuery.setMaxClauseCount(2);\n    try {\n      getParser(new MockAnalyzer(MockTokenizer.WHITESPACE, false)).parse(\"one two three\");\n      fail(\"ParseException expected due to too many boolean clauses\");\n    } catch (ParseException expected) {\n      // too many boolean clauses, so ParseException is expected\n    }\n  }\n\n","bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8017ab6544f30f93b106e419e7298173bad77f69","date":1287608126,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testBooleanQuery().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testBooleanQuery().mjava","sourceNew":"  public void testBooleanQuery() throws Exception {\n    BooleanQuery.setMaxClauseCount(2);\n    try {\n      getParser(new MockAnalyzer(MockTokenizer.WHITESPACE, false)).parse(\"one two three\", \"field\");\n      fail(\"ParseException expected due to too many boolean clauses\");\n    } catch (QueryNodeException expected) {\n      // too many boolean clauses, so ParseException is expected\n    }\n  }\n\n","sourceOld":"  public void testBooleanQuery() throws Exception {\n    BooleanQuery.setMaxClauseCount(2);\n    try {\n      getParser(new MockAnalyzer(MockTokenizer.WHITESPACE, false)).parse(\"one two three\");\n      fail(\"ParseException expected due to too many boolean clauses\");\n    } catch (ParseException expected) {\n      // too many boolean clauses, so ParseException is expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testBooleanQuery().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testBooleanQuery().mjava","sourceNew":"  public void testBooleanQuery() throws Exception {\n    BooleanQuery.setMaxClauseCount(2);\n    try {\n      getParser(new MockAnalyzer(MockTokenizer.WHITESPACE, false)).parse(\"one two three\", \"field\");\n      fail(\"ParseException expected due to too many boolean clauses\");\n    } catch (QueryNodeException expected) {\n      // too many boolean clauses, so ParseException is expected\n    }\n  }\n\n","sourceOld":"  public void testBooleanQuery() throws Exception {\n    BooleanQuery.setMaxClauseCount(2);\n    try {\n      getParser(new MockAnalyzer(MockTokenizer.WHITESPACE, false)).parse(\"one two three\");\n      fail(\"ParseException expected due to too many boolean clauses\");\n    } catch (ParseException expected) {\n      // too many boolean clauses, so ParseException is expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testBooleanQuery().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testBooleanQuery().mjava","sourceNew":"  public void testBooleanQuery() throws Exception {\n    BooleanQuery.setMaxClauseCount(2);\n    try {\n      getParser(new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)).parse(\"one two three\", \"field\");\n      fail(\"ParseException expected due to too many boolean clauses\");\n    } catch (QueryNodeException expected) {\n      // too many boolean clauses, so ParseException is expected\n    }\n  }\n\n","sourceOld":"  public void testBooleanQuery() throws Exception {\n    BooleanQuery.setMaxClauseCount(2);\n    try {\n      getParser(new MockAnalyzer(MockTokenizer.WHITESPACE, false)).parse(\"one two three\", \"field\");\n      fail(\"ParseException expected due to too many boolean clauses\");\n    } catch (QueryNodeException expected) {\n      // too many boolean clauses, so ParseException is expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testBooleanQuery().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testBooleanQuery().mjava","sourceNew":"  public void testBooleanQuery() throws Exception {\n    BooleanQuery.setMaxClauseCount(2);\n    try {\n      getParser(new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)).parse(\"one two three\", \"field\");\n      fail(\"ParseException expected due to too many boolean clauses\");\n    } catch (QueryNodeException expected) {\n      // too many boolean clauses, so ParseException is expected\n    }\n  }\n\n","sourceOld":"  public void testBooleanQuery() throws Exception {\n    BooleanQuery.setMaxClauseCount(2);\n    try {\n      getParser(new MockAnalyzer(MockTokenizer.WHITESPACE, false)).parse(\"one two three\", \"field\");\n      fail(\"ParseException expected due to too many boolean clauses\");\n    } catch (QueryNodeException expected) {\n      // too many boolean clauses, so ParseException is expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testBooleanQuery().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testBooleanQuery().mjava","sourceNew":"  public void testBooleanQuery() throws Exception {\n    BooleanQuery.setMaxClauseCount(2);\n    try {\n      getParser(new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)).parse(\"one two three\", \"field\");\n      fail(\"ParseException expected due to too many boolean clauses\");\n    } catch (QueryNodeException expected) {\n      // too many boolean clauses, so ParseException is expected\n    }\n  }\n\n","sourceOld":"  public void testBooleanQuery() throws Exception {\n    BooleanQuery.setMaxClauseCount(2);\n    try {\n      getParser(new MockAnalyzer(MockTokenizer.WHITESPACE, false)).parse(\"one two three\", \"field\");\n      fail(\"ParseException expected due to too many boolean clauses\");\n    } catch (QueryNodeException expected) {\n      // too many boolean clauses, so ParseException is expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testBooleanQuery().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testBooleanQuery().mjava","sourceNew":"  public void testBooleanQuery() throws Exception {\n    BooleanQuery.setMaxClauseCount(2);\n    try {\n      getParser(new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)).parse(\"one two three\", \"field\");\n      fail(\"ParseException expected due to too many boolean clauses\");\n    } catch (QueryNodeException expected) {\n      // too many boolean clauses, so ParseException is expected\n    }\n  }\n\n","sourceOld":"  public void testBooleanQuery() throws Exception {\n    BooleanQuery.setMaxClauseCount(2);\n    try {\n      getParser(new MockAnalyzer(MockTokenizer.WHITESPACE, false)).parse(\"one two three\", \"field\");\n      fail(\"ParseException expected due to too many boolean clauses\");\n    } catch (QueryNodeException expected) {\n      // too many boolean clauses, so ParseException is expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1","date":1310612214,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/flexible/precedence/TestPrecedenceQueryParser#testBooleanQuery().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#testBooleanQuery().mjava","sourceNew":"  public void testBooleanQuery() throws Exception {\n    BooleanQuery.setMaxClauseCount(2);\n    try {\n      getParser(new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)).parse(\"one two three\", \"field\");\n      fail(\"ParseException expected due to too many boolean clauses\");\n    } catch (QueryNodeException expected) {\n      // too many boolean clauses, so ParseException is expected\n    }\n  }\n\n","sourceOld":"  public void testBooleanQuery() throws Exception {\n    BooleanQuery.setMaxClauseCount(2);\n    try {\n      getParser(new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)).parse(\"one two three\", \"field\");\n      fail(\"ParseException expected due to too many boolean clauses\");\n    } catch (QueryNodeException expected) {\n      // too many boolean clauses, so ParseException is expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"ecaea79e307d83311c31273b0ea89b9fdb0c5a32":["c7f8e68717c68517265937c911e1ce9f25750247"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["ecaea79e307d83311c31273b0ea89b9fdb0c5a32"],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a3776dccca01c11e7046323cfad46a3b4a471233":["ecaea79e307d83311c31273b0ea89b9fdb0c5a32","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["8017ab6544f30f93b106e419e7298173bad77f69","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"c7f8e68717c68517265937c911e1ce9f25750247":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"8017ab6544f30f93b106e419e7298173bad77f69":["c7f8e68717c68517265937c911e1ce9f25750247","ecaea79e307d83311c31273b0ea89b9fdb0c5a32"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["c7f8e68717c68517265937c911e1ce9f25750247","ecaea79e307d83311c31273b0ea89b9fdb0c5a32"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1"]},"commit2Childs":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ecaea79e307d83311c31273b0ea89b9fdb0c5a32":["f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233","8017ab6544f30f93b106e419e7298173bad77f69","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78"],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["c7f8e68717c68517265937c911e1ce9f25750247"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"c7f8e68717c68517265937c911e1ce9f25750247":["ecaea79e307d83311c31273b0ea89b9fdb0c5a32","8017ab6544f30f93b106e419e7298173bad77f69","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"8017ab6544f30f93b106e419e7298173bad77f69":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}