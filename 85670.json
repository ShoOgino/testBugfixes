{"path":"lucene/core/src/test/org/apache/lucene/search/TestMultiCollector.SetScorerCollector#getLeafCollector(LeafReaderContext).mjava","commits":[{"id":"f1f60cafc4f1179da2c866dd61207060117456e8","date":1454946102,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMultiCollector.SetScorerCollector#getLeafCollector(LeafReaderContext).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public LeafCollector getLeafCollector(LeafReaderContext context) throws IOException {\n      return new FilterLeafCollector(super.getLeafCollector(context)) {\n        @Override\n        public void setScorer(Scorer scorer) throws IOException {\n          super.setScorer(scorer);\n          setScorerCalled.set(true);\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"285244982ce6aa163d1e60a707f0e6e121736ce5","date":1536055304,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMultiCollector.SetScorerCollector#getLeafCollector(LeafReaderContext).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMultiCollector.SetScorerCollector#getLeafCollector(LeafReaderContext).mjava","sourceNew":"    @Override\n    public LeafCollector getLeafCollector(LeafReaderContext context) throws IOException {\n      return new FilterLeafCollector(super.getLeafCollector(context)) {\n        @Override\n        public void setScorer(Scorable scorer) throws IOException {\n          super.setScorer(scorer);\n          setScorerCalled.set(true);\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public LeafCollector getLeafCollector(LeafReaderContext context) throws IOException {\n      return new FilterLeafCollector(super.getLeafCollector(context)) {\n        @Override\n        public void setScorer(Scorer scorer) throws IOException {\n          super.setScorer(scorer);\n          setScorerCalled.set(true);\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"285244982ce6aa163d1e60a707f0e6e121736ce5":["f1f60cafc4f1179da2c866dd61207060117456e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f1f60cafc4f1179da2c866dd61207060117456e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["285244982ce6aa163d1e60a707f0e6e121736ce5"]},"commit2Childs":{"285244982ce6aa163d1e60a707f0e6e121736ce5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f1f60cafc4f1179da2c866dd61207060117456e8"],"f1f60cafc4f1179da2c866dd61207060117456e8":["285244982ce6aa163d1e60a707f0e6e121736ce5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}