{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReportTask#taskReportLine(String,TaskStats).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReportTask#taskReportLine(String,TaskStats).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReportTask#taskReportLine(String,TaskStats).mjava","sourceNew":"  /**\n   * Compute a report line for the given task stat.\n   * @param longestOp size of longest op name in the table.\n   * @param stat task stat to be printed.\n   * @return the report line.\n   */\n  protected String taskReportLine(String longestOp, TaskStats stat) {\n    PerfTask task = stat.getTask();\n    StringBuilder sb = new StringBuilder();\n    sb.append(Format.format(task.getName(), longestOp));\n    String round = (stat.getRound()>=0 ? \"\"+stat.getRound() : \"-\");\n    sb.append(Format.formatPaddLeft(round, ROUND));\n    sb.append(getRunData().getConfig().getColsValuesForValsByRound(stat.getRound()));\n    sb.append(Format.format(stat.getNumRuns(), RUNCNT)); \n    sb.append(Format.format(stat.getCount() / stat.getNumRuns(), RECCNT));\n    long elapsed = (stat.getElapsed()>0 ? stat.getElapsed() : 1); // assume at least 1ms\n    sb.append(Format.format(2, (float) (stat.getCount() * 1000.0 / elapsed), RECSEC));\n    sb.append(Format.format(2, (float) stat.getElapsed() / 1000, ELAPSED));\n    sb.append(Format.format(0, (float) stat.getMaxUsedMem() / stat.getNumRuns(), USEDMEM)); \n    sb.append(Format.format(0, (float) stat.getMaxTotMem() / stat.getNumRuns(), TOTMEM));\n    return sb.toString();\n  }\n\n","sourceOld":"  /**\n   * Compute a report line for the given task stat.\n   * @param longestOp size of longest op name in the table.\n   * @param stat task stat to be printed.\n   * @return the report line.\n   */\n  protected String taskReportLine(String longestOp, TaskStats stat) {\n    PerfTask task = stat.getTask();\n    StringBuilder sb = new StringBuilder();\n    sb.append(Format.format(task.getName(), longestOp));\n    String round = (stat.getRound()>=0 ? \"\"+stat.getRound() : \"-\");\n    sb.append(Format.formatPaddLeft(round, ROUND));\n    sb.append(getRunData().getConfig().getColsValuesForValsByRound(stat.getRound()));\n    sb.append(Format.format(stat.getNumRuns(), RUNCNT)); \n    sb.append(Format.format(stat.getCount() / stat.getNumRuns(), RECCNT));\n    long elapsed = (stat.getElapsed()>0 ? stat.getElapsed() : 1); // assume at least 1ms\n    sb.append(Format.format(2, (float) (stat.getCount() * 1000.0 / elapsed), RECSEC));\n    sb.append(Format.format(2, (float) stat.getElapsed() / 1000, ELAPSED));\n    sb.append(Format.format(0, (float) stat.getMaxUsedMem() / stat.getNumRuns(), USEDMEM)); \n    sb.append(Format.format(0, (float) stat.getMaxTotMem() / stat.getNumRuns(), TOTMEM));\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}