{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createNewHttpClientRequestContext().mjava","commits":[{"id":"859081acf00749f5dd462772c571d611d4a4d2db","date":1459527719,"type":0,"author":"markrmiller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createNewHttpClientRequestContext().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * \n   */\n  public static HttpClientContext createNewHttpClientRequestContext() {\n    return httpClientRequestContextBuilder.createContext();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"070b525fb213c5643ba35e1b60f1a1d4f7b23312","date":1475678176,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createNewHttpClientRequestContext().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createNewHttpClientRequestContext().mjava","sourceNew":"  /**\n   * @deprecated Use {@link #createNewHttpClientRequestContext(Object)}\n   */\n  @Deprecated\n  public static HttpClientContext createNewHttpClientRequestContext() {\n    return httpClientRequestContextBuilder.createContext(null);\n  }\n\n","sourceOld":"  /**\n   * \n   */\n  public static HttpClientContext createNewHttpClientRequestContext() {\n    return httpClientRequestContextBuilder.createContext();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07cebc9816f8c940e8e9683abbdc742fe95e25d7","date":1475696954,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createNewHttpClientRequestContext().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createNewHttpClientRequestContext().mjava","sourceNew":"  /**\n   * \n   */\n  public static HttpClientContext createNewHttpClientRequestContext() {\n    return httpClientRequestContextBuilder.createContext();\n  }\n\n","sourceOld":"  /**\n   * @deprecated Use {@link #createNewHttpClientRequestContext(Object)}\n   */\n  @Deprecated\n  public static HttpClientContext createNewHttpClientRequestContext() {\n    return httpClientRequestContextBuilder.createContext(null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15fb22f207e0cbf913dbc9857b6a4fe30390a625","date":1475989569,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createNewHttpClientRequestContext().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createNewHttpClientRequestContext().mjava","sourceNew":"  /**\n   * Create a HttpClientContext object and {@link HttpClientContext#setUserToken(Object)}\n   * to an internal singleton. It allows to reuse underneath {@link HttpClient} \n   * in connection pools if client authentication is enabled.\n   */\n  public static HttpClientContext createNewHttpClientRequestContext() {\n    HttpClientContext context = new HttpClientContext();\n\n    context.setUserToken(HttpSolrClient.cacheKey);\n    return context;\n  }\n\n","sourceOld":"  /**\n   * \n   */\n  public static HttpClientContext createNewHttpClientRequestContext() {\n    return httpClientRequestContextBuilder.createContext();\n  }\n\n","bugFix":null,"bugIntro":["93cbb0eafcdce4ed1ee2472c8ecf926e05b10191"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"93cbb0eafcdce4ed1ee2472c8ecf926e05b10191","date":1476091258,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createNewHttpClientRequestContext().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createNewHttpClientRequestContext().mjava","sourceNew":"  /**\n   * Create a HttpClientContext object and {@link HttpClientContext#setUserToken(Object)}\n   * to an internal singleton. It allows to reuse underneath {@link HttpClient} \n   * in connection pools if client authentication is enabled.\n   */\n  public static HttpClientContext createNewHttpClientRequestContext() {\n    HttpClientContext context = httpClientRequestContextBuilder.createContext(HttpSolrClient.cacheKey);\n\n    return context;\n  }\n\n","sourceOld":"  /**\n   * Create a HttpClientContext object and {@link HttpClientContext#setUserToken(Object)}\n   * to an internal singleton. It allows to reuse underneath {@link HttpClient} \n   * in connection pools if client authentication is enabled.\n   */\n  public static HttpClientContext createNewHttpClientRequestContext() {\n    HttpClientContext context = new HttpClientContext();\n\n    context.setUserToken(HttpSolrClient.cacheKey);\n    return context;\n  }\n\n","bugFix":["15fb22f207e0cbf913dbc9857b6a4fe30390a625"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createNewHttpClientRequestContext().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createNewHttpClientRequestContext().mjava","sourceNew":"  /**\n   * Create a HttpClientContext object and {@link HttpClientContext#setUserToken(Object)}\n   * to an internal singleton. It allows to reuse underneath {@link HttpClient} \n   * in connection pools if client authentication is enabled.\n   */\n  public static HttpClientContext createNewHttpClientRequestContext() {\n    HttpClientContext context = httpClientRequestContextBuilder.createContext(HttpSolrClient.cacheKey);\n\n    return context;\n  }\n\n","sourceOld":"  /**\n   * \n   */\n  public static HttpClientContext createNewHttpClientRequestContext() {\n    return httpClientRequestContextBuilder.createContext();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"859081acf00749f5dd462772c571d611d4a4d2db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"07cebc9816f8c940e8e9683abbdc742fe95e25d7":["070b525fb213c5643ba35e1b60f1a1d4f7b23312"],"070b525fb213c5643ba35e1b60f1a1d4f7b23312":["859081acf00749f5dd462772c571d611d4a4d2db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"15fb22f207e0cbf913dbc9857b6a4fe30390a625":["07cebc9816f8c940e8e9683abbdc742fe95e25d7"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["859081acf00749f5dd462772c571d611d4a4d2db","93cbb0eafcdce4ed1ee2472c8ecf926e05b10191"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["93cbb0eafcdce4ed1ee2472c8ecf926e05b10191"],"93cbb0eafcdce4ed1ee2472c8ecf926e05b10191":["15fb22f207e0cbf913dbc9857b6a4fe30390a625"]},"commit2Childs":{"859081acf00749f5dd462772c571d611d4a4d2db":["070b525fb213c5643ba35e1b60f1a1d4f7b23312","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"07cebc9816f8c940e8e9683abbdc742fe95e25d7":["15fb22f207e0cbf913dbc9857b6a4fe30390a625"],"070b525fb213c5643ba35e1b60f1a1d4f7b23312":["07cebc9816f8c940e8e9683abbdc742fe95e25d7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["859081acf00749f5dd462772c571d611d4a4d2db"],"15fb22f207e0cbf913dbc9857b6a4fe30390a625":["93cbb0eafcdce4ed1ee2472c8ecf926e05b10191"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"93cbb0eafcdce4ed1ee2472c8ecf926e05b10191":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}