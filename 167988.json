{"path":"lucene/misc/src/java/org/apache/lucene/store/NativeUnixDirectory#createOutput(String,IOContext).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/store/NativeUnixDirectory#createOutput(String,IOContext).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/store/NativeUnixDirectory#createOutput(String,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput createOutput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    if (context.context != Context.MERGE || context.mergeInfo.estimatedMergeBytes < minBytesDirect) {\n      return delegate.createOutput(name, context);\n    } else {\n      ensureCanWrite(name);\n      return new NativeUnixIndexOutput(new File(getDirectory(), name), mergeBufferSize);\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput createOutput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    if (context.context != Context.MERGE || context.mergeInfo.estimatedMergeBytes < minBytesDirect) {\n      return delegate.createOutput(name, context);\n    } else {\n      ensureCanWrite(name);\n      return new NativeUnixIndexOutput(new File(getDirectory(), name), mergeBufferSize);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/store/NativeUnixDirectory#createOutput(String,IOContext).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/store/NativeUnixDirectory#createOutput(String,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput createOutput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    if (context.context != Context.MERGE || context.mergeInfo.estimatedMergeBytes < minBytesDirect) {\n      return delegate.createOutput(name, context);\n    } else {\n      ensureCanWrite(name);\n      return new NativeUnixIndexOutput(getDirectory().resolve(name), mergeBufferSize);\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput createOutput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    if (context.context != Context.MERGE || context.mergeInfo.estimatedMergeBytes < minBytesDirect) {\n      return delegate.createOutput(name, context);\n    } else {\n      ensureCanWrite(name);\n      return new NativeUnixIndexOutput(new File(getDirectory(), name), mergeBufferSize);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"867e3d9153fb761456b54a9dcce566e1545c5ef6","date":1444903098,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/store/NativeUnixDirectory#createOutput(String,IOContext).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/store/NativeUnixDirectory#createOutput(String,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput createOutput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    if (context.context != Context.MERGE || context.mergeInfo.estimatedMergeBytes < minBytesDirect) {\n      return delegate.createOutput(name, context);\n    } else {\n      ensureCanWrite(name);\n      return new NativeUnixIndexOutput(getDirectory().resolve(name), name, mergeBufferSize);\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput createOutput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    if (context.context != Context.MERGE || context.mergeInfo.estimatedMergeBytes < minBytesDirect) {\n      return delegate.createOutput(name, context);\n    } else {\n      ensureCanWrite(name);\n      return new NativeUnixIndexOutput(getDirectory().resolve(name), mergeBufferSize);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1153e47b15f8f40c4635a2b8371678a4b0e4d825","date":1454495732,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/store/NativeUnixDirectory#createOutput(String,IOContext).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/store/NativeUnixDirectory#createOutput(String,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput createOutput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    if (context.context != Context.MERGE || context.mergeInfo.estimatedMergeBytes < minBytesDirect) {\n      return delegate.createOutput(name, context);\n    } else {\n      return new NativeUnixIndexOutput(getDirectory().resolve(name), name, mergeBufferSize);\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput createOutput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    if (context.context != Context.MERGE || context.mergeInfo.estimatedMergeBytes < minBytesDirect) {\n      return delegate.createOutput(name, context);\n    } else {\n      ensureCanWrite(name);\n      return new NativeUnixIndexOutput(getDirectory().resolve(name), name, mergeBufferSize);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f4e2dcb5e470991d83a63c264bfe20880d3b3c1","date":1454513757,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/store/NativeUnixDirectory#createOutput(String,IOContext).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/store/NativeUnixDirectory#createOutput(String,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput createOutput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    if (context.context != Context.MERGE || context.mergeInfo.estimatedMergeBytes < minBytesDirect) {\n      return delegate.createOutput(name, context);\n    } else {\n      return new NativeUnixIndexOutput(getDirectory().resolve(name), name, mergeBufferSize);\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput createOutput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    if (context.context != Context.MERGE || context.mergeInfo.estimatedMergeBytes < minBytesDirect) {\n      return delegate.createOutput(name, context);\n    } else {\n      ensureCanWrite(name);\n      return new NativeUnixIndexOutput(getDirectory().resolve(name), name, mergeBufferSize);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/store/NativeUnixDirectory#createOutput(String,IOContext).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/store/NativeUnixDirectory#createOutput(String,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput createOutput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    if (context.context != Context.MERGE || context.mergeInfo.estimatedMergeBytes < minBytesDirect) {\n      return delegate.createOutput(name, context);\n    } else {\n      return new NativeUnixIndexOutput(getDirectory().resolve(name), name, mergeBufferSize);\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput createOutput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    if (context.context != Context.MERGE || context.mergeInfo.estimatedMergeBytes < minBytesDirect) {\n      return delegate.createOutput(name, context);\n    } else {\n      ensureCanWrite(name);\n      return new NativeUnixIndexOutput(getDirectory().resolve(name), name, mergeBufferSize);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8f4e2dcb5e470991d83a63c264bfe20880d3b3c1":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["867e3d9153fb761456b54a9dcce566e1545c5ef6","1153e47b15f8f40c4635a2b8371678a4b0e4d825"],"1153e47b15f8f40c4635a2b8371678a4b0e4d825":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"f4abec28b874149a7223e32cc7a01704c27790de":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["f4abec28b874149a7223e32cc7a01704c27790de"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1153e47b15f8f40c4635a2b8371678a4b0e4d825"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["f4abec28b874149a7223e32cc7a01704c27790de"],"8f4e2dcb5e470991d83a63c264bfe20880d3b3c1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"1153e47b15f8f40c4635a2b8371678a4b0e4d825":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f4abec28b874149a7223e32cc7a01704c27790de":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["8f4e2dcb5e470991d83a63c264bfe20880d3b3c1","1e6acbaae7af722f17204ceccf0f7db5753eccf3","1153e47b15f8f40c4635a2b8371678a4b0e4d825"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8f4e2dcb5e470991d83a63c264bfe20880d3b3c1","1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}