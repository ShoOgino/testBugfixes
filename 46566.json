{"path":"src/java/org/apache/solr/analysis/KeepWordFilterFactory#inform(ResourceLoader).mjava","commits":[{"id":"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014","date":1195912306,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/KeepWordFilterFactory#inform(ResourceLoader).mjava","pathOld":"src/java/org/apache/solr/analysis/KeepWordFilterFactory#init(SolrConfig,Map[String,String]).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  public void inform(ResourceLoader loader) {\n    String wordFile = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\",false);\n\n    if (wordFile != null) {\n      try {\n        List<String> wlist = loader.getLines(wordFile);\n        words = StopFilter.makeStopSet(\n            (String[])wlist.toArray(new String[0]), ignoreCase);\n      } \n      catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public void init(SolrConfig config, Map<String, String> args) {\n    super.init(config, args);\n    String wordFile = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\",false);\n\n    if (wordFile != null) {\n      try {\n        List<String> wlist = config.getLines(wordFile);\n        words = StopFilter.makeStopSet(\n            (String[])wlist.toArray(new String[0]), ignoreCase);\n      } \n      catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"460ea70a086b1e40166cc236947edc7e52a3ddf9","date":1217405516,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/KeepWordFilterFactory#inform(ResourceLoader).mjava","pathOld":"src/java/org/apache/solr/analysis/KeepWordFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  public void inform(ResourceLoader loader) {\n    String wordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\",false);\n\n    if (wordFiles != null) {\n      if (words == null)\n        words = new HashSet<String>();\n      try {\n        java.io.File keepWordsFile = new File(wordFiles);\n        if (keepWordsFile.exists()) {\n          List<String> wlist = loader.getLines(wordFiles);\n          words = StopFilter.makeStopSet(\n              (String[])wlist.toArray(new String[0]), ignoreCase);\n        } else  {\n          List<String> files = StrUtils.splitFileNames(wordFiles);\n          for (String file : files) {\n            List<String> wlist = loader.getLines(file.trim());\n            words.addAll(StopFilter.makeStopSet((String[])wlist.toArray(new String[0]), ignoreCase));\n          }\n        }\n      } \n      catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  public void inform(ResourceLoader loader) {\n    String wordFile = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\",false);\n\n    if (wordFile != null) {\n      try {\n        List<String> wlist = loader.getLines(wordFile);\n        words = StopFilter.makeStopSet(\n            (String[])wlist.toArray(new String[0]), ignoreCase);\n      } \n      catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb04b610ed800cee9bf5697f6462cf645d4f4866","date":1238616464,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/KeepWordFilterFactory#inform(ResourceLoader).mjava","pathOld":"src/java/org/apache/solr/analysis/KeepWordFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  public void inform(ResourceLoader loader) {\n    String wordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\", false);\n    if (wordFiles != null) {\n      try {\n        List<String> files = StrUtils.splitFileNames(wordFiles);\n        if (words == null && files.size() > 0){\n          words = new CharArraySet(files.size() * 10, ignoreCase);\n        }\n        for (String file : files) {\n          List<String> wlist = loader.getLines(file.trim());\n          //TODO: once StopFilter.makeStopSet(List) method is available, switch to using that so we can avoid a toArray() call\n          words.addAll(StopFilter.makeStopSet((String[]) wlist.toArray(new String[0]), ignoreCase));\n        }\n      }\n      catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  public void inform(ResourceLoader loader) {\n    String wordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\",false);\n\n    if (wordFiles != null) {\n      if (words == null)\n        words = new HashSet<String>();\n      try {\n        java.io.File keepWordsFile = new File(wordFiles);\n        if (keepWordsFile.exists()) {\n          List<String> wlist = loader.getLines(wordFiles);\n          words = StopFilter.makeStopSet(\n              (String[])wlist.toArray(new String[0]), ignoreCase);\n        } else  {\n          List<String> files = StrUtils.splitFileNames(wordFiles);\n          for (String file : files) {\n            List<String> wlist = loader.getLines(file.trim());\n            words.addAll(StopFilter.makeStopSet((String[])wlist.toArray(new String[0]), ignoreCase));\n          }\n        }\n      } \n      catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/analysis/KeepWordFilterFactory#inform(ResourceLoader).mjava","pathOld":"src/java/org/apache/solr/analysis/KeepWordFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  public void inform(ResourceLoader loader) {\n    String wordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\", false);\n    if (wordFiles != null) {\n      try {\n        List<String> files = StrUtils.splitFileNames(wordFiles);\n        if (words == null && files.size() > 0){\n          words = new CharArraySet(files.size() * 10, ignoreCase);\n        }\n        for (String file : files) {\n          List<String> wlist = loader.getLines(file.trim());\n          //TODO: once StopFilter.makeStopSet(List) method is available, switch to using that so we can avoid a toArray() call\n          words.addAll(StopFilter.makeStopSet((String[]) wlist.toArray(new String[0]), ignoreCase));\n        }\n      }\n      catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  public void inform(ResourceLoader loader) {\n    String wordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\", false);\n    if (wordFiles != null) {\n      try {\n        List<String> files = StrUtils.splitFileNames(wordFiles);\n        if (words == null && files.size() > 0){\n          words = new CharArraySet(files.size() * 10, ignoreCase);\n        }\n        for (String file : files) {\n          List<String> wlist = loader.getLines(file.trim());\n          //TODO: once StopFilter.makeStopSet(List) method is available, switch to using that so we can avoid a toArray() call\n          words.addAll(StopFilter.makeStopSet((String[]) wlist.toArray(new String[0]), ignoreCase));\n        }\n      }\n      catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"460ea70a086b1e40166cc236947edc7e52a3ddf9":["fcf52a7da226d8d3756cc8bf9f3ae1f39952b014"],"fb04b610ed800cee9bf5697f6462cf645d4f4866":["460ea70a086b1e40166cc236947edc7e52a3ddf9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["fb04b610ed800cee9bf5697f6462cf645d4f4866"],"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"460ea70a086b1e40166cc236947edc7e52a3ddf9":["fb04b610ed800cee9bf5697f6462cf645d4f4866"],"fb04b610ed800cee9bf5697f6462cf645d4f4866":["ad94625fb8d088209f46650c8097196fec67f00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["fcf52a7da226d8d3756cc8bf9f3ae1f39952b014"],"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014":["460ea70a086b1e40166cc236947edc7e52a3ddf9"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}