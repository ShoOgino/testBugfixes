{"path":"lucene/core/src/java/org/apache/lucene/search/TermQuery.TermWeight#TermWeight(IndexSearcher,int,TermContext).mjava","commits":[{"id":"954e59be3da8dc1b046646ad7af4b466852009d3","date":1423482367,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TermQuery.TermWeight#TermWeight(IndexSearcher,int,TermContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TermQuery.TermWeight#TermWeight(IndexSearcher,boolean,TermContext).mjava","sourceNew":"    public TermWeight(IndexSearcher searcher, int postingsFlags, TermContext termStates)\n        throws IOException {\n      super(TermQuery.this);\n      this.postingsFlags = postingsFlags;\n      assert termStates != null : \"TermContext must not be null\";\n      this.termStates = termStates;\n      this.similarity = searcher.getSimilarity();\n      this.stats = similarity.computeWeight(getBoost(),\n          searcher.collectionStatistics(term.field()),\n          searcher.termStatistics(term, termStates));\n    }\n\n","sourceOld":"    public TermWeight(IndexSearcher searcher, boolean needsScores, TermContext termStates)\n        throws IOException {\n      super(TermQuery.this);\n      this.needsScores = needsScores;\n      assert termStates != null : \"TermContext must not be null\";\n      this.termStates = termStates;\n      this.similarity = searcher.getSimilarity();\n      this.stats = similarity.computeWeight(getBoost(),\n          searcher.collectionStatistics(term.field()),\n          searcher.termStatistics(term, termStates));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a47d642ab24da1a811adce4bda9cc52c520ca13","date":1423483323,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TermQuery.TermWeight#TermWeight(IndexSearcher,boolean,TermContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TermQuery.TermWeight#TermWeight(IndexSearcher,int,TermContext).mjava","sourceNew":"    public TermWeight(IndexSearcher searcher, boolean needsScores, TermContext termStates)\n        throws IOException {\n      super(TermQuery.this);\n      this.needsScores = needsScores;\n      assert termStates != null : \"TermContext must not be null\";\n      this.termStates = termStates;\n      this.similarity = searcher.getSimilarity();\n      this.stats = similarity.computeWeight(getBoost(),\n          searcher.collectionStatistics(term.field()),\n          searcher.termStatistics(term, termStates));\n    }\n\n","sourceOld":"    public TermWeight(IndexSearcher searcher, int postingsFlags, TermContext termStates)\n        throws IOException {\n      super(TermQuery.this);\n      this.postingsFlags = postingsFlags;\n      assert termStates != null : \"TermContext must not be null\";\n      this.termStates = termStates;\n      this.similarity = searcher.getSimilarity();\n      this.stats = similarity.computeWeight(getBoost(),\n          searcher.collectionStatistics(term.field()),\n          searcher.termStatistics(term, termStates));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6a47d642ab24da1a811adce4bda9cc52c520ca13":["954e59be3da8dc1b046646ad7af4b466852009d3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"954e59be3da8dc1b046646ad7af4b466852009d3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6a47d642ab24da1a811adce4bda9cc52c520ca13"]},"commit2Childs":{"6a47d642ab24da1a811adce4bda9cc52c520ca13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["954e59be3da8dc1b046646ad7af4b466852009d3"],"954e59be3da8dc1b046646ad7af4b466852009d3":["6a47d642ab24da1a811adce4bda9cc52c520ca13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}