{"path":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#testDeduplicationOfSubmittedTasks().mjava","commits":[{"id":"74fe755c1cb9c998d933b455c573e86e9ef5d2aa","date":1401724046,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#testDeduplicationOfSubmittedTasks().mjava","pathOld":"/dev/null","sourceNew":"  private void testDeduplicationOfSubmittedTasks() throws IOException, SolrServerException {\n    SolrServer server = createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(0)));\n    CollectionAdminRequest.createCollection(\"ocptest_shardsplit2\", 4, \"conf1\", server, \"3000\");\n\n    CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\", SHARD1, server, \"3001\");\n    CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\", SHARD2, server, \"3002\");\n\n    // Now submit another task with the same id. At this time, hopefully the previous 2002 should still be in the queue.\n    CollectionAdminResponse response = CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\", SHARD1, server, \"3002\");\n    NamedList r = response.getResponse();\n    assertEquals(\"Duplicate request was supposed to exist but wasn't found. De-duplication of submitted task failed.\",\n        \"Task with the same requestid already exists.\", r.get(\"error\"));\n\n    for (int i=3001;i<=3002;i++) {\n      String state = getRequestStateAfterCompletion(i + \"\", 30, server);\n      assertTrue(\"Task \" + i + \" did not complete, final state: \" + state,state.equals(\"completed\"));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["e7111ede029f7ea8ba3e71940230d01946105824","6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c8fec3cd782d7ae08ef7a6459a3e3ef41005c83","date":1404591706,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#testDeduplicationOfSubmittedTasks().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#testDeduplicationOfSubmittedTasks().mjava","sourceNew":"  private void testDeduplicationOfSubmittedTasks() throws IOException, SolrServerException {\n    SolrServer server = createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(0)));\n    CollectionAdminRequest.createCollection(\"ocptest_shardsplit2\", 4, \"conf1\", server, \"3000\");\n\n    CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\", SHARD1, server, \"3001\");\n    CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\", SHARD2, server, \"3002\");\n\n    // Now submit another task with the same id. At this time, hopefully the previous 2002 should still be in the queue.\n    CollectionAdminResponse response = CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\", SHARD1, server, \"3002\");\n    NamedList r = response.getResponse();\n    assertEquals(\"Duplicate request was supposed to exist but wasn't found. De-duplication of submitted task failed.\",\n        \"Task with the same requestid already exists.\", r.get(\"error\"));\n\n    for (int i=3001;i<=3002;i++) {\n      String state = getRequestStateAfterCompletion(i + \"\", REQUEST_STATUS_TIMEOUT, server);\n      assertTrue(\"Task \" + i + \" did not complete, final state: \" + state,state.equals(\"completed\"));\n    }\n  }\n\n","sourceOld":"  private void testDeduplicationOfSubmittedTasks() throws IOException, SolrServerException {\n    SolrServer server = createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(0)));\n    CollectionAdminRequest.createCollection(\"ocptest_shardsplit2\", 4, \"conf1\", server, \"3000\");\n\n    CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\", SHARD1, server, \"3001\");\n    CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\", SHARD2, server, \"3002\");\n\n    // Now submit another task with the same id. At this time, hopefully the previous 2002 should still be in the queue.\n    CollectionAdminResponse response = CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\", SHARD1, server, \"3002\");\n    NamedList r = response.getResponse();\n    assertEquals(\"Duplicate request was supposed to exist but wasn't found. De-duplication of submitted task failed.\",\n        \"Task with the same requestid already exists.\", r.get(\"error\"));\n\n    for (int i=3001;i<=3002;i++) {\n      String state = getRequestStateAfterCompletion(i + \"\", 30, server);\n      assertTrue(\"Task \" + i + \" did not complete, final state: \" + state,state.equals(\"completed\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e7111ede029f7ea8ba3e71940230d01946105824","date":1406178929,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#testDeduplicationOfSubmittedTasks().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#testDeduplicationOfSubmittedTasks().mjava","sourceNew":"  private void testDeduplicationOfSubmittedTasks() throws IOException, SolrServerException {\n    SolrServer server = createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(0)));\n    CollectionAdminRequest.createCollection(\"ocptest_shardsplit2\", 4, \"conf1\", server, \"3000\");\n\n    CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\", SHARD1, server, \"3001\");\n    CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\", SHARD2, server, \"3002\");\n\n    // Now submit another task with the same id. At this time, hopefully the previous 3002 should still be in the queue.\n    CollectionAdminResponse response = CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\", SHARD1, server, \"3002\");\n    NamedList r = response.getResponse();\n    assertEquals(\"Duplicate request was supposed to exist but wasn't found. De-duplication of submitted task failed.\",\n        \"Task with the same requestid already exists.\", r.get(\"error\"));\n\n    for (int i=3001;i<=3002;i++) {\n      String state = getRequestStateAfterCompletion(i + \"\", REQUEST_STATUS_TIMEOUT, server);\n      assertTrue(\"Task \" + i + \" did not complete, final state: \" + state,state.equals(\"completed\"));\n    }\n  }\n\n","sourceOld":"  private void testDeduplicationOfSubmittedTasks() throws IOException, SolrServerException {\n    SolrServer server = createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(0)));\n    CollectionAdminRequest.createCollection(\"ocptest_shardsplit2\", 4, \"conf1\", server, \"3000\");\n\n    CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\", SHARD1, server, \"3001\");\n    CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\", SHARD2, server, \"3002\");\n\n    // Now submit another task with the same id. At this time, hopefully the previous 2002 should still be in the queue.\n    CollectionAdminResponse response = CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\", SHARD1, server, \"3002\");\n    NamedList r = response.getResponse();\n    assertEquals(\"Duplicate request was supposed to exist but wasn't found. De-duplication of submitted task failed.\",\n        \"Task with the same requestid already exists.\", r.get(\"error\"));\n\n    for (int i=3001;i<=3002;i++) {\n      String state = getRequestStateAfterCompletion(i + \"\", REQUEST_STATUS_TIMEOUT, server);\n      assertTrue(\"Task \" + i + \" did not complete, final state: \" + state,state.equals(\"completed\"));\n    }\n  }\n\n","bugFix":["74fe755c1cb9c998d933b455c573e86e9ef5d2aa"],"bugIntro":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4a7d7ef06ef6f04ba2de657e90e0458048a967c6","date":1409691631,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#testDeduplicationOfSubmittedTasks().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#testDeduplicationOfSubmittedTasks().mjava","sourceNew":"  private void testDeduplicationOfSubmittedTasks() throws IOException, SolrServerException {\n    SolrServer server = createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(0)));\n    Create createCollectionRequest = new Create();\n    createCollectionRequest.setCollectionName(\"ocptest_shardsplit2\");\n    createCollectionRequest.setNumShards(4);\n    createCollectionRequest.setConfigName(\"conf1\");\n    createCollectionRequest.setAsyncId(\"3000\");\n    createCollectionRequest.process(server);\n\n    SplitShard splitShardRequest = new SplitShard();\n    splitShardRequest.setCollectionName(\"ocptest_shardsplit2\");\n    splitShardRequest.setShardName(SHARD1);\n    splitShardRequest.setAsyncId(\"3001\");\n    splitShardRequest.process(server);\n\n    splitShardRequest = new SplitShard();\n    splitShardRequest.setCollectionName(\"ocptest_shardsplit2\");\n    splitShardRequest.setShardName(SHARD2);\n    splitShardRequest.setAsyncId(\"3002\");\n    splitShardRequest.process(server);\n\n    // Now submit another task with the same id. At this time, hopefully the previous 3002 should still be in the queue.\n    splitShardRequest = new SplitShard();\n    splitShardRequest.setCollectionName(\"ocptest_shardsplit2\");\n    splitShardRequest.setShardName(SHARD1);\n    splitShardRequest.setAsyncId(\"3002\");\n    CollectionAdminResponse response = splitShardRequest.process(server);\n\n    NamedList r = response.getResponse();\n    assertEquals(\"Duplicate request was supposed to exist but wasn't found. De-duplication of submitted task failed.\",\n        \"Task with the same requestid already exists.\", r.get(\"error\"));\n\n    for (int i=3001;i<=3002;i++) {\n      String state = getRequestStateAfterCompletion(i + \"\", REQUEST_STATUS_TIMEOUT, server);\n      assertTrue(\"Task \" + i + \" did not complete, final state: \" + state,state.equals(\"completed\"));\n    }\n  }\n\n","sourceOld":"  private void testDeduplicationOfSubmittedTasks() throws IOException, SolrServerException {\n    SolrServer server = createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(0)));\n    CollectionAdminRequest.createCollection(\"ocptest_shardsplit2\", 4, \"conf1\", server, \"3000\");\n\n    CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\", SHARD1, server, \"3001\");\n    CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\", SHARD2, server, \"3002\");\n\n    // Now submit another task with the same id. At this time, hopefully the previous 3002 should still be in the queue.\n    CollectionAdminResponse response = CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\", SHARD1, server, \"3002\");\n    NamedList r = response.getResponse();\n    assertEquals(\"Duplicate request was supposed to exist but wasn't found. De-duplication of submitted task failed.\",\n        \"Task with the same requestid already exists.\", r.get(\"error\"));\n\n    for (int i=3001;i<=3002;i++) {\n      String state = getRequestStateAfterCompletion(i + \"\", REQUEST_STATUS_TIMEOUT, server);\n      assertTrue(\"Task \" + i + \" did not complete, final state: \" + state,state.equals(\"completed\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#testDeduplicationOfSubmittedTasks().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#testDeduplicationOfSubmittedTasks().mjava","sourceNew":"  private void testDeduplicationOfSubmittedTasks() throws IOException, SolrServerException {\n    SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)));\n    Create createCollectionRequest = new Create();\n    createCollectionRequest.setCollectionName(\"ocptest_shardsplit2\");\n    createCollectionRequest.setNumShards(4);\n    createCollectionRequest.setConfigName(\"conf1\");\n    createCollectionRequest.setAsyncId(\"3000\");\n    createCollectionRequest.process(client);\n\n    SplitShard splitShardRequest = new SplitShard();\n    splitShardRequest.setCollectionName(\"ocptest_shardsplit2\");\n    splitShardRequest.setShardName(SHARD1);\n    splitShardRequest.setAsyncId(\"3001\");\n    splitShardRequest.process(client);\n\n    splitShardRequest = new SplitShard();\n    splitShardRequest.setCollectionName(\"ocptest_shardsplit2\");\n    splitShardRequest.setShardName(SHARD2);\n    splitShardRequest.setAsyncId(\"3002\");\n    splitShardRequest.process(client);\n\n    // Now submit another task with the same id. At this time, hopefully the previous 3002 should still be in the queue.\n    splitShardRequest = new SplitShard();\n    splitShardRequest.setCollectionName(\"ocptest_shardsplit2\");\n    splitShardRequest.setShardName(SHARD1);\n    splitShardRequest.setAsyncId(\"3002\");\n    CollectionAdminResponse response = splitShardRequest.process(client);\n\n    NamedList r = response.getResponse();\n    assertEquals(\"Duplicate request was supposed to exist but wasn't found. De-duplication of submitted task failed.\",\n        \"Task with the same requestid already exists.\", r.get(\"error\"));\n\n    for (int i=3001;i<=3002;i++) {\n      String state = getRequestStateAfterCompletion(i + \"\", REQUEST_STATUS_TIMEOUT, client);\n      assertTrue(\"Task \" + i + \" did not complete, final state: \" + state,state.equals(\"completed\"));\n    }\n  }\n\n","sourceOld":"  private void testDeduplicationOfSubmittedTasks() throws IOException, SolrServerException {\n    SolrServer server = createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(0)));\n    Create createCollectionRequest = new Create();\n    createCollectionRequest.setCollectionName(\"ocptest_shardsplit2\");\n    createCollectionRequest.setNumShards(4);\n    createCollectionRequest.setConfigName(\"conf1\");\n    createCollectionRequest.setAsyncId(\"3000\");\n    createCollectionRequest.process(server);\n\n    SplitShard splitShardRequest = new SplitShard();\n    splitShardRequest.setCollectionName(\"ocptest_shardsplit2\");\n    splitShardRequest.setShardName(SHARD1);\n    splitShardRequest.setAsyncId(\"3001\");\n    splitShardRequest.process(server);\n\n    splitShardRequest = new SplitShard();\n    splitShardRequest.setCollectionName(\"ocptest_shardsplit2\");\n    splitShardRequest.setShardName(SHARD2);\n    splitShardRequest.setAsyncId(\"3002\");\n    splitShardRequest.process(server);\n\n    // Now submit another task with the same id. At this time, hopefully the previous 3002 should still be in the queue.\n    splitShardRequest = new SplitShard();\n    splitShardRequest.setCollectionName(\"ocptest_shardsplit2\");\n    splitShardRequest.setShardName(SHARD1);\n    splitShardRequest.setAsyncId(\"3002\");\n    CollectionAdminResponse response = splitShardRequest.process(server);\n\n    NamedList r = response.getResponse();\n    assertEquals(\"Duplicate request was supposed to exist but wasn't found. De-duplication of submitted task failed.\",\n        \"Task with the same requestid already exists.\", r.get(\"error\"));\n\n    for (int i=3001;i<=3002;i++) {\n      String state = getRequestStateAfterCompletion(i + \"\", REQUEST_STATUS_TIMEOUT, server);\n      assertTrue(\"Task \" + i + \" did not complete, final state: \" + state,state.equals(\"completed\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6784d0cc613dc1ee97030eaaa5e0754edc22d164","date":1420824784,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#testDeduplicationOfSubmittedTasks().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#testDeduplicationOfSubmittedTasks().mjava","sourceNew":"  private void testDeduplicationOfSubmittedTasks() throws IOException, SolrServerException {\n    SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)));\n    try {\n      Create createCollectionRequest = new Create();\n      createCollectionRequest.setCollectionName(\"ocptest_shardsplit2\");\n      createCollectionRequest.setNumShards(4);\n      createCollectionRequest.setConfigName(\"conf1\");\n      createCollectionRequest.setAsyncId(\"3000\");\n      createCollectionRequest.process(client);\n  \n      SplitShard splitShardRequest = new SplitShard();\n      splitShardRequest.setCollectionName(\"ocptest_shardsplit2\");\n      splitShardRequest.setShardName(SHARD1);\n      splitShardRequest.setAsyncId(\"3001\");\n      splitShardRequest.process(client);\n  \n      splitShardRequest = new SplitShard();\n      splitShardRequest.setCollectionName(\"ocptest_shardsplit2\");\n      splitShardRequest.setShardName(SHARD2);\n      splitShardRequest.setAsyncId(\"3002\");\n      splitShardRequest.process(client);\n  \n      // Now submit another task with the same id. At this time, hopefully the previous 3002 should still be in the queue.\n      splitShardRequest = new SplitShard();\n      splitShardRequest.setCollectionName(\"ocptest_shardsplit2\");\n      splitShardRequest.setShardName(SHARD1);\n      splitShardRequest.setAsyncId(\"3002\");\n      CollectionAdminResponse response = splitShardRequest.process(client);\n  \n      NamedList r = response.getResponse();\n      assertEquals(\"Duplicate request was supposed to exist but wasn't found. De-duplication of submitted task failed.\",\n          \"Task with the same requestid already exists.\", r.get(\"error\"));\n  \n      for (int i=3001;i<=3002;i++) {\n        String state = getRequestStateAfterCompletion(i + \"\", REQUEST_STATUS_TIMEOUT, client);\n        assertTrue(\"Task \" + i + \" did not complete, final state: \" + state,state.equals(\"completed\"));\n      }\n    } finally {\n      client.shutdown();\n    }\n  }\n\n","sourceOld":"  private void testDeduplicationOfSubmittedTasks() throws IOException, SolrServerException {\n    SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)));\n    Create createCollectionRequest = new Create();\n    createCollectionRequest.setCollectionName(\"ocptest_shardsplit2\");\n    createCollectionRequest.setNumShards(4);\n    createCollectionRequest.setConfigName(\"conf1\");\n    createCollectionRequest.setAsyncId(\"3000\");\n    createCollectionRequest.process(client);\n\n    SplitShard splitShardRequest = new SplitShard();\n    splitShardRequest.setCollectionName(\"ocptest_shardsplit2\");\n    splitShardRequest.setShardName(SHARD1);\n    splitShardRequest.setAsyncId(\"3001\");\n    splitShardRequest.process(client);\n\n    splitShardRequest = new SplitShard();\n    splitShardRequest.setCollectionName(\"ocptest_shardsplit2\");\n    splitShardRequest.setShardName(SHARD2);\n    splitShardRequest.setAsyncId(\"3002\");\n    splitShardRequest.process(client);\n\n    // Now submit another task with the same id. At this time, hopefully the previous 3002 should still be in the queue.\n    splitShardRequest = new SplitShard();\n    splitShardRequest.setCollectionName(\"ocptest_shardsplit2\");\n    splitShardRequest.setShardName(SHARD1);\n    splitShardRequest.setAsyncId(\"3002\");\n    CollectionAdminResponse response = splitShardRequest.process(client);\n\n    NamedList r = response.getResponse();\n    assertEquals(\"Duplicate request was supposed to exist but wasn't found. De-duplication of submitted task failed.\",\n        \"Task with the same requestid already exists.\", r.get(\"error\"));\n\n    for (int i=3001;i<=3002;i++) {\n      String state = getRequestStateAfterCompletion(i + \"\", REQUEST_STATUS_TIMEOUT, client);\n      assertTrue(\"Task \" + i + \" did not complete, final state: \" + state,state.equals(\"completed\"));\n    }\n  }\n\n","bugFix":["74fe755c1cb9c998d933b455c573e86e9ef5d2aa","bafca15d8e408346a67f4282ad1143b88023893b","e7111ede029f7ea8ba3e71940230d01946105824","4a7d7ef06ef6f04ba2de657e90e0458048a967c6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cc3b13b430571c2e169f98fe38e1e7666f88522d","date":1422446157,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#testDeduplicationOfSubmittedTasks().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#testDeduplicationOfSubmittedTasks().mjava","sourceNew":"  private void testDeduplicationOfSubmittedTasks() throws IOException, SolrServerException {\n    try (SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)))) {\n      Create createCollectionRequest = new Create();\n      createCollectionRequest.setCollectionName(\"ocptest_shardsplit2\");\n      createCollectionRequest.setNumShards(4);\n      createCollectionRequest.setConfigName(\"conf1\");\n      createCollectionRequest.setAsyncId(\"3000\");\n      createCollectionRequest.process(client);\n  \n      SplitShard splitShardRequest = new SplitShard();\n      splitShardRequest.setCollectionName(\"ocptest_shardsplit2\");\n      splitShardRequest.setShardName(SHARD1);\n      splitShardRequest.setAsyncId(\"3001\");\n      splitShardRequest.process(client);\n  \n      splitShardRequest = new SplitShard();\n      splitShardRequest.setCollectionName(\"ocptest_shardsplit2\");\n      splitShardRequest.setShardName(SHARD2);\n      splitShardRequest.setAsyncId(\"3002\");\n      splitShardRequest.process(client);\n  \n      // Now submit another task with the same id. At this time, hopefully the previous 3002 should still be in the queue.\n      splitShardRequest = new SplitShard();\n      splitShardRequest.setCollectionName(\"ocptest_shardsplit2\");\n      splitShardRequest.setShardName(SHARD1);\n      splitShardRequest.setAsyncId(\"3002\");\n      CollectionAdminResponse response = splitShardRequest.process(client);\n  \n      NamedList r = response.getResponse();\n      assertEquals(\"Duplicate request was supposed to exist but wasn't found. De-duplication of submitted task failed.\",\n          \"Task with the same requestid already exists.\", r.get(\"error\"));\n  \n      for (int i=3001;i<=3002;i++) {\n        String state = getRequestStateAfterCompletion(i + \"\", REQUEST_STATUS_TIMEOUT, client);\n        assertTrue(\"Task \" + i + \" did not complete, final state: \" + state,state.equals(\"completed\"));\n      }\n    }\n  }\n\n","sourceOld":"  private void testDeduplicationOfSubmittedTasks() throws IOException, SolrServerException {\n    SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)));\n    try {\n      Create createCollectionRequest = new Create();\n      createCollectionRequest.setCollectionName(\"ocptest_shardsplit2\");\n      createCollectionRequest.setNumShards(4);\n      createCollectionRequest.setConfigName(\"conf1\");\n      createCollectionRequest.setAsyncId(\"3000\");\n      createCollectionRequest.process(client);\n  \n      SplitShard splitShardRequest = new SplitShard();\n      splitShardRequest.setCollectionName(\"ocptest_shardsplit2\");\n      splitShardRequest.setShardName(SHARD1);\n      splitShardRequest.setAsyncId(\"3001\");\n      splitShardRequest.process(client);\n  \n      splitShardRequest = new SplitShard();\n      splitShardRequest.setCollectionName(\"ocptest_shardsplit2\");\n      splitShardRequest.setShardName(SHARD2);\n      splitShardRequest.setAsyncId(\"3002\");\n      splitShardRequest.process(client);\n  \n      // Now submit another task with the same id. At this time, hopefully the previous 3002 should still be in the queue.\n      splitShardRequest = new SplitShard();\n      splitShardRequest.setCollectionName(\"ocptest_shardsplit2\");\n      splitShardRequest.setShardName(SHARD1);\n      splitShardRequest.setAsyncId(\"3002\");\n      CollectionAdminResponse response = splitShardRequest.process(client);\n  \n      NamedList r = response.getResponse();\n      assertEquals(\"Duplicate request was supposed to exist but wasn't found. De-duplication of submitted task failed.\",\n          \"Task with the same requestid already exists.\", r.get(\"error\"));\n  \n      for (int i=3001;i<=3002;i++) {\n        String state = getRequestStateAfterCompletion(i + \"\", REQUEST_STATUS_TIMEOUT, client);\n        assertTrue(\"Task \" + i + \" did not complete, final state: \" + state,state.equals(\"completed\"));\n      }\n    } finally {\n      client.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"182acd29cf4cb1644a02b8517f3a5b867c0d7cce","date":1432665213,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#testDeduplicationOfSubmittedTasks().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#testDeduplicationOfSubmittedTasks().mjava","sourceNew":"  private void testDeduplicationOfSubmittedTasks() throws IOException, SolrServerException {\n    try (SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)))) {\n      new Create()\n              .setCollectionName(\"ocptest_shardsplit2\")\n              .setNumShards(4)\n              .setConfigName(\"conf1\")\n              .setAsyncId(\"3000\")\n              .process(client);\n  \n      SplitShard splitShardRequest = new SplitShard()\n              .setCollectionName(\"ocptest_shardsplit2\")\n              .setShardName(SHARD1)\n              .setAsyncId(\"3001\");\n      splitShardRequest.process(client);\n  \n      splitShardRequest = new SplitShard()\n              .setCollectionName(\"ocptest_shardsplit2\")\n              .setShardName(SHARD2)\n              .setAsyncId(\"3002\");\n      splitShardRequest.process(client);\n  \n      // Now submit another task with the same id. At this time, hopefully the previous 3002 should still be in the queue.\n      splitShardRequest = new SplitShard()\n              .setCollectionName(\"ocptest_shardsplit2\")\n              .setShardName(SHARD1)\n              .setAsyncId(\"3002\");\n      CollectionAdminResponse response = splitShardRequest.process(client);\n  \n      NamedList r = response.getResponse();\n      assertEquals(\"Duplicate request was supposed to exist but wasn't found. De-duplication of submitted task failed.\",\n          \"Task with the same requestid already exists.\", r.get(\"error\"));\n  \n      for (int i=3001;i<=3002;i++) {\n        String state = getRequestStateAfterCompletion(i + \"\", REQUEST_STATUS_TIMEOUT, client);\n        assertTrue(\"Task \" + i + \" did not complete, final state: \" + state,state.equals(\"completed\"));\n      }\n    }\n  }\n\n","sourceOld":"  private void testDeduplicationOfSubmittedTasks() throws IOException, SolrServerException {\n    try (SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)))) {\n      Create createCollectionRequest = new Create();\n      createCollectionRequest.setCollectionName(\"ocptest_shardsplit2\");\n      createCollectionRequest.setNumShards(4);\n      createCollectionRequest.setConfigName(\"conf1\");\n      createCollectionRequest.setAsyncId(\"3000\");\n      createCollectionRequest.process(client);\n  \n      SplitShard splitShardRequest = new SplitShard();\n      splitShardRequest.setCollectionName(\"ocptest_shardsplit2\");\n      splitShardRequest.setShardName(SHARD1);\n      splitShardRequest.setAsyncId(\"3001\");\n      splitShardRequest.process(client);\n  \n      splitShardRequest = new SplitShard();\n      splitShardRequest.setCollectionName(\"ocptest_shardsplit2\");\n      splitShardRequest.setShardName(SHARD2);\n      splitShardRequest.setAsyncId(\"3002\");\n      splitShardRequest.process(client);\n  \n      // Now submit another task with the same id. At this time, hopefully the previous 3002 should still be in the queue.\n      splitShardRequest = new SplitShard();\n      splitShardRequest.setCollectionName(\"ocptest_shardsplit2\");\n      splitShardRequest.setShardName(SHARD1);\n      splitShardRequest.setAsyncId(\"3002\");\n      CollectionAdminResponse response = splitShardRequest.process(client);\n  \n      NamedList r = response.getResponse();\n      assertEquals(\"Duplicate request was supposed to exist but wasn't found. De-duplication of submitted task failed.\",\n          \"Task with the same requestid already exists.\", r.get(\"error\"));\n  \n      for (int i=3001;i<=3002;i++) {\n        String state = getRequestStateAfterCompletion(i + \"\", REQUEST_STATUS_TIMEOUT, client);\n        assertTrue(\"Task \" + i + \" did not complete, final state: \" + state,state.equals(\"completed\"));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3088cdaa24ffe3ef44713ac9484114bd56eca2af","date":1453441194,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#testDeduplicationOfSubmittedTasks().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#testDeduplicationOfSubmittedTasks().mjava","sourceNew":"  private void testDeduplicationOfSubmittedTasks() throws IOException, SolrServerException {\n    try (SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)))) {\n      new Create()\n              .setCollectionName(\"ocptest_shardsplit2\")\n              .setNumShards(4)\n              .setConfigName(\"conf1\")\n              .setAsyncId(\"3000\")\n              .process(client);\n  \n      SplitShard splitShardRequest = new SplitShard()\n              .setCollectionName(\"ocptest_shardsplit2\")\n              .setShardName(SHARD1)\n              .setAsyncId(\"3001\");\n      splitShardRequest.process(client);\n  \n      splitShardRequest = new SplitShard()\n              .setCollectionName(\"ocptest_shardsplit2\")\n              .setShardName(SHARD2)\n              .setAsyncId(\"3002\");\n      splitShardRequest.process(client);\n  \n      // Now submit another task with the same id. At this time, hopefully the previous 3002 should still be in the queue.\n      splitShardRequest = new SplitShard()\n              .setCollectionName(\"ocptest_shardsplit2\")\n              .setShardName(SHARD1)\n              .setAsyncId(\"3002\");\n      CollectionAdminResponse response = splitShardRequest.process(client);\n  \n      NamedList r = response.getResponse();\n      assertEquals(\"Duplicate request was supposed to exist but wasn't found. De-duplication of submitted task failed.\",\n          \"Task with the same requestid already exists.\", r.get(\"error\"));\n  \n      for (int i = 3001; i <= 3002; i++) {\n        final RequestStatusState state = getRequestStateAfterCompletion(i + \"\", REQUEST_STATUS_TIMEOUT, client);\n        assertSame(\"Task \" + i + \" did not complete, final state: \" + state, RequestStatusState.COMPLETED, state);\n      }\n    }\n  }\n\n","sourceOld":"  private void testDeduplicationOfSubmittedTasks() throws IOException, SolrServerException {\n    try (SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)))) {\n      new Create()\n              .setCollectionName(\"ocptest_shardsplit2\")\n              .setNumShards(4)\n              .setConfigName(\"conf1\")\n              .setAsyncId(\"3000\")\n              .process(client);\n  \n      SplitShard splitShardRequest = new SplitShard()\n              .setCollectionName(\"ocptest_shardsplit2\")\n              .setShardName(SHARD1)\n              .setAsyncId(\"3001\");\n      splitShardRequest.process(client);\n  \n      splitShardRequest = new SplitShard()\n              .setCollectionName(\"ocptest_shardsplit2\")\n              .setShardName(SHARD2)\n              .setAsyncId(\"3002\");\n      splitShardRequest.process(client);\n  \n      // Now submit another task with the same id. At this time, hopefully the previous 3002 should still be in the queue.\n      splitShardRequest = new SplitShard()\n              .setCollectionName(\"ocptest_shardsplit2\")\n              .setShardName(SHARD1)\n              .setAsyncId(\"3002\");\n      CollectionAdminResponse response = splitShardRequest.process(client);\n  \n      NamedList r = response.getResponse();\n      assertEquals(\"Duplicate request was supposed to exist but wasn't found. De-duplication of submitted task failed.\",\n          \"Task with the same requestid already exists.\", r.get(\"error\"));\n  \n      for (int i=3001;i<=3002;i++) {\n        String state = getRequestStateAfterCompletion(i + \"\", REQUEST_STATUS_TIMEOUT, client);\n        assertTrue(\"Task \" + i + \" did not complete, final state: \" + state,state.equals(\"completed\"));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac97ea104d893f16aab430d9904473bc1f233f3c","date":1496249396,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#testDeduplicationOfSubmittedTasks().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#testDeduplicationOfSubmittedTasks().mjava","sourceNew":"  private void testDeduplicationOfSubmittedTasks() throws IOException, SolrServerException {\n    try (SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)))) {\n      CollectionAdminRequest.createCollection(\"ocptest_shardsplit2\",\"conf1\",4,1).processAsync(\"3000\",client);\n  \n      SplitShard splitShardRequest = CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\").setShardName(SHARD1);\n      splitShardRequest.processAsync(\"3001\",client);\n      \n      splitShardRequest = CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\").setShardName(SHARD2);\n      splitShardRequest.processAsync(\"3002\",client);\n  \n      // Now submit another task with the same id. At this time, hopefully the previous 3002 should still be in the queue.\n      expectThrows(SolrServerException.class, () -> {\n          CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\").setShardName(SHARD1).processAsync(\"3002\",client);\n          // more helpful assertion failure\n          fail(\"Duplicate request was supposed to exist but wasn't found. De-duplication of submitted task failed.\");\n        });\n      \n      for (int i = 3001; i <= 3002; i++) {\n        final RequestStatusState state = getRequestStateAfterCompletion(i + \"\", REQUEST_STATUS_TIMEOUT, client);\n        assertSame(\"Task \" + i + \" did not complete, final state: \" + state, RequestStatusState.COMPLETED, state);\n      }\n    }\n  }\n\n","sourceOld":"  private void testDeduplicationOfSubmittedTasks() throws IOException, SolrServerException {\n    try (SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)))) {\n      new Create()\n              .setCollectionName(\"ocptest_shardsplit2\")\n              .setNumShards(4)\n              .setConfigName(\"conf1\")\n              .setAsyncId(\"3000\")\n              .process(client);\n  \n      SplitShard splitShardRequest = new SplitShard()\n              .setCollectionName(\"ocptest_shardsplit2\")\n              .setShardName(SHARD1)\n              .setAsyncId(\"3001\");\n      splitShardRequest.process(client);\n  \n      splitShardRequest = new SplitShard()\n              .setCollectionName(\"ocptest_shardsplit2\")\n              .setShardName(SHARD2)\n              .setAsyncId(\"3002\");\n      splitShardRequest.process(client);\n  \n      // Now submit another task with the same id. At this time, hopefully the previous 3002 should still be in the queue.\n      splitShardRequest = new SplitShard()\n              .setCollectionName(\"ocptest_shardsplit2\")\n              .setShardName(SHARD1)\n              .setAsyncId(\"3002\");\n      CollectionAdminResponse response = splitShardRequest.process(client);\n  \n      NamedList r = response.getResponse();\n      assertEquals(\"Duplicate request was supposed to exist but wasn't found. De-duplication of submitted task failed.\",\n          \"Task with the same requestid already exists.\", r.get(\"error\"));\n  \n      for (int i = 3001; i <= 3002; i++) {\n        final RequestStatusState state = getRequestStateAfterCompletion(i + \"\", REQUEST_STATUS_TIMEOUT, client);\n        assertSame(\"Task \" + i + \" did not complete, final state: \" + state, RequestStatusState.COMPLETED, state);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3217321f3e1d7922898c6c633d17acfa840d6875","date":1496257480,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#testDeduplicationOfSubmittedTasks().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#testDeduplicationOfSubmittedTasks().mjava","sourceNew":"  private void testDeduplicationOfSubmittedTasks() throws IOException, SolrServerException {\n    try (SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)))) {\n      CollectionAdminRequest.createCollection(\"ocptest_shardsplit2\",\"conf1\",4,1).processAsync(\"3000\",client);\n  \n      SplitShard splitShardRequest = CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\").setShardName(SHARD1);\n      splitShardRequest.processAsync(\"3001\",client);\n      \n      splitShardRequest = CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\").setShardName(SHARD2);\n      splitShardRequest.processAsync(\"3002\",client);\n  \n      // Now submit another task with the same id. At this time, hopefully the previous 3002 should still be in the queue.\n      expectThrows(SolrServerException.class, () -> {\n          CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\").setShardName(SHARD1).processAsync(\"3002\",client);\n          // more helpful assertion failure\n          fail(\"Duplicate request was supposed to exist but wasn't found. De-duplication of submitted task failed.\");\n        });\n      \n      for (int i = 3001; i <= 3002; i++) {\n        final RequestStatusState state = getRequestStateAfterCompletion(i + \"\", REQUEST_STATUS_TIMEOUT, client);\n        assertSame(\"Task \" + i + \" did not complete, final state: \" + state, RequestStatusState.COMPLETED, state);\n      }\n    }\n  }\n\n","sourceOld":"  private void testDeduplicationOfSubmittedTasks() throws IOException, SolrServerException {\n    try (SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)))) {\n      new Create()\n              .setCollectionName(\"ocptest_shardsplit2\")\n              .setNumShards(4)\n              .setConfigName(\"conf1\")\n              .setAsyncId(\"3000\")\n              .process(client);\n  \n      SplitShard splitShardRequest = new SplitShard()\n              .setCollectionName(\"ocptest_shardsplit2\")\n              .setShardName(SHARD1)\n              .setAsyncId(\"3001\");\n      splitShardRequest.process(client);\n  \n      splitShardRequest = new SplitShard()\n              .setCollectionName(\"ocptest_shardsplit2\")\n              .setShardName(SHARD2)\n              .setAsyncId(\"3002\");\n      splitShardRequest.process(client);\n  \n      // Now submit another task with the same id. At this time, hopefully the previous 3002 should still be in the queue.\n      splitShardRequest = new SplitShard()\n              .setCollectionName(\"ocptest_shardsplit2\")\n              .setShardName(SHARD1)\n              .setAsyncId(\"3002\");\n      CollectionAdminResponse response = splitShardRequest.process(client);\n  \n      NamedList r = response.getResponse();\n      assertEquals(\"Duplicate request was supposed to exist but wasn't found. De-duplication of submitted task failed.\",\n          \"Task with the same requestid already exists.\", r.get(\"error\"));\n  \n      for (int i = 3001; i <= 3002; i++) {\n        final RequestStatusState state = getRequestStateAfterCompletion(i + \"\", REQUEST_STATUS_TIMEOUT, client);\n        assertSame(\"Task \" + i + \" did not complete, final state: \" + state, RequestStatusState.COMPLETED, state);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"42dc7f2d60851668d9efa2d12baa1d4ebe54b12f","date":1496281877,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#testDeduplicationOfSubmittedTasks().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#testDeduplicationOfSubmittedTasks().mjava","sourceNew":"  private void testDeduplicationOfSubmittedTasks() throws IOException, SolrServerException {\n    try (SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)))) {\n      CollectionAdminRequest.createCollection(\"ocptest_shardsplit2\",\"conf1\",4,1).processAsync(\"3000\",client);\n  \n      SplitShard splitShardRequest = CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\").setShardName(SHARD1);\n      splitShardRequest.processAsync(\"3001\",client);\n      \n      splitShardRequest = CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\").setShardName(SHARD2);\n      splitShardRequest.processAsync(\"3002\",client);\n  \n      // Now submit another task with the same id. At this time, hopefully the previous 3002 should still be in the queue.\n      expectThrows(SolrServerException.class, () -> {\n          CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\").setShardName(SHARD1).processAsync(\"3002\",client);\n          // more helpful assertion failure\n          fail(\"Duplicate request was supposed to exist but wasn't found. De-duplication of submitted task failed.\");\n        });\n      \n      for (int i = 3001; i <= 3002; i++) {\n        final RequestStatusState state = getRequestStateAfterCompletion(i + \"\", REQUEST_STATUS_TIMEOUT, client);\n        assertSame(\"Task \" + i + \" did not complete, final state: \" + state, RequestStatusState.COMPLETED, state);\n      }\n    }\n  }\n\n","sourceOld":"  private void testDeduplicationOfSubmittedTasks() throws IOException, SolrServerException {\n    try (SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)))) {\n      new Create()\n              .setCollectionName(\"ocptest_shardsplit2\")\n              .setNumShards(4)\n              .setConfigName(\"conf1\")\n              .setAsyncId(\"3000\")\n              .process(client);\n  \n      SplitShard splitShardRequest = new SplitShard()\n              .setCollectionName(\"ocptest_shardsplit2\")\n              .setShardName(SHARD1)\n              .setAsyncId(\"3001\");\n      splitShardRequest.process(client);\n  \n      splitShardRequest = new SplitShard()\n              .setCollectionName(\"ocptest_shardsplit2\")\n              .setShardName(SHARD2)\n              .setAsyncId(\"3002\");\n      splitShardRequest.process(client);\n  \n      // Now submit another task with the same id. At this time, hopefully the previous 3002 should still be in the queue.\n      splitShardRequest = new SplitShard()\n              .setCollectionName(\"ocptest_shardsplit2\")\n              .setShardName(SHARD1)\n              .setAsyncId(\"3002\");\n      CollectionAdminResponse response = splitShardRequest.process(client);\n  \n      NamedList r = response.getResponse();\n      assertEquals(\"Duplicate request was supposed to exist but wasn't found. De-duplication of submitted task failed.\",\n          \"Task with the same requestid already exists.\", r.get(\"error\"));\n  \n      for (int i = 3001; i <= 3002; i++) {\n        final RequestStatusState state = getRequestStateAfterCompletion(i + \"\", REQUEST_STATUS_TIMEOUT, client);\n        assertSame(\"Task \" + i + \" did not complete, final state: \" + state, RequestStatusState.COMPLETED, state);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#testDeduplicationOfSubmittedTasks().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#testDeduplicationOfSubmittedTasks().mjava","sourceNew":"  private void testDeduplicationOfSubmittedTasks() throws IOException, SolrServerException {\n    try (SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)))) {\n      CollectionAdminRequest.createCollection(\"ocptest_shardsplit2\",\"conf1\",4,1).processAsync(\"3000\",client);\n  \n      SplitShard splitShardRequest = CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\").setShardName(SHARD1);\n      splitShardRequest.processAsync(\"3001\",client);\n      \n      splitShardRequest = CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\").setShardName(SHARD2);\n      splitShardRequest.processAsync(\"3002\",client);\n  \n      // Now submit another task with the same id. At this time, hopefully the previous 3002 should still be in the queue.\n      expectThrows(SolrServerException.class, () -> {\n          CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\").setShardName(SHARD1).processAsync(\"3002\",client);\n          // more helpful assertion failure\n          fail(\"Duplicate request was supposed to exist but wasn't found. De-duplication of submitted task failed.\");\n        });\n      \n      for (int i = 3001; i <= 3002; i++) {\n        final RequestStatusState state = getRequestStateAfterCompletion(i + \"\", REQUEST_STATUS_TIMEOUT, client);\n        assertSame(\"Task \" + i + \" did not complete, final state: \" + state, RequestStatusState.COMPLETED, state);\n      }\n    }\n  }\n\n","sourceOld":"  private void testDeduplicationOfSubmittedTasks() throws IOException, SolrServerException {\n    try (SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)))) {\n      new Create()\n              .setCollectionName(\"ocptest_shardsplit2\")\n              .setNumShards(4)\n              .setConfigName(\"conf1\")\n              .setAsyncId(\"3000\")\n              .process(client);\n  \n      SplitShard splitShardRequest = new SplitShard()\n              .setCollectionName(\"ocptest_shardsplit2\")\n              .setShardName(SHARD1)\n              .setAsyncId(\"3001\");\n      splitShardRequest.process(client);\n  \n      splitShardRequest = new SplitShard()\n              .setCollectionName(\"ocptest_shardsplit2\")\n              .setShardName(SHARD2)\n              .setAsyncId(\"3002\");\n      splitShardRequest.process(client);\n  \n      // Now submit another task with the same id. At this time, hopefully the previous 3002 should still be in the queue.\n      splitShardRequest = new SplitShard()\n              .setCollectionName(\"ocptest_shardsplit2\")\n              .setShardName(SHARD1)\n              .setAsyncId(\"3002\");\n      CollectionAdminResponse response = splitShardRequest.process(client);\n  \n      NamedList r = response.getResponse();\n      assertEquals(\"Duplicate request was supposed to exist but wasn't found. De-duplication of submitted task failed.\",\n          \"Task with the same requestid already exists.\", r.get(\"error\"));\n  \n      for (int i = 3001; i <= 3002; i++) {\n        final RequestStatusState state = getRequestStateAfterCompletion(i + \"\", REQUEST_STATUS_TIMEOUT, client);\n        assertSame(\"Task \" + i + \" did not complete, final state: \" + state, RequestStatusState.COMPLETED, state);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#testDeduplicationOfSubmittedTasks().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#testDeduplicationOfSubmittedTasks().mjava","sourceNew":"  private void testDeduplicationOfSubmittedTasks() throws IOException, SolrServerException {\n    try (SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)))) {\n      CollectionAdminRequest.createCollection(\"ocptest_shardsplit2\",\"conf1\",3,1).processAsync(\"3000\",client);\n  \n      SplitShard splitShardRequest = CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\").setShardName(SHARD1);\n      splitShardRequest.processAsync(\"3001\",client);\n      \n      splitShardRequest = CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\").setShardName(SHARD2);\n      splitShardRequest.processAsync(\"3002\",client);\n  \n      // Now submit another task with the same id. At this time, hopefully the previous 3002 should still be in the queue.\n      expectThrows(SolrServerException.class, () -> {\n          CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\").setShardName(SHARD1).processAsync(\"3002\",client);\n          // more helpful assertion failure\n          fail(\"Duplicate request was supposed to exist but wasn't found. De-duplication of submitted task failed.\");\n        });\n      \n      for (int i = 3001; i <= 3002; i++) {\n        final RequestStatusState state = getRequestStateAfterCompletion(i + \"\", REQUEST_STATUS_TIMEOUT, client);\n        assertSame(\"Task \" + i + \" did not complete, final state: \" + state, RequestStatusState.COMPLETED, state);\n      }\n    }\n  }\n\n","sourceOld":"  private void testDeduplicationOfSubmittedTasks() throws IOException, SolrServerException {\n    try (SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)))) {\n      CollectionAdminRequest.createCollection(\"ocptest_shardsplit2\",\"conf1\",4,1).processAsync(\"3000\",client);\n  \n      SplitShard splitShardRequest = CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\").setShardName(SHARD1);\n      splitShardRequest.processAsync(\"3001\",client);\n      \n      splitShardRequest = CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\").setShardName(SHARD2);\n      splitShardRequest.processAsync(\"3002\",client);\n  \n      // Now submit another task with the same id. At this time, hopefully the previous 3002 should still be in the queue.\n      expectThrows(SolrServerException.class, () -> {\n          CollectionAdminRequest.splitShard(\"ocptest_shardsplit2\").setShardName(SHARD1).processAsync(\"3002\",client);\n          // more helpful assertion failure\n          fail(\"Duplicate request was supposed to exist but wasn't found. De-duplication of submitted task failed.\");\n        });\n      \n      for (int i = 3001; i <= 3002; i++) {\n        final RequestStatusState state = getRequestStateAfterCompletion(i + \"\", REQUEST_STATUS_TIMEOUT, client);\n        assertSame(\"Task \" + i + \" did not complete, final state: \" + state, RequestStatusState.COMPLETED, state);\n      }\n    }\n  }\n\n","bugFix":["ac97ea104d893f16aab430d9904473bc1f233f3c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3088cdaa24ffe3ef44713ac9484114bd56eca2af":["182acd29cf4cb1644a02b8517f3a5b867c0d7cce"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["3217321f3e1d7922898c6c633d17acfa840d6875"],"ac97ea104d893f16aab430d9904473bc1f233f3c":["3088cdaa24ffe3ef44713ac9484114bd56eca2af"],"e7111ede029f7ea8ba3e71940230d01946105824":["7c8fec3cd782d7ae08ef7a6459a3e3ef41005c83"],"bafca15d8e408346a67f4282ad1143b88023893b":["4a7d7ef06ef6f04ba2de657e90e0458048a967c6"],"3217321f3e1d7922898c6c633d17acfa840d6875":["3088cdaa24ffe3ef44713ac9484114bd56eca2af","ac97ea104d893f16aab430d9904473bc1f233f3c"],"42dc7f2d60851668d9efa2d12baa1d4ebe54b12f":["3088cdaa24ffe3ef44713ac9484114bd56eca2af","3217321f3e1d7922898c6c633d17acfa840d6875"],"4a7d7ef06ef6f04ba2de657e90e0458048a967c6":["e7111ede029f7ea8ba3e71940230d01946105824"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["3088cdaa24ffe3ef44713ac9484114bd56eca2af","42dc7f2d60851668d9efa2d12baa1d4ebe54b12f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"182acd29cf4cb1644a02b8517f3a5b867c0d7cce":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["bafca15d8e408346a67f4282ad1143b88023893b"],"7c8fec3cd782d7ae08ef7a6459a3e3ef41005c83":["74fe755c1cb9c998d933b455c573e86e9ef5d2aa"],"74fe755c1cb9c998d933b455c573e86e9ef5d2aa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"]},"commit2Childs":{"3088cdaa24ffe3ef44713ac9484114bd56eca2af":["ac97ea104d893f16aab430d9904473bc1f233f3c","3217321f3e1d7922898c6c633d17acfa840d6875","42dc7f2d60851668d9efa2d12baa1d4ebe54b12f","e9017cf144952056066919f1ebc7897ff9bd71b1"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ac97ea104d893f16aab430d9904473bc1f233f3c":["3217321f3e1d7922898c6c633d17acfa840d6875"],"e7111ede029f7ea8ba3e71940230d01946105824":["4a7d7ef06ef6f04ba2de657e90e0458048a967c6"],"3217321f3e1d7922898c6c633d17acfa840d6875":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","42dc7f2d60851668d9efa2d12baa1d4ebe54b12f"],"bafca15d8e408346a67f4282ad1143b88023893b":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"42dc7f2d60851668d9efa2d12baa1d4ebe54b12f":["e9017cf144952056066919f1ebc7897ff9bd71b1"],"4a7d7ef06ef6f04ba2de657e90e0458048a967c6":["bafca15d8e408346a67f4282ad1143b88023893b"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74fe755c1cb9c998d933b455c573e86e9ef5d2aa"],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["182acd29cf4cb1644a02b8517f3a5b867c0d7cce"],"182acd29cf4cb1644a02b8517f3a5b867c0d7cce":["3088cdaa24ffe3ef44713ac9484114bd56eca2af"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"7c8fec3cd782d7ae08ef7a6459a3e3ef41005c83":["e7111ede029f7ea8ba3e71940230d01946105824"],"74fe755c1cb9c998d933b455c573e86e9ef5d2aa":["7c8fec3cd782d7ae08ef7a6459a3e3ef41005c83"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}