{"path":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#newDistanceQuery(String,double,double,double).mjava","commits":[{"id":"976a394d3766ec527a334072ea20ed791d81e330","date":1456749520,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#newDistanceQuery(String,double,double,double).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a query for matching points within the specified distance of the supplied location.\n   */\n  public static Query newDistanceQuery(String field, double latitude, double longitude, double radiusMeters) {\n    return new PointDistanceQuery(field, latitude, longitude, radiusMeters);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#newDistanceQuery(String,double,double,double).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a query for matching points within the specified distance of the supplied location.\n   */\n  public static Query newDistanceQuery(String field, double latitude, double longitude, double radiusMeters) {\n    return new PointDistanceQuery(field, latitude, longitude, radiusMeters);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"94ee361295fb38310ac4d53cb4773d1622423d68","date":1456833885,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#newDistanceQuery(String,double,double,double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#newDistanceQuery(String,double,double,double).mjava","sourceNew":"  /**\n   * Create a query for matching points within the specified distance of the supplied location.\n   * @param field field name. cannot be null.\n   * @param latitude latitude at the center: must be within standard +/-90 coordinate bounds.\n   * @param longitude longitude at the center: must be within standard +/-180 coordinate bounds.\n   * @param radiusMeters maximum distance from the center in meters: must be non-negative and finite.\n   * @return query matching points within this distance\n   * @throws IllegalArgumentException if {@code field} is null, location has invalid coordinates, or radius is invalid.\n   */\n  public static Query newDistanceQuery(String field, double latitude, double longitude, double radiusMeters) {\n    return new LatLonPointDistanceQuery(field, latitude, longitude, radiusMeters);\n  }\n\n","sourceOld":"  /**\n   * Create a query for matching points within the specified distance of the supplied location.\n   */\n  public static Query newDistanceQuery(String field, double latitude, double longitude, double radiusMeters) {\n    return new PointDistanceQuery(field, latitude, longitude, radiusMeters);\n  }\n\n","bugFix":null,"bugIntro":["ad0d09e969f4763b0df4230f8e3f74357872a4e4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#newDistanceQuery(String,double,double,double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#newDistanceQuery(String,double,double,double).mjava","sourceNew":"  /**\n   * Create a query for matching points within the specified distance of the supplied location.\n   * @param field field name. cannot be null.\n   * @param latitude latitude at the center: must be within standard +/-90 coordinate bounds.\n   * @param longitude longitude at the center: must be within standard +/-180 coordinate bounds.\n   * @param radiusMeters maximum distance from the center in meters: must be non-negative and finite.\n   * @return query matching points within this distance\n   * @throws IllegalArgumentException if {@code field} is null, location has invalid coordinates, or radius is invalid.\n   */\n  public static Query newDistanceQuery(String field, double latitude, double longitude, double radiusMeters) {\n    return new LatLonPointDistanceQuery(field, latitude, longitude, radiusMeters);\n  }\n\n","sourceOld":"  /**\n   * Create a query for matching points within the specified distance of the supplied location.\n   */\n  public static Query newDistanceQuery(String field, double latitude, double longitude, double radiusMeters) {\n    return new PointDistanceQuery(field, latitude, longitude, radiusMeters);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad0d09e969f4763b0df4230f8e3f74357872a4e4","date":1459188769,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#newDistanceQuery(String,double,double,double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#newDistanceQuery(String,double,double,double).mjava","sourceNew":"  /**\n   * Create a query for matching points within the specified distance of the supplied location.\n   * @param field field name. must not be null.\n   * @param latitude latitude at the center: must be within standard +/-90 coordinate bounds.\n   * @param longitude longitude at the center: must be within standard +/-180 coordinate bounds.\n   * @param radiusMeters maximum distance from the center in meters: must be non-negative and finite.\n   * @return query matching points within this distance\n   * @throws IllegalArgumentException if {@code field} is null, location has invalid coordinates, or radius is invalid.\n   */\n  public static Query newDistanceQuery(String field, double latitude, double longitude, double radiusMeters) {\n    return new LatLonPointDistanceQuery(field, latitude, longitude, radiusMeters);\n  }\n\n","sourceOld":"  /**\n   * Create a query for matching points within the specified distance of the supplied location.\n   * @param field field name. cannot be null.\n   * @param latitude latitude at the center: must be within standard +/-90 coordinate bounds.\n   * @param longitude longitude at the center: must be within standard +/-180 coordinate bounds.\n   * @param radiusMeters maximum distance from the center in meters: must be non-negative and finite.\n   * @return query matching points within this distance\n   * @throws IllegalArgumentException if {@code field} is null, location has invalid coordinates, or radius is invalid.\n   */\n  public static Query newDistanceQuery(String field, double latitude, double longitude, double radiusMeters) {\n    return new LatLonPointDistanceQuery(field, latitude, longitude, radiusMeters);\n  }\n\n","bugFix":["94ee361295fb38310ac4d53cb4773d1622423d68"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"88b0212386fe531136816706dc37dc49b9dbf7dc","date":1532560226,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/LatLonPoint#newDistanceQuery(String,double,double,double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#newDistanceQuery(String,double,double,double).mjava","sourceNew":"  /**\n   * Create a query for matching points within the specified distance of the supplied location.\n   * @param field field name. must not be null.\n   * @param latitude latitude at the center: must be within standard +/-90 coordinate bounds.\n   * @param longitude longitude at the center: must be within standard +/-180 coordinate bounds.\n   * @param radiusMeters maximum distance from the center in meters: must be non-negative and finite.\n   * @return query matching points within this distance\n   * @throws IllegalArgumentException if {@code field} is null, location has invalid coordinates, or radius is invalid.\n   */\n  public static Query newDistanceQuery(String field, double latitude, double longitude, double radiusMeters) {\n    return new LatLonPointDistanceQuery(field, latitude, longitude, radiusMeters);\n  }\n\n","sourceOld":"  /**\n   * Create a query for matching points within the specified distance of the supplied location.\n   * @param field field name. must not be null.\n   * @param latitude latitude at the center: must be within standard +/-90 coordinate bounds.\n   * @param longitude longitude at the center: must be within standard +/-180 coordinate bounds.\n   * @param radiusMeters maximum distance from the center in meters: must be non-negative and finite.\n   * @return query matching points within this distance\n   * @throws IllegalArgumentException if {@code field} is null, location has invalid coordinates, or radius is invalid.\n   */\n  public static Query newDistanceQuery(String field, double latitude, double longitude, double radiusMeters) {\n    return new LatLonPointDistanceQuery(field, latitude, longitude, radiusMeters);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","976a394d3766ec527a334072ea20ed791d81e330"],"88b0212386fe531136816706dc37dc49b9dbf7dc":["ad0d09e969f4763b0df4230f8e3f74357872a4e4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"94ee361295fb38310ac4d53cb4773d1622423d68":["976a394d3766ec527a334072ea20ed791d81e330"],"ad0d09e969f4763b0df4230f8e3f74357872a4e4":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["af2638813028b254a88b418ebeafb541afb49653","94ee361295fb38310ac4d53cb4773d1622423d68"],"976a394d3766ec527a334072ea20ed791d81e330":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["88b0212386fe531136816706dc37dc49b9dbf7dc"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","976a394d3766ec527a334072ea20ed791d81e330"],"88b0212386fe531136816706dc37dc49b9dbf7dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"94ee361295fb38310ac4d53cb4773d1622423d68":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"ad0d09e969f4763b0df4230f8e3f74357872a4e4":["88b0212386fe531136816706dc37dc49b9dbf7dc"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["ad0d09e969f4763b0df4230f8e3f74357872a4e4"],"976a394d3766ec527a334072ea20ed791d81e330":["af2638813028b254a88b418ebeafb541afb49653","94ee361295fb38310ac4d53cb4773d1622423d68"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}