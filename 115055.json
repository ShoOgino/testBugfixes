{"path":"lucene/queries/src/java/org/apache/lucene/queries/TermsFilter#TermsFilter(String,List[BytesRef]).mjava","commits":[{"id":"4107dd39b127d892359c5c1d67d0f14d92f1a9bf","date":1351689723,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/TermsFilter#TermsFilter(String,List[BytesRef]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a new {@link TermsFilter} from the given {@link BytesRef} list for\n   * a single field.\n   */\n  public TermsFilter(final String field, final List<BytesRef> terms) {\n    this(new FieldAndTermEnum(field) {\n      // we need to sort for deduplication and to have a common cache key\n      final Iterator<BytesRef> iter = sort(terms).iterator();\n      @Override\n      public BytesRef next() {\n        if (iter.hasNext()) {\n          return iter.next();\n        }\n        return null;\n      }\n    }, terms.size());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2042d3e27841c5b60112990fc33559e10ccf6dd","date":1424537395,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/TermsQuery#TermsQuery(String,List[BytesRef]).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/TermsFilter#TermsFilter(String,List[BytesRef]).mjava","sourceNew":"  /**\n   * Creates a new {@link TermsQuery} from the given {@link BytesRef} list for\n   * a single field.\n   */\n  public TermsQuery(final String field, final List<BytesRef> terms) {\n    this(new FieldAndTermEnum(field) {\n      // we need to sort for deduplication and to have a common cache key\n      final Iterator<BytesRef> iter = sort(terms).iterator();\n      @Override\n      public BytesRef next() {\n        if (iter.hasNext()) {\n          return iter.next();\n        }\n        return null;\n      }\n    }, terms.size());\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link TermsFilter} from the given {@link BytesRef} list for\n   * a single field.\n   */\n  public TermsFilter(final String field, final List<BytesRef> terms) {\n    this(new FieldAndTermEnum(field) {\n      // we need to sort for deduplication and to have a common cache key\n      final Iterator<BytesRef> iter = sort(terms).iterator();\n      @Override\n      public BytesRef next() {\n        if (iter.hasNext()) {\n          return iter.next();\n        }\n        return null;\n      }\n    }, terms.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4107dd39b127d892359c5c1d67d0f14d92f1a9bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c2042d3e27841c5b60112990fc33559e10ccf6dd":["4107dd39b127d892359c5c1d67d0f14d92f1a9bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c2042d3e27841c5b60112990fc33559e10ccf6dd"]},"commit2Childs":{"4107dd39b127d892359c5c1d67d0f14d92f1a9bf":["c2042d3e27841c5b60112990fc33559e10ccf6dd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4107dd39b127d892359c5c1d67d0f14d92f1a9bf"],"c2042d3e27841c5b60112990fc33559e10ccf6dd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}