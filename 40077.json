{"path":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetCounts#testRequireDimCount().mjava","commits":[{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetCounts#testRequireDimCount().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testRequireDimCount().mjava","sourceNew":"  public void testRequireDimCount() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n    config.setMultiValued(\"dim2\", true);\n    config.setMultiValued(\"dim3\", true);\n    config.setHierarchical(\"dim3\", true);\n    config.setRequireDimCount(\"dim\", true);\n    config.setRequireDimCount(\"dim2\", true);\n    config.setRequireDimCount(\"dim3\", true);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"dim\", \"a\"));\n    doc.add(new FacetField(\"dim2\", \"a\"));\n    doc.add(new FacetField(\"dim2\", \"b\"));\n    doc.add(new FacetField(\"dim3\", \"a\", \"b\"));\n    doc.add(new FacetField(\"dim3\", \"a\", \"c\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);\n    \n    Facets facets = getTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(1, facets.getTopChildren(10, \"dim\").value);\n    assertEquals(1, facets.getTopChildren(10, \"dim2\").value);\n    assertEquals(1, facets.getTopChildren(10, \"dim3\").value);\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testRequireDimCount() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n    config.setMultiValued(\"dim2\", true);\n    config.setMultiValued(\"dim3\", true);\n    config.setHierarchical(\"dim3\", true);\n    config.setRequireDimCount(\"dim\", true);\n    config.setRequireDimCount(\"dim2\", true);\n    config.setRequireDimCount(\"dim3\", true);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"dim\", \"a\"));\n    doc.add(new FacetField(\"dim2\", \"a\"));\n    doc.add(new FacetField(\"dim2\", \"b\"));\n    doc.add(new FacetField(\"dim3\", \"a\", \"b\"));\n    doc.add(new FacetField(\"dim3\", \"a\", \"c\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);\n    \n    Facets facets = getTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(1, facets.getTopChildren(10, \"dim\").value);\n    assertEquals(1, facets.getTopChildren(10, \"dim2\").value);\n    assertEquals(1, facets.getTopChildren(10, \"dim3\").value);\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd83550e4b0bdd36e7d9dca9273264100782440b","date":1385761753,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetCounts#testRequireDimCount().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetCounts#testRequireDimCount().mjava","sourceNew":"  public void testRequireDimCount() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setMultiValued(\"dim2\", true);\n    config.setMultiValued(\"dim3\", true);\n    config.setHierarchical(\"dim3\", true);\n    config.setRequireDimCount(\"dim\", true);\n    config.setRequireDimCount(\"dim2\", true);\n    config.setRequireDimCount(\"dim3\", true);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"dim\", \"a\"));\n    doc.add(new FacetField(\"dim2\", \"a\"));\n    doc.add(new FacetField(\"dim2\", \"b\"));\n    doc.add(new FacetField(\"dim3\", \"a\", \"b\"));\n    doc.add(new FacetField(\"dim3\", \"a\", \"c\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);\n    \n    Facets facets = getTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(1, facets.getTopChildren(10, \"dim\").value);\n    assertEquals(1, facets.getTopChildren(10, \"dim2\").value);\n    assertEquals(1, facets.getTopChildren(10, \"dim3\").value);\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testRequireDimCount() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n    config.setMultiValued(\"dim2\", true);\n    config.setMultiValued(\"dim3\", true);\n    config.setHierarchical(\"dim3\", true);\n    config.setRequireDimCount(\"dim\", true);\n    config.setRequireDimCount(\"dim2\", true);\n    config.setRequireDimCount(\"dim3\", true);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"dim\", \"a\"));\n    doc.add(new FacetField(\"dim2\", \"a\"));\n    doc.add(new FacetField(\"dim2\", \"b\"));\n    doc.add(new FacetField(\"dim3\", \"a\", \"b\"));\n    doc.add(new FacetField(\"dim3\", \"a\", \"c\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);\n    \n    Facets facets = getTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(1, facets.getTopChildren(10, \"dim\").value);\n    assertEquals(1, facets.getTopChildren(10, \"dim2\").value);\n    assertEquals(1, facets.getTopChildren(10, \"dim3\").value);\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51aa27dcefc9a1be9ba2bb5f1c29d5e357cec4f8","date":1387415264,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetCounts#testRequireDimCount().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetCounts#testRequireDimCount().mjava","sourceNew":"  public void testRequireDimCount() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setRequireDimCount(\"dim\", true);\n\n    config.setMultiValued(\"dim2\", true);\n    config.setRequireDimCount(\"dim2\", true);\n\n    config.setMultiValued(\"dim3\", true);\n    config.setHierarchical(\"dim3\", true);\n    config.setRequireDimCount(\"dim3\", true);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"dim\", \"a\"));\n    doc.add(new FacetField(\"dim2\", \"a\"));\n    doc.add(new FacetField(\"dim2\", \"b\"));\n    doc.add(new FacetField(\"dim3\", \"a\", \"b\"));\n    doc.add(new FacetField(\"dim3\", \"a\", \"c\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);\n    \n    Facets facets = getTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(1, facets.getTopChildren(10, \"dim\").value);\n    assertEquals(1, facets.getTopChildren(10, \"dim2\").value);\n    assertEquals(1, facets.getTopChildren(10, \"dim3\").value);\n    try {\n      assertEquals(1, facets.getSpecificValue(\"dim\"));\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    assertEquals(1, facets.getSpecificValue(\"dim2\"));\n    assertEquals(1, facets.getSpecificValue(\"dim3\"));\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testRequireDimCount() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setMultiValued(\"dim2\", true);\n    config.setMultiValued(\"dim3\", true);\n    config.setHierarchical(\"dim3\", true);\n    config.setRequireDimCount(\"dim\", true);\n    config.setRequireDimCount(\"dim2\", true);\n    config.setRequireDimCount(\"dim3\", true);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"dim\", \"a\"));\n    doc.add(new FacetField(\"dim2\", \"a\"));\n    doc.add(new FacetField(\"dim2\", \"b\"));\n    doc.add(new FacetField(\"dim3\", \"a\", \"b\"));\n    doc.add(new FacetField(\"dim3\", \"a\", \"c\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);\n    \n    Facets facets = getTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(1, facets.getTopChildren(10, \"dim\").value);\n    assertEquals(1, facets.getTopChildren(10, \"dim2\").value);\n    assertEquals(1, facets.getTopChildren(10, \"dim3\").value);\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testRequireDimCount().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetCounts#testRequireDimCount().mjava","sourceNew":"  public void testRequireDimCount() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setRequireDimCount(\"dim\", true);\n\n    config.setMultiValued(\"dim2\", true);\n    config.setRequireDimCount(\"dim2\", true);\n\n    config.setMultiValued(\"dim3\", true);\n    config.setHierarchical(\"dim3\", true);\n    config.setRequireDimCount(\"dim3\", true);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"dim\", \"a\"));\n    doc.add(new FacetField(\"dim2\", \"a\"));\n    doc.add(new FacetField(\"dim2\", \"b\"));\n    doc.add(new FacetField(\"dim3\", \"a\", \"b\"));\n    doc.add(new FacetField(\"dim3\", \"a\", \"c\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);\n    \n    Facets facets = getTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(1, facets.getTopChildren(10, \"dim\").value);\n    assertEquals(1, facets.getTopChildren(10, \"dim2\").value);\n    assertEquals(1, facets.getTopChildren(10, \"dim3\").value);\n    try {\n      assertEquals(1, facets.getSpecificValue(\"dim\"));\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    assertEquals(1, facets.getSpecificValue(\"dim2\"));\n    assertEquals(1, facets.getSpecificValue(\"dim3\"));\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testRequireDimCount() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setRequireDimCount(\"dim\", true);\n\n    config.setMultiValued(\"dim2\", true);\n    config.setRequireDimCount(\"dim2\", true);\n\n    config.setMultiValued(\"dim3\", true);\n    config.setHierarchical(\"dim3\", true);\n    config.setRequireDimCount(\"dim3\", true);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"text\", Field.Store.NO));\n    doc.add(new FacetField(\"dim\", \"a\"));\n    doc.add(new FacetField(\"dim2\", \"a\"));\n    doc.add(new FacetField(\"dim2\", \"b\"));\n    doc.add(new FacetField(\"dim3\", \"a\", \"b\"));\n    doc.add(new FacetField(\"dim3\", \"a\", \"c\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);\n    \n    Facets facets = getTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(1, facets.getTopChildren(10, \"dim\").value);\n    assertEquals(1, facets.getTopChildren(10, \"dim2\").value);\n    assertEquals(1, facets.getTopChildren(10, \"dim3\").value);\n    try {\n      assertEquals(1, facets.getSpecificValue(\"dim\"));\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    assertEquals(1, facets.getSpecificValue(\"dim2\"));\n    assertEquals(1, facets.getSpecificValue(\"dim3\"));\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4edc984f0f4ac77c37e48ace2932f780f888453c":["51aa27dcefc9a1be9ba2bb5f1c29d5e357cec4f8"],"21d36d0db865f7b84026b447bec653469a6e66df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fd83550e4b0bdd36e7d9dca9273264100782440b":["21d36d0db865f7b84026b447bec653469a6e66df"],"51aa27dcefc9a1be9ba2bb5f1c29d5e357cec4f8":["fd83550e4b0bdd36e7d9dca9273264100782440b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4edc984f0f4ac77c37e48ace2932f780f888453c":[],"21d36d0db865f7b84026b447bec653469a6e66df":["fd83550e4b0bdd36e7d9dca9273264100782440b"],"fd83550e4b0bdd36e7d9dca9273264100782440b":["51aa27dcefc9a1be9ba2bb5f1c29d5e357cec4f8"],"51aa27dcefc9a1be9ba2bb5f1c29d5e357cec4f8":["4edc984f0f4ac77c37e48ace2932f780f888453c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4edc984f0f4ac77c37e48ace2932f780f888453c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}