{"path":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#assertSolrDocumentList(Object,Object).mjava","commits":[{"id":"6071e662e00f61ccd046fe73a31ac6e57aaca116","date":1394797480,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#assertSolrDocumentList(Object,Object).mjava","pathOld":"/dev/null","sourceNew":"  public boolean assertSolrDocumentList(Object expected, Object actual) {\n    if (!(expected instanceof SolrDocumentList)  || !(actual instanceof SolrDocumentList)) {\n      return false;\n    }\n\n    if (expected == actual) {\n      return true;\n    }\n\n    SolrDocumentList list1 = (SolrDocumentList) expected;\n    SolrDocumentList list2 = (SolrDocumentList) actual;\n\n    if(Float.compare(list1.getMaxScore(), list2.getMaxScore()) != 0 || list1.getNumFound() != list2.getNumFound() ||\n        list1.getStart() != list2.getStart()) {\n      return false;\n    }\n    for(int i=0; i<list1.getNumFound(); i++) {\n      if(!assertSolrDocumentEquals(list1.get(i), list2.get(i))) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f50fec5dadda9f0c72e0e8fe342b6438178a459","date":1402575501,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#compareSolrDocumentList(Object,Object).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#assertSolrDocumentList(Object,Object).mjava","sourceNew":"  public boolean compareSolrDocumentList(Object expected, Object actual) {\n    if (!(expected instanceof SolrDocumentList)  || !(actual instanceof SolrDocumentList)) {\n      return false;\n    }\n\n    if (expected == actual) {\n      return true;\n    }\n\n    SolrDocumentList list1 = (SolrDocumentList) expected;\n    SolrDocumentList list2 = (SolrDocumentList) actual;\n\n    if(Float.compare(list1.getMaxScore(), list2.getMaxScore()) != 0 || list1.getNumFound() != list2.getNumFound() ||\n        list1.getStart() != list2.getStart()) {\n      return false;\n    }\n    for(int i=0; i<list1.getNumFound(); i++) {\n      if(!compareSolrDocument(list1.get(i), list2.get(i))) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","sourceOld":"  public boolean assertSolrDocumentList(Object expected, Object actual) {\n    if (!(expected instanceof SolrDocumentList)  || !(actual instanceof SolrDocumentList)) {\n      return false;\n    }\n\n    if (expected == actual) {\n      return true;\n    }\n\n    SolrDocumentList list1 = (SolrDocumentList) expected;\n    SolrDocumentList list2 = (SolrDocumentList) actual;\n\n    if(Float.compare(list1.getMaxScore(), list2.getMaxScore()) != 0 || list1.getNumFound() != list2.getNumFound() ||\n        list1.getStart() != list2.getStart()) {\n      return false;\n    }\n    for(int i=0; i<list1.getNumFound(); i++) {\n      if(!assertSolrDocumentEquals(list1.get(i), list2.get(i))) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6f080a2ab37c464dd98db173f6cbf10dc74f211","date":1402946779,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#compareSolrDocumentList(Object,Object).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#assertSolrDocumentList(Object,Object).mjava","sourceNew":"  public boolean compareSolrDocumentList(Object expected, Object actual) {\n    if (!(expected instanceof SolrDocumentList)  || !(actual instanceof SolrDocumentList)) {\n      return false;\n    }\n\n    if (expected == actual) {\n      return true;\n    }\n\n    SolrDocumentList list1 = (SolrDocumentList) expected;\n    SolrDocumentList list2 = (SolrDocumentList) actual;\n\n    if(Float.compare(list1.getMaxScore(), list2.getMaxScore()) != 0 || list1.getNumFound() != list2.getNumFound() ||\n        list1.getStart() != list2.getStart()) {\n      return false;\n    }\n    for(int i=0; i<list1.getNumFound(); i++) {\n      if(!compareSolrDocument(list1.get(i), list2.get(i))) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","sourceOld":"  public boolean assertSolrDocumentList(Object expected, Object actual) {\n    if (!(expected instanceof SolrDocumentList)  || !(actual instanceof SolrDocumentList)) {\n      return false;\n    }\n\n    if (expected == actual) {\n      return true;\n    }\n\n    SolrDocumentList list1 = (SolrDocumentList) expected;\n    SolrDocumentList list2 = (SolrDocumentList) actual;\n\n    if(Float.compare(list1.getMaxScore(), list2.getMaxScore()) != 0 || list1.getNumFound() != list2.getNumFound() ||\n        list1.getStart() != list2.getStart()) {\n      return false;\n    }\n    for(int i=0; i<list1.getNumFound(); i++) {\n      if(!assertSolrDocumentEquals(list1.get(i), list2.get(i))) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6071e662e00f61ccd046fe73a31ac6e57aaca116":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3f50fec5dadda9f0c72e0e8fe342b6438178a459":["6071e662e00f61ccd046fe73a31ac6e57aaca116"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":["6071e662e00f61ccd046fe73a31ac6e57aaca116","3f50fec5dadda9f0c72e0e8fe342b6438178a459"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f50fec5dadda9f0c72e0e8fe342b6438178a459"]},"commit2Childs":{"6071e662e00f61ccd046fe73a31ac6e57aaca116":["3f50fec5dadda9f0c72e0e8fe342b6438178a459","c6f080a2ab37c464dd98db173f6cbf10dc74f211"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6071e662e00f61ccd046fe73a31ac6e57aaca116"],"3f50fec5dadda9f0c72e0e8fe342b6438178a459":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}