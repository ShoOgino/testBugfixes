{"path":"src/java/org/apache/solr/core/SolrResourceLoader#getLines(String,Charset).mjava","commits":[{"id":"84b6c001c19319635b53dd80ee9fc1ba9a5b4574","date":1213883214,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrResourceLoader#getLines(String,Charset).mjava","pathOld":"/dev/null","sourceNew":"  public List<String> getLines(String resource, Charset charset) throws IOException{\n    BufferedReader input = null;\n    input = new BufferedReader(new InputStreamReader(openResource(resource),\n        charset));\n\n    ArrayList<String> lines = new ArrayList<String>();\n    for (String word=null; (word=input.readLine())!=null;) {\n      // skip comments\n      if (word.startsWith(\"#\")) continue;\n      word=word.trim();\n      // skip blank lines\n      if (word.length()==0) continue;\n      lines.add(word);\n    }\n    return lines;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["98d3ffa0e5e79ca3d7bb167bab665faa7bcadc21"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"98d3ffa0e5e79ca3d7bb167bab665faa7bcadc21","date":1227097508,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrResourceLoader#getLines(String,Charset).mjava","pathOld":"src/java/org/apache/solr/core/SolrResourceLoader#getLines(String,Charset).mjava","sourceNew":"  public List<String> getLines(String resource, Charset charset) throws IOException{\n    BufferedReader input = null;\n    ArrayList<String> lines;\n    try {\n      input = new BufferedReader(new InputStreamReader(openResource(resource),\n          charset));\n\n      lines = new ArrayList<String>();\n      for (String word=null; (word=input.readLine())!=null;) {\n        // skip comments\n        if (word.startsWith(\"#\")) continue;\n        word=word.trim();\n        // skip blank lines\n        if (word.length()==0) continue;\n        lines.add(word);\n      }\n    } finally {\n      if (input != null)\n        input.close();\n    }\n    return lines;\n  }\n\n","sourceOld":"  public List<String> getLines(String resource, Charset charset) throws IOException{\n    BufferedReader input = null;\n    input = new BufferedReader(new InputStreamReader(openResource(resource),\n        charset));\n\n    ArrayList<String> lines = new ArrayList<String>();\n    for (String word=null; (word=input.readLine())!=null;) {\n      // skip comments\n      if (word.startsWith(\"#\")) continue;\n      word=word.trim();\n      // skip blank lines\n      if (word.length()==0) continue;\n      lines.add(word);\n    }\n    return lines;\n  }\n\n","bugFix":["84b6c001c19319635b53dd80ee9fc1ba9a5b4574"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrResourceLoader#getLines(String,Charset).mjava","pathOld":"src/java/org/apache/solr/core/SolrResourceLoader#getLines(String,Charset).mjava","sourceNew":"  public List<String> getLines(String resource, Charset charset) throws IOException{\n    BufferedReader input = null;\n    ArrayList<String> lines;\n    try {\n      input = new BufferedReader(new InputStreamReader(openResource(resource),\n          charset));\n\n      lines = new ArrayList<String>();\n      for (String word=null; (word=input.readLine())!=null;) {\n        // skip comments\n        if (word.startsWith(\"#\")) continue;\n        word=word.trim();\n        // skip blank lines\n        if (word.length()==0) continue;\n        lines.add(word);\n      }\n    } finally {\n      if (input != null)\n        input.close();\n    }\n    return lines;\n  }\n\n","sourceOld":"  public List<String> getLines(String resource, Charset charset) throws IOException{\n    BufferedReader input = null;\n    ArrayList<String> lines;\n    try {\n      input = new BufferedReader(new InputStreamReader(openResource(resource),\n          charset));\n\n      lines = new ArrayList<String>();\n      for (String word=null; (word=input.readLine())!=null;) {\n        // skip comments\n        if (word.startsWith(\"#\")) continue;\n        word=word.trim();\n        // skip blank lines\n        if (word.length()==0) continue;\n        lines.add(word);\n      }\n    } finally {\n      if (input != null)\n        input.close();\n    }\n    return lines;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"84b6c001c19319635b53dd80ee9fc1ba9a5b4574":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["98d3ffa0e5e79ca3d7bb167bab665faa7bcadc21"],"98d3ffa0e5e79ca3d7bb167bab665faa7bcadc21":["84b6c001c19319635b53dd80ee9fc1ba9a5b4574"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"84b6c001c19319635b53dd80ee9fc1ba9a5b4574":["98d3ffa0e5e79ca3d7bb167bab665faa7bcadc21"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["84b6c001c19319635b53dd80ee9fc1ba9a5b4574"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"98d3ffa0e5e79ca3d7bb167bab665faa7bcadc21":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}