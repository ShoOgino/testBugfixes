{"path":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#testNorms().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#testNorms().mjava","pathOld":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#testNorms().mjava","sourceNew":"  /* Tests doc.tokenized.norms and doc.body.tokenized.norms properties. */\n  public void testNorms() throws Exception {\n    \n    Document doc;\n    \n    // Don't set anything, use the defaults\n    doc = createTestNormsDocument(false, false, false, false);\n    assertTrue(doc.getField(DocMaker.TITLE_FIELD).fieldType().omitNorms());\n    assertFalse(doc.getField(DocMaker.BODY_FIELD).fieldType().omitNorms());\n    \n    // Set norms to false\n    doc = createTestNormsDocument(true, false, false, false);\n    assertTrue(doc.getField(DocMaker.TITLE_FIELD).fieldType().omitNorms());\n    assertFalse(doc.getField(DocMaker.BODY_FIELD).fieldType().omitNorms());\n    \n    // Set norms to true\n    doc = createTestNormsDocument(true, true, false, false);\n    assertFalse(doc.getField(DocMaker.TITLE_FIELD).fieldType().omitNorms());\n    assertFalse(doc.getField(DocMaker.BODY_FIELD).fieldType().omitNorms());\n    \n    // Set body norms to false\n    doc = createTestNormsDocument(false, false, true, false);\n    assertTrue(doc.getField(DocMaker.TITLE_FIELD).fieldType().omitNorms());\n    assertTrue(doc.getField(DocMaker.BODY_FIELD).fieldType().omitNorms());\n    \n    // Set body norms to true\n    doc = createTestNormsDocument(false, false, true, true);\n    assertTrue(doc.getField(DocMaker.TITLE_FIELD).fieldType().omitNorms());\n    assertFalse(doc.getField(DocMaker.BODY_FIELD).fieldType().omitNorms());\n  }\n\n","sourceOld":"  /* Tests doc.tokenized.norms and doc.body.tokenized.norms properties. */\n  public void testNorms() throws Exception {\n    \n    Document doc;\n    \n    // Don't set anything, use the defaults\n    doc = createTestNormsDocument(false, false, false, false);\n    assertTrue(doc.getField(DocMaker.TITLE_FIELD).fieldType().omitNorms());\n    assertFalse(doc.getField(DocMaker.BODY_FIELD).fieldType().omitNorms());\n    \n    // Set norms to false\n    doc = createTestNormsDocument(true, false, false, false);\n    assertTrue(doc.getField(DocMaker.TITLE_FIELD).fieldType().omitNorms());\n    assertFalse(doc.getField(DocMaker.BODY_FIELD).fieldType().omitNorms());\n    \n    // Set norms to true\n    doc = createTestNormsDocument(true, true, false, false);\n    assertFalse(doc.getField(DocMaker.TITLE_FIELD).fieldType().omitNorms());\n    assertFalse(doc.getField(DocMaker.BODY_FIELD).fieldType().omitNorms());\n    \n    // Set body norms to false\n    doc = createTestNormsDocument(false, false, true, false);\n    assertTrue(doc.getField(DocMaker.TITLE_FIELD).fieldType().omitNorms());\n    assertTrue(doc.getField(DocMaker.BODY_FIELD).fieldType().omitNorms());\n    \n    // Set body norms to true\n    doc = createTestNormsDocument(false, false, true, true);\n    assertTrue(doc.getField(DocMaker.TITLE_FIELD).fieldType().omitNorms());\n    assertFalse(doc.getField(DocMaker.BODY_FIELD).fieldType().omitNorms());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}