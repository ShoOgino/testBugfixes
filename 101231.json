{"path":"solr/core/src/test/org/apache/solr/schema/TestManagedSchemaThreadSafety#indexSchemaLoader(String,ZkController).mjava","commits":[{"id":"6586bbbc5a9acb1d4613edc6ba8d90836f7cba2c","date":1475421873,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestManagedSchemaThreadSafety#indexSchemaLoader(String,ZkController).mjava","pathOld":"/dev/null","sourceNew":"  private Runnable indexSchemaLoader(String configsetName, final ZkController zkController) {\n    return () -> {\n      try {\n        SolrResourceLoader loader = new ZkSolrResourceLoader(loaderPath, configsetName, zkController);\n        SolrConfig solrConfig = SolrConfig.readFromResourceLoader(loader, \"solrconfig.xml\");\n\n        ManagedIndexSchemaFactory factory = new ManagedIndexSchemaFactory();\n        factory.init(new NamedList());\n        factory.create(\"schema.xml\", solrConfig);\n      }\n      catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestManagedSchemaThreadSafety#indexSchemaLoader(String,ZkController).mjava","pathOld":"/dev/null","sourceNew":"  private Runnable indexSchemaLoader(String configsetName, final ZkController zkController) {\n    return () -> {\n      try {\n        SolrResourceLoader loader = new ZkSolrResourceLoader(loaderPath, configsetName, zkController);\n        SolrConfig solrConfig = SolrConfig.readFromResourceLoader(loader, \"solrconfig.xml\");\n\n        ManagedIndexSchemaFactory factory = new ManagedIndexSchemaFactory();\n        factory.init(new NamedList());\n        factory.create(\"schema.xml\", solrConfig);\n      }\n      catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestManagedSchemaThreadSafety#indexSchemaLoader(String,ZkController).mjava","pathOld":"/dev/null","sourceNew":"  private Runnable indexSchemaLoader(String configsetName, final ZkController zkController) {\n    return () -> {\n      try {\n        SolrResourceLoader loader = new ZkSolrResourceLoader(loaderPath, configsetName, zkController);\n        SolrConfig solrConfig = SolrConfig.readFromResourceLoader(loader, \"solrconfig.xml\");\n\n        ManagedIndexSchemaFactory factory = new ManagedIndexSchemaFactory();\n        factory.init(new NamedList());\n        factory.create(\"schema.xml\", solrConfig);\n      }\n      catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96","date":1576143009,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestManagedSchemaThreadSafety#indexSchemaLoader(String,ZkController).mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestManagedSchemaThreadSafety#indexSchemaLoader(String,ZkController).mjava","sourceNew":"  private Runnable indexSchemaLoader(String configsetName, final ZkController zkController) {\n    return () -> {\n      try {\n        SolrResourceLoader loader = new ZkSolrResourceLoader(loaderPath, configsetName, zkController);\n        SolrConfig solrConfig = SolrConfig.readFromResourceLoader(loader, \"solrconfig.xml\", true);\n\n        ManagedIndexSchemaFactory factory = new ManagedIndexSchemaFactory();\n        factory.init(new NamedList());\n        factory.create(\"schema.xml\", solrConfig);\n      }\n      catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    };\n  }\n\n","sourceOld":"  private Runnable indexSchemaLoader(String configsetName, final ZkController zkController) {\n    return () -> {\n      try {\n        SolrResourceLoader loader = new ZkSolrResourceLoader(loaderPath, configsetName, zkController);\n        SolrConfig solrConfig = SolrConfig.readFromResourceLoader(loader, \"solrconfig.xml\");\n\n        ManagedIndexSchemaFactory factory = new ManagedIndexSchemaFactory();\n        factory.init(new NamedList());\n        factory.create(\"schema.xml\", solrConfig);\n      }\n      catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df724d84dab24a0cc54bec95a8680867adc7f171","date":1576156608,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestManagedSchemaThreadSafety#indexSchemaLoader(String,ZkController).mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestManagedSchemaThreadSafety#indexSchemaLoader(String,ZkController).mjava","sourceNew":"  private Runnable indexSchemaLoader(String configsetName, final ZkController zkController) {\n    return () -> {\n      try {\n        SolrResourceLoader loader = new ZkSolrResourceLoader(loaderPath, configsetName, zkController);\n        SolrConfig solrConfig = SolrConfig.readFromResourceLoader(loader, \"solrconfig.xml\", true);\n\n        ManagedIndexSchemaFactory factory = new ManagedIndexSchemaFactory();\n        factory.init(new NamedList());\n        factory.create(\"schema.xml\", solrConfig);\n      }\n      catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    };\n  }\n\n","sourceOld":"  private Runnable indexSchemaLoader(String configsetName, final ZkController zkController) {\n    return () -> {\n      try {\n        SolrResourceLoader loader = new ZkSolrResourceLoader(loaderPath, configsetName, zkController);\n        SolrConfig solrConfig = SolrConfig.readFromResourceLoader(loader, \"solrconfig.xml\");\n\n        ManagedIndexSchemaFactory factory = new ManagedIndexSchemaFactory();\n        factory.init(new NamedList());\n        factory.create(\"schema.xml\", solrConfig);\n      }\n      catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","date":1583932828,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestManagedSchemaThreadSafety#indexSchemaLoader(String,ZkController).mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestManagedSchemaThreadSafety#indexSchemaLoader(String,ZkController).mjava","sourceNew":"  private Runnable indexSchemaLoader(String configsetName, final ZkController zkController) {\n    return () -> {\n      try {\n        SolrResourceLoader loader = new ZkSolrResourceLoader(loaderPath, configsetName, null, zkController);\n        SolrConfig solrConfig = SolrConfig.readFromResourceLoader(loader, \"solrconfig.xml\", true, null);\n\n        ManagedIndexSchemaFactory factory = new ManagedIndexSchemaFactory();\n        factory.init(new NamedList());\n        factory.create(\"schema.xml\", solrConfig);\n      }\n      catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    };\n  }\n\n","sourceOld":"  private Runnable indexSchemaLoader(String configsetName, final ZkController zkController) {\n    return () -> {\n      try {\n        SolrResourceLoader loader = new ZkSolrResourceLoader(loaderPath, configsetName, zkController);\n        SolrConfig solrConfig = SolrConfig.readFromResourceLoader(loader, \"solrconfig.xml\", true);\n\n        ManagedIndexSchemaFactory factory = new ManagedIndexSchemaFactory();\n        factory.init(new NamedList());\n        factory.create(\"schema.xml\", solrConfig);\n      }\n      catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestManagedSchemaThreadSafety#indexSchemaLoader(String,ZkController).mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestManagedSchemaThreadSafety#indexSchemaLoader(String,ZkController).mjava","sourceNew":"  @SuppressWarnings({\"rawtypes\"})\n  private Runnable indexSchemaLoader(String configsetName, final ZkController zkController) {\n    return () -> {\n      try {\n        SolrResourceLoader loader = new ZkSolrResourceLoader(loaderPath, configsetName, null, zkController);\n        SolrConfig solrConfig = SolrConfig.readFromResourceLoader(loader, \"solrconfig.xml\", true, null);\n\n        ManagedIndexSchemaFactory factory = new ManagedIndexSchemaFactory();\n        factory.init(new NamedList());\n        factory.create(\"schema.xml\", solrConfig);\n      }\n      catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    };\n  }\n\n","sourceOld":"  private Runnable indexSchemaLoader(String configsetName, final ZkController zkController) {\n    return () -> {\n      try {\n        SolrResourceLoader loader = new ZkSolrResourceLoader(loaderPath, configsetName, null, zkController);\n        SolrConfig solrConfig = SolrConfig.readFromResourceLoader(loader, \"solrconfig.xml\", true, null);\n\n        ManagedIndexSchemaFactory factory = new ManagedIndexSchemaFactory();\n        factory.init(new NamedList());\n        factory.create(\"schema.xml\", solrConfig);\n      }\n      catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df724d84dab24a0cc54bec95a8680867adc7f171":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96"],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6586bbbc5a9acb1d4613edc6ba8d90836f7cba2c"],"6586bbbc5a9acb1d4613edc6ba8d90836f7cba2c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"]},"commit2Childs":{"df724d84dab24a0cc54bec95a8680867adc7f171":[],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["e98520789adb1d5ad05afb4956eca0944a929688"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["df724d84dab24a0cc54bec95a8680867adc7f171","ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6586bbbc5a9acb1d4613edc6ba8d90836f7cba2c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"6586bbbc5a9acb1d4613edc6ba8d90836f7cba2c":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96":["df724d84dab24a0cc54bec95a8680867adc7f171","ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["df724d84dab24a0cc54bec95a8680867adc7f171","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}