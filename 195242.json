{"path":"lucene/src/java/org/apache/lucene/index/CompoundFileWriter#CompoundFileWriter(Directory,String,SegmentMerger.CheckAbort).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/CompoundFileWriter#CompoundFileWriter(Directory,String,SegmentMerger.CheckAbort).mjava","pathOld":"src/java/org/apache/lucene/index/CompoundFileWriter#CompoundFileWriter(Directory,String,SegmentMerger.CheckAbort).mjava","sourceNew":"    CompoundFileWriter(Directory dir, String name, SegmentMerger.CheckAbort checkAbort) {\n        if (dir == null)\n            throw new NullPointerException(\"directory cannot be null\");\n        if (name == null)\n            throw new NullPointerException(\"name cannot be null\");\n        this.checkAbort = checkAbort;\n        directory = dir;\n        fileName = name;\n        ids = new HashSet<String>();\n        entries = new LinkedList<FileEntry>();\n    }\n\n","sourceOld":"    CompoundFileWriter(Directory dir, String name, SegmentMerger.CheckAbort checkAbort) {\n        if (dir == null)\n            throw new NullPointerException(\"directory cannot be null\");\n        if (name == null)\n            throw new NullPointerException(\"name cannot be null\");\n        this.checkAbort = checkAbort;\n        directory = dir;\n        fileName = name;\n        ids = new HashSet<String>();\n        entries = new LinkedList<FileEntry>();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e623f9a0e45508ab149c2fb3e0fd0c2503f98186","date":1295889977,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/CompoundFileWriter#CompoundFileWriter(Directory,String,MergeState.CheckAbort).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/CompoundFileWriter#CompoundFileWriter(Directory,String,SegmentMerger.CheckAbort).mjava","sourceNew":"    CompoundFileWriter(Directory dir, String name, MergeState.CheckAbort checkAbort) {\n        if (dir == null)\n            throw new NullPointerException(\"directory cannot be null\");\n        if (name == null)\n            throw new NullPointerException(\"name cannot be null\");\n        this.checkAbort = checkAbort;\n        directory = dir;\n        fileName = name;\n        ids = new HashSet<String>();\n        entries = new LinkedList<FileEntry>();\n    }\n\n","sourceOld":"    CompoundFileWriter(Directory dir, String name, SegmentMerger.CheckAbort checkAbort) {\n        if (dir == null)\n            throw new NullPointerException(\"directory cannot be null\");\n        if (name == null)\n            throw new NullPointerException(\"name cannot be null\");\n        this.checkAbort = checkAbort;\n        directory = dir;\n        fileName = name;\n        ids = new HashSet<String>();\n        entries = new LinkedList<FileEntry>();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9b72f7c3d7827c64dd4ec580ded81778da361d","date":1295897920,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/CompoundFileWriter#CompoundFileWriter(Directory,String,MergeState.CheckAbort).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/CompoundFileWriter#CompoundFileWriter(Directory,String,SegmentMerger.CheckAbort).mjava","sourceNew":"    CompoundFileWriter(Directory dir, String name, MergeState.CheckAbort checkAbort) {\n        if (dir == null)\n            throw new NullPointerException(\"directory cannot be null\");\n        if (name == null)\n            throw new NullPointerException(\"name cannot be null\");\n        this.checkAbort = checkAbort;\n        directory = dir;\n        fileName = name;\n        ids = new HashSet<String>();\n        entries = new LinkedList<FileEntry>();\n    }\n\n","sourceOld":"    CompoundFileWriter(Directory dir, String name, SegmentMerger.CheckAbort checkAbort) {\n        if (dir == null)\n            throw new NullPointerException(\"directory cannot be null\");\n        if (name == null)\n            throw new NullPointerException(\"name cannot be null\");\n        this.checkAbort = checkAbort;\n        directory = dir;\n        fileName = name;\n        ids = new HashSet<String>();\n        entries = new LinkedList<FileEntry>();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/CompoundFileWriter#CompoundFileWriter(Directory,String,SegmentMerger.CheckAbort).mjava","sourceNew":null,"sourceOld":"    CompoundFileWriter(Directory dir, String name, SegmentMerger.CheckAbort checkAbort) {\n        if (dir == null)\n            throw new NullPointerException(\"directory cannot be null\");\n        if (name == null)\n            throw new NullPointerException(\"name cannot be null\");\n        this.checkAbort = checkAbort;\n        directory = dir;\n        fileName = name;\n        ids = new HashSet<String>();\n        entries = new LinkedList<FileEntry>();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"29ef99d61cda9641b6250bf9567329a6e65f901d":["9454a6510e2db155fb01faa5c049b06ece95fab9","e623f9a0e45508ab149c2fb3e0fd0c2503f98186"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e623f9a0e45508ab149c2fb3e0fd0c2503f98186":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e623f9a0e45508ab149c2fb3e0fd0c2503f98186"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["9454a6510e2db155fb01faa5c049b06ece95fab9","e623f9a0e45508ab149c2fb3e0fd0c2503f98186"]},"commit2Childs":{"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e623f9a0e45508ab149c2fb3e0fd0c2503f98186":["29ef99d61cda9641b6250bf9567329a6e65f901d","cd5edd1f2b162a5cfa08efd17851a07373a96817","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["29ef99d61cda9641b6250bf9567329a6e65f901d","e623f9a0e45508ab149c2fb3e0fd0c2503f98186","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","cd5edd1f2b162a5cfa08efd17851a07373a96817","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}