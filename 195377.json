{"path":"lucene/contrib/swing/src/test/org/apache/lucene/swing/models/BaseTableModel#getValueAt(int,int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/swing/src/test/org/apache/lucene/swing/models/BaseTableModel#getValueAt(int,int).mjava","pathOld":"contrib/swing/src/test/org/apache/lucene/swing/models/BaseTableModel#getValueAt(int,int).mjava","sourceNew":"    public Object getValueAt(int rowIndex, int columnIndex) {\n        RestaurantInfo restaurantInfo = (RestaurantInfo) rows.get(rowIndex);\n        if (columnIndex == 0){ // name\n            return restaurantInfo.getName();\n        } else if (columnIndex == 1){ // category\n            return restaurantInfo.getType();\n        } else if (columnIndex == 2){ // phone\n            return restaurantInfo.getPhone();\n        } else if (columnIndex == 3){ // street\n            return restaurantInfo.getStreet();\n        } else if (columnIndex == 4){ // city\n            return restaurantInfo.getCity();\n        } else if (columnIndex == 5){ // state\n            return restaurantInfo.getState();\n        } else if (columnIndex == 6){ // zip\n            return restaurantInfo.getZip();\n        } else {\n            return \"\";\n        }\n    }\n\n","sourceOld":"    public Object getValueAt(int rowIndex, int columnIndex) {\n        RestaurantInfo restaurantInfo = (RestaurantInfo) rows.get(rowIndex);\n        if (columnIndex == 0){ // name\n            return restaurantInfo.getName();\n        } else if (columnIndex == 1){ // category\n            return restaurantInfo.getType();\n        } else if (columnIndex == 2){ // phone\n            return restaurantInfo.getPhone();\n        } else if (columnIndex == 3){ // street\n            return restaurantInfo.getStreet();\n        } else if (columnIndex == 4){ // city\n            return restaurantInfo.getCity();\n        } else if (columnIndex == 5){ // state\n            return restaurantInfo.getState();\n        } else if (columnIndex == 6){ // zip\n            return restaurantInfo.getZip();\n        } else {\n            return \"\";\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a55c46ea262f9033bd9ab60542dea4b38abef33","date":1306109444,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/swing/src/test/org/apache/lucene/swing/models/BaseTableModel#getValueAt(int,int).mjava","sourceNew":null,"sourceOld":"    public Object getValueAt(int rowIndex, int columnIndex) {\n        RestaurantInfo restaurantInfo = (RestaurantInfo) rows.get(rowIndex);\n        if (columnIndex == 0){ // name\n            return restaurantInfo.getName();\n        } else if (columnIndex == 1){ // category\n            return restaurantInfo.getType();\n        } else if (columnIndex == 2){ // phone\n            return restaurantInfo.getPhone();\n        } else if (columnIndex == 3){ // street\n            return restaurantInfo.getStreet();\n        } else if (columnIndex == 4){ // city\n            return restaurantInfo.getCity();\n        } else if (columnIndex == 5){ // state\n            return restaurantInfo.getState();\n        } else if (columnIndex == 6){ // zip\n            return restaurantInfo.getZip();\n        } else {\n            return \"\";\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae132b768aece5bf21cda14e2f17fba66eb6f7d6","date":1306128032,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/swing/src/test/org/apache/lucene/swing/models/BaseTableModel#getValueAt(int,int).mjava","sourceNew":null,"sourceOld":"    public Object getValueAt(int rowIndex, int columnIndex) {\n        RestaurantInfo restaurantInfo = (RestaurantInfo) rows.get(rowIndex);\n        if (columnIndex == 0){ // name\n            return restaurantInfo.getName();\n        } else if (columnIndex == 1){ // category\n            return restaurantInfo.getType();\n        } else if (columnIndex == 2){ // phone\n            return restaurantInfo.getPhone();\n        } else if (columnIndex == 3){ // street\n            return restaurantInfo.getStreet();\n        } else if (columnIndex == 4){ // city\n            return restaurantInfo.getCity();\n        } else if (columnIndex == 5){ // state\n            return restaurantInfo.getState();\n        } else if (columnIndex == 6){ // zip\n            return restaurantInfo.getZip();\n        } else {\n            return \"\";\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a","date":1306150983,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/swing/src/test/org/apache/lucene/swing/models/BaseTableModel#getValueAt(int,int).mjava","sourceNew":null,"sourceOld":"    public Object getValueAt(int rowIndex, int columnIndex) {\n        RestaurantInfo restaurantInfo = (RestaurantInfo) rows.get(rowIndex);\n        if (columnIndex == 0){ // name\n            return restaurantInfo.getName();\n        } else if (columnIndex == 1){ // category\n            return restaurantInfo.getType();\n        } else if (columnIndex == 2){ // phone\n            return restaurantInfo.getPhone();\n        } else if (columnIndex == 3){ // street\n            return restaurantInfo.getStreet();\n        } else if (columnIndex == 4){ // city\n            return restaurantInfo.getCity();\n        } else if (columnIndex == 5){ // state\n            return restaurantInfo.getState();\n        } else if (columnIndex == 6){ // zip\n            return restaurantInfo.getZip();\n        } else {\n            return \"\";\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ae132b768aece5bf21cda14e2f17fba66eb6f7d6":["9454a6510e2db155fb01faa5c049b06ece95fab9","3a55c46ea262f9033bd9ab60542dea4b38abef33"],"5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a":["9454a6510e2db155fb01faa5c049b06ece95fab9","3a55c46ea262f9033bd9ab60542dea4b38abef33"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3a55c46ea262f9033bd9ab60542dea4b38abef33":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a55c46ea262f9033bd9ab60542dea4b38abef33"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ae132b768aece5bf21cda14e2f17fba66eb6f7d6":[],"5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3a55c46ea262f9033bd9ab60542dea4b38abef33":["ae132b768aece5bf21cda14e2f17fba66eb6f7d6","5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ae132b768aece5bf21cda14e2f17fba66eb6f7d6","5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a","3a55c46ea262f9033bd9ab60542dea4b38abef33"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ae132b768aece5bf21cda14e2f17fba66eb6f7d6","5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}