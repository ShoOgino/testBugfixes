{"path":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#setDiscountOverlaps(boolean).mjava","commits":[{"id":"615370d2b876c3435773b5174df2e2242ad7981a","date":1495117651,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#setDiscountOverlaps(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/ClassicSimilarity#setDiscountOverlaps(boolean).mjava","sourceNew":"  /** Determines whether overlap tokens (Tokens with\n   *  0 position increment) are ignored when computing\n   *  norm.  By default this is true, meaning overlap\n   *  tokens do not count when computing norms.\n   *\n   *  @lucene.experimental\n   *\n   *  @see #computeNorm\n   */\n  public void setDiscountOverlaps(boolean v) {\n    discountOverlaps = v;\n  }\n\n","sourceOld":"  /** Determines whether overlap tokens (Tokens with\n   *  0 position increment) are ignored when computing\n   *  norm.  By default this is true, meaning overlap\n   *  tokens do not count when computing norms.\n   *\n   *  @lucene.experimental\n   *\n   *  @see #computeNorm\n   */\n  public void setDiscountOverlaps(boolean v) {\n    discountOverlaps = v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":1,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#setDiscountOverlaps(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/ClassicSimilarity#setDiscountOverlaps(boolean).mjava","sourceNew":"  /** Determines whether overlap tokens (Tokens with\n   *  0 position increment) are ignored when computing\n   *  norm.  By default this is true, meaning overlap\n   *  tokens do not count when computing norms.\n   *\n   *  @lucene.experimental\n   *\n   *  @see #computeNorm\n   */\n  public void setDiscountOverlaps(boolean v) {\n    discountOverlaps = v;\n  }\n\n","sourceOld":"  /** Determines whether overlap tokens (Tokens with\n   *  0 position increment) are ignored when computing\n   *  norm.  By default this is true, meaning overlap\n   *  tokens do not count when computing norms.\n   *\n   *  @lucene.experimental\n   *\n   *  @see #computeNorm\n   */\n  public void setDiscountOverlaps(boolean v) {\n    discountOverlaps = v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","615370d2b876c3435773b5174df2e2242ad7981a"],"615370d2b876c3435773b5174df2e2242ad7981a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["615370d2b876c3435773b5174df2e2242ad7981a"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"615370d2b876c3435773b5174df2e2242ad7981a":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","615370d2b876c3435773b5174df2e2242ad7981a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}