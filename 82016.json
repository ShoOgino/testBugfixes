{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/AbsoluteValueEvaluatorTest#absoluteValueFromContext().mjava","commits":[{"id":"d43c6d0a8b813b1c64f24d3ba07a65cd4a19e792","date":1493430356,"type":0,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/AbsoluteValueEvaluatorTest#absoluteValueFromContext().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void absoluteValueFromContext() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"abs(a)\");\n    StreamContext context = new StreamContext();\n    evaluator.setStreamContext(context);\n    Object result;\n    \n    context.getLets().put(\"a\", 1);\n    result = evaluator.evaluate(new Tuple());\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(1L, result);\n    \n    context.getLets().put(\"a\", 1.1);\n    result = evaluator.evaluate(new Tuple());\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(1.1D, result);\n    \n    context.getLets().put(\"a\", -1.1);\n    result = evaluator.evaluate(new Tuple());\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(1.1D, result);\n    \n    context.getLets().put(\"a\", factory.constructEvaluator(\"add(4,-6,34,-56)\"));\n    result = evaluator.evaluate(new Tuple());\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(24L, result);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/AbsoluteValueEvaluatorTest#absoluteValueFromContext().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void absoluteValueFromContext() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"abs(a)\");\n    StreamContext context = new StreamContext();\n    evaluator.setStreamContext(context);\n    Object result;\n    \n    context.getLets().put(\"a\", 1);\n    result = evaluator.evaluate(new Tuple());\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(1L, result);\n    \n    context.getLets().put(\"a\", 1.1);\n    result = evaluator.evaluate(new Tuple());\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(1.1D, result);\n    \n    context.getLets().put(\"a\", -1.1);\n    result = evaluator.evaluate(new Tuple());\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(1.1D, result);\n    \n    context.getLets().put(\"a\", factory.constructEvaluator(\"add(4,-6,34,-56)\"));\n    result = evaluator.evaluate(new Tuple());\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(24L, result);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3eb251dab40cb8cabcea8ed646a2c060d423f18","date":1570756765,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/AbsoluteValueEvaluatorTest#absoluteValueFromContext().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/AbsoluteValueEvaluatorTest#absoluteValueFromContext().mjava","sourceNew":"  @Test\n  public void absoluteValueFromContext() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"abs(a)\");\n    StreamContext context = new StreamContext();\n    evaluator.setStreamContext(context);\n    Object result;\n    \n    context.getLets().put(\"a\", 1);\n    result = evaluator.evaluate(new Tuple());\n    Assert.assertEquals(1D, result);\n    \n    context.getLets().put(\"a\", 1.1);\n    result = evaluator.evaluate(new Tuple());\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(1.1D, result);\n    \n    context.getLets().put(\"a\", -1.1);\n    result = evaluator.evaluate(new Tuple());\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(1.1D, result);\n    \n    context.getLets().put(\"a\", factory.constructEvaluator(\"add(4,-6,34,-56)\"));\n    result = evaluator.evaluate(new Tuple());\n    Assert.assertEquals(24D, result);\n  }\n\n","sourceOld":"  @Test\n  public void absoluteValueFromContext() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"abs(a)\");\n    StreamContext context = new StreamContext();\n    evaluator.setStreamContext(context);\n    Object result;\n    \n    context.getLets().put(\"a\", 1);\n    result = evaluator.evaluate(new Tuple());\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(1L, result);\n    \n    context.getLets().put(\"a\", 1.1);\n    result = evaluator.evaluate(new Tuple());\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(1.1D, result);\n    \n    context.getLets().put(\"a\", -1.1);\n    result = evaluator.evaluate(new Tuple());\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(1.1D, result);\n    \n    context.getLets().put(\"a\", factory.constructEvaluator(\"add(4,-6,34,-56)\"));\n    result = evaluator.evaluate(new Tuple());\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(24L, result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/AbsoluteValueEvaluatorTest#absoluteValueFromContext().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/AbsoluteValueEvaluatorTest#absoluteValueFromContext().mjava","sourceNew":"  @Test\n  public void absoluteValueFromContext() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"abs(a)\");\n    StreamContext context = new StreamContext();\n    evaluator.setStreamContext(context);\n    Object result;\n    \n    context.getLets().put(\"a\", 1);\n    result = evaluator.evaluate(new Tuple());\n    Assert.assertEquals(1D, result);\n    \n    context.getLets().put(\"a\", 1.1);\n    result = evaluator.evaluate(new Tuple());\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(1.1D, result);\n    \n    context.getLets().put(\"a\", -1.1);\n    result = evaluator.evaluate(new Tuple());\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(1.1D, result);\n    \n    context.getLets().put(\"a\", factory.constructEvaluator(\"add(4,-6,34,-56)\"));\n    result = evaluator.evaluate(new Tuple());\n    Assert.assertEquals(24D, result);\n  }\n\n","sourceOld":"  @Test\n  public void absoluteValueFromContext() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"abs(a)\");\n    StreamContext context = new StreamContext();\n    evaluator.setStreamContext(context);\n    Object result;\n    \n    context.getLets().put(\"a\", 1);\n    result = evaluator.evaluate(new Tuple());\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(1L, result);\n    \n    context.getLets().put(\"a\", 1.1);\n    result = evaluator.evaluate(new Tuple());\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(1.1D, result);\n    \n    context.getLets().put(\"a\", -1.1);\n    result = evaluator.evaluate(new Tuple());\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(1.1D, result);\n    \n    context.getLets().put(\"a\", factory.constructEvaluator(\"add(4,-6,34,-56)\"));\n    result = evaluator.evaluate(new Tuple());\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(24L, result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d43c6d0a8b813b1c64f24d3ba07a65cd4a19e792"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c3eb251dab40cb8cabcea8ed646a2c060d423f18":["d43c6d0a8b813b1c64f24d3ba07a65cd4a19e792"],"d43c6d0a8b813b1c64f24d3ba07a65cd4a19e792":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c3eb251dab40cb8cabcea8ed646a2c060d423f18"],"b0b597c65628ca9e73913a07e81691f8229bae35":["d43c6d0a8b813b1c64f24d3ba07a65cd4a19e792","c3eb251dab40cb8cabcea8ed646a2c060d423f18"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","d43c6d0a8b813b1c64f24d3ba07a65cd4a19e792"],"c3eb251dab40cb8cabcea8ed646a2c060d423f18":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"d43c6d0a8b813b1c64f24d3ba07a65cd4a19e792":["e9017cf144952056066919f1ebc7897ff9bd71b1","c3eb251dab40cb8cabcea8ed646a2c060d423f18","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}