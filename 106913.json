{"path":"src/java/org/apache/lucene/index/TermVectorsTermsWriter#flush(Map,SegmentWriteState).mjava","commits":[{"id":"4d17492f26096e19670d947d1be5e9adc52b1d3d","date":1224931200,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermVectorsTermsWriter#flush(Map,SegmentWriteState).mjava","pathOld":"src/java/org/apache/lucene/index/TermVectorsTermsWriter#flush(Map,DocumentsWriter.FlushState).mjava","sourceNew":"  synchronized void flush(Map threadsAndFields, final SegmentWriteState state) throws IOException {\n\n    if (tvx != null) {\n\n      if (state.numDocsInStore > 0)\n        // In case there are some final documents that we\n        // didn't see (because they hit a non-aborting exception):\n        fill(state.numDocsInStore - docWriter.getDocStoreOffset());\n\n      tvx.flush();\n      tvd.flush();\n      tvf.flush();\n    }\n\n    Iterator it = threadsAndFields.entrySet().iterator();\n    while(it.hasNext()) {\n      Map.Entry entry = (Map.Entry) it.next();\n      Iterator it2 = ((Collection) entry.getValue()).iterator();\n      while(it2.hasNext()) {\n        TermVectorsTermsWriterPerField perField = (TermVectorsTermsWriterPerField) it2.next();\n        perField.termsHashPerField.reset();\n        perField.shrinkHash();\n      }\n\n      TermVectorsTermsWriterPerThread perThread = (TermVectorsTermsWriterPerThread) entry.getKey();\n      perThread.termsHashPerThread.reset(true);\n    }\n  }\n\n","sourceOld":"  synchronized void flush(Map threadsAndFields, final DocumentsWriter.FlushState state) throws IOException {\n\n    if (tvx != null) {\n\n      if (state.numDocsInStore > 0)\n        // In case there are some final documents that we\n        // didn't see (because they hit a non-aborting exception):\n        fill(state.numDocsInStore - docWriter.getDocStoreOffset());\n\n      tvx.flush();\n      tvd.flush();\n      tvf.flush();\n    }\n\n    Iterator it = threadsAndFields.entrySet().iterator();\n    while(it.hasNext()) {\n      Map.Entry entry = (Map.Entry) it.next();\n      Iterator it2 = ((Collection) entry.getValue()).iterator();\n      while(it2.hasNext()) {\n        TermVectorsTermsWriterPerField perField = (TermVectorsTermsWriterPerField) it2.next();\n        perField.termsHashPerField.reset();\n        perField.shrinkHash();\n      }\n\n      TermVectorsTermsWriterPerThread perThread = (TermVectorsTermsWriterPerThread) entry.getKey();\n      perThread.termsHashPerThread.reset(true);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef82ff03e4016c705811b2658e81471a645c0e49","date":1255900293,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermVectorsTermsWriter#flush(Map[TermsHashConsumerPerThread,Collection[TermsHashConsumerPerField]],SegmentWriteState).mjava","pathOld":"src/java/org/apache/lucene/index/TermVectorsTermsWriter#flush(Map,SegmentWriteState).mjava","sourceNew":"  synchronized void flush(Map<TermsHashConsumerPerThread,Collection<TermsHashConsumerPerField>> threadsAndFields, final SegmentWriteState state) throws IOException {\n\n    if (tvx != null) {\n\n      if (state.numDocsInStore > 0)\n        // In case there are some final documents that we\n        // didn't see (because they hit a non-aborting exception):\n        fill(state.numDocsInStore - docWriter.getDocStoreOffset());\n\n      tvx.flush();\n      tvd.flush();\n      tvf.flush();\n    }\n\n    for (Map.Entry<TermsHashConsumerPerThread,Collection<TermsHashConsumerPerField>> entry : threadsAndFields.entrySet()) {\n      for (final TermsHashConsumerPerField field : entry.getValue() ) {\n        TermVectorsTermsWriterPerField perField = (TermVectorsTermsWriterPerField) field;\n        perField.termsHashPerField.reset();\n        perField.shrinkHash();\n      }\n\n      TermVectorsTermsWriterPerThread perThread = (TermVectorsTermsWriterPerThread) entry.getKey();\n      perThread.termsHashPerThread.reset(true);\n    }\n  }\n\n","sourceOld":"  synchronized void flush(Map threadsAndFields, final SegmentWriteState state) throws IOException {\n\n    if (tvx != null) {\n\n      if (state.numDocsInStore > 0)\n        // In case there are some final documents that we\n        // didn't see (because they hit a non-aborting exception):\n        fill(state.numDocsInStore - docWriter.getDocStoreOffset());\n\n      tvx.flush();\n      tvd.flush();\n      tvf.flush();\n    }\n\n    Iterator it = threadsAndFields.entrySet().iterator();\n    while(it.hasNext()) {\n      Map.Entry entry = (Map.Entry) it.next();\n      Iterator it2 = ((Collection) entry.getValue()).iterator();\n      while(it2.hasNext()) {\n        TermVectorsTermsWriterPerField perField = (TermVectorsTermsWriterPerField) it2.next();\n        perField.termsHashPerField.reset();\n        perField.shrinkHash();\n      }\n\n      TermVectorsTermsWriterPerThread perThread = (TermVectorsTermsWriterPerThread) entry.getKey();\n      perThread.termsHashPerThread.reset(true);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ef82ff03e4016c705811b2658e81471a645c0e49":["4d17492f26096e19670d947d1be5e9adc52b1d3d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4d17492f26096e19670d947d1be5e9adc52b1d3d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ef82ff03e4016c705811b2658e81471a645c0e49"]},"commit2Childs":{"ef82ff03e4016c705811b2658e81471a645c0e49":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4d17492f26096e19670d947d1be5e9adc52b1d3d"],"4d17492f26096e19670d947d1be5e9adc52b1d3d":["ef82ff03e4016c705811b2658e81471a645c0e49"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}