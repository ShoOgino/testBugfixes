{"path":"solr/core/src/java/org/apache/solr/handler/component/AffinityReplicaListTransformer#transform(List[#]).mjava","commits":[{"id":"78d42a7a80ee59932aca8a1fe42b53cf202e75ad","date":1566412272,"type":0,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/AffinityReplicaListTransformer#transform(List[#]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  public void transform(List<?> choices) {\n    int size = choices.size();\n    if (size > 1) {\n      int i = 0;\n      SortableChoice[] sortableChoices = new SortableChoice[size];\n      for (Object o : choices) {\n        sortableChoices[i++] = new SortableChoice(o);\n      }\n      Arrays.sort(sortableChoices, SORTABLE_CHOICE_COMPARATOR);\n      ListIterator iter = choices.listIterator();\n      i = routingDividend % size;\n      final int limit = i + size;\n      do {\n        iter.next();\n        iter.set(sortableChoices[i % size].choice);\n      } while (++i < limit);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"833432c363468a5df50f87446a68015404b1fbcf","date":1572302961,"type":5,"author":"Houston Putman","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/routing/AffinityReplicaListTransformer#transform(List[#]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/AffinityReplicaListTransformer#transform(List[#]).mjava","sourceNew":"  @Override\n  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  public void transform(List<?> choices) {\n    int size = choices.size();\n    if (size > 1) {\n      int i = 0;\n      SortableChoice[] sortableChoices = new SortableChoice[size];\n      for (Object o : choices) {\n        sortableChoices[i++] = new SortableChoice(o);\n      }\n      Arrays.sort(sortableChoices, SORTABLE_CHOICE_COMPARATOR);\n      ListIterator iter = choices.listIterator();\n      i = routingDividend % size;\n      final int limit = i + size;\n      do {\n        iter.next();\n        iter.set(sortableChoices[i % size].choice);\n      } while (++i < limit);\n    }\n  }\n\n","sourceOld":"  @Override\n  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  public void transform(List<?> choices) {\n    int size = choices.size();\n    if (size > 1) {\n      int i = 0;\n      SortableChoice[] sortableChoices = new SortableChoice[size];\n      for (Object o : choices) {\n        sortableChoices[i++] = new SortableChoice(o);\n      }\n      Arrays.sort(sortableChoices, SORTABLE_CHOICE_COMPARATOR);\n      ListIterator iter = choices.listIterator();\n      i = routingDividend % size;\n      final int limit = i + size;\n      do {\n        iter.next();\n        iter.set(sortableChoices[i % size].choice);\n      } while (++i < limit);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"833432c363468a5df50f87446a68015404b1fbcf":["78d42a7a80ee59932aca8a1fe42b53cf202e75ad"],"78d42a7a80ee59932aca8a1fe42b53cf202e75ad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["833432c363468a5df50f87446a68015404b1fbcf"]},"commit2Childs":{"833432c363468a5df50f87446a68015404b1fbcf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"78d42a7a80ee59932aca8a1fe42b53cf202e75ad":["833432c363468a5df50f87446a68015404b1fbcf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["78d42a7a80ee59932aca8a1fe42b53cf202e75ad"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}