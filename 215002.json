{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor[FacetRequest]#handleBlockJoin().mjava","commits":[{"id":"9e47fba8dd946896c408eb448f6199f5a9f0da2d","date":1434234768,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor[FacetRequest]#handleBlockJoin().mjava","pathOld":"/dev/null","sourceNew":"  private void handleBlockJoin() throws IOException {\n    if (!(freq.domain.toChildren || freq.domain.toParent)) return;\n\n    // TODO: avoid query parsing per-bucket somehow...\n    String parentStr = freq.domain.parents;\n    Query parentQuery;\n    try {\n      QParser parser = QParser.getParser(parentStr, null, fcontext.req);\n      parentQuery = parser.getQuery();\n    } catch (SyntaxError err) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error parsing block join parent specification: \" + parentStr);\n    }\n\n    BitDocSet parents = fcontext.searcher.getDocSetBits(parentQuery);\n    DocSet input = fcontext.base;\n    DocSet result;\n\n    if (freq.domain.toChildren) {\n      DocSet filt = fcontext.searcher.getDocSetBits( new MatchAllDocsQuery() );\n      result = BlockJoin.toChildren(input, parents, filt, fcontext.qcontext);\n    } else {\n      result = BlockJoin.toParents(input, parents, fcontext.qcontext);\n    }\n\n    fcontext.base = result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e13d0d4d8b6dc352cb304974502b9a36c153f78","date":1436492687,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#handleBlockJoin().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor[FacetRequest]#handleBlockJoin().mjava","sourceNew":"  private void handleBlockJoin() throws IOException {\n    if (!(freq.domain.toChildren || freq.domain.toParent)) return;\n\n    // TODO: avoid query parsing per-bucket somehow...\n    String parentStr = freq.domain.parents;\n    Query parentQuery;\n    try {\n      QParser parser = QParser.getParser(parentStr, null, fcontext.req);\n      parentQuery = parser.getQuery();\n    } catch (SyntaxError err) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error parsing block join parent specification: \" + parentStr);\n    }\n\n    BitDocSet parents = fcontext.searcher.getDocSetBits(parentQuery);\n    DocSet input = fcontext.base;\n    DocSet result;\n\n    if (freq.domain.toChildren) {\n      DocSet filt = fcontext.searcher.getDocSetBits( new MatchAllDocsQuery() );\n      result = BlockJoin.toChildren(input, parents, filt, fcontext.qcontext);\n    } else {\n      result = BlockJoin.toParents(input, parents, fcontext.qcontext);\n    }\n\n    fcontext.base = result;\n  }\n\n","sourceOld":"  private void handleBlockJoin() throws IOException {\n    if (!(freq.domain.toChildren || freq.domain.toParent)) return;\n\n    // TODO: avoid query parsing per-bucket somehow...\n    String parentStr = freq.domain.parents;\n    Query parentQuery;\n    try {\n      QParser parser = QParser.getParser(parentStr, null, fcontext.req);\n      parentQuery = parser.getQuery();\n    } catch (SyntaxError err) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error parsing block join parent specification: \" + parentStr);\n    }\n\n    BitDocSet parents = fcontext.searcher.getDocSetBits(parentQuery);\n    DocSet input = fcontext.base;\n    DocSet result;\n\n    if (freq.domain.toChildren) {\n      DocSet filt = fcontext.searcher.getDocSetBits( new MatchAllDocsQuery() );\n      result = BlockJoin.toChildren(input, parents, filt, fcontext.qcontext);\n    } else {\n      result = BlockJoin.toParents(input, parents, fcontext.qcontext);\n    }\n\n    fcontext.base = result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9e13d0d4d8b6dc352cb304974502b9a36c153f78":["9e47fba8dd946896c408eb448f6199f5a9f0da2d"],"9e47fba8dd946896c408eb448f6199f5a9f0da2d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9e13d0d4d8b6dc352cb304974502b9a36c153f78"]},"commit2Childs":{"9e13d0d4d8b6dc352cb304974502b9a36c153f78":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9e47fba8dd946896c408eb448f6199f5a9f0da2d":["9e13d0d4d8b6dc352cb304974502b9a36c153f78"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9e47fba8dd946896c408eb448f6199f5a9f0da2d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}