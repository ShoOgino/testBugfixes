{"path":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addToCache(CategoryPath,int).mjava","commits":[{"id":"ea469eab8fd0f3032f4fcde1c644a721e8309d3b","date":1320301582,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addToCache(CategoryPath,int).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/lucene/LuceneTaxonomyWriter#addToCache(CategoryPath,int).mjava","sourceNew":"  private void addToCache(CategoryPath categoryPath, int id)\n  throws CorruptIndexException, IOException {\n    if (cache.put(categoryPath, id)) {\n      // If cache.put() returned true, it means the cache was limited in\n      // size, became full, so parts of it had to be cleared.\n      // Unfortunately we don't know which part was cleared - it is\n      // possible that a relatively-new category that hasn't yet been\n      // committed to disk (and therefore isn't yet visible in our\n      // \"reader\") was deleted from the cache, and therefore we must\n      // now refresh the reader.\n      // Because this is a slow operation, cache implementations are\n      // expected not to delete entries one-by-one but rather in bulk\n      // (LruTaxonomyWriterCache removes the 2/3rd oldest entries).\n      refreshReader();\n      cacheIsComplete = false;\n    }\n  }\n\n","sourceOld":"  private void addToCache(CategoryPath categoryPath, int id)\n  throws CorruptIndexException, IOException {\n    if (cache.put(categoryPath, id)) {\n      // If cache.put() returned true, it means the cache was limited in\n      // size, became full, so parts of it had to be cleared.\n      // Unfortunately we don't know which part was cleared - it is\n      // possible that a relatively-new category that hasn't yet been\n      // committed to disk (and therefore isn't yet visible in our\n      // \"reader\") was deleted from the cache, and therefore we must\n      // now refresh the reader.\n      // Because this is a slow operation, cache implementations are\n      // expected not to delete entries one-by-one but rather in bulk\n      // (LruTaxonomyWriterCache removes the 2/3rd oldest entries).\n      refreshReader();\n      cacheIsComplete = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addToCache(CategoryPath,int).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addToCache(CategoryPath,int).mjava","sourceNew":"  private void addToCache(CategoryPath categoryPath, int id)\n  throws CorruptIndexException, IOException {\n    if (cache.put(categoryPath, id)) {\n      // If cache.put() returned true, it means the cache was limited in\n      // size, became full, so parts of it had to be cleared.\n      // Unfortunately we don't know which part was cleared - it is\n      // possible that a relatively-new category that hasn't yet been\n      // committed to disk (and therefore isn't yet visible in our\n      // \"reader\") was deleted from the cache, and therefore we must\n      // now refresh the reader.\n      // Because this is a slow operation, cache implementations are\n      // expected not to delete entries one-by-one but rather in bulk\n      // (LruTaxonomyWriterCache removes the 2/3rd oldest entries).\n      refreshReader();\n      cacheIsComplete = false;\n    }\n  }\n\n","sourceOld":"  private void addToCache(CategoryPath categoryPath, int id)\n  throws CorruptIndexException, IOException {\n    if (cache.put(categoryPath, id)) {\n      // If cache.put() returned true, it means the cache was limited in\n      // size, became full, so parts of it had to be cleared.\n      // Unfortunately we don't know which part was cleared - it is\n      // possible that a relatively-new category that hasn't yet been\n      // committed to disk (and therefore isn't yet visible in our\n      // \"reader\") was deleted from the cache, and therefore we must\n      // now refresh the reader.\n      // Because this is a slow operation, cache implementations are\n      // expected not to delete entries one-by-one but rather in bulk\n      // (LruTaxonomyWriterCache removes the 2/3rd oldest entries).\n      refreshReader();\n      cacheIsComplete = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ea469eab8fd0f3032f4fcde1c644a721e8309d3b"],"ea469eab8fd0f3032f4fcde1c644a721e8309d3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ea469eab8fd0f3032f4fcde1c644a721e8309d3b":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ea469eab8fd0f3032f4fcde1c644a721e8309d3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}