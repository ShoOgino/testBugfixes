{"path":"modules/analysis/stempel/src/java/org/egothor/stemmer/Gener#eat(Row,int[]).mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/stempel/src/java/org/egothor/stemmer/Gener#eat(Row,int[]).mjava","pathOld":"lucene/contrib/analyzers/stempel/src/java/org/egothor/stemmer/Gener#eat(Row,int[]).mjava","sourceNew":"  /**\n   * Test whether the given Row of Cells in a Trie should be included in an\n   * optimized Trie.\n   * \n   * @param in the Row to test\n   * @param remap Description of the Parameter\n   * @return <tt>true</tt> if the Row should remain, <tt>false\n     *      </tt> otherwise\n   */\n  public boolean eat(Row in, int remap[]) {\n    int sum = 0;\n    for (Iterator<Cell> i = in.cells.values().iterator(); i.hasNext();) {\n      Cell c = i.next();\n      sum += c.cnt;\n      if (c.ref >= 0) {\n        if (remap[c.ref] == 0) {\n          c.ref = -1;\n        }\n      }\n    }\n    int frame = sum / 10;\n    boolean live = false;\n    for (Iterator<Cell> i = in.cells.values().iterator(); i.hasNext();) {\n      Cell c = i.next();\n      if (c.cnt < frame && c.cmd >= 0) {\n        c.cnt = 0;\n        c.cmd = -1;\n      }\n      if (c.cmd >= 0 || c.ref >= 0) {\n        live |= true;\n      }\n    }\n    return !live;\n  }\n\n","sourceOld":"  /**\n   * Test whether the given Row of Cells in a Trie should be included in an\n   * optimized Trie.\n   * \n   * @param in the Row to test\n   * @param remap Description of the Parameter\n   * @return <tt>true</tt> if the Row should remain, <tt>false\n     *      </tt> otherwise\n   */\n  public boolean eat(Row in, int remap[]) {\n    int sum = 0;\n    for (Iterator<Cell> i = in.cells.values().iterator(); i.hasNext();) {\n      Cell c = i.next();\n      sum += c.cnt;\n      if (c.ref >= 0) {\n        if (remap[c.ref] == 0) {\n          c.ref = -1;\n        }\n      }\n    }\n    int frame = sum / 10;\n    boolean live = false;\n    for (Iterator<Cell> i = in.cells.values().iterator(); i.hasNext();) {\n      Cell c = i.next();\n      if (c.cnt < frame && c.cmd >= 0) {\n        c.cnt = 0;\n        c.cmd = -1;\n      }\n      if (c.cmd >= 0 || c.ref >= 0) {\n        live |= true;\n      }\n    }\n    return !live;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/stempel/src/java/org/egothor/stemmer/Gener#eat(Row,int[]).mjava","pathOld":"modules/analysis/stempel/src/java/org/egothor/stemmer/Gener#eat(Row,int[]).mjava","sourceNew":"  /**\n   * Test whether the given Row of Cells in a Trie should be included in an\n   * optimized Trie.\n   * \n   * @param in the Row to test\n   * @param remap Description of the Parameter\n   * @return <tt>true</tt> if the Row should remain, <tt>false\n     *      </tt> otherwise\n   */\n  public boolean eat(Row in, int remap[]) {\n    int sum = 0;\n    for (Iterator<Cell> i = in.cells.values().iterator(); i.hasNext();) {\n      Cell c = i.next();\n      sum += c.cnt;\n      if (c.ref >= 0) {\n        if (remap[c.ref] == 0) {\n          c.ref = -1;\n        }\n      }\n    }\n    int frame = sum / 10;\n    boolean live = false;\n    for (Iterator<Cell> i = in.cells.values().iterator(); i.hasNext();) {\n      Cell c = i.next();\n      if (c.cnt < frame && c.cmd >= 0) {\n        c.cnt = 0;\n        c.cmd = -1;\n      }\n      if (c.cmd >= 0 || c.ref >= 0) {\n        live |= true;\n      }\n    }\n    return !live;\n  }\n\n","sourceOld":"  /**\n   * Test whether the given Row of Cells in a Trie should be included in an\n   * optimized Trie.\n   * \n   * @param in the Row to test\n   * @param remap Description of the Parameter\n   * @return <tt>true</tt> if the Row should remain, <tt>false\n     *      </tt> otherwise\n   */\n  public boolean eat(Row in, int remap[]) {\n    int sum = 0;\n    for (Iterator<Cell> i = in.cells.values().iterator(); i.hasNext();) {\n      Cell c = i.next();\n      sum += c.cnt;\n      if (c.ref >= 0) {\n        if (remap[c.ref] == 0) {\n          c.ref = -1;\n        }\n      }\n    }\n    int frame = sum / 10;\n    boolean live = false;\n    for (Iterator<Cell> i = in.cells.values().iterator(); i.hasNext();) {\n      Cell c = i.next();\n      if (c.cnt < frame && c.cmd >= 0) {\n        c.cnt = 0;\n        c.cmd = -1;\n      }\n      if (c.cmd >= 0 || c.ref >= 0) {\n        live |= true;\n      }\n    }\n    return !live;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}