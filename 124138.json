{"path":"src/java/org/apache/solr/handler/RequestHandlerBase#handleRequest(SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"d80013b5e260def972025c93a0b08524f9c38f49","date":1170102801,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/RequestHandlerBase#handleRequest(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"  public void handleRequest(SolrQueryRequest req, SolrQueryResponse rsp) {\n    numRequests++;\n\n    try {\n      U.setDefaults(req,defaults,appends,invariants);\n      handleRequestBody( req, rsp );\n    } \n    catch( SolrException se ) {\n      numErrors++;\n      throw se;\n    }\n    catch( Exception e) {\n      numErrors++;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["54679bc74d3b78600ac7d170f1e166084d9d7d1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54679bc74d3b78600ac7d170f1e166084d9d7d1f","date":1170881290,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/RequestHandlerBase#handleRequest(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/RequestHandlerBase#handleRequest(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void handleRequest(SolrQueryRequest req, SolrQueryResponse rsp) {\n    numRequests++;\n\n    try {\n      U.setDefaults(req,defaults,appends,invariants);\n      handleRequestBody( req, rsp );\n    } catch (Exception e) {\n      SolrException.log(SolrCore.log,e);\n      rsp.setException(e);\n      numErrors++;\n    }\n  }\n\n","sourceOld":"  public void handleRequest(SolrQueryRequest req, SolrQueryResponse rsp) {\n    numRequests++;\n\n    try {\n      U.setDefaults(req,defaults,appends,invariants);\n      handleRequestBody( req, rsp );\n    } \n    catch( SolrException se ) {\n      numErrors++;\n      throw se;\n    }\n    catch( Exception e) {\n      numErrors++;\n    }\n  }\n\n","bugFix":["d80013b5e260def972025c93a0b08524f9c38f49"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f943121dcb8ce0a23f4a8eadabce477c44e915ce","date":1181946362,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/RequestHandlerBase#handleRequest(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/RequestHandlerBase#handleRequest(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void handleRequest(SolrQueryRequest req, SolrQueryResponse rsp) {\n    numRequests++;\n    long start = System.currentTimeMillis();\n    try {\n      U.setDefaults(req,defaults,appends,invariants);\n      handleRequestBody( req, rsp );\n    } catch (Exception e) {\n      SolrException.log(SolrCore.log,e);\n      rsp.setException(e);\n      numErrors++;\n    }\n    long stop = System.currentTimeMillis();\n    totalTime = totalTime + (stop-start);\n  }\n\n","sourceOld":"  public void handleRequest(SolrQueryRequest req, SolrQueryResponse rsp) {\n    numRequests++;\n\n    try {\n      U.setDefaults(req,defaults,appends,invariants);\n      handleRequestBody( req, rsp );\n    } catch (Exception e) {\n      SolrException.log(SolrCore.log,e);\n      rsp.setException(e);\n      numErrors++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad0357063be2afc9e0d804b18da5ecdb9ec97a53","date":1182007737,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/RequestHandlerBase#handleRequest(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/RequestHandlerBase#handleRequest(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void handleRequest(SolrQueryRequest req, SolrQueryResponse rsp) {\n    numRequests++;\n    try {\n      U.setDefaults(req,defaults,appends,invariants);\n      handleRequestBody( req, rsp );\n    } catch (Exception e) {\n      SolrException.log(SolrCore.log,e);\n      rsp.setException(e);\n      numErrors++;\n    }\n    totalTime += rsp.getEndTime() - req.getStartTime();\n  }\n\n","sourceOld":"  public void handleRequest(SolrQueryRequest req, SolrQueryResponse rsp) {\n    numRequests++;\n    long start = System.currentTimeMillis();\n    try {\n      U.setDefaults(req,defaults,appends,invariants);\n      handleRequestBody( req, rsp );\n    } catch (Exception e) {\n      SolrException.log(SolrCore.log,e);\n      rsp.setException(e);\n      numErrors++;\n    }\n    long stop = System.currentTimeMillis();\n    totalTime = totalTime + (stop-start);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76","date":1204055227,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/RequestHandlerBase#handleRequest(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/RequestHandlerBase#handleRequest(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void handleRequest(SolrQueryRequest req, SolrQueryResponse rsp) {\n    numRequests++;\n    try {\n      U.setDefaults(req,defaults,appends,invariants);\n      handleRequestBody( req, rsp );\n    } catch (Exception e) {\n      SolrException.log(SolrCore.log,e);\n      if (e instanceof ParseException) {\n        e = new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n      }\n      rsp.setException(e);\n      numErrors++;\n    }\n    totalTime += rsp.getEndTime() - req.getStartTime();\n  }\n\n","sourceOld":"  public void handleRequest(SolrQueryRequest req, SolrQueryResponse rsp) {\n    numRequests++;\n    try {\n      U.setDefaults(req,defaults,appends,invariants);\n      handleRequestBody( req, rsp );\n    } catch (Exception e) {\n      SolrException.log(SolrCore.log,e);\n      rsp.setException(e);\n      numErrors++;\n    }\n    totalTime += rsp.getEndTime() - req.getStartTime();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db25c1f61b5ae826f10777da6551a832703967d5","date":1215306972,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/RequestHandlerBase#handleRequest(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/RequestHandlerBase#handleRequest(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void handleRequest(SolrQueryRequest req, SolrQueryResponse rsp) {\n    numRequests++;\n    try {\n      U.setDefaults(req,defaults,appends,invariants);\n      handleRequestBody( req, rsp );\n      // count timeouts\n      boolean timedOut = (Boolean)rsp.getResponseHeader().get(\"partialResults\") == null ? false : (Boolean)rsp.getResponseHeader().get(\"partialResults\");\n      if( timedOut ) {\n        numTimeouts++;\n        rsp.setHttpCaching(false);\n      }\n    } catch (Exception e) {\n      SolrException.log(SolrCore.log,e);\n      if (e instanceof ParseException) {\n        e = new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n      }\n      rsp.setException(e);\n      numErrors++;\n    }\n    totalTime += rsp.getEndTime() - req.getStartTime();\n  }\n\n","sourceOld":"  public void handleRequest(SolrQueryRequest req, SolrQueryResponse rsp) {\n    numRequests++;\n    try {\n      U.setDefaults(req,defaults,appends,invariants);\n      handleRequestBody( req, rsp );\n    } catch (Exception e) {\n      SolrException.log(SolrCore.log,e);\n      if (e instanceof ParseException) {\n        e = new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n      }\n      rsp.setException(e);\n      numErrors++;\n    }\n    totalTime += rsp.getEndTime() - req.getStartTime();\n  }\n\n","bugFix":null,"bugIntro":["5a07152dfe67b772576972ddbfdd61ac06c9129b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c79e84313497146a1eb431df8994acaa6c8516d1","date":1218002449,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/RequestHandlerBase#handleRequest(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/RequestHandlerBase#handleRequest(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void handleRequest(SolrQueryRequest req, SolrQueryResponse rsp) {\n    numRequests++;\n    try {\n      U.setDefaults(req,defaults,appends,invariants);\n      rsp.setHttpCaching(httpCaching);\n      handleRequestBody( req, rsp );\n      // count timeouts\n      boolean timedOut = (Boolean)rsp.getResponseHeader().get(\"partialResults\") == null ? false : (Boolean)rsp.getResponseHeader().get(\"partialResults\");\n      if( timedOut ) {\n        numTimeouts++;\n        rsp.setHttpCaching(false);\n      }\n    } catch (Exception e) {\n      SolrException.log(SolrCore.log,e);\n      if (e instanceof ParseException) {\n        e = new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n      }\n      rsp.setException(e);\n      numErrors++;\n    }\n    totalTime += rsp.getEndTime() - req.getStartTime();\n  }\n\n","sourceOld":"  public void handleRequest(SolrQueryRequest req, SolrQueryResponse rsp) {\n    numRequests++;\n    try {\n      U.setDefaults(req,defaults,appends,invariants);\n      handleRequestBody( req, rsp );\n      // count timeouts\n      boolean timedOut = (Boolean)rsp.getResponseHeader().get(\"partialResults\") == null ? false : (Boolean)rsp.getResponseHeader().get(\"partialResults\");\n      if( timedOut ) {\n        numTimeouts++;\n        rsp.setHttpCaching(false);\n      }\n    } catch (Exception e) {\n      SolrException.log(SolrCore.log,e);\n      if (e instanceof ParseException) {\n        e = new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n      }\n      rsp.setException(e);\n      numErrors++;\n    }\n    totalTime += rsp.getEndTime() - req.getStartTime();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1aa56605b4f871d2f0b6bceecdca2275079fa37e","date":1219430523,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/RequestHandlerBase#handleRequest(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/RequestHandlerBase#handleRequest(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void handleRequest(SolrQueryRequest req, SolrQueryResponse rsp) {\n    numRequests++;\n    try {\n      SolrPluginUtils.setDefaults(req,defaults,appends,invariants);\n      rsp.setHttpCaching(httpCaching);\n      handleRequestBody( req, rsp );\n      // count timeouts\n      boolean timedOut = (Boolean)rsp.getResponseHeader().get(\"partialResults\") == null ? false : (Boolean)rsp.getResponseHeader().get(\"partialResults\");\n      if( timedOut ) {\n        numTimeouts++;\n        rsp.setHttpCaching(false);\n      }\n    } catch (Exception e) {\n      SolrException.log(SolrCore.log,e);\n      if (e instanceof ParseException) {\n        e = new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n      }\n      rsp.setException(e);\n      numErrors++;\n    }\n    totalTime += rsp.getEndTime() - req.getStartTime();\n  }\n\n","sourceOld":"  public void handleRequest(SolrQueryRequest req, SolrQueryResponse rsp) {\n    numRequests++;\n    try {\n      U.setDefaults(req,defaults,appends,invariants);\n      rsp.setHttpCaching(httpCaching);\n      handleRequestBody( req, rsp );\n      // count timeouts\n      boolean timedOut = (Boolean)rsp.getResponseHeader().get(\"partialResults\") == null ? false : (Boolean)rsp.getResponseHeader().get(\"partialResults\");\n      if( timedOut ) {\n        numTimeouts++;\n        rsp.setHttpCaching(false);\n      }\n    } catch (Exception e) {\n      SolrException.log(SolrCore.log,e);\n      if (e instanceof ParseException) {\n        e = new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n      }\n      rsp.setException(e);\n      numErrors++;\n    }\n    totalTime += rsp.getEndTime() - req.getStartTime();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5a07152dfe67b772576972ddbfdd61ac06c9129b","date":1242308512,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/RequestHandlerBase#handleRequest(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/RequestHandlerBase#handleRequest(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void handleRequest(SolrQueryRequest req, SolrQueryResponse rsp) {\n    numRequests++;\n    try {\n      SolrPluginUtils.setDefaults(req,defaults,appends,invariants);\n      rsp.setHttpCaching(httpCaching);\n      handleRequestBody( req, rsp );\n      // count timeouts\n      NamedList header = rsp.getResponseHeader();\n      if(header != null) {\n        Object partialResults = header.get(\"partialResults\");\n        boolean timedOut = partialResults == null ? false : (Boolean)partialResults;\n        if( timedOut ) {\n          numTimeouts++;\n          rsp.setHttpCaching(false);\n        }\n      }\n    } catch (Exception e) {\n      SolrException.log(SolrCore.log,e);\n      if (e instanceof ParseException) {\n        e = new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n      }\n      rsp.setException(e);\n      numErrors++;\n    }\n    totalTime += rsp.getEndTime() - req.getStartTime();\n  }\n\n","sourceOld":"  public void handleRequest(SolrQueryRequest req, SolrQueryResponse rsp) {\n    numRequests++;\n    try {\n      SolrPluginUtils.setDefaults(req,defaults,appends,invariants);\n      rsp.setHttpCaching(httpCaching);\n      handleRequestBody( req, rsp );\n      // count timeouts\n      boolean timedOut = (Boolean)rsp.getResponseHeader().get(\"partialResults\") == null ? false : (Boolean)rsp.getResponseHeader().get(\"partialResults\");\n      if( timedOut ) {\n        numTimeouts++;\n        rsp.setHttpCaching(false);\n      }\n    } catch (Exception e) {\n      SolrException.log(SolrCore.log,e);\n      if (e instanceof ParseException) {\n        e = new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n      }\n      rsp.setException(e);\n      numErrors++;\n    }\n    totalTime += rsp.getEndTime() - req.getStartTime();\n  }\n\n","bugFix":["db25c1f61b5ae826f10777da6551a832703967d5"],"bugIntro":["a3584d3db8b472772e3329d9d95d584b68ae997e","a3584d3db8b472772e3329d9d95d584b68ae997e","a3584d3db8b472772e3329d9d95d584b68ae997e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/RequestHandlerBase#handleRequest(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/RequestHandlerBase#handleRequest(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void handleRequest(SolrQueryRequest req, SolrQueryResponse rsp) {\n    numRequests++;\n    try {\n      SolrPluginUtils.setDefaults(req,defaults,appends,invariants);\n      rsp.setHttpCaching(httpCaching);\n      handleRequestBody( req, rsp );\n      // count timeouts\n      NamedList header = rsp.getResponseHeader();\n      if(header != null) {\n        Object partialResults = header.get(\"partialResults\");\n        boolean timedOut = partialResults == null ? false : (Boolean)partialResults;\n        if( timedOut ) {\n          numTimeouts++;\n          rsp.setHttpCaching(false);\n        }\n      }\n    } catch (Exception e) {\n      SolrException.log(SolrCore.log,e);\n      if (e instanceof ParseException) {\n        e = new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n      }\n      rsp.setException(e);\n      numErrors++;\n    }\n    totalTime += rsp.getEndTime() - req.getStartTime();\n  }\n\n","sourceOld":"  public void handleRequest(SolrQueryRequest req, SolrQueryResponse rsp) {\n    numRequests++;\n    try {\n      SolrPluginUtils.setDefaults(req,defaults,appends,invariants);\n      rsp.setHttpCaching(httpCaching);\n      handleRequestBody( req, rsp );\n      // count timeouts\n      NamedList header = rsp.getResponseHeader();\n      if(header != null) {\n        Object partialResults = header.get(\"partialResults\");\n        boolean timedOut = partialResults == null ? false : (Boolean)partialResults;\n        if( timedOut ) {\n          numTimeouts++;\n          rsp.setHttpCaching(false);\n        }\n      }\n    } catch (Exception e) {\n      SolrException.log(SolrCore.log,e);\n      if (e instanceof ParseException) {\n        e = new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n      }\n      rsp.setException(e);\n      numErrors++;\n    }\n    totalTime += rsp.getEndTime() - req.getStartTime();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"c79e84313497146a1eb431df8994acaa6c8516d1":["db25c1f61b5ae826f10777da6551a832703967d5"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76":["ad0357063be2afc9e0d804b18da5ecdb9ec97a53"],"54679bc74d3b78600ac7d170f1e166084d9d7d1f":["d80013b5e260def972025c93a0b08524f9c38f49"],"d80013b5e260def972025c93a0b08524f9c38f49":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad0357063be2afc9e0d804b18da5ecdb9ec97a53":["f943121dcb8ce0a23f4a8eadabce477c44e915ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f943121dcb8ce0a23f4a8eadabce477c44e915ce":["54679bc74d3b78600ac7d170f1e166084d9d7d1f"],"5a07152dfe67b772576972ddbfdd61ac06c9129b":["1aa56605b4f871d2f0b6bceecdca2275079fa37e"],"db25c1f61b5ae826f10777da6551a832703967d5":["5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76"],"ad94625fb8d088209f46650c8097196fec67f00c":["5a07152dfe67b772576972ddbfdd61ac06c9129b"],"1aa56605b4f871d2f0b6bceecdca2275079fa37e":["c79e84313497146a1eb431df8994acaa6c8516d1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c79e84313497146a1eb431df8994acaa6c8516d1":["1aa56605b4f871d2f0b6bceecdca2275079fa37e"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["d80013b5e260def972025c93a0b08524f9c38f49"],"5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76":["db25c1f61b5ae826f10777da6551a832703967d5"],"54679bc74d3b78600ac7d170f1e166084d9d7d1f":["f943121dcb8ce0a23f4a8eadabce477c44e915ce"],"d80013b5e260def972025c93a0b08524f9c38f49":["54679bc74d3b78600ac7d170f1e166084d9d7d1f"],"ad0357063be2afc9e0d804b18da5ecdb9ec97a53":["5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76"],"f943121dcb8ce0a23f4a8eadabce477c44e915ce":["ad0357063be2afc9e0d804b18da5ecdb9ec97a53"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"db25c1f61b5ae826f10777da6551a832703967d5":["c79e84313497146a1eb431df8994acaa6c8516d1"],"5a07152dfe67b772576972ddbfdd61ac06c9129b":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"1aa56605b4f871d2f0b6bceecdca2275079fa37e":["5a07152dfe67b772576972ddbfdd61ac06c9129b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}