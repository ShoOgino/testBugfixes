{"path":"solr/test-framework/src/java/org/apache/solr/util/RestTestHarness#query(String).mjava","commits":[{"id":"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37","date":1362545433,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/RestTestHarness#query(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Processes a \"query\" using a URL path (with no context path) + optional query params,\n   * e.g. \"/schema/fields?indent=on\"\n   *\n   * @param request the URL path and optional query params\n   * @return The response to the query\n   * @exception Exception any exception in the response.\n   */\n  public String query(String request) throws Exception {\n    URL url = new URL(getBaseURL() + request);\n    HttpURLConnection connection = (HttpURLConnection)url.openConnection();\n    InputStream inputStream = null;\n    StringWriter strWriter;\n    try {\n      try {\n        inputStream = connection.getInputStream();\n      } catch (IOException e) {\n        inputStream = connection.getErrorStream();\n      }\n      strWriter = new StringWriter();\n      IOUtils.copy(new InputStreamReader(inputStream, \"UTF-8\"), strWriter);\n    } finally {\n      IOUtils.closeQuietly(inputStream);\n    }\n    return strWriter.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72","date":1391985588,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/RestTestHarness#query(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/RestTestHarness#query(String).mjava","sourceNew":"  /**\n   * Processes a \"query\" using a URL path (with no context path) + optional query params,\n   * e.g. \"/schema/fields?indent=on\"\n   *\n   * @param request the URL path and optional query params\n   * @return The response to the query\n   * @exception Exception any exception in the response.\n   */\n  public String query(String request) throws Exception {\n    return getResponse(new HttpGet(getBaseURL() + request));\n  }\n\n","sourceOld":"  /**\n   * Processes a \"query\" using a URL path (with no context path) + optional query params,\n   * e.g. \"/schema/fields?indent=on\"\n   *\n   * @param request the URL path and optional query params\n   * @return The response to the query\n   * @exception Exception any exception in the response.\n   */\n  public String query(String request) throws Exception {\n    URL url = new URL(getBaseURL() + request);\n    HttpURLConnection connection = (HttpURLConnection)url.openConnection();\n    InputStream inputStream = null;\n    StringWriter strWriter;\n    try {\n      try {\n        inputStream = connection.getInputStream();\n      } catch (IOException e) {\n        inputStream = connection.getErrorStream();\n      }\n      strWriter = new StringWriter();\n      IOUtils.copy(new InputStreamReader(inputStream, \"UTF-8\"), strWriter);\n    } finally {\n      IOUtils.closeQuietly(inputStream);\n    }\n    return strWriter.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac1e7fa558287a811ea07634d815ee7b1c541284","date":1500910922,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/RestTestHarness#query(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/RestTestHarness#query(String).mjava","sourceNew":"  /**\n   * Processes a \"query\" using a URL path (with no context path) + optional query params,\n   * e.g. \"/schema/fields?indent=off\"\n   *\n   * @param request the URL path and optional query params\n   * @return The response to the query\n   * @exception Exception any exception in the response.\n   */\n  public String query(String request) throws Exception {\n    return getResponse(new HttpGet(getBaseURL() + request));\n  }\n\n","sourceOld":"  /**\n   * Processes a \"query\" using a URL path (with no context path) + optional query params,\n   * e.g. \"/schema/fields?indent=on\"\n   *\n   * @param request the URL path and optional query params\n   * @return The response to the query\n   * @exception Exception any exception in the response.\n   */\n  public String query(String request) throws Exception {\n    return getResponse(new HttpGet(getBaseURL() + request));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"936cdd5882761db3b844afd6f84ab81cbb011a75","date":1500973524,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/RestTestHarness#query(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/RestTestHarness#query(String).mjava","sourceNew":"  /**\n   * Processes a \"query\" using a URL path (with no context path) + optional query params,\n   * e.g. \"/schema/fields?indent=off\"\n   *\n   * @param request the URL path and optional query params\n   * @return The response to the query\n   * @exception Exception any exception in the response.\n   */\n  public String query(String request) throws Exception {\n    return getResponse(new HttpGet(getBaseURL() + request));\n  }\n\n","sourceOld":"  /**\n   * Processes a \"query\" using a URL path (with no context path) + optional query params,\n   * e.g. \"/schema/fields?indent=on\"\n   *\n   * @param request the URL path and optional query params\n   * @return The response to the query\n   * @exception Exception any exception in the response.\n   */\n  public String query(String request) throws Exception {\n    return getResponse(new HttpGet(getBaseURL() + request));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a52341299179de5479672f7cf518bf4b173f34b3","date":1501079746,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/RestTestHarness#query(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/RestTestHarness#query(String).mjava","sourceNew":"  /**\n   * Processes a \"query\" using a URL path (with no context path) + optional query params,\n   * e.g. \"/schema/fields?indent=off\"\n   *\n   * @param request the URL path and optional query params\n   * @return The response to the query\n   * @exception Exception any exception in the response.\n   */\n  public String query(String request) throws Exception {\n    return getResponse(new HttpGet(getBaseURL() + request));\n  }\n\n","sourceOld":"  /**\n   * Processes a \"query\" using a URL path (with no context path) + optional query params,\n   * e.g. \"/schema/fields?indent=on\"\n   *\n   * @param request the URL path and optional query params\n   * @return The response to the query\n   * @exception Exception any exception in the response.\n   */\n  public String query(String request) throws Exception {\n    return getResponse(new HttpGet(getBaseURL() + request));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a52341299179de5479672f7cf518bf4b173f34b3":["57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72","ac1e7fa558287a811ea07634d815ee7b1c541284"],"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72":["054c04cf724f73ebdd3b16e3a86ce802c0ba5e37"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"936cdd5882761db3b844afd6f84ab81cbb011a75":["57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72","ac1e7fa558287a811ea07634d815ee7b1c541284"],"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a52341299179de5479672f7cf518bf4b173f34b3"],"ac1e7fa558287a811ea07634d815ee7b1c541284":["57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72"]},"commit2Childs":{"a52341299179de5479672f7cf518bf4b173f34b3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72":["a52341299179de5479672f7cf518bf4b173f34b3","936cdd5882761db3b844afd6f84ab81cbb011a75","ac1e7fa558287a811ea07634d815ee7b1c541284"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["054c04cf724f73ebdd3b16e3a86ce802c0ba5e37"],"936cdd5882761db3b844afd6f84ab81cbb011a75":[],"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37":["57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72"],"ac1e7fa558287a811ea07634d815ee7b1c541284":["a52341299179de5479672f7cf518bf4b173f34b3","936cdd5882761db3b844afd6f84ab81cbb011a75"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["936cdd5882761db3b844afd6f84ab81cbb011a75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}