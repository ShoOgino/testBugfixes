{"path":"solr/core/src/java/org/apache/solr/handler/component/StatsField[StatsComponent]#computeLocalStatsValues(DocSet).mjava","commits":[{"id":"610c97b96420e614c67797fd43822ebc1d4b7ee2","date":1410814832,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/StatsField[StatsComponent]#computeLocalStatsValues(DocSet).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Computes the {@link StatsValues} for this {@link StatsField} relative to the \n   * specified {@link DocSet} \n   * @see #computeBaseDocSet\n   */\n  public StatsValues computeLocalStatsValues(DocSet base) throws IOException {\n\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      // TODO: should this also be used for single-valued string fields? (should work fine)\n      return DocValuesStats.getCounts(searcher, fieldName, base, calcDistinct, facets);\n    } else {\n      return getFieldCacheStats(base);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"283ff02f401ec3e7a2fad73643970f052383fb0c","date":1411407953,"type":5,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/StatsField#computeLocalStatsValues(DocSet).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/StatsField[StatsComponent]#computeLocalStatsValues(DocSet).mjava","sourceNew":"  /**\n   * Computes the {@link StatsValues} for this {@link StatsField} relative to the \n   * specified {@link DocSet} \n   * @see #computeBaseDocSet\n   */\n  public StatsValues computeLocalStatsValues(DocSet base) throws IOException {\n\n    if (null != schemaField \n        && (schemaField.multiValued() || schemaField.getType().multiValuedFieldCache())) {\n\n      // TODO: should this also be used for single-valued string fields? (should work fine)\n      return DocValuesStats.getCounts(searcher, this, base, facets);\n    } else {\n      // either a single valued field we pull from FieldCache, or an explicit\n      // function ValueSource\n      return computeLocalValueSourceStats(base);\n    }\n  }\n\n","sourceOld":"  /**\n   * Computes the {@link StatsValues} for this {@link StatsField} relative to the \n   * specified {@link DocSet} \n   * @see #computeBaseDocSet\n   */\n  public StatsValues computeLocalStatsValues(DocSet base) throws IOException {\n\n    if (sf.multiValued() || sf.getType().multiValuedFieldCache()) {\n      // TODO: should this also be used for single-valued string fields? (should work fine)\n      return DocValuesStats.getCounts(searcher, fieldName, base, calcDistinct, facets);\n    } else {\n      return getFieldCacheStats(base);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"283ff02f401ec3e7a2fad73643970f052383fb0c":["610c97b96420e614c67797fd43822ebc1d4b7ee2"],"610c97b96420e614c67797fd43822ebc1d4b7ee2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["283ff02f401ec3e7a2fad73643970f052383fb0c"]},"commit2Childs":{"283ff02f401ec3e7a2fad73643970f052383fb0c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"610c97b96420e614c67797fd43822ebc1d4b7ee2":["283ff02f401ec3e7a2fad73643970f052383fb0c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["610c97b96420e614c67797fd43822ebc1d4b7ee2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}