{"path":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#multiValueTest().mjava","commits":[{"id":"ff403346522eaa9de75403763e297e83a3ea585c","date":1384904731,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#multiValueTest().mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void multiValueTest() throws Exception { \n    //Long\n    String longFacet = getFacetXML(response, \"multivalued\", \"fieldFacets\", \"long_ldm\");    \n    Collection<Double> lon = (ArrayList<Double>)xmlToList(longFacet, \"double\", \"mean\");\n    ArrayList<Double> longTest = calculateNumberStat(multiLongTestStart, \"mean\");\n    assertEquals(lon,longTest);\n    //Date\n    String dateFacet = getFacetXML(response, \"multivalued\", \"fieldFacets\", \"date_dtdm\");    \n    Collection<Double> date = (ArrayList<Double>)xmlToList(dateFacet, \"double\", \"mean\");\n    ArrayList<Double> dateTest = calculateNumberStat(multiDateTestStart, \"mean\");\n    assertEquals(date,dateTest);\n    //String\n    String stringFacet = getFacetXML(response, \"multivalued\", \"fieldFacets\", \"string_sdm\");    \n    Collection<Double> string = (ArrayList<Double>)xmlToList(stringFacet, \"double\", \"mean\");\n    ArrayList<Double> stringTest = calculateNumberStat(multiStringTestStart, \"mean\");\n    assertEquals(string,stringTest);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c0586e0570de2261142e339891d57c0f36f45c6","date":1385565864,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#multiValueTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#multiValueTest().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void multiValueTest() throws Exception { \n    //Long\n    Collection<Double> lon = getDoubleList(\"multivalued\", \"fieldFacets\", \"long_ldm\", \"double\", \"mean\");\n    ArrayList<Double> longTest = calculateNumberStat(multiLongTestStart, \"mean\");\n    assertEquals(getRawResponse(),lon,longTest);\n    //Date\n    Collection<Double> date = getDoubleList(\"multivalued\", \"fieldFacets\", \"date_dtdm\", \"double\", \"mean\");\n    ArrayList<Double> dateTest = calculateNumberStat(multiDateTestStart, \"mean\");\n    assertEquals(getRawResponse(),date,dateTest);\n    //String\n    Collection<Double> string = getDoubleList(\"multivalued\", \"fieldFacets\", \"string_sdm\", \"double\", \"mean\");\n    ArrayList<Double> stringTest = calculateNumberStat(multiStringTestStart, \"mean\");\n    assertEquals(getRawResponse(),string,stringTest);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void multiValueTest() throws Exception { \n    //Long\n    String longFacet = getFacetXML(response, \"multivalued\", \"fieldFacets\", \"long_ldm\");    \n    Collection<Double> lon = (ArrayList<Double>)xmlToList(longFacet, \"double\", \"mean\");\n    ArrayList<Double> longTest = calculateNumberStat(multiLongTestStart, \"mean\");\n    assertEquals(lon,longTest);\n    //Date\n    String dateFacet = getFacetXML(response, \"multivalued\", \"fieldFacets\", \"date_dtdm\");    \n    Collection<Double> date = (ArrayList<Double>)xmlToList(dateFacet, \"double\", \"mean\");\n    ArrayList<Double> dateTest = calculateNumberStat(multiDateTestStart, \"mean\");\n    assertEquals(date,dateTest);\n    //String\n    String stringFacet = getFacetXML(response, \"multivalued\", \"fieldFacets\", \"string_sdm\");    \n    Collection<Double> string = (ArrayList<Double>)xmlToList(stringFacet, \"double\", \"mean\");\n    ArrayList<Double> stringTest = calculateNumberStat(multiStringTestStart, \"mean\");\n    assertEquals(string,stringTest);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#multiValueTest().mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void multiValueTest() throws Exception { \n    //Long\n    Collection<Double> lon = getDoubleList(\"multivalued\", \"fieldFacets\", \"long_ldm\", \"double\", \"mean\");\n    ArrayList<Double> longTest = calculateNumberStat(multiLongTestStart, \"mean\");\n    assertEquals(getRawResponse(),lon,longTest);\n    //Date\n    Collection<Double> date = getDoubleList(\"multivalued\", \"fieldFacets\", \"date_dtdm\", \"double\", \"mean\");\n    ArrayList<Double> dateTest = calculateNumberStat(multiDateTestStart, \"mean\");\n    assertEquals(getRawResponse(),date,dateTest);\n    //String\n    Collection<Double> string = getDoubleList(\"multivalued\", \"fieldFacets\", \"string_sdm\", \"double\", \"mean\");\n    ArrayList<Double> stringTest = calculateNumberStat(multiStringTestStart, \"mean\");\n    assertEquals(getRawResponse(),string,stringTest);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f719faa74f7213d4a395510dbc1f1b7cb178484","date":1410881394,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/facet/FieldFacetTest#multiValueTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#multiValueTest().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void multiValueTest() throws Exception { \n    //Long\n    Collection<Double> lon = getDoubleList(\"multivalued\", \"fieldFacets\", \"long_ldm\", \"double\", \"mean\");\n    ArrayList<Double> longTest = calculateNumberStat(multiLongTestStart, \"mean\");\n    assertEquals(getRawResponse(),lon,longTest);\n    //Date\n    Collection<Double> date = getDoubleList(\"multivalued\", \"fieldFacets\", \"date_dtdm\", \"double\", \"mean\");\n    ArrayList<Double> dateTest = calculateNumberStat(multiDateTestStart, \"mean\");\n    assertEquals(getRawResponse(),date,dateTest);\n    //String\n    Collection<Double> string = getDoubleList(\"multivalued\", \"fieldFacets\", \"string_sdm\", \"double\", \"mean\");\n    ArrayList<Double> stringTest = calculateNumberStat(multiStringTestStart, \"mean\");\n    assertEquals(getRawResponse(),string,stringTest);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void multiValueTest() throws Exception { \n    //Long\n    Collection<Double> lon = getDoubleList(\"multivalued\", \"fieldFacets\", \"long_ldm\", \"double\", \"mean\");\n    ArrayList<Double> longTest = calculateNumberStat(multiLongTestStart, \"mean\");\n    assertEquals(getRawResponse(),lon,longTest);\n    //Date\n    Collection<Double> date = getDoubleList(\"multivalued\", \"fieldFacets\", \"date_dtdm\", \"double\", \"mean\");\n    ArrayList<Double> dateTest = calculateNumberStat(multiDateTestStart, \"mean\");\n    assertEquals(getRawResponse(),date,dateTest);\n    //String\n    Collection<Double> string = getDoubleList(\"multivalued\", \"fieldFacets\", \"string_sdm\", \"double\", \"mean\");\n    ArrayList<Double> stringTest = calculateNumberStat(multiStringTestStart, \"mean\");\n    assertEquals(getRawResponse(),string,stringTest);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1c0586e0570de2261142e339891d57c0f36f45c6"],"ff403346522eaa9de75403763e297e83a3ea585c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["1c0586e0570de2261142e339891d57c0f36f45c6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f719faa74f7213d4a395510dbc1f1b7cb178484"],"1c0586e0570de2261142e339891d57c0f36f45c6":["ff403346522eaa9de75403763e297e83a3ea585c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","ff403346522eaa9de75403763e297e83a3ea585c"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"ff403346522eaa9de75403763e297e83a3ea585c":["1c0586e0570de2261142e339891d57c0f36f45c6"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1c0586e0570de2261142e339891d57c0f36f45c6":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","0f719faa74f7213d4a395510dbc1f1b7cb178484"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}