{"path":"lucene/core/src/java/org/apache/lucene/util/automaton/CharacterRunAutomaton#CharacterRunAutomaton(Automaton,int).mjava","commits":[{"id":"8b316f82baae88f5e279893a9cb7eee51fd8902f","date":1415131390,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/CharacterRunAutomaton#CharacterRunAutomaton(Automaton,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Construct specifying maxDeterminizedStates.\n   * @param a Automaton to match\n   * @param maxDeterminizedStates maximum number of states that the automataon\n   *   can have once determinized.  If more states are required to determinize\n   *   it then a TooComplexToDeterminizeException is thrown.\n   */ \n  public CharacterRunAutomaton(Automaton a, int maxDeterminizedStates) {\n    super(a, Character.MAX_CODE_POINT, false, maxDeterminizedStates);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ddee54b1c3df60fd6198e3aa64c78038a1be8df","date":1487008231,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/CharacterRunAutomaton#CharacterRunAutomaton(Automaton,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/CharacterRunAutomaton#CharacterRunAutomaton(Automaton,int).mjava","sourceNew":"  /**\n   * Construct specifying maxDeterminizedStates.\n   * @param a Automaton to match\n   * @param maxDeterminizedStates maximum number of states that the automataon\n   *   can have once determinized.  If more states are required to determinize\n   *   it then a TooComplexToDeterminizeException is thrown.\n   */ \n  public CharacterRunAutomaton(Automaton a, int maxDeterminizedStates) {\n    super(a, Character.MAX_CODE_POINT+1, maxDeterminizedStates);\n  }\n\n","sourceOld":"  /**\n   * Construct specifying maxDeterminizedStates.\n   * @param a Automaton to match\n   * @param maxDeterminizedStates maximum number of states that the automataon\n   *   can have once determinized.  If more states are required to determinize\n   *   it then a TooComplexToDeterminizeException is thrown.\n   */ \n  public CharacterRunAutomaton(Automaton a, int maxDeterminizedStates) {\n    super(a, Character.MAX_CODE_POINT, false, maxDeterminizedStates);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"022a4de90e0479b604264ca9c2e134c996454ab3","date":1487118265,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/CharacterRunAutomaton#CharacterRunAutomaton(Automaton,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/CharacterRunAutomaton#CharacterRunAutomaton(Automaton,int).mjava","sourceNew":"  /**\n   * Construct specifying maxDeterminizedStates.\n   * @param a Automaton to match\n   * @param maxDeterminizedStates maximum number of states that the automataon\n   *   can have once determinized.  If more states are required to determinize\n   *   it then a TooComplexToDeterminizeException is thrown.\n   */ \n  public CharacterRunAutomaton(Automaton a, int maxDeterminizedStates) {\n    super(a, Character.MAX_CODE_POINT+1, maxDeterminizedStates);\n  }\n\n","sourceOld":"  /**\n   * Construct specifying maxDeterminizedStates.\n   * @param a Automaton to match\n   * @param maxDeterminizedStates maximum number of states that the automataon\n   *   can have once determinized.  If more states are required to determinize\n   *   it then a TooComplexToDeterminizeException is thrown.\n   */ \n  public CharacterRunAutomaton(Automaton a, int maxDeterminizedStates) {\n    super(a, Character.MAX_CODE_POINT, false, maxDeterminizedStates);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96","date":1487122334,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/CharacterRunAutomaton#CharacterRunAutomaton(Automaton,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/CharacterRunAutomaton#CharacterRunAutomaton(Automaton,int).mjava","sourceNew":"  /**\n   * Construct specifying maxDeterminizedStates.\n   * @param a Automaton to match\n   * @param maxDeterminizedStates maximum number of states that the automataon\n   *   can have once determinized.  If more states are required to determinize\n   *   it then a TooComplexToDeterminizeException is thrown.\n   */ \n  public CharacterRunAutomaton(Automaton a, int maxDeterminizedStates) {\n    super(a, Character.MAX_CODE_POINT, false, maxDeterminizedStates);\n  }\n\n","sourceOld":"  /**\n   * Construct specifying maxDeterminizedStates.\n   * @param a Automaton to match\n   * @param maxDeterminizedStates maximum number of states that the automataon\n   *   can have once determinized.  If more states are required to determinize\n   *   it then a TooComplexToDeterminizeException is thrown.\n   */ \n  public CharacterRunAutomaton(Automaton a, int maxDeterminizedStates) {\n    super(a, Character.MAX_CODE_POINT+1, maxDeterminizedStates);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"897b06b1364bd1f658a8be7591e43f0851458e7f","date":1487123008,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/CharacterRunAutomaton#CharacterRunAutomaton(Automaton,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/CharacterRunAutomaton#CharacterRunAutomaton(Automaton,int).mjava","sourceNew":"  /**\n   * Construct specifying maxDeterminizedStates.\n   * @param a Automaton to match\n   * @param maxDeterminizedStates maximum number of states that the automataon\n   *   can have once determinized.  If more states are required to determinize\n   *   it then a TooComplexToDeterminizeException is thrown.\n   */ \n  public CharacterRunAutomaton(Automaton a, int maxDeterminizedStates) {\n    super(a, Character.MAX_CODE_POINT+1, maxDeterminizedStates);\n  }\n\n","sourceOld":"  /**\n   * Construct specifying maxDeterminizedStates.\n   * @param a Automaton to match\n   * @param maxDeterminizedStates maximum number of states that the automataon\n   *   can have once determinized.  If more states are required to determinize\n   *   it then a TooComplexToDeterminizeException is thrown.\n   */ \n  public CharacterRunAutomaton(Automaton a, int maxDeterminizedStates) {\n    super(a, Character.MAX_CODE_POINT, false, maxDeterminizedStates);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2af44fa9bd43d5df330d6438c1af390323f7d567","date":1574847240,"type":3,"author":"Benedict Jin","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/CharacterRunAutomaton#CharacterRunAutomaton(Automaton,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/CharacterRunAutomaton#CharacterRunAutomaton(Automaton,int).mjava","sourceNew":"  /**\n   * Construct specifying maxDeterminizedStates.\n   * @param a Automaton to match\n   * @param maxDeterminizedStates maximum number of states that the automaton\n   *   can have once determinized.  If more states are required to determinize\n   *   it then a TooComplexToDeterminizeException is thrown.\n   */ \n  public CharacterRunAutomaton(Automaton a, int maxDeterminizedStates) {\n    super(a, Character.MAX_CODE_POINT+1, maxDeterminizedStates);\n  }\n\n","sourceOld":"  /**\n   * Construct specifying maxDeterminizedStates.\n   * @param a Automaton to match\n   * @param maxDeterminizedStates maximum number of states that the automataon\n   *   can have once determinized.  If more states are required to determinize\n   *   it then a TooComplexToDeterminizeException is thrown.\n   */ \n  public CharacterRunAutomaton(Automaton a, int maxDeterminizedStates) {\n    super(a, Character.MAX_CODE_POINT+1, maxDeterminizedStates);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96":["022a4de90e0479b604264ca9c2e134c996454ab3"],"022a4de90e0479b604264ca9c2e134c996454ab3":["8b316f82baae88f5e279893a9cb7eee51fd8902f","5ddee54b1c3df60fd6198e3aa64c78038a1be8df"],"897b06b1364bd1f658a8be7591e43f0851458e7f":["b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2af44fa9bd43d5df330d6438c1af390323f7d567":["897b06b1364bd1f658a8be7591e43f0851458e7f"],"8b316f82baae88f5e279893a9cb7eee51fd8902f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2af44fa9bd43d5df330d6438c1af390323f7d567"],"5ddee54b1c3df60fd6198e3aa64c78038a1be8df":["8b316f82baae88f5e279893a9cb7eee51fd8902f"]},"commit2Childs":{"b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96":["897b06b1364bd1f658a8be7591e43f0851458e7f"],"022a4de90e0479b604264ca9c2e134c996454ab3":["b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96"],"897b06b1364bd1f658a8be7591e43f0851458e7f":["2af44fa9bd43d5df330d6438c1af390323f7d567"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8b316f82baae88f5e279893a9cb7eee51fd8902f"],"8b316f82baae88f5e279893a9cb7eee51fd8902f":["022a4de90e0479b604264ca9c2e134c996454ab3","5ddee54b1c3df60fd6198e3aa64c78038a1be8df"],"2af44fa9bd43d5df330d6438c1af390323f7d567":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5ddee54b1c3df60fd6198e3aa64c78038a1be8df":["022a4de90e0479b604264ca9c2e134c996454ab3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}