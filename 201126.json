{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader#getDeepCopy(Map[String,Object]).mjava","commits":[{"id":"fb64c40810344469d50ab5bb932fb375b6dcd474","date":1223970703,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader#getDeepCopy(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  private Map<String, Object> getDeepCopy(Map<String, Object> values) {\n    Map<String, Object> result = new HashMap<String, Object>();\n    for (Map.Entry<String, Object> entry : values.entrySet()) {\n      if (entry.getValue() instanceof List) {\n        result.put(entry.getKey(),new ArrayList((List) entry.getValue()));\n      } else{\n        result.put(entry.getKey(),entry.getValue());\n      }\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb5bb8a93dd58a4cde932f3e3ee4e13dc6832949","date":1252931993,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader#getDeepCopy(Map[String,Object]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader#getDeepCopy(Map[String,Object]).mjava","sourceNew":"  /**If a field has List then they have to be deep-copied for thread safety\n   */\n  private Map<String, Object> getDeepCopy(Map<String, Object> values) {\n    Map<String, Object> result = new HashMap<String, Object>();\n    for (Map.Entry<String, Object> entry : values.entrySet()) {\n      if (entry.getValue() instanceof List) {\n        result.put(entry.getKey(),new ArrayList((List) entry.getValue()));\n      } else{\n        result.put(entry.getKey(),entry.getValue());\n      }\n    }\n    return result;\n  }\n\n","sourceOld":"  private Map<String, Object> getDeepCopy(Map<String, Object> values) {\n    Map<String, Object> result = new HashMap<String, Object>();\n    for (Map.Entry<String, Object> entry : values.entrySet()) {\n      if (entry.getValue() instanceof List) {\n        result.put(entry.getKey(),new ArrayList((List) entry.getValue()));\n      } else{\n        result.put(entry.getKey(),entry.getValue());\n      }\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b14ccda0bdb398cf86bc3804e1c136a615dbd89b","date":1253269935,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader#getDeepCopy(Map[String,Object]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader#getDeepCopy(Map[String,Object]).mjava","sourceNew":"  /**\n   * Copies a supplied Map to a new Map which is returned. Used to copy a \n   * records values. If a fields value is a List then they have to be \n   * deep-copied for thread safety\n   */\n  private Map<String, Object> getDeepCopy(Map<String, Object> values) {\n    Map<String, Object> result = new HashMap<String, Object>();\n    for (Map.Entry<String, Object> entry : values.entrySet()) {\n      if (entry.getValue() instanceof List) {\n        result.put(entry.getKey(),new ArrayList((List) entry.getValue()));\n      } else {\n        result.put(entry.getKey(),entry.getValue());\n      }\n    }\n    return result;\n  }\n\n","sourceOld":"  /**If a field has List then they have to be deep-copied for thread safety\n   */\n  private Map<String, Object> getDeepCopy(Map<String, Object> values) {\n    Map<String, Object> result = new HashMap<String, Object>();\n    for (Map.Entry<String, Object> entry : values.entrySet()) {\n      if (entry.getValue() instanceof List) {\n        result.put(entry.getKey(),new ArrayList((List) entry.getValue()));\n      } else{\n        result.put(entry.getKey(),entry.getValue());\n      }\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f2a93a28913071a0b713be1d4b8a1181388d550","date":1254814948,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader#getDeepCopy(Map[String,Object]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Copies a supplied Map to a new Map which is returned. Used to copy a \n   * records values. If a fields value is a List then they have to be \n   * deep-copied for thread safety\n   */\n  private Map<String, Object> getDeepCopy(Map<String, Object> values) {\n    Map<String, Object> result = new HashMap<String, Object>();\n    for (Map.Entry<String, Object> entry : values.entrySet()) {\n      if (entry.getValue() instanceof List) {\n        result.put(entry.getKey(),new ArrayList((List) entry.getValue()));\n      } else {\n        result.put(entry.getKey(),entry.getValue());\n      }\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cb5bb8a93dd58a4cde932f3e3ee4e13dc6832949":["fb64c40810344469d50ab5bb932fb375b6dcd474"],"fb64c40810344469d50ab5bb932fb375b6dcd474":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7f2a93a28913071a0b713be1d4b8a1181388d550":["b14ccda0bdb398cf86bc3804e1c136a615dbd89b"],"b14ccda0bdb398cf86bc3804e1c136a615dbd89b":["cb5bb8a93dd58a4cde932f3e3ee4e13dc6832949"]},"commit2Childs":{"cb5bb8a93dd58a4cde932f3e3ee4e13dc6832949":["b14ccda0bdb398cf86bc3804e1c136a615dbd89b"],"fb64c40810344469d50ab5bb932fb375b6dcd474":["cb5bb8a93dd58a4cde932f3e3ee4e13dc6832949"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["fb64c40810344469d50ab5bb932fb375b6dcd474"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7f2a93a28913071a0b713be1d4b8a1181388d550":[],"b14ccda0bdb398cf86bc3804e1c136a615dbd89b":["7f2a93a28913071a0b713be1d4b8a1181388d550"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","7f2a93a28913071a0b713be1d4b8a1181388d550"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}