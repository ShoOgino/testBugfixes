{"path":"lucene/test-framework/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testKeyword().mjava","commits":[{"id":"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a","date":1429550638,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testKeyword().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testKeyword().mjava","sourceNew":"  /** Test a configuration that behaves a lot like KeywordAnalyzer */\n  public void testKeyword() throws Exception {\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.KEYWORD, false);\n    assertAnalyzesTo(a, \"a-bc123 defg+hijklmn567opqrstuv78wxy_z \",\n        new String[] { \"a-bc123 defg+hijklmn567opqrstuv78wxy_z \" });\n    assertAnalyzesTo(a, \"aba4cadaba-Shazam\",\n        new String[] { \"aba4cadaba-Shazam\" });\n    assertAnalyzesTo(a, \"break+on/Nothing\",\n        new String[] { \"break+on/Nothing\" });\n    // currently though emits no tokens for empty string: maybe we can do it,\n    // but we don't want to emit tokens infinitely...\n    assertAnalyzesTo(a, \"\", new String[0]);\n  }\n\n","sourceOld":"  /** Test a configuration that behaves a lot like KeywordAnalyzer */\n  public void testKeyword() throws Exception {\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.KEYWORD, false);\n    assertAnalyzesTo(a, \"a-bc123 defg+hijklmn567opqrstuv78wxy_z \",\n        new String[] { \"a-bc123 defg+hijklmn567opqrstuv78wxy_z \" });\n    assertAnalyzesTo(a, \"aba4cadaba-Shazam\",\n        new String[] { \"aba4cadaba-Shazam\" });\n    assertAnalyzesTo(a, \"break+on/Nothing\",\n        new String[] { \"break+on/Nothing\" });\n    // currently though emits no tokens for empty string: maybe we can do it,\n    // but we don't want to emit tokens infinitely...\n    assertAnalyzesTo(a, \"\", new String[0]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}