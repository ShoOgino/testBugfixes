{"path":"lucene/src/test/org/apache/lucene/search/TestSort#setUp().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestSort#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery (new Term (\"contents\", \"x\"));\n    queryY = new TermQuery (new Term (\"contents\", \"y\"));\n    queryA = new TermQuery (new Term (\"contents\", \"a\"));\n    queryE = new TermQuery (new Term (\"contents\", \"e\"));\n    queryF = new TermQuery (new Term (\"contents\", \"f\"));\n    queryG = new TermQuery (new Term (\"contents\", \"g\"));\n    sort = new Sort();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery (new Term (\"contents\", \"x\"));\n    queryY = new TermQuery (new Term (\"contents\", \"y\"));\n    queryA = new TermQuery (new Term (\"contents\", \"a\"));\n    queryE = new TermQuery (new Term (\"contents\", \"e\"));\n    queryF = new TermQuery (new Term (\"contents\", \"f\"));\n    queryG = new TermQuery (new Term (\"contents\", \"g\"));\n    sort = new Sort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43b04c27924fe393e38e9f0986e32c634f261859","date":1284399440,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery (new Term (\"contents\", \"x\"));\n    queryY = new TermQuery (new Term (\"contents\", \"y\"));\n    queryA = new TermQuery (new Term (\"contents\", \"a\"));\n    queryE = new TermQuery (new Term (\"contents\", \"e\"));\n    queryF = new TermQuery (new Term (\"contents\", \"f\"));\n    queryG = new TermQuery (new Term (\"contents\", \"g\"));\n    sort = new Sort();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery (new Term (\"contents\", \"x\"));\n    queryY = new TermQuery (new Term (\"contents\", \"y\"));\n    queryA = new TermQuery (new Term (\"contents\", \"a\"));\n    queryE = new TermQuery (new Term (\"contents\", \"e\"));\n    queryF = new TermQuery (new Term (\"contents\", \"f\"));\n    queryG = new TermQuery (new Term (\"contents\", \"g\"));\n    sort = new Sort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ff1421d1974cfd5072e195bbb63592657da2f66e","date":1285733489,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery (new Term (\"contents\", \"x\"));\n    queryY = new TermQuery (new Term (\"contents\", \"y\"));\n    queryA = new TermQuery (new Term (\"contents\", \"a\"));\n    queryE = new TermQuery (new Term (\"contents\", \"e\"));\n    queryF = new TermQuery (new Term (\"contents\", \"f\"));\n    queryG = new TermQuery (new Term (\"contents\", \"g\"));\n    queryM = new TermQuery (new Term (\"contents\", \"m\"));\n    sort = new Sort();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery (new Term (\"contents\", \"x\"));\n    queryY = new TermQuery (new Term (\"contents\", \"y\"));\n    queryA = new TermQuery (new Term (\"contents\", \"a\"));\n    queryE = new TermQuery (new Term (\"contents\", \"e\"));\n    queryF = new TermQuery (new Term (\"contents\", \"f\"));\n    queryG = new TermQuery (new Term (\"contents\", \"g\"));\n    sort = new Sort();\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery (new Term (\"contents\", \"x\"));\n    queryY = new TermQuery (new Term (\"contents\", \"y\"));\n    queryA = new TermQuery (new Term (\"contents\", \"a\"));\n    queryE = new TermQuery (new Term (\"contents\", \"e\"));\n    queryF = new TermQuery (new Term (\"contents\", \"f\"));\n    queryG = new TermQuery (new Term (\"contents\", \"g\"));\n    queryM = new TermQuery (new Term (\"contents\", \"m\"));\n    sort = new Sort();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery (new Term (\"contents\", \"x\"));\n    queryY = new TermQuery (new Term (\"contents\", \"y\"));\n    queryA = new TermQuery (new Term (\"contents\", \"a\"));\n    queryE = new TermQuery (new Term (\"contents\", \"e\"));\n    queryF = new TermQuery (new Term (\"contents\", \"f\"));\n    queryG = new TermQuery (new Term (\"contents\", \"g\"));\n    sort = new Sort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9235b9d4454a46c066cda47fed7ca0a34e614529","date":1304414372,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    //nocommit - enable doc values by default for all tests\n    DocValuesCodecProvider provider = new DocValuesCodecProvider();\n    provider.copyFrom(CodecProvider.getDefault());\n    CodecProvider.setDefault(provider);\n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery (new Term (\"contents\", \"x\"));\n    queryY = new TermQuery (new Term (\"contents\", \"y\"));\n    queryA = new TermQuery (new Term (\"contents\", \"a\"));\n    queryE = new TermQuery (new Term (\"contents\", \"e\"));\n    queryF = new TermQuery (new Term (\"contents\", \"f\"));\n    queryG = new TermQuery (new Term (\"contents\", \"g\"));\n    queryM = new TermQuery (new Term (\"contents\", \"m\"));\n    sort = new Sort();\n    \n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery (new Term (\"contents\", \"x\"));\n    queryY = new TermQuery (new Term (\"contents\", \"y\"));\n    queryA = new TermQuery (new Term (\"contents\", \"a\"));\n    queryE = new TermQuery (new Term (\"contents\", \"e\"));\n    queryF = new TermQuery (new Term (\"contents\", \"f\"));\n    queryG = new TermQuery (new Term (\"contents\", \"g\"));\n    queryM = new TermQuery (new Term (\"contents\", \"m\"));\n    sort = new Sort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d47326e0c6ce589b6962777df409aad0550940fa","date":1304584540,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    //nocommit - we need to be able to run this test with preflex, but without docvalues!!!!\n    assumeFalse(\"cannot work with preflex codec\", CodecProvider.getDefault().getDefaultFieldCodec().equals(\"PreFlex\"));\n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery (new Term (\"contents\", \"x\"));\n    queryY = new TermQuery (new Term (\"contents\", \"y\"));\n    queryA = new TermQuery (new Term (\"contents\", \"a\"));\n    queryE = new TermQuery (new Term (\"contents\", \"e\"));\n    queryF = new TermQuery (new Term (\"contents\", \"f\"));\n    queryG = new TermQuery (new Term (\"contents\", \"g\"));\n    queryM = new TermQuery (new Term (\"contents\", \"m\"));\n    sort = new Sort();\n    \n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    //nocommit - enable doc values by default for all tests\n    DocValuesCodecProvider provider = new DocValuesCodecProvider();\n    provider.copyFrom(CodecProvider.getDefault());\n    CodecProvider.setDefault(provider);\n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery (new Term (\"contents\", \"x\"));\n    queryY = new TermQuery (new Term (\"contents\", \"y\"));\n    queryA = new TermQuery (new Term (\"contents\", \"a\"));\n    queryE = new TermQuery (new Term (\"contents\", \"e\"));\n    queryF = new TermQuery (new Term (\"contents\", \"f\"));\n    queryG = new TermQuery (new Term (\"contents\", \"g\"));\n    queryM = new TermQuery (new Term (\"contents\", \"m\"));\n    sort = new Sort();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0cedee4c69436d5334e8f35463bf232084ff2fa3","date":1304587337,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery (new Term (\"contents\", \"x\"));\n    queryY = new TermQuery (new Term (\"contents\", \"y\"));\n    queryA = new TermQuery (new Term (\"contents\", \"a\"));\n    queryE = new TermQuery (new Term (\"contents\", \"e\"));\n    queryF = new TermQuery (new Term (\"contents\", \"f\"));\n    queryG = new TermQuery (new Term (\"contents\", \"g\"));\n    queryM = new TermQuery (new Term (\"contents\", \"m\"));\n    sort = new Sort();\n    \n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    //nocommit - we need to be able to run this test with preflex, but without docvalues!!!!\n    assumeFalse(\"cannot work with preflex codec\", CodecProvider.getDefault().getDefaultFieldCodec().equals(\"PreFlex\"));\n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery (new Term (\"contents\", \"x\"));\n    queryY = new TermQuery (new Term (\"contents\", \"y\"));\n    queryA = new TermQuery (new Term (\"contents\", \"a\"));\n    queryE = new TermQuery (new Term (\"contents\", \"e\"));\n    queryF = new TermQuery (new Term (\"contents\", \"f\"));\n    queryG = new TermQuery (new Term (\"contents\", \"g\"));\n    queryM = new TermQuery (new Term (\"contents\", \"m\"));\n    sort = new Sort();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery (new Term (\"contents\", \"x\"));\n    queryY = new TermQuery (new Term (\"contents\", \"y\"));\n    queryA = new TermQuery (new Term (\"contents\", \"a\"));\n    queryE = new TermQuery (new Term (\"contents\", \"e\"));\n    queryF = new TermQuery (new Term (\"contents\", \"f\"));\n    queryG = new TermQuery (new Term (\"contents\", \"g\"));\n    queryM = new TermQuery (new Term (\"contents\", \"m\"));\n    sort = new Sort();\n    \n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery (new Term (\"contents\", \"x\"));\n    queryY = new TermQuery (new Term (\"contents\", \"y\"));\n    queryA = new TermQuery (new Term (\"contents\", \"a\"));\n    queryE = new TermQuery (new Term (\"contents\", \"e\"));\n    queryF = new TermQuery (new Term (\"contents\", \"f\"));\n    queryG = new TermQuery (new Term (\"contents\", \"g\"));\n    queryM = new TermQuery (new Term (\"contents\", \"m\"));\n    sort = new Sort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery (new Term (\"contents\", \"x\"));\n    queryY = new TermQuery (new Term (\"contents\", \"y\"));\n    queryA = new TermQuery (new Term (\"contents\", \"a\"));\n    queryE = new TermQuery (new Term (\"contents\", \"e\"));\n    queryF = new TermQuery (new Term (\"contents\", \"f\"));\n    queryG = new TermQuery (new Term (\"contents\", \"g\"));\n    queryM = new TermQuery (new Term (\"contents\", \"m\"));\n    sort = new Sort();\n    \n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery (new Term (\"contents\", \"x\"));\n    queryY = new TermQuery (new Term (\"contents\", \"y\"));\n    queryA = new TermQuery (new Term (\"contents\", \"a\"));\n    queryE = new TermQuery (new Term (\"contents\", \"e\"));\n    queryF = new TermQuery (new Term (\"contents\", \"f\"));\n    queryG = new TermQuery (new Term (\"contents\", \"g\"));\n    queryM = new TermQuery (new Term (\"contents\", \"m\"));\n    sort = new Sort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28088b0a688977b79dec2cc9119cff2fb4aab7ee","date":1321197996,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    dvStringSorted = random.nextBoolean();\n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery (new Term (\"contents\", \"x\"));\n    queryY = new TermQuery (new Term (\"contents\", \"y\"));\n    queryA = new TermQuery (new Term (\"contents\", \"a\"));\n    queryE = new TermQuery (new Term (\"contents\", \"e\"));\n    queryF = new TermQuery (new Term (\"contents\", \"f\"));\n    queryG = new TermQuery (new Term (\"contents\", \"g\"));\n    queryM = new TermQuery (new Term (\"contents\", \"m\"));\n    sort = new Sort();\n    \n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery (new Term (\"contents\", \"x\"));\n    queryY = new TermQuery (new Term (\"contents\", \"y\"));\n    queryA = new TermQuery (new Term (\"contents\", \"a\"));\n    queryE = new TermQuery (new Term (\"contents\", \"e\"));\n    queryF = new TermQuery (new Term (\"contents\", \"f\"));\n    queryG = new TermQuery (new Term (\"contents\", \"g\"));\n    queryM = new TermQuery (new Term (\"contents\", \"m\"));\n    sort = new Sort();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    dvStringSorted = random.nextBoolean();\n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery (new Term (\"contents\", \"x\"));\n    queryY = new TermQuery (new Term (\"contents\", \"y\"));\n    queryA = new TermQuery (new Term (\"contents\", \"a\"));\n    queryE = new TermQuery (new Term (\"contents\", \"e\"));\n    queryF = new TermQuery (new Term (\"contents\", \"f\"));\n    queryG = new TermQuery (new Term (\"contents\", \"g\"));\n    queryM = new TermQuery (new Term (\"contents\", \"m\"));\n    sort = new Sort();\n    \n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    dvStringSorted = random.nextBoolean();\n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery (new Term (\"contents\", \"x\"));\n    queryY = new TermQuery (new Term (\"contents\", \"y\"));\n    queryA = new TermQuery (new Term (\"contents\", \"a\"));\n    queryE = new TermQuery (new Term (\"contents\", \"e\"));\n    queryF = new TermQuery (new Term (\"contents\", \"f\"));\n    queryG = new TermQuery (new Term (\"contents\", \"g\"));\n    queryM = new TermQuery (new Term (\"contents\", \"m\"));\n    sort = new Sort();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["ff1421d1974cfd5072e195bbb63592657da2f66e","2e8d7ba2175f47e280231533f7d3016249cea88b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["28088b0a688977b79dec2cc9119cff2fb4aab7ee"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","ff1421d1974cfd5072e195bbb63592657da2f66e"],"ff1421d1974cfd5072e195bbb63592657da2f66e":["43b04c27924fe393e38e9f0986e32c634f261859"],"43b04c27924fe393e38e9f0986e32c634f261859":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9235b9d4454a46c066cda47fed7ca0a34e614529":["ff1421d1974cfd5072e195bbb63592657da2f66e"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["ff1421d1974cfd5072e195bbb63592657da2f66e","0cedee4c69436d5334e8f35463bf232084ff2fa3"],"0cedee4c69436d5334e8f35463bf232084ff2fa3":["d47326e0c6ce589b6962777df409aad0550940fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"28088b0a688977b79dec2cc9119cff2fb4aab7ee":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d47326e0c6ce589b6962777df409aad0550940fa":["9235b9d4454a46c066cda47fed7ca0a34e614529"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"ff1421d1974cfd5072e195bbb63592657da2f66e":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","9235b9d4454a46c066cda47fed7ca0a34e614529","2e8d7ba2175f47e280231533f7d3016249cea88b"],"43b04c27924fe393e38e9f0986e32c634f261859":["ff1421d1974cfd5072e195bbb63592657da2f66e"],"9235b9d4454a46c066cda47fed7ca0a34e614529":["d47326e0c6ce589b6962777df409aad0550940fa"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","28088b0a688977b79dec2cc9119cff2fb4aab7ee"],"0cedee4c69436d5334e8f35463bf232084ff2fa3":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"28088b0a688977b79dec2cc9119cff2fb4aab7ee":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","43b04c27924fe393e38e9f0986e32c634f261859"],"d47326e0c6ce589b6962777df409aad0550940fa":["0cedee4c69436d5334e8f35463bf232084ff2fa3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}