{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/request/V1toV2ApiMapper.ActionInfo#setPath().mjava","commits":[{"id":"4d3fc88a06a44fc3112186e9be4562b36713955d","date":1497587751,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/V1toV2ApiMapper.ActionInfo#setPath().mjava","pathOld":"/dev/null","sourceNew":"    //do this lazily because , it makes no sense if this is not used\n    synchronized void setPath() {\n      if (path == null) {\n        ValidatingJsonMap m = Utils.getSpec(meta.getEndPoint().getSpecName()).getSpec();\n        Object o = Utils.getObjectByPath(m, false, \"url/paths\");\n\n        String result = null;\n        if (o instanceof List) {//choose the shortest path\n          for (Object s : (List) o) {\n            if (result == null || s.toString().length() < result.length()) result = s.toString();\n          }\n        } else if (o instanceof String) {\n          result = (String) o;\n        }\n        path = result;\n        template = new Template(path, Template.BRACES_PLACEHOLDER_PATTERN);\n\n        validator = new JsonSchemaValidator(m.getMap(\"commands\", NOT_NULL).getMap(meta.commandName, NOT_NULL));\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/V1toV2ApiMapper.ActionInfo#setPath().mjava","pathOld":"/dev/null","sourceNew":"    //do this lazily because , it makes no sense if this is not used\n    synchronized void setPath() {\n      if (path == null) {\n        ValidatingJsonMap m = Utils.getSpec(meta.getEndPoint().getSpecName()).getSpec();\n        Object o = Utils.getObjectByPath(m, false, \"url/paths\");\n\n        String result = null;\n        if (o instanceof List) {//choose the shortest path\n          for (Object s : (List) o) {\n            if (result == null || s.toString().length() < result.length()) result = s.toString();\n          }\n        } else if (o instanceof String) {\n          result = (String) o;\n        }\n        path = result;\n        template = new Template(path, Template.BRACES_PLACEHOLDER_PATTERN);\n\n        validator = new JsonSchemaValidator(m.getMap(\"commands\", NOT_NULL).getMap(meta.commandName, NOT_NULL));\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/V1toV2ApiMapper.ActionInfo#setPath().mjava","pathOld":"/dev/null","sourceNew":"    //do this lazily because , it makes no sense if this is not used\n    synchronized void setPath() {\n      if (path == null) {\n        ValidatingJsonMap m = Utils.getSpec(meta.getEndPoint().getSpecName()).getSpec();\n        Object o = Utils.getObjectByPath(m, false, \"url/paths\");\n\n        String result = null;\n        if (o instanceof List) {//choose the shortest path\n          for (Object s : (List) o) {\n            if (result == null || s.toString().length() < result.length()) result = s.toString();\n          }\n        } else if (o instanceof String) {\n          result = (String) o;\n        }\n        path = result;\n        template = new Template(path, Template.BRACES_PLACEHOLDER_PATTERN);\n\n        validator = new JsonSchemaValidator(m.getMap(\"commands\", NOT_NULL).getMap(meta.commandName, NOT_NULL));\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d3fc88a06a44fc3112186e9be4562b36713955d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4d3fc88a06a44fc3112186e9be4562b36713955d"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4d3fc88a06a44fc3112186e9be4562b36713955d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"4d3fc88a06a44fc3112186e9be4562b36713955d":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4d3fc88a06a44fc3112186e9be4562b36713955d","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}