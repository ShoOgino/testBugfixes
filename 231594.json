{"path":"lucene/core/src/test/org/apache/lucene/index/TestParallelAtomicReader#testCloseInnerReader().mjava","commits":[{"id":"48180ea0d6210cab36e06798b916a39e0607713b","date":1367051483,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestParallelAtomicReader#testCloseInnerReader().mjava","pathOld":"/dev/null","sourceNew":"  public void testCloseInnerReader() throws Exception {\n    Directory dir1 = getDir1(random());\n    AtomicReader ir1 = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir1));\n    \n    // with overlapping\n    ParallelAtomicReader pr = new ParallelAtomicReader(true,\n     new AtomicReader[] {ir1},\n     new AtomicReader[] {ir1});\n\n    ir1.close();\n    \n    try {\n      pr.document(0);\n      fail(\"ParallelAtomicReader should be already closed because inner reader was closed!\");\n    } catch (AlreadyClosedException e) {\n      // pass\n    }\n    \n    // noop:\n    pr.close();\n    dir1.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestParallelAtomicReader#testCloseInnerReader().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestParallelAtomicReader#testCloseInnerReader().mjava","sourceNew":"  public void testCloseInnerReader() throws Exception {\n    Directory dir1 = getDir1(random());\n    LeafReader ir1 = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir1));\n    \n    // with overlapping\n    ParallelLeafReader pr = new ParallelLeafReader(true,\n     new LeafReader[] {ir1},\n     new LeafReader[] {ir1});\n\n    ir1.close();\n    \n    try {\n      pr.document(0);\n      fail(\"ParallelAtomicReader should be already closed because inner reader was closed!\");\n    } catch (AlreadyClosedException e) {\n      // pass\n    }\n    \n    // noop:\n    pr.close();\n    dir1.close();\n  }\n\n","sourceOld":"  public void testCloseInnerReader() throws Exception {\n    Directory dir1 = getDir1(random());\n    AtomicReader ir1 = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir1));\n    \n    // with overlapping\n    ParallelAtomicReader pr = new ParallelAtomicReader(true,\n     new AtomicReader[] {ir1},\n     new AtomicReader[] {ir1});\n\n    ir1.close();\n    \n    try {\n      pr.document(0);\n      fail(\"ParallelAtomicReader should be already closed because inner reader was closed!\");\n    } catch (AlreadyClosedException e) {\n      // pass\n    }\n    \n    // noop:\n    pr.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c9644a32526f2e2ae87543b00e8be543aa25f29c","date":1411548458,"type":5,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestParallelLeafReader#testCloseInnerReader().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestParallelAtomicReader#testCloseInnerReader().mjava","sourceNew":"  public void testCloseInnerReader() throws Exception {\n    Directory dir1 = getDir1(random());\n    LeafReader ir1 = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir1));\n    \n    // with overlapping\n    ParallelLeafReader pr = new ParallelLeafReader(true,\n     new LeafReader[] {ir1},\n     new LeafReader[] {ir1});\n\n    ir1.close();\n    \n    try {\n      pr.document(0);\n      fail(\"ParallelLeafReader should be already closed because inner reader was closed!\");\n    } catch (AlreadyClosedException e) {\n      // pass\n    }\n    \n    // noop:\n    pr.close();\n    dir1.close();\n  }\n\n","sourceOld":"  public void testCloseInnerReader() throws Exception {\n    Directory dir1 = getDir1(random());\n    LeafReader ir1 = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir1));\n    \n    // with overlapping\n    ParallelLeafReader pr = new ParallelLeafReader(true,\n     new LeafReader[] {ir1},\n     new LeafReader[] {ir1});\n\n    ir1.close();\n    \n    try {\n      pr.document(0);\n      fail(\"ParallelAtomicReader should be already closed because inner reader was closed!\");\n    } catch (AlreadyClosedException e) {\n      // pass\n    }\n    \n    // noop:\n    pr.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"48180ea0d6210cab36e06798b916a39e0607713b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c9644a32526f2e2ae87543b00e8be543aa25f29c":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["48180ea0d6210cab36e06798b916a39e0607713b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9644a32526f2e2ae87543b00e8be543aa25f29c"]},"commit2Childs":{"48180ea0d6210cab36e06798b916a39e0607713b":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9644a32526f2e2ae87543b00e8be543aa25f29c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["48180ea0d6210cab36e06798b916a39e0607713b"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["c9644a32526f2e2ae87543b00e8be543aa25f29c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}