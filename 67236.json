{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamExpressionParser#stripComments(String).mjava","commits":[{"id":"cc9c0610e23e43d2705309634799dddc2b60f74a","date":1506648973,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamExpressionParser#stripComments(String).mjava","pathOld":"/dev/null","sourceNew":"  private static String stripComments(String clause) throws RuntimeException {\n    StringBuilder builder = new StringBuilder();\n    BufferedReader reader = null;\n\n    try {\n      reader = new BufferedReader(new StringReader(clause));\n      String line = null;\n      while ((line = reader.readLine()) != null) {\n        if(line.trim().startsWith(\"#\")) {\n          continue;\n        } else {\n          builder.append(line+'\\n');\n        }\n      }\n    }catch(Exception e) {\n      throw new RuntimeException(e);\n    } finally{\n      try {\n        reader.close();\n      } catch (Exception e) {}\n    }\n\n    return builder.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["a0370d6fb5289875090a50a9d0887ee584fed440"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6240b74b884c5587f2a4062dd27d6c32bf228889","date":1507037235,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamExpressionParser#stripComments(String).mjava","pathOld":"/dev/null","sourceNew":"  private static String stripComments(String clause) throws RuntimeException {\n    StringBuilder builder = new StringBuilder();\n    BufferedReader reader = null;\n\n    try {\n      reader = new BufferedReader(new StringReader(clause));\n      String line = null;\n      while ((line = reader.readLine()) != null) {\n        if(line.trim().startsWith(\"#\")) {\n          continue;\n        } else {\n          builder.append(line+'\\n');\n        }\n      }\n    }catch(Exception e) {\n      throw new RuntimeException(e);\n    } finally{\n      try {\n        reader.close();\n      } catch (Exception e) {}\n    }\n\n    return builder.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0370d6fb5289875090a50a9d0887ee584fed440","date":1552401990,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamExpressionParser#stripComments(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamExpressionParser#stripComments(String).mjava","sourceNew":"  static String stripComments(String clause) throws RuntimeException {\n    StringBuilder builder = new StringBuilder();\n\n    try (BufferedReader reader = new BufferedReader(new StringReader(clause))) {\n      String line;\n      while ((line = reader.readLine()) != null) {\n        if (!line.trim().startsWith(\"#\")) {\n          builder.append(line).append('\\n');\n        }\n      }\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n\n    return builder.toString();\n  }\n\n","sourceOld":"  private static String stripComments(String clause) throws RuntimeException {\n    StringBuilder builder = new StringBuilder();\n    BufferedReader reader = null;\n\n    try {\n      reader = new BufferedReader(new StringReader(clause));\n      String line = null;\n      while ((line = reader.readLine()) != null) {\n        if(line.trim().startsWith(\"#\")) {\n          continue;\n        } else {\n          builder.append(line+'\\n');\n        }\n      }\n    }catch(Exception e) {\n      throw new RuntimeException(e);\n    } finally{\n      try {\n        reader.close();\n      } catch (Exception e) {}\n    }\n\n    return builder.toString();\n  }\n\n","bugFix":["cc9c0610e23e43d2705309634799dddc2b60f74a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cc9c0610e23e43d2705309634799dddc2b60f74a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6240b74b884c5587f2a4062dd27d6c32bf228889":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cc9c0610e23e43d2705309634799dddc2b60f74a"],"a0370d6fb5289875090a50a9d0887ee584fed440":["cc9c0610e23e43d2705309634799dddc2b60f74a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0370d6fb5289875090a50a9d0887ee584fed440"]},"commit2Childs":{"cc9c0610e23e43d2705309634799dddc2b60f74a":["6240b74b884c5587f2a4062dd27d6c32bf228889","a0370d6fb5289875090a50a9d0887ee584fed440"],"6240b74b884c5587f2a4062dd27d6c32bf228889":[],"a0370d6fb5289875090a50a9d0887ee584fed440":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cc9c0610e23e43d2705309634799dddc2b60f74a","6240b74b884c5587f2a4062dd27d6c32bf228889"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6240b74b884c5587f2a4062dd27d6c32bf228889","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}