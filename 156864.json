{"path":"lucene/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#readTop50KWiki().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#readTop50KWiki().mjava","pathOld":"modules/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#readTop50KWiki().mjava","sourceNew":"  /**\n   * Collect the multilingual input for benchmarks/ tests.\n   */\n  public static List<TermFreq> readTop50KWiki() throws Exception {\n    List<TermFreq> input = new ArrayList<TermFreq>();\n    URL resource = LookupBenchmarkTest.class.getResource(\"Top50KWiki.utf8\");\n    assert resource != null : \"Resource missing: Top50KWiki.utf8\";\n\n    String line = null;\n    BufferedReader br = new BufferedReader(new InputStreamReader(resource.openStream(), UTF_8));\n    while ((line = br.readLine()) != null) {\n      int tab = line.indexOf('|');\n      assertTrue(\"No | separator?: \" + line, tab >= 0);\n      int weight = Integer.parseInt(line.substring(tab + 1));\n      String key = line.substring(0, tab);\n      input.add(new TermFreq(key, weight));\n    }\n    br.close();\n    return input;\n  }\n\n","sourceOld":"  /**\n   * Collect the multilingual input for benchmarks/ tests.\n   */\n  public static List<TermFreq> readTop50KWiki() throws Exception {\n    List<TermFreq> input = new ArrayList<TermFreq>();\n    URL resource = LookupBenchmarkTest.class.getResource(\"Top50KWiki.utf8\");\n    assert resource != null : \"Resource missing: Top50KWiki.utf8\";\n\n    String line = null;\n    BufferedReader br = new BufferedReader(new InputStreamReader(resource.openStream(), UTF_8));\n    while ((line = br.readLine()) != null) {\n      int tab = line.indexOf('|');\n      assertTrue(\"No | separator?: \" + line, tab >= 0);\n      int weight = Integer.parseInt(line.substring(tab + 1));\n      String key = line.substring(0, tab);\n      input.add(new TermFreq(key, weight));\n    }\n    br.close();\n    return input;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ada2f7352a7f964fe49bccd13227c4ec38563d39","date":1381659982,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#readTop50KWiki().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#readTop50KWiki().mjava","sourceNew":"  /**\n   * Collect the multilingual input for benchmarks/ tests.\n   */\n  public static List<TermFreqPayload> readTop50KWiki() throws Exception {\n    List<TermFreqPayload> input = new ArrayList<TermFreqPayload>();\n    URL resource = LookupBenchmarkTest.class.getResource(\"Top50KWiki.utf8\");\n    assert resource != null : \"Resource missing: Top50KWiki.utf8\";\n\n    String line = null;\n    BufferedReader br = new BufferedReader(new InputStreamReader(resource.openStream(), UTF_8));\n    while ((line = br.readLine()) != null) {\n      int tab = line.indexOf('|');\n      assertTrue(\"No | separator?: \" + line, tab >= 0);\n      int weight = Integer.parseInt(line.substring(tab + 1));\n      String key = line.substring(0, tab);\n      input.add(new TermFreqPayload(key, weight));\n    }\n    br.close();\n    return input;\n  }\n\n","sourceOld":"  /**\n   * Collect the multilingual input for benchmarks/ tests.\n   */\n  public static List<TermFreq> readTop50KWiki() throws Exception {\n    List<TermFreq> input = new ArrayList<TermFreq>();\n    URL resource = LookupBenchmarkTest.class.getResource(\"Top50KWiki.utf8\");\n    assert resource != null : \"Resource missing: Top50KWiki.utf8\";\n\n    String line = null;\n    BufferedReader br = new BufferedReader(new InputStreamReader(resource.openStream(), UTF_8));\n    while ((line = br.readLine()) != null) {\n      int tab = line.indexOf('|');\n      assertTrue(\"No | separator?: \" + line, tab >= 0);\n      int weight = Integer.parseInt(line.substring(tab + 1));\n      String key = line.substring(0, tab);\n      input.add(new TermFreq(key, weight));\n    }\n    br.close();\n    return input;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41aee74b5f91a096e3fd950f4a336bc763f0e7a7","date":1381772070,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#readTop50KWiki().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#readTop50KWiki().mjava","sourceNew":"  /**\n   * Collect the multilingual input for benchmarks/ tests.\n   */\n  public static List<Input> readTop50KWiki() throws Exception {\n    List<Input> input = new ArrayList<Input>();\n    URL resource = LookupBenchmarkTest.class.getResource(\"Top50KWiki.utf8\");\n    assert resource != null : \"Resource missing: Top50KWiki.utf8\";\n\n    String line = null;\n    BufferedReader br = new BufferedReader(new InputStreamReader(resource.openStream(), UTF_8));\n    while ((line = br.readLine()) != null) {\n      int tab = line.indexOf('|');\n      assertTrue(\"No | separator?: \" + line, tab >= 0);\n      int weight = Integer.parseInt(line.substring(tab + 1));\n      String key = line.substring(0, tab);\n      input.add(new Input(key, weight));\n    }\n    br.close();\n    return input;\n  }\n\n","sourceOld":"  /**\n   * Collect the multilingual input for benchmarks/ tests.\n   */\n  public static List<TermFreqPayload> readTop50KWiki() throws Exception {\n    List<TermFreqPayload> input = new ArrayList<TermFreqPayload>();\n    URL resource = LookupBenchmarkTest.class.getResource(\"Top50KWiki.utf8\");\n    assert resource != null : \"Resource missing: Top50KWiki.utf8\";\n\n    String line = null;\n    BufferedReader br = new BufferedReader(new InputStreamReader(resource.openStream(), UTF_8));\n    while ((line = br.readLine()) != null) {\n      int tab = line.indexOf('|');\n      assertTrue(\"No | separator?: \" + line, tab >= 0);\n      int weight = Integer.parseInt(line.substring(tab + 1));\n      String key = line.substring(0, tab);\n      input.add(new TermFreqPayload(key, weight));\n    }\n    br.close();\n    return input;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#readTop50KWiki().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#readTop50KWiki().mjava","sourceNew":"  /**\n   * Collect the multilingual input for benchmarks/ tests.\n   */\n  public static List<Input> readTop50KWiki() throws Exception {\n    List<Input> input = new ArrayList<>();\n    URL resource = LookupBenchmarkTest.class.getResource(\"Top50KWiki.utf8\");\n    assert resource != null : \"Resource missing: Top50KWiki.utf8\";\n\n    String line = null;\n    BufferedReader br = new BufferedReader(new InputStreamReader(resource.openStream(), UTF_8));\n    while ((line = br.readLine()) != null) {\n      int tab = line.indexOf('|');\n      assertTrue(\"No | separator?: \" + line, tab >= 0);\n      int weight = Integer.parseInt(line.substring(tab + 1));\n      String key = line.substring(0, tab);\n      input.add(new Input(key, weight));\n    }\n    br.close();\n    return input;\n  }\n\n","sourceOld":"  /**\n   * Collect the multilingual input for benchmarks/ tests.\n   */\n  public static List<Input> readTop50KWiki() throws Exception {\n    List<Input> input = new ArrayList<Input>();\n    URL resource = LookupBenchmarkTest.class.getResource(\"Top50KWiki.utf8\");\n    assert resource != null : \"Resource missing: Top50KWiki.utf8\";\n\n    String line = null;\n    BufferedReader br = new BufferedReader(new InputStreamReader(resource.openStream(), UTF_8));\n    while ((line = br.readLine()) != null) {\n      int tab = line.indexOf('|');\n      assertTrue(\"No | separator?: \" + line, tab >= 0);\n      int weight = Integer.parseInt(line.substring(tab + 1));\n      String key = line.substring(0, tab);\n      input.add(new Input(key, weight));\n    }\n    br.close();\n    return input;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["41aee74b5f91a096e3fd950f4a336bc763f0e7a7"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"41aee74b5f91a096e3fd950f4a336bc763f0e7a7":["ada2f7352a7f964fe49bccd13227c4ec38563d39"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"ada2f7352a7f964fe49bccd13227c4ec38563d39":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ada2f7352a7f964fe49bccd13227c4ec38563d39"],"41aee74b5f91a096e3fd950f4a336bc763f0e7a7":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"ada2f7352a7f964fe49bccd13227c4ec38563d39":["41aee74b5f91a096e3fd950f4a336bc763f0e7a7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}