{"path":"lucene/core/src/test/org/apache/lucene/index/TestParallelLeafReader#testWithIndexSort2().mjava","commits":[{"id":"0576f276762c4cd4dbc7b33fada4a5d22abf2aa3","date":1462872662,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestParallelLeafReader#testWithIndexSort2().mjava","pathOld":"/dev/null","sourceNew":"  // ok to have one leaf w/ index sort and the other with no sort\n  public void testWithIndexSort2() throws Exception {\n    Directory dir1 = newDirectory();\n    IndexWriterConfig iwc1 = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc1.setIndexSort(new Sort(new SortField(\"foo\", SortField.Type.INT)));\n    IndexWriter w1 = new IndexWriter(dir1, iwc1);\n    w1.addDocument(new Document());\n    w1.commit();\n    w1.addDocument(new Document());\n    w1.forceMerge(1);\n    w1.close();\n    IndexReader r1 = DirectoryReader.open(dir1);\n\n    Directory dir2 = newDirectory();\n    IndexWriterConfig iwc2 = newIndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w2 = new IndexWriter(dir2, iwc2);\n    w2.addDocument(new Document());\n    w2.addDocument(new Document());\n    w2.close();\n\n    IndexReader r2 = DirectoryReader.open(dir2);\n    new ParallelLeafReader(false, getOnlyLeafReader(r1), getOnlyLeafReader(r2)).close();\n    new ParallelLeafReader(false, getOnlyLeafReader(r2), getOnlyLeafReader(r1)).close();\n    IOUtils.close(r1, dir1, r2, dir2);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d33e731a93d4b57e662ff094f64f94a745422d4","date":1463128289,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestParallelLeafReader#testWithIndexSort2().mjava","pathOld":"/dev/null","sourceNew":"  // ok to have one leaf w/ index sort and the other with no sort\n  public void testWithIndexSort2() throws Exception {\n    Directory dir1 = newDirectory();\n    IndexWriterConfig iwc1 = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc1.setIndexSort(new Sort(new SortField(\"foo\", SortField.Type.INT)));\n    IndexWriter w1 = new IndexWriter(dir1, iwc1);\n    w1.addDocument(new Document());\n    w1.commit();\n    w1.addDocument(new Document());\n    w1.forceMerge(1);\n    w1.close();\n    IndexReader r1 = DirectoryReader.open(dir1);\n\n    Directory dir2 = newDirectory();\n    IndexWriterConfig iwc2 = newIndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w2 = new IndexWriter(dir2, iwc2);\n    w2.addDocument(new Document());\n    w2.addDocument(new Document());\n    w2.close();\n\n    IndexReader r2 = DirectoryReader.open(dir2);\n    new ParallelLeafReader(false, getOnlyLeafReader(r1), getOnlyLeafReader(r2)).close();\n    new ParallelLeafReader(false, getOnlyLeafReader(r2), getOnlyLeafReader(r1)).close();\n    IOUtils.close(r1, dir1, r2, dir2);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestParallelLeafReader#testWithIndexSort2().mjava","pathOld":"/dev/null","sourceNew":"  // ok to have one leaf w/ index sort and the other with no sort\n  public void testWithIndexSort2() throws Exception {\n    Directory dir1 = newDirectory();\n    IndexWriterConfig iwc1 = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc1.setIndexSort(new Sort(new SortField(\"foo\", SortField.Type.INT)));\n    IndexWriter w1 = new IndexWriter(dir1, iwc1);\n    w1.addDocument(new Document());\n    w1.commit();\n    w1.addDocument(new Document());\n    w1.forceMerge(1);\n    w1.close();\n    IndexReader r1 = DirectoryReader.open(dir1);\n\n    Directory dir2 = newDirectory();\n    IndexWriterConfig iwc2 = newIndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w2 = new IndexWriter(dir2, iwc2);\n    w2.addDocument(new Document());\n    w2.addDocument(new Document());\n    w2.close();\n\n    IndexReader r2 = DirectoryReader.open(dir2);\n    new ParallelLeafReader(false, getOnlyLeafReader(r1), getOnlyLeafReader(r2)).close();\n    new ParallelLeafReader(false, getOnlyLeafReader(r2), getOnlyLeafReader(r1)).close();\n    IOUtils.close(r1, dir1, r2, dir2);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestParallelLeafReader#testWithIndexSort2().mjava","pathOld":"/dev/null","sourceNew":"  // ok to have one leaf w/ index sort and the other with no sort\n  public void testWithIndexSort2() throws Exception {\n    Directory dir1 = newDirectory();\n    IndexWriterConfig iwc1 = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc1.setIndexSort(new Sort(new SortField(\"foo\", SortField.Type.INT)));\n    IndexWriter w1 = new IndexWriter(dir1, iwc1);\n    w1.addDocument(new Document());\n    w1.commit();\n    w1.addDocument(new Document());\n    w1.forceMerge(1);\n    w1.close();\n    IndexReader r1 = DirectoryReader.open(dir1);\n\n    Directory dir2 = newDirectory();\n    IndexWriterConfig iwc2 = newIndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w2 = new IndexWriter(dir2, iwc2);\n    w2.addDocument(new Document());\n    w2.addDocument(new Document());\n    w2.close();\n\n    IndexReader r2 = DirectoryReader.open(dir2);\n    new ParallelLeafReader(false, getOnlyLeafReader(r1), getOnlyLeafReader(r2)).close();\n    new ParallelLeafReader(false, getOnlyLeafReader(r2), getOnlyLeafReader(r1)).close();\n    IOUtils.close(r1, dir1, r2, dir2);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestParallelLeafReader#testWithIndexSort2().mjava","pathOld":"/dev/null","sourceNew":"  // ok to have one leaf w/ index sort and the other with no sort\n  public void testWithIndexSort2() throws Exception {\n    Directory dir1 = newDirectory();\n    IndexWriterConfig iwc1 = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc1.setIndexSort(new Sort(new SortField(\"foo\", SortField.Type.INT)));\n    IndexWriter w1 = new IndexWriter(dir1, iwc1);\n    w1.addDocument(new Document());\n    w1.commit();\n    w1.addDocument(new Document());\n    w1.forceMerge(1);\n    w1.close();\n    IndexReader r1 = DirectoryReader.open(dir1);\n\n    Directory dir2 = newDirectory();\n    IndexWriterConfig iwc2 = newIndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w2 = new IndexWriter(dir2, iwc2);\n    w2.addDocument(new Document());\n    w2.addDocument(new Document());\n    w2.close();\n\n    IndexReader r2 = DirectoryReader.open(dir2);\n    new ParallelLeafReader(false, getOnlyLeafReader(r1), getOnlyLeafReader(r2)).close();\n    new ParallelLeafReader(false, getOnlyLeafReader(r2), getOnlyLeafReader(r1)).close();\n    IOUtils.close(r1, dir1, r2, dir2);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0ad30c6a479e764150a3316e57263319775f1df2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3d33e731a93d4b57e662ff094f64f94a745422d4"],"0576f276762c4cd4dbc7b33fada4a5d22abf2aa3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3d33e731a93d4b57e662ff094f64f94a745422d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0576f276762c4cd4dbc7b33fada4a5d22abf2aa3"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0ad30c6a479e764150a3316e57263319775f1df2"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0ad30c6a479e764150a3316e57263319775f1df2","0576f276762c4cd4dbc7b33fada4a5d22abf2aa3","3d33e731a93d4b57e662ff094f64f94a745422d4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"0576f276762c4cd4dbc7b33fada4a5d22abf2aa3":["3d33e731a93d4b57e662ff094f64f94a745422d4"],"3d33e731a93d4b57e662ff094f64f94a745422d4":["0ad30c6a479e764150a3316e57263319775f1df2"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}