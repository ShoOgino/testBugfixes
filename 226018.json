{"path":"solr/core/src/java/org/apache/solr/handler/StreamHandler#handleAdmin(SolrQueryRequest,SolrQueryResponse,SolrParams).mjava","commits":[{"id":"e81698e1493f01874d99b769bc4d9fc9f07555d6","date":1453489635,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/StreamHandler#handleAdmin(SolrQueryRequest,SolrQueryResponse,SolrParams).mjava","pathOld":"/dev/null","sourceNew":"  private void handleAdmin(SolrQueryRequest req, SolrQueryResponse rsp, SolrParams params) {\n    String action = params.get(\"action\");\n    if(\"stop\".equalsIgnoreCase(action)) {\n      String id = params.get(\"id\");\n      DaemonStream d = daemons.get(id);\n      if(d != null) {\n        d.close();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" stopped on \" + coreName));\n      } else {\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" not found on \" + coreName));\n      }\n    } else if(\"start\".equalsIgnoreCase(action)) {\n      String id = params.get(\"id\");\n      DaemonStream d = daemons.get(id);\n      d.open();\n      rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" started on \" + coreName));\n    } else if(\"list\".equalsIgnoreCase(action)) {\n      Collection<DaemonStream> vals = daemons.values();\n      rsp.add(\"result-set\", new DaemonCollectionStream(vals));\n    } else if(\"kill\".equalsIgnoreCase(action)) {\n      String id = params.get(\"id\");\n      DaemonStream d = daemons.remove(id);\n      if (d != null) {\n        d.close();\n      }\n      rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" killed on \" + coreName));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d5fc8ecbf23873760f4072d6643a3d2e97597030"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6d2dadc1f5ca8703d8659f4964961f9967935d75","date":1490231750,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/StreamHandler#handleAdmin(SolrQueryRequest,SolrQueryResponse,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/StreamHandler#handleAdmin(SolrQueryRequest,SolrQueryResponse,SolrParams).mjava","sourceNew":"  private void handleAdmin(SolrQueryRequest req, SolrQueryResponse rsp, SolrParams params) {\n    String action = params.get(\"action\");\n    if(\"stop\".equalsIgnoreCase(action)) {\n      String id = params.get(ID);\n      DaemonStream d = daemons.get(id);\n      if(d != null) {\n        d.close();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" stopped on \" + coreName));\n      } else {\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" not found on \" + coreName));\n      }\n    } else {\n      if (\"start\".equalsIgnoreCase(action)) {\n        String id = params.get(ID);\n        DaemonStream d = daemons.get(id);\n        d.open();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" started on \" + coreName));\n      } else if (\"list\".equalsIgnoreCase(action)) {\n        Collection<DaemonStream> vals = daemons.values();\n        rsp.add(\"result-set\", new DaemonCollectionStream(vals));\n      } else if (\"kill\".equalsIgnoreCase(action)) {\n        String id = params.get(\"id\");\n        DaemonStream d = daemons.remove(id);\n        if (d != null) {\n          d.close();\n        }\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" killed on \" + coreName));\n      }\n    }\n  }\n\n","sourceOld":"  private void handleAdmin(SolrQueryRequest req, SolrQueryResponse rsp, SolrParams params) {\n    String action = params.get(\"action\");\n    if(\"stop\".equalsIgnoreCase(action)) {\n      String id = params.get(\"id\");\n      DaemonStream d = daemons.get(id);\n      if(d != null) {\n        d.close();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" stopped on \" + coreName));\n      } else {\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" not found on \" + coreName));\n      }\n    } else if(\"start\".equalsIgnoreCase(action)) {\n      String id = params.get(\"id\");\n      DaemonStream d = daemons.get(id);\n      d.open();\n      rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" started on \" + coreName));\n    } else if(\"list\".equalsIgnoreCase(action)) {\n      Collection<DaemonStream> vals = daemons.values();\n      rsp.add(\"result-set\", new DaemonCollectionStream(vals));\n    } else if(\"kill\".equalsIgnoreCase(action)) {\n      String id = params.get(\"id\");\n      DaemonStream d = daemons.remove(id);\n      if (d != null) {\n        d.close();\n      }\n      rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" killed on \" + coreName));\n    }\n  }\n\n","bugFix":null,"bugIntro":["d5fc8ecbf23873760f4072d6643a3d2e97597030"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e5fa6615014cd2288fe930f8c8bb726f9504961d","date":1490280013,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/StreamHandler#handleAdmin(SolrQueryRequest,SolrQueryResponse,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/StreamHandler#handleAdmin(SolrQueryRequest,SolrQueryResponse,SolrParams).mjava","sourceNew":"  private void handleAdmin(SolrQueryRequest req, SolrQueryResponse rsp, SolrParams params) {\n    String action = params.get(\"action\");\n    if(\"stop\".equalsIgnoreCase(action)) {\n      String id = params.get(ID);\n      DaemonStream d = daemons.get(id);\n      if(d != null) {\n        d.close();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" stopped on \" + coreName));\n      } else {\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" not found on \" + coreName));\n      }\n    } else {\n      if (\"start\".equalsIgnoreCase(action)) {\n        String id = params.get(ID);\n        DaemonStream d = daemons.get(id);\n        d.open();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" started on \" + coreName));\n      } else if (\"list\".equalsIgnoreCase(action)) {\n        Collection<DaemonStream> vals = daemons.values();\n        rsp.add(\"result-set\", new DaemonCollectionStream(vals));\n      } else if (\"kill\".equalsIgnoreCase(action)) {\n        String id = params.get(\"id\");\n        DaemonStream d = daemons.remove(id);\n        if (d != null) {\n          d.close();\n        }\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" killed on \" + coreName));\n      }\n    }\n  }\n\n","sourceOld":"  private void handleAdmin(SolrQueryRequest req, SolrQueryResponse rsp, SolrParams params) {\n    String action = params.get(\"action\");\n    if(\"stop\".equalsIgnoreCase(action)) {\n      String id = params.get(\"id\");\n      DaemonStream d = daemons.get(id);\n      if(d != null) {\n        d.close();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" stopped on \" + coreName));\n      } else {\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" not found on \" + coreName));\n      }\n    } else if(\"start\".equalsIgnoreCase(action)) {\n      String id = params.get(\"id\");\n      DaemonStream d = daemons.get(id);\n      d.open();\n      rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" started on \" + coreName));\n    } else if(\"list\".equalsIgnoreCase(action)) {\n      Collection<DaemonStream> vals = daemons.values();\n      rsp.add(\"result-set\", new DaemonCollectionStream(vals));\n    } else if(\"kill\".equalsIgnoreCase(action)) {\n      String id = params.get(\"id\");\n      DaemonStream d = daemons.remove(id);\n      if (d != null) {\n        d.close();\n      }\n      rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" killed on \" + coreName));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e2ca4206e5497c29b07a997ea7fc47d3bac0a352","date":1497801058,"type":3,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/StreamHandler#handleAdmin(SolrQueryRequest,SolrQueryResponse,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/StreamHandler#handleAdmin(SolrQueryRequest,SolrQueryResponse,SolrParams).mjava","sourceNew":"  private void handleAdmin(SolrQueryRequest req, SolrQueryResponse rsp, SolrParams params) {\n    String action = params.get(\"action\");\n    if (\"stop\".equalsIgnoreCase(action)) {\n      String id = params.get(ID);\n      DaemonStream d = daemons.get(id);\n      if (d != null) {\n        d.close();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" stopped on \" + coreName));\n      } else {\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" not found on \" + coreName));\n      }\n    } else {\n      if (\"start\".equalsIgnoreCase(action)) {\n        String id = params.get(ID);\n        DaemonStream d = daemons.get(id);\n        d.open();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" started on \" + coreName));\n      } else if (\"list\".equalsIgnoreCase(action)) {\n        Collection<DaemonStream> vals = daemons.values();\n        rsp.add(\"result-set\", new DaemonCollectionStream(vals));\n      } else if (\"kill\".equalsIgnoreCase(action)) {\n        String id = params.get(\"id\");\n        DaemonStream d = daemons.remove(id);\n        if (d != null) {\n          d.close();\n        }\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" killed on \" + coreName));\n      }\n    }\n  }\n\n","sourceOld":"  private void handleAdmin(SolrQueryRequest req, SolrQueryResponse rsp, SolrParams params) {\n    String action = params.get(\"action\");\n    if(\"stop\".equalsIgnoreCase(action)) {\n      String id = params.get(ID);\n      DaemonStream d = daemons.get(id);\n      if(d != null) {\n        d.close();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" stopped on \" + coreName));\n      } else {\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" not found on \" + coreName));\n      }\n    } else {\n      if (\"start\".equalsIgnoreCase(action)) {\n        String id = params.get(ID);\n        DaemonStream d = daemons.get(id);\n        d.open();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" started on \" + coreName));\n      } else if (\"list\".equalsIgnoreCase(action)) {\n        Collection<DaemonStream> vals = daemons.values();\n        rsp.add(\"result-set\", new DaemonCollectionStream(vals));\n      } else if (\"kill\".equalsIgnoreCase(action)) {\n        String id = params.get(\"id\");\n        DaemonStream d = daemons.remove(id);\n        if (d != null) {\n          d.close();\n        }\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" killed on \" + coreName));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["d5fc8ecbf23873760f4072d6643a3d2e97597030"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/StreamHandler#handleAdmin(SolrQueryRequest,SolrQueryResponse,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/StreamHandler#handleAdmin(SolrQueryRequest,SolrQueryResponse,SolrParams).mjava","sourceNew":"  private void handleAdmin(SolrQueryRequest req, SolrQueryResponse rsp, SolrParams params) {\n    String action = params.get(\"action\");\n    if (\"stop\".equalsIgnoreCase(action)) {\n      String id = params.get(ID);\n      DaemonStream d = daemons.get(id);\n      if (d != null) {\n        d.close();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" stopped on \" + coreName));\n      } else {\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" not found on \" + coreName));\n      }\n    } else {\n      if (\"start\".equalsIgnoreCase(action)) {\n        String id = params.get(ID);\n        DaemonStream d = daemons.get(id);\n        d.open();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" started on \" + coreName));\n      } else if (\"list\".equalsIgnoreCase(action)) {\n        Collection<DaemonStream> vals = daemons.values();\n        rsp.add(\"result-set\", new DaemonCollectionStream(vals));\n      } else if (\"kill\".equalsIgnoreCase(action)) {\n        String id = params.get(\"id\");\n        DaemonStream d = daemons.remove(id);\n        if (d != null) {\n          d.close();\n        }\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" killed on \" + coreName));\n      }\n    }\n  }\n\n","sourceOld":"  private void handleAdmin(SolrQueryRequest req, SolrQueryResponse rsp, SolrParams params) {\n    String action = params.get(\"action\");\n    if(\"stop\".equalsIgnoreCase(action)) {\n      String id = params.get(ID);\n      DaemonStream d = daemons.get(id);\n      if(d != null) {\n        d.close();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" stopped on \" + coreName));\n      } else {\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" not found on \" + coreName));\n      }\n    } else {\n      if (\"start\".equalsIgnoreCase(action)) {\n        String id = params.get(ID);\n        DaemonStream d = daemons.get(id);\n        d.open();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" started on \" + coreName));\n      } else if (\"list\".equalsIgnoreCase(action)) {\n        Collection<DaemonStream> vals = daemons.values();\n        rsp.add(\"result-set\", new DaemonCollectionStream(vals));\n      } else if (\"kill\".equalsIgnoreCase(action)) {\n        String id = params.get(\"id\");\n        DaemonStream d = daemons.remove(id);\n        if (d != null) {\n          d.close();\n        }\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" killed on \" + coreName));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/StreamHandler#handleAdmin(SolrQueryRequest,SolrQueryResponse,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/StreamHandler#handleAdmin(SolrQueryRequest,SolrQueryResponse,SolrParams).mjava","sourceNew":"  private void handleAdmin(SolrQueryRequest req, SolrQueryResponse rsp, SolrParams params) {\n    String action = params.get(\"action\");\n    if (\"stop\".equalsIgnoreCase(action)) {\n      String id = params.get(ID);\n      DaemonStream d = daemons.get(id);\n      if (d != null) {\n        d.close();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" stopped on \" + coreName));\n      } else {\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" not found on \" + coreName));\n      }\n    } else {\n      if (\"start\".equalsIgnoreCase(action)) {\n        String id = params.get(ID);\n        DaemonStream d = daemons.get(id);\n        d.open();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" started on \" + coreName));\n      } else if (\"list\".equalsIgnoreCase(action)) {\n        Collection<DaemonStream> vals = daemons.values();\n        rsp.add(\"result-set\", new DaemonCollectionStream(vals));\n      } else if (\"kill\".equalsIgnoreCase(action)) {\n        String id = params.get(\"id\");\n        DaemonStream d = daemons.remove(id);\n        if (d != null) {\n          d.close();\n        }\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" killed on \" + coreName));\n      }\n    }\n  }\n\n","sourceOld":"  private void handleAdmin(SolrQueryRequest req, SolrQueryResponse rsp, SolrParams params) {\n    String action = params.get(\"action\");\n    if(\"stop\".equalsIgnoreCase(action)) {\n      String id = params.get(ID);\n      DaemonStream d = daemons.get(id);\n      if(d != null) {\n        d.close();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" stopped on \" + coreName));\n      } else {\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" not found on \" + coreName));\n      }\n    } else {\n      if (\"start\".equalsIgnoreCase(action)) {\n        String id = params.get(ID);\n        DaemonStream d = daemons.get(id);\n        d.open();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" started on \" + coreName));\n      } else if (\"list\".equalsIgnoreCase(action)) {\n        Collection<DaemonStream> vals = daemons.values();\n        rsp.add(\"result-set\", new DaemonCollectionStream(vals));\n      } else if (\"kill\".equalsIgnoreCase(action)) {\n        String id = params.get(\"id\");\n        DaemonStream d = daemons.remove(id);\n        if (d != null) {\n          d.close();\n        }\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" killed on \" + coreName));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"dad6a48950aafc9c2f5dc54740f8c6ab81304203","date":1552999379,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/StreamHandler#handleAdmin(SolrQueryRequest,SolrQueryResponse,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/StreamHandler#handleAdmin(SolrQueryRequest,SolrQueryResponse,SolrParams).mjava","sourceNew":"  private void handleAdmin(SolrQueryRequest req, SolrQueryResponse rsp, SolrParams params) {\n    String action = params.get(\"action\");\n    if (\"stop\".equalsIgnoreCase(action)) {\n      String id = params.get(ID);\n      DaemonStream d = daemons.get(id);\n      if (d != null) {\n        d.close();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" stopped on \" + coreName));\n      } else {\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" not found on \" + coreName));\n      }\n    } else {\n      if (\"start\".equalsIgnoreCase(action)) {\n        String id = params.get(ID);\n        DaemonStream d = daemons.get(id);\n        d.open();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" started on \" + coreName));\n      } else if (\"list\".equalsIgnoreCase(action)) {\n        Collection<DaemonStream> vals = daemons.values();\n        rsp.add(\"result-set\", new DaemonCollectionStream(vals));\n      } else if (\"kill\".equalsIgnoreCase(action)) {\n        String id = params.get(\"id\");\n        DaemonStream d = daemons.remove(id);\n        if (d != null) {\n          d.close();\n          rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" killed on \" + coreName));\n        } else {\n          rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" not found on \" + coreName));\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void handleAdmin(SolrQueryRequest req, SolrQueryResponse rsp, SolrParams params) {\n    String action = params.get(\"action\");\n    if (\"stop\".equalsIgnoreCase(action)) {\n      String id = params.get(ID);\n      DaemonStream d = daemons.get(id);\n      if (d != null) {\n        d.close();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" stopped on \" + coreName));\n      } else {\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" not found on \" + coreName));\n      }\n    } else {\n      if (\"start\".equalsIgnoreCase(action)) {\n        String id = params.get(ID);\n        DaemonStream d = daemons.get(id);\n        d.open();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" started on \" + coreName));\n      } else if (\"list\".equalsIgnoreCase(action)) {\n        Collection<DaemonStream> vals = daemons.values();\n        rsp.add(\"result-set\", new DaemonCollectionStream(vals));\n      } else if (\"kill\".equalsIgnoreCase(action)) {\n        String id = params.get(\"id\");\n        DaemonStream d = daemons.remove(id);\n        if (d != null) {\n          d.close();\n        }\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" killed on \" + coreName));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["d5fc8ecbf23873760f4072d6643a3d2e97597030"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d5fc8ecbf23873760f4072d6643a3d2e97597030","date":1555542126,"type":3,"author":"erick","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/StreamHandler#handleAdmin(SolrQueryRequest,SolrQueryResponse,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/StreamHandler#handleAdmin(SolrQueryRequest,SolrQueryResponse,SolrParams).mjava","sourceNew":"  private void handleAdmin(SolrQueryRequest req, SolrQueryResponse rsp, SolrParams params) {\n    String action = params.get(\"action\").toLowerCase(Locale.ROOT).trim();\n\n    if (\"list\".equals(action)) {\n      Collection<DaemonStream> vals = daemons.values();\n      rsp.add(\"result-set\", new DaemonCollectionStream(vals));\n      return;\n    }\n\n    String id = params.get(ID);\n    DaemonStream d = daemons.get(id);\n    if (d == null) {\n      rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" not found on \" + coreName));\n      return;\n    }\n\n    switch (action) {\n      case \"stop\":\n        d.close();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" stopped on \" + coreName));\n        break;\n\n      case \"start\":\n        try {\n          d.open();\n        } catch (IOException e) {\n          rsp.add(\"result-set\", new DaemonResponseStream(\"Daemon: \" + id + \" error: \" + e.getMessage()));\n        }\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" started on \" + coreName));\n        break;\n\n      case \"kill\":\n        daemons.remove(id);\n        d.close(); // we already found it in the daemons list, so we don't need to verify we removed it.\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" killed on \" + coreName));\n        break;\n\n       default:\n         rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" action '\"\n             + action + \"' not recognized on \" + coreName));\n         break;\n    }\n  }\n\n","sourceOld":"  private void handleAdmin(SolrQueryRequest req, SolrQueryResponse rsp, SolrParams params) {\n    String action = params.get(\"action\");\n    if (\"stop\".equalsIgnoreCase(action)) {\n      String id = params.get(ID);\n      DaemonStream d = daemons.get(id);\n      if (d != null) {\n        d.close();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" stopped on \" + coreName));\n      } else {\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" not found on \" + coreName));\n      }\n    } else {\n      if (\"start\".equalsIgnoreCase(action)) {\n        String id = params.get(ID);\n        DaemonStream d = daemons.get(id);\n        d.open();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" started on \" + coreName));\n      } else if (\"list\".equalsIgnoreCase(action)) {\n        Collection<DaemonStream> vals = daemons.values();\n        rsp.add(\"result-set\", new DaemonCollectionStream(vals));\n      } else if (\"kill\".equalsIgnoreCase(action)) {\n        String id = params.get(\"id\");\n        DaemonStream d = daemons.remove(id);\n        if (d != null) {\n          d.close();\n          rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" killed on \" + coreName));\n        } else {\n          rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" not found on \" + coreName));\n        }\n      }\n    }\n  }\n\n","bugFix":["e2ca4206e5497c29b07a997ea7fc47d3bac0a352","dad6a48950aafc9c2f5dc54740f8c6ab81304203","e81698e1493f01874d99b769bc4d9fc9f07555d6","6d2dadc1f5ca8703d8659f4964961f9967935d75"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60c716cf818aff6857d8490cd0fb8b5aa432408f","date":1577074826,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/StreamHandler#handleAdmin(SolrQueryRequest,SolrQueryResponse,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/StreamHandler#handleAdmin(SolrQueryRequest,SolrQueryResponse,SolrParams).mjava","sourceNew":"  private void handleAdmin(SolrQueryRequest req, SolrQueryResponse rsp, SolrParams params) {\n    String action = params.get(\"action\").toLowerCase(Locale.ROOT).trim();\n    if (\"plugins\".equals(action)) {\n      rsp.add(\"plugins\", (MapWriter) ew -> streamFactory.getFunctionNames().forEach((s, classSupplier) -> ew.putNoEx(s, classSupplier.get().getName())));\n      return;\n    }\n\n    if (\"list\".equals(action)) {\n      Collection<DaemonStream> vals = daemons.values();\n      rsp.add(\"result-set\", new DaemonCollectionStream(vals));\n      return;\n    }\n\n    String id = params.get(ID);\n    DaemonStream d = daemons.get(id);\n    if (d == null) {\n      rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" not found on \" + coreName));\n      return;\n    }\n\n    switch (action) {\n      case \"stop\":\n        d.close();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" stopped on \" + coreName));\n        break;\n\n      case \"start\":\n        try {\n          d.open();\n        } catch (IOException e) {\n          rsp.add(\"result-set\", new DaemonResponseStream(\"Daemon: \" + id + \" error: \" + e.getMessage()));\n        }\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" started on \" + coreName));\n        break;\n\n      case \"kill\":\n        daemons.remove(id);\n        d.close(); // we already found it in the daemons list, so we don't need to verify we removed it.\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" killed on \" + coreName));\n        break;\n\n      default:\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" action '\"\n            + action + \"' not recognized on \" + coreName));\n        break;\n    }\n  }\n\n","sourceOld":"  private void handleAdmin(SolrQueryRequest req, SolrQueryResponse rsp, SolrParams params) {\n    String action = params.get(\"action\").toLowerCase(Locale.ROOT).trim();\n\n    if (\"list\".equals(action)) {\n      Collection<DaemonStream> vals = daemons.values();\n      rsp.add(\"result-set\", new DaemonCollectionStream(vals));\n      return;\n    }\n\n    String id = params.get(ID);\n    DaemonStream d = daemons.get(id);\n    if (d == null) {\n      rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" not found on \" + coreName));\n      return;\n    }\n\n    switch (action) {\n      case \"stop\":\n        d.close();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" stopped on \" + coreName));\n        break;\n\n      case \"start\":\n        try {\n          d.open();\n        } catch (IOException e) {\n          rsp.add(\"result-set\", new DaemonResponseStream(\"Daemon: \" + id + \" error: \" + e.getMessage()));\n        }\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" started on \" + coreName));\n        break;\n\n      case \"kill\":\n        daemons.remove(id);\n        d.close(); // we already found it in the daemons list, so we don't need to verify we removed it.\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" killed on \" + coreName));\n        break;\n\n       default:\n         rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" action '\"\n             + action + \"' not recognized on \" + coreName));\n         break;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","date":1577276097,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/StreamHandler#handleAdmin(SolrQueryRequest,SolrQueryResponse,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/StreamHandler#handleAdmin(SolrQueryRequest,SolrQueryResponse,SolrParams).mjava","sourceNew":"  private void handleAdmin(SolrQueryRequest req, SolrQueryResponse rsp, SolrParams params) {\n    String action = params.get(\"action\").toLowerCase(Locale.ROOT).trim();\n    if (\"plugins\".equals(action)) {\n      rsp.add(\"plugins\", (MapWriter) ew -> streamFactory.getFunctionNames().forEach((s, classSupplier) -> ew.putNoEx(s, classSupplier.get().getName())));\n      return;\n    }\n\n    if (\"list\".equals(action)) {\n      Collection<DaemonStream> vals = daemons.values();\n      rsp.add(\"result-set\", new DaemonCollectionStream(vals));\n      return;\n    }\n\n    String id = params.get(ID);\n    DaemonStream d = daemons.get(id);\n    if (d == null) {\n      rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" not found on \" + coreName));\n      return;\n    }\n\n    switch (action) {\n      case \"stop\":\n        d.close();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" stopped on \" + coreName));\n        break;\n\n      case \"start\":\n        try {\n          d.open();\n        } catch (IOException e) {\n          rsp.add(\"result-set\", new DaemonResponseStream(\"Daemon: \" + id + \" error: \" + e.getMessage()));\n        }\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" started on \" + coreName));\n        break;\n\n      case \"kill\":\n        daemons.remove(id);\n        d.close(); // we already found it in the daemons list, so we don't need to verify we removed it.\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" killed on \" + coreName));\n        break;\n\n      default:\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" action '\"\n            + action + \"' not recognized on \" + coreName));\n        break;\n    }\n  }\n\n","sourceOld":"  private void handleAdmin(SolrQueryRequest req, SolrQueryResponse rsp, SolrParams params) {\n    String action = params.get(\"action\").toLowerCase(Locale.ROOT).trim();\n\n    if (\"list\".equals(action)) {\n      Collection<DaemonStream> vals = daemons.values();\n      rsp.add(\"result-set\", new DaemonCollectionStream(vals));\n      return;\n    }\n\n    String id = params.get(ID);\n    DaemonStream d = daemons.get(id);\n    if (d == null) {\n      rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" not found on \" + coreName));\n      return;\n    }\n\n    switch (action) {\n      case \"stop\":\n        d.close();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" stopped on \" + coreName));\n        break;\n\n      case \"start\":\n        try {\n          d.open();\n        } catch (IOException e) {\n          rsp.add(\"result-set\", new DaemonResponseStream(\"Daemon: \" + id + \" error: \" + e.getMessage()));\n        }\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" started on \" + coreName));\n        break;\n\n      case \"kill\":\n        daemons.remove(id);\n        d.close(); // we already found it in the daemons list, so we don't need to verify we removed it.\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" killed on \" + coreName));\n        break;\n\n       default:\n         rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" action '\"\n             + action + \"' not recognized on \" + coreName));\n         break;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d46fa75cfc7cd540107667512c745b836d3f4c9f","date":1585841895,"type":3,"author":"Eric Pugh","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/StreamHandler#handleAdmin(SolrQueryRequest,SolrQueryResponse,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/StreamHandler#handleAdmin(SolrQueryRequest,SolrQueryResponse,SolrParams).mjava","sourceNew":"  private void handleAdmin(SolrQueryRequest req, SolrQueryResponse rsp, SolrParams params) {\n    String action = params.get(\"action\").toLowerCase(Locale.ROOT).trim();\n    if (\"plugins\".equals(action)) {\n      rsp.add(\"plugins\", (MapWriter) ew -> streamFactory.getFunctionNames().forEach((s, classSupplier) -> ew.putNoEx(s, classSupplier.get().getName())));\n      return;\n    }\n\n    if (\"list\".equals(action)) {\n      Collection<DaemonStream> vals = daemons.values();\n      rsp.add(\"result-set\", new DaemonCollectionStream(vals));\n      return;\n    }\n\n    String id = params.get(ID);\n    DaemonStream d = daemons.get(id);\n    if (d == null) {\n      rsp.add(\"result-set\", new DaemonResponseStream(\"Daemon:\" + id + \" not found on \" + coreName));\n      return;\n    }\n\n    switch (action) {\n      case \"stop\":\n        d.close();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Daemon:\" + id + \" stopped on \" + coreName));\n        break;\n\n      case \"start\":\n        try {\n          d.open();\n        } catch (IOException e) {\n          rsp.add(\"result-set\", new DaemonResponseStream(\"Daemon: \" + id + \" error: \" + e.getMessage()));\n        }\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Daemon:\" + id + \" started on \" + coreName));\n        break;\n\n      case \"kill\":\n        daemons.remove(id);\n        d.close(); // we already found it in the daemons list, so we don't need to verify we removed it.\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Daemon:\" + id + \" killed on \" + coreName));\n        break;\n\n      default:\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Daemon:\" + id + \" action '\"\n            + action + \"' not recognized on \" + coreName));\n        break;\n    }\n  }\n\n","sourceOld":"  private void handleAdmin(SolrQueryRequest req, SolrQueryResponse rsp, SolrParams params) {\n    String action = params.get(\"action\").toLowerCase(Locale.ROOT).trim();\n    if (\"plugins\".equals(action)) {\n      rsp.add(\"plugins\", (MapWriter) ew -> streamFactory.getFunctionNames().forEach((s, classSupplier) -> ew.putNoEx(s, classSupplier.get().getName())));\n      return;\n    }\n\n    if (\"list\".equals(action)) {\n      Collection<DaemonStream> vals = daemons.values();\n      rsp.add(\"result-set\", new DaemonCollectionStream(vals));\n      return;\n    }\n\n    String id = params.get(ID);\n    DaemonStream d = daemons.get(id);\n    if (d == null) {\n      rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" not found on \" + coreName));\n      return;\n    }\n\n    switch (action) {\n      case \"stop\":\n        d.close();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" stopped on \" + coreName));\n        break;\n\n      case \"start\":\n        try {\n          d.open();\n        } catch (IOException e) {\n          rsp.add(\"result-set\", new DaemonResponseStream(\"Daemon: \" + id + \" error: \" + e.getMessage()));\n        }\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" started on \" + coreName));\n        break;\n\n      case \"kill\":\n        daemons.remove(id);\n        d.close(); // we already found it in the daemons list, so we don't need to verify we removed it.\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" killed on \" + coreName));\n        break;\n\n      default:\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Deamon:\" + id + \" action '\"\n            + action + \"' not recognized on \" + coreName));\n        break;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"804a8d5358fe7b7563b85ee7838714d720b89272","date":1591624987,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/StreamHandler#handleAdmin(SolrQueryRequest,SolrQueryResponse,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/StreamHandler#handleAdmin(SolrQueryRequest,SolrQueryResponse,SolrParams).mjava","sourceNew":"  private void handleAdmin(SolrQueryRequest req, SolrQueryResponse rsp, SolrParams params) {\n    String action = params.get(\"action\").toLowerCase(Locale.ROOT).trim();\n    if (\"plugins\".equals(action)) {\n      rsp.add(\"plugins\", (MapWriter) ew -> streamFactory.getFunctionNames().forEach((s, classSupplier) -> ew.putNoEx(s, classSupplier.get().getName())));\n      return;\n    }\n\n    if (\"list\".equals(action)) {\n      Collection<DaemonStream> vals = daemons.values();\n      rsp.add(StreamParams.RESULT_SET, new DaemonCollectionStream(vals));\n      return;\n    }\n\n    String id = params.get(ID);\n    DaemonStream d = daemons.get(id);\n    if (d == null) {\n      rsp.add(StreamParams.RESULT_SET, new DaemonResponseStream(\"Daemon:\" + id + \" not found on \" + coreName));\n      return;\n    }\n\n    switch (action) {\n      case \"stop\":\n        d.close();\n        rsp.add(StreamParams.RESULT_SET, new DaemonResponseStream(\"Daemon:\" + id + \" stopped on \" + coreName));\n        break;\n\n      case \"start\":\n        try {\n          d.open();\n        } catch (IOException e) {\n          rsp.add(StreamParams.RESULT_SET, new DaemonResponseStream(\"Daemon: \" + id + \" error: \" + e.getMessage()));\n        }\n        rsp.add(StreamParams.RESULT_SET, new DaemonResponseStream(\"Daemon:\" + id + \" started on \" + coreName));\n        break;\n\n      case \"kill\":\n        daemons.remove(id);\n        d.close(); // we already found it in the daemons list, so we don't need to verify we removed it.\n        rsp.add(StreamParams.RESULT_SET, new DaemonResponseStream(\"Daemon:\" + id + \" killed on \" + coreName));\n        break;\n\n      default:\n        rsp.add(StreamParams.RESULT_SET, new DaemonResponseStream(\"Daemon:\" + id + \" action '\"\n            + action + \"' not recognized on \" + coreName));\n        break;\n    }\n  }\n\n","sourceOld":"  private void handleAdmin(SolrQueryRequest req, SolrQueryResponse rsp, SolrParams params) {\n    String action = params.get(\"action\").toLowerCase(Locale.ROOT).trim();\n    if (\"plugins\".equals(action)) {\n      rsp.add(\"plugins\", (MapWriter) ew -> streamFactory.getFunctionNames().forEach((s, classSupplier) -> ew.putNoEx(s, classSupplier.get().getName())));\n      return;\n    }\n\n    if (\"list\".equals(action)) {\n      Collection<DaemonStream> vals = daemons.values();\n      rsp.add(\"result-set\", new DaemonCollectionStream(vals));\n      return;\n    }\n\n    String id = params.get(ID);\n    DaemonStream d = daemons.get(id);\n    if (d == null) {\n      rsp.add(\"result-set\", new DaemonResponseStream(\"Daemon:\" + id + \" not found on \" + coreName));\n      return;\n    }\n\n    switch (action) {\n      case \"stop\":\n        d.close();\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Daemon:\" + id + \" stopped on \" + coreName));\n        break;\n\n      case \"start\":\n        try {\n          d.open();\n        } catch (IOException e) {\n          rsp.add(\"result-set\", new DaemonResponseStream(\"Daemon: \" + id + \" error: \" + e.getMessage()));\n        }\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Daemon:\" + id + \" started on \" + coreName));\n        break;\n\n      case \"kill\":\n        daemons.remove(id);\n        d.close(); // we already found it in the daemons list, so we don't need to verify we removed it.\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Daemon:\" + id + \" killed on \" + coreName));\n        break;\n\n      default:\n        rsp.add(\"result-set\", new DaemonResponseStream(\"Daemon:\" + id + \" action '\"\n            + action + \"' not recognized on \" + coreName));\n        break;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60c716cf818aff6857d8490cd0fb8b5aa432408f":["d5fc8ecbf23873760f4072d6643a3d2e97597030"],"dad6a48950aafc9c2f5dc54740f8c6ab81304203":["28288370235ed02234a64753cdbf0c6ec096304a"],"6d2dadc1f5ca8703d8659f4964961f9967935d75":["e81698e1493f01874d99b769bc4d9fc9f07555d6"],"e81698e1493f01874d99b769bc4d9fc9f07555d6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28288370235ed02234a64753cdbf0c6ec096304a":["6d2dadc1f5ca8703d8659f4964961f9967935d75","e2ca4206e5497c29b07a997ea7fc47d3bac0a352"],"e2ca4206e5497c29b07a997ea7fc47d3bac0a352":["6d2dadc1f5ca8703d8659f4964961f9967935d75"],"e5fa6615014cd2288fe930f8c8bb726f9504961d":["e81698e1493f01874d99b769bc4d9fc9f07555d6"],"96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a":["d5fc8ecbf23873760f4072d6643a3d2e97597030","60c716cf818aff6857d8490cd0fb8b5aa432408f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d5fc8ecbf23873760f4072d6643a3d2e97597030":["dad6a48950aafc9c2f5dc54740f8c6ab81304203"],"d46fa75cfc7cd540107667512c745b836d3f4c9f":["60c716cf818aff6857d8490cd0fb8b5aa432408f"],"804a8d5358fe7b7563b85ee7838714d720b89272":["d46fa75cfc7cd540107667512c745b836d3f4c9f"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["e5fa6615014cd2288fe930f8c8bb726f9504961d","e2ca4206e5497c29b07a997ea7fc47d3bac0a352"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["804a8d5358fe7b7563b85ee7838714d720b89272"]},"commit2Childs":{"60c716cf818aff6857d8490cd0fb8b5aa432408f":["96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","d46fa75cfc7cd540107667512c745b836d3f4c9f"],"dad6a48950aafc9c2f5dc54740f8c6ab81304203":["d5fc8ecbf23873760f4072d6643a3d2e97597030"],"6d2dadc1f5ca8703d8659f4964961f9967935d75":["28288370235ed02234a64753cdbf0c6ec096304a","e2ca4206e5497c29b07a997ea7fc47d3bac0a352"],"e81698e1493f01874d99b769bc4d9fc9f07555d6":["6d2dadc1f5ca8703d8659f4964961f9967935d75","e5fa6615014cd2288fe930f8c8bb726f9504961d"],"28288370235ed02234a64753cdbf0c6ec096304a":["dad6a48950aafc9c2f5dc54740f8c6ab81304203"],"e2ca4206e5497c29b07a997ea7fc47d3bac0a352":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"e5fa6615014cd2288fe930f8c8bb726f9504961d":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e81698e1493f01874d99b769bc4d9fc9f07555d6"],"d5fc8ecbf23873760f4072d6643a3d2e97597030":["60c716cf818aff6857d8490cd0fb8b5aa432408f","96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a"],"d46fa75cfc7cd540107667512c745b836d3f4c9f":["804a8d5358fe7b7563b85ee7838714d720b89272"],"804a8d5358fe7b7563b85ee7838714d720b89272":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}