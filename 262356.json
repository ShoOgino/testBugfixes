{"path":"lucene/core/src/java/org/apache/lucene/index/IndexDeletionPolicy#onInit(List[#-extends-IndexCommit]).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexDeletionPolicy#onInit(List[#-extends-IndexCommit]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexDeletionPolicy#onInit(List[#-extends-IndexCommit]).mjava","sourceNew":"  /**\n   * <p>This is called once when a writer is first\n   * instantiated to give the policy a chance to remove old\n   * commit points.</p>\n   * \n   * <p>The writer locates all index commits present in the \n   * index directory and calls this method.  The policy may \n   * choose to delete some of the commit points, doing so by\n   * calling method {@link IndexCommit#delete delete()} \n   * of {@link IndexCommit}.</p>\n   * \n   * <p><u>Note:</u> the last CommitPoint is the most recent one,\n   * i.e. the \"front index state\". Be careful not to delete it,\n   * unless you know for sure what you are doing, and unless \n   * you can afford to lose the index content while doing that. \n   *\n   * @param commits List of current \n   * {@link IndexCommit point-in-time commits},\n   *  sorted by age (the 0th one is the oldest commit).\n   */\n  public void onInit(List<? extends IndexCommit> commits) throws IOException;\n\n","sourceOld":"  /**\n   * <p>This is called once when a writer is first\n   * instantiated to give the policy a chance to remove old\n   * commit points.</p>\n   * \n   * <p>The writer locates all index commits present in the \n   * index directory and calls this method.  The policy may \n   * choose to delete some of the commit points, doing so by\n   * calling method {@link IndexCommit#delete delete()} \n   * of {@link IndexCommit}.</p>\n   * \n   * <p><u>Note:</u> the last CommitPoint is the most recent one,\n   * i.e. the \"front index state\". Be careful not to delete it,\n   * unless you know for sure what you are doing, and unless \n   * you can afford to lose the index content while doing that. \n   *\n   * @param commits List of current \n   * {@link IndexCommit point-in-time commits},\n   *  sorted by age (the 0th one is the oldest commit).\n   */\n  public void onInit(List<? extends IndexCommit> commits) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70790b11e79a0366b21b2cc5b82d03b6fddcef81","date":1364594206,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexDeletionPolicy#onInit(List[#-extends-IndexCommit]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexDeletionPolicy#onInit(List[#-extends-IndexCommit]).mjava","sourceNew":"  /**\n   * <p>This is called once when a writer is first\n   * instantiated to give the policy a chance to remove old\n   * commit points.</p>\n   * \n   * <p>The writer locates all index commits present in the \n   * index directory and calls this method.  The policy may \n   * choose to delete some of the commit points, doing so by\n   * calling method {@link IndexCommit#delete delete()} \n   * of {@link IndexCommit}.</p>\n   * \n   * <p><u>Note:</u> the last CommitPoint is the most recent one,\n   * i.e. the \"front index state\". Be careful not to delete it,\n   * unless you know for sure what you are doing, and unless \n   * you can afford to lose the index content while doing that. \n   *\n   * @param commits List of current \n   * {@link IndexCommit point-in-time commits},\n   *  sorted by age (the 0th one is the oldest commit).\n   */\n  public abstract void onInit(List<? extends IndexCommit> commits) throws IOException;\n\n","sourceOld":"  /**\n   * <p>This is called once when a writer is first\n   * instantiated to give the policy a chance to remove old\n   * commit points.</p>\n   * \n   * <p>The writer locates all index commits present in the \n   * index directory and calls this method.  The policy may \n   * choose to delete some of the commit points, doing so by\n   * calling method {@link IndexCommit#delete delete()} \n   * of {@link IndexCommit}.</p>\n   * \n   * <p><u>Note:</u> the last CommitPoint is the most recent one,\n   * i.e. the \"front index state\". Be careful not to delete it,\n   * unless you know for sure what you are doing, and unless \n   * you can afford to lose the index content while doing that. \n   *\n   * @param commits List of current \n   * {@link IndexCommit point-in-time commits},\n   *  sorted by age (the 0th one is the oldest commit).\n   */\n  public void onInit(List<? extends IndexCommit> commits) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a4726332a3fd0154e4b70b7cc64256b927a3178","date":1373988398,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexDeletionPolicy#onInit(List[#-extends-IndexCommit]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexDeletionPolicy#onInit(List[#-extends-IndexCommit]).mjava","sourceNew":"  /**\n   * <p>This is called once when a writer is first\n   * instantiated to give the policy a chance to remove old\n   * commit points.</p>\n   * \n   * <p>The writer locates all index commits present in the \n   * index directory and calls this method.  The policy may \n   * choose to delete some of the commit points, doing so by\n   * calling method {@link IndexCommit#delete delete()} \n   * of {@link IndexCommit}.</p>\n   * \n   * <p><u>Note:</u> the last CommitPoint is the most recent one,\n   * i.e. the \"front index state\". Be careful not to delete it,\n   * unless you know for sure what you are doing, and unless \n   * you can afford to lose the index content while doing that. \n   *\n   * @param commits List of current \n   * {@link IndexCommit point-in-time commits},\n   *  sorted by age (the 0th one is the oldest commit).\n   *  Note that for a new index this method is invoked with\n   *  an empty list.\n   */\n  public abstract void onInit(List<? extends IndexCommit> commits) throws IOException;\n\n","sourceOld":"  /**\n   * <p>This is called once when a writer is first\n   * instantiated to give the policy a chance to remove old\n   * commit points.</p>\n   * \n   * <p>The writer locates all index commits present in the \n   * index directory and calls this method.  The policy may \n   * choose to delete some of the commit points, doing so by\n   * calling method {@link IndexCommit#delete delete()} \n   * of {@link IndexCommit}.</p>\n   * \n   * <p><u>Note:</u> the last CommitPoint is the most recent one,\n   * i.e. the \"front index state\". Be careful not to delete it,\n   * unless you know for sure what you are doing, and unless \n   * you can afford to lose the index content while doing that. \n   *\n   * @param commits List of current \n   * {@link IndexCommit point-in-time commits},\n   *  sorted by age (the 0th one is the oldest commit).\n   */\n  public abstract void onInit(List<? extends IndexCommit> commits) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexDeletionPolicy#onInit(List[#-extends-IndexCommit]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexDeletionPolicy#onInit(List[#-extends-IndexCommit]).mjava","sourceNew":"  /**\n   * <p>This is called once when a writer is first\n   * instantiated to give the policy a chance to remove old\n   * commit points.</p>\n   * \n   * <p>The writer locates all index commits present in the \n   * index directory and calls this method.  The policy may \n   * choose to delete some of the commit points, doing so by\n   * calling method {@link IndexCommit#delete delete()} \n   * of {@link IndexCommit}.</p>\n   * \n   * <p><u>Note:</u> the last CommitPoint is the most recent one,\n   * i.e. the \"front index state\". Be careful not to delete it,\n   * unless you know for sure what you are doing, and unless \n   * you can afford to lose the index content while doing that. \n   *\n   * @param commits List of current \n   * {@link IndexCommit point-in-time commits},\n   *  sorted by age (the 0th one is the oldest commit).\n   *  Note that for a new index this method is invoked with\n   *  an empty list.\n   */\n  public abstract void onInit(List<? extends IndexCommit> commits) throws IOException;\n\n","sourceOld":"  /**\n   * <p>This is called once when a writer is first\n   * instantiated to give the policy a chance to remove old\n   * commit points.</p>\n   * \n   * <p>The writer locates all index commits present in the \n   * index directory and calls this method.  The policy may \n   * choose to delete some of the commit points, doing so by\n   * calling method {@link IndexCommit#delete delete()} \n   * of {@link IndexCommit}.</p>\n   * \n   * <p><u>Note:</u> the last CommitPoint is the most recent one,\n   * i.e. the \"front index state\". Be careful not to delete it,\n   * unless you know for sure what you are doing, and unless \n   * you can afford to lose the index content while doing that. \n   *\n   * @param commits List of current \n   * {@link IndexCommit point-in-time commits},\n   *  sorted by age (the 0th one is the oldest commit).\n   */\n  public abstract void onInit(List<? extends IndexCommit> commits) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70790b11e79a0366b21b2cc5b82d03b6fddcef81":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["70790b11e79a0366b21b2cc5b82d03b6fddcef81","2a4726332a3fd0154e4b70b7cc64256b927a3178"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2a4726332a3fd0154e4b70b7cc64256b927a3178":["70790b11e79a0366b21b2cc5b82d03b6fddcef81"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2a4726332a3fd0154e4b70b7cc64256b927a3178"]},"commit2Childs":{"70790b11e79a0366b21b2cc5b82d03b6fddcef81":["37a0f60745e53927c4c876cfe5b5a58170f0646c","2a4726332a3fd0154e4b70b7cc64256b927a3178"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["70790b11e79a0366b21b2cc5b82d03b6fddcef81"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2a4726332a3fd0154e4b70b7cc64256b927a3178":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}