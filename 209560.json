{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectField#compare(int,BytesRef).mjava","commits":[{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectField#compare(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectField#compare(int,BytesRef).mjava","sourceNew":"    // Compares in unicode (UTF8) order:\n    int compare(int ord, BytesRef other) {\n      final byte[] otherBytes = other.bytes;\n\n      int upto = termOffsets[ord];\n      final int termLen = termOffsets[1+ord] - upto;\n      int otherUpto = other.offset;\n      \n      final int stop = upto + Math.min(termLen, other.length);\n      while (upto < stop) {\n        int diff = (termBytes[upto++] & 0xFF) - (otherBytes[otherUpto++] & 0xFF);\n        if (diff != 0) {\n          return diff;\n        }\n      }\n    \n      // One is a prefix of the other, or, they are equal:\n      return termLen - other.length;\n    }\n\n","sourceOld":"    // Compares in unicode (UTF8) order:\n    int compare(int ord, BytesRef other) {\n      final byte[] otherBytes = other.bytes;\n\n      int upto = termOffsets[ord];\n      final int termLen = termOffsets[1+ord] - upto;\n      int otherUpto = other.offset;\n      \n      final int stop = upto + Math.min(termLen, other.length);\n      while (upto < stop) {\n        int diff = (termBytes[upto++] & 0xFF) - (otherBytes[otherUpto++] & 0xFF);\n        if (diff != 0) {\n          return diff;\n        }\n      }\n    \n      // One is a prefix of the other, or, they are equal:\n      return termLen - other.length;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectField#compare(int,BytesRef).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectField#compare(int,BytesRef).mjava","sourceNew":"    // Compares in unicode (UTF8) order:\n    int compare(int ord, BytesRef other) {\n      final byte[] otherBytes = other.bytes;\n\n      int upto = termOffsets[ord];\n      final int termLen = termOffsets[1+ord] - upto;\n      int otherUpto = other.offset;\n\n      final int stop = upto + Math.min(termLen, other.length);\n      while (upto < stop) {\n        int diff = (termBytes[upto++] & 0xFF) - (otherBytes[otherUpto++] & 0xFF);\n        if (diff != 0) {\n          return diff;\n        }\n      }\n\n      // One is a prefix of the other, or, they are equal:\n      return termLen - other.length;\n    }\n\n","sourceOld":"    // Compares in unicode (UTF8) order:\n    int compare(int ord, BytesRef other) {\n      final byte[] otherBytes = other.bytes;\n\n      int upto = termOffsets[ord];\n      final int termLen = termOffsets[1+ord] - upto;\n      int otherUpto = other.offset;\n      \n      final int stop = upto + Math.min(termLen, other.length);\n      while (upto < stop) {\n        int diff = (termBytes[upto++] & 0xFF) - (otherBytes[otherUpto++] & 0xFF);\n        if (diff != 0) {\n          return diff;\n        }\n      }\n    \n      // One is a prefix of the other, or, they are equal:\n      return termLen - other.length;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"51f5280f31484820499077f41fcdfe92d527d9dc":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["51f5280f31484820499077f41fcdfe92d527d9dc"]},"commit2Childs":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["51f5280f31484820499077f41fcdfe92d527d9dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"51f5280f31484820499077f41fcdfe92d527d9dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}