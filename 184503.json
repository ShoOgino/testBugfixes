{"path":"src/java/org/apache/lucene/analysis/StopFilter#makeStopSet(String[],boolean).mjava","commits":[{"id":"286cb6c31750c5add63b4db2aa26094a3572747f","date":1133833013,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopFilter#makeStopSet(String[],boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * \n    * @param stopWords\n   * @param ignoreCase If true, all words are lower cased first.  \n   * @return a Set containing the words\n   */    \n  public static final Set makeStopSet(String[] stopWords, boolean ignoreCase) {\n    HashSet stopTable = new HashSet(stopWords.length);\n    for (int i = 0; i < stopWords.length; i++)\n      stopTable.add(ignoreCase ? stopWords[i].toLowerCase() : stopWords[i]);\n    return stopTable;\n  }    \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6864413dbc0c12104c978c05456f3da1d45adb03","date":1186770873,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopFilter#makeStopSet(String[],boolean).mjava","pathOld":"src/java/org/apache/lucene/analysis/StopFilter#makeStopSet(String[],boolean).mjava","sourceNew":"  /**\n   * \n    * @param stopWords\n   * @param ignoreCase If true, all words are lower cased first.  \n   * @return a Set containing the words\n   */    \n  public static final Set makeStopSet(String[] stopWords, boolean ignoreCase) {\n    HashSet stopTable = new HashSet(stopWords.length);\n    for (int i = 0; i < stopWords.length; i++)\n      stopTable.add(ignoreCase ? stopWords[i].toLowerCase() : stopWords[i]);\n    return stopTable;\n  }\n\n","sourceOld":"  /**\n   * \n    * @param stopWords\n   * @param ignoreCase If true, all words are lower cased first.  \n   * @return a Set containing the words\n   */    \n  public static final Set makeStopSet(String[] stopWords, boolean ignoreCase) {\n    HashSet stopTable = new HashSet(stopWords.length);\n    for (int i = 0; i < stopWords.length; i++)\n      stopTable.add(ignoreCase ? stopWords[i].toLowerCase() : stopWords[i]);\n    return stopTable;\n  }    \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"050b03edbe9b8423ff4c09685c6f03d900e86b83","date":1195514584,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopFilter#makeStopSet(String[],boolean).mjava","pathOld":"src/java/org/apache/lucene/analysis/StopFilter#makeStopSet(String[],boolean).mjava","sourceNew":"  /**\n   * \n    * @param stopWords\n   * @param ignoreCase If true, all words are lower cased first.  \n   * @return a Set containing the words\n   */    \n  public static final Set makeStopSet(String[] stopWords, boolean ignoreCase) {\n    CharArraySet stopSet = new CharArraySet(stopWords.length, ignoreCase);\n    stopSet.addAll(Arrays.asList(stopWords));\n    return stopSet;  }\n\n","sourceOld":"  /**\n   * \n    * @param stopWords\n   * @param ignoreCase If true, all words are lower cased first.  \n   * @return a Set containing the words\n   */    \n  public static final Set makeStopSet(String[] stopWords, boolean ignoreCase) {\n    HashSet stopTable = new HashSet(stopWords.length);\n    for (int i = 0; i < stopWords.length; i++)\n      stopTable.add(ignoreCase ? stopWords[i].toLowerCase() : stopWords[i]);\n    return stopTable;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d72616b6df1f321b987430eadeefaaaf363f17bb","date":1206559348,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopFilter#makeStopSet(String[],boolean).mjava","pathOld":"src/java/org/apache/lucene/analysis/StopFilter#makeStopSet(String[],boolean).mjava","sourceNew":"  /**\n   * \n   * @param stopWords\n   * @param ignoreCase If true, all words are lower cased first.  \n   * @return a Set containing the words\n   */    \n  public static final Set makeStopSet(String[] stopWords, boolean ignoreCase) {\n    CharArraySet stopSet = new CharArraySet(stopWords.length, ignoreCase);\n    stopSet.addAll(Arrays.asList(stopWords));\n    return stopSet;\n  }\n\n","sourceOld":"  /**\n   * \n    * @param stopWords\n   * @param ignoreCase If true, all words are lower cased first.  \n   * @return a Set containing the words\n   */    \n  public static final Set makeStopSet(String[] stopWords, boolean ignoreCase) {\n    CharArraySet stopSet = new CharArraySet(stopWords.length, ignoreCase);\n    stopSet.addAll(Arrays.asList(stopWords));\n    return stopSet;  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a304180b207b90050c7dce408cff6d92316491d","date":1238434015,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopFilter#makeStopSet(String[],boolean).mjava","pathOld":"src/java/org/apache/lucene/analysis/StopFilter#makeStopSet(String[],boolean).mjava","sourceNew":"  /**\n   * \n   * @param stopWords An array of stopwords\n   * @param ignoreCase If true, all words are lower cased first.  \n   * @return a Set containing the words\n   */    \n  public static final Set makeStopSet(String[] stopWords, boolean ignoreCase) {\n    CharArraySet stopSet = new CharArraySet(stopWords.length, ignoreCase);\n    stopSet.addAll(Arrays.asList(stopWords));\n    return stopSet;\n  }\n\n","sourceOld":"  /**\n   * \n   * @param stopWords\n   * @param ignoreCase If true, all words are lower cased first.  \n   * @return a Set containing the words\n   */    \n  public static final Set makeStopSet(String[] stopWords, boolean ignoreCase) {\n    CharArraySet stopSet = new CharArraySet(stopWords.length, ignoreCase);\n    stopSet.addAll(Arrays.asList(stopWords));\n    return stopSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9","date":1256127131,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopFilter#makeStopSet(String[],boolean).mjava","pathOld":"src/java/org/apache/lucene/analysis/StopFilter#makeStopSet(String[],boolean).mjava","sourceNew":"  /**\n   * \n   * @param stopWords An array of stopwords\n   * @param ignoreCase If true, all words are lower cased first.  \n   * @return a Set containing the words\n   */    \n  public static final Set<Object> makeStopSet(String[] stopWords, boolean ignoreCase) {\n    CharArraySet stopSet = new CharArraySet(stopWords.length, ignoreCase);\n    stopSet.addAll(Arrays.asList(stopWords));\n    return stopSet;\n  }\n\n","sourceOld":"  /**\n   * \n   * @param stopWords An array of stopwords\n   * @param ignoreCase If true, all words are lower cased first.  \n   * @return a Set containing the words\n   */    \n  public static final Set makeStopSet(String[] stopWords, boolean ignoreCase) {\n    CharArraySet stopSet = new CharArraySet(stopWords.length, ignoreCase);\n    stopSet.addAll(Arrays.asList(stopWords));\n    return stopSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f6c85ffa816c86be877aa7a5029a5daa1336e7f","date":1259617761,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopFilter#makeStopSet(String[],boolean).mjava","pathOld":"src/java/org/apache/lucene/analysis/StopFilter#makeStopSet(String[],boolean).mjava","sourceNew":"  /**\n   * Creates a stopword set from the given stopword array.\n   * @param stopWords An array of stopwords\n   * @param ignoreCase If true, all words are lower cased first.  \n   * @return a Set containing the words\n   * @deprecated use {@link #makeStopSet(Version, String[], boolean)} instead;\n   */  \n  public static final Set<Object> makeStopSet(String[] stopWords, boolean ignoreCase) {\n    return makeStopSet(Version.LUCENE_30, stopWords, ignoreCase);\n  }\n\n","sourceOld":"  /**\n   * \n   * @param stopWords An array of stopwords\n   * @param ignoreCase If true, all words are lower cased first.  \n   * @return a Set containing the words\n   */    \n  public static final Set<Object> makeStopSet(String[] stopWords, boolean ignoreCase) {\n    CharArraySet stopSet = new CharArraySet(stopWords.length, ignoreCase);\n    stopSet.addAll(Arrays.asList(stopWords));\n    return stopSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5384d626ad24f6a1d56141ba6b0b144d1b2eafc5","date":1262514702,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopFilter#makeStopSet(String[],boolean).mjava","pathOld":"src/java/org/apache/lucene/analysis/StopFilter#makeStopSet(String[],boolean).mjava","sourceNew":"  /**\n   * Creates a stopword set from the given stopword array.\n   * @param stopWords An array of stopwords\n   * @param ignoreCase If true, all words are lower cased first.  \n   * @return a Set containing the words\n   * @deprecated use {@link #makeStopSet(Version, String[], boolean)} instead;\n   */  \n  @Deprecated\n  public static final Set<Object> makeStopSet(String[] stopWords, boolean ignoreCase) {\n    return makeStopSet(Version.LUCENE_30, stopWords, ignoreCase);\n  }\n\n","sourceOld":"  /**\n   * Creates a stopword set from the given stopword array.\n   * @param stopWords An array of stopwords\n   * @param ignoreCase If true, all words are lower cased first.  \n   * @return a Set containing the words\n   * @deprecated use {@link #makeStopSet(Version, String[], boolean)} instead;\n   */  \n  public static final Set<Object> makeStopSet(String[] stopWords, boolean ignoreCase) {\n    return makeStopSet(Version.LUCENE_30, stopWords, ignoreCase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/StopFilter#makeStopSet(String[],boolean).mjava","pathOld":"src/java/org/apache/lucene/analysis/StopFilter#makeStopSet(String[],boolean).mjava","sourceNew":"  /**\n   * Creates a stopword set from the given stopword array.\n   * @param stopWords An array of stopwords\n   * @param ignoreCase If true, all words are lower cased first.  \n   * @return a Set containing the words\n   * @deprecated use {@link #makeStopSet(Version, String[], boolean)} instead;\n   */  \n  @Deprecated\n  public static final Set<Object> makeStopSet(String[] stopWords, boolean ignoreCase) {\n    return makeStopSet(Version.LUCENE_30, stopWords, ignoreCase);\n  }\n\n","sourceOld":"  /**\n   * Creates a stopword set from the given stopword array.\n   * @param stopWords An array of stopwords\n   * @param ignoreCase If true, all words are lower cased first.  \n   * @return a Set containing the words\n   * @deprecated use {@link #makeStopSet(Version, String[], boolean)} instead;\n   */  \n  @Deprecated\n  public static final Set<Object> makeStopSet(String[] stopWords, boolean ignoreCase) {\n    return makeStopSet(Version.LUCENE_30, stopWords, ignoreCase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5384d626ad24f6a1d56141ba6b0b144d1b2eafc5":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"6864413dbc0c12104c978c05456f3da1d45adb03":["286cb6c31750c5add63b4db2aa26094a3572747f"],"d72616b6df1f321b987430eadeefaaaf363f17bb":["050b03edbe9b8423ff4c09685c6f03d900e86b83"],"286cb6c31750c5add63b4db2aa26094a3572747f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0a304180b207b90050c7dce408cff6d92316491d":["d72616b6df1f321b987430eadeefaaaf363f17bb"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["0a304180b207b90050c7dce408cff6d92316491d"],"050b03edbe9b8423ff4c09685c6f03d900e86b83":["6864413dbc0c12104c978c05456f3da1d45adb03"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["5384d626ad24f6a1d56141ba6b0b144d1b2eafc5"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"]},"commit2Childs":{"5384d626ad24f6a1d56141ba6b0b144d1b2eafc5":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"6864413dbc0c12104c978c05456f3da1d45adb03":["050b03edbe9b8423ff4c09685c6f03d900e86b83"],"d72616b6df1f321b987430eadeefaaaf363f17bb":["0a304180b207b90050c7dce408cff6d92316491d"],"286cb6c31750c5add63b4db2aa26094a3572747f":["6864413dbc0c12104c978c05456f3da1d45adb03"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["286cb6c31750c5add63b4db2aa26094a3572747f"],"0a304180b207b90050c7dce408cff6d92316491d":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"050b03edbe9b8423ff4c09685c6f03d900e86b83":["d72616b6df1f321b987430eadeefaaaf363f17bb"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["5384d626ad24f6a1d56141ba6b0b144d1b2eafc5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}