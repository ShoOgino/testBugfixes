{"path":"solr/core/src/java/org/apache/solr/update/processor/TolerantUpdateProcessor#TolerantUpdateProcessor(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor,int,DistribPhase).mjava","commits":[{"id":"f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef","date":1458928975,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/TolerantUpdateProcessor#TolerantUpdateProcessor(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor,int,DistribPhase).mjava","pathOld":"/dev/null","sourceNew":"  public TolerantUpdateProcessor(SolrQueryRequest req, SolrQueryResponse rsp, UpdateRequestProcessor next, int maxErrors, DistribPhase distribPhase) {\n    super(next);\n    assert maxErrors >= -1;\n      \n    header = rsp.getResponseHeader();\n    this.maxErrors = ToleratedUpdateError.getEffectiveMaxErrors(maxErrors);\n    this.req = req;\n    this.distribPhase = distribPhase;\n    assert ! DistribPhase.FROMLEADER.equals(distribPhase);\n    \n    this.zkController = this.req.getCore().getCoreDescriptor().getCoreContainer().getZkController();\n    this.uniqueKeyField = this.req.getCore().getLatestSchema().getUniqueKeyField();\n    assert null != uniqueKeyField : \"Factory didn't enforce uniqueKey field?\";\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"729cb470f975115d4c60517b2cb7c42e37a7a2e1","date":1492041760,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/TolerantUpdateProcessor#TolerantUpdateProcessor(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor,int,DistribPhase).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/TolerantUpdateProcessor#TolerantUpdateProcessor(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor,int,DistribPhase).mjava","sourceNew":"  public TolerantUpdateProcessor(SolrQueryRequest req, SolrQueryResponse rsp, UpdateRequestProcessor next, int maxErrors, DistribPhase distribPhase) {\n    super(next);\n    assert maxErrors >= -1;\n      \n    header = rsp.getResponseHeader();\n    this.maxErrors = ToleratedUpdateError.getEffectiveMaxErrors(maxErrors);\n    this.req = req;\n    this.distribPhase = distribPhase;\n    assert ! DistribPhase.FROMLEADER.equals(distribPhase);\n    \n    this.zkController = this.req.getCore().getCoreContainer().getZkController();\n    this.uniqueKeyField = this.req.getCore().getLatestSchema().getUniqueKeyField();\n    assert null != uniqueKeyField : \"Factory didn't enforce uniqueKey field?\";\n  }\n\n","sourceOld":"  public TolerantUpdateProcessor(SolrQueryRequest req, SolrQueryResponse rsp, UpdateRequestProcessor next, int maxErrors, DistribPhase distribPhase) {\n    super(next);\n    assert maxErrors >= -1;\n      \n    header = rsp.getResponseHeader();\n    this.maxErrors = ToleratedUpdateError.getEffectiveMaxErrors(maxErrors);\n    this.req = req;\n    this.distribPhase = distribPhase;\n    assert ! DistribPhase.FROMLEADER.equals(distribPhase);\n    \n    this.zkController = this.req.getCore().getCoreDescriptor().getCoreContainer().getZkController();\n    this.uniqueKeyField = this.req.getCore().getLatestSchema().getUniqueKeyField();\n    assert null != uniqueKeyField : \"Factory didn't enforce uniqueKey field?\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/TolerantUpdateProcessor#TolerantUpdateProcessor(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor,int,DistribPhase).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/TolerantUpdateProcessor#TolerantUpdateProcessor(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor,int,DistribPhase).mjava","sourceNew":"  public TolerantUpdateProcessor(SolrQueryRequest req, SolrQueryResponse rsp, UpdateRequestProcessor next, int maxErrors, DistribPhase distribPhase) {\n    super(next);\n    assert maxErrors >= -1;\n      \n    header = rsp.getResponseHeader();\n    this.maxErrors = ToleratedUpdateError.getEffectiveMaxErrors(maxErrors);\n    this.req = req;\n    this.distribPhase = distribPhase;\n    assert ! DistribPhase.FROMLEADER.equals(distribPhase);\n    \n    this.zkController = this.req.getCore().getCoreContainer().getZkController();\n    this.uniqueKeyField = this.req.getCore().getLatestSchema().getUniqueKeyField();\n    assert null != uniqueKeyField : \"Factory didn't enforce uniqueKey field?\";\n  }\n\n","sourceOld":"  public TolerantUpdateProcessor(SolrQueryRequest req, SolrQueryResponse rsp, UpdateRequestProcessor next, int maxErrors, DistribPhase distribPhase) {\n    super(next);\n    assert maxErrors >= -1;\n      \n    header = rsp.getResponseHeader();\n    this.maxErrors = ToleratedUpdateError.getEffectiveMaxErrors(maxErrors);\n    this.req = req;\n    this.distribPhase = distribPhase;\n    assert ! DistribPhase.FROMLEADER.equals(distribPhase);\n    \n    this.zkController = this.req.getCore().getCoreDescriptor().getCoreContainer().getZkController();\n    this.uniqueKeyField = this.req.getCore().getLatestSchema().getUniqueKeyField();\n    assert null != uniqueKeyField : \"Factory didn't enforce uniqueKey field?\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"729cb470f975115d4c60517b2cb7c42e37a7a2e1":["f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["729cb470f975115d4c60517b2cb7c42e37a7a2e1"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef"],"f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","729cb470f975115d4c60517b2cb7c42e37a7a2e1"],"729cb470f975115d4c60517b2cb7c42e37a7a2e1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}