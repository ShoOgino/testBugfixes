{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/FieldMetadata#read(DataInput,FieldInfos).mjava","commits":[{"id":"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89","date":1567784912,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/FieldMetadata#read(DataInput,FieldInfos).mjava","pathOld":"/dev/null","sourceNew":"  public static FieldMetadata read(DataInput input, FieldInfos fieldInfos) throws IOException {\n    int fieldId = input.readVInt();\n    FieldMetadata stats = new FieldMetadata(fieldInfos.fieldInfo(fieldId), 0, false);\n\n    stats.numTerms = input.readVInt();\n    stats.sumDocFreq = input.readVInt();\n\n    stats.sumTotalTermFreq = stats.sumDocFreq;\n    if (stats.fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS) >= 0) {\n      stats.sumTotalTermFreq += input.readVInt();\n      assert stats.sumTotalTermFreq >= stats.sumDocFreq : \"sumTotalFQ: \" + stats.sumTotalTermFreq + \" sumDocFQ: \" + stats.sumDocFreq;\n    }\n\n    stats.docCount = input.readVInt();\n\n    stats.dictionaryStartFP = input.readVLong();\n    stats.firstBlockStartFP = input.readVLong();\n    stats.lastBlockStartFP = input.readVLong();\n\n    int len = input.readVInt();\n    BytesRef lastTerm = new BytesRef(len);\n    if (len > 0) {\n      input.readBytes(lastTerm.bytes, 0, len);\n      lastTerm.length = len;\n    }\n    stats.setLastTerm(lastTerm);\n    return stats;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42f6185d883389450f593fb00103d2e89a0b8336","date":1577705030,"type":4,"author":"Bruno Roustant","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/FieldMetadata#read(DataInput,FieldInfos).mjava","sourceNew":null,"sourceOld":"  public static FieldMetadata read(DataInput input, FieldInfos fieldInfos) throws IOException {\n    int fieldId = input.readVInt();\n    FieldMetadata stats = new FieldMetadata(fieldInfos.fieldInfo(fieldId), 0, false);\n\n    stats.numTerms = input.readVInt();\n    stats.sumDocFreq = input.readVInt();\n\n    stats.sumTotalTermFreq = stats.sumDocFreq;\n    if (stats.fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS) >= 0) {\n      stats.sumTotalTermFreq += input.readVInt();\n      assert stats.sumTotalTermFreq >= stats.sumDocFreq : \"sumTotalFQ: \" + stats.sumTotalTermFreq + \" sumDocFQ: \" + stats.sumDocFreq;\n    }\n\n    stats.docCount = input.readVInt();\n\n    stats.dictionaryStartFP = input.readVLong();\n    stats.firstBlockStartFP = input.readVLong();\n    stats.lastBlockStartFP = input.readVLong();\n\n    int len = input.readVInt();\n    BytesRef lastTerm = new BytesRef(len);\n    if (len > 0) {\n      input.readBytes(lastTerm.bytes, 0, len);\n      lastTerm.length = len;\n    }\n    stats.setLastTerm(lastTerm);\n    return stats;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62e478fa10594a2ef9d1ddf7d195020300453c4e","date":1577783287,"type":4,"author":"Dawid Weiss","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/FieldMetadata#read(DataInput,FieldInfos).mjava","sourceNew":null,"sourceOld":"  public static FieldMetadata read(DataInput input, FieldInfos fieldInfos) throws IOException {\n    int fieldId = input.readVInt();\n    FieldMetadata stats = new FieldMetadata(fieldInfos.fieldInfo(fieldId), 0, false);\n\n    stats.numTerms = input.readVInt();\n    stats.sumDocFreq = input.readVInt();\n\n    stats.sumTotalTermFreq = stats.sumDocFreq;\n    if (stats.fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS) >= 0) {\n      stats.sumTotalTermFreq += input.readVInt();\n      assert stats.sumTotalTermFreq >= stats.sumDocFreq : \"sumTotalFQ: \" + stats.sumTotalTermFreq + \" sumDocFQ: \" + stats.sumDocFreq;\n    }\n\n    stats.docCount = input.readVInt();\n\n    stats.dictionaryStartFP = input.readVLong();\n    stats.firstBlockStartFP = input.readVLong();\n    stats.lastBlockStartFP = input.readVLong();\n\n    int len = input.readVInt();\n    BytesRef lastTerm = new BytesRef(len);\n    if (len > 0) {\n      input.readBytes(lastTerm.bytes, 0, len);\n      lastTerm.length = len;\n    }\n    stats.setLastTerm(lastTerm);\n    return stats;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"42f6185d883389450f593fb00103d2e89a0b8336":["09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"62e478fa10594a2ef9d1ddf7d195020300453c4e":["09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89","42f6185d883389450f593fb00103d2e89a0b8336"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["42f6185d883389450f593fb00103d2e89a0b8336"]},"commit2Childs":{"42f6185d883389450f593fb00103d2e89a0b8336":["62e478fa10594a2ef9d1ddf7d195020300453c4e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89"],"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89":["42f6185d883389450f593fb00103d2e89a0b8336","62e478fa10594a2ef9d1ddf7d195020300453c4e"],"62e478fa10594a2ef9d1ddf7d195020300453c4e":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["62e478fa10594a2ef9d1ddf7d195020300453c4e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}