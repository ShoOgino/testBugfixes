{"path":"lucene/core/src/java/org/apache/lucene/util/LongsRef#grow(int).mjava","commits":[{"id":"55110eb60c5105294fc2ae7912d82b750865aa58","date":1341389822,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/LongsRef#grow(int).mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * Used to grow the reference array. \n   * \n   * In general this should not be used as it does not take the offset into account.\n   * @lucene.internal */\n  public void grow(int newLength) {\n    assert offset == 0;\n    if (longs.length < newLength) {\n      longs = ArrayUtil.grow(longs, newLength);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/LongsRef#grow(int).mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * Used to grow the reference array. \n   * \n   * In general this should not be used as it does not take the offset into account.\n   * @lucene.internal */\n  public void grow(int newLength) {\n    assert offset == 0;\n    if (longs.length < newLength) {\n      longs = ArrayUtil.grow(longs, newLength);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","date":1407854805,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/LongsRef#grow(int).mjava","sourceNew":null,"sourceOld":"  /** \n   * Used to grow the reference array. \n   * \n   * In general this should not be used as it does not take the offset into account.\n   * @lucene.internal */\n  public void grow(int newLength) {\n    assert offset == 0;\n    if (longs.length < newLength) {\n      longs = ArrayUtil.grow(longs, newLength);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"55110eb60c5105294fc2ae7912d82b750865aa58":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","55110eb60c5105294fc2ae7912d82b750865aa58"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["55110eb60c5105294fc2ae7912d82b750865aa58"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"]},"commit2Childs":{"55110eb60c5105294fc2ae7912d82b750865aa58":["fe33227f6805edab2036cbb80645cc4e2d1fa424","7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["55110eb60c5105294fc2ae7912d82b750865aa58","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}