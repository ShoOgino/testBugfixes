{"path":"lucene/contrib/misc/src/java/org/apache/lucene/search/SearcherManager#close().mjava","commits":[{"id":"edcc2c2cbab6bf89ea584169ffb3ca83a31827f9","date":1316963893,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/search/SearcherManager#close().mjava","pathOld":"/dev/null","sourceNew":"  /** Close this SearcherManager to future searching.  Any\n   *  searches still in process in other threads won't be\n   *  affected, and they should still call {@link #release}\n   *  after they are done. */\n  @Override\n  public void close() throws IOException {\n    swapSearcher(null);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dfc6076b23c4069ed33fce21fd75a8ccfbf5019c","date":1317456621,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/search/SearcherManager#close().mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/search/SearcherManager#close().mjava","sourceNew":"  /** Close this SearcherManager to future searching.  Any\n   *  searches still in process in other threads won't be\n   *  affected, and they should still call {@link #release}\n   *  after they are done. */\n  @Override\n  public synchronized void close() throws IOException {\n    if (currentSearcher != null) {\n      // make sure we can call this more than once\n      // closeable javadoc says:\n      //   if this is already closed then invoking this method has no effect.\n      swapSearcher(null);\n    }\n  }\n\n","sourceOld":"  /** Close this SearcherManager to future searching.  Any\n   *  searches still in process in other threads won't be\n   *  affected, and they should still call {@link #release}\n   *  after they are done. */\n  @Override\n  public void close() throws IOException {\n    swapSearcher(null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"606baff722a317c76a92b111d183b54b6e6e5741","date":1317974711,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/search/SearcherManager#close().mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/search/SearcherManager#close().mjava","sourceNew":"  /**\n   * Close this SearcherManager to future searching. Any searches still in\n   * process in other threads won't be affected, and they should still call\n   * {@link #release} after they are done.\n   */\n  public synchronized void close() throws IOException {\n    if (currentSearcher != null) {\n      // make sure we can call this more than once\n      // closeable javadoc says:\n      // if this is already closed then invoking this method has no effect.\n      swapSearcher(null);\n    }\n  }\n\n","sourceOld":"  /** Close this SearcherManager to future searching.  Any\n   *  searches still in process in other threads won't be\n   *  affected, and they should still call {@link #release}\n   *  after they are done. */\n  @Override\n  public synchronized void close() throws IOException {\n    if (currentSearcher != null) {\n      // make sure we can call this more than once\n      // closeable javadoc says:\n      //   if this is already closed then invoking this method has no effect.\n      swapSearcher(null);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df16fc2e9b615e0138edac46655ae628f5d098ad","date":1320876869,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/SearcherManager#close().mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/search/SearcherManager#close().mjava","sourceNew":"  /**\n   * Close this SearcherManager to future searching. Any searches still in\n   * process in other threads won't be affected, and they should still call\n   * {@link #release} after they are done.\n   */\n  public synchronized void close() throws IOException {\n    if (currentSearcher != null) {\n      // make sure we can call this more than once\n      // closeable javadoc says:\n      // if this is already closed then invoking this method has no effect.\n      swapSearcher(null);\n    }\n  }\n\n","sourceOld":"  /**\n   * Close this SearcherManager to future searching. Any searches still in\n   * process in other threads won't be affected, and they should still call\n   * {@link #release} after they are done.\n   */\n  public synchronized void close() throws IOException {\n    if (currentSearcher != null) {\n      // make sure we can call this more than once\n      // closeable javadoc says:\n      // if this is already closed then invoking this method has no effect.\n      swapSearcher(null);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dfc6076b23c4069ed33fce21fd75a8ccfbf5019c":["edcc2c2cbab6bf89ea584169ffb3ca83a31827f9"],"df16fc2e9b615e0138edac46655ae628f5d098ad":["606baff722a317c76a92b111d183b54b6e6e5741"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"edcc2c2cbab6bf89ea584169ffb3ca83a31827f9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"606baff722a317c76a92b111d183b54b6e6e5741":["dfc6076b23c4069ed33fce21fd75a8ccfbf5019c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["df16fc2e9b615e0138edac46655ae628f5d098ad"]},"commit2Childs":{"dfc6076b23c4069ed33fce21fd75a8ccfbf5019c":["606baff722a317c76a92b111d183b54b6e6e5741"],"df16fc2e9b615e0138edac46655ae628f5d098ad":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["edcc2c2cbab6bf89ea584169ffb3ca83a31827f9"],"edcc2c2cbab6bf89ea584169ffb3ca83a31827f9":["dfc6076b23c4069ed33fce21fd75a8ccfbf5019c"],"606baff722a317c76a92b111d183b54b6e6e5741":["df16fc2e9b615e0138edac46655ae628f5d098ad"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}