{"path":"lucene/facet/src/test/org/apache/lucene/facet/search/TestDrillSideways#testSometimesInvalidDrillDown().mjava","commits":[{"id":"5b1ac4be5e40d7bda6ec0f850c933a95ca0642fd","date":1361836936,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/TestDrillSideways#testSometimesInvalidDrillDown().mjava","pathOld":"/dev/null","sourceNew":"  public void testSometimesInvalidDrillDown() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    writer = new RandomIndexWriter(random(), dir);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    facetFields = new FacetFields(taxoWriter);\n\n    add(\"Author/Bob\", \"Publish Date/2010/10/15\");\n    add(\"Author/Lisa\", \"Publish Date/2010/10/20\");\n    writer.commit();\n    // 2nd segment has no Author:\n    add(\"Foobar/Lisa\", \"Publish Date/2012/1/1\");\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Count both \"Publish Date\" and \"Author\" dimensions, in\n    // drill-down:\n    FacetSearchParams fsp = new FacetSearchParams(\n        new CountFacetRequest(new CategoryPath(\"Publish Date\"), 10), \n        new CountFacetRequest(new CategoryPath(\"Author\"), 10));\n\n    DrillDownQuery ddq = new DrillDownQuery(fsp.indexingParams, new MatchAllDocsQuery());\n    ddq.add(new CategoryPath(\"Author\", \"Lisa\"));\n    DrillSidewaysResult r = new DrillSideways(searcher, taxoReader).search(null, ddq, 10, fsp);\n\n    assertEquals(1, r.hits.totalHits);\n    assertEquals(2, r.facetResults.size());\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date: 2010=1\", toString(r.facetResults.get(0)));\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published once, and Bob\n    // published once:\n    assertEquals(\"Author: Lisa=1 Bob=1\", toString(r.facetResults.get(1)));\n\n    searcher.getIndexReader().close();\n    taxoReader.close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/TestDrillSideways#testSometimesInvalidDrillDown().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/TestDrillSideways#testSometimesInvalidDrillDown().mjava","sourceNew":"  public void testSometimesInvalidDrillDown() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    writer = new RandomIndexWriter(random(), dir);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    facetFields = new FacetFields(taxoWriter);\n\n    add(\"Author/Bob\", \"Publish Date/2010/10/15\");\n    add(\"Author/Lisa\", \"Publish Date/2010/10/20\");\n    writer.commit();\n    // 2nd segment has no Author:\n    add(\"Foobar/Lisa\", \"Publish Date/2012/1/1\");\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Count both \"Publish Date\" and \"Author\" dimensions, in\n    // drill-down:\n    FacetSearchParams fsp = new FacetSearchParams(\n        new CountFacetRequest(new FacetLabel(\"Publish Date\"), 10), \n        new CountFacetRequest(new FacetLabel(\"Author\"), 10));\n\n    DrillDownQuery ddq = new DrillDownQuery(fsp.indexingParams, new MatchAllDocsQuery());\n    ddq.add(new FacetLabel(\"Author\", \"Lisa\"));\n    DrillSidewaysResult r = new DrillSideways(searcher, taxoReader).search(null, ddq, 10, fsp);\n\n    assertEquals(1, r.hits.totalHits);\n    assertEquals(2, r.facetResults.size());\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date: 2010=1\", toString(r.facetResults.get(0)));\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published once, and Bob\n    // published once:\n    assertEquals(\"Author: Lisa=1 Bob=1\", toString(r.facetResults.get(1)));\n\n    searcher.getIndexReader().close();\n    taxoReader.close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","sourceOld":"  public void testSometimesInvalidDrillDown() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    writer = new RandomIndexWriter(random(), dir);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    facetFields = new FacetFields(taxoWriter);\n\n    add(\"Author/Bob\", \"Publish Date/2010/10/15\");\n    add(\"Author/Lisa\", \"Publish Date/2010/10/20\");\n    writer.commit();\n    // 2nd segment has no Author:\n    add(\"Foobar/Lisa\", \"Publish Date/2012/1/1\");\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Count both \"Publish Date\" and \"Author\" dimensions, in\n    // drill-down:\n    FacetSearchParams fsp = new FacetSearchParams(\n        new CountFacetRequest(new CategoryPath(\"Publish Date\"), 10), \n        new CountFacetRequest(new CategoryPath(\"Author\"), 10));\n\n    DrillDownQuery ddq = new DrillDownQuery(fsp.indexingParams, new MatchAllDocsQuery());\n    ddq.add(new CategoryPath(\"Author\", \"Lisa\"));\n    DrillSidewaysResult r = new DrillSideways(searcher, taxoReader).search(null, ddq, 10, fsp);\n\n    assertEquals(1, r.hits.totalHits);\n    assertEquals(2, r.facetResults.size());\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date: 2010=1\", toString(r.facetResults.get(0)));\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published once, and Bob\n    // published once:\n    assertEquals(\"Author: Lisa=1 Bob=1\", toString(r.facetResults.get(1)));\n\n    searcher.getIndexReader().close();\n    taxoReader.close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ce7aff7772c162c15d520e31af46c555f60d5c3b","date":1385135519,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/TestDrillSideways#testSometimesInvalidDrillDown().mjava","sourceNew":null,"sourceOld":"  public void testSometimesInvalidDrillDown() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    writer = new RandomIndexWriter(random(), dir);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    facetFields = new FacetFields(taxoWriter);\n\n    add(\"Author/Bob\", \"Publish Date/2010/10/15\");\n    add(\"Author/Lisa\", \"Publish Date/2010/10/20\");\n    writer.commit();\n    // 2nd segment has no Author:\n    add(\"Foobar/Lisa\", \"Publish Date/2012/1/1\");\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Count both \"Publish Date\" and \"Author\" dimensions, in\n    // drill-down:\n    FacetSearchParams fsp = new FacetSearchParams(\n        new CountFacetRequest(new FacetLabel(\"Publish Date\"), 10), \n        new CountFacetRequest(new FacetLabel(\"Author\"), 10));\n\n    DrillDownQuery ddq = new DrillDownQuery(fsp.indexingParams, new MatchAllDocsQuery());\n    ddq.add(new FacetLabel(\"Author\", \"Lisa\"));\n    DrillSidewaysResult r = new DrillSideways(searcher, taxoReader).search(null, ddq, 10, fsp);\n\n    assertEquals(1, r.hits.totalHits);\n    assertEquals(2, r.facetResults.size());\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date: 2010=1\", toString(r.facetResults.get(0)));\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published once, and Bob\n    // published once:\n    assertEquals(\"Author: Lisa=1 Bob=1\", toString(r.facetResults.get(1)));\n\n    searcher.getIndexReader().close();\n    taxoReader.close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/TestDrillSideways#testSometimesInvalidDrillDown().mjava","sourceNew":null,"sourceOld":"  public void testSometimesInvalidDrillDown() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    writer = new RandomIndexWriter(random(), dir);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    facetFields = new FacetFields(taxoWriter);\n\n    add(\"Author/Bob\", \"Publish Date/2010/10/15\");\n    add(\"Author/Lisa\", \"Publish Date/2010/10/20\");\n    writer.commit();\n    // 2nd segment has no Author:\n    add(\"Foobar/Lisa\", \"Publish Date/2012/1/1\");\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Count both \"Publish Date\" and \"Author\" dimensions, in\n    // drill-down:\n    FacetSearchParams fsp = new FacetSearchParams(\n        new CountFacetRequest(new CategoryPath(\"Publish Date\"), 10), \n        new CountFacetRequest(new CategoryPath(\"Author\"), 10));\n\n    DrillDownQuery ddq = new DrillDownQuery(fsp.indexingParams, new MatchAllDocsQuery());\n    ddq.add(new CategoryPath(\"Author\", \"Lisa\"));\n    DrillSidewaysResult r = new DrillSideways(searcher, taxoReader).search(null, ddq, 10, fsp);\n\n    assertEquals(1, r.hits.totalHits);\n    assertEquals(2, r.facetResults.size());\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date: 2010=1\", toString(r.facetResults.get(0)));\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published once, and Bob\n    // published once:\n    assertEquals(\"Author: Lisa=1 Bob=1\", toString(r.facetResults.get(1)));\n\n    searcher.getIndexReader().close();\n    taxoReader.close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5b1ac4be5e40d7bda6ec0f850c933a95ca0642fd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ce7aff7772c162c15d520e31af46c555f60d5c3b":["c190847801a50f4dd20fd639bdc29b54ea3b288b"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["5b1ac4be5e40d7bda6ec0f850c933a95ca0642fd","ce7aff7772c162c15d520e31af46c555f60d5c3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["5b1ac4be5e40d7bda6ec0f850c933a95ca0642fd"]},"commit2Childs":{"5b1ac4be5e40d7bda6ec0f850c933a95ca0642fd":["3cc728b07df73b197e6d940d27f9b08b63918f13","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5b1ac4be5e40d7bda6ec0f850c933a95ca0642fd"],"ce7aff7772c162c15d520e31af46c555f60d5c3b":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["ce7aff7772c162c15d520e31af46c555f60d5c3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}