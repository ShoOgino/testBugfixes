{"path":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#sendShardRequest(String,ModifiableSolrParams,ShardHandler,String,Map[String,String]).mjava","commits":[{"id":"ee31282189f924712ed9ad83e3073e0c207a1a53","date":1427223880,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#sendShardRequest(String,ModifiableSolrParams,ShardHandler,String,Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#sendShardRequest(String,ModifiableSolrParams,ShardHandler).mjava","sourceNew":"  private void sendShardRequest(String nodeName, ModifiableSolrParams params, ShardHandler shardHandler, String asyncId, Map<String, String> requestMap) {\n    if (asyncId != null) {\n      String coreAdminAsyncId = asyncId + Math.abs(System.nanoTime());\n      params.set(ASYNC, coreAdminAsyncId);\n      requestMap.put(nodeName, coreAdminAsyncId);\n    }\n\n    ShardRequest sreq = new ShardRequest();\n    params.set(\"qt\", adminPath);\n    sreq.purpose = 1;\n    String replica = zkStateReader.getBaseUrlForNodeName(nodeName);\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n\n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","sourceOld":"  private void sendShardRequest(String nodeName, ModifiableSolrParams params, ShardHandler shardHandler) {\n    ShardRequest sreq = new ShardRequest();\n    params.set(\"qt\", adminPath);\n    sreq.purpose = 1;\n    String replica = zkStateReader.getBaseUrlForNodeName(nodeName);\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n\n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#sendShardRequest(String,ModifiableSolrParams,ShardHandler,String,Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  private void sendShardRequest(String nodeName, ModifiableSolrParams params, ShardHandler shardHandler, String asyncId, Map<String, String> requestMap) {\n    if (asyncId != null) {\n      String coreAdminAsyncId = asyncId + Math.abs(System.nanoTime());\n      params.set(ASYNC, coreAdminAsyncId);\n      requestMap.put(nodeName, coreAdminAsyncId);\n    }\n\n    ShardRequest sreq = new ShardRequest();\n    params.set(\"qt\", adminPath);\n    sreq.purpose = 1;\n    String replica = zkStateReader.getBaseUrlForNodeName(nodeName);\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n\n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac","date":1438841252,"type":5,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#sendShardRequest(String,ModifiableSolrParams,ShardHandler,String,Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#sendShardRequest(String,ModifiableSolrParams,ShardHandler,String,Map[String,String]).mjava","sourceNew":"  private void sendShardRequest(String nodeName, ModifiableSolrParams params, ShardHandler shardHandler, String asyncId, Map<String, String> requestMap) {\n    if (asyncId != null) {\n      String coreAdminAsyncId = asyncId + Math.abs(System.nanoTime());\n      params.set(ASYNC, coreAdminAsyncId);\n      requestMap.put(nodeName, coreAdminAsyncId);\n    }\n\n    ShardRequest sreq = new ShardRequest();\n    params.set(\"qt\", adminPath);\n    sreq.purpose = 1;\n    String replica = zkStateReader.getBaseUrlForNodeName(nodeName);\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n\n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","sourceOld":"  private void sendShardRequest(String nodeName, ModifiableSolrParams params, ShardHandler shardHandler, String asyncId, Map<String, String> requestMap) {\n    if (asyncId != null) {\n      String coreAdminAsyncId = asyncId + Math.abs(System.nanoTime());\n      params.set(ASYNC, coreAdminAsyncId);\n      requestMap.put(nodeName, coreAdminAsyncId);\n    }\n\n    ShardRequest sreq = new ShardRequest();\n    params.set(\"qt\", adminPath);\n    sreq.purpose = 1;\n    String replica = zkStateReader.getBaseUrlForNodeName(nodeName);\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n\n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["ee31282189f924712ed9ad83e3073e0c207a1a53"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ee31282189f924712ed9ad83e3073e0c207a1a53"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ee31282189f924712ed9ad83e3073e0c207a1a53":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"]},"commit2Childs":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","ee31282189f924712ed9ad83e3073e0c207a1a53"],"ee31282189f924712ed9ad83e3073e0c207a1a53":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}