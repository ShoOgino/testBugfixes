{"path":"solr/core/src/java/org/apache/solr/handler/SnapShooter.FileCopier#copyFile(Directory,String,File,Directory).mjava","commits":[{"id":"d9405f486872f1e416304dfe389741f4ee2f8a4d","date":1351276739,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter.FileCopier#copyFile(Directory,String,File,Directory).mjava","pathOld":"/dev/null","sourceNew":"    public void copyFile(Directory sourceDir, String indexFile, File destination, Directory destDir)\n      throws IOException {\n\n      // make sure we can write to destination\n      if (destination.exists() && !destination.canWrite()) {\n        String message = \"Unable to open file \" + destination + \" for writing.\";\n        throw new IOException(message);\n      }\n\n      sourceDir.copy(destDir, indexFile, indexFile, IOContext.DEFAULT);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2126b84bd093fa3d921582a109a0ee578c28126","date":1351522501,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter.FileCopier#copyFile(Directory,String,File,Directory).mjava","pathOld":"/dev/null","sourceNew":"    public void copyFile(Directory sourceDir, String indexFile, File destination, Directory destDir)\n      throws IOException {\n\n      // make sure we can write to destination\n      if (destination.exists() && !destination.canWrite()) {\n        String message = \"Unable to open file \" + destination + \" for writing.\";\n        throw new IOException(message);\n      }\n\n      sourceDir.copy(destDir, indexFile, indexFile, IOContext.DEFAULT);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15fdb1d84f9e74320d318f682fd2b7d370398857","date":1355194688,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter.FileCopier#copyFile(Directory,String,File,Directory).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter.FileCopier#copyFile(Directory,String,File,Directory).mjava","sourceNew":"    public void copyFile(Directory sourceDir, String indexFile, File destination, Directory destDir)\n      throws IOException {\n\n      // make sure we can write to destination\n      if (destination.exists() && !destination.canWrite()) {\n        String message = \"Unable to open file \" + destination + \" for writing.\";\n        throw new IOException(message);\n      }\n\n      sourceDir.copy(destDir, indexFile, indexFile, DirectoryFactory.IOCONTEXT_NO_CACHE);\n    }\n\n","sourceOld":"    public void copyFile(Directory sourceDir, String indexFile, File destination, Directory destDir)\n      throws IOException {\n\n      // make sure we can write to destination\n      if (destination.exists() && !destination.canWrite()) {\n        String message = \"Unable to open file \" + destination + \" for writing.\";\n        throw new IOException(message);\n      }\n\n      sourceDir.copy(destDir, indexFile, indexFile, IOContext.DEFAULT);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter.FileCopier#copyFile(Directory,String,File,Directory).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter.FileCopier#copyFile(Directory,String,File,Directory).mjava","sourceNew":"    public void copyFile(Directory sourceDir, String indexFile, File destination, Directory destDir)\n      throws IOException {\n\n      // make sure we can write to destination\n      if (destination.exists() && !destination.canWrite()) {\n        String message = \"Unable to open file \" + destination + \" for writing.\";\n        throw new IOException(message);\n      }\n\n      sourceDir.copy(destDir, indexFile, indexFile, DirectoryFactory.IOCONTEXT_NO_CACHE);\n    }\n\n","sourceOld":"    public void copyFile(Directory sourceDir, String indexFile, File destination, Directory destDir)\n      throws IOException {\n\n      // make sure we can write to destination\n      if (destination.exists() && !destination.canWrite()) {\n        String message = \"Unable to open file \" + destination + \" for writing.\";\n        throw new IOException(message);\n      }\n\n      sourceDir.copy(destDir, indexFile, indexFile, IOContext.DEFAULT);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"285cdc737de75b7cc7c284a156b20214deb67bca","date":1415535483,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter.FileCopier#copyFile(Directory,String,File,Directory).mjava","sourceNew":null,"sourceOld":"    public void copyFile(Directory sourceDir, String indexFile, File destination, Directory destDir)\n      throws IOException {\n\n      // make sure we can write to destination\n      if (destination.exists() && !destination.canWrite()) {\n        String message = \"Unable to open file \" + destination + \" for writing.\";\n        throw new IOException(message);\n      }\n\n      sourceDir.copy(destDir, indexFile, indexFile, DirectoryFactory.IOCONTEXT_NO_CACHE);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"15fdb1d84f9e74320d318f682fd2b7d370398857":["d9405f486872f1e416304dfe389741f4ee2f8a4d"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["d9405f486872f1e416304dfe389741f4ee2f8a4d","15fdb1d84f9e74320d318f682fd2b7d370398857"],"285cdc737de75b7cc7c284a156b20214deb67bca":["15fdb1d84f9e74320d318f682fd2b7d370398857"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f2126b84bd093fa3d921582a109a0ee578c28126":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d9405f486872f1e416304dfe389741f4ee2f8a4d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["285cdc737de75b7cc7c284a156b20214deb67bca"]},"commit2Childs":{"15fdb1d84f9e74320d318f682fd2b7d370398857":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","285cdc737de75b7cc7c284a156b20214deb67bca"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"285cdc737de75b7cc7c284a156b20214deb67bca":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d9405f486872f1e416304dfe389741f4ee2f8a4d","f2126b84bd093fa3d921582a109a0ee578c28126"],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["15fdb1d84f9e74320d318f682fd2b7d370398857","d3fcb70cf561547c7bb1506e0cf32ca7b1287064","f2126b84bd093fa3d921582a109a0ee578c28126"],"f2126b84bd093fa3d921582a109a0ee578c28126":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","f2126b84bd093fa3d921582a109a0ee578c28126","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}