{"path":"src/java/org/apache/solr/update/DirectUpdateHandler#deleteInIndex(String).mjava","commits":[{"id":"0c3e228bf650e96f3002a8fb73dd0c13d55af077","date":1138253849,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/update/DirectUpdateHandler#deleteInIndex(String).mjava","pathOld":"/dev/null","sourceNew":"  protected int deleteInIndex(String id) throws IOException {\n    if (idField == null) throw new SolrException(2,\"Operation requires schema to have a unique key field\");\n\n    closeWriter(); openSearcher();\n    IndexReader ir = searcher.getReader();\n    TermDocs tdocs = null;\n    int num=0;\n    try {\n      num = ir.delete(idTerm(id));\n      if (SolrCore.log.isLoggable(Level.FINEST)) {\n        SolrCore.log.finest(\"deleted \" + num + \" docs matching id \" + id);\n      }\n    } finally {\n      try { if (tdocs != null) tdocs.close(); } catch (Exception e) {}\n    }\n    return num;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c7040334a42400ca67824559be90a1f2f2c9e63","date":1142276541,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/update/DirectUpdateHandler#deleteInIndex(String).mjava","pathOld":"src/java/org/apache/solr/update/DirectUpdateHandler#deleteInIndex(String).mjava","sourceNew":"  protected int deleteInIndex(String id) throws IOException {\n    if (idField == null) throw new SolrException(2,\"Operation requires schema to have a unique key field\");\n\n    closeWriter(); openSearcher();\n    IndexReader ir = searcher.getReader();\n    TermDocs tdocs = null;\n    int num=0;\n    try {\n      num = ir.deleteDocuments(idTerm(id));\n      if (SolrCore.log.isLoggable(Level.FINEST)) {\n        SolrCore.log.finest(\"deleted \" + num + \" docs matching id \" + id);\n      }\n    } finally {\n      try { if (tdocs != null) tdocs.close(); } catch (Exception e) {}\n    }\n    return num;\n  }\n\n","sourceOld":"  protected int deleteInIndex(String id) throws IOException {\n    if (idField == null) throw new SolrException(2,\"Operation requires schema to have a unique key field\");\n\n    closeWriter(); openSearcher();\n    IndexReader ir = searcher.getReader();\n    TermDocs tdocs = null;\n    int num=0;\n    try {\n      num = ir.delete(idTerm(id));\n      if (SolrCore.log.isLoggable(Level.FINEST)) {\n        SolrCore.log.finest(\"deleted \" + num + \" docs matching id \" + id);\n      }\n    } finally {\n      try { if (tdocs != null) tdocs.close(); } catch (Exception e) {}\n    }\n    return num;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17eb7532ac121036d18264e69542675407105635","date":1144877226,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/update/DirectUpdateHandler#deleteInIndex(String).mjava","pathOld":"src/java/org/apache/solr/update/DirectUpdateHandler#deleteInIndex(String).mjava","sourceNew":"  protected int deleteInIndex(String indexedId) throws IOException {\n    if (idField == null) throw new SolrException(2,\"Operation requires schema to have a unique key field\");\n\n    closeWriter(); openSearcher();\n    IndexReader ir = searcher.getReader();\n    TermDocs tdocs = null;\n    int num=0;\n    try {\n      Term term = new Term(idField.getName(), indexedId);\n      num = ir.deleteDocuments(term);\n      if (SolrCore.log.isLoggable(Level.FINEST)) {\n        SolrCore.log.finest(\"deleted \" + num + \" docs matching id \" + idFieldType.indexedToReadable(indexedId));\n      }\n    } finally {\n      try { if (tdocs != null) tdocs.close(); } catch (Exception e) {}\n    }\n    return num;\n  }\n\n","sourceOld":"  protected int deleteInIndex(String id) throws IOException {\n    if (idField == null) throw new SolrException(2,\"Operation requires schema to have a unique key field\");\n\n    closeWriter(); openSearcher();\n    IndexReader ir = searcher.getReader();\n    TermDocs tdocs = null;\n    int num=0;\n    try {\n      num = ir.deleteDocuments(idTerm(id));\n      if (SolrCore.log.isLoggable(Level.FINEST)) {\n        SolrCore.log.finest(\"deleted \" + num + \" docs matching id \" + id);\n      }\n    } finally {\n      try { if (tdocs != null) tdocs.close(); } catch (Exception e) {}\n    }\n    return num;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ffa55a3112f6a9ed19ca7e20579dff40c1f493b2","date":1180428723,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/update/DirectUpdateHandler#deleteInIndex(String).mjava","pathOld":"src/java/org/apache/solr/update/DirectUpdateHandler#deleteInIndex(String).mjava","sourceNew":"  protected int deleteInIndex(String indexedId) throws IOException {\n    if (idField == null) throw new SolrException(400,\"Operation requires schema to have a unique key field\");\n\n    closeWriter(); openSearcher();\n    IndexReader ir = searcher.getReader();\n    TermDocs tdocs = null;\n    int num=0;\n    try {\n      Term term = new Term(idField.getName(), indexedId);\n      num = ir.deleteDocuments(term);\n      if (SolrCore.log.isLoggable(Level.FINEST)) {\n        SolrCore.log.finest(\"deleted \" + num + \" docs matching id \" + idFieldType.indexedToReadable(indexedId));\n      }\n    } finally {\n      try { if (tdocs != null) tdocs.close(); } catch (Exception e) {}\n    }\n    return num;\n  }\n\n","sourceOld":"  protected int deleteInIndex(String indexedId) throws IOException {\n    if (idField == null) throw new SolrException(2,\"Operation requires schema to have a unique key field\");\n\n    closeWriter(); openSearcher();\n    IndexReader ir = searcher.getReader();\n    TermDocs tdocs = null;\n    int num=0;\n    try {\n      Term term = new Term(idField.getName(), indexedId);\n      num = ir.deleteDocuments(term);\n      if (SolrCore.log.isLoggable(Level.FINEST)) {\n        SolrCore.log.finest(\"deleted \" + num + \" docs matching id \" + idFieldType.indexedToReadable(indexedId));\n      }\n    } finally {\n      try { if (tdocs != null) tdocs.close(); } catch (Exception e) {}\n    }\n    return num;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996","date":1180477701,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/update/DirectUpdateHandler#deleteInIndex(String).mjava","pathOld":"src/java/org/apache/solr/update/DirectUpdateHandler#deleteInIndex(String).mjava","sourceNew":"  protected int deleteInIndex(String indexedId) throws IOException {\n    if (idField == null) throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Operation requires schema to have a unique key field\");\n\n    closeWriter(); openSearcher();\n    IndexReader ir = searcher.getReader();\n    TermDocs tdocs = null;\n    int num=0;\n    try {\n      Term term = new Term(idField.getName(), indexedId);\n      num = ir.deleteDocuments(term);\n      if (SolrCore.log.isLoggable(Level.FINEST)) {\n        SolrCore.log.finest(\"deleted \" + num + \" docs matching id \" + idFieldType.indexedToReadable(indexedId));\n      }\n    } finally {\n      try { if (tdocs != null) tdocs.close(); } catch (Exception e) {}\n    }\n    return num;\n  }\n\n","sourceOld":"  protected int deleteInIndex(String indexedId) throws IOException {\n    if (idField == null) throw new SolrException(400,\"Operation requires schema to have a unique key field\");\n\n    closeWriter(); openSearcher();\n    IndexReader ir = searcher.getReader();\n    TermDocs tdocs = null;\n    int num=0;\n    try {\n      Term term = new Term(idField.getName(), indexedId);\n      num = ir.deleteDocuments(term);\n      if (SolrCore.log.isLoggable(Level.FINEST)) {\n        SolrCore.log.finest(\"deleted \" + num + \" docs matching id \" + idFieldType.indexedToReadable(indexedId));\n      }\n    } finally {\n      try { if (tdocs != null) tdocs.close(); } catch (Exception e) {}\n    }\n    return num;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"048361614025800e582bfc7a7b0329dc6fd6a95e","date":1196999392,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/update/DirectUpdateHandler#deleteInIndex(String).mjava","pathOld":"src/java/org/apache/solr/update/DirectUpdateHandler#deleteInIndex(String).mjava","sourceNew":"  protected int deleteInIndex(String indexedId) throws IOException {\n    if (idField == null) throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Operation requires schema to have a unique key field\");\n\n    closeWriter(); openSearcher();\n    IndexReader ir = searcher.getReader();\n    TermDocs tdocs = null;\n    int num=0;\n    try {\n      Term term = new Term(idField.getName(), indexedId);\n      num = ir.deleteDocuments(term);\n      if (core.log.isLoggable(Level.FINEST)) {\n        core.log.finest( \"[\"+core.getName()+\"] deleted \" + num + \" docs matching id \" + idFieldType.indexedToReadable(indexedId));\n      }\n    } finally {\n      try { if (tdocs != null) tdocs.close(); } catch (Exception e) {}\n    }\n    return num;\n  }\n\n","sourceOld":"  protected int deleteInIndex(String indexedId) throws IOException {\n    if (idField == null) throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Operation requires schema to have a unique key field\");\n\n    closeWriter(); openSearcher();\n    IndexReader ir = searcher.getReader();\n    TermDocs tdocs = null;\n    int num=0;\n    try {\n      Term term = new Term(idField.getName(), indexedId);\n      num = ir.deleteDocuments(term);\n      if (SolrCore.log.isLoggable(Level.FINEST)) {\n        SolrCore.log.finest(\"deleted \" + num + \" docs matching id \" + idFieldType.indexedToReadable(indexedId));\n      }\n    } finally {\n      try { if (tdocs != null) tdocs.close(); } catch (Exception e) {}\n    }\n    return num;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b46f0ccfb6b63c307ea901d48482630e3689042c","date":1198805331,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/update/DirectUpdateHandler#deleteInIndex(String).mjava","pathOld":"src/java/org/apache/solr/update/DirectUpdateHandler#deleteInIndex(String).mjava","sourceNew":"  protected int deleteInIndex(String indexedId) throws IOException {\n    if (idField == null) throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Operation requires schema to have a unique key field\");\n\n    closeWriter(); openSearcher();\n    IndexReader ir = searcher.getReader();\n    TermDocs tdocs = null;\n    int num=0;\n    try {\n      Term term = new Term(idField.getName(), indexedId);\n      num = ir.deleteDocuments(term);\n      if (core.log.isLoggable(Level.FINEST)) {\n        core.log.finest( core.getLogId()+\"deleted \" + num + \" docs matching id \" + idFieldType.indexedToReadable(indexedId));\n      }\n    } finally {\n      try { if (tdocs != null) tdocs.close(); } catch (Exception e) {}\n    }\n    return num;\n  }\n\n","sourceOld":"  protected int deleteInIndex(String indexedId) throws IOException {\n    if (idField == null) throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Operation requires schema to have a unique key field\");\n\n    closeWriter(); openSearcher();\n    IndexReader ir = searcher.getReader();\n    TermDocs tdocs = null;\n    int num=0;\n    try {\n      Term term = new Term(idField.getName(), indexedId);\n      num = ir.deleteDocuments(term);\n      if (core.log.isLoggable(Level.FINEST)) {\n        core.log.finest( \"[\"+core.getName()+\"] deleted \" + num + \" docs matching id \" + idFieldType.indexedToReadable(indexedId));\n      }\n    } finally {\n      try { if (tdocs != null) tdocs.close(); } catch (Exception e) {}\n    }\n    return num;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"00da8b51bdeae168a5b26ec506db372b219ca7a2","date":1221704186,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/update/DirectUpdateHandler#deleteInIndex(String).mjava","pathOld":"src/java/org/apache/solr/update/DirectUpdateHandler#deleteInIndex(String).mjava","sourceNew":"  protected int deleteInIndex(String indexedId) throws IOException {\n    if (idField == null) throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Operation requires schema to have a unique key field\");\n\n    closeWriter(); openSearcher();\n    IndexReader ir = searcher.getReader();\n    TermDocs tdocs = null;\n    int num=0;\n    try {\n      Term term = new Term(idField.getName(), indexedId);\n      num = ir.deleteDocuments(term);\n      if (core.log.isTraceEnabled()) {\n        core.log.trace( core.getLogId()+\"deleted \" + num + \" docs matching id \" + idFieldType.indexedToReadable(indexedId));\n      }\n    } finally {\n      try { if (tdocs != null) tdocs.close(); } catch (Exception e) {}\n    }\n    return num;\n  }\n\n","sourceOld":"  protected int deleteInIndex(String indexedId) throws IOException {\n    if (idField == null) throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Operation requires schema to have a unique key field\");\n\n    closeWriter(); openSearcher();\n    IndexReader ir = searcher.getReader();\n    TermDocs tdocs = null;\n    int num=0;\n    try {\n      Term term = new Term(idField.getName(), indexedId);\n      num = ir.deleteDocuments(term);\n      if (core.log.isLoggable(Level.FINEST)) {\n        core.log.finest( core.getLogId()+\"deleted \" + num + \" docs matching id \" + idFieldType.indexedToReadable(indexedId));\n      }\n    } finally {\n      try { if (tdocs != null) tdocs.close(); } catch (Exception e) {}\n    }\n    return num;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/update/DirectUpdateHandler#deleteInIndex(String).mjava","pathOld":"src/java/org/apache/solr/update/DirectUpdateHandler#deleteInIndex(String).mjava","sourceNew":"  protected int deleteInIndex(String indexedId) throws IOException {\n    if (idField == null) throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Operation requires schema to have a unique key field\");\n\n    closeWriter(); openSearcher();\n    IndexReader ir = searcher.getReader();\n    TermDocs tdocs = null;\n    int num=0;\n    try {\n      Term term = new Term(idField.getName(), indexedId);\n      num = ir.deleteDocuments(term);\n      if (core.log.isTraceEnabled()) {\n        core.log.trace( core.getLogId()+\"deleted \" + num + \" docs matching id \" + idFieldType.indexedToReadable(indexedId));\n      }\n    } finally {\n      try { if (tdocs != null) tdocs.close(); } catch (Exception e) {}\n    }\n    return num;\n  }\n\n","sourceOld":"  protected int deleteInIndex(String indexedId) throws IOException {\n    if (idField == null) throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Operation requires schema to have a unique key field\");\n\n    closeWriter(); openSearcher();\n    IndexReader ir = searcher.getReader();\n    TermDocs tdocs = null;\n    int num=0;\n    try {\n      Term term = new Term(idField.getName(), indexedId);\n      num = ir.deleteDocuments(term);\n      if (core.log.isTraceEnabled()) {\n        core.log.trace( core.getLogId()+\"deleted \" + num + \" docs matching id \" + idFieldType.indexedToReadable(indexedId));\n      }\n    } finally {\n      try { if (tdocs != null) tdocs.close(); } catch (Exception e) {}\n    }\n    return num;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"048361614025800e582bfc7a7b0329dc6fd6a95e":["c4abe53aaee39b5f2f41dd9a0b905c1ddf880996"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["00da8b51bdeae168a5b26ec506db372b219ca7a2"],"7c7040334a42400ca67824559be90a1f2f2c9e63":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"b46f0ccfb6b63c307ea901d48482630e3689042c":["048361614025800e582bfc7a7b0329dc6fd6a95e"],"ffa55a3112f6a9ed19ca7e20579dff40c1f493b2":["17eb7532ac121036d18264e69542675407105635"],"00da8b51bdeae168a5b26ec506db372b219ca7a2":["b46f0ccfb6b63c307ea901d48482630e3689042c"],"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996":["ffa55a3112f6a9ed19ca7e20579dff40c1f493b2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"17eb7532ac121036d18264e69542675407105635":["7c7040334a42400ca67824559be90a1f2f2c9e63"]},"commit2Childs":{"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["7c7040334a42400ca67824559be90a1f2f2c9e63"],"048361614025800e582bfc7a7b0329dc6fd6a95e":["b46f0ccfb6b63c307ea901d48482630e3689042c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"7c7040334a42400ca67824559be90a1f2f2c9e63":["17eb7532ac121036d18264e69542675407105635"],"b46f0ccfb6b63c307ea901d48482630e3689042c":["00da8b51bdeae168a5b26ec506db372b219ca7a2"],"ffa55a3112f6a9ed19ca7e20579dff40c1f493b2":["c4abe53aaee39b5f2f41dd9a0b905c1ddf880996"],"00da8b51bdeae168a5b26ec506db372b219ca7a2":["ad94625fb8d088209f46650c8097196fec67f00c"],"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996":["048361614025800e582bfc7a7b0329dc6fd6a95e"],"17eb7532ac121036d18264e69542675407105635":["ffa55a3112f6a9ed19ca7e20579dff40c1f493b2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}