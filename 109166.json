{"path":"solr/core/src/java/org/apache/solr/handler/component/RangeFacetRequest.IntegerRangeEndpointCalculator#parseAndAddGap(Integer,String).mjava","commits":[{"id":"22d0a81a05eba47d5e18976f17d88306b218cc22","date":1436341569,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/RangeFacetRequest.IntegerRangeEndpointCalculator#parseAndAddGap(Integer,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/request/SimpleFacets.IntegerRangeEndpointCalculator#parseAndAddGap(Integer,String).mjava","sourceNew":"    @Override\n    public Integer parseAndAddGap(Integer value, String gap) {\n      return new Integer(value.intValue() + Integer.valueOf(gap).intValue());\n    }\n\n","sourceOld":"    @Override\n    public Integer parseAndAddGap(Integer value, String gap) {\n      return new Integer(value.intValue() + Integer.valueOf(gap).intValue());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8","date":1489572490,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/RangeFacetRequest.IntegerRangeEndpointCalculator#parseAndAddGap(Integer,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/RangeFacetRequest.IntegerRangeEndpointCalculator#parseAndAddGap(Integer,String).mjava","sourceNew":"    @Override\n    public Integer parseAndAddGap(Integer value, String gap) {\n      return new Integer(value.intValue() + Integer.parseInt(gap));\n    }\n\n","sourceOld":"    @Override\n    public Integer parseAndAddGap(Integer value, String gap) {\n      return new Integer(value.intValue() + Integer.valueOf(gap).intValue());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55e0b3830b94d1abce4e32e98cfc875d5b14e76f","date":1489651910,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/RangeFacetRequest.IntegerRangeEndpointCalculator#parseAndAddGap(Integer,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/RangeFacetRequest.IntegerRangeEndpointCalculator#parseAndAddGap(Integer,String).mjava","sourceNew":"    @Override\n    public Integer parseAndAddGap(Integer value, String gap) {\n      return new Integer(value.intValue() + Integer.parseInt(gap));\n    }\n\n","sourceOld":"    @Override\n    public Integer parseAndAddGap(Integer value, String gap) {\n      return new Integer(value.intValue() + Integer.valueOf(gap).intValue());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab68488225b6a6c357dda72ed11dedca9914a192","date":1490013111,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/RangeFacetRequest.IntegerRangeEndpointCalculator#parseAndAddGap(Integer,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/RangeFacetRequest.IntegerRangeEndpointCalculator#parseAndAddGap(Integer,String).mjava","sourceNew":"    @Override\n    public Integer parseAndAddGap(Integer value, String gap) {\n      return new Integer(value.intValue() + Integer.parseInt(gap));\n    }\n\n","sourceOld":"    @Override\n    public Integer parseAndAddGap(Integer value, String gap) {\n      return new Integer(value.intValue() + Integer.valueOf(gap).intValue());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a","date":1528054850,"type":3,"author":"Michael Braun","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/RangeFacetRequest.IntegerRangeEndpointCalculator#parseAndAddGap(Integer,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/RangeFacetRequest.IntegerRangeEndpointCalculator#parseAndAddGap(Integer,String).mjava","sourceNew":"    @Override\n    public Integer parseAndAddGap(Integer value, String gap) {\n      return value.intValue() + Integer.parseInt(gap);\n    }\n\n","sourceOld":"    @Override\n    public Integer parseAndAddGap(Integer value, String gap) {\n      return new Integer(value.intValue() + Integer.parseInt(gap));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"628903f37b6c442da0d390db1c6af9a0e74d41a7","date":1531736685,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/RangeFacetRequest.IntegerRangeEndpointCalculator#parseAndAddGap(Integer,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/RangeFacetRequest.IntegerRangeEndpointCalculator#parseAndAddGap(Integer,String).mjava","sourceNew":"    @Override\n    public Integer parseAndAddGap(Integer value, String gap) {\n      return value.intValue() + Integer.parseInt(gap);\n    }\n\n","sourceOld":"    @Override\n    public Integer parseAndAddGap(Integer value, String gap) {\n      return new Integer(value.intValue() + Integer.parseInt(gap));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/RangeFacetRequest.IntegerRangeEndpointCalculator#parseAndAddGap(Integer,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/RangeFacetRequest.IntegerRangeEndpointCalculator#parseAndAddGap(Integer,String).mjava","sourceNew":"    @Override\n    public Integer parseAndAddGap(Integer value, String gap) {\n      return value.intValue() + Integer.parseInt(gap);\n    }\n\n","sourceOld":"    @Override\n    public Integer parseAndAddGap(Integer value, String gap) {\n      return new Integer(value.intValue() + Integer.parseInt(gap));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8":["22d0a81a05eba47d5e18976f17d88306b218cc22"],"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a":["6c72a3aa9309c1f5ade9265cf083e565ae8d35b8"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["6c72a3aa9309c1f5ade9265cf083e565ae8d35b8","628903f37b6c442da0d390db1c6af9a0e74d41a7"],"55e0b3830b94d1abce4e32e98cfc875d5b14e76f":["22d0a81a05eba47d5e18976f17d88306b218cc22"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"22d0a81a05eba47d5e18976f17d88306b218cc22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ab68488225b6a6c357dda72ed11dedca9914a192":["22d0a81a05eba47d5e18976f17d88306b218cc22","55e0b3830b94d1abce4e32e98cfc875d5b14e76f"],"628903f37b6c442da0d390db1c6af9a0e74d41a7":["6c72a3aa9309c1f5ade9265cf083e565ae8d35b8","b6a269c1ddba3f8c9fa9a40572ecc538eddda41a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["628903f37b6c442da0d390db1c6af9a0e74d41a7"]},"commit2Childs":{"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8":["b6a269c1ddba3f8c9fa9a40572ecc538eddda41a","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","628903f37b6c442da0d390db1c6af9a0e74d41a7"],"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a":["628903f37b6c442da0d390db1c6af9a0e74d41a7"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"55e0b3830b94d1abce4e32e98cfc875d5b14e76f":["ab68488225b6a6c357dda72ed11dedca9914a192"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["22d0a81a05eba47d5e18976f17d88306b218cc22"],"22d0a81a05eba47d5e18976f17d88306b218cc22":["6c72a3aa9309c1f5ade9265cf083e565ae8d35b8","55e0b3830b94d1abce4e32e98cfc875d5b14e76f","ab68488225b6a6c357dda72ed11dedca9914a192"],"ab68488225b6a6c357dda72ed11dedca9914a192":[],"628903f37b6c442da0d390db1c6af9a0e74d41a7":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","ab68488225b6a6c357dda72ed11dedca9914a192","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}