{"path":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getIndexSize(SolrCore).mjava","commits":[{"id":"ba74b188d46af33b86ff8e5a500d6f066852a182","date":1312857652,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getIndexSize(SolrCore).mjava","pathOld":"/dev/null","sourceNew":"  private long getIndexSize(SolrCore core) {\n    return FileUtils.sizeOfDirectory(new File(core.getIndexDir()));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9405f486872f1e416304dfe389741f4ee2f8a4d","date":1351276739,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getIndexSize(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getIndexSize(SolrCore).mjava","sourceNew":"  private long getIndexSize(SolrCore core) {\n    Directory dir;\n    long size = 0;\n    try {\n      dir = core.getDirectoryFactory().get(core.getIndexDir(), null);\n      try {\n        size = DirectoryFactory.sizeOfDirectory(dir);\n      } finally {\n        core.getDirectoryFactory().release(dir);\n      }\n    } catch (IOException e) {\n      SolrException.log(log, \"IO error while trying to get the size of the Directory\", e);\n    }\n    return size;\n  }\n\n","sourceOld":"  private long getIndexSize(SolrCore core) {\n    return FileUtils.sizeOfDirectory(new File(core.getIndexDir()));\n  }\n\n","bugFix":null,"bugIntro":["718607d99d02778db3280e64975663762c94170d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f2126b84bd093fa3d921582a109a0ee578c28126","date":1351522501,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getIndexSize(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getIndexSize(SolrCore).mjava","sourceNew":"  private long getIndexSize(SolrCore core) {\n    Directory dir;\n    long size = 0;\n    try {\n      dir = core.getDirectoryFactory().get(core.getIndexDir(), null);\n      try {\n        size = DirectoryFactory.sizeOfDirectory(dir);\n      } finally {\n        core.getDirectoryFactory().release(dir);\n      }\n    } catch (IOException e) {\n      SolrException.log(log, \"IO error while trying to get the size of the Directory\", e);\n    }\n    return size;\n  }\n\n","sourceOld":"  private long getIndexSize(SolrCore core) {\n    return FileUtils.sizeOfDirectory(new File(core.getIndexDir()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"718607d99d02778db3280e64975663762c94170d","date":1354986964,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getIndexSize(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getIndexSize(SolrCore).mjava","sourceNew":"  private long getIndexSize(SolrCore core) {\n    Directory dir;\n    long size = 0;\n    try {\n      dir = core.getDirectoryFactory().get(core.getIndexDir(), core.getSolrConfig().indexConfig.lockType);\n      try {\n        size = DirectoryFactory.sizeOfDirectory(dir);\n      } finally {\n        core.getDirectoryFactory().release(dir);\n      }\n    } catch (IOException e) {\n      SolrException.log(log, \"IO error while trying to get the size of the Directory\", e);\n    }\n    return size;\n  }\n\n","sourceOld":"  private long getIndexSize(SolrCore core) {\n    Directory dir;\n    long size = 0;\n    try {\n      dir = core.getDirectoryFactory().get(core.getIndexDir(), null);\n      try {\n        size = DirectoryFactory.sizeOfDirectory(dir);\n      } finally {\n        core.getDirectoryFactory().release(dir);\n      }\n    } catch (IOException e) {\n      SolrException.log(log, \"IO error while trying to get the size of the Directory\", e);\n    }\n    return size;\n  }\n\n","bugFix":["d9405f486872f1e416304dfe389741f4ee2f8a4d"],"bugIntro":["3d0aded0c98ca55c25e788d03509cafa1f307b06"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3d0aded0c98ca55c25e788d03509cafa1f307b06","date":1354990450,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getIndexSize(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getIndexSize(SolrCore).mjava","sourceNew":"  private long getIndexSize(SolrCore core) {\n    Directory dir;\n    long size = 0;\n    try {\n      if (!core.getDirectoryFactory().exists(core.getIndexDir())) {\n        dir = core.getDirectoryFactory().get(core.getNewIndexDir(), core.getSolrConfig().indexConfig.lockType);\n      } else {\n        dir = core.getDirectoryFactory().get(core.getIndexDir(), core.getSolrConfig().indexConfig.lockType); \n      }\n\n      try {\n        size = DirectoryFactory.sizeOfDirectory(dir);\n      } finally {\n        core.getDirectoryFactory().release(dir);\n      }\n    } catch (IOException e) {\n      SolrException.log(log, \"IO error while trying to get the size of the Directory\", e);\n    }\n    return size;\n  }\n\n","sourceOld":"  private long getIndexSize(SolrCore core) {\n    Directory dir;\n    long size = 0;\n    try {\n      dir = core.getDirectoryFactory().get(core.getIndexDir(), core.getSolrConfig().indexConfig.lockType);\n      try {\n        size = DirectoryFactory.sizeOfDirectory(dir);\n      } finally {\n        core.getDirectoryFactory().release(dir);\n      }\n    } catch (IOException e) {\n      SolrException.log(log, \"IO error while trying to get the size of the Directory\", e);\n    }\n    return size;\n  }\n\n","bugFix":["718607d99d02778db3280e64975663762c94170d"],"bugIntro":["d0ce568448269aad19a317e537eefc0993934c9d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getIndexSize(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getIndexSize(SolrCore).mjava","sourceNew":"  private long getIndexSize(SolrCore core) {\n    Directory dir;\n    long size = 0;\n    try {\n      if (!core.getDirectoryFactory().exists(core.getIndexDir())) {\n        dir = core.getDirectoryFactory().get(core.getNewIndexDir(), core.getSolrConfig().indexConfig.lockType);\n      } else {\n        dir = core.getDirectoryFactory().get(core.getIndexDir(), core.getSolrConfig().indexConfig.lockType); \n      }\n\n      try {\n        size = DirectoryFactory.sizeOfDirectory(dir);\n      } finally {\n        core.getDirectoryFactory().release(dir);\n      }\n    } catch (IOException e) {\n      SolrException.log(log, \"IO error while trying to get the size of the Directory\", e);\n    }\n    return size;\n  }\n\n","sourceOld":"  private long getIndexSize(SolrCore core) {\n    Directory dir;\n    long size = 0;\n    try {\n      dir = core.getDirectoryFactory().get(core.getIndexDir(), null);\n      try {\n        size = DirectoryFactory.sizeOfDirectory(dir);\n      } finally {\n        core.getDirectoryFactory().release(dir);\n      }\n    } catch (IOException e) {\n      SolrException.log(log, \"IO error while trying to get the size of the Directory\", e);\n    }\n    return size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1eda2abfda9da3ca2bc5c5872d6b8c0f4948f674","date":1358098706,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getIndexSize(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getIndexSize(SolrCore).mjava","sourceNew":"  private long getIndexSize(SolrCore core) {\n    Directory dir;\n    long size = 0;\n    try {\n      if (!core.getDirectoryFactory().exists(core.getIndexDir())) {\n        dir = core.getDirectoryFactory().get(core.getNewIndexDir(), DirContext.DEFAULT, core.getSolrConfig().indexConfig.lockType);\n      } else {\n        dir = core.getDirectoryFactory().get(core.getIndexDir(), DirContext.DEFAULT, core.getSolrConfig().indexConfig.lockType); \n      }\n\n      try {\n        size = DirectoryFactory.sizeOfDirectory(dir);\n      } finally {\n        core.getDirectoryFactory().release(dir);\n      }\n    } catch (IOException e) {\n      SolrException.log(log, \"IO error while trying to get the size of the Directory\", e);\n    }\n    return size;\n  }\n\n","sourceOld":"  private long getIndexSize(SolrCore core) {\n    Directory dir;\n    long size = 0;\n    try {\n      if (!core.getDirectoryFactory().exists(core.getIndexDir())) {\n        dir = core.getDirectoryFactory().get(core.getNewIndexDir(), core.getSolrConfig().indexConfig.lockType);\n      } else {\n        dir = core.getDirectoryFactory().get(core.getIndexDir(), core.getSolrConfig().indexConfig.lockType); \n      }\n\n      try {\n        size = DirectoryFactory.sizeOfDirectory(dir);\n      } finally {\n        core.getDirectoryFactory().release(dir);\n      }\n    } catch (IOException e) {\n      SolrException.log(log, \"IO error while trying to get the size of the Directory\", e);\n    }\n    return size;\n  }\n\n","bugFix":null,"bugIntro":["d0ce568448269aad19a317e537eefc0993934c9d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8917bfede3b4ca30f4305c1e391e9218959cd723","date":1358189662,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getIndexSize(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getIndexSize(SolrCore).mjava","sourceNew":"  private long getIndexSize(SolrCore core) {\n    Directory dir;\n    long size = 0;\n    try {\n      if (!core.getDirectoryFactory().exists(core.getIndexDir())) {\n        dir = core.getDirectoryFactory().get(core.getNewIndexDir(), DirContext.DEFAULT, core.getSolrConfig().indexConfig.lockType);\n      } else {\n        dir = core.getDirectoryFactory().get(core.getIndexDir(), DirContext.DEFAULT, core.getSolrConfig().indexConfig.lockType); \n      }\n\n      try {\n        size = DirectoryFactory.sizeOfDirectory(dir);\n      } finally {\n        core.getDirectoryFactory().release(dir);\n      }\n    } catch (IOException e) {\n      SolrException.log(log, \"IO error while trying to get the size of the Directory\", e);\n    }\n    return size;\n  }\n\n","sourceOld":"  private long getIndexSize(SolrCore core) {\n    Directory dir;\n    long size = 0;\n    try {\n      if (!core.getDirectoryFactory().exists(core.getIndexDir())) {\n        dir = core.getDirectoryFactory().get(core.getNewIndexDir(), core.getSolrConfig().indexConfig.lockType);\n      } else {\n        dir = core.getDirectoryFactory().get(core.getIndexDir(), core.getSolrConfig().indexConfig.lockType); \n      }\n\n      try {\n        size = DirectoryFactory.sizeOfDirectory(dir);\n      } finally {\n        core.getDirectoryFactory().release(dir);\n      }\n    } catch (IOException e) {\n      SolrException.log(log, \"IO error while trying to get the size of the Directory\", e);\n    }\n    return size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ce568448269aad19a317e537eefc0993934c9d","date":1361139215,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getIndexSize(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getIndexSize(SolrCore).mjava","sourceNew":"  private long getIndexSize(SolrCore core) {\n    Directory dir;\n    long size = 0;\n    try {\n\n      dir = core.getDirectoryFactory().get(core.getIndexDir(), DirContext.DEFAULT, core.getSolrConfig().indexConfig.lockType); \n\n      try {\n        size = DirectoryFactory.sizeOfDirectory(dir);\n      } finally {\n        core.getDirectoryFactory().release(dir);\n      }\n    } catch (IOException e) {\n      SolrException.log(log, \"IO error while trying to get the size of the Directory\", e);\n    }\n    return size;\n  }\n\n","sourceOld":"  private long getIndexSize(SolrCore core) {\n    Directory dir;\n    long size = 0;\n    try {\n      if (!core.getDirectoryFactory().exists(core.getIndexDir())) {\n        dir = core.getDirectoryFactory().get(core.getNewIndexDir(), DirContext.DEFAULT, core.getSolrConfig().indexConfig.lockType);\n      } else {\n        dir = core.getDirectoryFactory().get(core.getIndexDir(), DirContext.DEFAULT, core.getSolrConfig().indexConfig.lockType); \n      }\n\n      try {\n        size = DirectoryFactory.sizeOfDirectory(dir);\n      } finally {\n        core.getDirectoryFactory().release(dir);\n      }\n    } catch (IOException e) {\n      SolrException.log(log, \"IO error while trying to get the size of the Directory\", e);\n    }\n    return size;\n  }\n\n","bugFix":["3d0aded0c98ca55c25e788d03509cafa1f307b06","1eda2abfda9da3ca2bc5c5872d6b8c0f4948f674"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c8567c25c02eeeb3e719841606a1269f3538ca","date":1361155063,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getIndexSize(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getIndexSize(SolrCore).mjava","sourceNew":"  private long getIndexSize(SolrCore core) {\n    Directory dir;\n    long size = 0;\n    try {\n\n      dir = core.getDirectoryFactory().get(core.getIndexDir(), DirContext.DEFAULT, core.getSolrConfig().indexConfig.lockType); \n\n      try {\n        size = DirectoryFactory.sizeOfDirectory(dir);\n      } finally {\n        core.getDirectoryFactory().release(dir);\n      }\n    } catch (IOException e) {\n      SolrException.log(log, \"IO error while trying to get the size of the Directory\", e);\n    }\n    return size;\n  }\n\n","sourceOld":"  private long getIndexSize(SolrCore core) {\n    Directory dir;\n    long size = 0;\n    try {\n      if (!core.getDirectoryFactory().exists(core.getIndexDir())) {\n        dir = core.getDirectoryFactory().get(core.getNewIndexDir(), DirContext.DEFAULT, core.getSolrConfig().indexConfig.lockType);\n      } else {\n        dir = core.getDirectoryFactory().get(core.getIndexDir(), DirContext.DEFAULT, core.getSolrConfig().indexConfig.lockType); \n      }\n\n      try {\n        size = DirectoryFactory.sizeOfDirectory(dir);\n      } finally {\n        core.getDirectoryFactory().release(dir);\n      }\n    } catch (IOException e) {\n      SolrException.log(log, \"IO error while trying to get the size of the Directory\", e);\n    }\n    return size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa0876236f0bd8be403747120d248bdd42b75a96","date":1451844229,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation#getIndexSize(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getIndexSize(SolrCore).mjava","sourceNew":"  long getIndexSize(SolrCore core) {\n    Directory dir;\n    long size = 0;\n    try {\n\n      dir = core.getDirectoryFactory().get(core.getIndexDir(), DirectoryFactory.DirContext.DEFAULT, core.getSolrConfig().indexConfig.lockType);\n\n      try {\n        size = DirectoryFactory.sizeOfDirectory(dir);\n      } finally {\n        core.getDirectoryFactory().release(dir);\n      }\n    } catch (IOException e) {\n      SolrException.log(log, \"IO error while trying to get the size of the Directory\", e);\n    }\n    return size;\n  }\n\n","sourceOld":"  private long getIndexSize(SolrCore core) {\n    Directory dir;\n    long size = 0;\n    try {\n\n      dir = core.getDirectoryFactory().get(core.getIndexDir(), DirContext.DEFAULT, core.getSolrConfig().indexConfig.lockType); \n\n      try {\n        size = DirectoryFactory.sizeOfDirectory(dir);\n      } finally {\n        core.getDirectoryFactory().release(dir);\n      }\n    } catch (IOException e) {\n      SolrException.log(log, \"IO error while trying to get the size of the Directory\", e);\n    }\n    return size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ba74b188d46af33b86ff8e5a500d6f066852a182":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8917bfede3b4ca30f4305c1e391e9218959cd723":["407687e67faf6e1f02a211ca078d8e3eed631027","1eda2abfda9da3ca2bc5c5872d6b8c0f4948f674"],"1eda2abfda9da3ca2bc5c5872d6b8c0f4948f674":["3d0aded0c98ca55c25e788d03509cafa1f307b06"],"407687e67faf6e1f02a211ca078d8e3eed631027":["d9405f486872f1e416304dfe389741f4ee2f8a4d","3d0aded0c98ca55c25e788d03509cafa1f307b06"],"fa0876236f0bd8be403747120d248bdd42b75a96":["d0ce568448269aad19a317e537eefc0993934c9d"],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["ba74b188d46af33b86ff8e5a500d6f066852a182"],"09c8567c25c02eeeb3e719841606a1269f3538ca":["1eda2abfda9da3ca2bc5c5872d6b8c0f4948f674","d0ce568448269aad19a317e537eefc0993934c9d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f2126b84bd093fa3d921582a109a0ee578c28126":["ba74b188d46af33b86ff8e5a500d6f066852a182","d9405f486872f1e416304dfe389741f4ee2f8a4d"],"718607d99d02778db3280e64975663762c94170d":["d9405f486872f1e416304dfe389741f4ee2f8a4d"],"3d0aded0c98ca55c25e788d03509cafa1f307b06":["718607d99d02778db3280e64975663762c94170d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fa0876236f0bd8be403747120d248bdd42b75a96"],"d0ce568448269aad19a317e537eefc0993934c9d":["1eda2abfda9da3ca2bc5c5872d6b8c0f4948f674"]},"commit2Childs":{"ba74b188d46af33b86ff8e5a500d6f066852a182":["d9405f486872f1e416304dfe389741f4ee2f8a4d","f2126b84bd093fa3d921582a109a0ee578c28126"],"8917bfede3b4ca30f4305c1e391e9218959cd723":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["8917bfede3b4ca30f4305c1e391e9218959cd723"],"1eda2abfda9da3ca2bc5c5872d6b8c0f4948f674":["8917bfede3b4ca30f4305c1e391e9218959cd723","09c8567c25c02eeeb3e719841606a1269f3538ca","d0ce568448269aad19a317e537eefc0993934c9d"],"fa0876236f0bd8be403747120d248bdd42b75a96":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["407687e67faf6e1f02a211ca078d8e3eed631027","f2126b84bd093fa3d921582a109a0ee578c28126","718607d99d02778db3280e64975663762c94170d"],"09c8567c25c02eeeb3e719841606a1269f3538ca":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ba74b188d46af33b86ff8e5a500d6f066852a182"],"f2126b84bd093fa3d921582a109a0ee578c28126":[],"718607d99d02778db3280e64975663762c94170d":["3d0aded0c98ca55c25e788d03509cafa1f307b06"],"3d0aded0c98ca55c25e788d03509cafa1f307b06":["1eda2abfda9da3ca2bc5c5872d6b8c0f4948f674","407687e67faf6e1f02a211ca078d8e3eed631027"],"d0ce568448269aad19a317e537eefc0993934c9d":["fa0876236f0bd8be403747120d248bdd42b75a96","09c8567c25c02eeeb3e719841606a1269f3538ca"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8917bfede3b4ca30f4305c1e391e9218959cd723","09c8567c25c02eeeb3e719841606a1269f3538ca","f2126b84bd093fa3d921582a109a0ee578c28126","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}