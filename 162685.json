{"path":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#testTotalTermFreq().mjava","commits":[{"id":"eecaced7ccbed629f8cd10476146628eb442238a","date":1309731982,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#testTotalTermFreq().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * test collection-level term stats (new in 4.x indexes)\n   */\n  public void testTotalTermFreq() throws Exception {\n    assumeFalse(\"PreFlex codec does not support collection-level term stats\", \n        \"PreFlex\".equals(CodecProvider.getDefault().getDefaultFieldCodec()));\n    \n    clearIndex();\n    \n    assertU(adoc(\"id\",\"1\", \"a_tdt\",\"2009-08-31T12:10:10.123Z\", \"b_tdt\",\"2009-08-31T12:10:10.124Z\"));\n    assertU(adoc(\"id\",\"2\", \"a_t\",\"how now brown cow\"));\n    assertU(commit()); // create more than one segment\n    assertU(adoc(\"id\",\"3\", \"a_t\",\"brown cow\"));\n    assertU(adoc(\"id\",\"4\"));\n    assertU(commit()); // create more than one segment\n    assertU(adoc(\"id\",\"5\"));\n    assertU(adoc(\"id\",\"6\", \"a_t\",\"cow cow cow cow cow\"));\n    assertU(commit());\n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}totaltermfreq('a_t','cow')\", \"fq\",\"id:6\"), \"//float[@name='score']='7.0'\");    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c960367698164ae9ca0ccf62d27d93c9c24462b1","date":1309878384,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#testTotalTermFreq().mjava","pathOld":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#testTotalTermFreq().mjava","sourceNew":"  /**\n   * test collection-level term stats (new in 4.x indexes)\n   */\n  public void testTotalTermFreq() throws Exception {\n    assumeFalse(\"PreFlex codec does not support collection-level term stats\", \n        \"PreFlex\".equals(CodecProvider.getDefault().getDefaultFieldCodec()));\n    \n    clearIndex();\n    \n    assertU(adoc(\"id\",\"1\", \"a_tdt\",\"2009-08-31T12:10:10.123Z\", \"b_tdt\",\"2009-08-31T12:10:10.124Z\"));\n    assertU(adoc(\"id\",\"2\", \"a_t\",\"how now brown cow\"));\n    assertU(commit()); // create more than one segment\n    assertU(adoc(\"id\",\"3\", \"a_t\",\"brown cow\"));\n    assertU(adoc(\"id\",\"4\"));\n    assertU(commit()); // create more than one segment\n    assertU(adoc(\"id\",\"5\"));\n    assertU(adoc(\"id\",\"6\", \"a_t\",\"cow cow cow cow cow\"));\n    assertU(commit());\n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}totaltermfreq('a_t','cow')\", \"fq\",\"id:6\"), \"//float[@name='score']='7.0'\");    \n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}ttf(a_t,'cow')\", \"fq\",\"id:6\"), \"//float[@name='score']='7.0'\");\n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}sumtotaltermfreq('a_t')\", \"fq\",\"id:6\"), \"//float[@name='score']='11.0'\");\n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}sttf(a_t)\", \"fq\",\"id:6\"), \"//float[@name='score']='11.0'\");\n  }\n\n","sourceOld":"  /**\n   * test collection-level term stats (new in 4.x indexes)\n   */\n  public void testTotalTermFreq() throws Exception {\n    assumeFalse(\"PreFlex codec does not support collection-level term stats\", \n        \"PreFlex\".equals(CodecProvider.getDefault().getDefaultFieldCodec()));\n    \n    clearIndex();\n    \n    assertU(adoc(\"id\",\"1\", \"a_tdt\",\"2009-08-31T12:10:10.123Z\", \"b_tdt\",\"2009-08-31T12:10:10.124Z\"));\n    assertU(adoc(\"id\",\"2\", \"a_t\",\"how now brown cow\"));\n    assertU(commit()); // create more than one segment\n    assertU(adoc(\"id\",\"3\", \"a_t\",\"brown cow\"));\n    assertU(adoc(\"id\",\"4\"));\n    assertU(commit()); // create more than one segment\n    assertU(adoc(\"id\",\"5\"));\n    assertU(adoc(\"id\",\"6\", \"a_t\",\"cow cow cow cow cow\"));\n    assertU(commit());\n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}totaltermfreq('a_t','cow')\", \"fq\",\"id:6\"), \"//float[@name='score']='7.0'\");    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#testTotalTermFreq().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * test collection-level term stats (new in 4.x indexes)\n   */\n  public void testTotalTermFreq() throws Exception {\n    assumeFalse(\"PreFlex codec does not support collection-level term stats\", \n        \"PreFlex\".equals(CodecProvider.getDefault().getDefaultFieldCodec()));\n    \n    clearIndex();\n    \n    assertU(adoc(\"id\",\"1\", \"a_tdt\",\"2009-08-31T12:10:10.123Z\", \"b_tdt\",\"2009-08-31T12:10:10.124Z\"));\n    assertU(adoc(\"id\",\"2\", \"a_t\",\"how now brown cow\"));\n    assertU(commit()); // create more than one segment\n    assertU(adoc(\"id\",\"3\", \"a_t\",\"brown cow\"));\n    assertU(adoc(\"id\",\"4\"));\n    assertU(commit()); // create more than one segment\n    assertU(adoc(\"id\",\"5\"));\n    assertU(adoc(\"id\",\"6\", \"a_t\",\"cow cow cow cow cow\"));\n    assertU(commit());\n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}totaltermfreq('a_t','cow')\", \"fq\",\"id:6\"), \"//float[@name='score']='7.0'\");    \n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}ttf(a_t,'cow')\", \"fq\",\"id:6\"), \"//float[@name='score']='7.0'\");\n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}sumtotaltermfreq('a_t')\", \"fq\",\"id:6\"), \"//float[@name='score']='11.0'\");\n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}sttf(a_t)\", \"fq\",\"id:6\"), \"//float[@name='score']='11.0'\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#testTotalTermFreq().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * test collection-level term stats (new in 4.x indexes)\n   */\n  public void testTotalTermFreq() throws Exception {\n    assumeFalse(\"PreFlex codec does not support collection-level term stats\", \n        \"PreFlex\".equals(CodecProvider.getDefault().getDefaultFieldCodec()));\n    \n    clearIndex();\n    \n    assertU(adoc(\"id\",\"1\", \"a_tdt\",\"2009-08-31T12:10:10.123Z\", \"b_tdt\",\"2009-08-31T12:10:10.124Z\"));\n    assertU(adoc(\"id\",\"2\", \"a_t\",\"how now brown cow\"));\n    assertU(commit()); // create more than one segment\n    assertU(adoc(\"id\",\"3\", \"a_t\",\"brown cow\"));\n    assertU(adoc(\"id\",\"4\"));\n    assertU(commit()); // create more than one segment\n    assertU(adoc(\"id\",\"5\"));\n    assertU(adoc(\"id\",\"6\", \"a_t\",\"cow cow cow cow cow\"));\n    assertU(commit());\n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}totaltermfreq('a_t','cow')\", \"fq\",\"id:6\"), \"//float[@name='score']='7.0'\");    \n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}ttf(a_t,'cow')\", \"fq\",\"id:6\"), \"//float[@name='score']='7.0'\");\n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}sumtotaltermfreq('a_t')\", \"fq\",\"id:6\"), \"//float[@name='score']='11.0'\");\n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}sttf(a_t)\", \"fq\",\"id:6\"), \"//float[@name='score']='11.0'\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#testTotalTermFreq().mjava","pathOld":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#testTotalTermFreq().mjava","sourceNew":"  /**\n   * test collection-level term stats (new in 4.x indexes)\n   */\n  public void testTotalTermFreq() throws Exception {\n    assumeFalse(\"PreFlex codec does not support collection-level term stats\", \n        \"PreFlex\".equals(CodecProvider.getDefault().getDefaultFieldCodec()));\n    \n    clearIndex();\n    \n    assertU(adoc(\"id\",\"1\", \"a_tdt\",\"2009-08-31T12:10:10.123Z\", \"b_tdt\",\"2009-08-31T12:10:10.124Z\"));\n    assertU(adoc(\"id\",\"2\", \"a_t\",\"how now brown cow\"));\n    assertU(commit()); // create more than one segment\n    assertU(adoc(\"id\",\"3\", \"a_t\",\"brown cow\"));\n    assertU(adoc(\"id\",\"4\"));\n    assertU(commit()); // create more than one segment\n    assertU(adoc(\"id\",\"5\"));\n    assertU(adoc(\"id\",\"6\", \"a_t\",\"cow cow cow cow cow\"));\n    assertU(commit());\n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}totaltermfreq('a_t','cow')\", \"fq\",\"id:6\"), \"//float[@name='score']='7.0'\");    \n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}ttf(a_t,'cow')\", \"fq\",\"id:6\"), \"//float[@name='score']='7.0'\");\n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}sumtotaltermfreq('a_t')\", \"fq\",\"id:6\"), \"//float[@name='score']='11.0'\");\n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}sttf(a_t)\", \"fq\",\"id:6\"), \"//float[@name='score']='11.0'\");\n  }\n\n","sourceOld":"  /**\n   * test collection-level term stats (new in 4.x indexes)\n   */\n  public void testTotalTermFreq() throws Exception {\n    assumeFalse(\"PreFlex codec does not support collection-level term stats\", \n        \"PreFlex\".equals(CodecProvider.getDefault().getDefaultFieldCodec()));\n    \n    clearIndex();\n    \n    assertU(adoc(\"id\",\"1\", \"a_tdt\",\"2009-08-31T12:10:10.123Z\", \"b_tdt\",\"2009-08-31T12:10:10.124Z\"));\n    assertU(adoc(\"id\",\"2\", \"a_t\",\"how now brown cow\"));\n    assertU(commit()); // create more than one segment\n    assertU(adoc(\"id\",\"3\", \"a_t\",\"brown cow\"));\n    assertU(adoc(\"id\",\"4\"));\n    assertU(commit()); // create more than one segment\n    assertU(adoc(\"id\",\"5\"));\n    assertU(adoc(\"id\",\"6\", \"a_t\",\"cow cow cow cow cow\"));\n    assertU(commit());\n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}totaltermfreq('a_t','cow')\", \"fq\",\"id:6\"), \"//float[@name='score']='7.0'\");    \n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}ttf(a_t,'cow')\", \"fq\",\"id:6\"), \"//float[@name='score']='7.0'\");\n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}sumtotaltermfreq('a_t')\", \"fq\",\"id:6\"), \"//float[@name='score']='11.0'\");\n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}sttf(a_t)\", \"fq\",\"id:6\"), \"//float[@name='score']='11.0'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#testTotalTermFreq().mjava","pathOld":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#testTotalTermFreq().mjava","sourceNew":"  /**\n   * test collection-level term stats (new in 4.x indexes)\n   */\n  public void testTotalTermFreq() throws Exception {\n    assumeFalse(\"PreFlex codec does not support collection-level term stats\", \n        \"PreFlex\".equals(CodecProvider.getDefault().getDefaultFieldCodec()));\n    \n    clearIndex();\n    \n    assertU(adoc(\"id\",\"1\", \"a_tdt\",\"2009-08-31T12:10:10.123Z\", \"b_tdt\",\"2009-08-31T12:10:10.124Z\"));\n    assertU(adoc(\"id\",\"2\", \"a_t\",\"how now brown cow\"));\n    assertU(commit()); // create more than one segment\n    assertU(adoc(\"id\",\"3\", \"a_t\",\"brown cow\"));\n    assertU(adoc(\"id\",\"4\"));\n    assertU(commit()); // create more than one segment\n    assertU(adoc(\"id\",\"5\"));\n    assertU(adoc(\"id\",\"6\", \"a_t\",\"cow cow cow cow cow\"));\n    assertU(commit());\n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}totaltermfreq('a_t','cow')\", \"fq\",\"id:6\"), \"//float[@name='score']='7.0'\");    \n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}ttf(a_t,'cow')\", \"fq\",\"id:6\"), \"//float[@name='score']='7.0'\");\n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}sumtotaltermfreq('a_t')\", \"fq\",\"id:6\"), \"//float[@name='score']='11.0'\");\n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}sttf(a_t)\", \"fq\",\"id:6\"), \"//float[@name='score']='11.0'\");\n  }\n\n","sourceOld":"  /**\n   * test collection-level term stats (new in 4.x indexes)\n   */\n  public void testTotalTermFreq() throws Exception {\n    assumeFalse(\"PreFlex codec does not support collection-level term stats\", \n        \"PreFlex\".equals(CodecProvider.getDefault().getDefaultFieldCodec()));\n    \n    clearIndex();\n    \n    assertU(adoc(\"id\",\"1\", \"a_tdt\",\"2009-08-31T12:10:10.123Z\", \"b_tdt\",\"2009-08-31T12:10:10.124Z\"));\n    assertU(adoc(\"id\",\"2\", \"a_t\",\"how now brown cow\"));\n    assertU(commit()); // create more than one segment\n    assertU(adoc(\"id\",\"3\", \"a_t\",\"brown cow\"));\n    assertU(adoc(\"id\",\"4\"));\n    assertU(commit()); // create more than one segment\n    assertU(adoc(\"id\",\"5\"));\n    assertU(adoc(\"id\",\"6\", \"a_t\",\"cow cow cow cow cow\"));\n    assertU(commit());\n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}totaltermfreq('a_t','cow')\", \"fq\",\"id:6\"), \"//float[@name='score']='7.0'\");    \n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}ttf(a_t,'cow')\", \"fq\",\"id:6\"), \"//float[@name='score']='7.0'\");\n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}sumtotaltermfreq('a_t')\", \"fq\",\"id:6\"), \"//float[@name='score']='11.0'\");\n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}sttf(a_t)\", \"fq\",\"id:6\"), \"//float[@name='score']='11.0'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#testTotalTermFreq().mjava","pathOld":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#testTotalTermFreq().mjava","sourceNew":"  /**\n   * test collection-level term stats (new in 4.x indexes)\n   */\n  public void testTotalTermFreq() throws Exception {\n    assumeFalse(\"PreFlex codec does not support collection-level term stats\", \n        \"PreFlex\".equals(CodecProvider.getDefault().getDefaultFieldCodec()));\n    \n    clearIndex();\n    \n    assertU(adoc(\"id\",\"1\", \"a_tdt\",\"2009-08-31T12:10:10.123Z\", \"b_tdt\",\"2009-08-31T12:10:10.124Z\"));\n    assertU(adoc(\"id\",\"2\", \"a_t\",\"how now brown cow\"));\n    assertU(commit()); // create more than one segment\n    assertU(adoc(\"id\",\"3\", \"a_t\",\"brown cow\"));\n    assertU(adoc(\"id\",\"4\"));\n    assertU(commit()); // create more than one segment\n    assertU(adoc(\"id\",\"5\"));\n    assertU(adoc(\"id\",\"6\", \"a_t\",\"cow cow cow cow cow\"));\n    assertU(commit());\n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}totaltermfreq('a_t','cow')\", \"fq\",\"id:6\"), \"//float[@name='score']='7.0'\");    \n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}ttf(a_t,'cow')\", \"fq\",\"id:6\"), \"//float[@name='score']='7.0'\");\n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}sumtotaltermfreq('a_t')\", \"fq\",\"id:6\"), \"//float[@name='score']='11.0'\");\n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}sttf(a_t)\", \"fq\",\"id:6\"), \"//float[@name='score']='11.0'\");\n  }\n\n","sourceOld":"  /**\n   * test collection-level term stats (new in 4.x indexes)\n   */\n  public void testTotalTermFreq() throws Exception {\n    assumeFalse(\"PreFlex codec does not support collection-level term stats\", \n        \"PreFlex\".equals(CodecProvider.getDefault().getDefaultFieldCodec()));\n    \n    clearIndex();\n    \n    assertU(adoc(\"id\",\"1\", \"a_tdt\",\"2009-08-31T12:10:10.123Z\", \"b_tdt\",\"2009-08-31T12:10:10.124Z\"));\n    assertU(adoc(\"id\",\"2\", \"a_t\",\"how now brown cow\"));\n    assertU(commit()); // create more than one segment\n    assertU(adoc(\"id\",\"3\", \"a_t\",\"brown cow\"));\n    assertU(adoc(\"id\",\"4\"));\n    assertU(commit()); // create more than one segment\n    assertU(adoc(\"id\",\"5\"));\n    assertU(adoc(\"id\",\"6\", \"a_t\",\"cow cow cow cow cow\"));\n    assertU(commit());\n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}totaltermfreq('a_t','cow')\", \"fq\",\"id:6\"), \"//float[@name='score']='7.0'\");    \n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}ttf(a_t,'cow')\", \"fq\",\"id:6\"), \"//float[@name='score']='7.0'\");\n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}sumtotaltermfreq('a_t')\", \"fq\",\"id:6\"), \"//float[@name='score']='11.0'\");\n    assertQ(req(\"fl\",\"*,score\",\"q\", \"{!func}sttf(a_t)\", \"fq\",\"id:6\"), \"//float[@name='score']='11.0'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eecaced7ccbed629f8cd10476146628eb442238a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["817d8435e9135b756f08ce6710ab0baac51bdf88"],"c26f00b574427b55127e869b935845554afde1fa":["c960367698164ae9ca0ccf62d27d93c9c24462b1","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c960367698164ae9ca0ccf62d27d93c9c24462b1":["eecaced7ccbed629f8cd10476146628eb442238a"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["c960367698164ae9ca0ccf62d27d93c9c24462b1"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c960367698164ae9ca0ccf62d27d93c9c24462b1"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c960367698164ae9ca0ccf62d27d93c9c24462b1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"eecaced7ccbed629f8cd10476146628eb442238a":["c960367698164ae9ca0ccf62d27d93c9c24462b1"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eecaced7ccbed629f8cd10476146628eb442238a","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"c960367698164ae9ca0ccf62d27d93c9c24462b1":["c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":["c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}