{"path":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#setUp().mjava","commits":[{"id":"849494cf2f3a96af5c8c84995108ddd8456fcd04","date":1372277913,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    Configuration conf = new Configuration();\n    conf.set(\"dfs.permissions.enabled\", \"false\");\n    \n    directory = new HdfsDirectory(new Path(dfsCluster.getURI().toString() + dataDir.getAbsolutePath() + \"/hdfs\"), conf);\n    \n    random = random();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    Configuration conf = new Configuration();\n    conf.set(\"dfs.permissions.enabled\", \"false\");\n    \n    directory = new HdfsDirectory(new Path(dfsCluster.getURI().toString() + dataDir.getAbsolutePath() + \"/hdfs\"), conf);\n    \n    random = random();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    Configuration conf = new Configuration();\n    conf.set(\"dfs.permissions.enabled\", \"false\");\n    \n    directory = new HdfsDirectory(new Path(dfsCluster.getURI().toString() + createTempDir().getAbsolutePath() + \"/hdfs\"), conf);\n    \n    random = random();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    Configuration conf = new Configuration();\n    conf.set(\"dfs.permissions.enabled\", \"false\");\n    \n    directory = new HdfsDirectory(new Path(dfsCluster.getURI().toString() + dataDir.getAbsolutePath() + \"/hdfs\"), conf);\n    \n    random = random();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    Configuration conf = new Configuration();\n    conf.set(\"dfs.permissions.enabled\", \"false\");\n    \n    directory = new HdfsDirectory(new Path(dfsCluster.getURI().toString() + createTempDir().getAbsolutePath() + \"/hdfs\"), conf);\n    \n    random = random();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    Configuration conf = new Configuration();\n    conf.set(\"dfs.permissions.enabled\", \"false\");\n    \n    directory = new HdfsDirectory(new Path(dfsCluster.getURI().toString() + dataDir.getAbsolutePath() + \"/hdfs\"), conf);\n    \n    random = random();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    Configuration conf = new Configuration();\n    conf.set(\"dfs.permissions.enabled\", \"false\");\n    \n    directory = new HdfsDirectory(new Path(dfsCluster.getURI().toString() + createTempDir().toFile().getAbsolutePath() + \"/hdfs\"), conf);\n    \n    random = random();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    Configuration conf = new Configuration();\n    conf.set(\"dfs.permissions.enabled\", \"false\");\n    \n    directory = new HdfsDirectory(new Path(dfsCluster.getURI().toString() + createTempDir().getAbsolutePath() + \"/hdfs\"), conf);\n    \n    random = random();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0a506fe165b26e024afa1aec8a4a7d758e837ff","date":1410971446,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    Configuration conf = new Configuration();\n    conf.set(\"dfs.permissions.enabled\", \"false\");\n    \n    directory = new HdfsDirectory(new Path(dfsCluster.getURI().toString() + createTempDir().toFile().getAbsolutePath() + \"/hdfs\"), NoLockFactory.getNoLockFactory(), conf);\n    \n    random = random();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    Configuration conf = new Configuration();\n    conf.set(\"dfs.permissions.enabled\", \"false\");\n    \n    directory = new HdfsDirectory(new Path(dfsCluster.getURI().toString() + createTempDir().toFile().getAbsolutePath() + \"/hdfs\"), conf);\n    \n    random = random();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"285cdc737de75b7cc7c284a156b20214deb67bca","date":1415535483,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    Configuration conf = new Configuration();\n    conf.set(\"dfs.permissions.enabled\", \"false\");\n    \n    directory = new HdfsDirectory(new Path(dfsCluster.getURI().toString() + createTempDir().toFile().getAbsolutePath() + \"/hdfs\"), NoLockFactory.INSTANCE, conf);\n    \n    random = random();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    Configuration conf = new Configuration();\n    conf.set(\"dfs.permissions.enabled\", \"false\");\n    \n    directory = new HdfsDirectory(new Path(dfsCluster.getURI().toString() + createTempDir().toFile().getAbsolutePath() + \"/hdfs\"), NoLockFactory.getNoLockFactory(), conf);\n    \n    random = random();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3def6e0e7b7566dd7f04a3514e77ee97a40fc78a","date":1429888091,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    Configuration conf = HdfsTestUtil.getClientConfiguration(dfsCluster);\n    conf.set(\"dfs.permissions.enabled\", \"false\");\n    \n    directory = new HdfsDirectory(new Path(HdfsTestUtil.getURI(dfsCluster) + createTempDir().toFile().getAbsolutePath() + \"/hdfs\"), NoLockFactory.INSTANCE, conf);\n    \n    random = random();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    Configuration conf = new Configuration();\n    conf.set(\"dfs.permissions.enabled\", \"false\");\n    \n    directory = new HdfsDirectory(new Path(dfsCluster.getURI().toString() + createTempDir().toFile().getAbsolutePath() + \"/hdfs\"), NoLockFactory.INSTANCE, conf);\n    \n    random = random();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61c6fb105d0ce095d846502a1d7a2a4bbf8fdecd","date":1466528770,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    Configuration conf = HdfsTestUtil.getClientConfiguration(dfsCluster);\n    conf.set(\"dfs.permissions.enabled\", \"false\");\n    \n    directory = new HdfsDirectory(new Path(dfsCluster.getURI().toString() + createTempDir().toFile().getAbsolutePath() + \"/hdfs\"), conf);\n    \n    random = random();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    Configuration conf = HdfsTestUtil.getClientConfiguration(dfsCluster);\n    conf.set(\"dfs.permissions.enabled\", \"false\");\n    \n    directory = new HdfsDirectory(new Path(HdfsTestUtil.getURI(dfsCluster) + createTempDir().toFile().getAbsolutePath() + \"/hdfs\"), NoLockFactory.INSTANCE, conf);\n    \n    random = random();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    Configuration conf = HdfsTestUtil.getClientConfiguration(dfsCluster);\n    conf.set(\"dfs.permissions.enabled\", \"false\");\n    \n    directory = new HdfsDirectory(new Path(dfsCluster.getURI().toString() + createTempDir().toFile().getAbsolutePath() + \"/hdfs\"), conf);\n    \n    random = random();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    Configuration conf = HdfsTestUtil.getClientConfiguration(dfsCluster);\n    conf.set(\"dfs.permissions.enabled\", \"false\");\n    \n    directory = new HdfsDirectory(new Path(HdfsTestUtil.getURI(dfsCluster) + createTempDir().toFile().getAbsolutePath() + \"/hdfs\"), NoLockFactory.INSTANCE, conf);\n    \n    random = random();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3019f3911bb78350685571486c3555df7cb8678c","date":1580917133,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    directoryConf = HdfsTestUtil.getClientConfiguration(dfsCluster);\n    directoryConf.set(\"dfs.permissions.enabled\", \"false\");\n    \n    directoryPath = new Path(dfsCluster.getURI().toString() + createTempDir().toFile().getAbsolutePath() + \"/hdfs\");\n    directory = new HdfsDirectory(directoryPath, directoryConf);\n    \n    random = random();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    Configuration conf = HdfsTestUtil.getClientConfiguration(dfsCluster);\n    conf.set(\"dfs.permissions.enabled\", \"false\");\n    \n    directory = new HdfsDirectory(new Path(dfsCluster.getURI().toString() + createTempDir().toFile().getAbsolutePath() + \"/hdfs\"), conf);\n    \n    random = random();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0a506fe165b26e024afa1aec8a4a7d758e837ff":["f4abec28b874149a7223e32cc7a01704c27790de"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["849494cf2f3a96af5c8c84995108ddd8456fcd04"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["849494cf2f3a96af5c8c84995108ddd8456fcd04","bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","849494cf2f3a96af5c8c84995108ddd8456fcd04"],"3019f3911bb78350685571486c3555df7cb8678c":["61c6fb105d0ce095d846502a1d7a2a4bbf8fdecd"],"285cdc737de75b7cc7c284a156b20214deb67bca":["a0a506fe165b26e024afa1aec8a4a7d758e837ff"],"61c6fb105d0ce095d846502a1d7a2a4bbf8fdecd":["3def6e0e7b7566dd7f04a3514e77ee97a40fc78a"],"f4abec28b874149a7223e32cc7a01704c27790de":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["3def6e0e7b7566dd7f04a3514e77ee97a40fc78a","61c6fb105d0ce095d846502a1d7a2a4bbf8fdecd"],"849494cf2f3a96af5c8c84995108ddd8456fcd04":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3019f3911bb78350685571486c3555df7cb8678c"],"3def6e0e7b7566dd7f04a3514e77ee97a40fc78a":["285cdc737de75b7cc7c284a156b20214deb67bca"]},"commit2Childs":{"a0a506fe165b26e024afa1aec8a4a7d758e837ff":["285cdc737de75b7cc7c284a156b20214deb67bca"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["f4abec28b874149a7223e32cc7a01704c27790de"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"3019f3911bb78350685571486c3555df7cb8678c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"285cdc737de75b7cc7c284a156b20214deb67bca":["3def6e0e7b7566dd7f04a3514e77ee97a40fc78a"],"61c6fb105d0ce095d846502a1d7a2a4bbf8fdecd":["3019f3911bb78350685571486c3555df7cb8678c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"f4abec28b874149a7223e32cc7a01704c27790de":["a0a506fe165b26e024afa1aec8a4a7d758e837ff"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"849494cf2f3a96af5c8c84995108ddd8456fcd04":["bb1f22cfa77230b5f05b7784feae5367f6bbb488","2a0f5bb79c600763ffe7b8141df59a3169d31e48","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","849494cf2f3a96af5c8c84995108ddd8456fcd04"],"3def6e0e7b7566dd7f04a3514e77ee97a40fc78a":["61c6fb105d0ce095d846502a1d7a2a4bbf8fdecd","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}