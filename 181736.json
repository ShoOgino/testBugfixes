{"path":"src/java/org/apache/solr/util/VersionedFile#delete(Collection[File]).mjava","commits":[{"id":"5391288921372c32bf6096df320497ad2d05757f","date":1200634221,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/VersionedFile#delete(Collection[File]).mjava","pathOld":"src/java/org/apache/solr/search/function/FileFloatSource#delete(Collection[File]).mjava","sourceNew":"  private static synchronized void delete(Collection<File> files) {\n    synchronized (deleteList) {\n      deleteList.addAll(files);\n      List<File> deleted = new ArrayList<File>();\n      for (File df : deleteList) {\n        try {\n          df.delete();\n          // deleteList.remove(df);\n          deleted.add(df);\n        } catch (SecurityException e) {\n          if (!df.exists()) {\n            deleted.add(df);\n          }\n        }\n      }\n      deleteList.removeAll(deleted);\n    }\n  }\n\n","sourceOld":"  private static synchronized void delete(Collection<File> files) {\n    synchronized (deleteList) {\n      deleteList.addAll(files);\n      List<File> deleted = new ArrayList<File>();\n      for (File df : deleteList) {\n        try {\n          df.delete();\n          // deleteList.remove(df);\n          deleted.add(df);\n        } catch (SecurityException e) {\n          if (!df.exists()) {\n            deleted.add(df);\n          }\n        }\n      }\n      deleteList.removeAll(deleted);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/VersionedFile#delete(Collection[File]).mjava","pathOld":"src/java/org/apache/solr/util/VersionedFile#delete(Collection[File]).mjava","sourceNew":"  private static synchronized void delete(Collection<File> files) {\n    synchronized (deleteList) {\n      deleteList.addAll(files);\n      List<File> deleted = new ArrayList<File>();\n      for (File df : deleteList) {\n        try {\n          df.delete();\n          // deleteList.remove(df);\n          deleted.add(df);\n        } catch (SecurityException e) {\n          if (!df.exists()) {\n            deleted.add(df);\n          }\n        }\n      }\n      deleteList.removeAll(deleted);\n    }\n  }\n\n","sourceOld":"  private static synchronized void delete(Collection<File> files) {\n    synchronized (deleteList) {\n      deleteList.addAll(files);\n      List<File> deleted = new ArrayList<File>();\n      for (File df : deleteList) {\n        try {\n          df.delete();\n          // deleteList.remove(df);\n          deleted.add(df);\n        } catch (SecurityException e) {\n          if (!df.exists()) {\n            deleted.add(df);\n          }\n        }\n      }\n      deleteList.removeAll(deleted);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"5391288921372c32bf6096df320497ad2d05757f":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["5391288921372c32bf6096df320497ad2d05757f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"5391288921372c32bf6096df320497ad2d05757f":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["5391288921372c32bf6096df320497ad2d05757f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}