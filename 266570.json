{"path":"lucene/core/src/test/org/apache/lucene/codecs/lucene80/TestIndexedDISI#assertAdvanceBeyondEnd(BitSet,Directory).mjava","commits":[{"id":"5acb8730dbbbb0f88bb8db80769aa6e9b29d817b","date":1583461779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene80/TestIndexedDISI#assertAdvanceBeyondEnd(BitSet,Directory).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene80/TestIndexedDISI#assertAdvanceBeyondEnd(FixedBitSet,Directory).mjava","sourceNew":"  // Checks that advance after the end of the blocks has been reached has the correct behaviour\n  private void assertAdvanceBeyondEnd(BitSet set, Directory dir) throws IOException {\n    final int cardinality = set.cardinality();\n    final byte denseRankPower = 9; // Not tested here so fixed to isolate factors\n    long length;\n    int jumpTableentryCount;\n    try (IndexOutput out = dir.createOutput(\"bar\", IOContext.DEFAULT)) {\n      jumpTableentryCount = IndexedDISI.writeBitSet(new BitSetIterator(set, cardinality), out, denseRankPower);\n    }\n\n    try (IndexInput in = dir.openInput(\"bar\", IOContext.DEFAULT)) {\n      BitSetIterator disi2 = new BitSetIterator(set, cardinality);\n      int doc = disi2.docID();\n      int index = 0;\n      while (doc < cardinality) {\n        doc = disi2.nextDoc();\n        index++;\n      }\n\n      IndexedDISI disi = new IndexedDISI(in, 0L, in.length(), jumpTableentryCount, denseRankPower, cardinality);\n      // Advance 1 docID beyond end\n      assertFalse(\"There should be no set bit beyond the valid docID range\", disi.advanceExact(set.length()));\n      disi.advance(doc); // Should be the special docID signifyin NO_MORE_DOCS from the BitSetIterator\n      assertEquals(\"The index when advancing beyond the last defined docID should be correct\",\n          index, disi.index()+1); // disi.index()+1 as the while-loop also counts the NO_MORE_DOCS\n    }\n  }\n\n","sourceOld":"  // Checks that advance after the end of the blocks has been reached has the correct behaviour\n  private void assertAdvanceBeyondEnd(FixedBitSet set, Directory dir) throws IOException {\n    final int cardinality = set.cardinality();\n    final byte denseRankPower = 9; // Not tested here so fixed to isolate factors\n    long length;\n    int jumpTableentryCount;\n    try (IndexOutput out = dir.createOutput(\"bar\", IOContext.DEFAULT)) {\n      jumpTableentryCount = IndexedDISI.writeBitSet(new BitSetIterator(set, cardinality), out, denseRankPower);\n    }\n\n    try (IndexInput in = dir.openInput(\"bar\", IOContext.DEFAULT)) {\n      BitSetIterator disi2 = new BitSetIterator(set, cardinality);\n      int doc = disi2.docID();\n      int index = 0;\n      while (doc < cardinality) {\n        doc = disi2.nextDoc();\n        index++;\n      }\n\n      IndexedDISI disi = new IndexedDISI(in, 0L, in.length(), jumpTableentryCount, denseRankPower, cardinality);\n      // Advance 1 docID beyond end\n      assertFalse(\"There should be no set bit beyond the valid docID range\", disi.advanceExact(set.length()));\n      disi.advance(doc); // Should be the special docID signifyin NO_MORE_DOCS from the BitSetIterator\n      assertEquals(\"The index when advancing beyond the last defined docID should be correct\",\n          index, disi.index()+1); // disi.index()+1 as the while-loop also counts the NO_MORE_DOCS\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5acb8730dbbbb0f88bb8db80769aa6e9b29d817b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5acb8730dbbbb0f88bb8db80769aa6e9b29d817b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5acb8730dbbbb0f88bb8db80769aa6e9b29d817b"],"5acb8730dbbbb0f88bb8db80769aa6e9b29d817b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}