{"path":"src/test/org/apache/solr/SolrInfoMBeanTest#getClassesForPackage(String).mjava","commits":[{"id":"f806379155a5d567cdcfaa274b4e14e6cdf79abd","date":1212689255,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/SolrInfoMBeanTest#getClassesForPackage(String).mjava","pathOld":"/dev/null","sourceNew":"  private static List<Class> getClassesForPackage(String pckgname) throws Exception {\n    ArrayList<File> directories = new ArrayList<File>();\n    ClassLoader cld = Thread.currentThread().getContextClassLoader();\n    String path = pckgname.replace('.', '/');\n    Enumeration<URL> resources = cld.getResources(path);\n    while (resources.hasMoreElements()) {\n      directories.add(new File(URLDecoder.decode(resources.nextElement().getPath(), \"UTF-8\")));\n    }\n      \n    ArrayList<Class> classes = new ArrayList<Class>();\n    for (File directory : directories) {\n      if (directory.exists()) {\n        String[] files = directory.list();\n        for (String file : files) {\n          if (file.endsWith(\".class\")) {\n             classes.add(Class.forName(pckgname + '.' + file.substring(0, file.length() - 6)));\n          }\n        }\n      }\n    }\n    return classes;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["48f8549ab62151df048dd021185c251d8663631c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"48f8549ab62151df048dd021185c251d8663631c","date":1246519373,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/test/org/apache/solr/SolrInfoMBeanTest#getClassesForPackage(String).mjava","pathOld":"src/test/org/apache/solr/SolrInfoMBeanTest#getClassesForPackage(String).mjava","sourceNew":"  private static List<Class> getClassesForPackage(String pckgname) throws Exception {\n    ArrayList<File> directories = new ArrayList<File>();\n    ClassLoader cld = Thread.currentThread().getContextClassLoader();\n    String path = pckgname.replace('.', '/');\n    Enumeration<URL> resources = cld.getResources(path);\n    while (resources.hasMoreElements()) {\n      directories.add(new File(resources.nextElement().getPath()));\n    }\n      \n    ArrayList<Class> classes = new ArrayList<Class>();\n    for (File directory : directories) {\n      if (directory.exists()) {\n        String[] files = directory.list();\n        for (String file : files) {\n          if (file.endsWith(\".class\")) {\n             classes.add(Class.forName(pckgname + '.' + file.substring(0, file.length() - 6)));\n          }\n        }\n      }\n    }\n    return classes;\n  }\n\n","sourceOld":"  private static List<Class> getClassesForPackage(String pckgname) throws Exception {\n    ArrayList<File> directories = new ArrayList<File>();\n    ClassLoader cld = Thread.currentThread().getContextClassLoader();\n    String path = pckgname.replace('.', '/');\n    Enumeration<URL> resources = cld.getResources(path);\n    while (resources.hasMoreElements()) {\n      directories.add(new File(URLDecoder.decode(resources.nextElement().getPath(), \"UTF-8\")));\n    }\n      \n    ArrayList<Class> classes = new ArrayList<Class>();\n    for (File directory : directories) {\n      if (directory.exists()) {\n        String[] files = directory.list();\n        for (String file : files) {\n          if (file.endsWith(\".class\")) {\n             classes.add(Class.forName(pckgname + '.' + file.substring(0, file.length() - 6)));\n          }\n        }\n      }\n    }\n    return classes;\n  }\n\n","bugFix":["f806379155a5d567cdcfaa274b4e14e6cdf79abd"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/SolrInfoMBeanTest#getClassesForPackage(String).mjava","pathOld":"src/test/org/apache/solr/SolrInfoMBeanTest#getClassesForPackage(String).mjava","sourceNew":"  private static List<Class> getClassesForPackage(String pckgname) throws Exception {\n    ArrayList<File> directories = new ArrayList<File>();\n    ClassLoader cld = Thread.currentThread().getContextClassLoader();\n    String path = pckgname.replace('.', '/');\n    Enumeration<URL> resources = cld.getResources(path);\n    while (resources.hasMoreElements()) {\n      directories.add(new File(resources.nextElement().getPath()));\n    }\n      \n    ArrayList<Class> classes = new ArrayList<Class>();\n    for (File directory : directories) {\n      if (directory.exists()) {\n        String[] files = directory.list();\n        for (String file : files) {\n          if (file.endsWith(\".class\")) {\n             classes.add(Class.forName(pckgname + '.' + file.substring(0, file.length() - 6)));\n          }\n        }\n      }\n    }\n    return classes;\n  }\n\n","sourceOld":"  private static List<Class> getClassesForPackage(String pckgname) throws Exception {\n    ArrayList<File> directories = new ArrayList<File>();\n    ClassLoader cld = Thread.currentThread().getContextClassLoader();\n    String path = pckgname.replace('.', '/');\n    Enumeration<URL> resources = cld.getResources(path);\n    while (resources.hasMoreElements()) {\n      directories.add(new File(resources.nextElement().getPath()));\n    }\n      \n    ArrayList<Class> classes = new ArrayList<Class>();\n    for (File directory : directories) {\n      if (directory.exists()) {\n        String[] files = directory.list();\n        for (String file : files) {\n          if (file.endsWith(\".class\")) {\n             classes.add(Class.forName(pckgname + '.' + file.substring(0, file.length() - 6)));\n          }\n        }\n      }\n    }\n    return classes;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"48f8549ab62151df048dd021185c251d8663631c":["f806379155a5d567cdcfaa274b4e14e6cdf79abd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["48f8549ab62151df048dd021185c251d8663631c"],"f806379155a5d567cdcfaa274b4e14e6cdf79abd":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"48f8549ab62151df048dd021185c251d8663631c":["ad94625fb8d088209f46650c8097196fec67f00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["f806379155a5d567cdcfaa274b4e14e6cdf79abd"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"f806379155a5d567cdcfaa274b4e14e6cdf79abd":["48f8549ab62151df048dd021185c251d8663631c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}