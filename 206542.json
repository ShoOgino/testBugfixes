{"path":"lucene/analysis/icu/src/test/org/apache/lucene/collation/TestICUCollationKeyAnalyzer#testThreadSafe().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/test/org/apache/lucene/collation/TestICUCollationKeyAnalyzer#testThreadSafe().mjava","pathOld":"modules/analysis/icu/src/test/org/apache/lucene/collation/TestICUCollationKeyAnalyzer#testThreadSafe().mjava","sourceNew":"  public void testThreadSafe() throws Exception {\n    int iters = 20 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < iters; i++) {\n      Locale locale = Locale.GERMAN;\n      Collator collator = Collator.getInstance(locale);\n      collator.setStrength(Collator.IDENTICAL);\n      assertThreadSafe(new ICUCollationKeyAnalyzer(TEST_VERSION_CURRENT, collator));\n    }\n  }\n\n","sourceOld":"  public void testThreadSafe() throws Exception {\n    int iters = 20 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < iters; i++) {\n      Locale locale = Locale.GERMAN;\n      Collator collator = Collator.getInstance(locale);\n      collator.setStrength(Collator.IDENTICAL);\n      assertThreadSafe(new ICUCollationKeyAnalyzer(TEST_VERSION_CURRENT, collator));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19e497fe4da591a79332da97681b8017d9c61165","date":1409030374,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/icu/src/test/org/apache/lucene/collation/TestICUCollationKeyAnalyzer#testThreadSafe().mjava","pathOld":"lucene/analysis/icu/src/test/org/apache/lucene/collation/TestICUCollationKeyAnalyzer#testThreadSafe().mjava","sourceNew":"  public void testThreadSafe() throws Exception {\n    int iters = 20 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < iters; i++) {\n      Locale locale = Locale.GERMAN;\n      Collator collator = Collator.getInstance(locale);\n      collator.setStrength(Collator.IDENTICAL);\n      assertThreadSafe(new ICUCollationKeyAnalyzer(collator));\n    }\n  }\n\n","sourceOld":"  public void testThreadSafe() throws Exception {\n    int iters = 20 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < iters; i++) {\n      Locale locale = Locale.GERMAN;\n      Collator collator = Collator.getInstance(locale);\n      collator.setStrength(Collator.IDENTICAL);\n      assertThreadSafe(new ICUCollationKeyAnalyzer(TEST_VERSION_CURRENT, collator));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56958d7f71a28824f20031ffbb2e13502a0274e","date":1425573902,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/test/org/apache/lucene/collation/TestICUCollationKeyAnalyzer#testThreadSafe().mjava","pathOld":"lucene/analysis/icu/src/test/org/apache/lucene/collation/TestICUCollationKeyAnalyzer#testThreadSafe().mjava","sourceNew":"  public void testThreadSafe() throws Exception {\n    int iters = 20 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < iters; i++) {\n      Locale locale = Locale.GERMAN;\n      Collator collator = Collator.getInstance(locale);\n      collator.setStrength(Collator.IDENTICAL);\n      Analyzer a = new ICUCollationKeyAnalyzer(collator);\n      assertThreadSafe(a);\n      a.close();\n    }\n  }\n\n","sourceOld":"  public void testThreadSafe() throws Exception {\n    int iters = 20 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < iters; i++) {\n      Locale locale = Locale.GERMAN;\n      Collator collator = Collator.getInstance(locale);\n      collator.setStrength(Collator.IDENTICAL);\n      assertThreadSafe(new ICUCollationKeyAnalyzer(collator));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/analysis/icu/src/test/org/apache/lucene/collation/TestICUCollationKeyAnalyzer#testThreadSafe().mjava","pathOld":"lucene/analysis/icu/src/test/org/apache/lucene/collation/TestICUCollationKeyAnalyzer#testThreadSafe().mjava","sourceNew":"  public void testThreadSafe() throws Exception {\n    int iters = 20 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < iters; i++) {\n      Locale locale = Locale.GERMAN;\n      Collator collator = Collator.getInstance(locale);\n      collator.setStrength(Collator.IDENTICAL);\n      Analyzer a = new ICUCollationKeyAnalyzer(collator);\n      assertThreadSafe(a);\n      a.close();\n    }\n  }\n\n","sourceOld":"  public void testThreadSafe() throws Exception {\n    int iters = 20 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < iters; i++) {\n      Locale locale = Locale.GERMAN;\n      Collator collator = Collator.getInstance(locale);\n      collator.setStrength(Collator.IDENTICAL);\n      assertThreadSafe(new ICUCollationKeyAnalyzer(collator));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7222ccbf51c085332eb28ee772f8dfb65e4d2b01","date":1601887943,"type":5,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUCollationKeyAnalyzer#testThreadSafe().mjava","pathOld":"lucene/analysis/icu/src/test/org/apache/lucene/collation/TestICUCollationKeyAnalyzer#testThreadSafe().mjava","sourceNew":"  public void testThreadSafe() throws Exception {\n    int iters = 20 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < iters; i++) {\n      Locale locale = Locale.GERMAN;\n      Collator collator = Collator.getInstance(locale);\n      collator.setStrength(Collator.IDENTICAL);\n      Analyzer a = new ICUCollationKeyAnalyzer(collator);\n      assertThreadSafe(a);\n      a.close();\n    }\n  }\n\n","sourceOld":"  public void testThreadSafe() throws Exception {\n    int iters = 20 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < iters; i++) {\n      Locale locale = Locale.GERMAN;\n      Collator collator = Collator.getInstance(locale);\n      collator.setStrength(Collator.IDENTICAL);\n      Analyzer a = new ICUCollationKeyAnalyzer(collator);\n      assertThreadSafe(a);\n      a.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["19e497fe4da591a79332da97681b8017d9c61165","a56958d7f71a28824f20031ffbb2e13502a0274e"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a56958d7f71a28824f20031ffbb2e13502a0274e":["19e497fe4da591a79332da97681b8017d9c61165"],"7222ccbf51c085332eb28ee772f8dfb65e4d2b01":["a56958d7f71a28824f20031ffbb2e13502a0274e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7222ccbf51c085332eb28ee772f8dfb65e4d2b01"],"19e497fe4da591a79332da97681b8017d9c61165":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["19e497fe4da591a79332da97681b8017d9c61165"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","7222ccbf51c085332eb28ee772f8dfb65e4d2b01"],"7222ccbf51c085332eb28ee772f8dfb65e4d2b01":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"19e497fe4da591a79332da97681b8017d9c61165":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a56958d7f71a28824f20031ffbb2e13502a0274e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}