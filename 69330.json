{"path":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAndCrashOnCreateOutputSegments2().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAndCrashOnCreateOutputSegments2().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAndCrashOnCreateOutputSegments2().mjava","sourceNew":"  /**\n   * index 1 document and commit.\n   * prepare for crashing.\n   * index 1 more document, and upon commit, creation of segments_2 will crash.\n   * \n   * @throws IOException\n   */\n  private void indexAndCrashOnCreateOutputSegments2() throws IOException {\n    Directory realDirectory = FSDirectory.open(path);\n    CrashAfterCreateOutput crashAfterCreateOutput = new CrashAfterCreateOutput(realDirectory);\n            \n    // NOTE: cannot use RandomIndexWriter because it\n    // sometimes commits:\n    IndexWriter indexWriter = new IndexWriter(crashAfterCreateOutput,\n                                              newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n            \n    indexWriter.addDocument(getDocument());\n    // writes segments_1:\n    indexWriter.commit();\n            \n    crashAfterCreateOutput.setCrashAfterCreateOutput(\"segments_2\");\n    indexWriter.addDocument(getDocument());\n    try {\n      // tries to write segments_2 but hits fake exc:\n      indexWriter.commit();\n      fail(\"should have hit CrashingException\");\n    } catch (CrashingException e) {\n      // expected\n    }\n    // writes segments_3\n    indexWriter.close();\n    assertFalse(realDirectory.fileExists(\"segments_2\"));\n    crashAfterCreateOutput.close();\n  }\n\n","sourceOld":"  /**\n   * index 1 document and commit.\n   * prepare for crashing.\n   * index 1 more document, and upon commit, creation of segments_2 will crash.\n   * \n   * @throws IOException\n   */\n  private void indexAndCrashOnCreateOutputSegments2() throws IOException {\n    Directory realDirectory = FSDirectory.open(path);\n    CrashAfterCreateOutput crashAfterCreateOutput = new CrashAfterCreateOutput(realDirectory);\n            \n    // NOTE: cannot use RandomIndexWriter because it\n    // sometimes commits:\n    IndexWriter indexWriter = new IndexWriter(crashAfterCreateOutput,\n                                              newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n            \n    indexWriter.addDocument(getDocument());\n    // writes segments_1:\n    indexWriter.commit();\n            \n    crashAfterCreateOutput.setCrashAfterCreateOutput(\"segments_2\");\n    indexWriter.addDocument(getDocument());\n    try {\n      // tries to write segments_2 but hits fake exc:\n      indexWriter.commit();\n      fail(\"should have hit CrashingException\");\n    } catch (CrashingException e) {\n      // expected\n    }\n    // writes segments_3\n    indexWriter.close();\n    assertFalse(realDirectory.fileExists(\"segments_2\"));\n    crashAfterCreateOutput.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAndCrashOnCreateOutputSegments2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAndCrashOnCreateOutputSegments2().mjava","sourceNew":"  /**\n   * index 1 document and commit.\n   * prepare for crashing.\n   * index 1 more document, and upon commit, creation of segments_2 will crash.\n   * \n   * @throws IOException\n   */\n  private void indexAndCrashOnCreateOutputSegments2() throws IOException {\n    Directory realDirectory = FSDirectory.open(path);\n    CrashAfterCreateOutput crashAfterCreateOutput = new CrashAfterCreateOutput(realDirectory);\n            \n    // NOTE: cannot use RandomIndexWriter because it\n    // sometimes commits:\n    IndexWriter indexWriter = new IndexWriter(crashAfterCreateOutput,\n                                              newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n            \n    indexWriter.addDocument(getDocument());\n    // writes segments_1:\n    indexWriter.commit();\n            \n    crashAfterCreateOutput.setCrashAfterCreateOutput(\"segments_2\");\n    indexWriter.addDocument(getDocument());\n    try {\n      // tries to write segments_2 but hits fake exc:\n      indexWriter.commit();\n      fail(\"should have hit CrashingException\");\n    } catch (CrashingException e) {\n      // expected\n    }\n    // writes segments_3\n    indexWriter.close();\n    assertFalse(realDirectory.fileExists(\"segments_2\"));\n    crashAfterCreateOutput.close();\n  }\n\n","sourceOld":"  /**\n   * index 1 document and commit.\n   * prepare for crashing.\n   * index 1 more document, and upon commit, creation of segments_2 will crash.\n   * \n   * @throws IOException\n   */\n  private void indexAndCrashOnCreateOutputSegments2() throws IOException {\n    Directory realDirectory = FSDirectory.open(path);\n    CrashAfterCreateOutput crashAfterCreateOutput = new CrashAfterCreateOutput(realDirectory);\n            \n    // NOTE: cannot use RandomIndexWriter because it\n    // sometimes commits:\n    IndexWriter indexWriter = new IndexWriter(crashAfterCreateOutput,\n                                              newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n            \n    indexWriter.addDocument(getDocument());\n    // writes segments_1:\n    indexWriter.commit();\n            \n    crashAfterCreateOutput.setCrashAfterCreateOutput(\"segments_2\");\n    indexWriter.addDocument(getDocument());\n    try {\n      // tries to write segments_2 but hits fake exc:\n      indexWriter.commit();\n      fail(\"should have hit CrashingException\");\n    } catch (CrashingException e) {\n      // expected\n    }\n    // writes segments_3\n    indexWriter.close();\n    assertFalse(realDirectory.fileExists(\"segments_2\"));\n    crashAfterCreateOutput.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAndCrashOnCreateOutputSegments2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAndCrashOnCreateOutputSegments2().mjava","sourceNew":"  /**\n   * index 1 document and commit.\n   * prepare for crashing.\n   * index 1 more document, and upon commit, creation of segments_2 will crash.\n   */\n  private void indexAndCrashOnCreateOutputSegments2() throws IOException {\n    Directory realDirectory = FSDirectory.open(path);\n    CrashAfterCreateOutput crashAfterCreateOutput = new CrashAfterCreateOutput(realDirectory);\n            \n    // NOTE: cannot use RandomIndexWriter because it\n    // sometimes commits:\n    IndexWriter indexWriter = new IndexWriter(crashAfterCreateOutput,\n                                              newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n            \n    indexWriter.addDocument(getDocument());\n    // writes segments_1:\n    indexWriter.commit();\n            \n    crashAfterCreateOutput.setCrashAfterCreateOutput(\"segments_2\");\n    indexWriter.addDocument(getDocument());\n    try {\n      // tries to write segments_2 but hits fake exc:\n      indexWriter.commit();\n      fail(\"should have hit CrashingException\");\n    } catch (CrashingException e) {\n      // expected\n    }\n    // writes segments_3\n    indexWriter.close();\n    assertFalse(realDirectory.fileExists(\"segments_2\"));\n    crashAfterCreateOutput.close();\n  }\n\n","sourceOld":"  /**\n   * index 1 document and commit.\n   * prepare for crashing.\n   * index 1 more document, and upon commit, creation of segments_2 will crash.\n   * \n   * @throws IOException\n   */\n  private void indexAndCrashOnCreateOutputSegments2() throws IOException {\n    Directory realDirectory = FSDirectory.open(path);\n    CrashAfterCreateOutput crashAfterCreateOutput = new CrashAfterCreateOutput(realDirectory);\n            \n    // NOTE: cannot use RandomIndexWriter because it\n    // sometimes commits:\n    IndexWriter indexWriter = new IndexWriter(crashAfterCreateOutput,\n                                              newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n            \n    indexWriter.addDocument(getDocument());\n    // writes segments_1:\n    indexWriter.commit();\n            \n    crashAfterCreateOutput.setCrashAfterCreateOutput(\"segments_2\");\n    indexWriter.addDocument(getDocument());\n    try {\n      // tries to write segments_2 but hits fake exc:\n      indexWriter.commit();\n      fail(\"should have hit CrashingException\");\n    } catch (CrashingException e) {\n      // expected\n    }\n    // writes segments_3\n    indexWriter.close();\n    assertFalse(realDirectory.fileExists(\"segments_2\"));\n    crashAfterCreateOutput.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cd4e13d997cf4fb810398a20a299c2c5a9f6b796","date":1395594336,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAndCrashOnCreateOutputSegments2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAndCrashOnCreateOutputSegments2().mjava","sourceNew":"  /**\n   * index 1 document and commit.\n   * prepare for crashing.\n   * index 1 more document, and upon commit, creation of segments_2 will crash.\n   */\n  private void indexAndCrashOnCreateOutputSegments2() throws IOException {\n    Directory realDirectory = FSDirectory.open(path);\n    CrashAfterCreateOutput crashAfterCreateOutput = new CrashAfterCreateOutput(realDirectory);\n            \n    // NOTE: cannot use RandomIndexWriter because it\n    // sometimes commits:\n    IndexWriter indexWriter = new IndexWriter(crashAfterCreateOutput,\n                                              newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n            \n    indexWriter.addDocument(getDocument());\n    // writes segments_1:\n    indexWriter.commit();\n            \n    crashAfterCreateOutput.setCrashAfterCreateOutput(\"segments_2\");\n    indexWriter.addDocument(getDocument());\n    try {\n      // tries to write segments_2 but hits fake exc:\n      indexWriter.commit();\n      fail(\"should have hit CrashingException\");\n    } catch (CrashingException e) {\n      // expected\n    }\n    // writes segments_3\n    indexWriter.close();\n    assertFalse(slowFileExists(realDirectory, \"segments_2\"));\n    crashAfterCreateOutput.close();\n  }\n\n","sourceOld":"  /**\n   * index 1 document and commit.\n   * prepare for crashing.\n   * index 1 more document, and upon commit, creation of segments_2 will crash.\n   */\n  private void indexAndCrashOnCreateOutputSegments2() throws IOException {\n    Directory realDirectory = FSDirectory.open(path);\n    CrashAfterCreateOutput crashAfterCreateOutput = new CrashAfterCreateOutput(realDirectory);\n            \n    // NOTE: cannot use RandomIndexWriter because it\n    // sometimes commits:\n    IndexWriter indexWriter = new IndexWriter(crashAfterCreateOutput,\n                                              newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n            \n    indexWriter.addDocument(getDocument());\n    // writes segments_1:\n    indexWriter.commit();\n            \n    crashAfterCreateOutput.setCrashAfterCreateOutput(\"segments_2\");\n    indexWriter.addDocument(getDocument());\n    try {\n      // tries to write segments_2 but hits fake exc:\n      indexWriter.commit();\n      fail(\"should have hit CrashingException\");\n    } catch (CrashingException e) {\n      // expected\n    }\n    // writes segments_3\n    indexWriter.close();\n    assertFalse(realDirectory.fileExists(\"segments_2\"));\n    crashAfterCreateOutput.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAndCrashOnCreateOutputSegments2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAndCrashOnCreateOutputSegments2().mjava","sourceNew":"  /**\n   * index 1 document and commit.\n   * prepare for crashing.\n   * index 1 more document, and upon commit, creation of segments_2 will crash.\n   */\n  private void indexAndCrashOnCreateOutputSegments2() throws IOException {\n    Directory realDirectory = FSDirectory.open(path);\n    CrashAfterCreateOutput crashAfterCreateOutput = new CrashAfterCreateOutput(realDirectory);\n            \n    // NOTE: cannot use RandomIndexWriter because it\n    // sometimes commits:\n    IndexWriter indexWriter = new IndexWriter(crashAfterCreateOutput,\n                                              newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n            \n    indexWriter.addDocument(getDocument());\n    // writes segments_1:\n    indexWriter.commit();\n            \n    crashAfterCreateOutput.setCrashAfterCreateOutput(\"segments_2\");\n    indexWriter.addDocument(getDocument());\n    try {\n      // tries to write segments_2 but hits fake exc:\n      indexWriter.commit();\n      fail(\"should have hit CrashingException\");\n    } catch (CrashingException e) {\n      // expected\n    }\n    // writes segments_3\n    indexWriter.shutdown();\n    assertFalse(slowFileExists(realDirectory, \"segments_2\"));\n    crashAfterCreateOutput.close();\n  }\n\n","sourceOld":"  /**\n   * index 1 document and commit.\n   * prepare for crashing.\n   * index 1 more document, and upon commit, creation of segments_2 will crash.\n   */\n  private void indexAndCrashOnCreateOutputSegments2() throws IOException {\n    Directory realDirectory = FSDirectory.open(path);\n    CrashAfterCreateOutput crashAfterCreateOutput = new CrashAfterCreateOutput(realDirectory);\n            \n    // NOTE: cannot use RandomIndexWriter because it\n    // sometimes commits:\n    IndexWriter indexWriter = new IndexWriter(crashAfterCreateOutput,\n                                              newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n            \n    indexWriter.addDocument(getDocument());\n    // writes segments_1:\n    indexWriter.commit();\n            \n    crashAfterCreateOutput.setCrashAfterCreateOutput(\"segments_2\");\n    indexWriter.addDocument(getDocument());\n    try {\n      // tries to write segments_2 but hits fake exc:\n      indexWriter.commit();\n      fail(\"should have hit CrashingException\");\n    } catch (CrashingException e) {\n      // expected\n    }\n    // writes segments_3\n    indexWriter.close();\n    assertFalse(slowFileExists(realDirectory, \"segments_2\"));\n    crashAfterCreateOutput.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAndCrashOnCreateOutputSegments2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAndCrashOnCreateOutputSegments2().mjava","sourceNew":"  /**\n   * index 1 document and commit.\n   * prepare for crashing.\n   * index 1 more document, and upon commit, creation of segments_2 will crash.\n   */\n  private void indexAndCrashOnCreateOutputSegments2() throws IOException {\n    Directory realDirectory = FSDirectory.open(path);\n    CrashAfterCreateOutput crashAfterCreateOutput = new CrashAfterCreateOutput(realDirectory);\n            \n    // NOTE: cannot use RandomIndexWriter because it\n    // sometimes commits:\n    IndexWriter indexWriter = new IndexWriter(crashAfterCreateOutput,\n                                              newIndexWriterConfig(new MockAnalyzer(random())));\n            \n    indexWriter.addDocument(getDocument());\n    // writes segments_1:\n    indexWriter.commit();\n            \n    crashAfterCreateOutput.setCrashAfterCreateOutput(\"segments_2\");\n    indexWriter.addDocument(getDocument());\n    try {\n      // tries to write segments_2 but hits fake exc:\n      indexWriter.commit();\n      fail(\"should have hit CrashingException\");\n    } catch (CrashingException e) {\n      // expected\n    }\n    // writes segments_3\n    indexWriter.shutdown();\n    assertFalse(slowFileExists(realDirectory, \"segments_2\"));\n    crashAfterCreateOutput.close();\n  }\n\n","sourceOld":"  /**\n   * index 1 document and commit.\n   * prepare for crashing.\n   * index 1 more document, and upon commit, creation of segments_2 will crash.\n   */\n  private void indexAndCrashOnCreateOutputSegments2() throws IOException {\n    Directory realDirectory = FSDirectory.open(path);\n    CrashAfterCreateOutput crashAfterCreateOutput = new CrashAfterCreateOutput(realDirectory);\n            \n    // NOTE: cannot use RandomIndexWriter because it\n    // sometimes commits:\n    IndexWriter indexWriter = new IndexWriter(crashAfterCreateOutput,\n                                              newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n            \n    indexWriter.addDocument(getDocument());\n    // writes segments_1:\n    indexWriter.commit();\n            \n    crashAfterCreateOutput.setCrashAfterCreateOutput(\"segments_2\");\n    indexWriter.addDocument(getDocument());\n    try {\n      // tries to write segments_2 but hits fake exc:\n      indexWriter.commit();\n      fail(\"should have hit CrashingException\");\n    } catch (CrashingException e) {\n      // expected\n    }\n    // writes segments_3\n    indexWriter.shutdown();\n    assertFalse(slowFileExists(realDirectory, \"segments_2\"));\n    crashAfterCreateOutput.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAndCrashOnCreateOutputSegments2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAndCrashOnCreateOutputSegments2().mjava","sourceNew":"  /**\n   * index 1 document and commit.\n   * prepare for crashing.\n   * index 1 more document, and upon commit, creation of segments_2 will crash.\n   */\n  private void indexAndCrashOnCreateOutputSegments2() throws IOException {\n    Directory realDirectory = FSDirectory.open(path);\n    CrashAfterCreateOutput crashAfterCreateOutput = new CrashAfterCreateOutput(realDirectory);\n            \n    // NOTE: cannot use RandomIndexWriter because it\n    // sometimes commits:\n    IndexWriter indexWriter = new IndexWriter(crashAfterCreateOutput,\n                                              newIndexWriterConfig(new MockAnalyzer(random())));\n            \n    indexWriter.addDocument(getDocument());\n    // writes segments_1:\n    indexWriter.commit();\n            \n    crashAfterCreateOutput.setCrashAfterCreateOutput(\"segments_2\");\n    indexWriter.addDocument(getDocument());\n    try {\n      // tries to write segments_2 but hits fake exc:\n      indexWriter.commit();\n      fail(\"should have hit CrashingException\");\n    } catch (CrashingException e) {\n      // expected\n    }\n    // writes segments_3\n    indexWriter.close();\n    assertFalse(slowFileExists(realDirectory, \"segments_2\"));\n    crashAfterCreateOutput.close();\n  }\n\n","sourceOld":"  /**\n   * index 1 document and commit.\n   * prepare for crashing.\n   * index 1 more document, and upon commit, creation of segments_2 will crash.\n   */\n  private void indexAndCrashOnCreateOutputSegments2() throws IOException {\n    Directory realDirectory = FSDirectory.open(path);\n    CrashAfterCreateOutput crashAfterCreateOutput = new CrashAfterCreateOutput(realDirectory);\n            \n    // NOTE: cannot use RandomIndexWriter because it\n    // sometimes commits:\n    IndexWriter indexWriter = new IndexWriter(crashAfterCreateOutput,\n                                              newIndexWriterConfig(new MockAnalyzer(random())));\n            \n    indexWriter.addDocument(getDocument());\n    // writes segments_1:\n    indexWriter.commit();\n            \n    crashAfterCreateOutput.setCrashAfterCreateOutput(\"segments_2\");\n    indexWriter.addDocument(getDocument());\n    try {\n      // tries to write segments_2 but hits fake exc:\n      indexWriter.commit();\n      fail(\"should have hit CrashingException\");\n    } catch (CrashingException e) {\n      // expected\n    }\n    // writes segments_3\n    indexWriter.shutdown();\n    assertFalse(slowFileExists(realDirectory, \"segments_2\"));\n    crashAfterCreateOutput.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"46e4a8bdfbafda795ef9c39a2bc2d47095770299","date":1410411846,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAndCrashOnCreateOutputSegments2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAndCrashOnCreateOutputSegments2().mjava","sourceNew":"  /**\n   * index 1 document and commit.\n   * prepare for crashing.\n   * index 1 more document, and upon commit, creation of segments_2 will crash.\n   */\n  private void indexAndCrashOnCreateOutputSegments2() throws IOException {\n    Directory realDirectory = FSDirectory.open(path);\n    CrashAfterCreateOutput crashAfterCreateOutput = new CrashAfterCreateOutput(realDirectory);\n            \n    // NOTE: cannot use RandomIndexWriter because it\n    // sometimes commits:\n    IndexWriter indexWriter = new IndexWriter(crashAfterCreateOutput,\n                                              newIndexWriterConfig(new MockAnalyzer(random())));\n            \n    indexWriter.addDocument(getDocument());\n    // writes segments_1:\n    indexWriter.commit();\n            \n    crashAfterCreateOutput.setCrashAfterCreateOutput(\"pending_segments_2\");\n    indexWriter.addDocument(getDocument());\n    try {\n      // tries to write segments_2 but hits fake exc:\n      indexWriter.commit();\n      fail(\"should have hit CrashingException\");\n    } catch (CrashingException e) {\n      // expected\n    }\n    // writes segments_3\n    indexWriter.close();\n    assertFalse(slowFileExists(realDirectory, \"segments_2\"));\n    crashAfterCreateOutput.close();\n  }\n\n","sourceOld":"  /**\n   * index 1 document and commit.\n   * prepare for crashing.\n   * index 1 more document, and upon commit, creation of segments_2 will crash.\n   */\n  private void indexAndCrashOnCreateOutputSegments2() throws IOException {\n    Directory realDirectory = FSDirectory.open(path);\n    CrashAfterCreateOutput crashAfterCreateOutput = new CrashAfterCreateOutput(realDirectory);\n            \n    // NOTE: cannot use RandomIndexWriter because it\n    // sometimes commits:\n    IndexWriter indexWriter = new IndexWriter(crashAfterCreateOutput,\n                                              newIndexWriterConfig(new MockAnalyzer(random())));\n            \n    indexWriter.addDocument(getDocument());\n    // writes segments_1:\n    indexWriter.commit();\n            \n    crashAfterCreateOutput.setCrashAfterCreateOutput(\"segments_2\");\n    indexWriter.addDocument(getDocument());\n    try {\n      // tries to write segments_2 but hits fake exc:\n      indexWriter.commit();\n      fail(\"should have hit CrashingException\");\n    } catch (CrashingException e) {\n      // expected\n    }\n    // writes segments_3\n    indexWriter.close();\n    assertFalse(slowFileExists(realDirectory, \"segments_2\"));\n    crashAfterCreateOutput.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAndCrashOnCreateOutputSegments2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAndCrashOnCreateOutputSegments2().mjava","sourceNew":"  /**\n   * index 1 document and commit.\n   * prepare for crashing.\n   * index 1 more document, and upon commit, creation of segments_2 will crash.\n   */\n  private void indexAndCrashOnCreateOutputSegments2() throws IOException {\n    Directory realDirectory = FSDirectory.open(path);\n    CrashAfterCreateOutput crashAfterCreateOutput = new CrashAfterCreateOutput(realDirectory);\n            \n    // NOTE: cannot use RandomIndexWriter because it\n    // sometimes commits:\n    IndexWriter indexWriter = new IndexWriter(crashAfterCreateOutput,\n                                              newIndexWriterConfig(new MockAnalyzer(random())));\n            \n    indexWriter.addDocument(getDocument());\n    // writes segments_1:\n    indexWriter.commit();\n            \n    crashAfterCreateOutput.setCrashAfterCreateOutput(\"pending_segments_2\");\n    indexWriter.addDocument(getDocument());\n    // tries to write segments_2 but hits fake exc:\n    expectThrows(CrashingException.class, () -> {\n      indexWriter.commit();\n    });\n\n    // writes segments_3\n    indexWriter.close();\n    assertFalse(slowFileExists(realDirectory, \"segments_2\"));\n    crashAfterCreateOutput.close();\n  }\n\n","sourceOld":"  /**\n   * index 1 document and commit.\n   * prepare for crashing.\n   * index 1 more document, and upon commit, creation of segments_2 will crash.\n   */\n  private void indexAndCrashOnCreateOutputSegments2() throws IOException {\n    Directory realDirectory = FSDirectory.open(path);\n    CrashAfterCreateOutput crashAfterCreateOutput = new CrashAfterCreateOutput(realDirectory);\n            \n    // NOTE: cannot use RandomIndexWriter because it\n    // sometimes commits:\n    IndexWriter indexWriter = new IndexWriter(crashAfterCreateOutput,\n                                              newIndexWriterConfig(new MockAnalyzer(random())));\n            \n    indexWriter.addDocument(getDocument());\n    // writes segments_1:\n    indexWriter.commit();\n            \n    crashAfterCreateOutput.setCrashAfterCreateOutput(\"pending_segments_2\");\n    indexWriter.addDocument(getDocument());\n    try {\n      // tries to write segments_2 but hits fake exc:\n      indexWriter.commit();\n      fail(\"should have hit CrashingException\");\n    } catch (CrashingException e) {\n      // expected\n    }\n    // writes segments_3\n    indexWriter.close();\n    assertFalse(slowFileExists(realDirectory, \"segments_2\"));\n    crashAfterCreateOutput.close();\n  }\n\n","bugFix":["fb8c6c8b35c7806f1ef4d37d52944b67158db2d1"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"46e4a8bdfbafda795ef9c39a2bc2d47095770299":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"cd4e13d997cf4fb810398a20a299c2c5a9f6b796":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["46e4a8bdfbafda795ef9c39a2bc2d47095770299"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["cd4e13d997cf4fb810398a20a299c2c5a9f6b796"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["cd4e13d997cf4fb810398a20a299c2c5a9f6b796"],"46e4a8bdfbafda795ef9c39a2bc2d47095770299":["05fe562aa248790944d43cdd478f512572835ba0"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"cd4e13d997cf4fb810398a20a299c2c5a9f6b796":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["46e4a8bdfbafda795ef9c39a2bc2d47095770299"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}