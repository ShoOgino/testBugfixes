{"path":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/DistanceQuery#distanceSubQueryNotAllowed().mjava","commits":[{"id":"d04b321158481d3895702b3cbf6821a3083e6c15","date":1120530543,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/DistanceQuery#distanceSubQueryNotAllowed().mjava","pathOld":"/dev/null","sourceNew":"  public String distanceSubQueryNotAllowed() {\n    Iterator sqi = getSubQueriesIterator();\n    while (sqi.hasNext()) {\n      Object leq = sqi.next();\n      if (leq instanceof DistanceSubQuery) {\n        DistanceSubQuery dsq = (DistanceSubQuery) leq;\n        String m = dsq.distanceSubQueryNotAllowed();\n        if (m != null) {\n          return m; \n        }\n      } else {\n        return \"Operator \" + getOperatorName() + \" does not allow subquery \" + leq.toString();\n      }\n    }\n    return null; /* subqueries acceptable */\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/DistanceQuery#distanceSubQueryNotAllowed().mjava","pathOld":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/DistanceQuery#distanceSubQueryNotAllowed().mjava","sourceNew":"  public String distanceSubQueryNotAllowed() {\n    Iterator<?> sqi = getSubQueriesIterator();\n    while (sqi.hasNext()) {\n      Object leq = sqi.next();\n      if (leq instanceof DistanceSubQuery) {\n        DistanceSubQuery dsq = (DistanceSubQuery) leq;\n        String m = dsq.distanceSubQueryNotAllowed();\n        if (m != null) {\n          return m; \n        }\n      } else {\n        return \"Operator \" + getOperatorName() + \" does not allow subquery \" + leq.toString();\n      }\n    }\n    return null; /* subqueries acceptable */\n  }\n\n","sourceOld":"  public String distanceSubQueryNotAllowed() {\n    Iterator sqi = getSubQueriesIterator();\n    while (sqi.hasNext()) {\n      Object leq = sqi.next();\n      if (leq instanceof DistanceSubQuery) {\n        DistanceSubQuery dsq = (DistanceSubQuery) leq;\n        String m = dsq.distanceSubQueryNotAllowed();\n        if (m != null) {\n          return m; \n        }\n      } else {\n        return \"Operator \" + getOperatorName() + \" does not allow subquery \" + leq.toString();\n      }\n    }\n    return null; /* subqueries acceptable */\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/DistanceQuery#distanceSubQueryNotAllowed().mjava","pathOld":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/DistanceQuery#distanceSubQueryNotAllowed().mjava","sourceNew":"  public String distanceSubQueryNotAllowed() {\n    Iterator<?> sqi = getSubQueriesIterator();\n    while (sqi.hasNext()) {\n      Object leq = sqi.next();\n      if (leq instanceof DistanceSubQuery) {\n        DistanceSubQuery dsq = (DistanceSubQuery) leq;\n        String m = dsq.distanceSubQueryNotAllowed();\n        if (m != null) {\n          return m; \n        }\n      } else {\n        return \"Operator \" + getOperatorName() + \" does not allow subquery \" + leq.toString();\n      }\n    }\n    return null; /* subqueries acceptable */\n  }\n\n","sourceOld":"  public String distanceSubQueryNotAllowed() {\n    Iterator<?> sqi = getSubQueriesIterator();\n    while (sqi.hasNext()) {\n      Object leq = sqi.next();\n      if (leq instanceof DistanceSubQuery) {\n        DistanceSubQuery dsq = (DistanceSubQuery) leq;\n        String m = dsq.distanceSubQueryNotAllowed();\n        if (m != null) {\n          return m; \n        }\n      } else {\n        return \"Operator \" + getOperatorName() + \" does not allow subquery \" + leq.toString();\n      }\n    }\n    return null; /* subqueries acceptable */\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d04b321158481d3895702b3cbf6821a3083e6c15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["d04b321158481d3895702b3cbf6821a3083e6c15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"]},"commit2Childs":{"d04b321158481d3895702b3cbf6821a3083e6c15":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d04b321158481d3895702b3cbf6821a3083e6c15"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}