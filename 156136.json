{"path":"src/java/org/apache/solr/core/Config#Config(String,String,InputStream,String).mjava","commits":[{"id":"abbfb3ad1f90df8ebf4751c8e72b2756ace50699","date":1190497478,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/Config#Config(String,String,InputStream,String).mjava","pathOld":"/dev/null","sourceNew":"  public Config(String instanceDir, String name, InputStream is, String prefix) throws ParserConfigurationException, IOException, SAXException \n  {\n    if( instanceDir == null ) {\n      instanceDir = Config.locateInstanceDir();\n    }\n    \n    this.instanceDir = normalizeDir(instanceDir);\n    log.info(\"Solr home set to '\" + instanceDir + \"'\");\n    classLoader = null;\n    \n    this.name = name;\n    this.prefix = prefix;\n    if (prefix!=null && !prefix.endsWith(\"/\")) prefix += '/';\n    InputStream lis = is;\n    try {\n      if (lis == null)\n        lis = openResource(name);\n      \n      javax.xml.parsers.DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n      doc = builder.parse(lis);\n\n    \tDOMUtil.substituteSystemProperties(doc);\n    } catch( SolrException e ){\n    \tSolrException.log(log,\"Error in \"+name,e);\n    \tthrow e;\n    } finally {\n      // if this opens the resource, it also closes it\n      if (lis != is)\n        lis.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014","date":1195912306,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/Config#Config(String,String,InputStream,String).mjava","pathOld":"src/java/org/apache/solr/core/Config#Config(String,String,InputStream,String).mjava","sourceNew":"  public Config(String instanceDir, String name, InputStream is, String prefix) throws ParserConfigurationException, IOException, SAXException \n  {\n    this.loader = new SolrResourceLoader( instanceDir );\n    this.name = name;\n    this.prefix = prefix;\n    \n    if (prefix!=null && !prefix.endsWith(\"/\")) prefix += '/';\n    InputStream lis = is;\n    try {\n      if (lis == null)\n        lis = loader.openResource(name);\n      \n      javax.xml.parsers.DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n      doc = builder.parse(lis);\n\n    \tDOMUtil.substituteSystemProperties(doc);\n    } catch( SolrException e ){\n    \tSolrException.log(log,\"Error in \"+name,e);\n    \tthrow e;\n    } finally {\n      // if this opens the resource, it also closes it\n      if (lis != is)\n        lis.close();\n    }\n  }\n\n","sourceOld":"  public Config(String instanceDir, String name, InputStream is, String prefix) throws ParserConfigurationException, IOException, SAXException \n  {\n    if( instanceDir == null ) {\n      instanceDir = Config.locateInstanceDir();\n    }\n    \n    this.instanceDir = normalizeDir(instanceDir);\n    log.info(\"Solr home set to '\" + instanceDir + \"'\");\n    classLoader = null;\n    \n    this.name = name;\n    this.prefix = prefix;\n    if (prefix!=null && !prefix.endsWith(\"/\")) prefix += '/';\n    InputStream lis = is;\n    try {\n      if (lis == null)\n        lis = openResource(name);\n      \n      javax.xml.parsers.DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n      doc = builder.parse(lis);\n\n    \tDOMUtil.substituteSystemProperties(doc);\n    } catch( SolrException e ){\n    \tSolrException.log(log,\"Error in \"+name,e);\n    \tthrow e;\n    } finally {\n      // if this opens the resource, it also closes it\n      if (lis != is)\n        lis.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"048361614025800e582bfc7a7b0329dc6fd6a95e","date":1196999392,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/Config#Config(SolrResourceLoader,String,InputStream,String).mjava","pathOld":"src/java/org/apache/solr/core/Config#Config(String,String,InputStream,String).mjava","sourceNew":"  public Config(SolrResourceLoader loader, String name, InputStream is, String prefix) throws ParserConfigurationException, IOException, SAXException \n  {\n    this.loader = loader;\n    this.name = name;\n    this.prefix = prefix;\n    \n    if (prefix!=null && !prefix.endsWith(\"/\")) prefix += '/';\n    InputStream lis = is;\n    try {\n      if (lis == null)\n        lis = loader.openResource(name);\n      \n      javax.xml.parsers.DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n      doc = builder.parse(lis);\n\n    \tDOMUtil.substituteSystemProperties(doc);\n    } catch( SolrException e ){\n    \tSolrException.log(log,\"Error in \"+name,e);\n    \tthrow e;\n    } finally {\n      // if this opens the resource, it also closes it\n      if (lis != is)\n        lis.close();\n    }\n  }\n\n","sourceOld":"  public Config(String instanceDir, String name, InputStream is, String prefix) throws ParserConfigurationException, IOException, SAXException \n  {\n    this.loader = new SolrResourceLoader( instanceDir );\n    this.name = name;\n    this.prefix = prefix;\n    \n    if (prefix!=null && !prefix.endsWith(\"/\")) prefix += '/';\n    InputStream lis = is;\n    try {\n      if (lis == null)\n        lis = loader.openResource(name);\n      \n      javax.xml.parsers.DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n      doc = builder.parse(lis);\n\n    \tDOMUtil.substituteSystemProperties(doc);\n    } catch( SolrException e ){\n    \tSolrException.log(log,\"Error in \"+name,e);\n    \tthrow e;\n    } finally {\n      // if this opens the resource, it also closes it\n      if (lis != is)\n        lis.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"048361614025800e582bfc7a7b0329dc6fd6a95e":["fcf52a7da226d8d3756cc8bf9f3ae1f39952b014"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014":["abbfb3ad1f90df8ebf4751c8e72b2756ace50699"],"abbfb3ad1f90df8ebf4751c8e72b2756ace50699":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"048361614025800e582bfc7a7b0329dc6fd6a95e":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["abbfb3ad1f90df8ebf4751c8e72b2756ace50699"],"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014":["048361614025800e582bfc7a7b0329dc6fd6a95e"],"abbfb3ad1f90df8ebf4751c8e72b2756ace50699":["fcf52a7da226d8d3756cc8bf9f3ae1f39952b014"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["048361614025800e582bfc7a7b0329dc6fd6a95e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}