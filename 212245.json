{"path":"src/java/org/apache/lucene/store/FSDirectory#create(boolean).mjava","commits":[{"id":"284c1d3c8b19931bf6f312fae7470487f5d9e580","date":1163805527,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/FSDirectory#create(boolean).mjava","pathOld":"src/java/org/apache/lucene/store/FSDirectory#create().mjava","sourceNew":"  private synchronized void create(boolean doRemoveOldFiles) throws IOException {\n    if (!directory.exists())\n      if (!directory.mkdirs())\n        throw new IOException(\"Cannot create directory: \" + directory);\n\n    if (!directory.isDirectory())\n      throw new IOException(directory + \" not a directory\");\n\n    if (doRemoveOldFiles) {\n      String[] files = directory.list(IndexFileNameFilter.getFilter());            // clear old files\n      if (files == null)\n        throw new IOException(\"Cannot read directory \" + directory.getAbsolutePath());\n      for (int i = 0; i < files.length; i++) {\n        File file = new File(directory, files[i]);\n        if (!file.delete())\n          throw new IOException(\"Cannot delete \" + file);\n      }\n    }\n\n    lockFactory.clearAllLocks();\n  }\n\n","sourceOld":"  private synchronized void create() throws IOException {\n    if (!directory.exists())\n      if (!directory.mkdirs())\n        throw new IOException(\"Cannot create directory: \" + directory);\n\n    if (!directory.isDirectory())\n      throw new IOException(directory + \" not a directory\");\n\n    String[] files = directory.list(new IndexFileNameFilter());            // clear old files\n    if (files == null)\n      throw new IOException(\"Cannot read directory \" + directory.getAbsolutePath());\n    for (int i = 0; i < files.length; i++) {\n      File file = new File(directory, files[i]);\n      if (!file.delete())\n        throw new IOException(\"Cannot delete \" + file);\n    }\n\n    lockFactory.clearAllLocks();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93a838d8ba57e85e9db126e862958dafc7da4d5b","date":1168639785,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/FSDirectory#create(boolean).mjava","pathOld":"src/java/org/apache/lucene/store/FSDirectory#create(boolean).mjava","sourceNew":"  private synchronized void create(boolean doRemoveOldFiles) throws IOException {\n    if (!directory.exists())\n      if (!directory.mkdirs())\n        throw new IOException(\"Cannot create directory: \" + directory);\n\n    if (!directory.isDirectory())\n      throw new IOException(directory + \" not a directory\");\n\n    if (doRemoveOldFiles) {\n      String[] files = directory.list(IndexFileNameFilter.getFilter());            // clear old files\n      if (files == null)\n        throw new IOException(\"Cannot read directory \" + directory.getAbsolutePath());\n      for (int i = 0; i < files.length; i++) {\n        File file = new File(directory, files[i]);\n        if (!file.delete())\n          throw new IOException(\"Cannot delete \" + file);\n      }\n    }\n\n    if (lockFactory.getLockPrefix() != null) {\n      lockFactory.clearAllLocks();\n    } else {\n      // Lock file is stored in the index, so we just remove\n      // it ourselves here:\n      File lockFile = new File(directory, IndexWriter.WRITE_LOCK_NAME);\n      if (lockFile.exists() && !lockFile.delete())\n        throw new IOException(\"Cannot delete \" + lockFile);\n    }\n  }\n\n","sourceOld":"  private synchronized void create(boolean doRemoveOldFiles) throws IOException {\n    if (!directory.exists())\n      if (!directory.mkdirs())\n        throw new IOException(\"Cannot create directory: \" + directory);\n\n    if (!directory.isDirectory())\n      throw new IOException(directory + \" not a directory\");\n\n    if (doRemoveOldFiles) {\n      String[] files = directory.list(IndexFileNameFilter.getFilter());            // clear old files\n      if (files == null)\n        throw new IOException(\"Cannot read directory \" + directory.getAbsolutePath());\n      for (int i = 0; i < files.length; i++) {\n        File file = new File(directory, files[i]);\n        if (!file.delete())\n          throw new IOException(\"Cannot delete \" + file);\n      }\n    }\n\n    lockFactory.clearAllLocks();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41513cff78959d7ba78c45f8048f7c196f449f87","date":1168702834,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/FSDirectory#create(boolean).mjava","pathOld":"src/java/org/apache/lucene/store/FSDirectory#create(boolean).mjava","sourceNew":"  private synchronized void create(boolean doRemoveOldFiles) throws IOException {\n    if (!directory.exists())\n      if (!directory.mkdirs())\n        throw new IOException(\"Cannot create directory: \" + directory);\n\n    if (!directory.isDirectory())\n      throw new IOException(directory + \" not a directory\");\n\n    if (doRemoveOldFiles) {\n      String[] files = directory.list(IndexFileNameFilter.getFilter());            // clear old files\n      if (files == null)\n        throw new IOException(\"Cannot read directory \" + directory.getAbsolutePath());\n      for (int i = 0; i < files.length; i++) {\n        File file = new File(directory, files[i]);\n        if (!file.delete())\n          throw new IOException(\"Cannot delete \" + file);\n      }\n    }\n\n    lockFactory.clearLock(IndexWriter.WRITE_LOCK_NAME);\n  }\n\n","sourceOld":"  private synchronized void create(boolean doRemoveOldFiles) throws IOException {\n    if (!directory.exists())\n      if (!directory.mkdirs())\n        throw new IOException(\"Cannot create directory: \" + directory);\n\n    if (!directory.isDirectory())\n      throw new IOException(directory + \" not a directory\");\n\n    if (doRemoveOldFiles) {\n      String[] files = directory.list(IndexFileNameFilter.getFilter());            // clear old files\n      if (files == null)\n        throw new IOException(\"Cannot read directory \" + directory.getAbsolutePath());\n      for (int i = 0; i < files.length; i++) {\n        File file = new File(directory, files[i]);\n        if (!file.delete())\n          throw new IOException(\"Cannot delete \" + file);\n      }\n    }\n\n    if (lockFactory.getLockPrefix() != null) {\n      lockFactory.clearAllLocks();\n    } else {\n      // Lock file is stored in the index, so we just remove\n      // it ourselves here:\n      File lockFile = new File(directory, IndexWriter.WRITE_LOCK_NAME);\n      if (lockFile.exists() && !lockFile.delete())\n        throw new IOException(\"Cannot delete \" + lockFile);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66b12ba4967665216eeb706b58d424c51fb3641a","date":1169160423,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/FSDirectory#create().mjava","pathOld":"src/java/org/apache/lucene/store/FSDirectory#create(boolean).mjava","sourceNew":"  private void create() throws IOException {\n    if (directory.exists()) {\n      String[] files = directory.list(IndexFileNameFilter.getFilter());            // clear old files\n      if (files == null)\n        throw new IOException(\"Cannot read directory \" + directory.getAbsolutePath());\n      for (int i = 0; i < files.length; i++) {\n        File file = new File(directory, files[i]);\n        if (!file.delete())\n          throw new IOException(\"Cannot delete \" + file);\n      }\n    }\n    lockFactory.clearLock(IndexWriter.WRITE_LOCK_NAME);\n  }\n\n","sourceOld":"  private synchronized void create(boolean doRemoveOldFiles) throws IOException {\n    if (!directory.exists())\n      if (!directory.mkdirs())\n        throw new IOException(\"Cannot create directory: \" + directory);\n\n    if (!directory.isDirectory())\n      throw new IOException(directory + \" not a directory\");\n\n    if (doRemoveOldFiles) {\n      String[] files = directory.list(IndexFileNameFilter.getFilter());            // clear old files\n      if (files == null)\n        throw new IOException(\"Cannot read directory \" + directory.getAbsolutePath());\n      for (int i = 0; i < files.length; i++) {\n        File file = new File(directory, files[i]);\n        if (!file.delete())\n          throw new IOException(\"Cannot delete \" + file);\n      }\n    }\n\n    lockFactory.clearLock(IndexWriter.WRITE_LOCK_NAME);\n  }\n\n","bugFix":null,"bugIntro":["daaba12f8cbc8a402310a4c4d0ee3fe71f67b051"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"66b12ba4967665216eeb706b58d424c51fb3641a":["41513cff78959d7ba78c45f8048f7c196f449f87"],"284c1d3c8b19931bf6f312fae7470487f5d9e580":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"93a838d8ba57e85e9db126e862958dafc7da4d5b":["284c1d3c8b19931bf6f312fae7470487f5d9e580"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"41513cff78959d7ba78c45f8048f7c196f449f87":["93a838d8ba57e85e9db126e862958dafc7da4d5b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["66b12ba4967665216eeb706b58d424c51fb3641a"]},"commit2Childs":{"66b12ba4967665216eeb706b58d424c51fb3641a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"284c1d3c8b19931bf6f312fae7470487f5d9e580":["93a838d8ba57e85e9db126e862958dafc7da4d5b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["284c1d3c8b19931bf6f312fae7470487f5d9e580"],"93a838d8ba57e85e9db126e862958dafc7da4d5b":["41513cff78959d7ba78c45f8048f7c196f449f87"],"41513cff78959d7ba78c45f8048f7c196f449f87":["66b12ba4967665216eeb706b58d424c51fb3641a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}