{"path":"solr/core/src/java/org/apache/solr/schema/AbstractSubTypeFieldType#init(IndexSchema,Map[String,String]).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/AbstractSubTypeFieldType#init(IndexSchema,Map[String,String]).mjava","pathOld":"solr/src/java/org/apache/solr/schema/AbstractSubTypeFieldType#init(IndexSchema,Map[String,String]).mjava","sourceNew":"  @Override\n  protected void init(IndexSchema schema, Map<String, String> args) {\n    this.schema = schema;\n    //it's not a first class citizen for the IndexSchema\n    SolrParams p = new MapSolrParams(args);\n    String subFT = p.get(SUB_FIELD_TYPE);\n    String subSuffix = p.get(SUB_FIELD_SUFFIX);\n    if (subFT != null) {\n      args.remove(SUB_FIELD_TYPE);\n      subType = schema.getFieldTypeByName(subFT.trim());\n      suffix = POLY_FIELD_SEPARATOR + subType.typeName;\n    } else if (subSuffix != null) {\n      args.remove(SUB_FIELD_SUFFIX);\n      suffix = subSuffix;\n    } else {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"The field type: \" + typeName\n              + \" must specify the \" +\n              SUB_FIELD_TYPE + \" attribute or the \" + SUB_FIELD_SUFFIX + \" attribute.\");\n    }\n\n  }\n\n","sourceOld":"  @Override\n  protected void init(IndexSchema schema, Map<String, String> args) {\n    this.schema = schema;\n    //it's not a first class citizen for the IndexSchema\n    SolrParams p = new MapSolrParams(args);\n    String subFT = p.get(SUB_FIELD_TYPE);\n    String subSuffix = p.get(SUB_FIELD_SUFFIX);\n    if (subFT != null) {\n      args.remove(SUB_FIELD_TYPE);\n      subType = schema.getFieldTypeByName(subFT.trim());\n      suffix = POLY_FIELD_SEPARATOR + subType.typeName;\n    } else if (subSuffix != null) {\n      args.remove(SUB_FIELD_SUFFIX);\n      suffix = subSuffix;\n    } else {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"The field type: \" + typeName\n              + \" must specify the \" +\n              SUB_FIELD_TYPE + \" attribute or the \" + SUB_FIELD_SUFFIX + \" attribute.\");\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/AbstractSubTypeFieldType#init(IndexSchema,Map[String,String]).mjava","pathOld":"solr/src/java/org/apache/solr/schema/AbstractSubTypeFieldType#init(IndexSchema,Map[String,String]).mjava","sourceNew":"  @Override\n  protected void init(IndexSchema schema, Map<String, String> args) {\n    this.schema = schema;\n    //it's not a first class citizen for the IndexSchema\n    SolrParams p = new MapSolrParams(args);\n    String subFT = p.get(SUB_FIELD_TYPE);\n    String subSuffix = p.get(SUB_FIELD_SUFFIX);\n    if (subFT != null) {\n      args.remove(SUB_FIELD_TYPE);\n      subType = schema.getFieldTypeByName(subFT.trim());\n      suffix = POLY_FIELD_SEPARATOR + subType.typeName;\n    } else if (subSuffix != null) {\n      args.remove(SUB_FIELD_SUFFIX);\n      suffix = subSuffix;\n    } else {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"The field type: \" + typeName\n              + \" must specify the \" +\n              SUB_FIELD_TYPE + \" attribute or the \" + SUB_FIELD_SUFFIX + \" attribute.\");\n    }\n\n  }\n\n","sourceOld":"  @Override\n  protected void init(IndexSchema schema, Map<String, String> args) {\n    this.schema = schema;\n    //it's not a first class citizen for the IndexSchema\n    SolrParams p = new MapSolrParams(args);\n    String subFT = p.get(SUB_FIELD_TYPE);\n    String subSuffix = p.get(SUB_FIELD_SUFFIX);\n    if (subFT != null) {\n      args.remove(SUB_FIELD_TYPE);\n      subType = schema.getFieldTypeByName(subFT.trim());\n      suffix = POLY_FIELD_SEPARATOR + subType.typeName;\n    } else if (subSuffix != null) {\n      args.remove(SUB_FIELD_SUFFIX);\n      suffix = subSuffix;\n    } else {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"The field type: \" + typeName\n              + \" must specify the \" +\n              SUB_FIELD_TYPE + \" attribute or the \" + SUB_FIELD_SUFFIX + \" attribute.\");\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/AbstractSubTypeFieldType#init(IndexSchema,Map[String,String]).mjava","pathOld":"solr/src/java/org/apache/solr/schema/AbstractSubTypeFieldType#init(IndexSchema,Map[String,String]).mjava","sourceNew":"  @Override\n  protected void init(IndexSchema schema, Map<String, String> args) {\n    this.schema = schema;\n    //it's not a first class citizen for the IndexSchema\n    SolrParams p = new MapSolrParams(args);\n    String subFT = p.get(SUB_FIELD_TYPE);\n    String subSuffix = p.get(SUB_FIELD_SUFFIX);\n    if (subFT != null) {\n      args.remove(SUB_FIELD_TYPE);\n      subType = schema.getFieldTypeByName(subFT.trim());\n      suffix = POLY_FIELD_SEPARATOR + subType.typeName;\n    } else if (subSuffix != null) {\n      args.remove(SUB_FIELD_SUFFIX);\n      suffix = subSuffix;\n    } else {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"The field type: \" + typeName\n              + \" must specify the \" +\n              SUB_FIELD_TYPE + \" attribute or the \" + SUB_FIELD_SUFFIX + \" attribute.\");\n    }\n\n  }\n\n","sourceOld":"  @Override\n  protected void init(IndexSchema schema, Map<String, String> args) {\n    this.schema = schema;\n    //it's not a first class citizen for the IndexSchema\n    SolrParams p = new MapSolrParams(args);\n    String subFT = p.get(SUB_FIELD_TYPE);\n    String subSuffix = p.get(SUB_FIELD_SUFFIX);\n    if (subFT != null) {\n      args.remove(SUB_FIELD_TYPE);\n      subType = schema.getFieldTypeByName(subFT.trim());\n      suffix = POLY_FIELD_SEPARATOR + subType.typeName;\n    } else if (subSuffix != null) {\n      args.remove(SUB_FIELD_SUFFIX);\n      suffix = subSuffix;\n    } else {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"The field type: \" + typeName\n              + \" must specify the \" +\n              SUB_FIELD_TYPE + \" attribute or the \" + SUB_FIELD_SUFFIX + \" attribute.\");\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9b4b4d68085809ae840a099e4620e5a128509279","date":1365633379,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/AbstractSubTypeFieldType#init(IndexSchema,Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/AbstractSubTypeFieldType#init(IndexSchema,Map[String,String]).mjava","sourceNew":"  @Override\n  protected void init(IndexSchema schema, Map<String, String> args) {\n    super.init(schema, args);\n    this.schema = schema;\n    //it's not a first class citizen for the IndexSchema\n    SolrParams p = new MapSolrParams(args);\n    String subFT = p.get(SUB_FIELD_TYPE);\n    String subSuffix = p.get(SUB_FIELD_SUFFIX);\n    if (subFT != null) {\n      args.remove(SUB_FIELD_TYPE);\n      subType = schema.getFieldTypeByName(subFT.trim());\n      suffix = POLY_FIELD_SEPARATOR + subType.typeName;\n    } else if (subSuffix != null) {\n      args.remove(SUB_FIELD_SUFFIX);\n      suffix = subSuffix;\n    } else {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"The field type: \" + typeName\n              + \" must specify the \" +\n              SUB_FIELD_TYPE + \" attribute or the \" + SUB_FIELD_SUFFIX + \" attribute.\");\n    }\n\n  }\n\n","sourceOld":"  @Override\n  protected void init(IndexSchema schema, Map<String, String> args) {\n    this.schema = schema;\n    //it's not a first class citizen for the IndexSchema\n    SolrParams p = new MapSolrParams(args);\n    String subFT = p.get(SUB_FIELD_TYPE);\n    String subSuffix = p.get(SUB_FIELD_SUFFIX);\n    if (subFT != null) {\n      args.remove(SUB_FIELD_TYPE);\n      subType = schema.getFieldTypeByName(subFT.trim());\n      suffix = POLY_FIELD_SEPARATOR + subType.typeName;\n    } else if (subSuffix != null) {\n      args.remove(SUB_FIELD_SUFFIX);\n      suffix = subSuffix;\n    } else {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"The field type: \" + typeName\n              + \" must specify the \" +\n              SUB_FIELD_TYPE + \" attribute or the \" + SUB_FIELD_SUFFIX + \" attribute.\");\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08970e5b8411182a29412c177eff67ec1110095b","date":1366640815,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/AbstractSubTypeFieldType#init(IndexSchema,Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/AbstractSubTypeFieldType#init(IndexSchema,Map[String,String]).mjava","sourceNew":"  @Override\n  protected void init(IndexSchema schema, Map<String, String> args) {\n    super.init(schema, args);\n    this.schema = schema;\n    //it's not a first class citizen for the IndexSchema\n    SolrParams p = new MapSolrParams(args);\n    subFieldType = p.get(SUB_FIELD_TYPE);\n    subSuffix = p.get(SUB_FIELD_SUFFIX);\n    if (subFieldType != null) {\n      args.remove(SUB_FIELD_TYPE);\n      subType = schema.getFieldTypeByName(subFieldType.trim());\n      suffix = POLY_FIELD_SEPARATOR + subType.typeName;\n    } else if (subSuffix != null) {\n      args.remove(SUB_FIELD_SUFFIX);\n      suffix = subSuffix;\n    } else {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"The field type: \" + typeName\n              + \" must specify the \" +\n              SUB_FIELD_TYPE + \" attribute or the \" + SUB_FIELD_SUFFIX + \" attribute.\");\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void init(IndexSchema schema, Map<String, String> args) {\n    super.init(schema, args);\n    this.schema = schema;\n    //it's not a first class citizen for the IndexSchema\n    SolrParams p = new MapSolrParams(args);\n    String subFT = p.get(SUB_FIELD_TYPE);\n    String subSuffix = p.get(SUB_FIELD_SUFFIX);\n    if (subFT != null) {\n      args.remove(SUB_FIELD_TYPE);\n      subType = schema.getFieldTypeByName(subFT.trim());\n      suffix = POLY_FIELD_SEPARATOR + subType.typeName;\n    } else if (subSuffix != null) {\n      args.remove(SUB_FIELD_SUFFIX);\n      suffix = subSuffix;\n    } else {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"The field type: \" + typeName\n              + \" must specify the \" +\n              SUB_FIELD_TYPE + \" attribute or the \" + SUB_FIELD_SUFFIX + \" attribute.\");\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9b4b4d68085809ae840a099e4620e5a128509279":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["08970e5b8411182a29412c177eff67ec1110095b"],"08970e5b8411182a29412c177eff67ec1110095b":["9b4b4d68085809ae840a099e4620e5a128509279"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["9b4b4d68085809ae840a099e4620e5a128509279"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"9b4b4d68085809ae840a099e4620e5a128509279":["08970e5b8411182a29412c177eff67ec1110095b"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"08970e5b8411182a29412c177eff67ec1110095b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}