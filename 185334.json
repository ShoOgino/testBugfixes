{"path":"solr/core/src/test/org/apache/solr/internal/csv/writer/CSVConfigGuesserTest#testConfigGuess2().mjava","commits":[{"id":"a62060bf935e54f2cf73861fbc773508ab49aeb9","date":1333411307,"type":0,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/internal/csv/writer/CSVConfigGuesserTest#testConfigGuess2().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Test a format like\n     *  1234,123123,12312312,213123\n     *  1,2,3,4\n     *\n     */\n    public void testConfigGuess2() {\n        CSVConfig expected = new CSVConfig();\n        expected.setDelimiter(';');\n        expected.setValueDelimiter(' ');\n        expected.setFill(CSVConfig.FILLRIGHT);\n        expected.setIgnoreValueDelimiter(false);\n//        expected.setFixedWidth(false);\n        StringBuffer sb = new StringBuffer();\n        sb.append(\"1,2,3,4\\n\");\n        sb.append(\"abcd,1234,abcd,1234\");\n        ByteArrayInputStream in = new ByteArrayInputStream(sb.toString().getBytes());\n        CSVConfigGuesser guesser = new CSVConfigGuesser(in);\n        CSVConfig guessed = guesser.guess();\n        assertEquals(expected.isFixedWidth(), guessed.isFixedWidth());\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d06343967a29132f5d782f74e8d0988400278a02"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"197070b7f9191af8b5d8598b579393d4a67e32f0","date":1341843740,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/internal/csv/writer/CSVConfigGuesserTest#testConfigGuess2().mjava","pathOld":"solr/core/src/test/org/apache/solr/internal/csv/writer/CSVConfigGuesserTest#testConfigGuess2().mjava","sourceNew":"    /**\n     * Test a format like\n     *  1234,123123,12312312,213123\n     *  1,2,3,4\n     *\n     */\n    public void testConfigGuess2() throws Exception {\n        CSVConfig expected = new CSVConfig();\n        expected.setDelimiter(';');\n        expected.setValueDelimiter(' ');\n        expected.setFill(CSVConfig.FILLRIGHT);\n        expected.setIgnoreValueDelimiter(false);\n//        expected.setFixedWidth(false);\n        StringBuffer sb = new StringBuffer();\n        sb.append(\"1,2,3,4\\n\");\n        sb.append(\"abcd,1234,abcd,1234\");\n        ByteArrayInputStream in = new ByteArrayInputStream(sb.toString().getBytes(\"UTF-8\"));\n        CSVConfigGuesser guesser = new CSVConfigGuesser(in);\n        CSVConfig guessed = guesser.guess();\n        assertEquals(expected.isFixedWidth(), guessed.isFixedWidth());\n    }\n\n","sourceOld":"    /**\n     * Test a format like\n     *  1234,123123,12312312,213123\n     *  1,2,3,4\n     *\n     */\n    public void testConfigGuess2() {\n        CSVConfig expected = new CSVConfig();\n        expected.setDelimiter(';');\n        expected.setValueDelimiter(' ');\n        expected.setFill(CSVConfig.FILLRIGHT);\n        expected.setIgnoreValueDelimiter(false);\n//        expected.setFixedWidth(false);\n        StringBuffer sb = new StringBuffer();\n        sb.append(\"1,2,3,4\\n\");\n        sb.append(\"abcd,1234,abcd,1234\");\n        ByteArrayInputStream in = new ByteArrayInputStream(sb.toString().getBytes());\n        CSVConfigGuesser guesser = new CSVConfigGuesser(in);\n        CSVConfig guessed = guesser.guess();\n        assertEquals(expected.isFixedWidth(), guessed.isFixedWidth());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2acf500f78aa12b92e371fd89c719291986b6b90","date":1341846236,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/internal/csv/writer/CSVConfigGuesserTest#testConfigGuess2().mjava","pathOld":"solr/core/src/test/org/apache/solr/internal/csv/writer/CSVConfigGuesserTest#testConfigGuess2().mjava","sourceNew":"    /**\n     * Test a format like\n     *  1234,123123,12312312,213123\n     *  1,2,3,4\n     *\n     */\n    public void testConfigGuess2() throws Exception {\n        CSVConfig expected = new CSVConfig();\n        expected.setDelimiter(';');\n        expected.setValueDelimiter(' ');\n        expected.setFill(CSVConfig.FILLRIGHT);\n        expected.setIgnoreValueDelimiter(false);\n//        expected.setFixedWidth(false);\n        StringBuffer sb = new StringBuffer();\n        sb.append(\"1,2,3,4\\n\");\n        sb.append(\"abcd,1234,abcd,1234\");\n        ByteArrayInputStream in = new ByteArrayInputStream(sb.toString().getBytes(\"UTF-8\"));\n        CSVConfigGuesser guesser = new CSVConfigGuesser(in);\n        CSVConfig guessed = guesser.guess();\n        assertEquals(expected.isFixedWidth(), guessed.isFixedWidth());\n    }\n\n","sourceOld":"    /**\n     * Test a format like\n     *  1234,123123,12312312,213123\n     *  1,2,3,4\n     *\n     */\n    public void testConfigGuess2() {\n        CSVConfig expected = new CSVConfig();\n        expected.setDelimiter(';');\n        expected.setValueDelimiter(' ');\n        expected.setFill(CSVConfig.FILLRIGHT);\n        expected.setIgnoreValueDelimiter(false);\n//        expected.setFixedWidth(false);\n        StringBuffer sb = new StringBuffer();\n        sb.append(\"1,2,3,4\\n\");\n        sb.append(\"abcd,1234,abcd,1234\");\n        ByteArrayInputStream in = new ByteArrayInputStream(sb.toString().getBytes());\n        CSVConfigGuesser guesser = new CSVConfigGuesser(in);\n        CSVConfig guessed = guesser.guess();\n        assertEquals(expected.isFixedWidth(), guessed.isFixedWidth());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/internal/csv/writer/CSVConfigGuesserTest#testConfigGuess2().mjava","pathOld":"solr/core/src/test/org/apache/solr/internal/csv/writer/CSVConfigGuesserTest#testConfigGuess2().mjava","sourceNew":"    /**\n     * Test a format like\n     *  1234,123123,12312312,213123\n     *  1,2,3,4\n     *\n     */\n    public void testConfigGuess2() throws Exception {\n        CSVConfig expected = new CSVConfig();\n        expected.setDelimiter(';');\n        expected.setValueDelimiter(' ');\n        expected.setFill(CSVConfig.FILLRIGHT);\n        expected.setIgnoreValueDelimiter(false);\n//        expected.setFixedWidth(false);\n        StringBuffer sb = new StringBuffer();\n        sb.append(\"1,2,3,4\\n\");\n        sb.append(\"abcd,1234,abcd,1234\");\n        ByteArrayInputStream in = new ByteArrayInputStream(sb.toString().getBytes(\"UTF-8\"));\n        CSVConfigGuesser guesser = new CSVConfigGuesser(in);\n        CSVConfig guessed = guesser.guess();\n        assertEquals(expected.isFixedWidth(), guessed.isFixedWidth());\n    }\n\n","sourceOld":"    /**\n     * Test a format like\n     *  1234,123123,12312312,213123\n     *  1,2,3,4\n     *\n     */\n    public void testConfigGuess2() {\n        CSVConfig expected = new CSVConfig();\n        expected.setDelimiter(';');\n        expected.setValueDelimiter(' ');\n        expected.setFill(CSVConfig.FILLRIGHT);\n        expected.setIgnoreValueDelimiter(false);\n//        expected.setFixedWidth(false);\n        StringBuffer sb = new StringBuffer();\n        sb.append(\"1,2,3,4\\n\");\n        sb.append(\"abcd,1234,abcd,1234\");\n        ByteArrayInputStream in = new ByteArrayInputStream(sb.toString().getBytes());\n        CSVConfigGuesser guesser = new CSVConfigGuesser(in);\n        CSVConfig guessed = guesser.guess();\n        assertEquals(expected.isFixedWidth(), guessed.isFixedWidth());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/internal/csv/writer/CSVConfigGuesserTest#testConfigGuess2().mjava","pathOld":"solr/core/src/test/org/apache/solr/internal/csv/writer/CSVConfigGuesserTest#testConfigGuess2().mjava","sourceNew":"    /**\n     * Test a format like\n     *  1234,123123,12312312,213123\n     *  1,2,3,4\n     *\n     */\n    public void testConfigGuess2() throws Exception {\n        CSVConfig expected = new CSVConfig();\n        expected.setDelimiter(';');\n        expected.setValueDelimiter(' ');\n        expected.setFill(CSVConfig.FILLRIGHT);\n        expected.setIgnoreValueDelimiter(false);\n//        expected.setFixedWidth(false);\n        StringBuffer sb = new StringBuffer();\n        sb.append(\"1,2,3,4\\n\");\n        sb.append(\"abcd,1234,abcd,1234\");\n        ByteArrayInputStream in = new ByteArrayInputStream(sb.toString().getBytes(\"UTF-8\"));\n        CSVConfigGuesser guesser = new CSVConfigGuesser(in);\n        CSVConfig guessed = guesser.guess();\n        assertEquals(expected.isFixedWidth(), guessed.isFixedWidth());\n    }\n\n","sourceOld":"    /**\n     * Test a format like\n     *  1234,123123,12312312,213123\n     *  1,2,3,4\n     *\n     */\n    public void testConfigGuess2() {\n        CSVConfig expected = new CSVConfig();\n        expected.setDelimiter(';');\n        expected.setValueDelimiter(' ');\n        expected.setFill(CSVConfig.FILLRIGHT);\n        expected.setIgnoreValueDelimiter(false);\n//        expected.setFixedWidth(false);\n        StringBuffer sb = new StringBuffer();\n        sb.append(\"1,2,3,4\\n\");\n        sb.append(\"abcd,1234,abcd,1234\");\n        ByteArrayInputStream in = new ByteArrayInputStream(sb.toString().getBytes());\n        CSVConfigGuesser guesser = new CSVConfigGuesser(in);\n        CSVConfig guessed = guesser.guess();\n        assertEquals(expected.isFixedWidth(), guessed.isFixedWidth());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d06343967a29132f5d782f74e8d0988400278a02","date":1388963049,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/internal/csv/writer/CSVConfigGuesserTest#testConfigGuess2().mjava","pathOld":"solr/core/src/test/org/apache/solr/internal/csv/writer/CSVConfigGuesserTest#testConfigGuess2().mjava","sourceNew":"    /**\n     * Test a format like\n     *  1234,123123,12312312,213123\n     *  1,2,3,4\n     *\n     */\n    public void testConfigGuess2() throws Exception {\n        CSVConfig expected = new CSVConfig();\n        expected.setDelimiter(';');\n        expected.setValueDelimiter(' ');\n        expected.setFill(CSVConfig.FILLRIGHT);\n        expected.setIgnoreValueDelimiter(false);\n//        expected.setFixedWidth(false);\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"1,2,3,4\\n\");\n        sb.append(\"abcd,1234,abcd,1234\");\n        ByteArrayInputStream in = new ByteArrayInputStream(sb.toString().getBytes(\"UTF-8\"));\n        CSVConfigGuesser guesser = new CSVConfigGuesser(in);\n        CSVConfig guessed = guesser.guess();\n        assertEquals(expected.isFixedWidth(), guessed.isFixedWidth());\n    }\n\n","sourceOld":"    /**\n     * Test a format like\n     *  1234,123123,12312312,213123\n     *  1,2,3,4\n     *\n     */\n    public void testConfigGuess2() throws Exception {\n        CSVConfig expected = new CSVConfig();\n        expected.setDelimiter(';');\n        expected.setValueDelimiter(' ');\n        expected.setFill(CSVConfig.FILLRIGHT);\n        expected.setIgnoreValueDelimiter(false);\n//        expected.setFixedWidth(false);\n        StringBuffer sb = new StringBuffer();\n        sb.append(\"1,2,3,4\\n\");\n        sb.append(\"abcd,1234,abcd,1234\");\n        ByteArrayInputStream in = new ByteArrayInputStream(sb.toString().getBytes(\"UTF-8\"));\n        CSVConfigGuesser guesser = new CSVConfigGuesser(in);\n        CSVConfig guessed = guesser.guess();\n        assertEquals(expected.isFixedWidth(), guessed.isFixedWidth());\n    }\n\n","bugFix":["a62060bf935e54f2cf73861fbc773508ab49aeb9"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d3d365762604952e436b51980101dfc84cc1b3e","date":1396298116,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/internal/csv/writer/CSVConfigGuesserTest#testConfigGuess2().mjava","pathOld":"solr/core/src/test/org/apache/solr/internal/csv/writer/CSVConfigGuesserTest#testConfigGuess2().mjava","sourceNew":"    /**\n     * Test a format like\n     *  1234,123123,12312312,213123\n     *  1,2,3,4\n     *\n     */\n    public void testConfigGuess2() throws Exception {\n        CSVConfig expected = new CSVConfig();\n        expected.setDelimiter(';');\n        expected.setValueDelimiter(' ');\n        expected.setFill(CSVConfig.FILLRIGHT);\n        expected.setIgnoreValueDelimiter(false);\n//        expected.setFixedWidth(false);\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"1,2,3,4\\n\");\n        sb.append(\"abcd,1234,abcd,1234\");\n        ByteArrayInputStream in = new ByteArrayInputStream(sb.toString().getBytes(StandardCharsets.UTF_8));\n        CSVConfigGuesser guesser = new CSVConfigGuesser(in);\n        CSVConfig guessed = guesser.guess();\n        assertEquals(expected.isFixedWidth(), guessed.isFixedWidth());\n    }\n\n","sourceOld":"    /**\n     * Test a format like\n     *  1234,123123,12312312,213123\n     *  1,2,3,4\n     *\n     */\n    public void testConfigGuess2() throws Exception {\n        CSVConfig expected = new CSVConfig();\n        expected.setDelimiter(';');\n        expected.setValueDelimiter(' ');\n        expected.setFill(CSVConfig.FILLRIGHT);\n        expected.setIgnoreValueDelimiter(false);\n//        expected.setFixedWidth(false);\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"1,2,3,4\\n\");\n        sb.append(\"abcd,1234,abcd,1234\");\n        ByteArrayInputStream in = new ByteArrayInputStream(sb.toString().getBytes(\"UTF-8\"));\n        CSVConfigGuesser guesser = new CSVConfigGuesser(in);\n        CSVConfig guessed = guesser.guess();\n        assertEquals(expected.isFixedWidth(), guessed.isFixedWidth());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/internal/csv/writer/CSVConfigGuesserTest#testConfigGuess2().mjava","pathOld":"solr/core/src/test/org/apache/solr/internal/csv/writer/CSVConfigGuesserTest#testConfigGuess2().mjava","sourceNew":"    /**\n     * Test a format like\n     *  1234,123123,12312312,213123\n     *  1,2,3,4\n     *\n     */\n    public void testConfigGuess2() throws Exception {\n        CSVConfig expected = new CSVConfig();\n        expected.setDelimiter(';');\n        expected.setValueDelimiter(' ');\n        expected.setFill(CSVConfig.FILLRIGHT);\n        expected.setIgnoreValueDelimiter(false);\n//        expected.setFixedWidth(false);\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"1,2,3,4\\n\");\n        sb.append(\"abcd,1234,abcd,1234\");\n        ByteArrayInputStream in = new ByteArrayInputStream(sb.toString().getBytes(StandardCharsets.UTF_8));\n        CSVConfigGuesser guesser = new CSVConfigGuesser(in);\n        CSVConfig guessed = guesser.guess();\n        assertEquals(expected.isFixedWidth(), guessed.isFixedWidth());\n    }\n\n","sourceOld":"    /**\n     * Test a format like\n     *  1234,123123,12312312,213123\n     *  1,2,3,4\n     *\n     */\n    public void testConfigGuess2() throws Exception {\n        CSVConfig expected = new CSVConfig();\n        expected.setDelimiter(';');\n        expected.setValueDelimiter(' ');\n        expected.setFill(CSVConfig.FILLRIGHT);\n        expected.setIgnoreValueDelimiter(false);\n//        expected.setFixedWidth(false);\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"1,2,3,4\\n\");\n        sb.append(\"abcd,1234,abcd,1234\");\n        ByteArrayInputStream in = new ByteArrayInputStream(sb.toString().getBytes(\"UTF-8\"));\n        CSVConfigGuesser guesser = new CSVConfigGuesser(in);\n        CSVConfig guessed = guesser.guess();\n        assertEquals(expected.isFixedWidth(), guessed.isFixedWidth());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"63fc16c8a7bc8d24e5266ae06d44d83c6d30403b","date":1553472106,"type":4,"author":"Gus Heck","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/internal/csv/writer/CSVConfigGuesserTest#testConfigGuess2().mjava","sourceNew":null,"sourceOld":"    /**\n     * Test a format like\n     *  1234,123123,12312312,213123\n     *  1,2,3,4\n     *\n     */\n    public void testConfigGuess2() throws Exception {\n        CSVConfig expected = new CSVConfig();\n        expected.setDelimiter(';');\n        expected.setValueDelimiter(' ');\n        expected.setFill(CSVConfig.FILLRIGHT);\n        expected.setIgnoreValueDelimiter(false);\n//        expected.setFixedWidth(false);\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"1,2,3,4\\n\");\n        sb.append(\"abcd,1234,abcd,1234\");\n        ByteArrayInputStream in = new ByteArrayInputStream(sb.toString().getBytes(StandardCharsets.UTF_8));\n        CSVConfigGuesser guesser = new CSVConfigGuesser(in);\n        CSVConfig guessed = guesser.guess();\n        assertEquals(expected.isFixedWidth(), guessed.isFixedWidth());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["d06343967a29132f5d782f74e8d0988400278a02","9d3d365762604952e436b51980101dfc84cc1b3e"],"63fc16c8a7bc8d24e5266ae06d44d83c6d30403b":["9d3d365762604952e436b51980101dfc84cc1b3e"],"d06343967a29132f5d782f74e8d0988400278a02":["2acf500f78aa12b92e371fd89c719291986b6b90"],"a62060bf935e54f2cf73861fbc773508ab49aeb9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a62060bf935e54f2cf73861fbc773508ab49aeb9","2acf500f78aa12b92e371fd89c719291986b6b90"],"9d3d365762604952e436b51980101dfc84cc1b3e":["d06343967a29132f5d782f74e8d0988400278a02"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2acf500f78aa12b92e371fd89c719291986b6b90":["a62060bf935e54f2cf73861fbc773508ab49aeb9","197070b7f9191af8b5d8598b579393d4a67e32f0"],"197070b7f9191af8b5d8598b579393d4a67e32f0":["a62060bf935e54f2cf73861fbc773508ab49aeb9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["63fc16c8a7bc8d24e5266ae06d44d83c6d30403b"],"46d8ada1fff8d18cb197c38c7983225162599948":["a62060bf935e54f2cf73861fbc773508ab49aeb9","2acf500f78aa12b92e371fd89c719291986b6b90"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"63fc16c8a7bc8d24e5266ae06d44d83c6d30403b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d06343967a29132f5d782f74e8d0988400278a02":["5eb2511ababf862ea11e10761c70ee560cd84510","9d3d365762604952e436b51980101dfc84cc1b3e"],"a62060bf935e54f2cf73861fbc773508ab49aeb9":["fe33227f6805edab2036cbb80645cc4e2d1fa424","2acf500f78aa12b92e371fd89c719291986b6b90","197070b7f9191af8b5d8598b579393d4a67e32f0","46d8ada1fff8d18cb197c38c7983225162599948"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"9d3d365762604952e436b51980101dfc84cc1b3e":["5eb2511ababf862ea11e10761c70ee560cd84510","63fc16c8a7bc8d24e5266ae06d44d83c6d30403b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a62060bf935e54f2cf73861fbc773508ab49aeb9"],"2acf500f78aa12b92e371fd89c719291986b6b90":["d06343967a29132f5d782f74e8d0988400278a02","fe33227f6805edab2036cbb80645cc4e2d1fa424","46d8ada1fff8d18cb197c38c7983225162599948"],"197070b7f9191af8b5d8598b579393d4a67e32f0":["2acf500f78aa12b92e371fd89c719291986b6b90"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"46d8ada1fff8d18cb197c38c7983225162599948":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817","46d8ada1fff8d18cb197c38c7983225162599948"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}