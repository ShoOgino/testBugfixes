{"path":"src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","commits":[{"id":"344337c95aa4df281489f22ffdc39f02bddff145","date":1154633208,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","pathOld":"/dev/null","sourceNew":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\r\n    Directory dir = new RAMDirectory();\r\n\r\n    long start = System.currentTimeMillis();\r\n    addDocs(dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\r\n    long end = System.currentTimeMillis();\r\n    System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\r\n\r\n    IndexReader reader = IndexReader.open(dir);\r\n    TermEnum tenum = reader.terms(new Term(\"foo\",\"val\"));\r\n    TermDocs tdocs = reader.termDocs();\r\n\r\n    start = System.currentTimeMillis();\r\n\r\n    int ret=0;\r\n    for (int i=0; i<iter; i++) {\r\n      tdocs.seek(tenum);\r\n      while (tdocs.next()) {\r\n        ret += tdocs.doc();\r\n      }\r\n    }\r\n\r\n    end = System.currentTimeMillis();\r\n    System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\r\n\r\n    return ret;\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2123bddbd65dea198cac380540636ce43a880403","date":1211269254,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","pathOld":"src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","sourceNew":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = new RAMDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir);\n    TermEnum tenum = reader.terms(new Term(\"foo\",\"val\"));\n    TermDocs tdocs = reader.termDocs();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    for (int i=0; i<iter; i++) {\n      tdocs.seek(tenum);\n      while (tdocs.next()) {\n        ret += tdocs.doc();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","sourceOld":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\r\n    Directory dir = new RAMDirectory();\r\n\r\n    long start = System.currentTimeMillis();\r\n    addDocs(dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\r\n    long end = System.currentTimeMillis();\r\n    System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\r\n\r\n    IndexReader reader = IndexReader.open(dir);\r\n    TermEnum tenum = reader.terms(new Term(\"foo\",\"val\"));\r\n    TermDocs tdocs = reader.termDocs();\r\n\r\n    start = System.currentTimeMillis();\r\n\r\n    int ret=0;\r\n    for (int i=0; i<iter; i++) {\r\n      tdocs.seek(tenum);\r\n      while (tdocs.next()) {\r\n        ret += tdocs.doc();\r\n      }\r\n    }\r\n\r\n    end = System.currentTimeMillis();\r\n    System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\r\n\r\n    return ret;\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","pathOld":"src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","sourceNew":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = new RAMDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n    TermEnum tenum = reader.terms(new Term(\"foo\",\"val\"));\n    TermDocs tdocs = reader.termDocs();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    for (int i=0; i<iter; i++) {\n      tdocs.seek(tenum);\n      while (tdocs.next()) {\n        ret += tdocs.doc();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","sourceOld":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = new RAMDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir);\n    TermEnum tenum = reader.terms(new Term(\"foo\",\"val\"));\n    TermDocs tdocs = reader.termDocs();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    for (int i=0; i<iter; i++) {\n      tdocs.seek(tenum);\n      while (tdocs.next()) {\n        ret += tdocs.doc();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","pathOld":"src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","sourceNew":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = new RAMDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n    TermEnum tenum = reader.terms(new Term(\"foo\",\"val\"));\n    TermDocs tdocs = reader.termDocs();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    for (int i=0; i<iter; i++) {\n      tdocs.seek(tenum);\n      while (tdocs.next()) {\n        ret += tdocs.doc();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","sourceOld":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = new RAMDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir);\n    TermEnum tenum = reader.terms(new Term(\"foo\",\"val\"));\n    TermDocs tdocs = reader.termDocs();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    for (int i=0; i<iter; i++) {\n      tdocs.seek(tenum);\n      while (tdocs.next()) {\n        ret += tdocs.doc();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42607aa380c892dc1ec0ab26e86a575c28e13618","date":1268641604,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","pathOld":"src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","sourceNew":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = new RAMDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n    TermEnum tenum = reader.terms(new Term(\"foo\",\"val\"));\n    TermDocs tdocs = reader.termDocs();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    for (int i=0; i<iter; i++) {\n      tdocs.seek(tenum);\n      while (tdocs.next()) {\n        ret += tdocs.doc();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","sourceOld":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = new RAMDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n    TermEnum tenum = reader.terms(new Term(\"foo\",\"val\"));\n    TermDocs tdocs = reader.termDocs();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    for (int i=0; i<iter; i++) {\n      tdocs.seek(tenum);\n      while (tdocs.next()) {\n        ret += tdocs.doc();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","pathOld":"src/test/org/apache/lucene/index/TestTermdocPerf#doTest(int,int,int,float).mjava","sourceNew":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = new RAMDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n    TermEnum tenum = reader.terms(new Term(\"foo\",\"val\"));\n    TermDocs tdocs = reader.termDocs();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    for (int i=0; i<iter; i++) {\n      tdocs.seek(tenum);\n      while (tdocs.next()) {\n        ret += tdocs.doc();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","sourceOld":"  public int doTest(int iter, int ndocs, int maxTF, float percentDocs) throws IOException {\n    Directory dir = new RAMDirectory();\n\n    long start = System.currentTimeMillis();\n    addDocs(dir, ndocs, \"foo\", \"val\", maxTF, percentDocs);\n    long end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for creation of \" + ndocs + \" docs = \" + (end-start));\n\n    IndexReader reader = IndexReader.open(dir, true);\n    TermEnum tenum = reader.terms(new Term(\"foo\",\"val\"));\n    TermDocs tdocs = reader.termDocs();\n\n    start = System.currentTimeMillis();\n\n    int ret=0;\n    for (int i=0; i<iter; i++) {\n      tdocs.seek(tenum);\n      while (tdocs.next()) {\n        ret += tdocs.doc();\n      }\n    }\n\n    end = System.currentTimeMillis();\n    if (VERBOSE) System.out.println(\"milliseconds for \" + iter + \" TermDocs iteration: \" + (end-start));\n\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["2123bddbd65dea198cac380540636ce43a880403"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0a046c0c310bc77931fc8441bd920053b607dd14":["2123bddbd65dea198cac380540636ce43a880403","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"2123bddbd65dea198cac380540636ce43a880403":["344337c95aa4df281489f22ffdc39f02bddff145"],"42607aa380c892dc1ec0ab26e86a575c28e13618":["0a046c0c310bc77931fc8441bd920053b607dd14"],"344337c95aa4df281489f22ffdc39f02bddff145":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["42607aa380c892dc1ec0ab26e86a575c28e13618"]},"commit2Childs":{"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["344337c95aa4df281489f22ffdc39f02bddff145"],"0a046c0c310bc77931fc8441bd920053b607dd14":["42607aa380c892dc1ec0ab26e86a575c28e13618"],"2123bddbd65dea198cac380540636ce43a880403":["e8d1458a2543cbd30cbfe7929be4dcb5c5251659","0a046c0c310bc77931fc8441bd920053b607dd14"],"42607aa380c892dc1ec0ab26e86a575c28e13618":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"344337c95aa4df281489f22ffdc39f02bddff145":["2123bddbd65dea198cac380540636ce43a880403"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}