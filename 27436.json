{"path":"backwards/src/java/org/apache/lucene/search/payloads/PayloadNearQuery.PayloadNearSpanScorer#processPayloads(Collection[byte[]],int,int).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/search/payloads/PayloadNearQuery.PayloadNearSpanScorer#processPayloads(Collection[byte[]],int,int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * By default, uses the {@link PayloadFunction} to score the payloads, but\n     * can be overridden to do other things.\n     * \n     * @param payLoads The payloads\n     * @param start The start position of the span being scored\n     * @param end The end position of the span being scored\n     * \n     * @see Spans\n     */\n    protected void processPayloads(Collection<byte[]> payLoads, int start, int end) {\n      for (final byte[] thePayload : payLoads) {\n        payloadScore = function.currentScore(doc, fieldName, start, end,\n            payloadsSeen, payloadScore, similarity.scorePayload(doc, fieldName,\n                spans.start(), spans.end(), thePayload, 0, thePayload.length));\n        ++payloadsSeen;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/search/payloads/PayloadNearQuery.PayloadNearSpanScorer#processPayloads(Collection[byte[]],int,int).mjava","pathOld":"backwards/src/java/org/apache/lucene/search/payloads/PayloadNearQuery.PayloadNearSpanScorer#processPayloads(Collection[byte[]],int,int).mjava","sourceNew":"    /**\n     * By default, uses the {@link PayloadFunction} to score the payloads, but\n     * can be overridden to do other things.\n     * \n     * @param payLoads The payloads\n     * @param start The start position of the span being scored\n     * @param end The end position of the span being scored\n     * \n     * @see Spans\n     */\n    protected void processPayloads(Collection<byte[]> payLoads, int start, int end) {\n      for (final byte[] thePayload : payLoads) {\n        payloadScore = function.currentScore(doc, fieldName, start, end,\n            payloadsSeen, payloadScore, similarity.scorePayload(doc, fieldName,\n                spans.start(), spans.end(), thePayload, 0, thePayload.length));\n        ++payloadsSeen;\n      }\n    }\n\n","sourceOld":"    /**\n     * By default, uses the {@link PayloadFunction} to score the payloads, but\n     * can be overridden to do other things.\n     * \n     * @param payLoads The payloads\n     * @param start The start position of the span being scored\n     * @param end The end position of the span being scored\n     * \n     * @see Spans\n     */\n    protected void processPayloads(Collection<byte[]> payLoads, int start, int end) {\n      for (final byte[] thePayload : payLoads) {\n        payloadScore = function.currentScore(doc, fieldName, start, end,\n            payloadsSeen, payloadScore, similarity.scorePayload(doc, fieldName,\n                spans.start(), spans.end(), thePayload, 0, thePayload.length));\n        ++payloadsSeen;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}