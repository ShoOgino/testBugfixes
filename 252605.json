{"path":"solr/core/src/test/org/apache/solr/core/TestInitParams#testMatchPath().mjava","commits":[{"id":"451cffdb3c3e47d721152b8e904170684a1a9236","date":1420611049,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestInitParams#testMatchPath().mjava","pathOld":"/dev/null","sourceNew":"  public void testMatchPath(){\n    InitParams initParams = new InitParams(new PluginInfo(InitParams.TYPE, ZkNodeProps.makeMap(\"path\",\"/update/json/docs\")));\n    assertFalse(initParams.matchPath(\"/update\"));\n    assertTrue(initParams.matchPath(\"/update/json/docs\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83d1a1404af8fe0baf81f103d3cfc385a84f9484","date":1420640671,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/core/TestInitParams#testMatchPath().mjava","sourceNew":null,"sourceOld":"  public void testMatchPath(){\n    InitParams initParams = new InitParams(new PluginInfo(InitParams.TYPE, ZkNodeProps.makeMap(\"path\",\"/update/json/docs\")));\n    assertFalse(initParams.matchPath(\"/update\"));\n    assertTrue(initParams.matchPath(\"/update/json/docs\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8f1c7d555822b7f2e60c1ceca657be1ed1b271","date":1420652461,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestInitParams#testMatchPath().mjava","pathOld":"/dev/null","sourceNew":"  public void testMatchPath(){\n    InitParams initParams = new InitParams(new PluginInfo(InitParams.TYPE, ZkNodeProps.makeMap(\"path\",\"/update/json/docs\")));\n    assertFalse(initParams.matchPath(\"/update\"));\n    assertTrue(initParams.matchPath(\"/update/json/docs\"));\n    initParams = new InitParams(new PluginInfo(InitParams.TYPE, ZkNodeProps.makeMap(\"path\",\"/update/**\")));\n    assertTrue(initParams.matchPath(\"/update/json/docs\"));\n    assertTrue(initParams.matchPath(\"/update/json\"));\n    assertTrue(initParams.matchPath(\"/update\"));\n    initParams = new InitParams(new PluginInfo(InitParams.TYPE, ZkNodeProps.makeMap(\"path\",\"/update/*\")));\n    assertFalse(initParams.matchPath(\"/update/json/docs\"));\n    assertTrue(initParams.matchPath(\"/update/json\"));\n    assertTrue(initParams.matchPath(\"/update\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b693a83132c9e45afcd564fd65a25b60ed80388b","date":1436882146,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestInitParams#testMatchPath().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestInitParams#testMatchPath().mjava","sourceNew":"  public void testMatchPath(){\n    InitParams initParams = new InitParams(new PluginInfo(InitParams.TYPE, Utils.makeMap(\"path\", \"/update/json/docs\")));\n    assertFalse(initParams.matchPath(\"/update\"));\n    assertTrue(initParams.matchPath(\"/update/json/docs\"));\n    initParams = new InitParams(new PluginInfo(InitParams.TYPE, Utils.makeMap(\"path\", \"/update/**\")));\n    assertTrue(initParams.matchPath(\"/update/json/docs\"));\n    assertTrue(initParams.matchPath(\"/update/json\"));\n    assertTrue(initParams.matchPath(\"/update\"));\n    initParams = new InitParams(new PluginInfo(InitParams.TYPE, Utils.makeMap(\"path\", \"/update/*\")));\n    assertFalse(initParams.matchPath(\"/update/json/docs\"));\n    assertTrue(initParams.matchPath(\"/update/json\"));\n    assertTrue(initParams.matchPath(\"/update\"));\n  }\n\n","sourceOld":"  public void testMatchPath(){\n    InitParams initParams = new InitParams(new PluginInfo(InitParams.TYPE, ZkNodeProps.makeMap(\"path\",\"/update/json/docs\")));\n    assertFalse(initParams.matchPath(\"/update\"));\n    assertTrue(initParams.matchPath(\"/update/json/docs\"));\n    initParams = new InitParams(new PluginInfo(InitParams.TYPE, ZkNodeProps.makeMap(\"path\",\"/update/**\")));\n    assertTrue(initParams.matchPath(\"/update/json/docs\"));\n    assertTrue(initParams.matchPath(\"/update/json\"));\n    assertTrue(initParams.matchPath(\"/update\"));\n    initParams = new InitParams(new PluginInfo(InitParams.TYPE, ZkNodeProps.makeMap(\"path\",\"/update/*\")));\n    assertFalse(initParams.matchPath(\"/update/json/docs\"));\n    assertTrue(initParams.matchPath(\"/update/json\"));\n    assertTrue(initParams.matchPath(\"/update\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4e8f1c7d555822b7f2e60c1ceca657be1ed1b271":["83d1a1404af8fe0baf81f103d3cfc385a84f9484"],"83d1a1404af8fe0baf81f103d3cfc385a84f9484":["451cffdb3c3e47d721152b8e904170684a1a9236"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b693a83132c9e45afcd564fd65a25b60ed80388b":["4e8f1c7d555822b7f2e60c1ceca657be1ed1b271"],"451cffdb3c3e47d721152b8e904170684a1a9236":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b693a83132c9e45afcd564fd65a25b60ed80388b"]},"commit2Childs":{"4e8f1c7d555822b7f2e60c1ceca657be1ed1b271":["b693a83132c9e45afcd564fd65a25b60ed80388b"],"83d1a1404af8fe0baf81f103d3cfc385a84f9484":["4e8f1c7d555822b7f2e60c1ceca657be1ed1b271"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["451cffdb3c3e47d721152b8e904170684a1a9236"],"b693a83132c9e45afcd564fd65a25b60ed80388b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"451cffdb3c3e47d721152b8e904170684a1a9236":["83d1a1404af8fe0baf81f103d3cfc385a84f9484"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}