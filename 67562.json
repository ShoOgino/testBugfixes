{"path":"lucene/core/src/test/org/apache/lucene/search/TestSort#testCountingCollector().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#testCountingCollector().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#testCountingCollector().mjava","sourceNew":"  public void testCountingCollector() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, indexStore);\n    for (int i=0; i<5; i++) {\n      Document doc = new Document();\n      doc.add (new StringField (\"string\", \"a\"+i));\n      doc.add (new StringField (\"string\", \"b\"+i));\n      writer.addDocument (doc);\n    }\n    IndexReader reader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(reader);\n    TotalHitCountCollector c = new TotalHitCountCollector();\n    searcher.search(new MatchAllDocsQuery(), null, c);\n    assertEquals(5, c.getTotalHits());\n    reader.close();\n    indexStore.close();\n  }\n\n","sourceOld":"  public void testCountingCollector() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, indexStore);\n    for (int i=0; i<5; i++) {\n      Document doc = new Document();\n      doc.add (new StringField (\"string\", \"a\"+i));\n      doc.add (new StringField (\"string\", \"b\"+i));\n      writer.addDocument (doc);\n    }\n    IndexReader reader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(reader);\n    TotalHitCountCollector c = new TotalHitCountCollector();\n    searcher.search(new MatchAllDocsQuery(), null, c);\n    assertEquals(5, c.getTotalHits());\n    reader.close();\n    indexStore.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#testCountingCollector().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#testCountingCollector().mjava","sourceNew":"  public void testCountingCollector() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    for (int i=0; i<5; i++) {\n      Document doc = new Document();\n      doc.add (new StringField (\"string\", \"a\"+i));\n      doc.add (new StringField (\"string\", \"b\"+i));\n      writer.addDocument (doc);\n    }\n    IndexReader reader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(reader);\n    TotalHitCountCollector c = new TotalHitCountCollector();\n    searcher.search(new MatchAllDocsQuery(), null, c);\n    assertEquals(5, c.getTotalHits());\n    reader.close();\n    indexStore.close();\n  }\n\n","sourceOld":"  public void testCountingCollector() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, indexStore);\n    for (int i=0; i<5; i++) {\n      Document doc = new Document();\n      doc.add (new StringField (\"string\", \"a\"+i));\n      doc.add (new StringField (\"string\", \"b\"+i));\n      writer.addDocument (doc);\n    }\n    IndexReader reader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(reader);\n    TotalHitCountCollector c = new TotalHitCountCollector();\n    searcher.search(new MatchAllDocsQuery(), null, c);\n    assertEquals(5, c.getTotalHits());\n    reader.close();\n    indexStore.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#testCountingCollector().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#testCountingCollector().mjava","sourceNew":"  public void testCountingCollector() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    for (int i=0; i<5; i++) {\n      Document doc = new Document();\n      doc.add (new StringField (\"string\", \"a\"+i, Field.Store.NO));\n      doc.add (new StringField (\"string\", \"b\"+i, Field.Store.NO));\n      writer.addDocument (doc);\n    }\n    IndexReader reader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(reader);\n    TotalHitCountCollector c = new TotalHitCountCollector();\n    searcher.search(new MatchAllDocsQuery(), null, c);\n    assertEquals(5, c.getTotalHits());\n    reader.close();\n    indexStore.close();\n  }\n\n","sourceOld":"  public void testCountingCollector() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    for (int i=0; i<5; i++) {\n      Document doc = new Document();\n      doc.add (new StringField (\"string\", \"a\"+i));\n      doc.add (new StringField (\"string\", \"b\"+i));\n      writer.addDocument (doc);\n    }\n    IndexReader reader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(reader);\n    TotalHitCountCollector c = new TotalHitCountCollector();\n    searcher.search(new MatchAllDocsQuery(), null, c);\n    assertEquals(5, c.getTotalHits());\n    reader.close();\n    indexStore.close();\n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3e29774db46ad98ca4a8d7fcbfab633ebc01f358","date":1355170812,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#testCountingCollector().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#testCountingCollector().mjava","sourceNew":"  public void testCountingCollector() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    for(int i=0; i<5; i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", \"a\"+i, Field.Store.NO));\n      doc.add(new StringField(\"string\", \"b\"+i, Field.Store.NO));\n      writer.addDocument(doc);\n    }\n    IndexReader reader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(reader);\n    TotalHitCountCollector c = new TotalHitCountCollector();\n    searcher.search(new MatchAllDocsQuery(), null, c);\n    assertEquals(5, c.getTotalHits());\n    reader.close();\n    indexStore.close();\n  }\n\n","sourceOld":"  public void testCountingCollector() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    for (int i=0; i<5; i++) {\n      Document doc = new Document();\n      doc.add (new StringField (\"string\", \"a\"+i, Field.Store.NO));\n      doc.add (new StringField (\"string\", \"b\"+i, Field.Store.NO));\n      writer.addDocument (doc);\n    }\n    IndexReader reader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(reader);\n    TotalHitCountCollector c = new TotalHitCountCollector();\n    searcher.search(new MatchAllDocsQuery(), null, c);\n    assertEquals(5, c.getTotalHits());\n    reader.close();\n    indexStore.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#testCountingCollector().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#testCountingCollector().mjava","sourceNew":"  public void testCountingCollector() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    for(int i=0; i<5; i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", \"a\"+i, Field.Store.NO));\n      doc.add(new StringField(\"string\", \"b\"+i, Field.Store.NO));\n      writer.addDocument(doc);\n    }\n    IndexReader reader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(reader);\n    TotalHitCountCollector c = new TotalHitCountCollector();\n    searcher.search(new MatchAllDocsQuery(), null, c);\n    assertEquals(5, c.getTotalHits());\n    reader.close();\n    indexStore.close();\n  }\n\n","sourceOld":"  public void testCountingCollector() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    for (int i=0; i<5; i++) {\n      Document doc = new Document();\n      doc.add (new StringField (\"string\", \"a\"+i, Field.Store.NO));\n      doc.add (new StringField (\"string\", \"b\"+i, Field.Store.NO));\n      writer.addDocument (doc);\n    }\n    IndexReader reader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(reader);\n    TotalHitCountCollector c = new TotalHitCountCollector();\n    searcher.search(new MatchAllDocsQuery(), null, c);\n    assertEquals(5, c.getTotalHits());\n    reader.close();\n    indexStore.close();\n  }\n\n","bugFix":["259055feeba9afa10e21ab63032f3778bb1802f1","04f07771a2a7dd3a395700665ed839c3dae2def2"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e4d968497a1e5d9b3a36621b61b75486ec05ae49","date":1360852942,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort2#testCountingCollector().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#testCountingCollector().mjava","sourceNew":"  public void testCountingCollector() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    for(int i=0; i<5; i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", \"a\"+i, Field.Store.NO));\n      doc.add(new StringField(\"string\", \"b\"+i, Field.Store.NO));\n      writer.addDocument(doc);\n    }\n    IndexReader reader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(reader);\n    TotalHitCountCollector c = new TotalHitCountCollector();\n    searcher.search(new MatchAllDocsQuery(), null, c);\n    assertEquals(5, c.getTotalHits());\n    reader.close();\n    indexStore.close();\n  }\n\n","sourceOld":"  public void testCountingCollector() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    for(int i=0; i<5; i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", \"a\"+i, Field.Store.NO));\n      doc.add(new StringField(\"string\", \"b\"+i, Field.Store.NO));\n      writer.addDocument(doc);\n    }\n    IndexReader reader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(reader);\n    TotalHitCountCollector c = new TotalHitCountCollector();\n    searcher.search(new MatchAllDocsQuery(), null, c);\n    assertEquals(5, c.getTotalHits());\n    reader.close();\n    indexStore.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b41f996b22bd5518650f897d050088ff808ec03","date":1360969107,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTotalHitCountCollector#testBasics().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#testCountingCollector().mjava","sourceNew":"  public void testBasics() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    for(int i=0; i<5; i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", \"a\"+i, Field.Store.NO));\n      doc.add(new StringField(\"string\", \"b\"+i, Field.Store.NO));\n      writer.addDocument(doc);\n    }\n    IndexReader reader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(reader);\n    TotalHitCountCollector c = new TotalHitCountCollector();\n    searcher.search(new MatchAllDocsQuery(), null, c);\n    assertEquals(5, c.getTotalHits());\n    reader.close();\n    indexStore.close();\n  }\n\n","sourceOld":"  public void testCountingCollector() throws Exception {\n    Directory indexStore = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), indexStore);\n    for(int i=0; i<5; i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", \"a\"+i, Field.Store.NO));\n      doc.add(new StringField(\"string\", \"b\"+i, Field.Store.NO));\n      writer.addDocument(doc);\n    }\n    IndexReader reader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(reader);\n    TotalHitCountCollector c = new TotalHitCountCollector();\n    searcher.search(new MatchAllDocsQuery(), null, c);\n    assertEquals(5, c.getTotalHits());\n    reader.close();\n    indexStore.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["04f07771a2a7dd3a395700665ed839c3dae2def2","3e29774db46ad98ca4a8d7fcbfab633ebc01f358"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3b41f996b22bd5518650f897d050088ff808ec03":["d4d69c535930b5cce125cff868d40f6373dc27d4","e4d968497a1e5d9b3a36621b61b75486ec05ae49"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"e4d968497a1e5d9b3a36621b61b75486ec05ae49":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"3e29774db46ad98ca4a8d7fcbfab633ebc01f358":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e4d968497a1e5d9b3a36621b61b75486ec05ae49"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["d4d69c535930b5cce125cff868d40f6373dc27d4","3e29774db46ad98ca4a8d7fcbfab633ebc01f358"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["3b41f996b22bd5518650f897d050088ff808ec03","e4d968497a1e5d9b3a36621b61b75486ec05ae49"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"3b41f996b22bd5518650f897d050088ff808ec03":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"3e29774db46ad98ca4a8d7fcbfab633ebc01f358":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"e4d968497a1e5d9b3a36621b61b75486ec05ae49":["3b41f996b22bd5518650f897d050088ff808ec03","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3b41f996b22bd5518650f897d050088ff808ec03","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}