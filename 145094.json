{"path":"solr/solrj/src/java/org/apache/solr/common/util/Utils#forEachMapEntry(MapWriter,String,BiConsumer).mjava","commits":[{"id":"536bafb7a33a91ae703a78de9f6bd5c7e32471d9","date":1538395209,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils#forEachMapEntry(MapWriter,String,BiConsumer).mjava","pathOld":"/dev/null","sourceNew":"  public static void forEachMapEntry(MapWriter mw, String path, BiConsumer fun) {\n    Object o = path == null ? mw : Utils.getObjectByPath(mw, false, path);\n    if (o instanceof MapWriter) {\n      MapWriter m = (MapWriter) o;\n      try {\n        m.writeMap(new MapWriter.EntryWriter() {\n          @Override\n          public MapWriter.EntryWriter put(String k, Object v) {\n            fun.accept(k, v);\n            return this;\n          }\n        });\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (o instanceof Map) {\n      ((Map) o).forEach((k, v) -> fun.accept(k, v));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3167eae3325cf45449a75ab0468b53c0545606a3","date":1538465698,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils#forEachMapEntry(MapWriter,String,BiConsumer).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils#forEachMapEntry(MapWriter,String,BiConsumer).mjava","sourceNew":"  public static void forEachMapEntry(MapWriter mw, String path, BiConsumer fun) {\n    Object o = Utils.getObjectByPath(mw, false, path);\n    forEachMapEntry(o, fun);\n  }\n\n","sourceOld":"  public static void forEachMapEntry(MapWriter mw, String path, BiConsumer fun) {\n    Object o = path == null ? mw : Utils.getObjectByPath(mw, false, path);\n    if (o instanceof MapWriter) {\n      MapWriter m = (MapWriter) o;\n      try {\n        m.writeMap(new MapWriter.EntryWriter() {\n          @Override\n          public MapWriter.EntryWriter put(String k, Object v) {\n            fun.accept(k, v);\n            return this;\n          }\n        });\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (o instanceof Map) {\n      ((Map) o).forEach((k, v) -> fun.accept(k, v));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20b29502d346a5e6925fbedb56daf786330c75da","date":1540258523,"type":4,"author":"noble","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils#forEachMapEntry(MapWriter,String,BiConsumer).mjava","sourceNew":null,"sourceOld":"  public static void forEachMapEntry(MapWriter mw, String path, BiConsumer fun) {\n    Object o = Utils.getObjectByPath(mw, false, path);\n    forEachMapEntry(o, fun);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"536bafb7a33a91ae703a78de9f6bd5c7e32471d9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3167eae3325cf45449a75ab0468b53c0545606a3":["536bafb7a33a91ae703a78de9f6bd5c7e32471d9"],"20b29502d346a5e6925fbedb56daf786330c75da":["3167eae3325cf45449a75ab0468b53c0545606a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["20b29502d346a5e6925fbedb56daf786330c75da"]},"commit2Childs":{"536bafb7a33a91ae703a78de9f6bd5c7e32471d9":["3167eae3325cf45449a75ab0468b53c0545606a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["536bafb7a33a91ae703a78de9f6bd5c7e32471d9"],"3167eae3325cf45449a75ab0468b53c0545606a3":["20b29502d346a5e6925fbedb56daf786330c75da"],"20b29502d346a5e6925fbedb56daf786330c75da":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}