{"path":"src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer().mjava","commits":[{"id":"d568d474b2c3c00dd89047135bcb6ff8bfa7b559","date":1176840521,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer().mjava","pathOld":"/dev/null","sourceNew":"  private final void switchCurrentBuffer() throws IOException {\n    if (currentBufferIndex >= file.buffers.size()) {\n      // end of file reached, no more buffers left\n      throw new IOException(\"Read past EOF\");\n    } else {\n      currentBuffer = (byte[]) file.buffers.get(currentBufferIndex);\n      bufferPosition = 0;\n      bufferStart = BUFFER_SIZE * currentBufferIndex;\n      bufferLength = (int) (length - bufferStart);\n      if (bufferLength > BUFFER_SIZE) {\n        bufferLength = BUFFER_SIZE;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["db540c50a68e844566353b8808cc4b7106eb13d6","1acc0d4d75fc7ad1dae131d00a9ffa438b257ebe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1acc0d4d75fc7ad1dae131d00a9ffa438b257ebe","date":1184862468,"type":3,"author":"Doron Cohen","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer().mjava","pathOld":"src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer().mjava","sourceNew":"  private final void switchCurrentBuffer() throws IOException {\n    if (currentBufferIndex >= file.buffers.size()) {\n      // end of file reached, no more buffers left\n      throw new IOException(\"Read past EOF\");\n    } else {\n      currentBuffer = (byte[]) file.buffers.get(currentBufferIndex);\n      bufferPosition = 0;\n      bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n      long buflen = length - bufferStart;\n      bufferLength = buflen > BUFFER_SIZE ? BUFFER_SIZE : (int) buflen;\n    }\n  }\n\n","sourceOld":"  private final void switchCurrentBuffer() throws IOException {\n    if (currentBufferIndex >= file.buffers.size()) {\n      // end of file reached, no more buffers left\n      throw new IOException(\"Read past EOF\");\n    } else {\n      currentBuffer = (byte[]) file.buffers.get(currentBufferIndex);\n      bufferPosition = 0;\n      bufferStart = BUFFER_SIZE * currentBufferIndex;\n      bufferLength = (int) (length - bufferStart);\n      if (bufferLength > BUFFER_SIZE) {\n        bufferLength = BUFFER_SIZE;\n      }\n    }\n  }\n\n","bugFix":["d568d474b2c3c00dd89047135bcb6ff8bfa7b559"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"db540c50a68e844566353b8808cc4b7106eb13d6","date":1196182881,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer().mjava","pathOld":"src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer().mjava","sourceNew":"  private final void switchCurrentBuffer() throws IOException {\n    if (currentBufferIndex >= file.numBuffers()) {\n      // end of file reached, no more buffers left\n      throw new IOException(\"Read past EOF\");\n    } else {\n      currentBuffer = (byte[]) file.getBuffer(currentBufferIndex);\n      bufferPosition = 0;\n      bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n      long buflen = length - bufferStart;\n      bufferLength = buflen > BUFFER_SIZE ? BUFFER_SIZE : (int) buflen;\n    }\n  }\n\n","sourceOld":"  private final void switchCurrentBuffer() throws IOException {\n    if (currentBufferIndex >= file.buffers.size()) {\n      // end of file reached, no more buffers left\n      throw new IOException(\"Read past EOF\");\n    } else {\n      currentBuffer = (byte[]) file.buffers.get(currentBufferIndex);\n      bufferPosition = 0;\n      bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n      long buflen = length - bufferStart;\n      bufferLength = buflen > BUFFER_SIZE ? BUFFER_SIZE : (int) buflen;\n    }\n  }\n\n","bugFix":["d568d474b2c3c00dd89047135bcb6ff8bfa7b559"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e64e4308bd25f7fdf6115d689d83d8c2786cf3f","date":1204233239,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer(boolean).mjava","pathOld":"src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer().mjava","sourceNew":"  private final void switchCurrentBuffer(boolean enforceEOF) throws IOException {\n    if (currentBufferIndex >= file.numBuffers()) {\n      // end of file reached, no more buffers left\n      if (enforceEOF)\n        throw new IOException(\"Read past EOF\");\n      else {\n        // Force EOF if a read takes place at this position\n        currentBufferIndex--;\n        bufferPosition = BUFFER_SIZE;\n      }\n    } else {\n      currentBuffer = (byte[]) file.getBuffer(currentBufferIndex);\n      bufferPosition = 0;\n      bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n      long buflen = length - bufferStart;\n      bufferLength = buflen > BUFFER_SIZE ? BUFFER_SIZE : (int) buflen;\n    }\n  }\n\n","sourceOld":"  private final void switchCurrentBuffer() throws IOException {\n    if (currentBufferIndex >= file.numBuffers()) {\n      // end of file reached, no more buffers left\n      throw new IOException(\"Read past EOF\");\n    } else {\n      currentBuffer = (byte[]) file.getBuffer(currentBufferIndex);\n      bufferPosition = 0;\n      bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n      long buflen = length - bufferStart;\n      bufferLength = buflen > BUFFER_SIZE ? BUFFER_SIZE : (int) buflen;\n    }\n  }\n\n","bugFix":null,"bugIntro":["18efbc72c32221d05cd225926b1cbab767337ed0","34aad2b15e35959ef2a8c4b991feea4c497936b7"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"d568d474b2c3c00dd89047135bcb6ff8bfa7b559":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1e64e4308bd25f7fdf6115d689d83d8c2786cf3f":["db540c50a68e844566353b8808cc4b7106eb13d6"],"db540c50a68e844566353b8808cc4b7106eb13d6":["1acc0d4d75fc7ad1dae131d00a9ffa438b257ebe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1acc0d4d75fc7ad1dae131d00a9ffa438b257ebe":["d568d474b2c3c00dd89047135bcb6ff8bfa7b559"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1e64e4308bd25f7fdf6115d689d83d8c2786cf3f"]},"commit2Childs":{"d568d474b2c3c00dd89047135bcb6ff8bfa7b559":["1acc0d4d75fc7ad1dae131d00a9ffa438b257ebe"],"1e64e4308bd25f7fdf6115d689d83d8c2786cf3f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d568d474b2c3c00dd89047135bcb6ff8bfa7b559"],"db540c50a68e844566353b8808cc4b7106eb13d6":["1e64e4308bd25f7fdf6115d689d83d8c2786cf3f"],"1acc0d4d75fc7ad1dae131d00a9ffa438b257ebe":["db540c50a68e844566353b8808cc4b7106eb13d6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}