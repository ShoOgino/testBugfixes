{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/nodes/PointQueryNode#getTermEscaped(EscapeQuerySyntax).mjava","commits":[{"id":"683242c67a3f6086bae8b1354748fcaa38edfbd5","date":1457575601,"type":2,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/nodes/PointQueryNode#getTermEscaped(EscapeQuerySyntax).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/nodes/NumericQueryNode#getTermEscaped(EscapeQuerySyntax).mjava","sourceNew":"  /**\n   * This method is used to get the value converted to {@link String} and\n   * escaped using the given {@link EscapeQuerySyntax}.\n   * \n   * @param escaper the {@link EscapeQuerySyntax} used to escape the value {@link String}\n   * \n   * @return the value converte to {@link String} and escaped\n   */\n  protected CharSequence getTermEscaped(EscapeQuerySyntax escaper) {\n    return escaper.escape(numberFormat.format(this.value),\n        Locale.ROOT, Type.NORMAL);\n  }\n\n","sourceOld":"  /**\n   * This method is used to get the value converted to {@link String} and\n   * escaped using the given {@link EscapeQuerySyntax}.\n   * \n   * @param escaper the {@link EscapeQuerySyntax} used to escape the value {@link String}\n   * \n   * @return the value converte to {@link String} and escaped\n   */\n  protected CharSequence getTermEscaped(EscapeQuerySyntax escaper) {\n    return escaper.escape(numberFormat.format(this.value),\n        Locale.ROOT, Type.NORMAL);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d669cb2b7fbc6ceb7f966e63a1c625e6400c7d2a","date":1550036130,"type":3,"author":"Bruno P. Kinoshita","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/nodes/PointQueryNode#getTermEscaped(EscapeQuerySyntax).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/nodes/PointQueryNode#getTermEscaped(EscapeQuerySyntax).mjava","sourceNew":"  /**\n   * This method is used to get the value converted to {@link String} and\n   * escaped using the given {@link EscapeQuerySyntax}.\n   * \n   * @param escaper the {@link EscapeQuerySyntax} used to escape the value {@link String}\n   * \n   * @return the value converted to {@link String} and escaped\n   */\n  protected CharSequence getTermEscaped(EscapeQuerySyntax escaper) {\n    return escaper.escape(numberFormat.format(this.value),\n        Locale.ROOT, Type.NORMAL);\n  }\n\n","sourceOld":"  /**\n   * This method is used to get the value converted to {@link String} and\n   * escaped using the given {@link EscapeQuerySyntax}.\n   * \n   * @param escaper the {@link EscapeQuerySyntax} used to escape the value {@link String}\n   * \n   * @return the value converte to {@link String} and escaped\n   */\n  protected CharSequence getTermEscaped(EscapeQuerySyntax escaper) {\n    return escaper.escape(numberFormat.format(this.value),\n        Locale.ROOT, Type.NORMAL);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"683242c67a3f6086bae8b1354748fcaa38edfbd5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d669cb2b7fbc6ceb7f966e63a1c625e6400c7d2a":["683242c67a3f6086bae8b1354748fcaa38edfbd5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d669cb2b7fbc6ceb7f966e63a1c625e6400c7d2a"]},"commit2Childs":{"683242c67a3f6086bae8b1354748fcaa38edfbd5":["d669cb2b7fbc6ceb7f966e63a1c625e6400c7d2a"],"d669cb2b7fbc6ceb7f966e63a1c625e6400c7d2a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["683242c67a3f6086bae8b1354748fcaa38edfbd5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}