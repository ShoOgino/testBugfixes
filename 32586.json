{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/WithinPrefixTreeFilter#bufferShape(Shape,double).mjava","commits":[{"id":"5aeecf64d57563b4636e7f4222e7ddcde7f8df7b","date":1364392557,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/WithinPrefixTreeFilter#bufferShape(Shape,double).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns a new shape that is larger than shape by at distErr.\n   */\n  //TODO move this generic code elsewhere?  Spatial4j?\n  protected Shape bufferShape(Shape shape, double distErr) {\n    if (distErr <= 0)\n      throw new IllegalArgumentException(\"distErr must be > 0\");\n    SpatialContext ctx = grid.getSpatialContext();\n    if (shape instanceof Point) {\n      return ctx.makeCircle((Point)shape, distErr);\n    } else if (shape instanceof Circle) {\n      Circle circle = (Circle) shape;\n      double newDist = circle.getRadius() + distErr;\n      if (ctx.isGeo() && newDist > 180)\n        newDist = 180;\n      return ctx.makeCircle(circle.getCenter(), newDist);\n    } else {\n      Rectangle bbox = shape.getBoundingBox();\n      double newMinX = bbox.getMinX() - distErr;\n      double newMaxX = bbox.getMaxX() + distErr;\n      double newMinY = bbox.getMinY() - distErr;\n      double newMaxY = bbox.getMaxY() + distErr;\n      if (ctx.isGeo()) {\n        if (newMinY < -90)\n          newMinY = -90;\n        if (newMaxY > 90)\n          newMaxY = 90;\n        if (newMinY == -90 || newMaxY == 90 || bbox.getWidth() + 2*distErr > 360) {\n          newMinX = -180;\n          newMaxX = 180;\n        } else {\n          newMinX = DistanceUtils.normLonDEG(newMinX);\n          newMaxX = DistanceUtils.normLonDEG(newMaxX);\n        }\n      } else {\n        //restrict to world bounds\n        newMinX = Math.max(newMinX, ctx.getWorldBounds().getMinX());\n        newMaxX = Math.min(newMaxX, ctx.getWorldBounds().getMaxX());\n        newMinY = Math.max(newMinY, ctx.getWorldBounds().getMinY());\n        newMaxY = Math.min(newMaxY, ctx.getWorldBounds().getMaxY());\n      }\n      return ctx.makeRectangle(newMinX, newMaxX, newMinY, newMaxY);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"672b198fc3dce868916c727917cae58c2906763d","date":1443669960,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/WithinPrefixTreeQuery#bufferShape(Shape,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/WithinPrefixTreeFilter#bufferShape(Shape,double).mjava","sourceNew":"  /** Returns a new shape that is larger than shape by at distErr.\n   */\n  //TODO move this generic code elsewhere?  Spatial4j?\n  protected Shape bufferShape(Shape shape, double distErr) {\n    if (distErr <= 0)\n      throw new IllegalArgumentException(\"distErr must be > 0\");\n    SpatialContext ctx = grid.getSpatialContext();\n    if (shape instanceof Point) {\n      return ctx.makeCircle((Point)shape, distErr);\n    } else if (shape instanceof Circle) {\n      Circle circle = (Circle) shape;\n      double newDist = circle.getRadius() + distErr;\n      if (ctx.isGeo() && newDist > 180)\n        newDist = 180;\n      return ctx.makeCircle(circle.getCenter(), newDist);\n    } else {\n      Rectangle bbox = shape.getBoundingBox();\n      double newMinX = bbox.getMinX() - distErr;\n      double newMaxX = bbox.getMaxX() + distErr;\n      double newMinY = bbox.getMinY() - distErr;\n      double newMaxY = bbox.getMaxY() + distErr;\n      if (ctx.isGeo()) {\n        if (newMinY < -90)\n          newMinY = -90;\n        if (newMaxY > 90)\n          newMaxY = 90;\n        if (newMinY == -90 || newMaxY == 90 || bbox.getWidth() + 2*distErr > 360) {\n          newMinX = -180;\n          newMaxX = 180;\n        } else {\n          newMinX = DistanceUtils.normLonDEG(newMinX);\n          newMaxX = DistanceUtils.normLonDEG(newMaxX);\n        }\n      } else {\n        //restrict to world bounds\n        newMinX = Math.max(newMinX, ctx.getWorldBounds().getMinX());\n        newMaxX = Math.min(newMaxX, ctx.getWorldBounds().getMaxX());\n        newMinY = Math.max(newMinY, ctx.getWorldBounds().getMinY());\n        newMaxY = Math.min(newMaxY, ctx.getWorldBounds().getMaxY());\n      }\n      return ctx.makeRectangle(newMinX, newMaxX, newMinY, newMaxY);\n    }\n  }\n\n","sourceOld":"  /** Returns a new shape that is larger than shape by at distErr.\n   */\n  //TODO move this generic code elsewhere?  Spatial4j?\n  protected Shape bufferShape(Shape shape, double distErr) {\n    if (distErr <= 0)\n      throw new IllegalArgumentException(\"distErr must be > 0\");\n    SpatialContext ctx = grid.getSpatialContext();\n    if (shape instanceof Point) {\n      return ctx.makeCircle((Point)shape, distErr);\n    } else if (shape instanceof Circle) {\n      Circle circle = (Circle) shape;\n      double newDist = circle.getRadius() + distErr;\n      if (ctx.isGeo() && newDist > 180)\n        newDist = 180;\n      return ctx.makeCircle(circle.getCenter(), newDist);\n    } else {\n      Rectangle bbox = shape.getBoundingBox();\n      double newMinX = bbox.getMinX() - distErr;\n      double newMaxX = bbox.getMaxX() + distErr;\n      double newMinY = bbox.getMinY() - distErr;\n      double newMaxY = bbox.getMaxY() + distErr;\n      if (ctx.isGeo()) {\n        if (newMinY < -90)\n          newMinY = -90;\n        if (newMaxY > 90)\n          newMaxY = 90;\n        if (newMinY == -90 || newMaxY == 90 || bbox.getWidth() + 2*distErr > 360) {\n          newMinX = -180;\n          newMaxX = 180;\n        } else {\n          newMinX = DistanceUtils.normLonDEG(newMinX);\n          newMaxX = DistanceUtils.normLonDEG(newMaxX);\n        }\n      } else {\n        //restrict to world bounds\n        newMinX = Math.max(newMinX, ctx.getWorldBounds().getMinX());\n        newMaxX = Math.min(newMaxX, ctx.getWorldBounds().getMaxX());\n        newMinY = Math.max(newMinY, ctx.getWorldBounds().getMinY());\n        newMaxY = Math.min(newMaxY, ctx.getWorldBounds().getMaxY());\n      }\n      return ctx.makeRectangle(newMinX, newMaxX, newMinY, newMaxY);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"672b198fc3dce868916c727917cae58c2906763d":["5aeecf64d57563b4636e7f4222e7ddcde7f8df7b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["672b198fc3dce868916c727917cae58c2906763d"],"5aeecf64d57563b4636e7f4222e7ddcde7f8df7b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"672b198fc3dce868916c727917cae58c2906763d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5aeecf64d57563b4636e7f4222e7ddcde7f8df7b"],"5aeecf64d57563b4636e7f4222e7ddcde7f8df7b":["672b198fc3dce868916c727917cae58c2906763d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}