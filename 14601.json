{"path":"lucene/src/java/org/apache/lucene/search/FieldComparator.IntDocValuesComparator#compareBottom(int).mjava","commits":[{"id":"85130289d2ed101fcc2d8798511c7c5b020ffab4","date":1297239859,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.IntDocValuesComparator#compareBottom(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.IntIndexValuesComparator#compareBottom(int).mjava","sourceNew":"    @Override\n    public int compareBottom(int doc) {\n      // TODO: there are sneaky non-branch ways to compute\n      // -1/+1/0 sign\n      final long v2 = currentReaderValues.getInt(doc);\n      if (bottom > v2) {\n        return 1;\n      } else if (bottom < v2) {\n        return -1;\n      } else {\n        return 0;\n      }\n    }\n\n","sourceOld":"    @Override\n    public int compareBottom(int doc) {\n      // TODO: there are sneaky non-branch ways to compute\n      // -1/+1/0 sign\n      final long v2 = currentReaderValues.getInt(doc);\n      if (bottom > v2) {\n        return 1;\n      } else if (bottom < v2) {\n        return -1;\n      } else {\n        return 0;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.IntDocValuesComparator#compareBottom(int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public int compareBottom(int doc) {\n      // TODO: there are sneaky non-branch ways to compute\n      // -1/+1/0 sign\n      final long v2 = currentReaderValues.getInt(doc);\n      if (bottom > v2) {\n        return 1;\n      } else if (bottom < v2) {\n        return -1;\n      } else {\n        return 0;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.IntDocValuesComparator#compareBottom(int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public int compareBottom(int doc) {\n      // TODO: there are sneaky non-branch ways to compute\n      // -1/+1/0 sign\n      final long v2 = currentReaderValues.getInt(doc);\n      if (bottom > v2) {\n        return 1;\n      } else if (bottom < v2) {\n        return -1;\n      } else {\n        return 0;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.IntDocValuesComparator#compareBottom(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.IntDocValuesComparator#compareBottom(int).mjava","sourceNew":"    @Override\n    public int compareBottom(int doc) {\n      // TODO: there are sneaky non-branch ways to compute\n      // -1/+1/0 sign\n      final long v2 = currentReaderValues.getInt(doc);\n      if (bottom > v2) {\n        return 1;\n      } else if (bottom < v2) {\n        return -1;\n      } else {\n        return 0;\n      }\n    }\n\n","sourceOld":"    @Override\n    public int compareBottom(int doc) {\n      // TODO: there are sneaky non-branch ways to compute\n      // -1/+1/0 sign\n      final long v2 = currentReaderValues.getInt(doc);\n      if (bottom > v2) {\n        return 1;\n      } else if (bottom < v2) {\n        return -1;\n      } else {\n        return 0;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2e8d7ba2175f47e280231533f7d3016249cea88b"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","85130289d2ed101fcc2d8798511c7c5b020ffab4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85130289d2ed101fcc2d8798511c7c5b020ffab4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","2e8d7ba2175f47e280231533f7d3016249cea88b","85130289d2ed101fcc2d8798511c7c5b020ffab4"],"85130289d2ed101fcc2d8798511c7c5b020ffab4":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}