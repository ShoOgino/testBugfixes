{"path":"solr/core/src/java/org/apache/solr/search/join/BlockJoinFieldFacetAccumulator#getFacetValue().mjava","commits":[{"id":"dbb4b815ac37f3938a2f7c18c2e7a5267ed50a1d","date":1450976696,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/BlockJoinFieldFacetAccumulator#getFacetValue().mjava","pathOld":"/dev/null","sourceNew":"  /** copy paste from {@link DocValuesFacets} */\n  NamedList<Integer> getFacetValue() {\n    NamedList<Integer> facetValue = new NamedList<>();\n    final CharsRefBuilder charsRef = new CharsRefBuilder(); // if there is no globs, take segment's ones\n    for (int i = 1; i< (globalCounts!=null ? globalCounts.length: segmentAccums.length); i++) {\n      int count = globalCounts!=null ? globalCounts[i] : (int)(segmentAccums [i]>>32);\n      if (count > 0) {\n        BytesRef term = topSSDV.lookupOrd(-1 + i);\n        fieldType.indexedToReadable(term, charsRef);\n        facetValue.add(charsRef.toString(), count);\n      }\n    }\n    return facetValue;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["f7558b5077dd4abd457be151475f13b541f4f13e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f7558b5077dd4abd457be151475f13b541f4f13e","date":1475830751,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/BlockJoinFieldFacetAccumulator#getFacetValue().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/BlockJoinFieldFacetAccumulator#getFacetValue().mjava","sourceNew":"  /** copy paste from {@link DocValuesFacets} */\n  NamedList<Integer> getFacetValue() throws IOException {\n    NamedList<Integer> facetValue = new NamedList<>();\n    final CharsRefBuilder charsRef = new CharsRefBuilder(); // if there is no globs, take segment's ones\n    for (int i = 1; i< (globalCounts!=null ? globalCounts.length: segmentAccums.length); i++) {\n      int count = globalCounts!=null ? globalCounts[i] : (int)(segmentAccums [i]>>32);\n      if (count > 0) {\n        BytesRef term = topSSDV.lookupOrd(-1 + i);\n        fieldType.indexedToReadable(term, charsRef);\n        facetValue.add(charsRef.toString(), count);\n      }\n    }\n    return facetValue;\n  }\n\n","sourceOld":"  /** copy paste from {@link DocValuesFacets} */\n  NamedList<Integer> getFacetValue() {\n    NamedList<Integer> facetValue = new NamedList<>();\n    final CharsRefBuilder charsRef = new CharsRefBuilder(); // if there is no globs, take segment's ones\n    for (int i = 1; i< (globalCounts!=null ? globalCounts.length: segmentAccums.length); i++) {\n      int count = globalCounts!=null ? globalCounts[i] : (int)(segmentAccums [i]>>32);\n      if (count > 0) {\n        BytesRef term = topSSDV.lookupOrd(-1 + i);\n        fieldType.indexedToReadable(term, charsRef);\n        facetValue.add(charsRef.toString(), count);\n      }\n    }\n    return facetValue;\n  }\n\n","bugFix":["dbb4b815ac37f3938a2f7c18c2e7a5267ed50a1d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/join/BlockJoinFieldFacetAccumulator#getFacetValue().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/BlockJoinFieldFacetAccumulator#getFacetValue().mjava","sourceNew":"  /** copy paste from {@link DocValuesFacets} */\n  NamedList<Integer> getFacetValue() throws IOException {\n    NamedList<Integer> facetValue = new NamedList<>();\n    final CharsRefBuilder charsRef = new CharsRefBuilder(); // if there is no globs, take segment's ones\n    for (int i = 1; i< (globalCounts!=null ? globalCounts.length: segmentAccums.length); i++) {\n      int count = globalCounts!=null ? globalCounts[i] : (int)(segmentAccums [i]>>32);\n      if (count > 0) {\n        BytesRef term = topSSDV.lookupOrd(-1 + i);\n        fieldType.indexedToReadable(term, charsRef);\n        facetValue.add(charsRef.toString(), count);\n      }\n    }\n    return facetValue;\n  }\n\n","sourceOld":"  /** copy paste from {@link DocValuesFacets} */\n  NamedList<Integer> getFacetValue() {\n    NamedList<Integer> facetValue = new NamedList<>();\n    final CharsRefBuilder charsRef = new CharsRefBuilder(); // if there is no globs, take segment's ones\n    for (int i = 1; i< (globalCounts!=null ? globalCounts.length: segmentAccums.length); i++) {\n      int count = globalCounts!=null ? globalCounts[i] : (int)(segmentAccums [i]>>32);\n      if (count > 0) {\n        BytesRef term = topSSDV.lookupOrd(-1 + i);\n        fieldType.indexedToReadable(term, charsRef);\n        facetValue.add(charsRef.toString(), count);\n      }\n    }\n    return facetValue;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"00a778ad8ad6c2c04607538d2f36fee001239eef","date":1576657013,"type":4,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/join/BlockJoinFieldFacetAccumulator#getFacetValue().mjava","sourceNew":null,"sourceOld":"  /** copy paste from {@link DocValuesFacets} */\n  NamedList<Integer> getFacetValue() throws IOException {\n    NamedList<Integer> facetValue = new NamedList<>();\n    final CharsRefBuilder charsRef = new CharsRefBuilder(); // if there is no globs, take segment's ones\n    for (int i = 1; i< (globalCounts!=null ? globalCounts.length: segmentAccums.length); i++) {\n      int count = globalCounts!=null ? globalCounts[i] : (int)(segmentAccums [i]>>32);\n      if (count > 0) {\n        BytesRef term = topSSDV.lookupOrd(-1 + i);\n        fieldType.indexedToReadable(term, charsRef);\n        facetValue.add(charsRef.toString(), count);\n      }\n    }\n    return facetValue;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"246314af59d76a47fccc31e9494eefee01ec9c00","date":1576657955,"type":4,"author":"Dawid Weiss","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/join/BlockJoinFieldFacetAccumulator#getFacetValue().mjava","sourceNew":null,"sourceOld":"  /** copy paste from {@link DocValuesFacets} */\n  NamedList<Integer> getFacetValue() throws IOException {\n    NamedList<Integer> facetValue = new NamedList<>();\n    final CharsRefBuilder charsRef = new CharsRefBuilder(); // if there is no globs, take segment's ones\n    for (int i = 1; i< (globalCounts!=null ? globalCounts.length: segmentAccums.length); i++) {\n      int count = globalCounts!=null ? globalCounts[i] : (int)(segmentAccums [i]>>32);\n      if (count > 0) {\n        BytesRef term = topSSDV.lookupOrd(-1 + i);\n        fieldType.indexedToReadable(term, charsRef);\n        facetValue.add(charsRef.toString(), count);\n      }\n    }\n    return facetValue;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"246314af59d76a47fccc31e9494eefee01ec9c00":["f7558b5077dd4abd457be151475f13b541f4f13e","00a778ad8ad6c2c04607538d2f36fee001239eef"],"f7558b5077dd4abd457be151475f13b541f4f13e":["dbb4b815ac37f3938a2f7c18c2e7a5267ed50a1d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dbb4b815ac37f3938a2f7c18c2e7a5267ed50a1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"00a778ad8ad6c2c04607538d2f36fee001239eef":["f7558b5077dd4abd457be151475f13b541f4f13e"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["dbb4b815ac37f3938a2f7c18c2e7a5267ed50a1d","f7558b5077dd4abd457be151475f13b541f4f13e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["00a778ad8ad6c2c04607538d2f36fee001239eef"]},"commit2Childs":{"246314af59d76a47fccc31e9494eefee01ec9c00":[],"f7558b5077dd4abd457be151475f13b541f4f13e":["246314af59d76a47fccc31e9494eefee01ec9c00","00a778ad8ad6c2c04607538d2f36fee001239eef","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dbb4b815ac37f3938a2f7c18c2e7a5267ed50a1d"],"dbb4b815ac37f3938a2f7c18c2e7a5267ed50a1d":["f7558b5077dd4abd457be151475f13b541f4f13e","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"00a778ad8ad6c2c04607538d2f36fee001239eef":["246314af59d76a47fccc31e9494eefee01ec9c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["246314af59d76a47fccc31e9494eefee01ec9c00","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}