{"path":"src/common/org/apache/solr/common/params/SolrParams#getFieldInt(String,String).mjava","commits":[{"id":"e3602d5eab954caecc726ab136ad580ac1ceb917","date":1228676831,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/common/org/apache/solr/common/params/SolrParams#getFieldInt(String,String).mjava","pathOld":"src/java/org/apache/solr/common/params/SolrParams#getFieldInt(String,String).mjava","sourceNew":"  /** Returns the int value of the field param,\n  or the value for param, or def if neither is set. */\n  public Integer getFieldInt(String field, String param) {\n    String val = getFieldParam(field, param);\n    try {\n      return val==null ? null : Integer.valueOf(val);\n    }\n    catch( Exception ex ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, ex.getMessage(), ex );\n    }\n  }\n\n","sourceOld":"  /** Returns the int value of the field param,\n  or the value for param, or def if neither is set. */\n  public Integer getFieldInt(String field, String param) {\n    String val = getFieldParam(field, param);\n    try {\n      return val==null ? null : Integer.valueOf(val);\n    }\n    catch( Exception ex ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, ex.getMessage(), ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58e38d1c710adfa2343841c116380dd2562b09c0","date":1231909173,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/common/org/apache/solr/common/params/SolrParams#getFieldInt(String,String).mjava","pathOld":"src/common/org/apache/solr/common/params/SolrParams#getFieldInt(String,String).mjava","sourceNew":"  /**\n   * @return The int value of the field param, or the value for param \n   * or <code>null</code> if neither is set. \n   **/\n  public Integer getFieldInt(String field, String param) {\n    String val = getFieldParam(field, param);\n    try {\n      return val==null ? null : Integer.valueOf(val);\n    }\n    catch( Exception ex ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, ex.getMessage(), ex );\n    }\n  }\n\n","sourceOld":"  /** Returns the int value of the field param,\n  or the value for param, or def if neither is set. */\n  public Integer getFieldInt(String field, String param) {\n    String val = getFieldParam(field, param);\n    try {\n      return val==null ? null : Integer.valueOf(val);\n    }\n    catch( Exception ex ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, ex.getMessage(), ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/common/org/apache/solr/common/params/SolrParams#getFieldInt(String,String).mjava","pathOld":"src/common/org/apache/solr/common/params/SolrParams#getFieldInt(String,String).mjava","sourceNew":"  /**\n   * @return The int value of the field param, or the value for param \n   * or <code>null</code> if neither is set. \n   **/\n  public Integer getFieldInt(String field, String param) {\n    String val = getFieldParam(field, param);\n    try {\n      return val==null ? null : Integer.valueOf(val);\n    }\n    catch( Exception ex ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, ex.getMessage(), ex );\n    }\n  }\n\n","sourceOld":"  /**\n   * @return The int value of the field param, or the value for param \n   * or <code>null</code> if neither is set. \n   **/\n  public Integer getFieldInt(String field, String param) {\n    String val = getFieldParam(field, param);\n    try {\n      return val==null ? null : Integer.valueOf(val);\n    }\n    catch( Exception ex ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, ex.getMessage(), ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"58e38d1c710adfa2343841c116380dd2562b09c0":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"e3602d5eab954caecc726ab136ad580ac1ceb917":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["58e38d1c710adfa2343841c116380dd2562b09c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"58e38d1c710adfa2343841c116380dd2562b09c0":["ad94625fb8d088209f46650c8097196fec67f00c"],"e3602d5eab954caecc726ab136ad580ac1ceb917":["58e38d1c710adfa2343841c116380dd2562b09c0"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}