{"path":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase.FileStream#getReader().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase.FileStream#getReader().mjava","pathOld":"solr/src/common/org/apache/solr/common/util/ContentStreamBase.FileStream#getReader().mjava","sourceNew":"    /**\n     * If an charset is defined (by the contentType) use that, otherwise \n     * use a file reader\n     */\n    @Override\n    public Reader getReader() throws IOException {\n      String charset = getCharsetFromContentType( contentType );\n      return charset == null \n        ? new FileReader( file )\n        : new InputStreamReader( getStream(), charset );\n    }\n\n","sourceOld":"    /**\n     * If an charset is defined (by the contentType) use that, otherwise \n     * use a file reader\n     */\n    @Override\n    public Reader getReader() throws IOException {\n      String charset = getCharsetFromContentType( contentType );\n      return charset == null \n        ? new FileReader( file )\n        : new InputStreamReader( getStream(), charset );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase.FileStream#getReader().mjava","pathOld":"solr/src/common/org/apache/solr/common/util/ContentStreamBase.FileStream#getReader().mjava","sourceNew":"    /**\n     * If an charset is defined (by the contentType) use that, otherwise \n     * use a file reader\n     */\n    @Override\n    public Reader getReader() throws IOException {\n      String charset = getCharsetFromContentType( contentType );\n      return charset == null \n        ? new FileReader( file )\n        : new InputStreamReader( getStream(), charset );\n    }\n\n","sourceOld":"    /**\n     * If an charset is defined (by the contentType) use that, otherwise \n     * use a file reader\n     */\n    @Override\n    public Reader getReader() throws IOException {\n      String charset = getCharsetFromContentType( contentType );\n      return charset == null \n        ? new FileReader( file )\n        : new InputStreamReader( getStream(), charset );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase.FileStream#getReader().mjava","pathOld":"solr/src/common/org/apache/solr/common/util/ContentStreamBase.FileStream#getReader().mjava","sourceNew":"    /**\n     * If an charset is defined (by the contentType) use that, otherwise \n     * use a file reader\n     */\n    @Override\n    public Reader getReader() throws IOException {\n      String charset = getCharsetFromContentType( contentType );\n      return charset == null \n        ? new FileReader( file )\n        : new InputStreamReader( getStream(), charset );\n    }\n\n","sourceOld":"    /**\n     * If an charset is defined (by the contentType) use that, otherwise \n     * use a file reader\n     */\n    @Override\n    public Reader getReader() throws IOException {\n      String charset = getCharsetFromContentType( contentType );\n      return charset == null \n        ? new FileReader( file )\n        : new InputStreamReader( getStream(), charset );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"448a213c5dfd8b9baaf143dcbf9e633d8d7d1d5e","date":1341842777,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase.FileStream#getReader().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase.FileStream#getReader().mjava","sourceNew":"    /**\n     * If an charset is defined (by the contentType) use that, otherwise \n     * use a UTF-8 reader\n     */\n    @Override\n    public Reader getReader() throws IOException {\n      String charset = getCharsetFromContentType( contentType );\n      return charset == null \n        ? new InputStreamReader(getStream(), IOUtils.CHARSET_UTF_8)\n        : new InputStreamReader( getStream(), charset );\n    }\n\n","sourceOld":"    /**\n     * If an charset is defined (by the contentType) use that, otherwise \n     * use a file reader\n     */\n    @Override\n    public Reader getReader() throws IOException {\n      String charset = getCharsetFromContentType( contentType );\n      return charset == null \n        ? new FileReader( file )\n        : new InputStreamReader( getStream(), charset );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2acf500f78aa12b92e371fd89c719291986b6b90","date":1341846236,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase.FileStream#getReader().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase.FileStream#getReader().mjava","sourceNew":"    /**\n     * If an charset is defined (by the contentType) use that, otherwise \n     * use a UTF-8 reader\n     */\n    @Override\n    public Reader getReader() throws IOException {\n      String charset = getCharsetFromContentType( contentType );\n      return charset == null \n        ? new InputStreamReader(getStream(), IOUtils.CHARSET_UTF_8)\n        : new InputStreamReader( getStream(), charset );\n    }\n\n","sourceOld":"    /**\n     * If an charset is defined (by the contentType) use that, otherwise \n     * use a file reader\n     */\n    @Override\n    public Reader getReader() throws IOException {\n      String charset = getCharsetFromContentType( contentType );\n      return charset == null \n        ? new FileReader( file )\n        : new InputStreamReader( getStream(), charset );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase.FileStream#getReader().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase.FileStream#getReader().mjava","sourceNew":"    /**\n     * If an charset is defined (by the contentType) use that, otherwise \n     * use a UTF-8 reader\n     */\n    @Override\n    public Reader getReader() throws IOException {\n      String charset = getCharsetFromContentType( contentType );\n      return charset == null \n        ? new InputStreamReader(getStream(), IOUtils.CHARSET_UTF_8)\n        : new InputStreamReader( getStream(), charset );\n    }\n\n","sourceOld":"    /**\n     * If an charset is defined (by the contentType) use that, otherwise \n     * use a file reader\n     */\n    @Override\n    public Reader getReader() throws IOException {\n      String charset = getCharsetFromContentType( contentType );\n      return charset == null \n        ? new FileReader( file )\n        : new InputStreamReader( getStream(), charset );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a46e0237fa7d77f1ae935f05719ba373aa49a4e","date":1341857752,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase.FileStream#getReader().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase.FileStream#getReader().mjava","sourceNew":"    /**\n     * If an charset is defined (by the contentType) use that, otherwise \n     * use a UTF-8 reader\n     */\n    @Override\n    public Reader getReader() throws IOException {\n      String charset = getCharsetFromContentType( contentType );\n      return charset == null \n        ? new InputStreamReader(getStream(), \"UTF-8\")\n        : new InputStreamReader( getStream(), charset );\n    }\n\n","sourceOld":"    /**\n     * If an charset is defined (by the contentType) use that, otherwise \n     * use a UTF-8 reader\n     */\n    @Override\n    public Reader getReader() throws IOException {\n      String charset = getCharsetFromContentType( contentType );\n      return charset == null \n        ? new InputStreamReader(getStream(), IOUtils.CHARSET_UTF_8)\n        : new InputStreamReader( getStream(), charset );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase.FileStream#getReader().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase.FileStream#getReader().mjava","sourceNew":"    /**\n     * If an charset is defined (by the contentType) use that, otherwise \n     * use a UTF-8 reader\n     */\n    @Override\n    public Reader getReader() throws IOException {\n      String charset = getCharsetFromContentType( contentType );\n      return charset == null \n        ? new InputStreamReader(getStream(), \"UTF-8\")\n        : new InputStreamReader( getStream(), charset );\n    }\n\n","sourceOld":"    /**\n     * If an charset is defined (by the contentType) use that, otherwise \n     * use a file reader\n     */\n    @Override\n    public Reader getReader() throws IOException {\n      String charset = getCharsetFromContentType( contentType );\n      return charset == null \n        ? new FileReader( file )\n        : new InputStreamReader( getStream(), charset );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase.FileStream#getReader().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase.FileStream#getReader().mjava","sourceNew":"    /**\n     * If an charset is defined (by the contentType) use that, otherwise \n     * use a UTF-8 reader\n     */\n    @Override\n    public Reader getReader() throws IOException {\n      String charset = getCharsetFromContentType( contentType );\n      return charset == null \n        ? new InputStreamReader(getStream(), \"UTF-8\")\n        : new InputStreamReader( getStream(), charset );\n    }\n\n","sourceOld":"    /**\n     * If an charset is defined (by the contentType) use that, otherwise \n     * use a UTF-8 reader\n     */\n    @Override\n    public Reader getReader() throws IOException {\n      String charset = getCharsetFromContentType( contentType );\n      return charset == null \n        ? new InputStreamReader(getStream(), IOUtils.CHARSET_UTF_8)\n        : new InputStreamReader( getStream(), charset );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eb8fefbe3de65c4dd937adad85d9b35009578838","date":1345153841,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase.FileStream#getReader().mjava","sourceNew":null,"sourceOld":"    /**\n     * If an charset is defined (by the contentType) use that, otherwise \n     * use a UTF-8 reader\n     */\n    @Override\n    public Reader getReader() throws IOException {\n      String charset = getCharsetFromContentType( contentType );\n      return charset == null \n        ? new InputStreamReader(getStream(), \"UTF-8\")\n        : new InputStreamReader( getStream(), charset );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70fa1c0f4d75735ff2e1485e059d9bc5efa50598","date":1345296911,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase.FileStream#getReader().mjava","sourceNew":null,"sourceOld":"    /**\n     * If an charset is defined (by the contentType) use that, otherwise \n     * use a UTF-8 reader\n     */\n    @Override\n    public Reader getReader() throws IOException {\n      String charset = getCharsetFromContentType( contentType );\n      return charset == null \n        ? new InputStreamReader(getStream(), \"UTF-8\")\n        : new InputStreamReader( getStream(), charset );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"616c1830142ff5c1ddedec1ed898733b73c8e23b","date":1345368925,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase.FileStream#getReader().mjava","sourceNew":null,"sourceOld":"    /**\n     * If an charset is defined (by the contentType) use that, otherwise \n     * use a UTF-8 reader\n     */\n    @Override\n    public Reader getReader() throws IOException {\n      String charset = getCharsetFromContentType( contentType );\n      return charset == null \n        ? new InputStreamReader(getStream(), \"UTF-8\")\n        : new InputStreamReader( getStream(), charset );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"616c1830142ff5c1ddedec1ed898733b73c8e23b":["aba371508186796cc6151d8223a5b4e16d02e26e","eb8fefbe3de65c4dd937adad85d9b35009578838"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"2acf500f78aa12b92e371fd89c719291986b6b90":["c26f00b574427b55127e869b935845554afde1fa","448a213c5dfd8b9baaf143dcbf9e633d8d7d1d5e"],"eb8fefbe3de65c4dd937adad85d9b35009578838":["1a46e0237fa7d77f1ae935f05719ba373aa49a4e"],"1a46e0237fa7d77f1ae935f05719ba373aa49a4e":["2acf500f78aa12b92e371fd89c719291986b6b90"],"46d8ada1fff8d18cb197c38c7983225162599948":["c26f00b574427b55127e869b935845554afde1fa","2acf500f78aa12b92e371fd89c719291986b6b90"],"448a213c5dfd8b9baaf143dcbf9e633d8d7d1d5e":["c26f00b574427b55127e869b935845554afde1fa"],"aba371508186796cc6151d8223a5b4e16d02e26e":["46d8ada1fff8d18cb197c38c7983225162599948","1a46e0237fa7d77f1ae935f05719ba373aa49a4e"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["c26f00b574427b55127e869b935845554afde1fa","1a46e0237fa7d77f1ae935f05719ba373aa49a4e"],"70fa1c0f4d75735ff2e1485e059d9bc5efa50598":["fe33227f6805edab2036cbb80645cc4e2d1fa424","eb8fefbe3de65c4dd937adad85d9b35009578838"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["eb8fefbe3de65c4dd937adad85d9b35009578838"]},"commit2Childs":{"616c1830142ff5c1ddedec1ed898733b73c8e23b":[],"c26f00b574427b55127e869b935845554afde1fa":["2acf500f78aa12b92e371fd89c719291986b6b90","46d8ada1fff8d18cb197c38c7983225162599948","448a213c5dfd8b9baaf143dcbf9e633d8d7d1d5e","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"2acf500f78aa12b92e371fd89c719291986b6b90":["1a46e0237fa7d77f1ae935f05719ba373aa49a4e","46d8ada1fff8d18cb197c38c7983225162599948"],"eb8fefbe3de65c4dd937adad85d9b35009578838":["616c1830142ff5c1ddedec1ed898733b73c8e23b","70fa1c0f4d75735ff2e1485e059d9bc5efa50598","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1a46e0237fa7d77f1ae935f05719ba373aa49a4e":["eb8fefbe3de65c4dd937adad85d9b35009578838","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"46d8ada1fff8d18cb197c38c7983225162599948":["aba371508186796cc6151d8223a5b4e16d02e26e"],"aba371508186796cc6151d8223a5b4e16d02e26e":["616c1830142ff5c1ddedec1ed898733b73c8e23b"],"448a213c5dfd8b9baaf143dcbf9e633d8d7d1d5e":["2acf500f78aa12b92e371fd89c719291986b6b90"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["70fa1c0f4d75735ff2e1485e059d9bc5efa50598"],"70fa1c0f4d75735ff2e1485e059d9bc5efa50598":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["616c1830142ff5c1ddedec1ed898733b73c8e23b","70fa1c0f4d75735ff2e1485e059d9bc5efa50598","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}