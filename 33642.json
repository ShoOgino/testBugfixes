{"path":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput#ByteBufferIndexInput(String,ByteBuffer[],long,int).mjava","commits":[{"id":"4e5e734869d76c22acfc12bc53ecbfcc1606c2f5","date":1347072117,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput#ByteBufferIndexInput(String,ByteBuffer[],long,int).mjava","pathOld":"/dev/null","sourceNew":"  ByteBufferIndexInput(String resourceDescription, ByteBuffer[] buffers, long length, int chunkSizePower) throws IOException {\n    super(resourceDescription);\n    this.buffers = buffers;\n    this.length = length;\n    this.chunkSizePower = chunkSizePower;\n    this.chunkSizeMask = (1L << chunkSizePower) - 1L;\n    \n    assert chunkSizePower >= 0 && chunkSizePower <= 30;   \n    assert (length >>> chunkSizePower) < Integer.MAX_VALUE;\n\n    seek(0L);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55d81732702acdcf369ac1e8077a9d11a2559f67","date":1359801354,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput#ByteBufferIndexInput(String,ByteBuffer[],long,int,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput#ByteBufferIndexInput(String,ByteBuffer[],long,int).mjava","sourceNew":"  ByteBufferIndexInput(String resourceDescription, ByteBuffer[] buffers, long length, int chunkSizePower, boolean trackClones) throws IOException {\n    super(resourceDescription);\n    this.buffers = buffers;\n    this.length = length;\n    this.chunkSizePower = chunkSizePower;\n    this.chunkSizeMask = (1L << chunkSizePower) - 1L;\n    this.clones = trackClones ? WeakIdentityMap.<ByteBufferIndexInput,Boolean>newConcurrentHashMap() : null;\n    \n    assert chunkSizePower >= 0 && chunkSizePower <= 30;   \n    assert (length >>> chunkSizePower) < Integer.MAX_VALUE;\n\n    seek(0L);\n  }\n\n","sourceOld":"  ByteBufferIndexInput(String resourceDescription, ByteBuffer[] buffers, long length, int chunkSizePower) throws IOException {\n    super(resourceDescription);\n    this.buffers = buffers;\n    this.length = length;\n    this.chunkSizePower = chunkSizePower;\n    this.chunkSizeMask = (1L << chunkSizePower) - 1L;\n    \n    assert chunkSizePower >= 0 && chunkSizePower <= 30;   \n    assert (length >>> chunkSizePower) < Integer.MAX_VALUE;\n\n    seek(0L);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eb97a913498e2387924cb19fb8be9a95daf6f38a","date":1359823388,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput#ByteBufferIndexInput(String,ByteBuffer[],long,int,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput#ByteBufferIndexInput(String,ByteBuffer[],long,int).mjava","sourceNew":"  ByteBufferIndexInput(String resourceDescription, ByteBuffer[] buffers, long length, int chunkSizePower, boolean trackClones) throws IOException {\n    super(resourceDescription);\n    this.buffers = buffers;\n    this.length = length;\n    this.chunkSizePower = chunkSizePower;\n    this.chunkSizeMask = (1L << chunkSizePower) - 1L;\n    this.clones = trackClones ? WeakIdentityMap.<ByteBufferIndexInput,Boolean>newConcurrentHashMap() : null;\n    \n    assert chunkSizePower >= 0 && chunkSizePower <= 30;   \n    assert (length >>> chunkSizePower) < Integer.MAX_VALUE;\n\n    seek(0L);\n  }\n\n","sourceOld":"  ByteBufferIndexInput(String resourceDescription, ByteBuffer[] buffers, long length, int chunkSizePower) throws IOException {\n    super(resourceDescription);\n    this.buffers = buffers;\n    this.length = length;\n    this.chunkSizePower = chunkSizePower;\n    this.chunkSizeMask = (1L << chunkSizePower) - 1L;\n    \n    assert chunkSizePower >= 0 && chunkSizePower <= 30;   \n    assert (length >>> chunkSizePower) < Integer.MAX_VALUE;\n\n    seek(0L);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4e5e734869d76c22acfc12bc53ecbfcc1606c2f5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"eb97a913498e2387924cb19fb8be9a95daf6f38a":["4e5e734869d76c22acfc12bc53ecbfcc1606c2f5","55d81732702acdcf369ac1e8077a9d11a2559f67"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"55d81732702acdcf369ac1e8077a9d11a2559f67":["4e5e734869d76c22acfc12bc53ecbfcc1606c2f5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["55d81732702acdcf369ac1e8077a9d11a2559f67"]},"commit2Childs":{"4e5e734869d76c22acfc12bc53ecbfcc1606c2f5":["eb97a913498e2387924cb19fb8be9a95daf6f38a","55d81732702acdcf369ac1e8077a9d11a2559f67"],"eb97a913498e2387924cb19fb8be9a95daf6f38a":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4e5e734869d76c22acfc12bc53ecbfcc1606c2f5"],"55d81732702acdcf369ac1e8077a9d11a2559f67":["eb97a913498e2387924cb19fb8be9a95daf6f38a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["eb97a913498e2387924cb19fb8be9a95daf6f38a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}