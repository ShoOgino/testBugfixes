{"path":"solr/core/src/test/org/apache/solr/schema/PrimitiveFieldTypeTest#testTrieDateField().mjava","commits":[{"id":"ed8ca33744b1e924a29aa3aabb54d4c8c831d0f4","date":1415225048,"type":0,"author":"Tomas Eduardo Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/PrimitiveFieldTypeTest#testTrieDateField().mjava","pathOld":"/dev/null","sourceNew":"  public void testTrieDateField() {\n    schema = IndexSchemaFactory.buildIndexSchema(testConfHome + \"schema15.xml\", config);\n    TrieDateField tdt = new TrieDateField();\n    Map<String, String> args = new HashMap<>();\n    args.put(\"sortMissingLast\", \"true\");\n    args.put(\"indexed\", \"true\");\n    args.put(\"stored\", \"false\");\n    args.put(\"docValues\", \"true\");\n    args.put(\"precisionStep\", \"16\");\n    tdt.setArgs(schema, args);\n    assertTrue(tdt.hasProperty(FieldType.OMIT_NORMS));\n    assertTrue(tdt.hasProperty(FieldType.SORT_MISSING_LAST));\n    assertTrue(tdt.hasProperty(FieldType.INDEXED));\n    assertFalse(tdt.hasProperty(FieldType.STORED));\n    assertTrue(tdt.hasProperty(FieldType.DOC_VALUES));\n    assertEquals(16, tdt.getPrecisionStep());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"94a0eda7dbad12579530df39279403d27344ebcb","date":1500511909,"type":4,"author":"Chris Hostetter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/schema/PrimitiveFieldTypeTest#testTrieDateField().mjava","sourceNew":null,"sourceOld":"  public void testTrieDateField() {\n    schema = IndexSchemaFactory.buildIndexSchema(testConfHome + \"schema15.xml\", config);\n    TrieDateField tdt = new TrieDateField();\n    Map<String, String> args = new HashMap<>();\n    args.put(\"sortMissingLast\", \"true\");\n    args.put(\"indexed\", \"true\");\n    args.put(\"stored\", \"false\");\n    args.put(\"docValues\", \"true\");\n    args.put(\"precisionStep\", \"16\");\n    tdt.setArgs(schema, args);\n    assertTrue(tdt.hasProperty(FieldType.OMIT_NORMS));\n    assertTrue(tdt.hasProperty(FieldType.SORT_MISSING_LAST));\n    assertTrue(tdt.hasProperty(FieldType.INDEXED));\n    assertFalse(tdt.hasProperty(FieldType.STORED));\n    assertTrue(tdt.hasProperty(FieldType.DOC_VALUES));\n    assertEquals(16, tdt.getPrecisionStep());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"936cdd5882761db3b844afd6f84ab81cbb011a75","date":1500973524,"type":4,"author":"Cao Manh Dat","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/schema/PrimitiveFieldTypeTest#testTrieDateField().mjava","sourceNew":null,"sourceOld":"  public void testTrieDateField() {\n    schema = IndexSchemaFactory.buildIndexSchema(testConfHome + \"schema15.xml\", config);\n    TrieDateField tdt = new TrieDateField();\n    Map<String, String> args = new HashMap<>();\n    args.put(\"sortMissingLast\", \"true\");\n    args.put(\"indexed\", \"true\");\n    args.put(\"stored\", \"false\");\n    args.put(\"docValues\", \"true\");\n    args.put(\"precisionStep\", \"16\");\n    tdt.setArgs(schema, args);\n    assertTrue(tdt.hasProperty(FieldType.OMIT_NORMS));\n    assertTrue(tdt.hasProperty(FieldType.SORT_MISSING_LAST));\n    assertTrue(tdt.hasProperty(FieldType.INDEXED));\n    assertFalse(tdt.hasProperty(FieldType.STORED));\n    assertTrue(tdt.hasProperty(FieldType.DOC_VALUES));\n    assertEquals(16, tdt.getPrecisionStep());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"94a0eda7dbad12579530df39279403d27344ebcb":["ed8ca33744b1e924a29aa3aabb54d4c8c831d0f4"],"ed8ca33744b1e924a29aa3aabb54d4c8c831d0f4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"936cdd5882761db3b844afd6f84ab81cbb011a75":["ed8ca33744b1e924a29aa3aabb54d4c8c831d0f4","94a0eda7dbad12579530df39279403d27344ebcb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["94a0eda7dbad12579530df39279403d27344ebcb"]},"commit2Childs":{"94a0eda7dbad12579530df39279403d27344ebcb":["936cdd5882761db3b844afd6f84ab81cbb011a75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ed8ca33744b1e924a29aa3aabb54d4c8c831d0f4":["94a0eda7dbad12579530df39279403d27344ebcb","936cdd5882761db3b844afd6f84ab81cbb011a75"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ed8ca33744b1e924a29aa3aabb54d4c8c831d0f4"],"936cdd5882761db3b844afd6f84ab81cbb011a75":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["936cdd5882761db3b844afd6f84ab81cbb011a75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}