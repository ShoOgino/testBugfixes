{"path":"contrib/miscellaneous/src/test/org/apache/lucene/misc/TestLengthNormModifier#setUp().mjava","commits":[{"id":"74b183d06c98e975319fefb0a1bc672b66be868e","date":1148582944,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"contrib/miscellaneous/src/test/org/apache/lucene/misc/TestLengthNormModifier#setUp().mjava","pathOld":"/dev/null","sourceNew":"    public void setUp() throws Exception {\n\tIndexWriter writer = new\n\t    IndexWriter(store, new SimpleAnalyzer(), true);\n\t\n\tIndexSearcher searcher;\n\t\n\tfor (int i = 0; i < NUM_DOCS; i++) {\n\t    Document d = new Document();\n\t    d.add(new Field(\"field\", \"word\",\n\t\t\t    Field.Store.YES, Field.Index.TOKENIZED));\n\t    d.add(new Field(\"nonorm\", \"word\",\n\t\t\t    Field.Store.YES, Field.Index.NO_NORMS));\n\t\t\n\t    for (int j = 1; j <= i; j++) {\n\t\td.add(new Field(\"field\", \"crap\",\n\t\t\t\tField.Store.YES, Field.Index.TOKENIZED));\n\t\td.add(new Field(\"nonorm\", \"more words\",\n\t\t\t\tField.Store.YES, Field.Index.NO_NORMS));\n\t    }\n\t    writer.addDocument(d);\n\t}\n\twriter.close();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","date":1221082732,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/miscellaneous/src/test/org/apache/lucene/misc/TestLengthNormModifier#setUp().mjava","pathOld":"contrib/miscellaneous/src/test/org/apache/lucene/misc/TestLengthNormModifier#setUp().mjava","sourceNew":"    public void setUp() throws Exception {\n\tIndexWriter writer = new\n\t    IndexWriter(store, new SimpleAnalyzer(), true);\n\t\n\tIndexSearcher searcher;\n\t\n\tfor (int i = 0; i < NUM_DOCS; i++) {\n\t    Document d = new Document();\n\t    d.add(new Field(\"field\", \"word\",\n\t\t\t    Field.Store.YES, Field.Index.ANALYZED));\n\t    d.add(new Field(\"nonorm\", \"word\",\n\t\t\t    Field.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS));\n\t\t\n\t    for (int j = 1; j <= i; j++) {\n\t\td.add(new Field(\"field\", \"crap\",\n\t\t\t\tField.Store.YES, Field.Index.ANALYZED));\n\t\td.add(new Field(\"nonorm\", \"more words\",\n\t\t\t\tField.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS));\n\t    }\n\t    writer.addDocument(d);\n\t}\n\twriter.close();\n    }\n\n","sourceOld":"    public void setUp() throws Exception {\n\tIndexWriter writer = new\n\t    IndexWriter(store, new SimpleAnalyzer(), true);\n\t\n\tIndexSearcher searcher;\n\t\n\tfor (int i = 0; i < NUM_DOCS; i++) {\n\t    Document d = new Document();\n\t    d.add(new Field(\"field\", \"word\",\n\t\t\t    Field.Store.YES, Field.Index.TOKENIZED));\n\t    d.add(new Field(\"nonorm\", \"word\",\n\t\t\t    Field.Store.YES, Field.Index.NO_NORMS));\n\t\t\n\t    for (int j = 1; j <= i; j++) {\n\t\td.add(new Field(\"field\", \"crap\",\n\t\t\t\tField.Store.YES, Field.Index.TOKENIZED));\n\t\td.add(new Field(\"nonorm\", \"more words\",\n\t\t\t\tField.Store.YES, Field.Index.NO_NORMS));\n\t    }\n\t    writer.addDocument(d);\n\t}\n\twriter.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"63bc3238545c6012bd44f5d294077997f236bc4e","date":1233087321,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/miscellaneous/src/test/org/apache/lucene/misc/TestLengthNormModifier#setUp().mjava","pathOld":"contrib/miscellaneous/src/test/org/apache/lucene/misc/TestLengthNormModifier#setUp().mjava","sourceNew":"    public void setUp() throws Exception {\n\tIndexWriter writer = new\n\t    IndexWriter(store, new SimpleAnalyzer(), true);\n\t\n\tfor (int i = 0; i < NUM_DOCS; i++) {\n\t    Document d = new Document();\n\t    d.add(new Field(\"field\", \"word\",\n\t\t\t    Field.Store.YES, Field.Index.ANALYZED));\n\t    d.add(new Field(\"nonorm\", \"word\",\n\t\t\t    Field.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS));\n\t\t\n\t    for (int j = 1; j <= i; j++) {\n\t\td.add(new Field(\"field\", \"crap\",\n\t\t\t\tField.Store.YES, Field.Index.ANALYZED));\n\t\td.add(new Field(\"nonorm\", \"more words\",\n\t\t\t\tField.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS));\n\t    }\n\t    writer.addDocument(d);\n\t}\n\twriter.close();\n    }\n\n","sourceOld":"    public void setUp() throws Exception {\n\tIndexWriter writer = new\n\t    IndexWriter(store, new SimpleAnalyzer(), true);\n\t\n\tIndexSearcher searcher;\n\t\n\tfor (int i = 0; i < NUM_DOCS; i++) {\n\t    Document d = new Document();\n\t    d.add(new Field(\"field\", \"word\",\n\t\t\t    Field.Store.YES, Field.Index.ANALYZED));\n\t    d.add(new Field(\"nonorm\", \"word\",\n\t\t\t    Field.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS));\n\t\t\n\t    for (int j = 1; j <= i; j++) {\n\t\td.add(new Field(\"field\", \"crap\",\n\t\t\t\tField.Store.YES, Field.Index.ANALYZED));\n\t\td.add(new Field(\"nonorm\", \"more words\",\n\t\t\t\tField.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS));\n\t    }\n\t    writer.addDocument(d);\n\t}\n\twriter.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64714133cf5ec732e3bbceee63351bb9af0117dc","date":1239647636,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/miscellaneous/src/test/org/apache/lucene/misc/TestLengthNormModifier#setUp().mjava","pathOld":"contrib/miscellaneous/src/test/org/apache/lucene/misc/TestLengthNormModifier#setUp().mjava","sourceNew":"    public void setUp() throws Exception {\n\tIndexWriter writer = new IndexWriter(store, new SimpleAnalyzer(), true, MaxFieldLength.UNLIMITED);\n\t\n\tfor (int i = 0; i < NUM_DOCS; i++) {\n\t    Document d = new Document();\n\t    d.add(new Field(\"field\", \"word\",\n\t\t\t    Field.Store.YES, Field.Index.ANALYZED));\n\t    d.add(new Field(\"nonorm\", \"word\",\n\t\t\t    Field.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS));\n\t\t\n\t    for (int j = 1; j <= i; j++) {\n\t\td.add(new Field(\"field\", \"crap\",\n\t\t\t\tField.Store.YES, Field.Index.ANALYZED));\n\t\td.add(new Field(\"nonorm\", \"more words\",\n\t\t\t\tField.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS));\n\t    }\n\t    writer.addDocument(d);\n\t}\n\twriter.close();\n    }\n\n","sourceOld":"    public void setUp() throws Exception {\n\tIndexWriter writer = new\n\t    IndexWriter(store, new SimpleAnalyzer(), true);\n\t\n\tfor (int i = 0; i < NUM_DOCS; i++) {\n\t    Document d = new Document();\n\t    d.add(new Field(\"field\", \"word\",\n\t\t\t    Field.Store.YES, Field.Index.ANALYZED));\n\t    d.add(new Field(\"nonorm\", \"word\",\n\t\t\t    Field.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS));\n\t\t\n\t    for (int j = 1; j <= i; j++) {\n\t\td.add(new Field(\"field\", \"crap\",\n\t\t\t\tField.Store.YES, Field.Index.ANALYZED));\n\t\td.add(new Field(\"nonorm\", \"more words\",\n\t\t\t\tField.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS));\n\t    }\n\t    writer.addDocument(d);\n\t}\n\twriter.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"48bedd31c61edafb8baaff4bcbcac19449fb7c3a","date":1251468037,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier#setUp().mjava","pathOld":"contrib/miscellaneous/src/test/org/apache/lucene/misc/TestLengthNormModifier#setUp().mjava","sourceNew":"    public void setUp() throws Exception {\n\tIndexWriter writer = new IndexWriter(store, new SimpleAnalyzer(), true, MaxFieldLength.UNLIMITED);\n\t\n\tfor (int i = 0; i < NUM_DOCS; i++) {\n\t    Document d = new Document();\n\t    d.add(new Field(\"field\", \"word\",\n\t\t\t    Field.Store.YES, Field.Index.ANALYZED));\n\t    d.add(new Field(\"nonorm\", \"word\",\n\t\t\t    Field.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS));\n\t\t\n\t    for (int j = 1; j <= i; j++) {\n\t\td.add(new Field(\"field\", \"crap\",\n\t\t\t\tField.Store.YES, Field.Index.ANALYZED));\n\t\td.add(new Field(\"nonorm\", \"more words\",\n\t\t\t\tField.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS));\n\t    }\n\t    writer.addDocument(d);\n\t}\n\twriter.close();\n    }\n\n","sourceOld":"    public void setUp() throws Exception {\n\tIndexWriter writer = new IndexWriter(store, new SimpleAnalyzer(), true, MaxFieldLength.UNLIMITED);\n\t\n\tfor (int i = 0; i < NUM_DOCS; i++) {\n\t    Document d = new Document();\n\t    d.add(new Field(\"field\", \"word\",\n\t\t\t    Field.Store.YES, Field.Index.ANALYZED));\n\t    d.add(new Field(\"nonorm\", \"word\",\n\t\t\t    Field.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS));\n\t\t\n\t    for (int j = 1; j <= i; j++) {\n\t\td.add(new Field(\"field\", \"crap\",\n\t\t\t\tField.Store.YES, Field.Index.ANALYZED));\n\t\td.add(new Field(\"nonorm\", \"more words\",\n\t\t\t\tField.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS));\n\t    }\n\t    writer.addDocument(d);\n\t}\n\twriter.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"74b183d06c98e975319fefb0a1bc672b66be868e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"64714133cf5ec732e3bbceee63351bb9af0117dc":["63bc3238545c6012bd44f5d294077997f236bc4e"],"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["64714133cf5ec732e3bbceee63351bb9af0117dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["74b183d06c98e975319fefb0a1bc672b66be868e"],"63bc3238545c6012bd44f5d294077997f236bc4e":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"]},"commit2Childs":{"74b183d06c98e975319fefb0a1bc672b66be868e":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"64714133cf5ec732e3bbceee63351bb9af0117dc":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"],"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74b183d06c98e975319fefb0a1bc672b66be868e"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["63bc3238545c6012bd44f5d294077997f236bc4e"],"63bc3238545c6012bd44f5d294077997f236bc4e":["64714133cf5ec732e3bbceee63351bb9af0117dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}