{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/NearRealtimeReaderTask.ReopenThread#run().mjava","commits":[{"id":"c4ff8864209d2e972cb4393600c26082f9a6533d","date":1239297466,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/NearRealtimeReaderTask.ReopenThread#run().mjava","pathOld":"/dev/null","sourceNew":"    public void run() {\n\n      IndexReader reader = null;\n\n      final Query query = new TermQuery(new Term(\"body\", \"1\"));\n      final SortField sf = new SortField(\"docdate\", SortField.LONG);\n      final Sort sort = new Sort(sf);\n\n      try {\n        while(!done) {\n          final long t0 = System.currentTimeMillis();\n          if (reader == null) {\n            reader = writer.getReader();\n          } else {\n            final IndexReader newReader = reader.reopen();\n            if (reader != newReader) {\n              reader.close();\n              reader = newReader;\n            }\n          }\n\n          final long t1 = System.currentTimeMillis();\n          final TopFieldDocs hits = new IndexSearcher(reader).search(query, null, 10, sort);\n          final long t2 = System.currentTimeMillis();\n          System.out.println(\"nrt: open \" + (t1-t0) + \" msec; search \" + (t2-t1) + \" msec, \" + hits.totalHits +\n                             \" results; \" + reader.numDocs() + \" docs\");\n\n          final long t4 = System.currentTimeMillis();\n          final int delay = (int) (pauseMsec - (t4-t0));\n          if (delay > 0) {\n            try {\n              Thread.sleep(delay);\n            } catch (InterruptedException ie) {\n              throw new RuntimeException(ie);\n            }\n          }\n        }\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/NearRealtimeReaderTask.ReopenThread#run().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/NearRealtimeReaderTask.ReopenThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n\n      IndexReader reader = null;\n\n      final Query query = new TermQuery(new Term(\"body\", \"1\"));\n      final SortField sf = new SortField(\"docdate\", SortField.LONG);\n      final Sort sort = new Sort(sf);\n\n      try {\n        while(!done) {\n          final long t0 = System.currentTimeMillis();\n          if (reader == null) {\n            reader = writer.getReader();\n          } else {\n            final IndexReader newReader = reader.reopen();\n            if (reader != newReader) {\n              reader.close();\n              reader = newReader;\n            }\n          }\n\n          final long t1 = System.currentTimeMillis();\n          final TopFieldDocs hits = new IndexSearcher(reader).search(query, null, 10, sort);\n          final long t2 = System.currentTimeMillis();\n          System.out.println(\"nrt: open \" + (t1-t0) + \" msec; search \" + (t2-t1) + \" msec, \" + hits.totalHits +\n                             \" results; \" + reader.numDocs() + \" docs\");\n\n          final long t4 = System.currentTimeMillis();\n          final int delay = (int) (pauseMsec - (t4-t0));\n          if (delay > 0) {\n            try {\n              Thread.sleep(delay);\n            } catch (InterruptedException ie) {\n              throw new RuntimeException(ie);\n            }\n          }\n        }\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","sourceOld":"    public void run() {\n\n      IndexReader reader = null;\n\n      final Query query = new TermQuery(new Term(\"body\", \"1\"));\n      final SortField sf = new SortField(\"docdate\", SortField.LONG);\n      final Sort sort = new Sort(sf);\n\n      try {\n        while(!done) {\n          final long t0 = System.currentTimeMillis();\n          if (reader == null) {\n            reader = writer.getReader();\n          } else {\n            final IndexReader newReader = reader.reopen();\n            if (reader != newReader) {\n              reader.close();\n              reader = newReader;\n            }\n          }\n\n          final long t1 = System.currentTimeMillis();\n          final TopFieldDocs hits = new IndexSearcher(reader).search(query, null, 10, sort);\n          final long t2 = System.currentTimeMillis();\n          System.out.println(\"nrt: open \" + (t1-t0) + \" msec; search \" + (t2-t1) + \" msec, \" + hits.totalHits +\n                             \" results; \" + reader.numDocs() + \" docs\");\n\n          final long t4 = System.currentTimeMillis();\n          final int delay = (int) (pauseMsec - (t4-t0));\n          if (delay > 0) {\n            try {\n              Thread.sleep(delay);\n            } catch (InterruptedException ie) {\n              throw new RuntimeException(ie);\n            }\n          }\n        }\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3353540ef2debe4c4c017e9d86e2c60f9e784336","date":1258197258,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/NearRealtimeReaderTask.ReopenThread#run().mjava","sourceNew":null,"sourceOld":"    @Override\n    public void run() {\n\n      IndexReader reader = null;\n\n      final Query query = new TermQuery(new Term(\"body\", \"1\"));\n      final SortField sf = new SortField(\"docdate\", SortField.LONG);\n      final Sort sort = new Sort(sf);\n\n      try {\n        while(!done) {\n          final long t0 = System.currentTimeMillis();\n          if (reader == null) {\n            reader = writer.getReader();\n          } else {\n            final IndexReader newReader = reader.reopen();\n            if (reader != newReader) {\n              reader.close();\n              reader = newReader;\n            }\n          }\n\n          final long t1 = System.currentTimeMillis();\n          final TopFieldDocs hits = new IndexSearcher(reader).search(query, null, 10, sort);\n          final long t2 = System.currentTimeMillis();\n          System.out.println(\"nrt: open \" + (t1-t0) + \" msec; search \" + (t2-t1) + \" msec, \" + hits.totalHits +\n                             \" results; \" + reader.numDocs() + \" docs\");\n\n          final long t4 = System.currentTimeMillis();\n          final int delay = (int) (pauseMsec - (t4-t0));\n          if (delay > 0) {\n            try {\n              Thread.sleep(delay);\n            } catch (InterruptedException ie) {\n              throw new RuntimeException(ie);\n            }\n          }\n        }\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3353540ef2debe4c4c017e9d86e2c60f9e784336":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c4ff8864209d2e972cb4393600c26082f9a6533d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["c4ff8864209d2e972cb4393600c26082f9a6533d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3353540ef2debe4c4c017e9d86e2c60f9e784336"]},"commit2Childs":{"3353540ef2debe4c4c017e9d86e2c60f9e784336":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c4ff8864209d2e972cb4393600c26082f9a6533d"],"c4ff8864209d2e972cb4393600c26082f9a6533d":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["3353540ef2debe4c4c017e9d86e2c60f9e784336"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}