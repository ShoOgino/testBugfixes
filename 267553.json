{"path":"sandbox/contributions/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(String).mjava","commits":[{"id":"b65377a14b2c1af24ad7adce693825c28c9ea0b6","date":1082509564,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(String).mjava","pathOld":"sandbox/contributions/highlighter/src/java/org/apache/lucene/search/highlight/HighlighterTest#doSearching(String).mjava","sourceNew":"\tpublic void doSearching(String queryString) throws Exception\n\t{\n\t\tsearcher = new IndexSearcher(ramDir);\n\t\tquery = QueryParser.parse(queryString, FIELD_NAME, new StandardAnalyzer());\n\t\t//for any multi-term queries to work (prefix, wildcard, range,fuzzy etc) you must use a rewritten query! \n\t\tquery=query.rewrite(reader);\n\t\tSystem.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n\t\thits = searcher.search(query);\n\t}\n\n","sourceOld":"\tpublic void doSearching(String queryString) throws Exception\n\t{\n\t\tsearcher = new IndexSearcher(ramDir);\n\t\tquery = QueryParser.parse(queryString, FIELD_NAME, new StandardAnalyzer());\n\t\t//for any multi-term queries to work (prefix, wildcard, range,fuzzy etc) you must use a rewritten query! \n\t\tquery=query.rewrite(reader);\n\t\tSystem.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n\t\thits = searcher.search(query);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4836b0ad75558e4c39cb1c6ca188c153a48f8e98","date":1090874387,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"sandbox/contributions/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(String).mjava","pathOld":"sandbox/contributions/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(String).mjava","sourceNew":"\tpublic void doSearching(String queryString) throws Exception\n\t{\n\t\tsearcher = new IndexSearcher(ramDir);\n\t\tquery = QueryParser.parse(queryString, FIELD_NAME, new StandardAnalyzer());\n\t\t//for any multi-term queries to work (prefix, wildcard, range,fuzzy etc) you must use a rewritten query!\n\t\tquery=query.rewrite(reader);\n\t\tSystem.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n\t\thits = searcher.search(query);\n\t}\n\n","sourceOld":"\tpublic void doSearching(String queryString) throws Exception\n\t{\n\t\tsearcher = new IndexSearcher(ramDir);\n\t\tquery = QueryParser.parse(queryString, FIELD_NAME, new StandardAnalyzer());\n\t\t//for any multi-term queries to work (prefix, wildcard, range,fuzzy etc) you must use a rewritten query! \n\t\tquery=query.rewrite(reader);\n\t\tSystem.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n\t\thits = searcher.search(query);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(String).mjava","pathOld":"sandbox/contributions/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(String).mjava","sourceNew":"\tpublic void doSearching(String queryString) throws Exception\n\t{\n\t\tsearcher = new IndexSearcher(ramDir);\n\t\tquery = QueryParser.parse(queryString, FIELD_NAME, new StandardAnalyzer());\n\t\t//for any multi-term queries to work (prefix, wildcard, range,fuzzy etc) you must use a rewritten query!\n\t\tquery=query.rewrite(reader);\n\t\tSystem.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n\t\thits = searcher.search(query);\n\t}\n\n","sourceOld":"\tpublic void doSearching(String queryString) throws Exception\n\t{\n\t\tsearcher = new IndexSearcher(ramDir);\n\t\tquery = QueryParser.parse(queryString, FIELD_NAME, new StandardAnalyzer());\n\t\t//for any multi-term queries to work (prefix, wildcard, range,fuzzy etc) you must use a rewritten query!\n\t\tquery=query.rewrite(reader);\n\t\tSystem.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n\t\thits = searcher.search(query);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["4836b0ad75558e4c39cb1c6ca188c153a48f8e98"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b65377a14b2c1af24ad7adce693825c28c9ea0b6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4836b0ad75558e4c39cb1c6ca188c153a48f8e98":["b65377a14b2c1af24ad7adce693825c28c9ea0b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["043c298cb215f13ba7b9b81d20760704e8f93d66"]},"commit2Childs":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b65377a14b2c1af24ad7adce693825c28c9ea0b6"],"b65377a14b2c1af24ad7adce693825c28c9ea0b6":["4836b0ad75558e4c39cb1c6ca188c153a48f8e98"],"4836b0ad75558e4c39cb1c6ca188c153a48f8e98":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}