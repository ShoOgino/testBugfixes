{"path":"lucene/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testLUCENE_3042().mjava","commits":[{"id":"47ef98c97dcd0008187c6ae3c5b4dfe61fbe55cf","date":1303512308,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testLUCENE_3042().mjava","pathOld":"/dev/null","sourceNew":"  public void testLUCENE_3042() throws Exception {\n    String testString = \"t\";\n    \n    Analyzer analyzer = new MockAnalyzer(random);\n    TokenStream stream = analyzer.reusableTokenStream(\"dummy\", new StringReader(testString));\n    stream.reset();\n    while (stream.incrementToken()) {\n      // consume\n    }\n    stream.end();\n    \n    assertAnalyzesToReuse(analyzer, testString, new String[] { \"t\" });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["782ed6a4b4ba50ec19734fc8db4e570ee193d627"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d493718201f0d0c54c773fb323d87bbd2fbffe41","date":1303546048,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testLUCENE_3042().mjava","pathOld":"/dev/null","sourceNew":"  public void testLUCENE_3042() throws Exception {\n    String testString = \"t\";\n    \n    Analyzer analyzer = new MockAnalyzer(random);\n    TokenStream stream = analyzer.reusableTokenStream(\"dummy\", new StringReader(testString));\n    stream.reset();\n    while (stream.incrementToken()) {\n      // consume\n    }\n    stream.end();\n    \n    assertAnalyzesToReuse(analyzer, testString, new String[] { \"t\" });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testLUCENE_3042().mjava","pathOld":"/dev/null","sourceNew":"  public void testLUCENE_3042() throws Exception {\n    String testString = \"t\";\n    \n    Analyzer analyzer = new MockAnalyzer(random);\n    TokenStream stream = analyzer.reusableTokenStream(\"dummy\", new StringReader(testString));\n    stream.reset();\n    while (stream.incrementToken()) {\n      // consume\n    }\n    stream.end();\n    \n    assertAnalyzesToReuse(analyzer, testString, new String[] { \"t\" });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e2efdd13c0f37dbe4a292a6f98ddcf8e8f872ac4","date":1305207152,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testLUCENE_3042().mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testLUCENE_3042().mjava","sourceNew":"  public void testLUCENE_3042() throws Exception {\n    String testString = \"t\";\n    \n    Analyzer analyzer = new MockAnalyzer(random);\n    TokenStream stream = analyzer.reusableTokenStream(\"dummy\", new StringReader(testString));\n    stream.reset();\n    while (stream.incrementToken()) {\n      // consume\n    }\n    stream.end();\n    stream.close();\n    \n    assertAnalyzesToReuse(analyzer, testString, new String[] { \"t\" });\n  }\n\n","sourceOld":"  public void testLUCENE_3042() throws Exception {\n    String testString = \"t\";\n    \n    Analyzer analyzer = new MockAnalyzer(random);\n    TokenStream stream = analyzer.reusableTokenStream(\"dummy\", new StringReader(testString));\n    stream.reset();\n    while (stream.incrementToken()) {\n      // consume\n    }\n    stream.end();\n    \n    assertAnalyzesToReuse(analyzer, testString, new String[] { \"t\" });\n  }\n\n","bugFix":null,"bugIntro":["782ed6a4b4ba50ec19734fc8db4e570ee193d627"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c700f8d0842d3e52bb2bdfbfdc046a137e836edb","date":1305285499,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testLUCENE_3042().mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testLUCENE_3042().mjava","sourceNew":"  public void testLUCENE_3042() throws Exception {\n    String testString = \"t\";\n    \n    Analyzer analyzer = new MockAnalyzer(random);\n    TokenStream stream = analyzer.reusableTokenStream(\"dummy\", new StringReader(testString));\n    stream.reset();\n    while (stream.incrementToken()) {\n      // consume\n    }\n    stream.end();\n    stream.close();\n    \n    assertAnalyzesToReuse(analyzer, testString, new String[] { \"t\" });\n  }\n\n","sourceOld":"  public void testLUCENE_3042() throws Exception {\n    String testString = \"t\";\n    \n    Analyzer analyzer = new MockAnalyzer(random);\n    TokenStream stream = analyzer.reusableTokenStream(\"dummy\", new StringReader(testString));\n    stream.reset();\n    while (stream.incrementToken()) {\n      // consume\n    }\n    stream.end();\n    \n    assertAnalyzesToReuse(analyzer, testString, new String[] { \"t\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testLUCENE_3042().mjava","pathOld":"/dev/null","sourceNew":"  public void testLUCENE_3042() throws Exception {\n    String testString = \"t\";\n    \n    Analyzer analyzer = new MockAnalyzer(random);\n    TokenStream stream = analyzer.reusableTokenStream(\"dummy\", new StringReader(testString));\n    stream.reset();\n    while (stream.incrementToken()) {\n      // consume\n    }\n    stream.end();\n    stream.close();\n    \n    assertAnalyzesToReuse(analyzer, testString, new String[] { \"t\" });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"69e043c521d4e8db770cc140c63f5ef51f03426a","date":1317187614,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testLUCENE_3042().mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testLUCENE_3042().mjava","sourceNew":"  public void testLUCENE_3042() throws Exception {\n    String testString = \"t\";\n    \n    Analyzer analyzer = new MockAnalyzer(random);\n    TokenStream stream = analyzer.tokenStream(\"dummy\", new StringReader(testString));\n    stream.reset();\n    while (stream.incrementToken()) {\n      // consume\n    }\n    stream.end();\n    stream.close();\n    \n    assertAnalyzesToReuse(analyzer, testString, new String[] { \"t\" });\n  }\n\n","sourceOld":"  public void testLUCENE_3042() throws Exception {\n    String testString = \"t\";\n    \n    Analyzer analyzer = new MockAnalyzer(random);\n    TokenStream stream = analyzer.reusableTokenStream(\"dummy\", new StringReader(testString));\n    stream.reset();\n    while (stream.incrementToken()) {\n      // consume\n    }\n    stream.end();\n    stream.close();\n    \n    assertAnalyzesToReuse(analyzer, testString, new String[] { \"t\" });\n  }\n\n","bugFix":null,"bugIntro":["c83d6c4335f31cae14f625a222bc842f20073dcd"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testLUCENE_3042().mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testLUCENE_3042().mjava","sourceNew":"  public void testLUCENE_3042() throws Exception {\n    String testString = \"t\";\n    \n    Analyzer analyzer = new MockAnalyzer(random);\n    TokenStream stream = analyzer.tokenStream(\"dummy\", new StringReader(testString));\n    stream.reset();\n    while (stream.incrementToken()) {\n      // consume\n    }\n    stream.end();\n    stream.close();\n    \n    assertAnalyzesToReuse(analyzer, testString, new String[] { \"t\" });\n  }\n\n","sourceOld":"  public void testLUCENE_3042() throws Exception {\n    String testString = \"t\";\n    \n    Analyzer analyzer = new MockAnalyzer(random);\n    TokenStream stream = analyzer.tokenStream(\"dummy\", new StringReader(testString));\n    stream.reset();\n    while (stream.incrementToken()) {\n      // consume\n    }\n    stream.end();\n    stream.close();\n    \n    assertAnalyzesToReuse(analyzer, testString, new String[] { \"t\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"e2efdd13c0f37dbe4a292a6f98ddcf8e8f872ac4":["47ef98c97dcd0008187c6ae3c5b4dfe61fbe55cf"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["69e043c521d4e8db770cc140c63f5ef51f03426a"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e2efdd13c0f37dbe4a292a6f98ddcf8e8f872ac4"],"47ef98c97dcd0008187c6ae3c5b4dfe61fbe55cf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","47ef98c97dcd0008187c6ae3c5b4dfe61fbe55cf"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":["135621f3a0670a9394eb563224a3b76cc4dddc0f","e2efdd13c0f37dbe4a292a6f98ddcf8e8f872ac4"],"d493718201f0d0c54c773fb323d87bbd2fbffe41":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","47ef98c97dcd0008187c6ae3c5b4dfe61fbe55cf"],"69e043c521d4e8db770cc140c63f5ef51f03426a":["e2efdd13c0f37dbe4a292a6f98ddcf8e8f872ac4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"e2efdd13c0f37dbe4a292a6f98ddcf8e8f872ac4":["a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb","69e043c521d4e8db770cc140c63f5ef51f03426a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"47ef98c97dcd0008187c6ae3c5b4dfe61fbe55cf":["e2efdd13c0f37dbe4a292a6f98ddcf8e8f872ac4","135621f3a0670a9394eb563224a3b76cc4dddc0f","d493718201f0d0c54c773fb323d87bbd2fbffe41"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a3776dccca01c11e7046323cfad46a3b4a471233","47ef98c97dcd0008187c6ae3c5b4dfe61fbe55cf","135621f3a0670a9394eb563224a3b76cc4dddc0f","d493718201f0d0c54c773fb323d87bbd2fbffe41"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":[],"d493718201f0d0c54c773fb323d87bbd2fbffe41":[],"69e043c521d4e8db770cc140c63f5ef51f03426a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb","d493718201f0d0c54c773fb323d87bbd2fbffe41","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}