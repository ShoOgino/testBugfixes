{"path":"src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","commits":[{"id":"a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be","date":1204801324,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","pathOld":"/dev/null","sourceNew":"  public void testMaxBufferedDeletes() throws IOException {\n    for(int pass=0;pass<2;pass++) {\n      boolean autoCommit = (0==pass);\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, autoCommit,\n                                           new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDeleteTerms(1);\n      writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n      writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n      writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n      assertEquals(3, writer.getFlushDeletesCount());\n      writer.close();\n      dir.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4ae99f08f69aa3acba7cd75134e8447eb747559","date":1222344278,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","sourceNew":"  public void testMaxBufferedDeletes() throws IOException {\n    for(int pass=0;pass<2;pass++) {\n      boolean autoCommit = (0==pass);\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, autoCommit,\n                                           new WhitespaceAnalyzer(), true);\n      writer.setMaxBufferedDeleteTerms(1);\n      writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n      writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n      writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n      assertEquals(3, writer.getFlushDeletesCount());\n      writer.close();\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testMaxBufferedDeletes() throws IOException {\n    for(int pass=0;pass<2;pass++) {\n      boolean autoCommit = (0==pass);\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, autoCommit,\n                                           new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDeleteTerms(1);\n      writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n      writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n      writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n      assertEquals(3, writer.getFlushDeletesCount());\n      writer.close();\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"87c966e9308847938a7c905c2e46a56d8df788b8","date":1255035452,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","sourceNew":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir,\n                                         new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.UNLIMITED);\n    writer.setMaxBufferedDeleteTerms(1);\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMaxBufferedDeletes() throws IOException {\n    for(int pass=0;pass<2;pass++) {\n      boolean autoCommit = (0==pass);\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, autoCommit,\n                                           new WhitespaceAnalyzer(), true);\n      writer.setMaxBufferedDeleteTerms(1);\n      writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n      writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n      writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n      assertEquals(3, writer.getFlushDeletesCount());\n      writer.close();\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe0932c1d340f83fb0a611e5829b3046a1cc1152","date":1264946739,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","sourceNew":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir,\n                                         new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.UNLIMITED);\n    writer.setMaxBufferedDeleteTerms(1);\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir,\n                                         new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.UNLIMITED);\n    writer.setMaxBufferedDeleteTerms(1);\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","sourceNew":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir,\n                                         new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.UNLIMITED);\n    writer.setMaxBufferedDeleteTerms(1);\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir,\n                                         new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.UNLIMITED);\n    writer.setMaxBufferedDeleteTerms(1);\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","sourceNew":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT).setMaxBufferedDeleteTerms(1));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir,\n                                         new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.UNLIMITED);\n    writer.setMaxBufferedDeleteTerms(1);\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","sourceNew":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir,\n                                         new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.UNLIMITED);\n    writer.setMaxBufferedDeleteTerms(1);\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT).setMaxBufferedDeleteTerms(1));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","sourceNew":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDeleteTerms(1));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir,\n                                         new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.UNLIMITED);\n    writer.setMaxBufferedDeleteTerms(1);\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","sourceNew":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDeleteTerms(1));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDeleteTerms(1));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"c4ae99f08f69aa3acba7cd75134e8447eb747559":["a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["87c966e9308847938a7c905c2e46a56d8df788b8"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"87c966e9308847938a7c905c2e46a56d8df788b8":["c4ae99f08f69aa3acba7cd75134e8447eb747559"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"c4ae99f08f69aa3acba7cd75134e8447eb747559":["87c966e9308847938a7c905c2e46a56d8df788b8"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be":["c4ae99f08f69aa3acba7cd75134e8447eb747559"],"87c966e9308847938a7c905c2e46a56d8df788b8":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}