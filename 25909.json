{"path":"solr/core/src/java/org/apache/solr/legacy/PointVectorStrategy#makeQuery(SpatialArgs).mjava","commits":[{"id":"a178ac3dec643551e66363c457a9074f55545f86","date":1496133188,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/legacy/PointVectorStrategy#makeQuery(SpatialArgs).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public ConstantScoreQuery makeQuery(SpatialArgs args) {\n    if(! SpatialOperation.is( args.getOperation(),\n        SpatialOperation.Intersects,\n        SpatialOperation.IsWithin ))\n      throw new UnsupportedSpatialOperation(args.getOperation());\n    Shape shape = args.getShape();\n    if (shape instanceof Rectangle) {\n      Rectangle bbox = (Rectangle) shape;\n      return new ConstantScoreQuery(makeWithin(bbox));\n    } else if (shape instanceof Circle) {\n      Circle circle = (Circle)shape;\n      Rectangle bbox = circle.getBoundingBox();\n      Query approxQuery = makeWithin(bbox);\n      BooleanQuery.Builder bqBuilder = new BooleanQuery.Builder();\n      FunctionRangeQuery vsRangeQuery =\n          new FunctionRangeQuery(makeDistanceValueSource(circle.getCenter()), 0.0, circle.getRadius(), true, true);\n      bqBuilder.add(approxQuery, BooleanClause.Occur.FILTER);//should have lowest \"cost\" value; will drive iteration\n      bqBuilder.add(vsRangeQuery, BooleanClause.Occur.FILTER);\n      return new ConstantScoreQuery(bqBuilder.build());\n    } else {\n      throw new UnsupportedOperationException(\"Only Rectangles and Circles are currently supported, \" +\n          \"found [\" + shape.getClass() + \"]\");//TODO\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1f5728f32a4a256b36cfabd7a2636452f599bb9","date":1496231774,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/legacy/PointVectorStrategy#makeQuery(SpatialArgs).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public ConstantScoreQuery makeQuery(SpatialArgs args) {\n    if(! SpatialOperation.is( args.getOperation(),\n        SpatialOperation.Intersects,\n        SpatialOperation.IsWithin ))\n      throw new UnsupportedSpatialOperation(args.getOperation());\n    Shape shape = args.getShape();\n    if (shape instanceof Rectangle) {\n      Rectangle bbox = (Rectangle) shape;\n      return new ConstantScoreQuery(makeWithin(bbox));\n    } else if (shape instanceof Circle) {\n      Circle circle = (Circle)shape;\n      Rectangle bbox = circle.getBoundingBox();\n      Query approxQuery = makeWithin(bbox);\n      BooleanQuery.Builder bqBuilder = new BooleanQuery.Builder();\n      FunctionRangeQuery vsRangeQuery =\n          new FunctionRangeQuery(makeDistanceValueSource(circle.getCenter()), 0.0, circle.getRadius(), true, true);\n      bqBuilder.add(approxQuery, BooleanClause.Occur.FILTER);//should have lowest \"cost\" value; will drive iteration\n      bqBuilder.add(vsRangeQuery, BooleanClause.Occur.FILTER);\n      return new ConstantScoreQuery(bqBuilder.build());\n    } else {\n      throw new UnsupportedOperationException(\"Only Rectangles and Circles are currently supported, \" +\n          \"found [\" + shape.getClass() + \"]\");//TODO\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/legacy/PointVectorStrategy#makeQuery(SpatialArgs).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public ConstantScoreQuery makeQuery(SpatialArgs args) {\n    if(! SpatialOperation.is( args.getOperation(),\n        SpatialOperation.Intersects,\n        SpatialOperation.IsWithin ))\n      throw new UnsupportedSpatialOperation(args.getOperation());\n    Shape shape = args.getShape();\n    if (shape instanceof Rectangle) {\n      Rectangle bbox = (Rectangle) shape;\n      return new ConstantScoreQuery(makeWithin(bbox));\n    } else if (shape instanceof Circle) {\n      Circle circle = (Circle)shape;\n      Rectangle bbox = circle.getBoundingBox();\n      Query approxQuery = makeWithin(bbox);\n      BooleanQuery.Builder bqBuilder = new BooleanQuery.Builder();\n      FunctionRangeQuery vsRangeQuery =\n          new FunctionRangeQuery(makeDistanceValueSource(circle.getCenter()), 0.0, circle.getRadius(), true, true);\n      bqBuilder.add(approxQuery, BooleanClause.Occur.FILTER);//should have lowest \"cost\" value; will drive iteration\n      bqBuilder.add(vsRangeQuery, BooleanClause.Occur.FILTER);\n      return new ConstantScoreQuery(bqBuilder.build());\n    } else {\n      throw new UnsupportedOperationException(\"Only Rectangles and Circles are currently supported, \" +\n          \"found [\" + shape.getClass() + \"]\");//TODO\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"32b9119890a8e82252b6cc341ac491d18fa1e49b","date":1498575219,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/legacy/PointVectorStrategy#makeQuery(SpatialArgs).mjava","pathOld":"solr/core/src/java/org/apache/solr/legacy/PointVectorStrategy#makeQuery(SpatialArgs).mjava","sourceNew":"  @Override\n  public ConstantScoreQuery makeQuery(SpatialArgs args) {\n    if(! SpatialOperation.is( args.getOperation(),\n        SpatialOperation.Intersects,\n        SpatialOperation.IsWithin ))\n      throw new UnsupportedSpatialOperation(args.getOperation());\n    Shape shape = args.getShape();\n    if (shape instanceof Rectangle) {\n      Rectangle bbox = (Rectangle) shape;\n      return new ConstantScoreQuery(makeWithin(bbox));\n    } else if (shape instanceof Circle) {\n      Circle circle = (Circle)shape;\n      Rectangle bbox = circle.getBoundingBox();\n      Query approxQuery = makeWithin(bbox);\n      BooleanQuery.Builder bqBuilder = new BooleanQuery.Builder();\n      double r = circle.getRadius();\n      FunctionMatchQuery vsMatchQuery = new FunctionMatchQuery(makeDistanceValueSource(circle.getCenter()),\n          v -> 0 <= v && v <= r);\n      bqBuilder.add(approxQuery, BooleanClause.Occur.FILTER);//should have lowest \"cost\" value; will drive iteration\n      bqBuilder.add(vsMatchQuery, BooleanClause.Occur.FILTER);\n      return new ConstantScoreQuery(bqBuilder.build());\n    } else {\n      throw new UnsupportedOperationException(\"Only Rectangles and Circles are currently supported, \" +\n          \"found [\" + shape.getClass() + \"]\");//TODO\n    }\n  }\n\n","sourceOld":"  @Override\n  public ConstantScoreQuery makeQuery(SpatialArgs args) {\n    if(! SpatialOperation.is( args.getOperation(),\n        SpatialOperation.Intersects,\n        SpatialOperation.IsWithin ))\n      throw new UnsupportedSpatialOperation(args.getOperation());\n    Shape shape = args.getShape();\n    if (shape instanceof Rectangle) {\n      Rectangle bbox = (Rectangle) shape;\n      return new ConstantScoreQuery(makeWithin(bbox));\n    } else if (shape instanceof Circle) {\n      Circle circle = (Circle)shape;\n      Rectangle bbox = circle.getBoundingBox();\n      Query approxQuery = makeWithin(bbox);\n      BooleanQuery.Builder bqBuilder = new BooleanQuery.Builder();\n      FunctionRangeQuery vsRangeQuery =\n          new FunctionRangeQuery(makeDistanceValueSource(circle.getCenter()), 0.0, circle.getRadius(), true, true);\n      bqBuilder.add(approxQuery, BooleanClause.Occur.FILTER);//should have lowest \"cost\" value; will drive iteration\n      bqBuilder.add(vsRangeQuery, BooleanClause.Occur.FILTER);\n      return new ConstantScoreQuery(bqBuilder.build());\n    } else {\n      throw new UnsupportedOperationException(\"Only Rectangles and Circles are currently supported, \" +\n          \"found [\" + shape.getClass() + \"]\");//TODO\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98f11c416d30e556e0004a9a84960702d12d35b1","date":1498628359,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/legacy/PointVectorStrategy#makeQuery(SpatialArgs).mjava","pathOld":"solr/core/src/java/org/apache/solr/legacy/PointVectorStrategy#makeQuery(SpatialArgs).mjava","sourceNew":"  @Override\n  public ConstantScoreQuery makeQuery(SpatialArgs args) {\n    if(! SpatialOperation.is( args.getOperation(),\n        SpatialOperation.Intersects,\n        SpatialOperation.IsWithin ))\n      throw new UnsupportedSpatialOperation(args.getOperation());\n    Shape shape = args.getShape();\n    if (shape instanceof Rectangle) {\n      Rectangle bbox = (Rectangle) shape;\n      return new ConstantScoreQuery(makeWithin(bbox));\n    } else if (shape instanceof Circle) {\n      Circle circle = (Circle)shape;\n      Rectangle bbox = circle.getBoundingBox();\n      Query approxQuery = makeWithin(bbox);\n      BooleanQuery.Builder bqBuilder = new BooleanQuery.Builder();\n      double r = circle.getRadius();\n      FunctionMatchQuery vsMatchQuery = new FunctionMatchQuery(makeDistanceValueSource(circle.getCenter()),\n          v -> 0 <= v && v <= r);\n      bqBuilder.add(approxQuery, BooleanClause.Occur.FILTER);//should have lowest \"cost\" value; will drive iteration\n      bqBuilder.add(vsMatchQuery, BooleanClause.Occur.FILTER);\n      return new ConstantScoreQuery(bqBuilder.build());\n    } else {\n      throw new UnsupportedOperationException(\"Only Rectangles and Circles are currently supported, \" +\n          \"found [\" + shape.getClass() + \"]\");//TODO\n    }\n  }\n\n","sourceOld":"  @Override\n  public ConstantScoreQuery makeQuery(SpatialArgs args) {\n    if(! SpatialOperation.is( args.getOperation(),\n        SpatialOperation.Intersects,\n        SpatialOperation.IsWithin ))\n      throw new UnsupportedSpatialOperation(args.getOperation());\n    Shape shape = args.getShape();\n    if (shape instanceof Rectangle) {\n      Rectangle bbox = (Rectangle) shape;\n      return new ConstantScoreQuery(makeWithin(bbox));\n    } else if (shape instanceof Circle) {\n      Circle circle = (Circle)shape;\n      Rectangle bbox = circle.getBoundingBox();\n      Query approxQuery = makeWithin(bbox);\n      BooleanQuery.Builder bqBuilder = new BooleanQuery.Builder();\n      FunctionRangeQuery vsRangeQuery =\n          new FunctionRangeQuery(makeDistanceValueSource(circle.getCenter()), 0.0, circle.getRadius(), true, true);\n      bqBuilder.add(approxQuery, BooleanClause.Occur.FILTER);//should have lowest \"cost\" value; will drive iteration\n      bqBuilder.add(vsRangeQuery, BooleanClause.Occur.FILTER);\n      return new ConstantScoreQuery(bqBuilder.build());\n    } else {\n      throw new UnsupportedOperationException(\"Only Rectangles and Circles are currently supported, \" +\n          \"found [\" + shape.getClass() + \"]\");//TODO\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/legacy/PointVectorStrategy#makeQuery(SpatialArgs).mjava","pathOld":"solr/core/src/java/org/apache/solr/legacy/PointVectorStrategy#makeQuery(SpatialArgs).mjava","sourceNew":"  @Override\n  public ConstantScoreQuery makeQuery(SpatialArgs args) {\n    if(! SpatialOperation.is( args.getOperation(),\n        SpatialOperation.Intersects,\n        SpatialOperation.IsWithin ))\n      throw new UnsupportedSpatialOperation(args.getOperation());\n    Shape shape = args.getShape();\n    if (shape instanceof Rectangle) {\n      Rectangle bbox = (Rectangle) shape;\n      return new ConstantScoreQuery(makeWithin(bbox));\n    } else if (shape instanceof Circle) {\n      Circle circle = (Circle)shape;\n      Rectangle bbox = circle.getBoundingBox();\n      Query approxQuery = makeWithin(bbox);\n      BooleanQuery.Builder bqBuilder = new BooleanQuery.Builder();\n      double r = circle.getRadius();\n      FunctionMatchQuery vsMatchQuery = new FunctionMatchQuery(makeDistanceValueSource(circle.getCenter()),\n          v -> 0 <= v && v <= r);\n      bqBuilder.add(approxQuery, BooleanClause.Occur.FILTER);//should have lowest \"cost\" value; will drive iteration\n      bqBuilder.add(vsMatchQuery, BooleanClause.Occur.FILTER);\n      return new ConstantScoreQuery(bqBuilder.build());\n    } else {\n      throw new UnsupportedOperationException(\"Only Rectangles and Circles are currently supported, \" +\n          \"found [\" + shape.getClass() + \"]\");//TODO\n    }\n  }\n\n","sourceOld":"  @Override\n  public ConstantScoreQuery makeQuery(SpatialArgs args) {\n    if(! SpatialOperation.is( args.getOperation(),\n        SpatialOperation.Intersects,\n        SpatialOperation.IsWithin ))\n      throw new UnsupportedSpatialOperation(args.getOperation());\n    Shape shape = args.getShape();\n    if (shape instanceof Rectangle) {\n      Rectangle bbox = (Rectangle) shape;\n      return new ConstantScoreQuery(makeWithin(bbox));\n    } else if (shape instanceof Circle) {\n      Circle circle = (Circle)shape;\n      Rectangle bbox = circle.getBoundingBox();\n      Query approxQuery = makeWithin(bbox);\n      BooleanQuery.Builder bqBuilder = new BooleanQuery.Builder();\n      FunctionRangeQuery vsRangeQuery =\n          new FunctionRangeQuery(makeDistanceValueSource(circle.getCenter()), 0.0, circle.getRadius(), true, true);\n      bqBuilder.add(approxQuery, BooleanClause.Occur.FILTER);//should have lowest \"cost\" value; will drive iteration\n      bqBuilder.add(vsRangeQuery, BooleanClause.Occur.FILTER);\n      return new ConstantScoreQuery(bqBuilder.build());\n    } else {\n      throw new UnsupportedOperationException(\"Only Rectangles and Circles are currently supported, \" +\n          \"found [\" + shape.getClass() + \"]\");//TODO\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a178ac3dec643551e66363c457a9074f55545f86":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"32b9119890a8e82252b6cc341ac491d18fa1e49b":["a178ac3dec643551e66363c457a9074f55545f86"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a178ac3dec643551e66363c457a9074f55545f86"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a178ac3dec643551e66363c457a9074f55545f86"],"28288370235ed02234a64753cdbf0c6ec096304a":["d1f5728f32a4a256b36cfabd7a2636452f599bb9","32b9119890a8e82252b6cc341ac491d18fa1e49b"],"98f11c416d30e556e0004a9a84960702d12d35b1":["e9017cf144952056066919f1ebc7897ff9bd71b1","32b9119890a8e82252b6cc341ac491d18fa1e49b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"a178ac3dec643551e66363c457a9074f55545f86":["32b9119890a8e82252b6cc341ac491d18fa1e49b","e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"32b9119890a8e82252b6cc341ac491d18fa1e49b":["28288370235ed02234a64753cdbf0c6ec096304a","98f11c416d30e556e0004a9a84960702d12d35b1"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["98f11c416d30e556e0004a9a84960702d12d35b1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a178ac3dec643551e66363c457a9074f55545f86","e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"98f11c416d30e556e0004a9a84960702d12d35b1":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["98f11c416d30e556e0004a9a84960702d12d35b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}