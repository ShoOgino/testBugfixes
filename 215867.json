{"path":"lucene/core/src/java/org/apache/lucene/search/AutomatonQuery#equals(Object).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/AutomatonQuery#equals(Object).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/AutomatonQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (!super.equals(obj))\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    AutomatonQuery other = (AutomatonQuery) obj;\n    if (automaton == null) {\n      if (other.automaton != null)\n        return false;\n    } else if (!BasicOperations.sameLanguage(automaton, other.automaton))\n      return false;\n    if (term == null) {\n      if (other.term != null)\n        return false;\n    } else if (!term.equals(other.term))\n      return false;\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (!super.equals(obj))\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    AutomatonQuery other = (AutomatonQuery) obj;\n    if (automaton == null) {\n      if (other.automaton != null)\n        return false;\n    } else if (!BasicOperations.sameLanguage(automaton, other.automaton))\n      return false;\n    if (term == null) {\n      if (other.term != null)\n        return false;\n    } else if (!term.equals(other.term))\n      return false;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f04837a83ac5990603e49463c653672a3a31af0","date":1395078441,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/AutomatonQuery#equals(Object).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/AutomatonQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (!super.equals(obj))\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    AutomatonQuery other = (AutomatonQuery) obj;\n    if (!compiled.equals(other.compiled))\n      return false;\n    if (term == null) {\n      if (other.term != null)\n        return false;\n    } else if (!term.equals(other.term))\n      return false;\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (!super.equals(obj))\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    AutomatonQuery other = (AutomatonQuery) obj;\n    if (automaton == null) {\n      if (other.automaton != null)\n        return false;\n    } else if (!BasicOperations.sameLanguage(automaton, other.automaton))\n      return false;\n    if (term == null) {\n      if (other.term != null)\n        return false;\n    } else if (!term.equals(other.term))\n      return false;\n    return true;\n  }\n\n","bugFix":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","5acb0ee59cc50caf85402e92d148fdb2af61bc19"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7f04837a83ac5990603e49463c653672a3a31af0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7f04837a83ac5990603e49463c653672a3a31af0"]},"commit2Childs":{"7f04837a83ac5990603e49463c653672a3a31af0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["7f04837a83ac5990603e49463c653672a3a31af0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}