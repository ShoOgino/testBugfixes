{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/NumberRangePrefixTreeStrategy#calcFacets(IndexReaderContext,Bits,UnitNRShape,UnitNRShape).mjava","commits":[{"id":"b2c05e4efde014c90e420f5f7c2966499682635c","date":1419397169,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/NumberRangePrefixTreeStrategy#calcFacets(IndexReaderContext,Bits,UnitNRShape,UnitNRShape).mjava","pathOld":"/dev/null","sourceNew":"  /** Calculates facets between {@code start} and {@code end} to a detail level one greater than that provided by the\n   * arguments. For example providing March to October of 2014 would return facets to the day level of those months.\n   * This is just a convenience method.\n   * @see #calcFacets(IndexReaderContext, Bits, Shape, int)\n   */\n  public Facets calcFacets(IndexReaderContext context, final Bits acceptDocs, UnitNRShape start, UnitNRShape end)\n      throws IOException {\n    Shape filter = getGrid().toRangeShape(start, end);\n    int detailLevel = Math.max(start.getLevel(), end.getLevel()) + 1;\n    return calcFacets(context, acceptDocs, filter, detailLevel);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"478e85d406c2ea05f4e5028248b9a8e43f300885","date":1421346780,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/NumberRangePrefixTreeStrategy#calcFacets(IndexReaderContext,Filter,UnitNRShape,UnitNRShape).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/NumberRangePrefixTreeStrategy#calcFacets(IndexReaderContext,Bits,UnitNRShape,UnitNRShape).mjava","sourceNew":"  /** Calculates facets between {@code start} and {@code end} to a detail level one greater than that provided by the\n   * arguments. For example providing March to October of 2014 would return facets to the day level of those months.\n   * This is just a convenience method.\n   * @see #calcFacets(IndexReaderContext, Filter, Shape, int)\n   */\n  public Facets calcFacets(IndexReaderContext context, Filter filter, UnitNRShape start, UnitNRShape end)\n      throws IOException {\n    Shape facetRange = getGrid().toRangeShape(start, end);\n    int detailLevel = Math.max(start.getLevel(), end.getLevel()) + 1;\n    return calcFacets(context, filter, facetRange, detailLevel);\n  }\n\n","sourceOld":"  /** Calculates facets between {@code start} and {@code end} to a detail level one greater than that provided by the\n   * arguments. For example providing March to October of 2014 would return facets to the day level of those months.\n   * This is just a convenience method.\n   * @see #calcFacets(IndexReaderContext, Bits, Shape, int)\n   */\n  public Facets calcFacets(IndexReaderContext context, final Bits acceptDocs, UnitNRShape start, UnitNRShape end)\n      throws IOException {\n    Shape filter = getGrid().toRangeShape(start, end);\n    int detailLevel = Math.max(start.getLevel(), end.getLevel()) + 1;\n    return calcFacets(context, acceptDocs, filter, detailLevel);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"478e85d406c2ea05f4e5028248b9a8e43f300885":["b2c05e4efde014c90e420f5f7c2966499682635c"],"b2c05e4efde014c90e420f5f7c2966499682635c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["478e85d406c2ea05f4e5028248b9a8e43f300885"]},"commit2Childs":{"478e85d406c2ea05f4e5028248b9a8e43f300885":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b2c05e4efde014c90e420f5f7c2966499682635c":["478e85d406c2ea05f4e5028248b9a8e43f300885"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b2c05e4efde014c90e420f5f7c2966499682635c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}