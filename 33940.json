{"path":"lucene/core/src/test/org/apache/lucene/util/TestRamUsageEstimator#testPrintValues().mjava","commits":[{"id":"9139c54cd548a746e88dfa944497dccef7629321","date":1423758024,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestRamUsageEstimator#testPrintValues().mjava","pathOld":"/dev/null","sourceNew":"  /** Helper to print out current settings for debugging {@code -Dtests.verbose=true} */\n  public void testPrintValues() {\n    assumeTrue(\"Specify -Dtests.verbose=true to print constants of RamUsageEstimator.\", VERBOSE);\n    System.out.println(\"JVM_IS_HOTSPOT_64BIT = \" + JVM_IS_HOTSPOT_64BIT);\n    System.out.println(\"COMPRESSED_REFS_ENABLED = \" + COMPRESSED_REFS_ENABLED);\n    System.out.println(\"NUM_BYTES_OBJECT_ALIGNMENT = \" + NUM_BYTES_OBJECT_ALIGNMENT);\n    System.out.println(\"NUM_BYTES_OBJECT_REF = \" + NUM_BYTES_OBJECT_REF);\n    System.out.println(\"NUM_BYTES_OBJECT_HEADER = \" + NUM_BYTES_OBJECT_HEADER);\n    System.out.println(\"NUM_BYTES_ARRAY_HEADER = \" + NUM_BYTES_ARRAY_HEADER);\n    System.out.println(\"LONG_SIZE = \" + LONG_SIZE);\n    System.out.println(\"LONG_CACHE_MIN_VALUE = \" + LONG_CACHE_MIN_VALUE);\n    System.out.println(\"LONG_CACHE_MAX_VALUE = \" + LONG_CACHE_MAX_VALUE);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["52f8844756d6d3be3c12ad523f8943fd4af5a39e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6786725b7d927918801c46095fe159451a8d84b4","date":1579014746,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestRamUsageEstimator#testPrintValues().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestRamUsageEstimator#testPrintValues().mjava","sourceNew":"  /** Helper to print out current settings for debugging {@code -Dtests.verbose=true} */\n  public void testPrintValues() {\n    assumeTrue(\"Specify -Dtests.verbose=true to print constants of RamUsageEstimator.\", VERBOSE);\n    System.out.println(\"JVM_IS_HOTSPOT_64BIT = \" + JVM_IS_HOTSPOT_64BIT);\n    System.out.println(\"COMPRESSED_REFS_ENABLED = \" + COMPRESSED_REFS_ENABLED);\n    System.out.println(\"NUM_BYTES_OBJECT_ALIGNMENT = \" + NUM_BYTES_OBJECT_ALIGNMENT);\n    System.out.println(\"NUM_BYTES_OBJECT_REF = \" + NUM_BYTES_OBJECT_REF);\n    System.out.println(\"NUM_BYTES_OBJECT_HEADER = \" + NUM_BYTES_OBJECT_HEADER);\n    System.out.println(\"NUM_BYTES_ARRAY_HEADER = \" + NUM_BYTES_ARRAY_HEADER);\n    System.out.println(\"LONG_SIZE = \" + LONG_SIZE);\n  }\n\n","sourceOld":"  /** Helper to print out current settings for debugging {@code -Dtests.verbose=true} */\n  public void testPrintValues() {\n    assumeTrue(\"Specify -Dtests.verbose=true to print constants of RamUsageEstimator.\", VERBOSE);\n    System.out.println(\"JVM_IS_HOTSPOT_64BIT = \" + JVM_IS_HOTSPOT_64BIT);\n    System.out.println(\"COMPRESSED_REFS_ENABLED = \" + COMPRESSED_REFS_ENABLED);\n    System.out.println(\"NUM_BYTES_OBJECT_ALIGNMENT = \" + NUM_BYTES_OBJECT_ALIGNMENT);\n    System.out.println(\"NUM_BYTES_OBJECT_REF = \" + NUM_BYTES_OBJECT_REF);\n    System.out.println(\"NUM_BYTES_OBJECT_HEADER = \" + NUM_BYTES_OBJECT_HEADER);\n    System.out.println(\"NUM_BYTES_ARRAY_HEADER = \" + NUM_BYTES_ARRAY_HEADER);\n    System.out.println(\"LONG_SIZE = \" + LONG_SIZE);\n    System.out.println(\"LONG_CACHE_MIN_VALUE = \" + LONG_CACHE_MIN_VALUE);\n    System.out.println(\"LONG_CACHE_MAX_VALUE = \" + LONG_CACHE_MAX_VALUE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52f8844756d6d3be3c12ad523f8943fd4af5a39e","date":1579078251,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestRamUsageEstimator#testPrintValues().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestRamUsageEstimator#testPrintValues().mjava","sourceNew":"  /** Helper to print out current settings for debugging {@code -Dtests.verbose=true} */\n  public void testPrintValues() {\n    assumeTrue(\"Specify -Dtests.verbose=true to print constants of RamUsageEstimator.\", VERBOSE);\n    System.out.println(\"JVM_IS_HOTSPOT_64BIT = \" + JVM_IS_HOTSPOT_64BIT);\n    System.out.println(\"COMPRESSED_REFS_ENABLED = \" + COMPRESSED_REFS_ENABLED);\n    System.out.println(\"NUM_BYTES_OBJECT_ALIGNMENT = \" + NUM_BYTES_OBJECT_ALIGNMENT);\n    System.out.println(\"NUM_BYTES_OBJECT_REF = \" + NUM_BYTES_OBJECT_REF);\n    System.out.println(\"NUM_BYTES_OBJECT_HEADER = \" + NUM_BYTES_OBJECT_HEADER);\n    System.out.println(\"NUM_BYTES_ARRAY_HEADER = \" + NUM_BYTES_ARRAY_HEADER);\n    System.out.println(\"LONG_SIZE = \" + LONG_SIZE);\n  }\n\n","sourceOld":"  /** Helper to print out current settings for debugging {@code -Dtests.verbose=true} */\n  public void testPrintValues() {\n    assumeTrue(\"Specify -Dtests.verbose=true to print constants of RamUsageEstimator.\", VERBOSE);\n    System.out.println(\"JVM_IS_HOTSPOT_64BIT = \" + JVM_IS_HOTSPOT_64BIT);\n    System.out.println(\"COMPRESSED_REFS_ENABLED = \" + COMPRESSED_REFS_ENABLED);\n    System.out.println(\"NUM_BYTES_OBJECT_ALIGNMENT = \" + NUM_BYTES_OBJECT_ALIGNMENT);\n    System.out.println(\"NUM_BYTES_OBJECT_REF = \" + NUM_BYTES_OBJECT_REF);\n    System.out.println(\"NUM_BYTES_OBJECT_HEADER = \" + NUM_BYTES_OBJECT_HEADER);\n    System.out.println(\"NUM_BYTES_ARRAY_HEADER = \" + NUM_BYTES_ARRAY_HEADER);\n    System.out.println(\"LONG_SIZE = \" + LONG_SIZE);\n    System.out.println(\"LONG_CACHE_MIN_VALUE = \" + LONG_CACHE_MIN_VALUE);\n    System.out.println(\"LONG_CACHE_MAX_VALUE = \" + LONG_CACHE_MAX_VALUE);\n  }\n\n","bugFix":["9139c54cd548a746e88dfa944497dccef7629321"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9139c54cd548a746e88dfa944497dccef7629321":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"52f8844756d6d3be3c12ad523f8943fd4af5a39e":["9139c54cd548a746e88dfa944497dccef7629321"],"6786725b7d927918801c46095fe159451a8d84b4":["9139c54cd548a746e88dfa944497dccef7629321"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["52f8844756d6d3be3c12ad523f8943fd4af5a39e"]},"commit2Childs":{"9139c54cd548a746e88dfa944497dccef7629321":["52f8844756d6d3be3c12ad523f8943fd4af5a39e","6786725b7d927918801c46095fe159451a8d84b4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9139c54cd548a746e88dfa944497dccef7629321"],"52f8844756d6d3be3c12ad523f8943fd4af5a39e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6786725b7d927918801c46095fe159451a8d84b4":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6786725b7d927918801c46095fe159451a8d84b4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}