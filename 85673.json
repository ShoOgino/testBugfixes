{"path":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#missingIssAudExp().mjava","commits":[{"id":"bb3e075eaa5788b2762ec235bf72b069cefe3f50","date":1548244981,"type":0,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#missingIssAudExp().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void missingIssAudExp() {\n    testConfig.put(\"requireExp\", \"false\");\n    testConfig.put(\"requireSub\", \"false\");\n    plugin.init(testConfig);\n    JWTAuthPlugin.JWTAuthenticationResponse resp = plugin.authenticate(slimHeader);\n    assertTrue(resp.isAuthenticated());\n\n    // Missing exp header\n    testConfig.put(\"requireExp\", true);\n    plugin.init(testConfig);\n    resp = plugin.authenticate(slimHeader);\n    assertEquals(JWTAuthPlugin.JWTAuthenticationResponse.AuthCode.JWT_VALIDATION_EXCEPTION, resp.getAuthCode());\n\n    // Missing sub header\n    testConfig.put(\"requireSub\", true);\n    plugin.init(testConfig);\n    resp = plugin.authenticate(slimHeader);\n    assertEquals(JWTAuthPlugin.JWTAuthenticationResponse.AuthCode.JWT_VALIDATION_EXCEPTION, resp.getAuthCode());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2682a1cd25864ccdc1b44bf047bd08700f28ba06","date":1548321910,"type":0,"author":"Tommaso Teofili","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#missingIssAudExp().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void missingIssAudExp() {\n    testConfig.put(\"requireExp\", \"false\");\n    testConfig.put(\"requireSub\", \"false\");\n    plugin.init(testConfig);\n    JWTAuthPlugin.JWTAuthenticationResponse resp = plugin.authenticate(slimHeader);\n    assertTrue(resp.isAuthenticated());\n\n    // Missing exp header\n    testConfig.put(\"requireExp\", true);\n    plugin.init(testConfig);\n    resp = plugin.authenticate(slimHeader);\n    assertEquals(JWTAuthPlugin.JWTAuthenticationResponse.AuthCode.JWT_VALIDATION_EXCEPTION, resp.getAuthCode());\n\n    // Missing sub header\n    testConfig.put(\"requireSub\", true);\n    plugin.init(testConfig);\n    resp = plugin.authenticate(slimHeader);\n    assertEquals(JWTAuthPlugin.JWTAuthenticationResponse.AuthCode.JWT_VALIDATION_EXCEPTION, resp.getAuthCode());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ac780c217504f0ca673ac5dcb98768984267c60","date":1568879420,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#missingIssAudExp().mjava","pathOld":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#missingIssAudExp().mjava","sourceNew":"  @Test\n  public void missingIssAudExp() {\n    testConfig.put(\"requireIss\", \"false\");\n    testConfig.put(\"requireExp\", \"false\");\n    plugin.init(testConfig);\n    JWTAuthPlugin.JWTAuthenticationResponse resp = plugin.authenticate(slimHeader);\n    assertTrue(resp.getErrorMessage(), resp.isAuthenticated());\n\n    // Missing exp claim\n    testConfig.put(\"requireExp\", true);\n    plugin.init(testConfig);\n    resp = plugin.authenticate(slimHeader);\n    assertEquals(JWTAuthPlugin.JWTAuthenticationResponse.AuthCode.JWT_VALIDATION_EXCEPTION, resp.getAuthCode());\n    testConfig.put(\"requireExp\", false);\n\n    // Missing issuer claim\n    testConfig.put(\"requireIss\", true);\n    plugin.init(testConfig);\n    resp = plugin.authenticate(slimHeader);\n    assertEquals(JWTAuthPlugin.JWTAuthenticationResponse.AuthCode.JWT_VALIDATION_EXCEPTION, resp.getAuthCode());\n  }\n\n","sourceOld":"  @Test\n  public void missingIssAudExp() {\n    testConfig.put(\"requireExp\", \"false\");\n    testConfig.put(\"requireSub\", \"false\");\n    plugin.init(testConfig);\n    JWTAuthPlugin.JWTAuthenticationResponse resp = plugin.authenticate(slimHeader);\n    assertTrue(resp.isAuthenticated());\n\n    // Missing exp header\n    testConfig.put(\"requireExp\", true);\n    plugin.init(testConfig);\n    resp = plugin.authenticate(slimHeader);\n    assertEquals(JWTAuthPlugin.JWTAuthenticationResponse.AuthCode.JWT_VALIDATION_EXCEPTION, resp.getAuthCode());\n\n    // Missing sub header\n    testConfig.put(\"requireSub\", true);\n    plugin.init(testConfig);\n    resp = plugin.authenticate(slimHeader);\n    assertEquals(JWTAuthPlugin.JWTAuthenticationResponse.AuthCode.JWT_VALIDATION_EXCEPTION, resp.getAuthCode());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1ac780c217504f0ca673ac5dcb98768984267c60":["bb3e075eaa5788b2762ec235bf72b069cefe3f50"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1ac780c217504f0ca673ac5dcb98768984267c60"],"bb3e075eaa5788b2762ec235bf72b069cefe3f50":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2682a1cd25864ccdc1b44bf047bd08700f28ba06":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bb3e075eaa5788b2762ec235bf72b069cefe3f50"]},"commit2Childs":{"1ac780c217504f0ca673ac5dcb98768984267c60":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bb3e075eaa5788b2762ec235bf72b069cefe3f50","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"bb3e075eaa5788b2762ec235bf72b069cefe3f50":["1ac780c217504f0ca673ac5dcb98768984267c60","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2682a1cd25864ccdc1b44bf047bd08700f28ba06":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}