{"path":"solr/test-framework/src/java/org/apache/solr/cloud/CloudInspectUtil#compareResults(SolrClient,SolrClient).mjava","commits":[{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/CloudInspectUtil#compareResults(SolrClient,SolrClient).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/CloudInspectUtil#compareResults(SolrServer,SolrServer).mjava","sourceNew":"  /**\n   * Compares the results of the control and cloud clients.\n   * \n   * @return true if the compared results are illegal.\n   */\n  public static boolean compareResults(SolrClient controlClient, SolrClient cloudClient)\n      throws SolrServerException {\n    return compareResults(controlClient, cloudClient, null, null);\n  }\n\n","sourceOld":"  /**\n   * Compares the results of the control and cloud clients.\n   * \n   * @return true if the compared results are illegal.\n   */\n  public static boolean compareResults(SolrServer controlServer, SolrServer cloudServer)\n      throws SolrServerException {\n    return compareResults(controlServer, cloudServer, null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8ed5ba2c6fdd51d5fb71cfabb554a7f2a7d6cfa","date":1425039471,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/CloudInspectUtil#compareResults(SolrClient,SolrClient).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/CloudInspectUtil#compareResults(SolrClient,SolrClient).mjava","sourceNew":"  /**\n   * Compares the results of the control and cloud clients.\n   * \n   * @return true if the compared results are illegal.\n   */\n  public static boolean compareResults(SolrClient controlClient, SolrClient cloudClient)\n      throws SolrServerException, IOException {\n    return compareResults(controlClient, cloudClient, null, null);\n  }\n\n","sourceOld":"  /**\n   * Compares the results of the control and cloud clients.\n   * \n   * @return true if the compared results are illegal.\n   */\n  public static boolean compareResults(SolrClient controlClient, SolrClient cloudClient)\n      throws SolrServerException {\n    return compareResults(controlClient, cloudClient, null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/CloudInspectUtil#compareResults(SolrClient,SolrClient).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/CloudInspectUtil#compareResults(SolrClient,SolrClient).mjava","sourceNew":"  /**\n   * Compares the results of the control and cloud clients.\n   * \n   * @return true if the compared results are illegal.\n   */\n  public static boolean compareResults(SolrClient controlClient, SolrClient cloudClient)\n      throws SolrServerException, IOException {\n    return compareResults(controlClient, cloudClient, null, null);\n  }\n\n","sourceOld":"  /**\n   * Compares the results of the control and cloud clients.\n   * \n   * @return true if the compared results are illegal.\n   */\n  public static boolean compareResults(SolrClient controlClient, SolrClient cloudClient)\n      throws SolrServerException {\n    return compareResults(controlClient, cloudClient, null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["bafca15d8e408346a67f4282ad1143b88023893b","b8ed5ba2c6fdd51d5fb71cfabb554a7f2a7d6cfa"],"b8ed5ba2c6fdd51d5fb71cfabb554a7f2a7d6cfa":["bafca15d8e408346a67f4282ad1143b88023893b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b8ed5ba2c6fdd51d5fb71cfabb554a7f2a7d6cfa"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"b8ed5ba2c6fdd51d5fb71cfabb554a7f2a7d6cfa":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bafca15d8e408346a67f4282ad1143b88023893b"],"bafca15d8e408346a67f4282ad1143b88023893b":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b8ed5ba2c6fdd51d5fb71cfabb554a7f2a7d6cfa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}