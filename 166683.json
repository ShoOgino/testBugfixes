{"path":"modules/queryparser/src/test/org/apache/lucene/queryparser/analyzing/TestAnalyzingQueryParser.FoldingFilter#incrementToken().mjava","commits":[{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/analyzing/TestAnalyzingQueryParser.FoldingFilter#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (input.incrementToken()) {\n        char term[] = termAtt.buffer();\n        for (int i = 0; i < term.length; i++)\n          switch(term[i]) {\n            case 'ü':\n              term[i] = 'u'; \n              break;\n            case 'ö': \n              term[i] = 'o'; \n              break;\n            case 'é': \n              term[i] = 'e'; \n              break;\n            case 'ï': \n              term[i] = 'i'; \n              break;\n          }\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/analyzing/TestAnalyzingQueryParser.FoldingFilter#incrementToken().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/analyzing/TestAnalyzingQueryParser.FoldingFilter#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (input.incrementToken()) {\n        char term[] = termAtt.buffer();\n        for (int i = 0; i < term.length; i++)\n          switch(term[i]) {\n            case 'ü':\n              term[i] = 'u'; \n              break;\n            case 'ö': \n              term[i] = 'o'; \n              break;\n            case 'é': \n              term[i] = 'e'; \n              break;\n            case 'ï': \n              term[i] = 'i'; \n              break;\n          }\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (input.incrementToken()) {\n        char term[] = termAtt.buffer();\n        for (int i = 0; i < term.length; i++)\n          switch(term[i]) {\n            case 'ü':\n              term[i] = 'u'; \n              break;\n            case 'ö': \n              term[i] = 'o'; \n              break;\n            case 'é': \n              term[i] = 'e'; \n              break;\n            case 'ï': \n              term[i] = 'i'; \n              break;\n          }\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}