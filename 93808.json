{"path":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.NumericAcc#collect(int,int).mjava","commits":[{"id":"81d7bcc5b3efd86bb6dcd048eaafd2512b19c0f8","date":1429723347,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.NumericAcc#collect(int,int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void collect(int doc, int slot) throws IOException {\n      long val = values.get(doc);\n      if (val == 0 && !exists.get(doc)) {\n        return;\n      }\n\n      LongSet set = sets[slot];\n      if (set == null) {\n        set = sets[slot] = new LongSet(16);\n      }\n      // TODO: could handle 0s at this level too\n      set.add(val);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.NumericAcc#collect(int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.NumericAcc#collect(int,int).mjava","sourceNew":"    @Override\n    public void collect(int doc, int slot) throws IOException {\n      int valuesDocID = values.docID();\n      if (valuesDocID < doc) {\n        valuesDocID = values.advance(doc);\n      }\n      if (valuesDocID > doc) {\n        // missing\n        return;\n      }\n      long val = values.longValue();\n\n      LongSet set = sets[slot];\n      if (set == null) {\n        set = sets[slot] = new LongSet(16);\n      }\n      // TODO: could handle 0s at this level too\n      set.add(val);\n    }\n\n","sourceOld":"    @Override\n    public void collect(int doc, int slot) throws IOException {\n      long val = values.get(doc);\n      if (val == 0 && !exists.get(doc)) {\n        return;\n      }\n\n      LongSet set = sets[slot];\n      if (set == null) {\n        set = sets[slot] = new LongSet(16);\n      }\n      // TODO: could handle 0s at this level too\n      set.add(val);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.NumericAcc#collect(int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.NumericAcc#collect(int,int).mjava","sourceNew":"    @Override\n    public void collect(int doc, int slot) throws IOException {\n      int valuesDocID = values.docID();\n      if (valuesDocID < doc) {\n        valuesDocID = values.advance(doc);\n      }\n      if (valuesDocID > doc) {\n        // missing\n        return;\n      }\n      long val = values.longValue();\n\n      LongSet set = sets[slot];\n      if (set == null) {\n        set = sets[slot] = new LongSet(16);\n      }\n      // TODO: could handle 0s at this level too\n      set.add(val);\n    }\n\n","sourceOld":"    @Override\n    public void collect(int doc, int slot) throws IOException {\n      long val = values.get(doc);\n      if (val == 0 && !exists.get(doc)) {\n        return;\n      }\n\n      LongSet set = sets[slot];\n      if (set == null) {\n        set = sets[slot] = new LongSet(16);\n      }\n      // TODO: could handle 0s at this level too\n      set.add(val);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.NumericAcc#collect(int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.NumericAcc#collect(int,int).mjava","sourceNew":"    @Override\n    public void collect(int doc, int slot) throws IOException {\n      int valuesDocID = values.docID();\n      if (valuesDocID < doc) {\n        valuesDocID = values.advance(doc);\n      }\n      if (valuesDocID > doc) {\n        // missing\n        return;\n      }\n      long val = values.longValue();\n\n      LongSet set = sets[slot];\n      if (set == null) {\n        set = sets[slot] = new LongSet(16);\n      }\n      // TODO: could handle 0s at this level too\n      set.add(val);\n    }\n\n","sourceOld":"    @Override\n    public void collect(int doc, int slot) throws IOException {\n      long val = values.get(doc);\n      if (val == 0 && !exists.get(doc)) {\n        return;\n      }\n\n      LongSet set = sets[slot];\n      if (set == null) {\n        set = sets[slot] = new LongSet(16);\n      }\n      // TODO: could handle 0s at this level too\n      set.add(val);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0138536655ed6adafa2e07c09cd3c9572112922f","date":1497930179,"type":5,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.BaseNumericAcc#collect(int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.NumericAcc#collect(int,int).mjava","sourceNew":"    @Override\n    public void collect(int doc, int slot) throws IOException {\n      int valuesDocID = docIdSetIterator().docID();\n      if (valuesDocID < doc) {\n        valuesDocID = docIdSetIterator().advance(doc);\n      }\n      if (valuesDocID > doc) {\n        // missing\n        return;\n      }\n\n      LongSet set = sets[slot];\n      if (set == null) {\n        set = sets[slot] = new LongSet(16);\n      }\n      collectValues(doc, set);\n    }\n\n","sourceOld":"    @Override\n    public void collect(int doc, int slot) throws IOException {\n      int valuesDocID = values.docID();\n      if (valuesDocID < doc) {\n        valuesDocID = values.advance(doc);\n      }\n      if (valuesDocID > doc) {\n        // missing\n        return;\n      }\n      long val = values.longValue();\n\n      LongSet set = sets[slot];\n      if (set == null) {\n        set = sets[slot] = new LongSet(16);\n      }\n      // TODO: could handle 0s at this level too\n      set.add(val);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":5,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.BaseNumericAcc#collect(int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.NumericAcc#collect(int,int).mjava","sourceNew":"    @Override\n    public void collect(int doc, int slot) throws IOException {\n      int valuesDocID = docIdSetIterator().docID();\n      if (valuesDocID < doc) {\n        valuesDocID = docIdSetIterator().advance(doc);\n      }\n      if (valuesDocID > doc) {\n        // missing\n        return;\n      }\n\n      LongSet set = sets[slot];\n      if (set == null) {\n        set = sets[slot] = new LongSet(16);\n      }\n      collectValues(doc, set);\n    }\n\n","sourceOld":"    @Override\n    public void collect(int doc, int slot) throws IOException {\n      int valuesDocID = values.docID();\n      if (valuesDocID < doc) {\n        valuesDocID = values.advance(doc);\n      }\n      if (valuesDocID > doc) {\n        // missing\n        return;\n      }\n      long val = values.longValue();\n\n      LongSet set = sets[slot];\n      if (set == null) {\n        set = sets[slot] = new LongSet(16);\n      }\n      // TODO: could handle 0s at this level too\n      set.add(val);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.NumericAcc#collect(int,int).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void collect(int doc, int slot) throws IOException {\n      int valuesDocID = values.docID();\n      if (valuesDocID < doc) {\n        valuesDocID = values.advance(doc);\n      }\n      if (valuesDocID > doc) {\n        // missing\n        return;\n      }\n      long val = values.longValue();\n\n      LongSet set = sets[slot];\n      if (set == null) {\n        set = sets[slot] = new LongSet(16);\n      }\n      // TODO: could handle 0s at this level too\n      set.add(val);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["81d7bcc5b3efd86bb6dcd048eaafd2512b19c0f8","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["81d7bcc5b3efd86bb6dcd048eaafd2512b19c0f8"],"0138536655ed6adafa2e07c09cd3c9572112922f":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"81d7bcc5b3efd86bb6dcd048eaafd2512b19c0f8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28288370235ed02234a64753cdbf0c6ec096304a":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","0138536655ed6adafa2e07c09cd3c9572112922f"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","0138536655ed6adafa2e07c09cd3c9572112922f"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["81d7bcc5b3efd86bb6dcd048eaafd2512b19c0f8","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["81d7bcc5b3efd86bb6dcd048eaafd2512b19c0f8"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["0138536655ed6adafa2e07c09cd3c9572112922f","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"0138536655ed6adafa2e07c09cd3c9572112922f":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"81d7bcc5b3efd86bb6dcd048eaafd2512b19c0f8":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}