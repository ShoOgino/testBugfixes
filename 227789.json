{"path":"lucene/backwards/src/test/org/apache/lucene/search/TestNot#testNot().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/search/TestNot#testNot().mjava","pathOld":"backwards/src/test/org/apache/lucene/search/TestNot#testNot().mjava","sourceNew":"  public void testNot() throws Exception {\n    RAMDirectory store = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(store, new SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n\n    Document d1 = new Document();\n    d1.add(new Field(\"field\", \"a b\", Field.Store.YES, Field.Index.ANALYZED));\n\n    writer.addDocument(d1);\n    writer.optimize();\n    writer.close();\n\n    Searcher searcher = new IndexSearcher(store, true);\n      QueryParser parser = new QueryParser(Version.LUCENE_CURRENT, \"field\", new SimpleAnalyzer());\n    Query query = parser.parse(\"a NOT b\");\n    //System.out.println(query);\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n  }\n\n","sourceOld":"  public void testNot() throws Exception {\n    RAMDirectory store = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(store, new SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n\n    Document d1 = new Document();\n    d1.add(new Field(\"field\", \"a b\", Field.Store.YES, Field.Index.ANALYZED));\n\n    writer.addDocument(d1);\n    writer.optimize();\n    writer.close();\n\n    Searcher searcher = new IndexSearcher(store, true);\n      QueryParser parser = new QueryParser(Version.LUCENE_CURRENT, \"field\", new SimpleAnalyzer());\n    Query query = parser.parse(\"a NOT b\");\n    //System.out.println(query);\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/search/TestNot#testNot().mjava","sourceNew":null,"sourceOld":"  public void testNot() throws Exception {\n    RAMDirectory store = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(store, new SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n\n    Document d1 = new Document();\n    d1.add(new Field(\"field\", \"a b\", Field.Store.YES, Field.Index.ANALYZED));\n\n    writer.addDocument(d1);\n    writer.optimize();\n    writer.close();\n\n    Searcher searcher = new IndexSearcher(store, true);\n      QueryParser parser = new QueryParser(Version.LUCENE_CURRENT, \"field\", new SimpleAnalyzer());\n    Query query = parser.parse(\"a NOT b\");\n    //System.out.println(query);\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}