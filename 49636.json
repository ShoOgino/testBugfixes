{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testGetRawStream().mjava","commits":[{"id":"f2425308ebcd91b538a601df94ae1551ccaab2bb","date":1340702883,"type":0,"author":"Sami Siren","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testGetRawStream().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testGetRawStream() throws SolrServerException, IOException{\n    HttpClient client = HttpClientUtil.createClient(null);\n    HttpSolrServer server = new HttpSolrServer(\"http://127.0.0.1:\" + jetty.getLocalPort() + \"/solr\", client, null);\n    QueryRequest req = new QueryRequest();\n    NamedList response = server.request(req);\n    InputStream stream = (InputStream)response.get(\"stream\");\n    assertNotNull(stream);\n    stream.close();\n    client.getConnectionManager().shutdown();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testGetRawStream().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testGetRawStream() throws SolrServerException, IOException{\n    HttpClient client = HttpClientUtil.createClient(null);\n    HttpSolrServer server = new HttpSolrServer(\"http://127.0.0.1:\" + jetty.getLocalPort() + \"/solr\", client, null);\n    QueryRequest req = new QueryRequest();\n    NamedList response = server.request(req);\n    InputStream stream = (InputStream)response.get(\"stream\");\n    assertNotNull(stream);\n    stream.close();\n    client.getConnectionManager().shutdown();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa11c355cd3b3b9207608b85fbd33b34f6f1966e","date":1361303536,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testGetRawStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testGetRawStream().mjava","sourceNew":"  @Test\n  public void testGetRawStream() throws SolrServerException, IOException{\n    HttpClient client = HttpClientUtil.createClient(null);\n    HttpSolrServer server = new HttpSolrServer(jetty.getBaseUrl().toString(), \n                                               client, null);\n    QueryRequest req = new QueryRequest();\n    NamedList response = server.request(req);\n    InputStream stream = (InputStream)response.get(\"stream\");\n    assertNotNull(stream);\n    stream.close();\n    client.getConnectionManager().shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testGetRawStream() throws SolrServerException, IOException{\n    HttpClient client = HttpClientUtil.createClient(null);\n    HttpSolrServer server = new HttpSolrServer(\"http://127.0.0.1:\" + jetty.getLocalPort() + \"/solr\", client, null);\n    QueryRequest req = new QueryRequest();\n    NamedList response = server.request(req);\n    InputStream stream = (InputStream)response.get(\"stream\");\n    assertNotNull(stream);\n    stream.close();\n    client.getConnectionManager().shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9","date":1366986755,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testGetRawStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testGetRawStream().mjava","sourceNew":"  @Test\n  public void testGetRawStream() throws SolrServerException, IOException{\n    HttpClient client = HttpClientUtil.createClient(null);\n    HttpSolrServer server = new HttpSolrServer(jetty.getBaseUrl().toString() + \"/collection1\", \n                                               client, null);\n    QueryRequest req = new QueryRequest();\n    NamedList response = server.request(req);\n    InputStream stream = (InputStream)response.get(\"stream\");\n    assertNotNull(stream);\n    stream.close();\n    client.getConnectionManager().shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testGetRawStream() throws SolrServerException, IOException{\n    HttpClient client = HttpClientUtil.createClient(null);\n    HttpSolrServer server = new HttpSolrServer(jetty.getBaseUrl().toString(), \n                                               client, null);\n    QueryRequest req = new QueryRequest();\n    NamedList response = server.request(req);\n    InputStream stream = (InputStream)response.get(\"stream\");\n    assertNotNull(stream);\n    stream.close();\n    client.getConnectionManager().shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testGetRawStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testGetRawStream().mjava","sourceNew":"  @Test\n  public void testGetRawStream() throws SolrServerException, IOException{\n    HttpClient client = HttpClientUtil.createClient(null);\n    HttpSolrClient solrClient = new HttpSolrClient(jetty.getBaseUrl().toString() + \"/collection1\",\n                                               client, null);\n    QueryRequest req = new QueryRequest();\n    NamedList response = solrClient.request(req);\n    InputStream stream = (InputStream)response.get(\"stream\");\n    assertNotNull(stream);\n    stream.close();\n    client.getConnectionManager().shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testGetRawStream() throws SolrServerException, IOException{\n    HttpClient client = HttpClientUtil.createClient(null);\n    HttpSolrServer server = new HttpSolrServer(jetty.getBaseUrl().toString() + \"/collection1\", \n                                               client, null);\n    QueryRequest req = new QueryRequest();\n    NamedList response = server.request(req);\n    InputStream stream = (InputStream)response.get(\"stream\");\n    assertNotNull(stream);\n    stream.close();\n    client.getConnectionManager().shutdown();\n  }\n\n","bugFix":null,"bugIntro":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"fa11c355cd3b3b9207608b85fbd33b34f6f1966e":["f2425308ebcd91b538a601df94ae1551ccaab2bb"],"e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9":["fa11c355cd3b3b9207608b85fbd33b34f6f1966e"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f2425308ebcd91b538a601df94ae1551ccaab2bb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9"],"f2425308ebcd91b538a601df94ae1551ccaab2bb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"fa11c355cd3b3b9207608b85fbd33b34f6f1966e":["e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9"],"e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9":["bafca15d8e408346a67f4282ad1143b88023893b"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fe33227f6805edab2036cbb80645cc4e2d1fa424","f2425308ebcd91b538a601df94ae1551ccaab2bb"],"bafca15d8e408346a67f4282ad1143b88023893b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f2425308ebcd91b538a601df94ae1551ccaab2bb":["fa11c355cd3b3b9207608b85fbd33b34f6f1966e","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}