{"path":"lucene/core/src/test/org/apache/lucene/search/TestScorerPerf#doNestedConjunctions(IndexSearcher,FixedBitSet[],int,int,int).mjava","commits":[{"id":"d77dafd89756a5161d244985903e3487ca109182","date":1548679743,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestScorerPerf#doNestedConjunctions(IndexSearcher,FixedBitSet[],int,int,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestScorerPerf#doNestedConjunctions(int,int,int).mjava","sourceNew":"  public int doNestedConjunctions(IndexSearcher s,\n                                  FixedBitSet[] sets,\n                                  int iter,\n                                  int maxOuterClauses,\n                                  int maxClauses) throws IOException {\n    int ret=0;\n    long nMatches=0;\n\n    for (int i=0; i<iter; i++) {\n      int oClauses = random().nextInt(maxOuterClauses-1)+2;\n      BooleanQuery.Builder oq = new BooleanQuery.Builder();\n      FixedBitSet result=null;\n\n      for (int o=0; o<oClauses; o++) {\n\n      int nClauses = random().nextInt(maxClauses-1)+2; // min 2 clauses\n      BooleanQuery.Builder bq = new BooleanQuery.Builder();\n      for (int j=0; j<nClauses; j++) {\n        result = addClause(sets, bq,result);\n      }\n\n      oq.add(bq.build(), BooleanClause.Occur.MUST);\n      } // outer\n\n      CountingHitCollector hc = validate ? new MatchingHitCollector(result)\n                                         : new CountingHitCollector();\n      s.search(oq.build(), hc);\n      nMatches += hc.getCount();\n      ret += hc.getSum();\n      if (validate) assertEquals(result.cardinality(), hc.getCount());\n      // System.out.println(hc.getCount());\n    }\n    if (VERBOSE) System.out.println(\"Average number of matches=\"+(nMatches/iter));\n    return ret;\n  }\n\n","sourceOld":"  public int doNestedConjunctions(int iter, int maxOuterClauses, int maxClauses) throws IOException {\n    int ret=0;\n    long nMatches=0;\n\n    for (int i=0; i<iter; i++) {\n      int oClauses = random().nextInt(maxOuterClauses-1)+2;\n      BooleanQuery.Builder oq = new BooleanQuery.Builder();\n      FixedBitSet result=null;\n\n      for (int o=0; o<oClauses; o++) {\n\n      int nClauses = random().nextInt(maxClauses-1)+2; // min 2 clauses\n      BooleanQuery.Builder bq = new BooleanQuery.Builder();\n      for (int j=0; j<nClauses; j++) {\n        result = addClause(bq,result);\n      }\n\n      oq.add(bq.build(), BooleanClause.Occur.MUST);\n      } // outer\n\n      CountingHitCollector hc = validate ? new MatchingHitCollector(result)\n                                         : new CountingHitCollector();\n      s.search(oq.build(), hc);\n      nMatches += hc.getCount();\n      ret += hc.getSum();\n      if (validate) assertEquals(result.cardinality(), hc.getCount());\n      // System.out.println(hc.getCount());\n    }\n    if (VERBOSE) System.out.println(\"Average number of matches=\"+(nMatches/iter));\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d77dafd89756a5161d244985903e3487ca109182":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d77dafd89756a5161d244985903e3487ca109182"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d77dafd89756a5161d244985903e3487ca109182"],"d77dafd89756a5161d244985903e3487ca109182":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}