{"path":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdateProcessorFactoryTest#testWrongAtomicOpPassed().mjava","commits":[{"id":"f1de703f36b1071144037c80ca5fe118aa5e96fd","date":1493947151,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdateProcessorFactoryTest#testWrongAtomicOpPassed().mjava","pathOld":"/dev/null","sourceNew":"  public void testWrongAtomicOpPassed() throws Exception {\n    AddUpdateCommand cmd = new AddUpdateCommand(new LocalSolrQueryRequest(h.getCore(),\n        new ModifiableSolrParams()\n            .add(\"processor\", \"Atomic\")\n            .add(\"Atomic.cat\", \"delete\")\n            .add(\"commit\",\"true\")\n    ));\n\n    try {\n      AtomicUpdateProcessorFactory factory = new AtomicUpdateProcessorFactory();\n      factory.inform(h.getCore());\n      factory.getInstance(cmd.getReq(), new SolrQueryResponse(),\n          null).processAdd(cmd);\n    } catch (SolrException e) {\n      assertEquals(\"Unexpected param(s) for AtomicUpdateProcessor, invalid atomic op passed: 'delete'\",\n          e.getMessage());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdateProcessorFactoryTest#testWrongAtomicOpPassed().mjava","pathOld":"/dev/null","sourceNew":"  public void testWrongAtomicOpPassed() throws Exception {\n    AddUpdateCommand cmd = new AddUpdateCommand(new LocalSolrQueryRequest(h.getCore(),\n        new ModifiableSolrParams()\n            .add(\"processor\", \"Atomic\")\n            .add(\"Atomic.cat\", \"delete\")\n            .add(\"commit\",\"true\")\n    ));\n\n    try {\n      AtomicUpdateProcessorFactory factory = new AtomicUpdateProcessorFactory();\n      factory.inform(h.getCore());\n      factory.getInstance(cmd.getReq(), new SolrQueryResponse(),\n          null).processAdd(cmd);\n    } catch (SolrException e) {\n      assertEquals(\"Unexpected param(s) for AtomicUpdateProcessor, invalid atomic op passed: 'delete'\",\n          e.getMessage());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"526bbf21a282a0aeaa55d4963d2646fd87ea5722","date":1497595167,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdateProcessorFactoryTest#testWrongAtomicOpPassed().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdateProcessorFactoryTest#testWrongAtomicOpPassed().mjava","sourceNew":"  public void testWrongAtomicOpPassed() throws Exception {\n    AddUpdateCommand cmd = new AddUpdateCommand(new LocalSolrQueryRequest(h.getCore(),\n        new ModifiableSolrParams()\n            .add(\"processor\", \"Atomic\")\n            .add(\"atomic.cat\", \"delete\")\n            .add(\"commit\",\"true\")\n    ));\n\n    try {\n      AtomicUpdateProcessorFactory factory = new AtomicUpdateProcessorFactory();\n      factory.inform(h.getCore());\n      factory.getInstance(cmd.getReq(), new SolrQueryResponse(),\n          null).processAdd(cmd);\n    } catch (SolrException e) {\n      assertEquals(\"Unexpected param(s) for AtomicUpdateProcessor, invalid atomic op passed: 'delete'\",\n          e.getMessage());\n    }\n  }\n\n","sourceOld":"  public void testWrongAtomicOpPassed() throws Exception {\n    AddUpdateCommand cmd = new AddUpdateCommand(new LocalSolrQueryRequest(h.getCore(),\n        new ModifiableSolrParams()\n            .add(\"processor\", \"Atomic\")\n            .add(\"Atomic.cat\", \"delete\")\n            .add(\"commit\",\"true\")\n    ));\n\n    try {\n      AtomicUpdateProcessorFactory factory = new AtomicUpdateProcessorFactory();\n      factory.inform(h.getCore());\n      factory.getInstance(cmd.getReq(), new SolrQueryResponse(),\n          null).processAdd(cmd);\n    } catch (SolrException e) {\n      assertEquals(\"Unexpected param(s) for AtomicUpdateProcessor, invalid atomic op passed: 'delete'\",\n          e.getMessage());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdateProcessorFactoryTest#testWrongAtomicOpPassed().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdateProcessorFactoryTest#testWrongAtomicOpPassed().mjava","sourceNew":"  public void testWrongAtomicOpPassed() throws Exception {\n    AddUpdateCommand cmd = new AddUpdateCommand(new LocalSolrQueryRequest(h.getCore(),\n        new ModifiableSolrParams()\n            .add(\"processor\", \"Atomic\")\n            .add(\"atomic.cat\", \"delete\")\n            .add(\"commit\",\"true\")\n    ));\n\n    try {\n      AtomicUpdateProcessorFactory factory = new AtomicUpdateProcessorFactory();\n      factory.inform(h.getCore());\n      factory.getInstance(cmd.getReq(), new SolrQueryResponse(),\n          null).processAdd(cmd);\n    } catch (SolrException e) {\n      assertEquals(\"Unexpected param(s) for AtomicUpdateProcessor, invalid atomic op passed: 'delete'\",\n          e.getMessage());\n    }\n  }\n\n","sourceOld":"  public void testWrongAtomicOpPassed() throws Exception {\n    AddUpdateCommand cmd = new AddUpdateCommand(new LocalSolrQueryRequest(h.getCore(),\n        new ModifiableSolrParams()\n            .add(\"processor\", \"Atomic\")\n            .add(\"Atomic.cat\", \"delete\")\n            .add(\"commit\",\"true\")\n    ));\n\n    try {\n      AtomicUpdateProcessorFactory factory = new AtomicUpdateProcessorFactory();\n      factory.inform(h.getCore());\n      factory.getInstance(cmd.getReq(), new SolrQueryResponse(),\n          null).processAdd(cmd);\n    } catch (SolrException e) {\n      assertEquals(\"Unexpected param(s) for AtomicUpdateProcessor, invalid atomic op passed: 'delete'\",\n          e.getMessage());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdateProcessorFactoryTest#testWrongAtomicOpPassed().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdateProcessorFactoryTest#testWrongAtomicOpPassed().mjava","sourceNew":"  public void testWrongAtomicOpPassed() throws Exception {\n    AddUpdateCommand cmd = new AddUpdateCommand(new LocalSolrQueryRequest(h.getCore(),\n        new ModifiableSolrParams()\n            .add(\"processor\", \"Atomic\")\n            .add(\"atomic.cat\", \"delete\")\n            .add(\"commit\",\"true\")\n    ));\n\n    try {\n      AtomicUpdateProcessorFactory factory = new AtomicUpdateProcessorFactory();\n      factory.inform(h.getCore());\n      factory.getInstance(cmd.getReq(), new SolrQueryResponse(),\n          null).processAdd(cmd);\n    } catch (SolrException e) {\n      assertEquals(\"Unexpected param(s) for AtomicUpdateProcessor, invalid atomic op passed: 'delete'\",\n          e.getMessage());\n    }\n  }\n\n","sourceOld":"  public void testWrongAtomicOpPassed() throws Exception {\n    AddUpdateCommand cmd = new AddUpdateCommand(new LocalSolrQueryRequest(h.getCore(),\n        new ModifiableSolrParams()\n            .add(\"processor\", \"Atomic\")\n            .add(\"Atomic.cat\", \"delete\")\n            .add(\"commit\",\"true\")\n    ));\n\n    try {\n      AtomicUpdateProcessorFactory factory = new AtomicUpdateProcessorFactory();\n      factory.inform(h.getCore());\n      factory.getInstance(cmd.getReq(), new SolrQueryResponse(),\n          null).processAdd(cmd);\n    } catch (SolrException e) {\n      assertEquals(\"Unexpected param(s) for AtomicUpdateProcessor, invalid atomic op passed: 'delete'\",\n          e.getMessage());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bf62a41dee1ac5d780c26dc793cab09e2a755b6d","date":1567792557,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdateProcessorFactoryTest#testWrongAtomicOpPassed().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdateProcessorFactoryTest#testWrongAtomicOpPassed().mjava","sourceNew":"  public void testWrongAtomicOpPassed() throws Exception {\n    ModifiableSolrParams params = new ModifiableSolrParams()\n        .add(\"processor\", \"Atomic\")\n        .add(\"atomic.cat\", \"delete\")\n        .add(\"commit\", \"true\");\n    try (SolrQueryRequest req = new LocalSolrQueryRequest(h.getCore(), params)) {\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      AtomicUpdateProcessorFactory factory = new AtomicUpdateProcessorFactory();\n      factory.inform(h.getCore());\n      factory.getInstance(cmd.getReq(), new SolrQueryResponse(),\n          null).processAdd(cmd);\n    } catch (SolrException e) {\n      assertEquals(\"Unexpected param(s) for AtomicUpdateProcessor, invalid atomic op passed: 'delete'\",\n          e.getMessage());\n    }\n  }\n\n","sourceOld":"  public void testWrongAtomicOpPassed() throws Exception {\n    AddUpdateCommand cmd = new AddUpdateCommand(new LocalSolrQueryRequest(h.getCore(),\n        new ModifiableSolrParams()\n            .add(\"processor\", \"Atomic\")\n            .add(\"atomic.cat\", \"delete\")\n            .add(\"commit\",\"true\")\n    ));\n\n    try {\n      AtomicUpdateProcessorFactory factory = new AtomicUpdateProcessorFactory();\n      factory.inform(h.getCore());\n      factory.getInstance(cmd.getReq(), new SolrQueryResponse(),\n          null).processAdd(cmd);\n    } catch (SolrException e) {\n      assertEquals(\"Unexpected param(s) for AtomicUpdateProcessor, invalid atomic op passed: 'delete'\",\n          e.getMessage());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"526bbf21a282a0aeaa55d4963d2646fd87ea5722":["f1de703f36b1071144037c80ca5fe118aa5e96fd"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f1de703f36b1071144037c80ca5fe118aa5e96fd"],"bf62a41dee1ac5d780c26dc793cab09e2a755b6d":["28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f1de703f36b1071144037c80ca5fe118aa5e96fd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28288370235ed02234a64753cdbf0c6ec096304a":["f1de703f36b1071144037c80ca5fe118aa5e96fd","526bbf21a282a0aeaa55d4963d2646fd87ea5722"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["e9017cf144952056066919f1ebc7897ff9bd71b1","526bbf21a282a0aeaa55d4963d2646fd87ea5722"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bf62a41dee1ac5d780c26dc793cab09e2a755b6d"]},"commit2Childs":{"526bbf21a282a0aeaa55d4963d2646fd87ea5722":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"bf62a41dee1ac5d780c26dc793cab09e2a755b6d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","f1de703f36b1071144037c80ca5fe118aa5e96fd"],"f1de703f36b1071144037c80ca5fe118aa5e96fd":["526bbf21a282a0aeaa55d4963d2646fd87ea5722","e9017cf144952056066919f1ebc7897ff9bd71b1","28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["bf62a41dee1ac5d780c26dc793cab09e2a755b6d"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}