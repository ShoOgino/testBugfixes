{"path":"modules/suggest/src/test/org/apache/lucene/search/suggest/fst/FloatMagicTest#testRoundTripFullRange().mjava","commits":[{"id":"7bf07f4ebadc7539de83a531e64678350d78ca26","date":1322776167,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/suggest/fst/FloatMagicTest#testRoundTripFullRange().mjava","pathOld":"/dev/null","sourceNew":"  @Ignore(\"Once checked, valid forever?\") @Test\n  public void testRoundTripFullRange() {\n    int i = 0;\n    do {\n      float f = Float.intBitsToFloat(i);\n      float f2 = FloatMagic.fromSortable(FloatMagic.toSortable(f));\n      \n      if (!((Float.isNaN(f) && Float.isNaN(f2)) || f == f2)) {\n        throw new RuntimeException(\"! \" + Integer.toHexString(i) + \"> \" + f + \" \" + f2); \n      }\n\n      if ((i & 0xffffff) == 0) {\n        System.out.println(Integer.toHexString(i));\n      }\n      \n      i++;\n    } while (i != 0);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dc3c850c5222a1ce7d619563f67bf047a11b32b6","date":1330703995,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"modules/suggest/src/test/org/apache/lucene/search/suggest/fst/FloatMagicTest#testRoundTripFullRange().mjava","sourceNew":null,"sourceOld":"  @Ignore(\"Once checked, valid forever?\") @Test\n  public void testRoundTripFullRange() {\n    int i = 0;\n    do {\n      float f = Float.intBitsToFloat(i);\n      float f2 = FloatMagic.fromSortable(FloatMagic.toSortable(f));\n      \n      if (!((Float.isNaN(f) && Float.isNaN(f2)) || f == f2)) {\n        throw new RuntimeException(\"! \" + Integer.toHexString(i) + \"> \" + f + \" \" + f2); \n      }\n\n      if ((i & 0xffffff) == 0) {\n        System.out.println(Integer.toHexString(i));\n      }\n      \n      i++;\n    } while (i != 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":4,"author":"Ryan McKinley","isMerge":true,"pathNew":"/dev/null","pathOld":"modules/suggest/src/test/org/apache/lucene/search/suggest/fst/FloatMagicTest#testRoundTripFullRange().mjava","sourceNew":null,"sourceOld":"  @Ignore(\"Once checked, valid forever?\") @Test\n  public void testRoundTripFullRange() {\n    int i = 0;\n    do {\n      float f = Float.intBitsToFloat(i);\n      float f2 = FloatMagic.fromSortable(FloatMagic.toSortable(f));\n      \n      if (!((Float.isNaN(f) && Float.isNaN(f2)) || f == f2)) {\n        throw new RuntimeException(\"! \" + Integer.toHexString(i) + \"> \" + f + \" \" + f2); \n      }\n\n      if ((i & 0xffffff) == 0) {\n        System.out.println(Integer.toHexString(i));\n      }\n      \n      i++;\n    } while (i != 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7bf07f4ebadc7539de83a531e64678350d78ca26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["7bf07f4ebadc7539de83a531e64678350d78ca26","dc3c850c5222a1ce7d619563f67bf047a11b32b6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dc3c850c5222a1ce7d619563f67bf047a11b32b6":["7bf07f4ebadc7539de83a531e64678350d78ca26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dc3c850c5222a1ce7d619563f67bf047a11b32b6"]},"commit2Childs":{"7bf07f4ebadc7539de83a531e64678350d78ca26":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","dc3c850c5222a1ce7d619563f67bf047a11b32b6"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7bf07f4ebadc7539de83a531e64678350d78ca26"],"dc3c850c5222a1ce7d619563f67bf047a11b32b6":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}