{"path":"solr/solrj/src/java/org/apache/solr/common/util/Utils#getDeepCopy(Collection,int,boolean).mjava","commits":[{"id":"6bdcb86c29922edae9a14852e636303bc52df094","date":1438887454,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils#getDeepCopy(Collection,int,boolean).mjava","pathOld":"/dev/null","sourceNew":"  public static Collection getDeepCopy(Collection c, int maxDepth, boolean mutable) {\n    if (c == null || maxDepth < 1) return c;\n    Collection result = c instanceof Set ? new HashSet() : new ArrayList();\n    for (Object o : c) {\n      if (o instanceof Map) {\n        o = getDeepCopy((Map) o, maxDepth - 1, mutable);\n      }\n      result.add(o);\n    }\n    return mutable ? result : result instanceof Set ? unmodifiableSet((Set) result) : unmodifiableList((List) result);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"226b3bf77af5749a90c81edd3d4168fd6e276a24","date":1490013063,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils#getDeepCopy(Collection,int,boolean).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils#getDeepCopy(Collection,int,boolean).mjava","sourceNew":"  public static Collection getDeepCopy(Collection c, int maxDepth, boolean mutable) {\n    if (c == null || maxDepth < 1) return c;\n    Collection result = c instanceof Set ? new HashSet() : new ArrayList();\n    for (Object o : c) result.add(makeDeepCopy(o, maxDepth, mutable));\n    return mutable ? result : result instanceof Set ? unmodifiableSet((Set) result) : unmodifiableList((List) result);\n  }\n\n","sourceOld":"  public static Collection getDeepCopy(Collection c, int maxDepth, boolean mutable) {\n    if (c == null || maxDepth < 1) return c;\n    Collection result = c instanceof Set ? new HashSet() : new ArrayList();\n    for (Object o : c) {\n      if (o instanceof Map) {\n        o = getDeepCopy((Map) o, maxDepth - 1, mutable);\n      }\n      result.add(o);\n    }\n    return mutable ? result : result instanceof Set ? unmodifiableSet((Set) result) : unmodifiableList((List) result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"464244264804e3f981bf1fb4b732516d8d62dbc2","date":1495736161,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils#getDeepCopy(Collection,int,boolean).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils#getDeepCopy(Collection,int,boolean).mjava","sourceNew":"  public static Collection getDeepCopy(Collection c, int maxDepth, boolean mutable) {\n    return getDeepCopy(c, maxDepth, mutable, false);\n  }\n\n","sourceOld":"  public static Collection getDeepCopy(Collection c, int maxDepth, boolean mutable) {\n    if (c == null || maxDepth < 1) return c;\n    Collection result = c instanceof Set ? new HashSet() : new ArrayList();\n    for (Object o : c) result.add(makeDeepCopy(o, maxDepth, mutable));\n    return mutable ? result : result instanceof Set ? unmodifiableSet((Set) result) : unmodifiableList((List) result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5531f16a602ef350b6c9adfb08ebaa13a60fe3db","date":1495756318,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils#getDeepCopy(Collection,int,boolean).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils#getDeepCopy(Collection,int,boolean).mjava","sourceNew":"  public static Collection getDeepCopy(Collection c, int maxDepth, boolean mutable) {\n    return getDeepCopy(c, maxDepth, mutable, false);\n  }\n\n","sourceOld":"  public static Collection getDeepCopy(Collection c, int maxDepth, boolean mutable) {\n    if (c == null || maxDepth < 1) return c;\n    Collection result = c instanceof Set ? new HashSet() : new ArrayList();\n    for (Object o : c) result.add(makeDeepCopy(o, maxDepth, mutable));\n    return mutable ? result : result instanceof Set ? unmodifiableSet((Set) result) : unmodifiableList((List) result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a513b6a92751e54c76fb5447948c9e7d437163a7","date":1496136565,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils#getDeepCopy(Collection,int,boolean).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils#getDeepCopy(Collection,int,boolean).mjava","sourceNew":"  public static Collection getDeepCopy(Collection c, int maxDepth, boolean mutable) {\n    return getDeepCopy(c, maxDepth, mutable, false);\n  }\n\n","sourceOld":"  public static Collection getDeepCopy(Collection c, int maxDepth, boolean mutable) {\n    if (c == null || maxDepth < 1) return c;\n    Collection result = c instanceof Set ? new HashSet() : new ArrayList();\n    for (Object o : c) {\n      if (o instanceof Map) {\n        o = getDeepCopy((Map) o, maxDepth - 1, mutable);\n      }\n      result.add(o);\n    }\n    return mutable ? result : result instanceof Set ? unmodifiableSet((Set) result) : unmodifiableList((List) result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74aea047dff7f7c38a2d766827bd20d356f98c6a","date":1496721416,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils#getDeepCopy(Collection,int,boolean).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils#getDeepCopy(Collection,int,boolean).mjava","sourceNew":"  public static Collection getDeepCopy(Collection c, int maxDepth, boolean mutable) {\n    return getDeepCopy(c, maxDepth, mutable, false);\n  }\n\n","sourceOld":"  public static Collection getDeepCopy(Collection c, int maxDepth, boolean mutable) {\n    if (c == null || maxDepth < 1) return c;\n    Collection result = c instanceof Set ? new HashSet() : new ArrayList();\n    for (Object o : c) {\n      if (o instanceof Map) {\n        o = getDeepCopy((Map) o, maxDepth - 1, mutable);\n      }\n      result.add(o);\n    }\n    return mutable ? result : result instanceof Set ? unmodifiableSet((Set) result) : unmodifiableList((List) result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils#getDeepCopy(Collection,int,boolean).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils#getDeepCopy(Collection,int,boolean).mjava","sourceNew":"  public static Collection getDeepCopy(Collection c, int maxDepth, boolean mutable) {\n    return getDeepCopy(c, maxDepth, mutable, false);\n  }\n\n","sourceOld":"  public static Collection getDeepCopy(Collection c, int maxDepth, boolean mutable) {\n    if (c == null || maxDepth < 1) return c;\n    Collection result = c instanceof Set ? new HashSet() : new ArrayList();\n    for (Object o : c) {\n      if (o instanceof Map) {\n        o = getDeepCopy((Map) o, maxDepth - 1, mutable);\n      }\n      result.add(o);\n    }\n    return mutable ? result : result instanceof Set ? unmodifiableSet((Set) result) : unmodifiableList((List) result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76","date":1591450217,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils#getDeepCopy(Collection,int,boolean).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils#getDeepCopy(Collection,int,boolean).mjava","sourceNew":"  @SuppressWarnings({\"rawtypes\"})\n  public static Collection getDeepCopy(Collection c, int maxDepth, boolean mutable) {\n    return getDeepCopy(c, maxDepth, mutable, false);\n  }\n\n","sourceOld":"  public static Collection getDeepCopy(Collection c, int maxDepth, boolean mutable) {\n    return getDeepCopy(c, maxDepth, mutable, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6bdcb86c29922edae9a14852e636303bc52df094":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76":["28288370235ed02234a64753cdbf0c6ec096304a"],"226b3bf77af5749a90c81edd3d4168fd6e276a24":["6bdcb86c29922edae9a14852e636303bc52df094"],"5531f16a602ef350b6c9adfb08ebaa13a60fe3db":["226b3bf77af5749a90c81edd3d4168fd6e276a24","464244264804e3f981bf1fb4b732516d8d62dbc2"],"74aea047dff7f7c38a2d766827bd20d356f98c6a":["6bdcb86c29922edae9a14852e636303bc52df094","a513b6a92751e54c76fb5447948c9e7d437163a7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a513b6a92751e54c76fb5447948c9e7d437163a7":["6bdcb86c29922edae9a14852e636303bc52df094"],"464244264804e3f981bf1fb4b732516d8d62dbc2":["226b3bf77af5749a90c81edd3d4168fd6e276a24"],"28288370235ed02234a64753cdbf0c6ec096304a":["6bdcb86c29922edae9a14852e636303bc52df094","74aea047dff7f7c38a2d766827bd20d356f98c6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76"]},"commit2Childs":{"6bdcb86c29922edae9a14852e636303bc52df094":["226b3bf77af5749a90c81edd3d4168fd6e276a24","74aea047dff7f7c38a2d766827bd20d356f98c6a","a513b6a92751e54c76fb5447948c9e7d437163a7","28288370235ed02234a64753cdbf0c6ec096304a"],"8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"226b3bf77af5749a90c81edd3d4168fd6e276a24":["5531f16a602ef350b6c9adfb08ebaa13a60fe3db","464244264804e3f981bf1fb4b732516d8d62dbc2"],"5531f16a602ef350b6c9adfb08ebaa13a60fe3db":[],"74aea047dff7f7c38a2d766827bd20d356f98c6a":["28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6bdcb86c29922edae9a14852e636303bc52df094"],"464244264804e3f981bf1fb4b732516d8d62dbc2":["5531f16a602ef350b6c9adfb08ebaa13a60fe3db"],"a513b6a92751e54c76fb5447948c9e7d437163a7":["74aea047dff7f7c38a2d766827bd20d356f98c6a"],"28288370235ed02234a64753cdbf0c6ec096304a":["8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5531f16a602ef350b6c9adfb08ebaa13a60fe3db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}