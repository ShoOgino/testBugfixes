{"path":"src/java/org/apache/lucene/index/FormatPostingsPositionsWriter#FormatPostingsPositionsWriter(SegmentWriteState,FormatPostingsDocsWriter).mjava","commits":[{"id":"4d17492f26096e19670d947d1be5e9adc52b1d3d","date":1224931200,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FormatPostingsPositionsWriter#FormatPostingsPositionsWriter(SegmentWriteState,FormatPostingsDocsWriter).mjava","pathOld":"/dev/null","sourceNew":"  FormatPostingsPositionsWriter(SegmentWriteState state, FormatPostingsDocsWriter parent) throws IOException {\n    this.parent = parent;\n    omitTF = parent.omitTF;\n    if (parent.parent.parent.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      final String fileName = IndexFileNames.segmentFileName(parent.parent.parent.segment, IndexFileNames.PROX_EXTENSION);\n      state.flushedFiles.add(fileName);\n      out = parent.parent.parent.dir.createOutput(fileName);\n      parent.skipListWriter.setProxOutput(out);\n    } else\n      // Every field omits TF so we will write no prox file\n      out = null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"066b6ff5a08e35c3b6880e7c3ddda79526acdab1","date":1237569961,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FormatPostingsPositionsWriter#FormatPostingsPositionsWriter(SegmentWriteState,FormatPostingsDocsWriter).mjava","pathOld":"src/java/org/apache/lucene/index/FormatPostingsPositionsWriter#FormatPostingsPositionsWriter(SegmentWriteState,FormatPostingsDocsWriter).mjava","sourceNew":"  FormatPostingsPositionsWriter(SegmentWriteState state, FormatPostingsDocsWriter parent) throws IOException {\n    this.parent = parent;\n    omitTermFreqAndPositions = parent.omitTermFreqAndPositions;\n    if (parent.parent.parent.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      final String fileName = IndexFileNames.segmentFileName(parent.parent.parent.segment, IndexFileNames.PROX_EXTENSION);\n      state.flushedFiles.add(fileName);\n      out = parent.parent.parent.dir.createOutput(fileName);\n      parent.skipListWriter.setProxOutput(out);\n    } else\n      // Every field omits TF so we will write no prox file\n      out = null;\n  }\n\n","sourceOld":"  FormatPostingsPositionsWriter(SegmentWriteState state, FormatPostingsDocsWriter parent) throws IOException {\n    this.parent = parent;\n    omitTF = parent.omitTF;\n    if (parent.parent.parent.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      final String fileName = IndexFileNames.segmentFileName(parent.parent.parent.segment, IndexFileNames.PROX_EXTENSION);\n      state.flushedFiles.add(fileName);\n      out = parent.parent.parent.dir.createOutput(fileName);\n      parent.skipListWriter.setProxOutput(out);\n    } else\n      // Every field omits TF so we will write no prox file\n      out = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FormatPostingsPositionsWriter#FormatPostingsPositionsWriter(SegmentWriteState,FormatPostingsDocsWriter).mjava","pathOld":"src/java/org/apache/lucene/index/FormatPostingsPositionsWriter#FormatPostingsPositionsWriter(SegmentWriteState,FormatPostingsDocsWriter).mjava","sourceNew":"  FormatPostingsPositionsWriter(SegmentWriteState state, FormatPostingsDocsWriter parent) throws IOException {\n    this.parent = parent;\n    omitTermFreqAndPositions = parent.omitTermFreqAndPositions;\n    if (parent.parent.parent.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      final String fileName = IndexFileNames.segmentFileName(parent.parent.parent.segment, IndexFileNames.PROX_EXTENSION);\n      state.flushedFiles.add(fileName);\n      out = parent.parent.parent.dir.createOutput(fileName);\n      parent.skipListWriter.setProxOutput(out);\n    } else\n      // Every field omits TF so we will write no prox file\n      out = null;\n  }\n\n","sourceOld":"  FormatPostingsPositionsWriter(SegmentWriteState state, FormatPostingsDocsWriter parent) throws IOException {\n    this.parent = parent;\n    omitTermFreqAndPositions = parent.omitTermFreqAndPositions;\n    if (parent.parent.parent.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      final String fileName = IndexFileNames.segmentFileName(parent.parent.parent.segment, IndexFileNames.PROX_EXTENSION);\n      state.flushedFiles.add(fileName);\n      out = parent.parent.parent.dir.createOutput(fileName);\n      parent.skipListWriter.setProxOutput(out);\n    } else\n      // Every field omits TF so we will write no prox file\n      out = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"066b6ff5a08e35c3b6880e7c3ddda79526acdab1":["4d17492f26096e19670d947d1be5e9adc52b1d3d"],"4d17492f26096e19670d947d1be5e9adc52b1d3d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["066b6ff5a08e35c3b6880e7c3ddda79526acdab1"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4d17492f26096e19670d947d1be5e9adc52b1d3d"],"066b6ff5a08e35c3b6880e7c3ddda79526acdab1":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"4d17492f26096e19670d947d1be5e9adc52b1d3d":["066b6ff5a08e35c3b6880e7c3ddda79526acdab1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}