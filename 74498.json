{"path":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testRemoveThenAddDefaultCore().mjava","commits":[{"id":"44fb6e33d61d61bd4d525fecc64f679ff6c756f3","date":1341532436,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testRemoveThenAddDefaultCore().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testRemoveThenAddDefaultCore() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    cores.remove(\"\");\n    core.close();\n    core.close();\n    \n    \n    SolrCore newCore = new SolrCore(COLLECTION1, dataDir + File.separator\n        + \"datadir2\", new SolrConfig(\"solr/collection1\", \"solrconfig.xml\", null), h.getCore().getSchema(),\n        new CoreDescriptor(cores, COLLECTION1, \"solr/collection1\"));\n    \n    cores.register(newCore, false);\n    \n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    // so we should be able to get a core with collection1\n    core = cores.getCore(COLLECTION1);\n    assertNotNull(core);\n    core.close();\n    \n    // and with \"\"\n    core = cores.getCore(\"\");\n    assertNotNull(core);\n    \n    core.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04e7f30683f53928b2fce016e6430c9795caff22","date":1341839598,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testRemoveThenAddDefaultCore().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testRemoveThenAddDefaultCore() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    cores.remove(\"\");\n    core.close();\n    core.close();\n    \n    \n    SolrCore newCore = new SolrCore(COLLECTION1, dataDir + File.separator\n        + \"datadir2\", new SolrConfig(\"solr/collection1\", \"solrconfig.xml\", null), h.getCore().getSchema(),\n        new CoreDescriptor(cores, COLLECTION1, \"solr/collection1\"));\n    \n    cores.register(newCore, false);\n    \n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    // so we should be able to get a core with collection1\n    core = cores.getCore(COLLECTION1);\n    assertNotNull(core);\n    core.close();\n    \n    // and with \"\"\n    core = cores.getCore(\"\");\n    assertNotNull(core);\n    \n    core.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testRemoveThenAddDefaultCore().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testRemoveThenAddDefaultCore() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    cores.remove(\"\");\n    core.close();\n    core.close();\n    \n    \n    SolrCore newCore = new SolrCore(COLLECTION1, dataDir + File.separator\n        + \"datadir2\", new SolrConfig(\"solr/collection1\", \"solrconfig.xml\", null), h.getCore().getSchema(),\n        new CoreDescriptor(cores, COLLECTION1, \"solr/collection1\"));\n    \n    cores.register(newCore, false);\n    \n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    // so we should be able to get a core with collection1\n    core = cores.getCore(COLLECTION1);\n    assertNotNull(core);\n    core.close();\n    \n    // and with \"\"\n    core = cores.getCore(\"\");\n    assertNotNull(core);\n    \n    core.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1dcb481c1d36eb918fd5685a875aa54cd72e400","date":1342796663,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testRemoveThenAddDefaultCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testRemoveThenAddDefaultCore().mjava","sourceNew":"  @Test\n  public void testRemoveThenAddDefaultCore() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    IndexSchema schema = h.getCore().getSchema();\n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    cores.remove(\"\");\n    core.close();\n    core.close();\n    \n    \n    SolrCore newCore = new SolrCore(COLLECTION1, dataDir + File.separator\n        + \"datadir2\", new SolrConfig(\"solr/collection1\", \"solrconfig.xml\", null), schema,\n        new CoreDescriptor(cores, COLLECTION1, \"solr/collection1\"));\n    \n    cores.register(newCore, false);\n    \n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    // so we should be able to get a core with collection1\n    core = cores.getCore(COLLECTION1);\n    assertNotNull(core);\n    core.close();\n    \n    // and with \"\"\n    core = cores.getCore(\"\");\n    assertNotNull(core);\n    \n    core.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRemoveThenAddDefaultCore() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    cores.remove(\"\");\n    core.close();\n    core.close();\n    \n    \n    SolrCore newCore = new SolrCore(COLLECTION1, dataDir + File.separator\n        + \"datadir2\", new SolrConfig(\"solr/collection1\", \"solrconfig.xml\", null), h.getCore().getSchema(),\n        new CoreDescriptor(cores, COLLECTION1, \"solr/collection1\"));\n    \n    cores.register(newCore, false);\n    \n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    // so we should be able to get a core with collection1\n    core = cores.getCore(COLLECTION1);\n    assertNotNull(core);\n    core.close();\n    \n    // and with \"\"\n    core = cores.getCore(\"\");\n    assertNotNull(core);\n    \n    core.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","date":1343059585,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testRemoveThenAddDefaultCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testRemoveThenAddDefaultCore().mjava","sourceNew":"  @Test\n  public void testRemoveThenAddDefaultCore() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    IndexSchema schema = h.getCore().getSchema();\n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    cores.remove(\"\");\n    core.close();\n    core.close();\n    \n    \n    SolrCore newCore = new SolrCore(COLLECTION1, dataDir + File.separator\n        + \"datadir2\", new SolrConfig(\"solr/collection1\", \"solrconfig.xml\", null), schema,\n        new CoreDescriptor(cores, COLLECTION1, \"solr/collection1\"));\n    \n    cores.register(newCore, false);\n    \n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    // so we should be able to get a core with collection1\n    core = cores.getCore(COLLECTION1);\n    assertNotNull(core);\n    core.close();\n    \n    // and with \"\"\n    core = cores.getCore(\"\");\n    assertNotNull(core);\n    \n    core.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRemoveThenAddDefaultCore() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    cores.remove(\"\");\n    core.close();\n    core.close();\n    \n    \n    SolrCore newCore = new SolrCore(COLLECTION1, dataDir + File.separator\n        + \"datadir2\", new SolrConfig(\"solr/collection1\", \"solrconfig.xml\", null), h.getCore().getSchema(),\n        new CoreDescriptor(cores, COLLECTION1, \"solr/collection1\"));\n    \n    cores.register(newCore, false);\n    \n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    // so we should be able to get a core with collection1\n    core = cores.getCore(COLLECTION1);\n    assertNotNull(core);\n    core.close();\n    \n    // and with \"\"\n    core = cores.getCore(\"\");\n    assertNotNull(core);\n    \n    core.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testRemoveThenAddDefaultCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testRemoveThenAddDefaultCore().mjava","sourceNew":"  @Test\n  public void testRemoveThenAddDefaultCore() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    IndexSchema schema = h.getCore().getSchema();\n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    cores.remove(\"\");\n    core.close();\n    core.close();\n    \n    \n    SolrCore newCore = new SolrCore(COLLECTION1, dataDir + File.separator\n        + \"datadir2\", new SolrConfig(\"solr/collection1\", \"solrconfig.xml\", null), schema,\n        new CoreDescriptor(cores, COLLECTION1, \"solr/collection1\"));\n    \n    cores.register(newCore, false);\n    \n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    // so we should be able to get a core with collection1\n    core = cores.getCore(COLLECTION1);\n    assertNotNull(core);\n    core.close();\n    \n    // and with \"\"\n    core = cores.getCore(\"\");\n    assertNotNull(core);\n    \n    core.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRemoveThenAddDefaultCore() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    cores.remove(\"\");\n    core.close();\n    core.close();\n    \n    \n    SolrCore newCore = new SolrCore(COLLECTION1, dataDir + File.separator\n        + \"datadir2\", new SolrConfig(\"solr/collection1\", \"solrconfig.xml\", null), h.getCore().getSchema(),\n        new CoreDescriptor(cores, COLLECTION1, \"solr/collection1\"));\n    \n    cores.register(newCore, false);\n    \n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    // so we should be able to get a core with collection1\n    core = cores.getCore(COLLECTION1);\n    assertNotNull(core);\n    core.close();\n    \n    // and with \"\"\n    core = cores.getCore(\"\");\n    assertNotNull(core);\n    \n    core.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08970e5b8411182a29412c177eff67ec1110095b","date":1366640815,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testRemoveThenAddDefaultCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testRemoveThenAddDefaultCore().mjava","sourceNew":"  @Test\n  public void testRemoveThenAddDefaultCore() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    cores.remove(\"\");\n    core.close();\n    core.close();\n    \n    \n    SolrCore newCore = new SolrCore(COLLECTION1, dataDir + File.separator\n        + \"datadir2\", new SolrConfig(\"solr/collection1\", \"solrconfig.xml\", null), schema,\n        new CoreDescriptor(cores, COLLECTION1, \"solr/collection1\"));\n    \n    cores.register(newCore, false);\n    \n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    // so we should be able to get a core with collection1\n    core = cores.getCore(COLLECTION1);\n    assertNotNull(core);\n    core.close();\n    \n    // and with \"\"\n    core = cores.getCore(\"\");\n    assertNotNull(core);\n    \n    core.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRemoveThenAddDefaultCore() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    IndexSchema schema = h.getCore().getSchema();\n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    cores.remove(\"\");\n    core.close();\n    core.close();\n    \n    \n    SolrCore newCore = new SolrCore(COLLECTION1, dataDir + File.separator\n        + \"datadir2\", new SolrConfig(\"solr/collection1\", \"solrconfig.xml\", null), schema,\n        new CoreDescriptor(cores, COLLECTION1, \"solr/collection1\"));\n    \n    cores.register(newCore, false);\n    \n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    // so we should be able to get a core with collection1\n    core = cores.getCore(COLLECTION1);\n    assertNotNull(core);\n    core.close();\n    \n    // and with \"\"\n    core = cores.getCore(\"\");\n    assertNotNull(core);\n    \n    core.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testRemoveThenAddDefaultCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testRemoveThenAddDefaultCore().mjava","sourceNew":"  @Test\n  public void testRemoveThenAddDefaultCore() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    cores.remove(\"\");\n    core.close();\n    core.close();\n    \n    \n    SolrCore newCore = new SolrCore(COLLECTION1, dataDir + File.separator\n        + \"datadir2\", new SolrConfig(\"solr/collection1\", \"solrconfig.xml\", null), schema,\n        new CoreDescriptor(cores, COLLECTION1, \"solr/collection1\"));\n    \n    cores.register(newCore, false);\n    \n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    // so we should be able to get a core with collection1\n    core = cores.getCore(COLLECTION1);\n    assertNotNull(core);\n    core.close();\n    \n    // and with \"\"\n    core = cores.getCore(\"\");\n    assertNotNull(core);\n    \n    core.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRemoveThenAddDefaultCore() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    cores.remove(\"\");\n    core.close();\n    core.close();\n    \n    \n    SolrCore newCore = new SolrCore(COLLECTION1, dataDir + File.separator\n        + \"datadir2\", new SolrConfig(\"solr/collection1\", \"solrconfig.xml\", null), schema,\n        new CoreDescriptor(cores, COLLECTION1, \"solr/collection1\"));\n    \n    cores.register(newCore, false);\n    \n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    // so we should be able to get a core with collection1\n    core = cores.getCore(COLLECTION1);\n    assertNotNull(core);\n    core.close();\n    \n    // and with \"\"\n    core = cores.getCore(\"\");\n    assertNotNull(core);\n    \n    core.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testRemoveThenAddDefaultCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testRemoveThenAddDefaultCore().mjava","sourceNew":"  @Test\n  public void testRemoveThenAddDefaultCore() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    cores.remove(\"\");\n    core.close();\n    core.close();\n    \n    \n    SolrCore newCore = new SolrCore(COLLECTION1, dataDir + File.separator\n        + \"datadir2\", new SolrConfig(\"solr/collection1\", \"solrconfig.xml\", null), schema,\n        new CoreDescriptor(cores, COLLECTION1, \"solr/collection1\"));\n    \n    cores.register(newCore, false);\n    \n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    // so we should be able to get a core with collection1\n    core = cores.getCore(COLLECTION1);\n    assertNotNull(core);\n    core.close();\n    \n    // and with \"\"\n    core = cores.getCore(\"\");\n    assertNotNull(core);\n    \n    core.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRemoveThenAddDefaultCore() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    cores.remove(\"\");\n    core.close();\n    core.close();\n    \n    \n    SolrCore newCore = new SolrCore(COLLECTION1, dataDir + File.separator\n        + \"datadir2\", new SolrConfig(\"solr/collection1\", \"solrconfig.xml\", null), schema,\n        new CoreDescriptor(cores, COLLECTION1, \"solr/collection1\"));\n    \n    cores.register(newCore, false);\n    \n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    // so we should be able to get a core with collection1\n    core = cores.getCore(COLLECTION1);\n    assertNotNull(core);\n    core.close();\n    \n    // and with \"\"\n    core = cores.getCore(\"\");\n    assertNotNull(core);\n    \n    core.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testRemoveThenAddDefaultCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testRemoveThenAddDefaultCore().mjava","sourceNew":"  @Test\n  public void testRemoveThenAddDefaultCore() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    cores.remove(\"\");\n    core.close();\n    core.close();\n    \n    \n    SolrCore newCore = new SolrCore(COLLECTION1, createTempDir(\"dataDir2\").getAbsolutePath(), new SolrConfig(\"solr/collection1\", \"solrconfig.xml\", null), schema,\n        new CoreDescriptor(cores, COLLECTION1, \"solr/collection1\"));\n    \n    cores.register(newCore, false);\n    \n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    // so we should be able to get a core with collection1\n    core = cores.getCore(COLLECTION1);\n    assertNotNull(core);\n    core.close();\n    \n    // and with \"\"\n    core = cores.getCore(\"\");\n    assertNotNull(core);\n    \n    core.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRemoveThenAddDefaultCore() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    cores.remove(\"\");\n    core.close();\n    core.close();\n    \n    \n    SolrCore newCore = new SolrCore(COLLECTION1, dataDir + File.separator\n        + \"datadir2\", new SolrConfig(\"solr/collection1\", \"solrconfig.xml\", null), schema,\n        new CoreDescriptor(cores, COLLECTION1, \"solr/collection1\"));\n    \n    cores.register(newCore, false);\n    \n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    // so we should be able to get a core with collection1\n    core = cores.getCore(COLLECTION1);\n    assertNotNull(core);\n    core.close();\n    \n    // and with \"\"\n    core = cores.getCore(\"\");\n    assertNotNull(core);\n    \n    core.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testRemoveThenAddDefaultCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testRemoveThenAddDefaultCore().mjava","sourceNew":"  @Test\n  public void testRemoveThenAddDefaultCore() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    cores.remove(\"\");\n    core.close();\n    core.close();\n    \n    \n    SolrCore newCore = new SolrCore(COLLECTION1, createTempDir(\"dataDir2\").getAbsolutePath(), new SolrConfig(\"solr/collection1\", \"solrconfig.xml\", null), schema,\n        new CoreDescriptor(cores, COLLECTION1, \"solr/collection1\"));\n    \n    cores.register(newCore, false);\n    \n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    // so we should be able to get a core with collection1\n    core = cores.getCore(COLLECTION1);\n    assertNotNull(core);\n    core.close();\n    \n    // and with \"\"\n    core = cores.getCore(\"\");\n    assertNotNull(core);\n    \n    core.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRemoveThenAddDefaultCore() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    cores.remove(\"\");\n    core.close();\n    core.close();\n    \n    \n    SolrCore newCore = new SolrCore(COLLECTION1, dataDir + File.separator\n        + \"datadir2\", new SolrConfig(\"solr/collection1\", \"solrconfig.xml\", null), schema,\n        new CoreDescriptor(cores, COLLECTION1, \"solr/collection1\"));\n    \n    cores.register(newCore, false);\n    \n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    // so we should be able to get a core with collection1\n    core = cores.getCore(COLLECTION1);\n    assertNotNull(core);\n    core.close();\n    \n    // and with \"\"\n    core = cores.getCore(\"\");\n    assertNotNull(core);\n    \n    core.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85032ab568b3f50eabd577aaa994ba197db93758","date":1404157267,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testRemoveThenAddDefaultCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testRemoveThenAddDefaultCore().mjava","sourceNew":"  @Test\n  public void testRemoveThenAddDefaultCore() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    cores.remove(\"\");\n    core.close();\n    core.close();\n\n    CoreDescriptor cd = new CoreDescriptor(cores, COLLECTION1, \"collection1\",\n                                            CoreDescriptor.CORE_DATADIR, createTempDir(\"dataDir2\").getAbsolutePath());\n    \n    cores.create(cd);\n    \n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    // so we should be able to get a core with collection1\n    core = cores.getCore(COLLECTION1);\n    assertNotNull(core);\n    core.close();\n    \n    // and with \"\"\n    core = cores.getCore(\"\");\n    assertNotNull(core);\n    \n    core.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRemoveThenAddDefaultCore() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    cores.remove(\"\");\n    core.close();\n    core.close();\n    \n    \n    SolrCore newCore = new SolrCore(COLLECTION1, createTempDir(\"dataDir2\").getAbsolutePath(), new SolrConfig(\"solr/collection1\", \"solrconfig.xml\", null), schema,\n        new CoreDescriptor(cores, COLLECTION1, \"solr/collection1\"));\n    \n    cores.register(newCore, false);\n    \n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    // so we should be able to get a core with collection1\n    core = cores.getCore(COLLECTION1);\n    assertNotNull(core);\n    core.close();\n    \n    // and with \"\"\n    core = cores.getCore(\"\");\n    assertNotNull(core);\n    \n    core.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d629ca62e3b8ab6e29a127aebe213163d490413","date":1405524223,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testRemoveThenAddDefaultCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testRemoveThenAddDefaultCore().mjava","sourceNew":"  @Test\n  public void testRemoveThenAddDefaultCore() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    cores.unload(\"\");\n    core.close();\n\n    CoreDescriptor cd = new CoreDescriptor(cores, COLLECTION1, \"collection1\",\n                                            CoreDescriptor.CORE_DATADIR, createTempDir(\"dataDir2\").getAbsolutePath());\n    \n    cores.create(cd);\n    \n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    // so we should be able to get a core with collection1\n    core = cores.getCore(COLLECTION1);\n    assertNotNull(core);\n    core.close();\n    \n    // and with \"\"\n    core = cores.getCore(\"\");\n    assertNotNull(core);\n    \n    core.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRemoveThenAddDefaultCore() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    cores.remove(\"\");\n    core.close();\n    core.close();\n\n    CoreDescriptor cd = new CoreDescriptor(cores, COLLECTION1, \"collection1\",\n                                            CoreDescriptor.CORE_DATADIR, createTempDir(\"dataDir2\").getAbsolutePath());\n    \n    cores.create(cd);\n    \n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    // so we should be able to get a core with collection1\n    core = cores.getCore(COLLECTION1);\n    assertNotNull(core);\n    core.close();\n    \n    // and with \"\"\n    core = cores.getCore(\"\");\n    assertNotNull(core);\n    \n    core.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testRemoveThenAddDefaultCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testRemoveThenAddDefaultCore().mjava","sourceNew":"  @Test\n  public void testRemoveThenAddDefaultCore() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    cores.unload(\"\");\n    core.close();\n\n    CoreDescriptor cd = new CoreDescriptor(cores, COLLECTION1, \"collection1\",\n                                            CoreDescriptor.CORE_DATADIR, createTempDir(\"dataDir2\").toFile().getAbsolutePath());\n    \n    cores.create(cd);\n    \n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    // so we should be able to get a core with collection1\n    core = cores.getCore(COLLECTION1);\n    assertNotNull(core);\n    core.close();\n    \n    // and with \"\"\n    core = cores.getCore(\"\");\n    assertNotNull(core);\n    \n    core.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRemoveThenAddDefaultCore() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    cores.unload(\"\");\n    core.close();\n\n    CoreDescriptor cd = new CoreDescriptor(cores, COLLECTION1, \"collection1\",\n                                            CoreDescriptor.CORE_DATADIR, createTempDir(\"dataDir2\").getAbsolutePath());\n    \n    cores.create(cd);\n    \n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    // so we should be able to get a core with collection1\n    core = cores.getCore(COLLECTION1);\n    assertNotNull(core);\n    core.close();\n    \n    // and with \"\"\n    core = cores.getCore(\"\");\n    assertNotNull(core);\n    \n    core.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testRemoveThenAddDefaultCore().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testRemoveThenAddDefaultCore() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    cores.unload(\"\");\n    core.close();\n\n    CoreDescriptor cd = new CoreDescriptor(cores, COLLECTION1, \"collection1\",\n                                            CoreDescriptor.CORE_DATADIR, createTempDir(\"dataDir2\").toFile().getAbsolutePath());\n    \n    cores.create(cd);\n    \n    assertEquals(COLLECTION1, cores.getDefaultCoreName());\n    \n    // so we should be able to get a core with collection1\n    core = cores.getCore(COLLECTION1);\n    assertNotNull(core);\n    core.close();\n    \n    // and with \"\"\n    core = cores.getCore(\"\");\n    assertNotNull(core);\n    \n    core.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04e7f30683f53928b2fce016e6430c9795caff22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","44fb6e33d61d61bd4d525fecc64f679ff6c756f3"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["08970e5b8411182a29412c177eff67ec1110095b","19275ba31e621f6da1b83bf13af75233876fd3d4"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["19275ba31e621f6da1b83bf13af75233876fd3d4","bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["f4abec28b874149a7223e32cc7a01704c27790de"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["08970e5b8411182a29412c177eff67ec1110095b"],"f4abec28b874149a7223e32cc7a01704c27790de":["2d629ca62e3b8ab6e29a127aebe213163d490413"],"44fb6e33d61d61bd4d525fecc64f679ff6c756f3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"08970e5b8411182a29412c177eff67ec1110095b":["b1dcb481c1d36eb918fd5685a875aa54cd72e400"],"aba371508186796cc6151d8223a5b4e16d02e26e":["04e7f30683f53928b2fce016e6430c9795caff22","b1dcb481c1d36eb918fd5685a875aa54cd72e400"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","44fb6e33d61d61bd4d525fecc64f679ff6c756f3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2d629ca62e3b8ab6e29a127aebe213163d490413":["85032ab568b3f50eabd577aaa994ba197db93758"],"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7":["fe33227f6805edab2036cbb80645cc4e2d1fa424","b1dcb481c1d36eb918fd5685a875aa54cd72e400"],"b1dcb481c1d36eb918fd5685a875aa54cd72e400":["44fb6e33d61d61bd4d525fecc64f679ff6c756f3"],"85032ab568b3f50eabd577aaa994ba197db93758":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"]},"commit2Childs":{"04e7f30683f53928b2fce016e6430c9795caff22":["aba371508186796cc6151d8223a5b4e16d02e26e"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["85032ab568b3f50eabd577aaa994ba197db93758"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","bb1f22cfa77230b5f05b7784feae5367f6bbb488","2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"44fb6e33d61d61bd4d525fecc64f679ff6c756f3":["04e7f30683f53928b2fce016e6430c9795caff22","fe33227f6805edab2036cbb80645cc4e2d1fa424","b1dcb481c1d36eb918fd5685a875aa54cd72e400"],"f4abec28b874149a7223e32cc7a01704c27790de":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"08970e5b8411182a29412c177eff67ec1110095b":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","19275ba31e621f6da1b83bf13af75233876fd3d4"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["4b51f65902cc2d20ddeb7a5b949aaddf990f31a7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["04e7f30683f53928b2fce016e6430c9795caff22","44fb6e33d61d61bd4d525fecc64f679ff6c756f3","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"2d629ca62e3b8ab6e29a127aebe213163d490413":["f4abec28b874149a7223e32cc7a01704c27790de"],"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7":[],"b1dcb481c1d36eb918fd5685a875aa54cd72e400":["08970e5b8411182a29412c177eff67ec1110095b","aba371508186796cc6151d8223a5b4e16d02e26e","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7"],"85032ab568b3f50eabd577aaa994ba197db93758":["2d629ca62e3b8ab6e29a127aebe213163d490413"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","aba371508186796cc6151d8223a5b4e16d02e26e","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}