{"path":"solr/core/src/java/org/apache/solr/core/StandardIndexReaderFactory#newReader(Directory,boolean).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/StandardIndexReaderFactory#newReader(Directory,boolean).mjava","pathOld":"solr/src/java/org/apache/solr/core/StandardIndexReaderFactory#newReader(Directory,boolean).mjava","sourceNew":"  /* (non-Javadoc)\n   * @see org.apache.solr.core.IndexReaderFactory#newReader(org.apache.lucene.store.Directory, boolean)\n   */\n  @Override\n  public IndexReader newReader(Directory indexDir, boolean readOnly)\n      throws IOException {\n    return IndexReader.open(indexDir, null, readOnly, termInfosIndexDivisor, provider);\n  }\n\n","sourceOld":"  /* (non-Javadoc)\n   * @see org.apache.solr.core.IndexReaderFactory#newReader(org.apache.lucene.store.Directory, boolean)\n   */\n  @Override\n  public IndexReader newReader(Directory indexDir, boolean readOnly)\n      throws IOException {\n    return IndexReader.open(indexDir, null, readOnly, termInfosIndexDivisor, provider);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/StandardIndexReaderFactory#newReader(Directory,boolean).mjava","pathOld":"solr/src/java/org/apache/solr/core/StandardIndexReaderFactory#newReader(Directory,boolean).mjava","sourceNew":"  /* (non-Javadoc)\n   * @see org.apache.solr.core.IndexReaderFactory#newReader(org.apache.lucene.store.Directory, boolean)\n   */\n  @Override\n  public IndexReader newReader(Directory indexDir, boolean readOnly)\n      throws IOException {\n    return IndexReader.open(indexDir, null, readOnly, termInfosIndexDivisor, provider);\n  }\n\n","sourceOld":"  /* (non-Javadoc)\n   * @see org.apache.solr.core.IndexReaderFactory#newReader(org.apache.lucene.store.Directory, boolean)\n   */\n  @Override\n  public IndexReader newReader(Directory indexDir, boolean readOnly)\n      throws IOException {\n    return IndexReader.open(indexDir, null, readOnly, termInfosIndexDivisor, provider);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/StandardIndexReaderFactory#newReader(Directory,boolean).mjava","pathOld":"solr/src/java/org/apache/solr/core/StandardIndexReaderFactory#newReader(Directory,boolean).mjava","sourceNew":"  /* (non-Javadoc)\n   * @see org.apache.solr.core.IndexReaderFactory#newReader(org.apache.lucene.store.Directory, boolean)\n   */\n  @Override\n  public IndexReader newReader(Directory indexDir, boolean readOnly)\n      throws IOException {\n    return IndexReader.open(indexDir, null, readOnly, termInfosIndexDivisor, provider);\n  }\n\n","sourceOld":"  /* (non-Javadoc)\n   * @see org.apache.solr.core.IndexReaderFactory#newReader(org.apache.lucene.store.Directory, boolean)\n   */\n  @Override\n  public IndexReader newReader(Directory indexDir, boolean readOnly)\n      throws IOException {\n    return IndexReader.open(indexDir, null, readOnly, termInfosIndexDivisor, provider);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/StandardIndexReaderFactory#newReader(Directory,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/StandardIndexReaderFactory#newReader(Directory,boolean).mjava","sourceNew":"  /* (non-Javadoc)\n   * @see org.apache.solr.core.IndexReaderFactory#newReader(org.apache.lucene.store.Directory, boolean)\n   */\n  @Override\n  public IndexReader newReader(Directory indexDir, boolean readOnly)\n      throws IOException {\n    return IndexReader.open(indexDir, null, readOnly, termInfosIndexDivisor);\n  }\n\n","sourceOld":"  /* (non-Javadoc)\n   * @see org.apache.solr.core.IndexReaderFactory#newReader(org.apache.lucene.store.Directory, boolean)\n   */\n  @Override\n  public IndexReader newReader(Directory indexDir, boolean readOnly)\n      throws IOException {\n    return IndexReader.open(indexDir, null, readOnly, termInfosIndexDivisor, provider);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c5b026d03cbbb03ca4c0b97d14e9839682281dc","date":1323049298,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/StandardIndexReaderFactory#newReader(Directory,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/StandardIndexReaderFactory#newReader(Directory,boolean).mjava","sourceNew":"  /* (non-Javadoc)\n   * @see org.apache.solr.core.IndexReaderFactory#newReader(org.apache.lucene.store.Directory, boolean)\n   */\n  @Override\n  public IndexReader newReader(Directory indexDir, boolean readOnly)\n      throws IOException {\n    assert readOnly; // nocommit: readOnly is ignored - remove\n    return IndexReader.open(indexDir, termInfosIndexDivisor);\n  }\n\n","sourceOld":"  /* (non-Javadoc)\n   * @see org.apache.solr.core.IndexReaderFactory#newReader(org.apache.lucene.store.Directory, boolean)\n   */\n  @Override\n  public IndexReader newReader(Directory indexDir, boolean readOnly)\n      throws IOException {\n    return IndexReader.open(indexDir, null, readOnly, termInfosIndexDivisor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cc5d33c4ecf450c71edad489df69de68a73a11","date":1323189401,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/StandardIndexReaderFactory#newReader(Directory,boolean).mjava","sourceNew":null,"sourceOld":"  /* (non-Javadoc)\n   * @see org.apache.solr.core.IndexReaderFactory#newReader(org.apache.lucene.store.Directory, boolean)\n   */\n  @Override\n  public IndexReader newReader(Directory indexDir, boolean readOnly)\n      throws IOException {\n    assert readOnly; // nocommit: readOnly is ignored - remove\n    return IndexReader.open(indexDir, termInfosIndexDivisor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/StandardIndexReaderFactory#newReader(Directory,boolean).mjava","sourceNew":null,"sourceOld":"  /* (non-Javadoc)\n   * @see org.apache.solr.core.IndexReaderFactory#newReader(org.apache.lucene.store.Directory, boolean)\n   */\n  @Override\n  public IndexReader newReader(Directory indexDir, boolean readOnly)\n      throws IOException {\n    return IndexReader.open(indexDir, null, readOnly, termInfosIndexDivisor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/StandardIndexReaderFactory#newReader(Directory,boolean).mjava","sourceNew":null,"sourceOld":"  /* (non-Javadoc)\n   * @see org.apache.solr.core.IndexReaderFactory#newReader(org.apache.lucene.store.Directory, boolean)\n   */\n  @Override\n  public IndexReader newReader(Directory indexDir, boolean readOnly)\n      throws IOException {\n    return IndexReader.open(indexDir, null, readOnly, termInfosIndexDivisor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["c26f00b574427b55127e869b935845554afde1fa"],"77cc5d33c4ecf450c71edad489df69de68a73a11":["1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["7b91922b55d15444d554721b352861d028eb8278","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["7b91922b55d15444d554721b352861d028eb8278","77cc5d33c4ecf450c71edad489df69de68a73a11"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["7b91922b55d15444d554721b352861d028eb8278"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3615ce4a1f785ae1b779244de52c6a7d99227e60"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3615ce4a1f785ae1b779244de52c6a7d99227e60","1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"77cc5d33c4ecf450c71edad489df69de68a73a11":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"c26f00b574427b55127e869b935845554afde1fa":["7b91922b55d15444d554721b352861d028eb8278"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["77cc5d33c4ecf450c71edad489df69de68a73a11"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}