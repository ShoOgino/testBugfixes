{"path":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/TestExtractionDateUtil#assertParsedDate(long,String).mjava","commits":[{"id":"7d60e61c65a1b9de0ec7baf2c94de9f228a9ba69","date":1459364429,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/TestExtractionDateUtil#assertParsedDate(long,String).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/TestDateUtil#assertParsedDate(long,String).mjava","sourceNew":"  private static void assertParsedDate(long ts, String dateStr) throws ParseException {\n    long parsed = ExtractionDateUtil.parseDate(dateStr).getTime();\n    assertTrue(String.format(Locale.ENGLISH, \"Incorrect parsed timestamp: %d != %d (%s)\", ts, parsed, dateStr), Math.abs(ts - parsed) <= 1000L);\n  }\n\n","sourceOld":"  private static void assertParsedDate(long ts, String dateStr) throws ParseException {\n    long parsed = DateUtil.parseDate(dateStr).getTime();\n    assertTrue(String.format(Locale.ENGLISH, \"Incorrect parsed timestamp: %d != %d (%s)\", ts, parsed, dateStr), Math.abs(ts - parsed) <= 1000L);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0982ea5c2b7f50890065ccf2b59068efc40eaafe","date":1538167811,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/TestExtractionDateUtil#assertParsedDate(long,String).mjava","sourceNew":null,"sourceOld":"  private static void assertParsedDate(long ts, String dateStr) throws ParseException {\n    long parsed = ExtractionDateUtil.parseDate(dateStr).getTime();\n    assertTrue(String.format(Locale.ENGLISH, \"Incorrect parsed timestamp: %d != %d (%s)\", ts, parsed, dateStr), Math.abs(ts - parsed) <= 1000L);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7d60e61c65a1b9de0ec7baf2c94de9f228a9ba69":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0982ea5c2b7f50890065ccf2b59068efc40eaafe":["7d60e61c65a1b9de0ec7baf2c94de9f228a9ba69"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0982ea5c2b7f50890065ccf2b59068efc40eaafe"]},"commit2Childs":{"7d60e61c65a1b9de0ec7baf2c94de9f228a9ba69":["0982ea5c2b7f50890065ccf2b59068efc40eaafe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7d60e61c65a1b9de0ec7baf2c94de9f228a9ba69"],"0982ea5c2b7f50890065ccf2b59068efc40eaafe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}