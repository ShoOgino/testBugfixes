{"path":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testAggs().mjava","commits":[{"id":"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d","date":1426480823,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testAggs().mjava","pathOld":"/dev/null","sourceNew":"  public void testAggs() throws Exception {\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg(avg(foo_i))\");\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_min(foo_i)\", \"agg(min(foo_i))\");\n    assertFuncEquals(\"agg_max(foo_i)\", \"agg(max(foo_i))\");\n\n    assertFuncEquals(\"agg_avg(foo_i)\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_sum(foo_i)\", \"agg_sum(foo_i)\");\n    assertFuncEquals(\"agg_count()\", \"agg_count()\");\n    assertFuncEquals(\"agg_unique(foo_i)\", \"agg_unique(foo_i)\");\n    assertFuncEquals(\"agg_sumsq(foo_i)\", \"agg_sumsq(foo_i)\");\n    // assertFuncEquals(\"agg_stdev(foo_i)\", \"agg_stdev(foo_i)\");\n    // assertFuncEquals(\"agg_multistat(foo_i)\", \"agg_multistat(foo_i)\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e1a5b7d1a46c866d92b1922fa64a4b7ae6f7d1f","date":1427306546,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testAggs().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testAggs().mjava","sourceNew":"  public void testAggs() throws Exception {\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg(avg(foo_i))\");\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_min(foo_i)\", \"agg(min(foo_i))\");\n    assertFuncEquals(\"agg_max(foo_i)\", \"agg(max(foo_i))\");\n\n    assertFuncEquals(\"agg_avg(foo_i)\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_sum(foo_i)\", \"agg_sum(foo_i)\");\n    assertFuncEquals(\"agg_count()\", \"agg_count()\");\n    assertFuncEquals(\"agg_unique(foo_i)\", \"agg_unique(foo_i)\");\n    assertFuncEquals(\"agg_sumsq(foo_i)\", \"agg_sumsq(foo_i)\");\n    assertFuncEquals(\"agg_percentile(foo_i,50)\", \"agg_percentile(foo_i,50)\");\n    // assertFuncEquals(\"agg_stdev(foo_i)\", \"agg_stdev(foo_i)\");\n    // assertFuncEquals(\"agg_multistat(foo_i)\", \"agg_multistat(foo_i)\");\n  }\n\n","sourceOld":"  public void testAggs() throws Exception {\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg(avg(foo_i))\");\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_min(foo_i)\", \"agg(min(foo_i))\");\n    assertFuncEquals(\"agg_max(foo_i)\", \"agg(max(foo_i))\");\n\n    assertFuncEquals(\"agg_avg(foo_i)\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_sum(foo_i)\", \"agg_sum(foo_i)\");\n    assertFuncEquals(\"agg_count()\", \"agg_count()\");\n    assertFuncEquals(\"agg_unique(foo_i)\", \"agg_unique(foo_i)\");\n    assertFuncEquals(\"agg_sumsq(foo_i)\", \"agg_sumsq(foo_i)\");\n    // assertFuncEquals(\"agg_stdev(foo_i)\", \"agg_stdev(foo_i)\");\n    // assertFuncEquals(\"agg_multistat(foo_i)\", \"agg_multistat(foo_i)\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testAggs().mjava","pathOld":"/dev/null","sourceNew":"  public void testAggs() throws Exception {\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg(avg(foo_i))\");\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_min(foo_i)\", \"agg(min(foo_i))\");\n    assertFuncEquals(\"agg_max(foo_i)\", \"agg(max(foo_i))\");\n\n    assertFuncEquals(\"agg_avg(foo_i)\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_sum(foo_i)\", \"agg_sum(foo_i)\");\n    assertFuncEquals(\"agg_count()\", \"agg_count()\");\n    assertFuncEquals(\"agg_unique(foo_i)\", \"agg_unique(foo_i)\");\n    assertFuncEquals(\"agg_sumsq(foo_i)\", \"agg_sumsq(foo_i)\");\n    assertFuncEquals(\"agg_percentile(foo_i,50)\", \"agg_percentile(foo_i,50)\");\n    // assertFuncEquals(\"agg_stdev(foo_i)\", \"agg_stdev(foo_i)\");\n    // assertFuncEquals(\"agg_multistat(foo_i)\", \"agg_multistat(foo_i)\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"743c6ecb544e5d3e3cfd8e707770cfbfa39b3386","date":1431896243,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testAggs().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testAggs().mjava","sourceNew":"  public void testAggs() throws Exception {\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg(avg(foo_i))\");\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_min(foo_i)\", \"agg(min(foo_i))\");\n    assertFuncEquals(\"agg_max(foo_i)\", \"agg(max(foo_i))\");\n\n    assertFuncEquals(\"agg_avg(foo_i)\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_sum(foo_i)\", \"agg_sum(foo_i)\");\n    assertFuncEquals(\"agg_count()\", \"agg_count()\");\n    assertFuncEquals(\"agg_unique(foo_i)\", \"agg_unique(foo_i)\");\n    assertFuncEquals(\"agg_hll(foo_i)\", \"agg_hll(foo_i)\");\n    assertFuncEquals(\"agg_sumsq(foo_i)\", \"agg_sumsq(foo_i)\");\n    assertFuncEquals(\"agg_percentile(foo_i,50)\", \"agg_percentile(foo_i,50)\");\n    // assertFuncEquals(\"agg_stdev(foo_i)\", \"agg_stdev(foo_i)\");\n    // assertFuncEquals(\"agg_multistat(foo_i)\", \"agg_multistat(foo_i)\");\n  }\n\n","sourceOld":"  public void testAggs() throws Exception {\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg(avg(foo_i))\");\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_min(foo_i)\", \"agg(min(foo_i))\");\n    assertFuncEquals(\"agg_max(foo_i)\", \"agg(max(foo_i))\");\n\n    assertFuncEquals(\"agg_avg(foo_i)\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_sum(foo_i)\", \"agg_sum(foo_i)\");\n    assertFuncEquals(\"agg_count()\", \"agg_count()\");\n    assertFuncEquals(\"agg_unique(foo_i)\", \"agg_unique(foo_i)\");\n    assertFuncEquals(\"agg_sumsq(foo_i)\", \"agg_sumsq(foo_i)\");\n    assertFuncEquals(\"agg_percentile(foo_i,50)\", \"agg_percentile(foo_i,50)\");\n    // assertFuncEquals(\"agg_stdev(foo_i)\", \"agg_stdev(foo_i)\");\n    // assertFuncEquals(\"agg_multistat(foo_i)\", \"agg_multistat(foo_i)\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de0d7af063e5c03bbc9db87e7e708da8102fdbc3","date":1492482629,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testAggs().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testAggs().mjava","sourceNew":"  public void testAggs() throws Exception {\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg(avg(foo_i))\");\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_min(foo_i)\", \"agg(min(foo_i))\");\n    assertFuncEquals(\"agg_max(foo_i)\", \"agg(max(foo_i))\");\n\n    assertFuncEquals(\"agg_avg(foo_i)\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_sum(foo_i)\", \"agg_sum(foo_i)\");\n    assertFuncEquals(\"agg_count()\", \"agg_count()\");\n    assertFuncEquals(\"agg_unique(foo_i)\", \"agg_unique(foo_i)\");\n    assertFuncEquals(\"agg_hll(foo_i)\", \"agg_hll(foo_i)\");\n    assertFuncEquals(\"agg_sumsq(foo_i)\", \"agg_sumsq(foo_i)\");\n    assertFuncEquals(\"agg_percentile(foo_i,50)\", \"agg_percentile(foo_i,50)\");\n    assertFuncEquals(\"agg_variance(foo_i)\", \"agg_variance(foo_i)\");\n    assertFuncEquals(\"agg_stddev(foo_i)\", \"agg_stddev(foo_i)\");\n    // assertFuncEquals(\"agg_multistat(foo_i)\", \"agg_multistat(foo_i)\");\n  }\n\n","sourceOld":"  public void testAggs() throws Exception {\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg(avg(foo_i))\");\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_min(foo_i)\", \"agg(min(foo_i))\");\n    assertFuncEquals(\"agg_max(foo_i)\", \"agg(max(foo_i))\");\n\n    assertFuncEquals(\"agg_avg(foo_i)\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_sum(foo_i)\", \"agg_sum(foo_i)\");\n    assertFuncEquals(\"agg_count()\", \"agg_count()\");\n    assertFuncEquals(\"agg_unique(foo_i)\", \"agg_unique(foo_i)\");\n    assertFuncEquals(\"agg_hll(foo_i)\", \"agg_hll(foo_i)\");\n    assertFuncEquals(\"agg_sumsq(foo_i)\", \"agg_sumsq(foo_i)\");\n    assertFuncEquals(\"agg_percentile(foo_i,50)\", \"agg_percentile(foo_i,50)\");\n    // assertFuncEquals(\"agg_stdev(foo_i)\", \"agg_stdev(foo_i)\");\n    // assertFuncEquals(\"agg_multistat(foo_i)\", \"agg_multistat(foo_i)\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testAggs().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testAggs().mjava","sourceNew":"  public void testAggs() throws Exception {\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg(avg(foo_i))\");\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_min(foo_i)\", \"agg(min(foo_i))\");\n    assertFuncEquals(\"agg_max(foo_i)\", \"agg(max(foo_i))\");\n\n    assertFuncEquals(\"agg_avg(foo_i)\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_sum(foo_i)\", \"agg_sum(foo_i)\");\n    assertFuncEquals(\"agg_count()\", \"agg_count()\");\n    assertFuncEquals(\"agg_unique(foo_i)\", \"agg_unique(foo_i)\");\n    assertFuncEquals(\"agg_hll(foo_i)\", \"agg_hll(foo_i)\");\n    assertFuncEquals(\"agg_sumsq(foo_i)\", \"agg_sumsq(foo_i)\");\n    assertFuncEquals(\"agg_percentile(foo_i,50)\", \"agg_percentile(foo_i,50)\");\n    assertFuncEquals(\"agg_variance(foo_i)\", \"agg_variance(foo_i)\");\n    assertFuncEquals(\"agg_stddev(foo_i)\", \"agg_stddev(foo_i)\");\n    // assertFuncEquals(\"agg_multistat(foo_i)\", \"agg_multistat(foo_i)\");\n  }\n\n","sourceOld":"  public void testAggs() throws Exception {\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg(avg(foo_i))\");\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_min(foo_i)\", \"agg(min(foo_i))\");\n    assertFuncEquals(\"agg_max(foo_i)\", \"agg(max(foo_i))\");\n\n    assertFuncEquals(\"agg_avg(foo_i)\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_sum(foo_i)\", \"agg_sum(foo_i)\");\n    assertFuncEquals(\"agg_count()\", \"agg_count()\");\n    assertFuncEquals(\"agg_unique(foo_i)\", \"agg_unique(foo_i)\");\n    assertFuncEquals(\"agg_hll(foo_i)\", \"agg_hll(foo_i)\");\n    assertFuncEquals(\"agg_sumsq(foo_i)\", \"agg_sumsq(foo_i)\");\n    assertFuncEquals(\"agg_percentile(foo_i,50)\", \"agg_percentile(foo_i,50)\");\n    // assertFuncEquals(\"agg_stdev(foo_i)\", \"agg_stdev(foo_i)\");\n    // assertFuncEquals(\"agg_multistat(foo_i)\", \"agg_multistat(foo_i)\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79a29c6bd3f9ceeff3a351a23029546d12b66034","date":1525195155,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testAggs().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testAggs().mjava","sourceNew":"  public void testAggs() throws Exception {\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg(avg(foo_i))\");\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_min(foo_i)\", \"agg(min(foo_i))\");\n    assertFuncEquals(\"agg_max(foo_i)\", \"agg(max(foo_i))\");\n\n    assertFuncEquals(\"agg_avg(foo_i)\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_sum(foo_i)\", \"agg_sum(foo_i)\");\n    assertFuncEquals(\"agg_count()\", \"agg_count()\");\n    assertFuncEquals(\"agg_unique(foo_i)\", \"agg_unique(foo_i)\");\n    assertFuncEquals(\"agg_uniqueBlock(foo_i)\", \"agg_uniqueBlock(foo_i)\");\n    assertFuncEquals(\"agg_hll(foo_i)\", \"agg_hll(foo_i)\");\n    assertFuncEquals(\"agg_sumsq(foo_i)\", \"agg_sumsq(foo_i)\");\n    assertFuncEquals(\"agg_percentile(foo_i,50)\", \"agg_percentile(foo_i,50)\");\n    assertFuncEquals(\"agg_variance(foo_i)\", \"agg_variance(foo_i)\");\n    assertFuncEquals(\"agg_stddev(foo_i)\", \"agg_stddev(foo_i)\");\n    // assertFuncEquals(\"agg_multistat(foo_i)\", \"agg_multistat(foo_i)\");\n  }\n\n","sourceOld":"  public void testAggs() throws Exception {\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg(avg(foo_i))\");\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_min(foo_i)\", \"agg(min(foo_i))\");\n    assertFuncEquals(\"agg_max(foo_i)\", \"agg(max(foo_i))\");\n\n    assertFuncEquals(\"agg_avg(foo_i)\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_sum(foo_i)\", \"agg_sum(foo_i)\");\n    assertFuncEquals(\"agg_count()\", \"agg_count()\");\n    assertFuncEquals(\"agg_unique(foo_i)\", \"agg_unique(foo_i)\");\n    assertFuncEquals(\"agg_hll(foo_i)\", \"agg_hll(foo_i)\");\n    assertFuncEquals(\"agg_sumsq(foo_i)\", \"agg_sumsq(foo_i)\");\n    assertFuncEquals(\"agg_percentile(foo_i,50)\", \"agg_percentile(foo_i,50)\");\n    assertFuncEquals(\"agg_variance(foo_i)\", \"agg_variance(foo_i)\");\n    assertFuncEquals(\"agg_stddev(foo_i)\", \"agg_stddev(foo_i)\");\n    // assertFuncEquals(\"agg_multistat(foo_i)\", \"agg_multistat(foo_i)\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ab0d0e3eeff82234ea56bd0a3bf61cc196bf316","date":1573886531,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testAggs().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testAggs().mjava","sourceNew":"  public void testAggs() throws Exception {\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg(avg(foo_i))\");\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_min(foo_i)\", \"agg(min(foo_i))\");\n    assertFuncEquals(\"agg_max(foo_i)\", \"agg(max(foo_i))\");\n\n    assertFuncEquals(\"agg_avg(foo_i)\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_sum(foo_i)\", \"agg_sum(foo_i)\");\n    assertFuncEquals(\"agg_count()\", \"agg_count()\");\n    assertFuncEquals(\"agg_unique(foo_i)\", \"agg_unique(foo_i)\");\n    assertFuncEquals(\"agg_uniqueBlock(foo_i)\", \"agg_uniqueBlock(foo_i)\");\n    assertFuncEquals(\"agg_hll(foo_i)\", \"agg_hll(foo_i)\");\n    assertFuncEquals(\"agg_sumsq(foo_i)\", \"agg_sumsq(foo_i)\");\n    assertFuncEquals(\"agg_percentile(foo_i,50)\", \"agg_percentile(foo_i,50)\");\n    assertFuncEquals(\"agg_variance(foo_i)\", \"agg_variance(foo_i)\");\n    assertFuncEquals(\"agg_stddev(foo_i)\", \"agg_stddev(foo_i)\");\n    assertFuncEquals(\"agg_missing(foo_i)\", \"agg_missing(foo_i)\");\n    assertFuncEquals(\"agg(missing(foo_i))\", \"agg(missing(foo_i))\");\n    assertFuncEquals(\"agg_missing(field(foo_i))\", \"agg_missing(field(foo_i))\");\n    // assertFuncEquals(\"agg_multistat(foo_i)\", \"agg_multistat(foo_i)\");\n  }\n\n","sourceOld":"  public void testAggs() throws Exception {\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg(avg(foo_i))\");\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_min(foo_i)\", \"agg(min(foo_i))\");\n    assertFuncEquals(\"agg_max(foo_i)\", \"agg(max(foo_i))\");\n\n    assertFuncEquals(\"agg_avg(foo_i)\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_sum(foo_i)\", \"agg_sum(foo_i)\");\n    assertFuncEquals(\"agg_count()\", \"agg_count()\");\n    assertFuncEquals(\"agg_unique(foo_i)\", \"agg_unique(foo_i)\");\n    assertFuncEquals(\"agg_uniqueBlock(foo_i)\", \"agg_uniqueBlock(foo_i)\");\n    assertFuncEquals(\"agg_hll(foo_i)\", \"agg_hll(foo_i)\");\n    assertFuncEquals(\"agg_sumsq(foo_i)\", \"agg_sumsq(foo_i)\");\n    assertFuncEquals(\"agg_percentile(foo_i,50)\", \"agg_percentile(foo_i,50)\");\n    assertFuncEquals(\"agg_variance(foo_i)\", \"agg_variance(foo_i)\");\n    assertFuncEquals(\"agg_stddev(foo_i)\", \"agg_stddev(foo_i)\");\n    // assertFuncEquals(\"agg_multistat(foo_i)\", \"agg_multistat(foo_i)\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"356bbab82e5e26b4d86a88681d48baaf6103c4fc","date":1574426780,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testAggs().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testAggs().mjava","sourceNew":"  public void testAggs() throws Exception {\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg(avg(foo_i))\");\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_min(foo_i)\", \"agg(min(foo_i))\");\n    assertFuncEquals(\"agg_max(foo_i)\", \"agg(max(foo_i))\");\n\n    assertFuncEquals(\"agg_avg(foo_i)\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_sum(foo_i)\", \"agg_sum(foo_i)\");\n    assertFuncEquals(\"agg_count()\", \"agg_count()\");\n    assertFuncEquals(\"agg_unique(foo_i)\", \"agg_unique(foo_i)\");\n    assertFuncEquals(\"agg_uniqueBlock(foo_i)\", \"agg_uniqueBlock(foo_i)\");\n    assertFuncEquals(\"agg_hll(foo_i)\", \"agg_hll(foo_i)\");\n    assertFuncEquals(\"agg_sumsq(foo_i)\", \"agg_sumsq(foo_i)\");\n    assertFuncEquals(\"agg_percentile(foo_i,50)\", \"agg_percentile(foo_i,50)\");\n    assertFuncEquals(\"agg_variance(foo_i)\", \"agg_variance(foo_i)\");\n    assertFuncEquals(\"agg_stddev(foo_i)\", \"agg_stddev(foo_i)\");\n    assertFuncEquals(\"agg_missing(foo_i)\", \"agg_missing(foo_i)\");\n    assertFuncEquals(\"agg(missing(foo_i))\", \"agg(missing(foo_i))\");\n    assertFuncEquals(\"agg_missing(field(foo_i))\", \"agg_missing(field(foo_i))\");\n    assertFuncEquals(\"agg_countvals(foo_i)\", \"agg_countvals(foo_i)\");\n    assertFuncEquals(\"agg(countvals(foo_i))\", \"agg(countvals(foo_i))\");\n    assertFuncEquals(\"agg_countvals(field(foo_i))\", \"agg_countvals(field(foo_i))\");\n    // assertFuncEquals(\"agg_multistat(foo_i)\", \"agg_multistat(foo_i)\");\n  }\n\n","sourceOld":"  public void testAggs() throws Exception {\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg(avg(foo_i))\");\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_min(foo_i)\", \"agg(min(foo_i))\");\n    assertFuncEquals(\"agg_max(foo_i)\", \"agg(max(foo_i))\");\n\n    assertFuncEquals(\"agg_avg(foo_i)\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_sum(foo_i)\", \"agg_sum(foo_i)\");\n    assertFuncEquals(\"agg_count()\", \"agg_count()\");\n    assertFuncEquals(\"agg_unique(foo_i)\", \"agg_unique(foo_i)\");\n    assertFuncEquals(\"agg_uniqueBlock(foo_i)\", \"agg_uniqueBlock(foo_i)\");\n    assertFuncEquals(\"agg_hll(foo_i)\", \"agg_hll(foo_i)\");\n    assertFuncEquals(\"agg_sumsq(foo_i)\", \"agg_sumsq(foo_i)\");\n    assertFuncEquals(\"agg_percentile(foo_i,50)\", \"agg_percentile(foo_i,50)\");\n    assertFuncEquals(\"agg_variance(foo_i)\", \"agg_variance(foo_i)\");\n    assertFuncEquals(\"agg_stddev(foo_i)\", \"agg_stddev(foo_i)\");\n    assertFuncEquals(\"agg_missing(foo_i)\", \"agg_missing(foo_i)\");\n    assertFuncEquals(\"agg(missing(foo_i))\", \"agg(missing(foo_i))\");\n    assertFuncEquals(\"agg_missing(field(foo_i))\", \"agg_missing(field(foo_i))\");\n    // assertFuncEquals(\"agg_multistat(foo_i)\", \"agg_multistat(foo_i)\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"de0d7af063e5c03bbc9db87e7e708da8102fdbc3":["743c6ecb544e5d3e3cfd8e707770cfbfa39b3386"],"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["743c6ecb544e5d3e3cfd8e707770cfbfa39b3386"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7e1a5b7d1a46c866d92b1922fa64a4b7ae6f7d1f"],"8ab0d0e3eeff82234ea56bd0a3bf61cc196bf316":["79a29c6bd3f9ceeff3a351a23029546d12b66034"],"743c6ecb544e5d3e3cfd8e707770cfbfa39b3386":["7e1a5b7d1a46c866d92b1922fa64a4b7ae6f7d1f"],"7e1a5b7d1a46c866d92b1922fa64a4b7ae6f7d1f":["ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"356bbab82e5e26b4d86a88681d48baaf6103c4fc":["8ab0d0e3eeff82234ea56bd0a3bf61cc196bf316"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"79a29c6bd3f9ceeff3a351a23029546d12b66034":["de0d7af063e5c03bbc9db87e7e708da8102fdbc3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["356bbab82e5e26b4d86a88681d48baaf6103c4fc"]},"commit2Childs":{"de0d7af063e5c03bbc9db87e7e708da8102fdbc3":["79a29c6bd3f9ceeff3a351a23029546d12b66034"],"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"743c6ecb544e5d3e3cfd8e707770cfbfa39b3386":["de0d7af063e5c03bbc9db87e7e708da8102fdbc3","54ca69905c5d9d1529286f06ab1d12c68f6c13cb"],"8ab0d0e3eeff82234ea56bd0a3bf61cc196bf316":["356bbab82e5e26b4d86a88681d48baaf6103c4fc"],"7e1a5b7d1a46c866d92b1922fa64a4b7ae6f7d1f":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","743c6ecb544e5d3e3cfd8e707770cfbfa39b3386"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"356bbab82e5e26b4d86a88681d48baaf6103c4fc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["7e1a5b7d1a46c866d92b1922fa64a4b7ae6f7d1f"],"79a29c6bd3f9ceeff3a351a23029546d12b66034":["8ab0d0e3eeff82234ea56bd0a3bf61cc196bf316"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}