{"path":"solr/core/src/java/org/apache/solr/schema/IndexSchema#hasExplicitField(String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#hasExplicitField(String).mjava","pathOld":"solr/src/java/org/apache/solr/schema/IndexSchema#hasExplicitField(String).mjava","sourceNew":"  /**\n   * Does the schema have the specified field defined explicitly, i.e.\n   * not as a result of a copyField declaration with a wildcard?  We\n   * consider it explicitly defined if it matches a field or dynamicField\n   * declaration.\n   * @param fieldName\n   * @return true if explicitly declared in the schema.\n   */\n  public boolean hasExplicitField(String fieldName) {\n    if(fields.containsKey(fieldName)) {\n      return true;\n    }\n\n    for (DynamicField df : dynamicFields) {\n      if (df.matches(fieldName)) return true;\n    }\n\n    return false;\n  }\n\n","sourceOld":"  /**\n   * Does the schema have the specified field defined explicitly, i.e.\n   * not as a result of a copyField declaration with a wildcard?  We\n   * consider it explicitly defined if it matches a field or dynamicField\n   * declaration.\n   * @param fieldName\n   * @return true if explicitly declared in the schema.\n   */\n  public boolean hasExplicitField(String fieldName) {\n    if(fields.containsKey(fieldName)) {\n      return true;\n    }\n\n    for (DynamicField df : dynamicFields) {\n      if (df.matches(fieldName)) return true;\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#hasExplicitField(String).mjava","pathOld":"solr/src/java/org/apache/solr/schema/IndexSchema#hasExplicitField(String).mjava","sourceNew":"  /**\n   * Does the schema have the specified field defined explicitly, i.e.\n   * not as a result of a copyField declaration with a wildcard?  We\n   * consider it explicitly defined if it matches a field or dynamicField\n   * declaration.\n   * @param fieldName\n   * @return true if explicitly declared in the schema.\n   */\n  public boolean hasExplicitField(String fieldName) {\n    if(fields.containsKey(fieldName)) {\n      return true;\n    }\n\n    for (DynamicField df : dynamicFields) {\n      if (df.matches(fieldName)) return true;\n    }\n\n    return false;\n  }\n\n","sourceOld":"  /**\n   * Does the schema have the specified field defined explicitly, i.e.\n   * not as a result of a copyField declaration with a wildcard?  We\n   * consider it explicitly defined if it matches a field or dynamicField\n   * declaration.\n   * @param fieldName\n   * @return true if explicitly declared in the schema.\n   */\n  public boolean hasExplicitField(String fieldName) {\n    if(fields.containsKey(fieldName)) {\n      return true;\n    }\n\n    for (DynamicField df : dynamicFields) {\n      if (df.matches(fieldName)) return true;\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#hasExplicitField(String).mjava","pathOld":"solr/src/java/org/apache/solr/schema/IndexSchema#hasExplicitField(String).mjava","sourceNew":"  /**\n   * Does the schema have the specified field defined explicitly, i.e.\n   * not as a result of a copyField declaration with a wildcard?  We\n   * consider it explicitly defined if it matches a field or dynamicField\n   * declaration.\n   * @param fieldName\n   * @return true if explicitly declared in the schema.\n   */\n  public boolean hasExplicitField(String fieldName) {\n    if(fields.containsKey(fieldName)) {\n      return true;\n    }\n\n    for (DynamicField df : dynamicFields) {\n      if (df.matches(fieldName)) return true;\n    }\n\n    return false;\n  }\n\n","sourceOld":"  /**\n   * Does the schema have the specified field defined explicitly, i.e.\n   * not as a result of a copyField declaration with a wildcard?  We\n   * consider it explicitly defined if it matches a field or dynamicField\n   * declaration.\n   * @param fieldName\n   * @return true if explicitly declared in the schema.\n   */\n  public boolean hasExplicitField(String fieldName) {\n    if(fields.containsKey(fieldName)) {\n      return true;\n    }\n\n    for (DynamicField df : dynamicFields) {\n      if (df.matches(fieldName)) return true;\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#hasExplicitField(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#hasExplicitField(String).mjava","sourceNew":"  /**\n   * Does the schema have the specified field defined explicitly, i.e.\n   * not as a result of a copyField declaration with a wildcard?  We\n   * consider it explicitly defined if it matches a field or dynamicField\n   * declaration.\n   * @return true if explicitly declared in the schema.\n   */\n  public boolean hasExplicitField(String fieldName) {\n    if(fields.containsKey(fieldName)) {\n      return true;\n    }\n\n    for (DynamicField df : dynamicFields) {\n      if (df.matches(fieldName)) return true;\n    }\n\n    return false;\n  }\n\n","sourceOld":"  /**\n   * Does the schema have the specified field defined explicitly, i.e.\n   * not as a result of a copyField declaration with a wildcard?  We\n   * consider it explicitly defined if it matches a field or dynamicField\n   * declaration.\n   * @param fieldName\n   * @return true if explicitly declared in the schema.\n   */\n  public boolean hasExplicitField(String fieldName) {\n    if(fields.containsKey(fieldName)) {\n      return true;\n    }\n\n    for (DynamicField df : dynamicFields) {\n      if (df.matches(fieldName)) return true;\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37","date":1362545433,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#hasExplicitField(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#hasExplicitField(String).mjava","sourceNew":"  /**\n   * Does the schema explicitly define the specified field, i.e. not as a result\n   * of a copyField declaration?  We consider it explicitly defined if it matches\n   * a field name or a dynamicField name.\n   * @return true if explicitly declared in the schema.\n   */\n  public boolean hasExplicitField(String fieldName) {\n    if (fields.containsKey(fieldName)) {\n      return true;\n    }\n\n    for (DynamicField df : dynamicFields) {\n      if (fieldName.equals(df.getRegex())) return true;\n    }\n\n    return false;\n  }\n\n","sourceOld":"  /**\n   * Does the schema have the specified field defined explicitly, i.e.\n   * not as a result of a copyField declaration with a wildcard?  We\n   * consider it explicitly defined if it matches a field or dynamicField\n   * declaration.\n   * @return true if explicitly declared in the schema.\n   */\n  public boolean hasExplicitField(String fieldName) {\n    if(fields.containsKey(fieldName)) {\n      return true;\n    }\n\n    for (DynamicField df : dynamicFields) {\n      if (df.matches(fieldName)) return true;\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["054c04cf724f73ebdd3b16e3a86ce802c0ba5e37"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["054c04cf724f73ebdd3b16e3a86ce802c0ba5e37"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}