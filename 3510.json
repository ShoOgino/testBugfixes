{"path":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/PlanetModel#createSurfacePoint(double,double,double).mjava","commits":[{"id":"dc584fa95053c03d95035277a2d2aaddd537c0fa","date":1460232759,"type":0,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/PlanetModel#createSurfacePoint(double,double,double).mjava","pathOld":"/dev/null","sourceNew":"  /** Compute a GeoPoint that's based on (x,y,z) values, but is scaled to actually be on the planet surface.\n   * @param x is the x value.\n   * @param y is the y value.\n   * @param z is the z value.\n   * @return the scaled point.\n   */\n  public GeoPoint createSurfacePoint(final double x, final double y, final double z) {\n    // The equation of the surface is:\n    // (x^2 / a^2 + y^2 / b^2 + z^2 / c^2) = 1\n    // We will need to scale the passed-in x, y, z values:\n    // ((tx)^2 / a^2 + (ty)^2 / b^2 + (tz)^2 / c^2) = 1\n    // t^2 * (x^2 / a^2 + y^2 / b^2 + z^2 / c^2)  = 1\n    // t = sqrt ( 1 / (x^2 / a^2 + y^2 / b^2 + z^2 / c^2))\n    final double t = Math.sqrt(1.0 / (x*x*inverseAbSquared + y*y*inverseAbSquared + z*z*inverseCSquared));\n    return new GeoPoint(t*x, t*y, t*z);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a","date":1583186777,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/PlanetModel#createSurfacePoint(double,double,double).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/PlanetModel#createSurfacePoint(double,double,double).mjava","sourceNew":"  /** Compute a GeoPoint that's based on (x,y,z) values, but is scaled to actually be on the planet surface.\n   * @param x is the x value.\n   * @param y is the y value.\n   * @param z is the z value.\n   * @return the scaled point.\n   */\n  public GeoPoint createSurfacePoint(final double x, final double y, final double z) {\n    // The equation of the surface is:\n    // (x^2 / a^2 + y^2 / b^2 + z^2 / zScaling^2) = 1\n    // We will need to scale the passed-in x, y, z values:\n    // ((tx)^2 / a^2 + (ty)^2 / b^2 + (tz)^2 / zScaling^2) = 1\n    // t^2 * (x^2 / a^2 + y^2 / b^2 + z^2 / zScaling^2)  = 1\n    // t = sqrt ( 1 / (x^2 / a^2 + y^2 / b^2 + z^2 / zScaling^2))\n    final double t = Math.sqrt(1.0 / (x*x* inverseXYScalingSquared + y*y* inverseXYScalingSquared + z*z* inverseZScalingSquared));\n    return new GeoPoint(t*x, t*y, t*z);\n  }\n\n","sourceOld":"  /** Compute a GeoPoint that's based on (x,y,z) values, but is scaled to actually be on the planet surface.\n   * @param x is the x value.\n   * @param y is the y value.\n   * @param z is the z value.\n   * @return the scaled point.\n   */\n  public GeoPoint createSurfacePoint(final double x, final double y, final double z) {\n    // The equation of the surface is:\n    // (x^2 / a^2 + y^2 / b^2 + z^2 / c^2) = 1\n    // We will need to scale the passed-in x, y, z values:\n    // ((tx)^2 / a^2 + (ty)^2 / b^2 + (tz)^2 / c^2) = 1\n    // t^2 * (x^2 / a^2 + y^2 / b^2 + z^2 / c^2)  = 1\n    // t = sqrt ( 1 / (x^2 / a^2 + y^2 / b^2 + z^2 / c^2))\n    final double t = Math.sqrt(1.0 / (x*x*inverseAbSquared + y*y*inverseAbSquared + z*z*inverseCSquared));\n    return new GeoPoint(t*x, t*y, t*z);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dc584fa95053c03d95035277a2d2aaddd537c0fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["dc584fa95053c03d95035277a2d2aaddd537c0fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a"]},"commit2Childs":{"dc584fa95053c03d95035277a2d2aaddd537c0fa":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dc584fa95053c03d95035277a2d2aaddd537c0fa"],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}