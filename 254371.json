{"path":"solr/test-framework/src/java/org/apache/solr/util/RestTestHarness#getResponse(HttpUriRequest).mjava","commits":[{"id":"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72","date":1391985588,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/RestTestHarness#getResponse(HttpUriRequest).mjava","pathOld":"/dev/null","sourceNew":"  private String getResponse(HttpUriRequest request) throws IOException {\n    HttpEntity entity = null;\n    try {\n      entity = httpClient.execute(request).getEntity();\n      return EntityUtils.toString(entity, \"UTF-8\");\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afb6bf9ce227ab6aac5068547e286ecc958b8b9d","date":1394661169,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/RestTestHarness#getResponse(HttpUriRequest).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/RestTestHarness#getResponse(HttpUriRequest).mjava","sourceNew":"  /**\n   * Executes the given request and returns the response.\n   */\n  private String getResponse(HttpUriRequest request) throws IOException {\n    HttpEntity entity = null;\n    try {\n      entity = httpClient.execute(request).getEntity();\n      return EntityUtils.toString(entity, \"UTF-8\");\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n    }\n  }\n\n","sourceOld":"  private String getResponse(HttpUriRequest request) throws IOException {\n    HttpEntity entity = null;\n    try {\n      entity = httpClient.execute(request).getEntity();\n      return EntityUtils.toString(entity, \"UTF-8\");\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d3d365762604952e436b51980101dfc84cc1b3e","date":1396298116,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/RestTestHarness#getResponse(HttpUriRequest).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/RestTestHarness#getResponse(HttpUriRequest).mjava","sourceNew":"  /**\n   * Executes the given request and returns the response.\n   */\n  private String getResponse(HttpUriRequest request) throws IOException {\n    HttpEntity entity = null;\n    try {\n      entity = httpClient.execute(request).getEntity();\n      return EntityUtils.toString(entity, StandardCharsets.UTF_8);\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n    }\n  }\n\n","sourceOld":"  /**\n   * Executes the given request and returns the response.\n   */\n  private String getResponse(HttpUriRequest request) throws IOException {\n    HttpEntity entity = null;\n    try {\n      entity = httpClient.execute(request).getEntity();\n      return EntityUtils.toString(entity, \"UTF-8\");\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/RestTestHarness#getResponse(HttpUriRequest).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/RestTestHarness#getResponse(HttpUriRequest).mjava","sourceNew":"  /**\n   * Executes the given request and returns the response.\n   */\n  private String getResponse(HttpUriRequest request) throws IOException {\n    HttpEntity entity = null;\n    try {\n      entity = httpClient.execute(request).getEntity();\n      return EntityUtils.toString(entity, StandardCharsets.UTF_8);\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n    }\n  }\n\n","sourceOld":"  /**\n   * Executes the given request and returns the response.\n   */\n  private String getResponse(HttpUriRequest request) throws IOException {\n    HttpEntity entity = null;\n    try {\n      entity = httpClient.execute(request).getEntity();\n      return EntityUtils.toString(entity, \"UTF-8\");\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"859081acf00749f5dd462772c571d611d4a4d2db","date":1459527719,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/RestTestHarness#getResponse(HttpUriRequest).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/RestTestHarness#getResponse(HttpUriRequest).mjava","sourceNew":"  /**\n   * Executes the given request and returns the response.\n   */\n  private String getResponse(HttpUriRequest request) throws IOException {\n    HttpEntity entity = null;\n    try {\n      entity = httpClient.execute(request, HttpClientUtil.createNewHttpClientRequestContext()).getEntity();\n      return EntityUtils.toString(entity, StandardCharsets.UTF_8);\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n    }\n  }\n\n","sourceOld":"  /**\n   * Executes the given request and returns the response.\n   */\n  private String getResponse(HttpUriRequest request) throws IOException {\n    HttpEntity entity = null;\n    try {\n      entity = httpClient.execute(request).getEntity();\n      return EntityUtils.toString(entity, StandardCharsets.UTF_8);\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"070b525fb213c5643ba35e1b60f1a1d4f7b23312","date":1475678176,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/RestTestHarness#getResponse(HttpUriRequest).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/RestTestHarness#getResponse(HttpUriRequest).mjava","sourceNew":"  /**\n   * Executes the given request and returns the response.\n   */\n  private String getResponse(HttpUriRequest request) throws IOException {\n    HttpEntity entity = null;\n    try {\n      entity = httpClient.execute(request, HttpClientUtil.createNewHttpClientRequestContext(this)).getEntity();\n      return EntityUtils.toString(entity, StandardCharsets.UTF_8);\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n    }\n  }\n\n","sourceOld":"  /**\n   * Executes the given request and returns the response.\n   */\n  private String getResponse(HttpUriRequest request) throws IOException {\n    HttpEntity entity = null;\n    try {\n      entity = httpClient.execute(request, HttpClientUtil.createNewHttpClientRequestContext()).getEntity();\n      return EntityUtils.toString(entity, StandardCharsets.UTF_8);\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07cebc9816f8c940e8e9683abbdc742fe95e25d7","date":1475696954,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/RestTestHarness#getResponse(HttpUriRequest).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/RestTestHarness#getResponse(HttpUriRequest).mjava","sourceNew":"  /**\n   * Executes the given request and returns the response.\n   */\n  private String getResponse(HttpUriRequest request) throws IOException {\n    HttpEntity entity = null;\n    try {\n      entity = httpClient.execute(request, HttpClientUtil.createNewHttpClientRequestContext()).getEntity();\n      return EntityUtils.toString(entity, StandardCharsets.UTF_8);\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n    }\n  }\n\n","sourceOld":"  /**\n   * Executes the given request and returns the response.\n   */\n  private String getResponse(HttpUriRequest request) throws IOException {\n    HttpEntity entity = null;\n    try {\n      entity = httpClient.execute(request, HttpClientUtil.createNewHttpClientRequestContext(this)).getEntity();\n      return EntityUtils.toString(entity, StandardCharsets.UTF_8);\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d","9d3d365762604952e436b51980101dfc84cc1b3e"],"859081acf00749f5dd462772c571d611d4a4d2db":["9d3d365762604952e436b51980101dfc84cc1b3e"],"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"07cebc9816f8c940e8e9683abbdc742fe95e25d7":["070b525fb213c5643ba35e1b60f1a1d4f7b23312"],"070b525fb213c5643ba35e1b60f1a1d4f7b23312":["859081acf00749f5dd462772c571d611d4a4d2db"],"afb6bf9ce227ab6aac5068547e286ecc958b8b9d":["57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72"],"9d3d365762604952e436b51980101dfc84cc1b3e":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["07cebc9816f8c940e8e9683abbdc742fe95e25d7"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"859081acf00749f5dd462772c571d611d4a4d2db":["070b525fb213c5643ba35e1b60f1a1d4f7b23312"],"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"],"07cebc9816f8c940e8e9683abbdc742fe95e25d7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"070b525fb213c5643ba35e1b60f1a1d4f7b23312":["07cebc9816f8c940e8e9683abbdc742fe95e25d7"],"afb6bf9ce227ab6aac5068547e286ecc958b8b9d":["5eb2511ababf862ea11e10761c70ee560cd84510","9d3d365762604952e436b51980101dfc84cc1b3e"],"9d3d365762604952e436b51980101dfc84cc1b3e":["5eb2511ababf862ea11e10761c70ee560cd84510","859081acf00749f5dd462772c571d611d4a4d2db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}