{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask#runAndMaybeStats(boolean).mjava","commits":[{"id":"b2e70b697d9f5a6130848741a4f0cdc08a1fe258","date":1168661303,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask#runAndMaybeStats(boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\r\n   * Run the task, record statistics.\r\n   * @return number of work items done by this task.\r\n   */\r\n  public final int runAndMaybeStats(boolean reportStats) throws Exception {\r\n    if (reportStats && depth <= maxDepthLogStart && !shouldNeverLogAtStart()) {\r\n      System.out.println(\"------------> starting task: \" + getName());\r\n    }\r\n    if (shouldNotRecordStats() || !reportStats) {\r\n      setup();\r\n      int count = doLogic();\r\n      tearDown();\r\n      return count;\r\n    }\r\n    setup();\r\n    Points pnts = runData.getPoints();\r\n    TaskStats ts = pnts.markTaskStart(this,runData.getConfig().getRoundNumber());\r\n    int count = doLogic();\r\n    pnts.markTaskEnd(ts, count);\r\n    tearDown();\r\n    return count;\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3738fa43eaa87dc7b393fe98b04cde1019e20bac","date":1175557034,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask#runAndMaybeStats(boolean).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask#runAndMaybeStats(boolean).mjava","sourceNew":"  /**\n   * Run the task, record statistics.\n   * @return number of work items done by this task.\n   */\n  public final int runAndMaybeStats(boolean reportStats) throws Exception {\n    if (reportStats && depth <= maxDepthLogStart && !shouldNeverLogAtStart()) {\n      System.out.println(\"------------> starting task: \" + getName());\n    }\n    if (shouldNotRecordStats() || !reportStats) {\n      setup();\n      int count = doLogic();\n      tearDown();\n      return count;\n    }\n    setup();\n    Points pnts = runData.getPoints();\n    TaskStats ts = pnts.markTaskStart(this,runData.getConfig().getRoundNumber());\n    int count = doLogic();\n    pnts.markTaskEnd(ts, count);\n    tearDown();\n    return count;\n  }\n\n","sourceOld":"  /**\r\n   * Run the task, record statistics.\r\n   * @return number of work items done by this task.\r\n   */\r\n  public final int runAndMaybeStats(boolean reportStats) throws Exception {\r\n    if (reportStats && depth <= maxDepthLogStart && !shouldNeverLogAtStart()) {\r\n      System.out.println(\"------------> starting task: \" + getName());\r\n    }\r\n    if (shouldNotRecordStats() || !reportStats) {\r\n      setup();\r\n      int count = doLogic();\r\n      tearDown();\r\n      return count;\r\n    }\r\n    setup();\r\n    Points pnts = runData.getPoints();\r\n    TaskStats ts = pnts.markTaskStart(this,runData.getConfig().getRoundNumber());\r\n    int count = doLogic();\r\n    pnts.markTaskEnd(ts, count);\r\n    tearDown();\r\n    return count;\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ea2ca01fc0b1375f71a47571ffacc7924742b30","date":1185994483,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask#runAndMaybeStats(boolean).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask#runAndMaybeStats(boolean).mjava","sourceNew":"  /**\n   * Run the task, record statistics.\n   * @return number of work items done by this task.\n   */\n  public final int runAndMaybeStats(boolean reportStats) throws Exception {\n    if (reportStats && depth <= maxDepthLogStart && !shouldNeverLogAtStart()) {\n      System.out.println(\"------------> starting task: \" + getName());\n    }\n    if (!reportStats || shouldNotRecordStats()) {\n      setup();\n      int count = doLogic();\n      tearDown();\n      return count;\n    }\n    setup();\n    Points pnts = runData.getPoints();\n    TaskStats ts = pnts.markTaskStart(this,runData.getConfig().getRoundNumber());\n    int count = doLogic();\n    pnts.markTaskEnd(ts, count);\n    tearDown();\n    return count;\n  }\n\n","sourceOld":"  /**\n   * Run the task, record statistics.\n   * @return number of work items done by this task.\n   */\n  public final int runAndMaybeStats(boolean reportStats) throws Exception {\n    if (reportStats && depth <= maxDepthLogStart && !shouldNeverLogAtStart()) {\n      System.out.println(\"------------> starting task: \" + getName());\n    }\n    if (shouldNotRecordStats() || !reportStats) {\n      setup();\n      int count = doLogic();\n      tearDown();\n      return count;\n    }\n    setup();\n    Points pnts = runData.getPoints();\n    TaskStats ts = pnts.markTaskStart(this,runData.getConfig().getRoundNumber());\n    int count = doLogic();\n    pnts.markTaskEnd(ts, count);\n    tearDown();\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b26918d056f1bcc0ae9accb3bf0cb2b87803fe64","date":1201200417,"type":3,"author":"Doron Cohen","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask#runAndMaybeStats(boolean).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask#runAndMaybeStats(boolean).mjava","sourceNew":"  /**\n   * Run the task, record statistics.\n   * @return number of work items done by this task.\n   */\n  public final int runAndMaybeStats(boolean reportStats) throws Exception {\n    if (reportStats && depth <= maxDepthLogStart && !shouldNeverLogAtStart()) {\n      System.out.println(\"------------> starting task: \" + getName());\n    }\n    if (!reportStats || shouldNotRecordStats()) {\n      setup();\n      int count = doLogic();\n      count = disableCounting ? 0 : count;\n      tearDown();\n      return count;\n    }\n    setup();\n    Points pnts = runData.getPoints();\n    TaskStats ts = pnts.markTaskStart(this,runData.getConfig().getRoundNumber());\n    int count = doLogic();\n    count = disableCounting ? 0 : count;\n    pnts.markTaskEnd(ts, count);\n    tearDown();\n    return count;\n  }\n\n","sourceOld":"  /**\n   * Run the task, record statistics.\n   * @return number of work items done by this task.\n   */\n  public final int runAndMaybeStats(boolean reportStats) throws Exception {\n    if (reportStats && depth <= maxDepthLogStart && !shouldNeverLogAtStart()) {\n      System.out.println(\"------------> starting task: \" + getName());\n    }\n    if (!reportStats || shouldNotRecordStats()) {\n      setup();\n      int count = doLogic();\n      tearDown();\n      return count;\n    }\n    setup();\n    Points pnts = runData.getPoints();\n    TaskStats ts = pnts.markTaskStart(this,runData.getConfig().getRoundNumber());\n    int count = doLogic();\n    pnts.markTaskEnd(ts, count);\n    tearDown();\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3353540ef2debe4c4c017e9d86e2c60f9e784336","date":1258197258,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask#runAndMaybeStats(boolean).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask#runAndMaybeStats(boolean).mjava","sourceNew":"  /**\n   * Run the task, record statistics.\n   * @return number of work items done by this task.\n   */\n  public final int runAndMaybeStats(boolean reportStats) throws Exception {\n    stopNow = false;\n    if (!reportStats || shouldNotRecordStats()) {\n      setup();\n      int count = doLogic();\n      count = disableCounting ? 0 : count;\n      tearDown();\n      return count;\n    }\n    if (reportStats && depth <= maxDepthLogStart && !shouldNeverLogAtStart()) {\n      System.out.println(\"------------> starting task: \" + getName());\n    }\n    setup();\n    Points pnts = runData.getPoints();\n    TaskStats ts = pnts.markTaskStart(this, runData.getConfig().getRoundNumber());\n    int count = doLogic();\n    count = disableCounting ? 0 : count;\n    pnts.markTaskEnd(ts, count);\n    tearDown();\n    return count;\n  }\n\n","sourceOld":"  /**\n   * Run the task, record statistics.\n   * @return number of work items done by this task.\n   */\n  public final int runAndMaybeStats(boolean reportStats) throws Exception {\n    if (reportStats && depth <= maxDepthLogStart && !shouldNeverLogAtStart()) {\n      System.out.println(\"------------> starting task: \" + getName());\n    }\n    if (!reportStats || shouldNotRecordStats()) {\n      setup();\n      int count = doLogic();\n      count = disableCounting ? 0 : count;\n      tearDown();\n      return count;\n    }\n    setup();\n    Points pnts = runData.getPoints();\n    TaskStats ts = pnts.markTaskStart(this,runData.getConfig().getRoundNumber());\n    int count = doLogic();\n    count = disableCounting ? 0 : count;\n    pnts.markTaskEnd(ts, count);\n    tearDown();\n    return count;\n  }\n\n","bugFix":null,"bugIntro":["89c8ee4a3c7836e15334241f70e67745db535320"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"89c8ee4a3c7836e15334241f70e67745db535320","date":1263810494,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask#runAndMaybeStats(boolean).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask#runAndMaybeStats(boolean).mjava","sourceNew":"  /**\n   * Run the task, record statistics.\n   * @return number of work items done by this task.\n   */\n  public final int runAndMaybeStats(boolean reportStats) throws Exception {\n    if (!reportStats || shouldNotRecordStats()) {\n      setup();\n      int count = doLogic();\n      count = disableCounting ? 0 : count;\n      tearDown();\n      return count;\n    }\n    if (reportStats && depth <= maxDepthLogStart && !shouldNeverLogAtStart()) {\n      System.out.println(\"------------> starting task: \" + getName());\n    }\n    setup();\n    Points pnts = runData.getPoints();\n    TaskStats ts = pnts.markTaskStart(this, runData.getConfig().getRoundNumber());\n    int count = doLogic();\n    count = disableCounting ? 0 : count;\n    pnts.markTaskEnd(ts, count);\n    tearDown();\n    return count;\n  }\n\n","sourceOld":"  /**\n   * Run the task, record statistics.\n   * @return number of work items done by this task.\n   */\n  public final int runAndMaybeStats(boolean reportStats) throws Exception {\n    stopNow = false;\n    if (!reportStats || shouldNotRecordStats()) {\n      setup();\n      int count = doLogic();\n      count = disableCounting ? 0 : count;\n      tearDown();\n      return count;\n    }\n    if (reportStats && depth <= maxDepthLogStart && !shouldNeverLogAtStart()) {\n      System.out.println(\"------------> starting task: \" + getName());\n    }\n    setup();\n    Points pnts = runData.getPoints();\n    TaskStats ts = pnts.markTaskStart(this, runData.getConfig().getRoundNumber());\n    int count = doLogic();\n    count = disableCounting ? 0 : count;\n    pnts.markTaskEnd(ts, count);\n    tearDown();\n    return count;\n  }\n\n","bugFix":["3353540ef2debe4c4c017e9d86e2c60f9e784336"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask#runAndMaybeStats(boolean).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask#runAndMaybeStats(boolean).mjava","sourceNew":"  /**\n   * Run the task, record statistics.\n   * @return number of work items done by this task.\n   */\n  public final int runAndMaybeStats(boolean reportStats) throws Exception {\n    if (!reportStats || shouldNotRecordStats()) {\n      setup();\n      int count = doLogic();\n      count = disableCounting ? 0 : count;\n      tearDown();\n      return count;\n    }\n    if (reportStats && depth <= maxDepthLogStart && !shouldNeverLogAtStart()) {\n      System.out.println(\"------------> starting task: \" + getName());\n    }\n    setup();\n    Points pnts = runData.getPoints();\n    TaskStats ts = pnts.markTaskStart(this, runData.getConfig().getRoundNumber());\n    int count = doLogic();\n    count = disableCounting ? 0 : count;\n    pnts.markTaskEnd(ts, count);\n    tearDown();\n    return count;\n  }\n\n","sourceOld":"  /**\n   * Run the task, record statistics.\n   * @return number of work items done by this task.\n   */\n  public final int runAndMaybeStats(boolean reportStats) throws Exception {\n    if (!reportStats || shouldNotRecordStats()) {\n      setup();\n      int count = doLogic();\n      count = disableCounting ? 0 : count;\n      tearDown();\n      return count;\n    }\n    if (reportStats && depth <= maxDepthLogStart && !shouldNeverLogAtStart()) {\n      System.out.println(\"------------> starting task: \" + getName());\n    }\n    setup();\n    Points pnts = runData.getPoints();\n    TaskStats ts = pnts.markTaskStart(this, runData.getConfig().getRoundNumber());\n    int count = doLogic();\n    count = disableCounting ? 0 : count;\n    pnts.markTaskEnd(ts, count);\n    tearDown();\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3353540ef2debe4c4c017e9d86e2c60f9e784336":["b26918d056f1bcc0ae9accb3bf0cb2b87803fe64"],"1ea2ca01fc0b1375f71a47571ffacc7924742b30":["3738fa43eaa87dc7b393fe98b04cde1019e20bac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3738fa43eaa87dc7b393fe98b04cde1019e20bac":["b2e70b697d9f5a6130848741a4f0cdc08a1fe258"],"b2e70b697d9f5a6130848741a4f0cdc08a1fe258":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b26918d056f1bcc0ae9accb3bf0cb2b87803fe64":["1ea2ca01fc0b1375f71a47571ffacc7924742b30"],"89c8ee4a3c7836e15334241f70e67745db535320":["3353540ef2debe4c4c017e9d86e2c60f9e784336"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["89c8ee4a3c7836e15334241f70e67745db535320"]},"commit2Childs":{"3353540ef2debe4c4c017e9d86e2c60f9e784336":["89c8ee4a3c7836e15334241f70e67745db535320"],"1ea2ca01fc0b1375f71a47571ffacc7924742b30":["b26918d056f1bcc0ae9accb3bf0cb2b87803fe64"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b2e70b697d9f5a6130848741a4f0cdc08a1fe258"],"3738fa43eaa87dc7b393fe98b04cde1019e20bac":["1ea2ca01fc0b1375f71a47571ffacc7924742b30"],"b2e70b697d9f5a6130848741a4f0cdc08a1fe258":["3738fa43eaa87dc7b393fe98b04cde1019e20bac"],"b26918d056f1bcc0ae9accb3bf0cb2b87803fe64":["3353540ef2debe4c4c017e9d86e2c60f9e784336"],"89c8ee4a3c7836e15334241f70e67745db535320":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}