{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/blocktreeords/Ords41PostingsFormat#fieldsProducer(SegmentReadState).mjava","commits":[{"id":"0cdf9cc6702d60334a616bd7db3ae91501d1dce7","date":1405858112,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blocktreeords/Ords41PostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase postingsReader = new Lucene41PostingsReader(state.directory,\n                                                                   state.fieldInfos,\n                                                                   state.segmentInfo,\n                                                                   state.context,\n                                                                   state.segmentSuffix);\n    boolean success = false;\n    try {\n      FieldsProducer ret = new OrdsBlockTreeTermsReader(state.directory,\n                                                        state.fieldInfos,\n                                                        state.segmentInfo,\n                                                        postingsReader,\n                                                        state.context,\n                                                        state.segmentSuffix);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(postingsReader);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29a93e7fb303505e4a719e87f378d9a45db981d0","date":1412167802,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blocktreeords/Ords41PostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blocktreeords/Ords41PostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase postingsReader = new Lucene41PostingsReader(state.directory,\n                                                                   state.fieldInfos,\n                                                                   state.segmentInfo,\n                                                                   state.context,\n                                                                   state.segmentSuffix);\n    boolean success = false;\n    try {\n      FieldsProducer ret = new OrdsBlockTreeTermsReader(postingsReader, state);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(postingsReader);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase postingsReader = new Lucene41PostingsReader(state.directory,\n                                                                   state.fieldInfos,\n                                                                   state.segmentInfo,\n                                                                   state.context,\n                                                                   state.segmentSuffix);\n    boolean success = false;\n    try {\n      FieldsProducer ret = new OrdsBlockTreeTermsReader(state.directory,\n                                                        state.fieldInfos,\n                                                        state.segmentInfo,\n                                                        postingsReader,\n                                                        state.context,\n                                                        state.segmentSuffix);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(postingsReader);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blocktreeords/Ords41PostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blocktreeords/Ords41PostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase postingsReader = new Lucene41PostingsReader(state.directory,\n                                                                   state.fieldInfos,\n                                                                   state.segmentInfo,\n                                                                   state.context,\n                                                                   state.segmentSuffix);\n    boolean success = false;\n    try {\n      FieldsProducer ret = new OrdsBlockTreeTermsReader(postingsReader, state);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(postingsReader);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase postingsReader = new Lucene41PostingsReader(state.directory,\n                                                                   state.fieldInfos,\n                                                                   state.segmentInfo,\n                                                                   state.context,\n                                                                   state.segmentSuffix);\n    boolean success = false;\n    try {\n      FieldsProducer ret = new OrdsBlockTreeTermsReader(state.directory,\n                                                        state.fieldInfos,\n                                                        state.segmentInfo,\n                                                        postingsReader,\n                                                        state.context,\n                                                        state.segmentSuffix);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(postingsReader);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99eb4a732d1a908f4636ace52928876136bf1896","date":1413829552,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blocktreeords/Ords41PostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public final FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase postingsReader = new Lucene41PostingsReader(state.directory,\n                                                                state.fieldInfos,\n                                                                state.segmentInfo,\n                                                                state.context,\n                                                                state.segmentSuffix);\n    boolean success = false;\n    try {\n      FieldsProducer ret = new BlockTreeTermsReader(postingsReader, state);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(postingsReader);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase postingsReader = new Lucene41PostingsReader(state.directory,\n                                                                   state.fieldInfos,\n                                                                   state.segmentInfo,\n                                                                   state.context,\n                                                                   state.segmentSuffix);\n    boolean success = false;\n    try {\n      FieldsProducer ret = new OrdsBlockTreeTermsReader(postingsReader, state);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(postingsReader);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db68c63cbfaa8698b9c4475f75ed2b9c9696d238","date":1414118621,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blocktreeords/Ords41PostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public final FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase postingsReader = new Lucene41PostingsReader(state.directory,\n                                                                state.fieldInfos,\n                                                                state.segmentInfo,\n                                                                state.context,\n                                                                state.segmentSuffix);\n    boolean success = false;\n    try {\n      FieldsProducer ret = new Lucene40BlockTreeTermsReader(postingsReader, state);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(postingsReader);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase postingsReader = new Lucene41PostingsReader(state.directory,\n                                                                   state.fieldInfos,\n                                                                   state.segmentInfo,\n                                                                   state.context,\n                                                                   state.segmentSuffix);\n    boolean success = false;\n    try {\n      FieldsProducer ret = new OrdsBlockTreeTermsReader(postingsReader, state);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(postingsReader);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0cdf9cc6702d60334a616bd7db3ae91501d1dce7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"99eb4a732d1a908f4636ace52928876136bf1896":["29a93e7fb303505e4a719e87f378d9a45db981d0"],"9bb9a29a5e71a90295f175df8919802993142c9a":["0cdf9cc6702d60334a616bd7db3ae91501d1dce7","29a93e7fb303505e4a719e87f378d9a45db981d0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"29a93e7fb303505e4a719e87f378d9a45db981d0":["0cdf9cc6702d60334a616bd7db3ae91501d1dce7"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["9bb9a29a5e71a90295f175df8919802993142c9a","99eb4a732d1a908f4636ace52928876136bf1896"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"]},"commit2Childs":{"0cdf9cc6702d60334a616bd7db3ae91501d1dce7":["9bb9a29a5e71a90295f175df8919802993142c9a","29a93e7fb303505e4a719e87f378d9a45db981d0"],"99eb4a732d1a908f4636ace52928876136bf1896":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"9bb9a29a5e71a90295f175df8919802993142c9a":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0cdf9cc6702d60334a616bd7db3ae91501d1dce7"],"29a93e7fb303505e4a719e87f378d9a45db981d0":["99eb4a732d1a908f4636ace52928876136bf1896","9bb9a29a5e71a90295f175df8919802993142c9a"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}