{"path":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplica#assertCopyOverOldUpdates(long,Map[SolrCore,Long]).mjava","commits":[{"id":"04ecf884544ff74add5faa452748f160c4af904b","date":1506527215,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplica#assertCopyOverOldUpdates(long,Map[SolrCore,Long]).mjava","pathOld":"/dev/null","sourceNew":"  private void assertCopyOverOldUpdates(long delta, Map<SolrCore, Long> timesPerCore) {\n    for (SolrCore core : timesPerCore.keySet()) {\n      assertEquals(timesPerCore.get(core) + delta, getTimesCopyOverOldUpdates(core));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6240b74b884c5587f2a4062dd27d6c32bf228889","date":1507037235,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplica#assertCopyOverOldUpdates(long,Map[SolrCore,Long]).mjava","pathOld":"/dev/null","sourceNew":"  private void assertCopyOverOldUpdates(long delta, Map<SolrCore, Long> timesPerCore) {\n    for (SolrCore core : timesPerCore.keySet()) {\n      assertEquals(timesPerCore.get(core) + delta, getTimesCopyOverOldUpdates(core));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"065d6b6bd6c614a2b8bb17507341c326573438ae","date":1508497873,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplica#assertCopyOverOldUpdates(long,Map[SolrCore,Long]).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplica#assertCopyOverOldUpdates(long,Map[SolrCore,Long]).mjava","sourceNew":"  private boolean assertCopyOverOldUpdates(long delta, Map<SolrCore, Long> timesPerCore) {\n    for (SolrCore core : timesPerCore.keySet()) {\n      if (timesPerCore.get(core) + delta != getTimesCopyOverOldUpdates(core)) return false;\n    }\n    return true;\n  }\n\n","sourceOld":"  private void assertCopyOverOldUpdates(long delta, Map<SolrCore, Long> timesPerCore) {\n    for (SolrCore core : timesPerCore.keySet()) {\n      assertEquals(timesPerCore.get(core) + delta, getTimesCopyOverOldUpdates(core));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04ecf884544ff74add5faa452748f160c4af904b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"065d6b6bd6c614a2b8bb17507341c326573438ae":["04ecf884544ff74add5faa452748f160c4af904b"],"6240b74b884c5587f2a4062dd27d6c32bf228889":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","04ecf884544ff74add5faa452748f160c4af904b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["065d6b6bd6c614a2b8bb17507341c326573438ae"]},"commit2Childs":{"04ecf884544ff74add5faa452748f160c4af904b":["065d6b6bd6c614a2b8bb17507341c326573438ae","6240b74b884c5587f2a4062dd27d6c32bf228889"],"065d6b6bd6c614a2b8bb17507341c326573438ae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6240b74b884c5587f2a4062dd27d6c32bf228889":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["04ecf884544ff74add5faa452748f160c4af904b","6240b74b884c5587f2a4062dd27d6c32bf228889"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6240b74b884c5587f2a4062dd27d6c32bf228889","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}