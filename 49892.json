{"path":"lucene/core/src/test/org/apache/lucene/codecs/compressing/TestCompressingTermVectorsFormat#testNoOrds().mjava","commits":[{"id":"ee6d7bc5bd25f7110381173440ebc538b9dd546f","date":1375804250,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/compressing/TestCompressingTermVectorsFormat#testNoOrds().mjava","pathOld":"/dev/null","sourceNew":"  // https://issues.apache.org/jira/browse/LUCENE-5156\n  public void testNoOrds() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n    ft.setStoreTermVectors(true);\n    doc.add(new Field(\"foo\", \"this is a test\", ft));\n    iw.addDocument(doc);\n    AtomicReader ir = getOnlySegmentReader(iw.getReader());\n    Terms terms = ir.getTermVector(0, \"foo\");\n    assertNotNull(terms);\n    TermsEnum termsEnum = terms.iterator(null);\n    assertEquals(SeekStatus.FOUND, termsEnum.seekCeil(new BytesRef(\"this\")));\n    try {\n      termsEnum.ord();\n      fail();\n    } catch (UnsupportedOperationException expected) {\n      // expected exception\n    }\n    \n    try {\n      termsEnum.seekExact(0);\n      fail();\n    } catch (UnsupportedOperationException expected) {\n      // expected exception\n    }\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/compressing/TestCompressingTermVectorsFormat#testNoOrds().mjava","pathOld":"/dev/null","sourceNew":"  // https://issues.apache.org/jira/browse/LUCENE-5156\n  public void testNoOrds() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n    ft.setStoreTermVectors(true);\n    doc.add(new Field(\"foo\", \"this is a test\", ft));\n    iw.addDocument(doc);\n    AtomicReader ir = getOnlySegmentReader(iw.getReader());\n    Terms terms = ir.getTermVector(0, \"foo\");\n    assertNotNull(terms);\n    TermsEnum termsEnum = terms.iterator(null);\n    assertEquals(SeekStatus.FOUND, termsEnum.seekCeil(new BytesRef(\"this\")));\n    try {\n      termsEnum.ord();\n      fail();\n    } catch (UnsupportedOperationException expected) {\n      // expected exception\n    }\n    \n    try {\n      termsEnum.seekExact(0);\n      fail();\n    } catch (UnsupportedOperationException expected) {\n      // expected exception\n    }\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/compressing/TestCompressingTermVectorsFormat#testNoOrds().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/compressing/TestCompressingTermVectorsFormat#testNoOrds().mjava","sourceNew":"  // https://issues.apache.org/jira/browse/LUCENE-5156\n  public void testNoOrds() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n    ft.setStoreTermVectors(true);\n    doc.add(new Field(\"foo\", \"this is a test\", ft));\n    iw.addDocument(doc);\n    AtomicReader ir = getOnlySegmentReader(iw.getReader());\n    Terms terms = ir.getTermVector(0, \"foo\");\n    assertNotNull(terms);\n    TermsEnum termsEnum = terms.iterator(null);\n    assertEquals(SeekStatus.FOUND, termsEnum.seekCeil(new BytesRef(\"this\")));\n    try {\n      termsEnum.ord();\n      fail();\n    } catch (UnsupportedOperationException expected) {\n      // expected exception\n    }\n    \n    try {\n      termsEnum.seekExact(0);\n      fail();\n    } catch (UnsupportedOperationException expected) {\n      // expected exception\n    }\n    ir.close();\n    iw.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  // https://issues.apache.org/jira/browse/LUCENE-5156\n  public void testNoOrds() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n    ft.setStoreTermVectors(true);\n    doc.add(new Field(\"foo\", \"this is a test\", ft));\n    iw.addDocument(doc);\n    AtomicReader ir = getOnlySegmentReader(iw.getReader());\n    Terms terms = ir.getTermVector(0, \"foo\");\n    assertNotNull(terms);\n    TermsEnum termsEnum = terms.iterator(null);\n    assertEquals(SeekStatus.FOUND, termsEnum.seekCeil(new BytesRef(\"this\")));\n    try {\n      termsEnum.ord();\n      fail();\n    } catch (UnsupportedOperationException expected) {\n      // expected exception\n    }\n    \n    try {\n      termsEnum.seekExact(0);\n      fail();\n    } catch (UnsupportedOperationException expected) {\n      // expected exception\n    }\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/compressing/TestCompressingTermVectorsFormat#testNoOrds().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/compressing/TestCompressingTermVectorsFormat#testNoOrds().mjava","sourceNew":"  // https://issues.apache.org/jira/browse/LUCENE-5156\n  public void testNoOrds() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n    ft.setStoreTermVectors(true);\n    doc.add(new Field(\"foo\", \"this is a test\", ft));\n    iw.addDocument(doc);\n    AtomicReader ir = getOnlySegmentReader(iw.getReader());\n    Terms terms = ir.getTermVector(0, \"foo\");\n    assertNotNull(terms);\n    TermsEnum termsEnum = terms.iterator(null);\n    assertEquals(SeekStatus.FOUND, termsEnum.seekCeil(new BytesRef(\"this\")));\n    try {\n      termsEnum.ord();\n      fail();\n    } catch (UnsupportedOperationException expected) {\n      // expected exception\n    }\n    \n    try {\n      termsEnum.seekExact(0);\n      fail();\n    } catch (UnsupportedOperationException expected) {\n      // expected exception\n    }\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  // https://issues.apache.org/jira/browse/LUCENE-5156\n  public void testNoOrds() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n    ft.setStoreTermVectors(true);\n    doc.add(new Field(\"foo\", \"this is a test\", ft));\n    iw.addDocument(doc);\n    AtomicReader ir = getOnlySegmentReader(iw.getReader());\n    Terms terms = ir.getTermVector(0, \"foo\");\n    assertNotNull(terms);\n    TermsEnum termsEnum = terms.iterator(null);\n    assertEquals(SeekStatus.FOUND, termsEnum.seekCeil(new BytesRef(\"this\")));\n    try {\n      termsEnum.ord();\n      fail();\n    } catch (UnsupportedOperationException expected) {\n      // expected exception\n    }\n    \n    try {\n      termsEnum.seekExact(0);\n      fail();\n    } catch (UnsupportedOperationException expected) {\n      // expected exception\n    }\n    ir.close();\n    iw.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/compressing/TestCompressingTermVectorsFormat#testNoOrds().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/compressing/TestCompressingTermVectorsFormat#testNoOrds().mjava","sourceNew":"  // https://issues.apache.org/jira/browse/LUCENE-5156\n  public void testNoOrds() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n    ft.setStoreTermVectors(true);\n    doc.add(new Field(\"foo\", \"this is a test\", ft));\n    iw.addDocument(doc);\n    LeafReader ir = getOnlySegmentReader(iw.getReader());\n    Terms terms = ir.getTermVector(0, \"foo\");\n    assertNotNull(terms);\n    TermsEnum termsEnum = terms.iterator(null);\n    assertEquals(SeekStatus.FOUND, termsEnum.seekCeil(new BytesRef(\"this\")));\n    try {\n      termsEnum.ord();\n      fail();\n    } catch (UnsupportedOperationException expected) {\n      // expected exception\n    }\n    \n    try {\n      termsEnum.seekExact(0);\n      fail();\n    } catch (UnsupportedOperationException expected) {\n      // expected exception\n    }\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  // https://issues.apache.org/jira/browse/LUCENE-5156\n  public void testNoOrds() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n    ft.setStoreTermVectors(true);\n    doc.add(new Field(\"foo\", \"this is a test\", ft));\n    iw.addDocument(doc);\n    AtomicReader ir = getOnlySegmentReader(iw.getReader());\n    Terms terms = ir.getTermVector(0, \"foo\");\n    assertNotNull(terms);\n    TermsEnum termsEnum = terms.iterator(null);\n    assertEquals(SeekStatus.FOUND, termsEnum.seekCeil(new BytesRef(\"this\")));\n    try {\n      termsEnum.ord();\n      fail();\n    } catch (UnsupportedOperationException expected) {\n      // expected exception\n    }\n    \n    try {\n      termsEnum.seekExact(0);\n      fail();\n    } catch (UnsupportedOperationException expected) {\n      // expected exception\n    }\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82","date":1428522487,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/compressing/TestCompressingTermVectorsFormat#testNoOrds().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/compressing/TestCompressingTermVectorsFormat#testNoOrds().mjava","sourceNew":"  // https://issues.apache.org/jira/browse/LUCENE-5156\n  public void testNoOrds() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n    ft.setStoreTermVectors(true);\n    doc.add(new Field(\"foo\", \"this is a test\", ft));\n    iw.addDocument(doc);\n    LeafReader ir = getOnlySegmentReader(iw.getReader());\n    Terms terms = ir.getTermVector(0, \"foo\");\n    assertNotNull(terms);\n    TermsEnum termsEnum = terms.iterator();\n    assertEquals(SeekStatus.FOUND, termsEnum.seekCeil(new BytesRef(\"this\")));\n    try {\n      termsEnum.ord();\n      fail();\n    } catch (UnsupportedOperationException expected) {\n      // expected exception\n    }\n    \n    try {\n      termsEnum.seekExact(0);\n      fail();\n    } catch (UnsupportedOperationException expected) {\n      // expected exception\n    }\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  // https://issues.apache.org/jira/browse/LUCENE-5156\n  public void testNoOrds() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n    ft.setStoreTermVectors(true);\n    doc.add(new Field(\"foo\", \"this is a test\", ft));\n    iw.addDocument(doc);\n    LeafReader ir = getOnlySegmentReader(iw.getReader());\n    Terms terms = ir.getTermVector(0, \"foo\");\n    assertNotNull(terms);\n    TermsEnum termsEnum = terms.iterator(null);\n    assertEquals(SeekStatus.FOUND, termsEnum.seekCeil(new BytesRef(\"this\")));\n    try {\n      termsEnum.ord();\n      fail();\n    } catch (UnsupportedOperationException expected) {\n      // expected exception\n    }\n    \n    try {\n      termsEnum.seekExact(0);\n      fail();\n    } catch (UnsupportedOperationException expected) {\n      // expected exception\n    }\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a","date":1429550638,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/codecs/compressing/TestCompressingTermVectorsFormat#testNoOrds().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/compressing/TestCompressingTermVectorsFormat#testNoOrds().mjava","sourceNew":"  // https://issues.apache.org/jira/browse/LUCENE-5156\n  public void testNoOrds() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n    ft.setStoreTermVectors(true);\n    doc.add(new Field(\"foo\", \"this is a test\", ft));\n    iw.addDocument(doc);\n    LeafReader ir = getOnlySegmentReader(iw.getReader());\n    Terms terms = ir.getTermVector(0, \"foo\");\n    assertNotNull(terms);\n    TermsEnum termsEnum = terms.iterator();\n    assertEquals(SeekStatus.FOUND, termsEnum.seekCeil(new BytesRef(\"this\")));\n    try {\n      termsEnum.ord();\n      fail();\n    } catch (UnsupportedOperationException expected) {\n      // expected exception\n    }\n    \n    try {\n      termsEnum.seekExact(0);\n      fail();\n    } catch (UnsupportedOperationException expected) {\n      // expected exception\n    }\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  // https://issues.apache.org/jira/browse/LUCENE-5156\n  public void testNoOrds() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n    ft.setStoreTermVectors(true);\n    doc.add(new Field(\"foo\", \"this is a test\", ft));\n    iw.addDocument(doc);\n    LeafReader ir = getOnlySegmentReader(iw.getReader());\n    Terms terms = ir.getTermVector(0, \"foo\");\n    assertNotNull(terms);\n    TermsEnum termsEnum = terms.iterator();\n    assertEquals(SeekStatus.FOUND, termsEnum.seekCeil(new BytesRef(\"this\")));\n    try {\n      termsEnum.ord();\n      fail();\n    } catch (UnsupportedOperationException expected) {\n      // expected exception\n    }\n    \n    try {\n      termsEnum.seekExact(0);\n      fail();\n    } catch (UnsupportedOperationException expected) {\n      // expected exception\n    }\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["ee6d7bc5bd25f7110381173440ebc538b9dd546f"],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["0a773283ef5eab2e9c7136eeb66574a4b7a2dc82"],"ee6d7bc5bd25f7110381173440ebc538b9dd546f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"]},"commit2Childs":{"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","ee6d7bc5bd25f7110381173440ebc538b9dd546f"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ee6d7bc5bd25f7110381173440ebc538b9dd546f":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["0a773283ef5eab2e9c7136eeb66574a4b7a2dc82"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}