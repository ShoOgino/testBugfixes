{"path":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","commits":[{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","sourceNew":"  // just tries to configure things to keep the open file\n  // count lowish\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    LogMergePolicy lmp = (LogMergePolicy) w.getConfig().getMergePolicy();\n    lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","sourceOld":"  // just tries to configure things to keep the open file\n  // count lowish\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    LogMergePolicy lmp = (LogMergePolicy) w.getConfig().getMergePolicy();\n    lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","sourceNew":"  // just tries to configure things to keep the open file\n  // count lowish\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    LogMergePolicy lmp = (LogMergePolicy) w.getConfig().getMergePolicy();\n    lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","sourceOld":"  // just tries to configure things to keep the open file\n  // count lowish\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    LogMergePolicy lmp = (LogMergePolicy) w.getConfig().getMergePolicy();\n    lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d","date":1298208351,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","sourceNew":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    LogMergePolicy lmp = (LogMergePolicy) w.getConfig().getMergePolicy();\n    lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","sourceOld":"  // just tries to configure things to keep the open file\n  // count lowish\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    LogMergePolicy lmp = (LogMergePolicy) w.getConfig().getMergePolicy();\n    lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","sourceNew":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    LogMergePolicy lmp = (LogMergePolicy) w.getConfig().getMergePolicy();\n    lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","sourceOld":"  // just tries to configure things to keep the open file\n  // count lowish\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    LogMergePolicy lmp = (LogMergePolicy) w.getConfig().getMergePolicy();\n    lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","sourceNew":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    LogMergePolicy lmp = (LogMergePolicy) w.getConfig().getMergePolicy();\n    lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","sourceOld":"  // just tries to configure things to keep the open file\n  // count lowish\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    LogMergePolicy lmp = (LogMergePolicy) w.getConfig().getMergePolicy();\n    lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"01e5948db9a07144112d2f08f28ca2e3cd880348","date":1301759232,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","sourceNew":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","sourceOld":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    LogMergePolicy lmp = (LogMergePolicy) w.getConfig().getMergePolicy();\n    lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","sourceNew":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","sourceOld":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    LogMergePolicy lmp = (LogMergePolicy) w.getConfig().getMergePolicy();\n    lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","sourceNew":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","sourceOld":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    LogMergePolicy lmp = (LogMergePolicy) w.getConfig().getMergePolicy();\n    lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","sourceNew":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","sourceOld":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    LogMergePolicy lmp = (LogMergePolicy) w.getConfig().getMergePolicy();\n    lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"39d69912999d6e0acfb6eb6be558fcc165eee0b2","date":1308066875,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","sourceNew":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n      tmp.setSegmentsPerTier(Math.min(5, tmp.getSegmentsPerTier()));\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","sourceOld":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9ed208afa1e7aa98899ddb1dedfddedddf898253","date":1308079587,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","sourceNew":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n      tmp.setSegmentsPerTier(Math.min(5, tmp.getSegmentsPerTier()));\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","sourceOld":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","sourceNew":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n      tmp.setSegmentsPerTier(Math.min(5, tmp.getSegmentsPerTier()));\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","sourceOld":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n      tmp.setSegmentsPerTier(Math.min(5, tmp.getSegmentsPerTier()));\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"f1bdbf92da222965b46c0a942c3857ba56e5c638":["29ef99d61cda9641b6250bf9567329a6e65f901d","0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d"],"39d69912999d6e0acfb6eb6be558fcc165eee0b2":["01e5948db9a07144112d2f08f28ca2e3cd880348"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["f1bdbf92da222965b46c0a942c3857ba56e5c638","01e5948db9a07144112d2f08f28ca2e3cd880348"],"9ed208afa1e7aa98899ddb1dedfddedddf898253":["a3776dccca01c11e7046323cfad46a3b4a471233","39d69912999d6e0acfb6eb6be558fcc165eee0b2"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"01e5948db9a07144112d2f08f28ca2e3cd880348":["0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d"],"7b91922b55d15444d554721b352861d028eb8278":["39d69912999d6e0acfb6eb6be558fcc165eee0b2"],"0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a3776dccca01c11e7046323cfad46a3b4a471233":["0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d","01e5948db9a07144112d2f08f28ca2e3cd880348"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"45669a651c970812a680841b97a77cce06af559f":["bde51b089eb7f86171eb3406e38a274743f9b7ac","01e5948db9a07144112d2f08f28ca2e3cd880348"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"f1bdbf92da222965b46c0a942c3857ba56e5c638":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"39d69912999d6e0acfb6eb6be558fcc165eee0b2":["9ed208afa1e7aa98899ddb1dedfddedddf898253","7b91922b55d15444d554721b352861d028eb8278"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"9ed208afa1e7aa98899ddb1dedfddedddf898253":[],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d","29ef99d61cda9641b6250bf9567329a6e65f901d"],"01e5948db9a07144112d2f08f28ca2e3cd880348":["39d69912999d6e0acfb6eb6be558fcc165eee0b2","135621f3a0670a9394eb563224a3b76cc4dddc0f","a3776dccca01c11e7046323cfad46a3b4a471233","45669a651c970812a680841b97a77cce06af559f"],"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d":["f1bdbf92da222965b46c0a942c3857ba56e5c638","01e5948db9a07144112d2f08f28ca2e3cd880348","a3776dccca01c11e7046323cfad46a3b4a471233","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["f1bdbf92da222965b46c0a942c3857ba56e5c638"],"a3776dccca01c11e7046323cfad46a3b4a471233":["9ed208afa1e7aa98899ddb1dedfddedddf898253"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"45669a651c970812a680841b97a77cce06af559f":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["45669a651c970812a680841b97a77cce06af559f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","9ed208afa1e7aa98899ddb1dedfddedddf898253","45669a651c970812a680841b97a77cce06af559f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}