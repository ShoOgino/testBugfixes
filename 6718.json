{"path":"lucene/misc/src/java/org/apache/lucene/misc/HighFreqTerms#getTotalTermFreq(IndexReader,Term).mjava","commits":[{"id":"b6a0e3c1c21aac8ecf75706605133012833585c7","date":1347535263,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/misc/HighFreqTerms#getTotalTermFreq(IndexReader,Term).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/misc/HighFreqTerms#getTotalTermFreq(IndexReader,String,BytesRef).mjava","sourceNew":"  public static long getTotalTermFreq(IndexReader reader, Term term) throws Exception {   \n    long totalTF = 0L;\n    for (final AtomicReaderContext ctx : reader.leaves()) {\n      AtomicReader r = ctx.reader();\n      if (!r.hasDeletions()) {\n        // TODO: we could do this up front, during the scan\n        // (next()), instead of after-the-fact here w/ seek,\n        // if the codec supports it and there are no del\n        // docs...\n        final long totTF = r.totalTermFreq(term);\n        if (totTF != -1) {\n          totalTF += totTF;\n          continue;\n        } // otherwise we fall-through\n      }\n      // note: what should we do if field omits freqs? currently it counts as 1...\n      DocsEnum de = r.termDocsEnum(term);\n      if (de != null) {\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS)\n          totalTF += de.freq();\n      }\n    }\n    \n    return totalTF;\n  }\n\n","sourceOld":"  public static long getTotalTermFreq(IndexReader reader, final String field, final BytesRef termText) throws Exception {   \n    long totalTF = 0L;\n    for (final AtomicReaderContext ctx : reader.leaves()) {\n      AtomicReader r = ctx.reader();\n      Bits liveDocs = r.getLiveDocs();\n      if (liveDocs == null) {\n        // TODO: we could do this up front, during the scan\n        // (next()), instead of after-the-fact here w/ seek,\n        // if the codec supports it and there are no del\n        // docs...\n        final long totTF = r.totalTermFreq(field, termText);\n        if (totTF != -1) {\n          totalTF += totTF;\n          continue;\n        } // otherwise we fall-through\n      }\n      // note: what should we do if field omits freqs? currently it counts as 1...\n      DocsEnum de = r.termDocsEnum(liveDocs, field, termText);\n      if (de != null) {\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS)\n          totalTF += de.freq();\n      }\n    }\n    \n    return totalTF;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0aae73ca2eeb899108e9fe36611ddf5a83ec790","date":1378482998,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/misc/src/java/org/apache/lucene/misc/HighFreqTerms#getTotalTermFreq(IndexReader,Term).mjava","sourceNew":null,"sourceOld":"  public static long getTotalTermFreq(IndexReader reader, Term term) throws Exception {   \n    long totalTF = 0L;\n    for (final AtomicReaderContext ctx : reader.leaves()) {\n      AtomicReader r = ctx.reader();\n      if (!r.hasDeletions()) {\n        // TODO: we could do this up front, during the scan\n        // (next()), instead of after-the-fact here w/ seek,\n        // if the codec supports it and there are no del\n        // docs...\n        final long totTF = r.totalTermFreq(term);\n        if (totTF != -1) {\n          totalTF += totTF;\n          continue;\n        } // otherwise we fall-through\n      }\n      // note: what should we do if field omits freqs? currently it counts as 1...\n      DocsEnum de = r.termDocsEnum(term);\n      if (de != null) {\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS)\n          totalTF += de.freq();\n      }\n    }\n    \n    return totalTF;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b6a0e3c1c21aac8ecf75706605133012833585c7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f0aae73ca2eeb899108e9fe36611ddf5a83ec790"],"f0aae73ca2eeb899108e9fe36611ddf5a83ec790":["b6a0e3c1c21aac8ecf75706605133012833585c7"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b6a0e3c1c21aac8ecf75706605133012833585c7"],"b6a0e3c1c21aac8ecf75706605133012833585c7":["f0aae73ca2eeb899108e9fe36611ddf5a83ec790"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f0aae73ca2eeb899108e9fe36611ddf5a83ec790":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}