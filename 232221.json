{"path":"src/java/org/apache/solr/common/util/NamedList#getAll(String).mjava","commits":[{"id":"016943a189bc11c4c0c7a13a441682947bd4185a","date":1215539686,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/common/util/NamedList#getAll(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Gets the values for the the specified name\n   * @param name Name\n   * @return List of values\n   */\n  public List<T> getAll(String name) {\n    List<T> result = new ArrayList<T>();\n    int sz = size();\n    for (int i = 0; i < sz; i++) {\n      String n = getName(i);\n      if (name==n || (name!=null && name.equals(n))) {\n        result.add(getVal(i));\n      }\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["3570e776df3671c1bce4f54b07bf03ca5a2c23de","3570e776df3671c1bce4f54b07bf03ca5a2c23de","3570e776df3671c1bce4f54b07bf03ca5a2c23de"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e3602d5eab954caecc726ab136ad580ac1ceb917","date":1228676831,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/common/org/apache/solr/common/util/NamedList#getAll(String).mjava","pathOld":"src/java/org/apache/solr/common/util/NamedList#getAll(String).mjava","sourceNew":"  /**\n   * Gets the values for the the specified name\n   * @param name Name\n   * @return List of values\n   */\n  public List<T> getAll(String name) {\n    List<T> result = new ArrayList<T>();\n    int sz = size();\n    for (int i = 0; i < sz; i++) {\n      String n = getName(i);\n      if (name==n || (name!=null && name.equals(n))) {\n        result.add(getVal(i));\n      }\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Gets the values for the the specified name\n   * @param name Name\n   * @return List of values\n   */\n  public List<T> getAll(String name) {\n    List<T> result = new ArrayList<T>();\n    int sz = size();\n    for (int i = 0; i < sz; i++) {\n      String n = getName(i);\n      if (name==n || (name!=null && name.equals(n))) {\n        result.add(getVal(i));\n      }\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["016943a189bc11c4c0c7a13a441682947bd4185a"],"016943a189bc11c4c0c7a13a441682947bd4185a":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e3602d5eab954caecc726ab136ad580ac1ceb917":[],"016943a189bc11c4c0c7a13a441682947bd4185a":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["016943a189bc11c4c0c7a13a441682947bd4185a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e3602d5eab954caecc726ab136ad580ac1ceb917","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}