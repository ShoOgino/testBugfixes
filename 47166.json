{"path":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#initReader(IndexReader).mjava","commits":[{"id":"2dd6ecb8250c497ed227653279d6a4f470bfbb31","date":1326814483,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#initReader(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  private void initReader(IndexReader reader) {\n    if (reader instanceof SegmentReader) {\n      ((SegmentReader) reader).addCoreClosedListener(purgeCore);\n    } else if (reader.getSequentialSubReaders() != null) {\n      throw new UnsupportedOperationException(\"Please use SlowMultiReaderWrapper, if you really need a top level FieldCache\");\n    } else {\n      // we have a slow reader of some sort, try to register a purge event\n      // rather than relying on gc:\n      Object key = reader.getCoreCacheKey();\n      if (key instanceof IndexReader) {\n        ((IndexReader)key).addReaderClosedListener(new IndexReader.ReaderClosedListener() {\n          @Override\n          public void onClose(IndexReader reader) {\n            FieldCache.DEFAULT.purge(reader);\n          }\n        }); \n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05ba72bbf046a263b6315fee8e43194ead89273b","date":1326815838,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#initReader(IndexReader).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#initReader(IndexReader).mjava","sourceNew":"  private void initReader(IndexReader reader) {\n    if (reader instanceof SegmentReader) {\n      ((SegmentReader) reader).addCoreClosedListener(purgeCore);\n    } else if (reader.getSequentialSubReaders() != null) {\n      throw new UnsupportedOperationException(\"Please use SlowMultiReaderWrapper, if you really need a top level FieldCache\");\n    } else {\n      // we have a slow reader of some sort, try to register a purge event\n      // rather than relying on gc:\n      Object key = reader.getCoreCacheKey();\n      if (key instanceof IndexReader) {\n        ((IndexReader)key).addReaderClosedListener(purgeReader); \n      }\n    }\n  }\n\n","sourceOld":"  private void initReader(IndexReader reader) {\n    if (reader instanceof SegmentReader) {\n      ((SegmentReader) reader).addCoreClosedListener(purgeCore);\n    } else if (reader.getSequentialSubReaders() != null) {\n      throw new UnsupportedOperationException(\"Please use SlowMultiReaderWrapper, if you really need a top level FieldCache\");\n    } else {\n      // we have a slow reader of some sort, try to register a purge event\n      // rather than relying on gc:\n      Object key = reader.getCoreCacheKey();\n      if (key instanceof IndexReader) {\n        ((IndexReader)key).addReaderClosedListener(new IndexReader.ReaderClosedListener() {\n          @Override\n          public void onClose(IndexReader reader) {\n            FieldCache.DEFAULT.purge(reader);\n          }\n        }); \n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6257da8bebdf98fe8c5064e81dcead758ee3caa1","date":1326816591,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#initReader(IndexReader).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#initReader(IndexReader).mjava","sourceNew":"  private void initReader(IndexReader reader) {\n    if (reader instanceof SegmentReader) {\n      ((SegmentReader) reader).addCoreClosedListener(purgeCore);\n    } else if (reader.getSequentialSubReaders() != null) {\n      throw new UnsupportedOperationException(\"Please use SlowMultiReaderWrapper, if you really need a top level FieldCache\");\n    } else {\n      // we have a slow reader of some sort, try to register a purge event\n      // rather than relying on gc:\n      Object key = reader.getCoreCacheKey();\n      if (key instanceof IndexReader) {\n        ((IndexReader)key).addReaderClosedListener(purgeReader); \n      } else {\n        // last chance\n        reader.addReaderClosedListener(purgeReader); \t\t\t\t\n      }\n    }\n  }\n\n","sourceOld":"  private void initReader(IndexReader reader) {\n    if (reader instanceof SegmentReader) {\n      ((SegmentReader) reader).addCoreClosedListener(purgeCore);\n    } else if (reader.getSequentialSubReaders() != null) {\n      throw new UnsupportedOperationException(\"Please use SlowMultiReaderWrapper, if you really need a top level FieldCache\");\n    } else {\n      // we have a slow reader of some sort, try to register a purge event\n      // rather than relying on gc:\n      Object key = reader.getCoreCacheKey();\n      if (key instanceof IndexReader) {\n        ((IndexReader)key).addReaderClosedListener(purgeReader); \n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2725b2d479964ea5aaea0ba4ae2634716f3ec26c","date":1327188170,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#initReader(AtomicIndexReader).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#initReader(IndexReader).mjava","sourceNew":"  private void initReader(AtomicIndexReader reader) {\n    if (reader instanceof SegmentReader) {\n      ((SegmentReader) reader).addCoreClosedListener(purgeCore);\n    } else {\n      // we have a slow reader of some sort, try to register a purge event\n      // rather than relying on gc:\n      Object key = reader.getCoreCacheKey();\n      if (key instanceof AtomicIndexReader) {\n        ((AtomicIndexReader)key).addReaderClosedListener(purgeReader); \n      } else {\n        // last chance\n        reader.addReaderClosedListener(purgeReader); \t\t\t\t\n      }\n    }\n  }\n\n","sourceOld":"  private void initReader(IndexReader reader) {\n    if (reader instanceof SegmentReader) {\n      ((SegmentReader) reader).addCoreClosedListener(purgeCore);\n    } else if (reader.getSequentialSubReaders() != null) {\n      throw new UnsupportedOperationException(\"Please use SlowMultiReaderWrapper, if you really need a top level FieldCache\");\n    } else {\n      // we have a slow reader of some sort, try to register a purge event\n      // rather than relying on gc:\n      Object key = reader.getCoreCacheKey();\n      if (key instanceof IndexReader) {\n        ((IndexReader)key).addReaderClosedListener(purgeReader); \n      } else {\n        // last chance\n        reader.addReaderClosedListener(purgeReader); \t\t\t\t\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#initReader(AtomicReader).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#initReader(IndexReader).mjava","sourceNew":"  private void initReader(AtomicReader reader) {\n    if (reader instanceof SegmentReader) {\n      ((SegmentReader) reader).addCoreClosedListener(purgeCore);\n    } else {\n      // we have a slow reader of some sort, try to register a purge event\n      // rather than relying on gc:\n      Object key = reader.getCoreCacheKey();\n      if (key instanceof AtomicReader) {\n        ((AtomicReader)key).addReaderClosedListener(purgeReader); \n      } else {\n        // last chance\n        reader.addReaderClosedListener(purgeReader); \t\t\t\t\n      }\n    }\n  }\n\n","sourceOld":"  private void initReader(IndexReader reader) {\n    if (reader instanceof SegmentReader) {\n      ((SegmentReader) reader).addCoreClosedListener(purgeCore);\n    } else if (reader.getSequentialSubReaders() != null) {\n      throw new UnsupportedOperationException(\"Please use SlowMultiReaderWrapper, if you really need a top level FieldCache\");\n    } else {\n      // we have a slow reader of some sort, try to register a purge event\n      // rather than relying on gc:\n      Object key = reader.getCoreCacheKey();\n      if (key instanceof IndexReader) {\n        ((IndexReader)key).addReaderClosedListener(purgeReader); \n      } else {\n        // last chance\n        reader.addReaderClosedListener(purgeReader); \t\t\t\t\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05ba72bbf046a263b6315fee8e43194ead89273b":["2dd6ecb8250c497ed227653279d6a4f470bfbb31"],"6257da8bebdf98fe8c5064e81dcead758ee3caa1":["05ba72bbf046a263b6315fee8e43194ead89273b"],"2dd6ecb8250c497ed227653279d6a4f470bfbb31":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["6257da8bebdf98fe8c5064e81dcead758ee3caa1","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["6257da8bebdf98fe8c5064e81dcead758ee3caa1"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2dd6ecb8250c497ed227653279d6a4f470bfbb31"],"05ba72bbf046a263b6315fee8e43194ead89273b":["6257da8bebdf98fe8c5064e81dcead758ee3caa1"],"6257da8bebdf98fe8c5064e81dcead758ee3caa1":["5cab9a86bd67202d20b6adc463008c8e982b070a","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"2dd6ecb8250c497ed227653279d6a4f470bfbb31":["05ba72bbf046a263b6315fee8e43194ead89273b"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}