{"path":"lucene/backwards/src/test/org/apache/lucene/index/TestSegmentReader#testTermVectors().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/index/TestSegmentReader#testTermVectors().mjava","pathOld":"backwards/src/test/org/apache/lucene/index/TestSegmentReader#testTermVectors().mjava","sourceNew":"  public void testTermVectors() throws IOException {\n    TermFreqVector result = reader.getTermFreqVector(0, DocHelper.TEXT_FIELD_2_KEY);\n    assertTrue(result != null);\n    String [] terms = result.getTerms();\n    int [] freqs = result.getTermFrequencies();\n    assertTrue(terms != null && terms.length == 3 && freqs != null && freqs.length == 3);\n    for (int i = 0; i < terms.length; i++) {\n      String term = terms[i];\n      int freq = freqs[i];\n      assertTrue(DocHelper.FIELD_2_TEXT.indexOf(term) != -1);\n      assertTrue(freq > 0);\n    }\n\n    TermFreqVector [] results = reader.getTermFreqVectors(0);\n    assertTrue(results != null);\n    assertTrue(\"We do not have 3 term freq vectors, we have: \" + results.length, results.length == 3);      \n  }    \n\n","sourceOld":"  public void testTermVectors() throws IOException {\n    TermFreqVector result = reader.getTermFreqVector(0, DocHelper.TEXT_FIELD_2_KEY);\n    assertTrue(result != null);\n    String [] terms = result.getTerms();\n    int [] freqs = result.getTermFrequencies();\n    assertTrue(terms != null && terms.length == 3 && freqs != null && freqs.length == 3);\n    for (int i = 0; i < terms.length; i++) {\n      String term = terms[i];\n      int freq = freqs[i];\n      assertTrue(DocHelper.FIELD_2_TEXT.indexOf(term) != -1);\n      assertTrue(freq > 0);\n    }\n\n    TermFreqVector [] results = reader.getTermFreqVectors(0);\n    assertTrue(results != null);\n    assertTrue(\"We do not have 3 term freq vectors, we have: \" + results.length, results.length == 3);      \n  }    \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/index/TestSegmentReader#testTermVectors().mjava","sourceNew":null,"sourceOld":"  public void testTermVectors() throws IOException {\n    TermFreqVector result = reader.getTermFreqVector(0, DocHelper.TEXT_FIELD_2_KEY);\n    assertTrue(result != null);\n    String [] terms = result.getTerms();\n    int [] freqs = result.getTermFrequencies();\n    assertTrue(terms != null && terms.length == 3 && freqs != null && freqs.length == 3);\n    for (int i = 0; i < terms.length; i++) {\n      String term = terms[i];\n      int freq = freqs[i];\n      assertTrue(DocHelper.FIELD_2_TEXT.indexOf(term) != -1);\n      assertTrue(freq > 0);\n    }\n\n    TermFreqVector [] results = reader.getTermFreqVectors(0);\n    assertTrue(results != null);\n    assertTrue(\"We do not have 3 term freq vectors, we have: \" + results.length, results.length == 3);      \n  }    \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}