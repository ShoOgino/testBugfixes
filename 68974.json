{"path":"solr/core/src/java/org/apache/solr/schema/EnumFieldType#createField(SchemaField,Object).mjava","commits":[{"id":"54ad8c9e9210e008dc7b8ad5a037ff20879150ea","date":1501889566,"type":0,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/EnumFieldType#createField(SchemaField,Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public IndexableField createField(SchemaField field, Object value) {\n    final Integer intValue = enumMapping.stringValueToIntValue(value.toString());\n    if (intValue == null || intValue.equals(EnumMapping.DEFAULT_VALUE)) {\n      String exceptionMessage = String.format(Locale.ENGLISH, \"Unknown value for enum field: %s, value: %s\",\n          field.getName(), value.toString());\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,  exceptionMessage);\n    }\n\n    org.apache.lucene.document.FieldType newType = new org.apache.lucene.document.FieldType();\n    newType.setTokenized(false);\n    newType.setStored(field.stored());\n    newType.setOmitNorms(field.omitNorms());\n    newType.setIndexOptions(field.indexOptions());\n    newType.setStoreTermVectors(field.storeTermVector());\n    newType.setStoreTermVectorOffsets(field.storeTermOffsets());\n    newType.setStoreTermVectorPositions(field.storeTermPositions());\n    newType.setStoreTermVectorPayloads(field.storeTermPayloads());\n    \n    byte[] bytes = new byte[Integer.BYTES];\n    NumericUtils.intToSortableBytes(intValue, bytes, 0);         \n    return new Field(field.getName(), bytes, newType) {\n      @Override public Number numericValue() {\n        return NumericUtils.sortableBytesToInt(((BytesRef)fieldsData).bytes, 0);\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/EnumFieldType#createField(SchemaField,Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public IndexableField createField(SchemaField field, Object value) {\n    final Integer intValue = enumMapping.stringValueToIntValue(value.toString());\n    if (intValue == null || intValue.equals(EnumMapping.DEFAULT_VALUE)) {\n      String exceptionMessage = String.format(Locale.ENGLISH, \"Unknown value for enum field: %s, value: %s\",\n          field.getName(), value.toString());\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,  exceptionMessage);\n    }\n\n    org.apache.lucene.document.FieldType newType = new org.apache.lucene.document.FieldType();\n    newType.setTokenized(false);\n    newType.setStored(field.stored());\n    newType.setOmitNorms(field.omitNorms());\n    newType.setIndexOptions(field.indexOptions());\n    newType.setStoreTermVectors(field.storeTermVector());\n    newType.setStoreTermVectorOffsets(field.storeTermOffsets());\n    newType.setStoreTermVectorPositions(field.storeTermPositions());\n    newType.setStoreTermVectorPayloads(field.storeTermPayloads());\n    \n    byte[] bytes = new byte[Integer.BYTES];\n    NumericUtils.intToSortableBytes(intValue, bytes, 0);         \n    return new Field(field.getName(), bytes, newType) {\n      @Override public Number numericValue() {\n        return NumericUtils.sortableBytesToInt(((BytesRef)fieldsData).bytes, 0);\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","54ad8c9e9210e008dc7b8ad5a037ff20879150ea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"54ad8c9e9210e008dc7b8ad5a037ff20879150ea":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["54ad8c9e9210e008dc7b8ad5a037ff20879150ea"]},"commit2Childs":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","54ad8c9e9210e008dc7b8ad5a037ff20879150ea"],"54ad8c9e9210e008dc7b8ad5a037ff20879150ea":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}