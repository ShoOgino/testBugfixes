{"path":"solr/core/src/test/org/apache/solr/core/TestConfigSetProperties#createConfigSetProps(String).mjava","commits":[{"id":"6466e433d7f5218e77c8115ed28176855fc3c143","date":1436824910,"type":0,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSetProperties#createConfigSetProps(String).mjava","pathOld":"/dev/null","sourceNew":"  private NamedList createConfigSetProps(String props) throws Exception {\n    File testDirectory = createTempDir().toFile();\n    String filename = \"configsetprops.json\";\n    if (props != null) {\n      File confDir = new File(testDirectory, \"conf\");\n      FileUtils.forceMkdir(confDir);\n      FileUtils.write(new File(confDir, filename), new StringBuilder(props));\n    }\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory.getAbsolutePath());\n    return ConfigSetProperties.readFromResourceLoader(loader, filename);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a626ec4d1c92e59fe390724d6220081047b03ce7","date":1448021525,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSetProperties#createConfigSetProps(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfigSetProperties#createConfigSetProps(String).mjava","sourceNew":"  private NamedList createConfigSetProps(String props) throws Exception {\n    Path testDirectory = createTempDir();\n    String filename = \"configsetprops.json\";\n    if (props != null) {\n      Path confDir = testDirectory.resolve(\"conf\");\n      Files.createDirectories(confDir);\n      Files.write(confDir.resolve(filename), props.getBytes(StandardCharsets.UTF_8));\n    }\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory);\n    return ConfigSetProperties.readFromResourceLoader(loader, filename);\n  }\n\n","sourceOld":"  private NamedList createConfigSetProps(String props) throws Exception {\n    File testDirectory = createTempDir().toFile();\n    String filename = \"configsetprops.json\";\n    if (props != null) {\n      File confDir = new File(testDirectory, \"conf\");\n      FileUtils.forceMkdir(confDir);\n      FileUtils.write(new File(confDir, filename), new StringBuilder(props));\n    }\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory.getAbsolutePath());\n    return ConfigSetProperties.readFromResourceLoader(loader, filename);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSetProperties#createConfigSetProps(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfigSetProperties#createConfigSetProps(String).mjava","sourceNew":"  @SuppressWarnings({\"rawtypes\"})\n  private NamedList createConfigSetProps(String props) throws Exception {\n    Path testDirectory = createTempDir();\n    String filename = \"configsetprops.json\";\n    if (props != null) {\n      Path confDir = testDirectory.resolve(\"conf\");\n      Files.createDirectories(confDir);\n      Files.write(confDir.resolve(filename), props.getBytes(StandardCharsets.UTF_8));\n    }\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory);\n    return ConfigSetProperties.readFromResourceLoader(loader, filename);\n  }\n\n","sourceOld":"  private NamedList createConfigSetProps(String props) throws Exception {\n    Path testDirectory = createTempDir();\n    String filename = \"configsetprops.json\";\n    if (props != null) {\n      Path confDir = testDirectory.resolve(\"conf\");\n      Files.createDirectories(confDir);\n      Files.write(confDir.resolve(filename), props.getBytes(StandardCharsets.UTF_8));\n    }\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory);\n    return ConfigSetProperties.readFromResourceLoader(loader, filename);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6466e433d7f5218e77c8115ed28176855fc3c143":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["6466e433d7f5218e77c8115ed28176855fc3c143"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["a626ec4d1c92e59fe390724d6220081047b03ce7"]},"commit2Childs":{"6466e433d7f5218e77c8115ed28176855fc3c143":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["e98520789adb1d5ad05afb4956eca0944a929688"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6466e433d7f5218e77c8115ed28176855fc3c143"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}