{"path":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetSKGEquiv.TermFacet#buildRandom().mjava","commits":[{"id":"c5ec3c464e62e57df598ba20e010313bf6d5d7b4","date":1589998565,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetSKGEquiv.TermFacet#buildRandom().mjava","pathOld":"/dev/null","sourceNew":"    /** \n     * Generates a random TermFacet that does not contai nany random sub-facets \n     * beyond a single consistent \"skg\" stat) \n     */\n    public static TermFacet buildRandom() {\n      final String sort = randomSortParam(random());\n      final String facetField = randomFacetField(random());\n      return new TermFacet(facetField,\n                           map(\"limit\", randomLimitParam(random()),\n                               \"overrequest\", randomOverrequestParam(random()),\n                               \"prefix\", randomPrefixParam(random(), facetField),\n                               \"perSeg\", randomPerSegParam(random()),\n                               \"sort\", sort,\n                               \"prelim_sort\", randomPrelimSortParam(random(), sort),\n                               // SOLR-14467 // \"allBuckets\", randomAllBucketsParam(random()),\n                               \"refine\", randomRefineParam(random())));\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["22d2c45da6e47ff0ada29a8f98566b76f0b278de"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"22d2c45da6e47ff0ada29a8f98566b76f0b278de","date":1591372739,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetSKGEquiv.TermFacet#buildRandom().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetSKGEquiv.TermFacet#buildRandom().mjava","sourceNew":"    /** \n     * Generates a random TermFacet that does not contai nany random sub-facets \n     * beyond a single consistent \"skg\" stat) \n     */\n    public static TermFacet buildRandom() {\n      final String sort = randomSortParam(random());\n      final String facetField = randomFacetField(random());\n      return new TermFacet(facetField,\n                           map(\"limit\", randomLimitParam(random()),\n                               \"overrequest\", randomOverrequestParam(random()),\n                               \"prefix\", randomPrefixParam(random(), facetField),\n                               \"perSeg\", randomPerSegParam(random()),\n                               \"sort\", sort,\n                               \"prelim_sort\", randomPrelimSortParam(random(), sort),\n                               \"allBuckets\", randomAllBucketsParam(random(), sort),\n                               \"refine\", randomRefineParam(random())));\n    }\n\n","sourceOld":"    /** \n     * Generates a random TermFacet that does not contai nany random sub-facets \n     * beyond a single consistent \"skg\" stat) \n     */\n    public static TermFacet buildRandom() {\n      final String sort = randomSortParam(random());\n      final String facetField = randomFacetField(random());\n      return new TermFacet(facetField,\n                           map(\"limit\", randomLimitParam(random()),\n                               \"overrequest\", randomOverrequestParam(random()),\n                               \"prefix\", randomPrefixParam(random(), facetField),\n                               \"perSeg\", randomPerSegParam(random()),\n                               \"sort\", sort,\n                               \"prelim_sort\", randomPrelimSortParam(random(), sort),\n                               // SOLR-14467 // \"allBuckets\", randomAllBucketsParam(random()),\n                               \"refine\", randomRefineParam(random())));\n    }\n\n","bugFix":["c5ec3c464e62e57df598ba20e010313bf6d5d7b4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e37e44751b75fc8091af8134b209afde83f6174","date":1593980888,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetSKGEquiv.TermFacet#buildRandom().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetSKGEquiv.TermFacet#buildRandom().mjava","sourceNew":"    /** \n     * Generates a random TermFacet that does not contai nany random sub-facets \n     * beyond a single consistent \"skg\" stat) \n     */\n    public static TermFacet buildRandom() {\n      final String sort = randomSortParam(random());\n      final String facetField = randomFacetField(random());\n      return new TermFacet(facetField,\n                           map(\"limit\", randomLimitParam(random()),\n                               \"overrequest\", randomOverrequestParam(random(), sort),\n                               \"prefix\", randomPrefixParam(random(), facetField),\n                               \"perSeg\", randomPerSegParam(random()),\n                               \"sort\", sort,\n                               \"prelim_sort\", randomPrelimSortParam(random(), sort),\n                               \"allBuckets\", randomAllBucketsParam(random(), sort),\n                               \"refine\", randomRefineParam(random())));\n    }\n\n","sourceOld":"    /** \n     * Generates a random TermFacet that does not contai nany random sub-facets \n     * beyond a single consistent \"skg\" stat) \n     */\n    public static TermFacet buildRandom() {\n      final String sort = randomSortParam(random());\n      final String facetField = randomFacetField(random());\n      return new TermFacet(facetField,\n                           map(\"limit\", randomLimitParam(random()),\n                               \"overrequest\", randomOverrequestParam(random()),\n                               \"prefix\", randomPrefixParam(random(), facetField),\n                               \"perSeg\", randomPerSegParam(random()),\n                               \"sort\", sort,\n                               \"prelim_sort\", randomPrelimSortParam(random(), sort),\n                               \"allBuckets\", randomAllBucketsParam(random(), sort),\n                               \"refine\", randomRefineParam(random())));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c5ec3c464e62e57df598ba20e010313bf6d5d7b4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"22d2c45da6e47ff0ada29a8f98566b76f0b278de":["c5ec3c464e62e57df598ba20e010313bf6d5d7b4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2e37e44751b75fc8091af8134b209afde83f6174":["22d2c45da6e47ff0ada29a8f98566b76f0b278de"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2e37e44751b75fc8091af8134b209afde83f6174"]},"commit2Childs":{"c5ec3c464e62e57df598ba20e010313bf6d5d7b4":["22d2c45da6e47ff0ada29a8f98566b76f0b278de"],"22d2c45da6e47ff0ada29a8f98566b76f0b278de":["2e37e44751b75fc8091af8134b209afde83f6174"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c5ec3c464e62e57df598ba20e010313bf6d5d7b4"],"2e37e44751b75fc8091af8134b209afde83f6174":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}