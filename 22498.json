{"path":"solr/core/src/test/org/apache/solr/handler/PingRequestHandlerTest#before().mjava","commits":[{"id":"78a6940133670e0174590da7b3d490e837698176","date":1335202499,"type":0,"author":"Stefan Matheis","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/PingRequestHandlerTest#before().mjava","pathOld":"/dev/null","sourceNew":"  @Before\n  public void before() {\n    healthcheckFile.delete();\n    handler = new PingRequestHandler();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad826eef7abbe5ff5f62d508c87065b81010c4c6","date":1336074973,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/PingRequestHandlerTest#before().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/PingRequestHandlerTest#before().mjava","sourceNew":"  @Before\n  public void before() throws IOException {\n\n    // by default, use relative file in dataDir\n    healthcheckFile = new File(dataDir, fileName);\n    String fileNameParam = fileName;\n\n    // sometimes randomly use an absolute File path instead \n    if (random().nextBoolean()) {\n      healthcheckFile = new File(TEMP_DIR, fileName);\n      fileNameParam = healthcheckFile.getAbsolutePath();\n    } \n      \n    if (healthcheckFile.exists()) FileUtils.forceDelete(healthcheckFile);\n\n    handler = new PingRequestHandler();\n    NamedList initParams = new NamedList();\n    initParams.add(PingRequestHandler.HEALTHCHECK_FILE_PARAM,\n                   fileNameParam);\n    handler.init(initParams);\n    handler.inform(h.getCore());\n  }\n\n","sourceOld":"  @Before\n  public void before() {\n    healthcheckFile.delete();\n    handler = new PingRequestHandler();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/PingRequestHandlerTest#before().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/PingRequestHandlerTest#before().mjava","sourceNew":"  @Before\n  public void before() throws IOException {\n\n    // by default, use relative file in dataDir\n    healthcheckFile = new File(dataDir, fileName);\n    String fileNameParam = fileName;\n\n    // sometimes randomly use an absolute File path instead \n    if (random().nextBoolean()) {\n      healthcheckFile = TestUtil.createTempFile(fileName, \"\");\n      fileNameParam = healthcheckFile.getAbsolutePath();\n    } \n      \n    if (healthcheckFile.exists()) FileUtils.forceDelete(healthcheckFile);\n\n    handler = new PingRequestHandler();\n    NamedList initParams = new NamedList();\n    initParams.add(PingRequestHandler.HEALTHCHECK_FILE_PARAM,\n                   fileNameParam);\n    handler.init(initParams);\n    handler.inform(h.getCore());\n  }\n\n","sourceOld":"  @Before\n  public void before() throws IOException {\n\n    // by default, use relative file in dataDir\n    healthcheckFile = new File(dataDir, fileName);\n    String fileNameParam = fileName;\n\n    // sometimes randomly use an absolute File path instead \n    if (random().nextBoolean()) {\n      healthcheckFile = new File(TEMP_DIR, fileName);\n      fileNameParam = healthcheckFile.getAbsolutePath();\n    } \n      \n    if (healthcheckFile.exists()) FileUtils.forceDelete(healthcheckFile);\n\n    handler = new PingRequestHandler();\n    NamedList initParams = new NamedList();\n    initParams.add(PingRequestHandler.HEALTHCHECK_FILE_PARAM,\n                   fileNameParam);\n    handler.init(initParams);\n    handler.inform(h.getCore());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1416f9d09d016a6894cd17e1caac137dad2bba59","date":1395941020,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/PingRequestHandlerTest#before().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/PingRequestHandlerTest#before().mjava","sourceNew":"  @Before\n  public void before() throws IOException {\n\n    // by default, use relative file in dataDir\n    healthcheckFile = new File(dataDir, fileName);\n    String fileNameParam = fileName;\n\n    // sometimes randomly use an absolute File path instead \n    if (random().nextBoolean()) {\n      healthcheckFile = new File(dataDir, fileName);\n      fileNameParam = healthcheckFile.getAbsolutePath();\n    } \n      \n    if (healthcheckFile.exists()) FileUtils.forceDelete(healthcheckFile);\n\n    handler = new PingRequestHandler();\n    NamedList initParams = new NamedList();\n    initParams.add(PingRequestHandler.HEALTHCHECK_FILE_PARAM,\n                   fileNameParam);\n    handler.init(initParams);\n    handler.inform(h.getCore());\n  }\n\n","sourceOld":"  @Before\n  public void before() throws IOException {\n\n    // by default, use relative file in dataDir\n    healthcheckFile = new File(dataDir, fileName);\n    String fileNameParam = fileName;\n\n    // sometimes randomly use an absolute File path instead \n    if (random().nextBoolean()) {\n      healthcheckFile = new File(TEMP_DIR, fileName);\n      fileNameParam = healthcheckFile.getAbsolutePath();\n    } \n      \n    if (healthcheckFile.exists()) FileUtils.forceDelete(healthcheckFile);\n\n    handler = new PingRequestHandler();\n    NamedList initParams = new NamedList();\n    initParams.add(PingRequestHandler.HEALTHCHECK_FILE_PARAM,\n                   fileNameParam);\n    handler.init(initParams);\n    handler.inform(h.getCore());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/PingRequestHandlerTest#before().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/PingRequestHandlerTest#before().mjava","sourceNew":"  @Before\n  public void before() throws IOException {\n    File tmpDir = initCoreDataDir;\n    // by default, use relative file in dataDir\n    healthcheckFile = new File(tmpDir, fileName);\n    String fileNameParam = fileName;\n\n    // sometimes randomly use an absolute File path instead \n    if (random().nextBoolean()) {\n      healthcheckFile = new File(tmpDir, fileName);\n      fileNameParam = healthcheckFile.getAbsolutePath();\n    } \n      \n    if (healthcheckFile.exists()) FileUtils.forceDelete(healthcheckFile);\n\n    handler = new PingRequestHandler();\n    NamedList initParams = new NamedList();\n    initParams.add(PingRequestHandler.HEALTHCHECK_FILE_PARAM,\n                   fileNameParam);\n    handler.init(initParams);\n    handler.inform(h.getCore());\n  }\n\n","sourceOld":"  @Before\n  public void before() throws IOException {\n\n    // by default, use relative file in dataDir\n    healthcheckFile = new File(dataDir, fileName);\n    String fileNameParam = fileName;\n\n    // sometimes randomly use an absolute File path instead \n    if (random().nextBoolean()) {\n      healthcheckFile = TestUtil.createTempFile(fileName, \"\");\n      fileNameParam = healthcheckFile.getAbsolutePath();\n    } \n      \n    if (healthcheckFile.exists()) FileUtils.forceDelete(healthcheckFile);\n\n    handler = new PingRequestHandler();\n    NamedList initParams = new NamedList();\n    initParams.add(PingRequestHandler.HEALTHCHECK_FILE_PARAM,\n                   fileNameParam);\n    handler.init(initParams);\n    handler.inform(h.getCore());\n  }\n\n","bugFix":null,"bugIntro":["9799ebcab48102552d92f7807965a91fb6e116f7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/PingRequestHandlerTest#before().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/PingRequestHandlerTest#before().mjava","sourceNew":"  @Before\n  public void before() throws IOException {\n    File tmpDir = initCoreDataDir;\n    // by default, use relative file in dataDir\n    healthcheckFile = new File(tmpDir, fileName);\n    String fileNameParam = fileName;\n\n    // sometimes randomly use an absolute File path instead \n    if (random().nextBoolean()) {\n      healthcheckFile = new File(tmpDir, fileName);\n      fileNameParam = healthcheckFile.getAbsolutePath();\n    } \n      \n    if (healthcheckFile.exists()) FileUtils.forceDelete(healthcheckFile);\n\n    handler = new PingRequestHandler();\n    NamedList initParams = new NamedList();\n    initParams.add(PingRequestHandler.HEALTHCHECK_FILE_PARAM,\n                   fileNameParam);\n    handler.init(initParams);\n    handler.inform(h.getCore());\n  }\n\n","sourceOld":"  @Before\n  public void before() throws IOException {\n\n    // by default, use relative file in dataDir\n    healthcheckFile = new File(dataDir, fileName);\n    String fileNameParam = fileName;\n\n    // sometimes randomly use an absolute File path instead \n    if (random().nextBoolean()) {\n      healthcheckFile = new File(dataDir, fileName);\n      fileNameParam = healthcheckFile.getAbsolutePath();\n    } \n      \n    if (healthcheckFile.exists()) FileUtils.forceDelete(healthcheckFile);\n\n    handler = new PingRequestHandler();\n    NamedList initParams = new NamedList();\n    initParams.add(PingRequestHandler.HEALTHCHECK_FILE_PARAM,\n                   fileNameParam);\n    handler.init(initParams);\n    handler.inform(h.getCore());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9799ebcab48102552d92f7807965a91fb6e116f7","date":1564676118,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/PingRequestHandlerTest#before().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/PingRequestHandlerTest#before().mjava","sourceNew":"  @Before\n  public void before() throws IOException {\n    // by default, use relative file in dataDir\n    healthcheckFile = new File(initAndGetDataDir(), fileName);\n    String fileNameParam = fileName;\n\n    // sometimes randomly use an absolute File path instead \n    if (random().nextBoolean()) {\n      fileNameParam = healthcheckFile.getAbsolutePath();\n    } \n      \n    if (healthcheckFile.exists()) FileUtils.forceDelete(healthcheckFile);\n\n    handler = new PingRequestHandler();\n    NamedList initParams = new NamedList();\n    initParams.add(PingRequestHandler.HEALTHCHECK_FILE_PARAM,\n                   fileNameParam);\n    handler.init(initParams);\n    handler.inform(h.getCore());\n  }\n\n","sourceOld":"  @Before\n  public void before() throws IOException {\n    File tmpDir = initCoreDataDir;\n    // by default, use relative file in dataDir\n    healthcheckFile = new File(tmpDir, fileName);\n    String fileNameParam = fileName;\n\n    // sometimes randomly use an absolute File path instead \n    if (random().nextBoolean()) {\n      healthcheckFile = new File(tmpDir, fileName);\n      fileNameParam = healthcheckFile.getAbsolutePath();\n    } \n      \n    if (healthcheckFile.exists()) FileUtils.forceDelete(healthcheckFile);\n\n    handler = new PingRequestHandler();\n    NamedList initParams = new NamedList();\n    initParams.add(PingRequestHandler.HEALTHCHECK_FILE_PARAM,\n                   fileNameParam);\n    handler.init(initParams);\n    handler.inform(h.getCore());\n  }\n\n","bugFix":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/PingRequestHandlerTest#before().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/PingRequestHandlerTest#before().mjava","sourceNew":"  @Before\n  public void before() throws IOException {\n    // by default, use relative file in dataDir\n    healthcheckFile = new File(initAndGetDataDir(), fileName);\n    String fileNameParam = fileName;\n\n    // sometimes randomly use an absolute File path instead \n    if (random().nextBoolean()) {\n      fileNameParam = healthcheckFile.getAbsolutePath();\n    } \n      \n    if (healthcheckFile.exists()) FileUtils.forceDelete(healthcheckFile);\n\n    handler = new PingRequestHandler();\n    NamedList initParams = new NamedList();\n    initParams.add(PingRequestHandler.HEALTHCHECK_FILE_PARAM,\n                   fileNameParam);\n    handler.init(initParams);\n    handler.inform(h.getCore());\n  }\n\n","sourceOld":"  @Before\n  public void before() throws IOException {\n    File tmpDir = initCoreDataDir;\n    // by default, use relative file in dataDir\n    healthcheckFile = new File(tmpDir, fileName);\n    String fileNameParam = fileName;\n\n    // sometimes randomly use an absolute File path instead \n    if (random().nextBoolean()) {\n      healthcheckFile = new File(tmpDir, fileName);\n      fileNameParam = healthcheckFile.getAbsolutePath();\n    } \n      \n    if (healthcheckFile.exists()) FileUtils.forceDelete(healthcheckFile);\n\n    handler = new PingRequestHandler();\n    NamedList initParams = new NamedList();\n    initParams.add(PingRequestHandler.HEALTHCHECK_FILE_PARAM,\n                   fileNameParam);\n    handler.init(initParams);\n    handler.inform(h.getCore());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/PingRequestHandlerTest#before().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/PingRequestHandlerTest#before().mjava","sourceNew":"  @Before\n  @SuppressWarnings({\"unchecked\"})\n  public void before() throws IOException {\n    // by default, use relative file in dataDir\n    healthcheckFile = new File(initAndGetDataDir(), fileName);\n    String fileNameParam = fileName;\n\n    // sometimes randomly use an absolute File path instead \n    if (random().nextBoolean()) {\n      fileNameParam = healthcheckFile.getAbsolutePath();\n    } \n      \n    if (healthcheckFile.exists()) FileUtils.forceDelete(healthcheckFile);\n\n    handler = new PingRequestHandler();\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList initParams = new NamedList();\n    initParams.add(PingRequestHandler.HEALTHCHECK_FILE_PARAM,\n                   fileNameParam);\n    handler.init(initParams);\n    handler.inform(h.getCore());\n  }\n\n","sourceOld":"  @Before\n  public void before() throws IOException {\n    // by default, use relative file in dataDir\n    healthcheckFile = new File(initAndGetDataDir(), fileName);\n    String fileNameParam = fileName;\n\n    // sometimes randomly use an absolute File path instead \n    if (random().nextBoolean()) {\n      fileNameParam = healthcheckFile.getAbsolutePath();\n    } \n      \n    if (healthcheckFile.exists()) FileUtils.forceDelete(healthcheckFile);\n\n    handler = new PingRequestHandler();\n    NamedList initParams = new NamedList();\n    initParams.add(PingRequestHandler.HEALTHCHECK_FILE_PARAM,\n                   fileNameParam);\n    handler.init(initParams);\n    handler.inform(h.getCore());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["d0d579490a72f2e6297eaa648940611234c57cf1"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["1416f9d09d016a6894cd17e1caac137dad2bba59","bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"ad826eef7abbe5ff5f62d508c87065b81010c4c6":["78a6940133670e0174590da7b3d490e837698176"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["ad826eef7abbe5ff5f62d508c87065b81010c4c6"],"78a6940133670e0174590da7b3d490e837698176":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9799ebcab48102552d92f7807965a91fb6e116f7":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"d0d579490a72f2e6297eaa648940611234c57cf1":["ad826eef7abbe5ff5f62d508c87065b81010c4c6"],"f8061ddd97f3352007d927dae445884a6f3d857b":["2a0f5bb79c600763ffe7b8141df59a3169d31e48","9799ebcab48102552d92f7807965a91fb6e116f7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["9799ebcab48102552d92f7807965a91fb6e116f7"]},"commit2Childs":{"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["9799ebcab48102552d92f7807965a91fb6e116f7","f8061ddd97f3352007d927dae445884a6f3d857b"],"ad826eef7abbe5ff5f62d508c87065b81010c4c6":["1416f9d09d016a6894cd17e1caac137dad2bba59","d0d579490a72f2e6297eaa648940611234c57cf1"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"78a6940133670e0174590da7b3d490e837698176":["ad826eef7abbe5ff5f62d508c87065b81010c4c6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["78a6940133670e0174590da7b3d490e837698176"],"9799ebcab48102552d92f7807965a91fb6e116f7":["f8061ddd97f3352007d927dae445884a6f3d857b","e98520789adb1d5ad05afb4956eca0944a929688"],"d0d579490a72f2e6297eaa648940611234c57cf1":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}