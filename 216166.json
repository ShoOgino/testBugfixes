{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#setConnectionTimeout(int).mjava","commits":[{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#setConnectionTimeout(int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrServer#setConnectionTimeout(int).mjava","sourceNew":"  public void setConnectionTimeout(int timeout) {\n    HttpClientUtil.setConnectionTimeout(httpClient, timeout);\n  }\n\n","sourceOld":"  public void setConnectionTimeout(int timeout) {\n    HttpClientUtil.setConnectionTimeout(httpClient, timeout);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"859081acf00749f5dd462772c571d611d4a4d2db","date":1459527719,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#setConnectionTimeout(int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#setConnectionTimeout(int).mjava","sourceNew":"  public void setConnectionTimeout(int timeout) {\n    this.connectionTimeout = timeout;\n    synchronized (aliveServers) {\n      Iterator<ServerWrapper> wrappersIt = aliveServers.values().iterator();\n      while (wrappersIt.hasNext()) {\n        wrappersIt.next().client.setConnectionTimeout(timeout);\n      }\n    }\n    Iterator<ServerWrapper> wrappersIt = zombieServers.values().iterator();\n    while (wrappersIt.hasNext()) {\n      wrappersIt.next().client.setConnectionTimeout(timeout);\n    }\n  }\n\n","sourceOld":"  public void setConnectionTimeout(int timeout) {\n    HttpClientUtil.setConnectionTimeout(httpClient, timeout);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43d1e498704edd2bba13548a189eed4dfccff11b","date":1499143458,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#setConnectionTimeout(int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#setConnectionTimeout(int).mjava","sourceNew":"  /**\n   * @deprecated since 7.0  Use {@link Builder} methods instead. \n   */\n  @Deprecated\n  public void setConnectionTimeout(int timeout) {\n    this.connectionTimeout = timeout;\n    synchronized (aliveServers) {\n      Iterator<ServerWrapper> wrappersIt = aliveServers.values().iterator();\n      while (wrappersIt.hasNext()) {\n        wrappersIt.next().client.setConnectionTimeout(timeout);\n      }\n    }\n    Iterator<ServerWrapper> wrappersIt = zombieServers.values().iterator();\n    while (wrappersIt.hasNext()) {\n      wrappersIt.next().client.setConnectionTimeout(timeout);\n    }\n  }\n\n","sourceOld":"  public void setConnectionTimeout(int timeout) {\n    this.connectionTimeout = timeout;\n    synchronized (aliveServers) {\n      Iterator<ServerWrapper> wrappersIt = aliveServers.values().iterator();\n      while (wrappersIt.hasNext()) {\n        wrappersIt.next().client.setConnectionTimeout(timeout);\n      }\n    }\n    Iterator<ServerWrapper> wrappersIt = zombieServers.values().iterator();\n    while (wrappersIt.hasNext()) {\n      wrappersIt.next().client.setConnectionTimeout(timeout);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ea161f828a3a7a6eb9410a431aecda6d7ab1065","date":1499213384,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#setConnectionTimeout(int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#setConnectionTimeout(int).mjava","sourceNew":"  /**\n   * @deprecated since 7.0  Use {@link Builder} methods instead. \n   */\n  @Deprecated\n  public void setConnectionTimeout(int timeout) {\n    this.connectionTimeout = timeout;\n    synchronized (aliveServers) {\n      Iterator<ServerWrapper> wrappersIt = aliveServers.values().iterator();\n      while (wrappersIt.hasNext()) {\n        wrappersIt.next().client.setConnectionTimeout(timeout);\n      }\n    }\n    Iterator<ServerWrapper> wrappersIt = zombieServers.values().iterator();\n    while (wrappersIt.hasNext()) {\n      wrappersIt.next().client.setConnectionTimeout(timeout);\n    }\n  }\n\n","sourceOld":"  public void setConnectionTimeout(int timeout) {\n    this.connectionTimeout = timeout;\n    synchronized (aliveServers) {\n      Iterator<ServerWrapper> wrappersIt = aliveServers.values().iterator();\n      while (wrappersIt.hasNext()) {\n        wrappersIt.next().client.setConnectionTimeout(timeout);\n      }\n    }\n    Iterator<ServerWrapper> wrappersIt = zombieServers.values().iterator();\n    while (wrappersIt.hasNext()) {\n      wrappersIt.next().client.setConnectionTimeout(timeout);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a77e5e21cbd575a8240b0e3926164f15295f4e8","date":1544979500,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#setConnectionTimeout(int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#setConnectionTimeout(int).mjava","sourceNew":"  /**\n   * @deprecated since 7.0  Use {@link Builder} methods instead. \n   */\n  @Deprecated\n  public void setConnectionTimeout(int timeout) {\n    this.connectionTimeout = timeout;\n    this.urlToClient.values().forEach(client -> client.setConnectionTimeout(timeout));\n  }\n\n","sourceOld":"  /**\n   * @deprecated since 7.0  Use {@link Builder} methods instead. \n   */\n  @Deprecated\n  public void setConnectionTimeout(int timeout) {\n    this.connectionTimeout = timeout;\n    synchronized (aliveServers) {\n      Iterator<ServerWrapper> wrappersIt = aliveServers.values().iterator();\n      while (wrappersIt.hasNext()) {\n        wrappersIt.next().client.setConnectionTimeout(timeout);\n      }\n    }\n    Iterator<ServerWrapper> wrappersIt = zombieServers.values().iterator();\n    while (wrappersIt.hasNext()) {\n      wrappersIt.next().client.setConnectionTimeout(timeout);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"43d1e498704edd2bba13548a189eed4dfccff11b":["859081acf00749f5dd462772c571d611d4a4d2db"],"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["43d1e498704edd2bba13548a189eed4dfccff11b"],"859081acf00749f5dd462772c571d611d4a4d2db":["bafca15d8e408346a67f4282ad1143b88023893b"],"2ea161f828a3a7a6eb9410a431aecda6d7ab1065":["859081acf00749f5dd462772c571d611d4a4d2db","43d1e498704edd2bba13548a189eed4dfccff11b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"]},"commit2Childs":{"43d1e498704edd2bba13548a189eed4dfccff11b":["1a77e5e21cbd575a8240b0e3926164f15295f4e8","2ea161f828a3a7a6eb9410a431aecda6d7ab1065"],"859081acf00749f5dd462772c571d611d4a4d2db":["43d1e498704edd2bba13548a189eed4dfccff11b","2ea161f828a3a7a6eb9410a431aecda6d7ab1065"],"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2ea161f828a3a7a6eb9410a431aecda6d7ab1065":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bafca15d8e408346a67f4282ad1143b88023893b"],"bafca15d8e408346a67f4282ad1143b88023893b":["859081acf00749f5dd462772c571d611d4a4d2db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2ea161f828a3a7a6eb9410a431aecda6d7ab1065","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}