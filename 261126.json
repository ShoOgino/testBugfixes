{"path":"src/test/org/apache/lucene/store/MockRAMDirectory#getRecomputedSizeInBytes().mjava","commits":[{"id":"eeefd99c477417e5c7c574228461ebafe92469d4","date":1166460329,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/MockRAMDirectory#getRecomputedSizeInBytes().mjava","pathOld":"src/java/org/apache/lucene/store/RAMDirectory#getRecomputedSizeInBytes().mjava","sourceNew":"  /** Provided for testing purposes.  Use sizeInBytes() instead. */\n  public synchronized final long getRecomputedSizeInBytes() {\n    long size = 0;\n    Iterator it = files.iterator();\n    while (it.hasNext())\n      size += ((RAMFile) it.next()).getSizeInBytes();\n    return size;\n  }\n\n","sourceOld":"  /** Provided for testing purposes.  Use sizeInBytes() instead. */\n  public synchronized final long getRecomputedSizeInBytes() {\n    long size = 0;\n    Iterator it = files.iterator();\n    while (it.hasNext())\n      size += ((RAMFile) it.next()).getSizeInBytes();\n    return size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592767aedabac6986d9a9d5b4191e7709ea774f","date":1169930354,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/MockRAMDirectory#getRecomputedSizeInBytes().mjava","pathOld":"src/test/org/apache/lucene/store/MockRAMDirectory#getRecomputedSizeInBytes().mjava","sourceNew":"  /** Provided for testing purposes.  Use sizeInBytes() instead. */\n  public synchronized final long getRecomputedSizeInBytes() {\n    long size = 0;\n    Iterator it = fileMap.values().iterator();\n    while (it.hasNext())\n      size += ((RAMFile) it.next()).getSizeInBytes();\n    return size;\n  }\n\n","sourceOld":"  /** Provided for testing purposes.  Use sizeInBytes() instead. */\n  public synchronized final long getRecomputedSizeInBytes() {\n    long size = 0;\n    Iterator it = files.iterator();\n    while (it.hasNext())\n      size += ((RAMFile) it.next()).getSizeInBytes();\n    return size;\n  }\n\n","bugFix":["5657b669e16b843aac69f0ba7e89def1f93f6ea0"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef82ff03e4016c705811b2658e81471a645c0e49","date":1255900293,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/MockRAMDirectory#getRecomputedSizeInBytes().mjava","pathOld":"src/test/org/apache/lucene/store/MockRAMDirectory#getRecomputedSizeInBytes().mjava","sourceNew":"  /** Provided for testing purposes.  Use sizeInBytes() instead. */\n  public synchronized final long getRecomputedSizeInBytes() {\n    long size = 0;\n    for(final RAMFile file: fileMap.values()) {\n      size += file.getSizeInBytes();\n    }\n    return size;\n  }\n\n","sourceOld":"  /** Provided for testing purposes.  Use sizeInBytes() instead. */\n  public synchronized final long getRecomputedSizeInBytes() {\n    long size = 0;\n    Iterator it = fileMap.values().iterator();\n    while (it.hasNext())\n      size += ((RAMFile) it.next()).getSizeInBytes();\n    return size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/MockRAMDirectory#getRecomputedSizeInBytes().mjava","pathOld":"src/test/org/apache/lucene/store/MockRAMDirectory#getRecomputedSizeInBytes().mjava","sourceNew":"  /** Provided for testing purposes.  Use sizeInBytes() instead. */\n  public synchronized final long getRecomputedSizeInBytes() {\n    long size = 0;\n    for(final RAMFile file: fileMap.values()) {\n      size += file.getSizeInBytes();\n    }\n    return size;\n  }\n\n","sourceOld":"  /** Provided for testing purposes.  Use sizeInBytes() instead. */\n  public synchronized final long getRecomputedSizeInBytes() {\n    long size = 0;\n    for(final RAMFile file: fileMap.values()) {\n      size += file.getSizeInBytes();\n    }\n    return size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f592767aedabac6986d9a9d5b4191e7709ea774f":["eeefd99c477417e5c7c574228461ebafe92469d4"],"eeefd99c477417e5c7c574228461ebafe92469d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ef82ff03e4016c705811b2658e81471a645c0e49":["f592767aedabac6986d9a9d5b4191e7709ea774f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ef82ff03e4016c705811b2658e81471a645c0e49"]},"commit2Childs":{"f592767aedabac6986d9a9d5b4191e7709ea774f":["ef82ff03e4016c705811b2658e81471a645c0e49"],"eeefd99c477417e5c7c574228461ebafe92469d4":["f592767aedabac6986d9a9d5b4191e7709ea774f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eeefd99c477417e5c7c574228461ebafe92469d4"],"ef82ff03e4016c705811b2658e81471a645c0e49":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}