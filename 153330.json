{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoUtils#testDecodePreciseLongitudeLatitude().mjava","commits":[{"id":"937923083e4d137932336fc80f3d78758ff698a6","date":1454691519,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoUtils#testDecodePreciseLongitudeLatitude().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/util/TestGeoUtils#testDecodePreciseLongitudeLatitude().mjava","sourceNew":"  /**\n   * Pass condition: lat=52.3738007, lng=4.8909347 should be encoded and then\n   * decoded within 0.00001 of the original value\n   */\n  public void testDecodePreciseLongitudeLatitude() {\n    final String geohash = GeoHashUtils.stringEncode(4.8909347, 52.3738007);\n    final long hash = GeoHashUtils.mortonEncode(geohash);\n\n    assertEquals(52.3738007, GeoUtils.mortonUnhashLat(hash), 0.00001D);\n    assertEquals(4.8909347, GeoUtils.mortonUnhashLon(hash), 0.00001D);\n  }\n\n","sourceOld":"  /**\n   * Pass condition: lat=52.3738007, lng=4.8909347 should be encoded and then\n   * decoded within 0.00001 of the original value\n   */\n  public void testDecodePreciseLongitudeLatitude() {\n    final String geohash = GeoHashUtils.stringEncode(4.8909347, 52.3738007);\n    final long hash = GeoHashUtils.mortonEncode(geohash);\n\n    assertEquals(52.3738007, GeoUtils.mortonUnhashLat(hash), 0.00001D);\n    assertEquals(4.8909347, GeoUtils.mortonUnhashLon(hash), 0.00001D);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62cc423073d23f01208c6cf85844dedd80011121","date":1454731549,"type":3,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoUtils#testDecodePreciseLongitudeLatitude().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoUtils#testDecodePreciseLongitudeLatitude().mjava","sourceNew":"  /**\n   * Pass condition: lat=52.3738007, lng=4.8909347 should be encoded and then\n   * decoded within 0.00001 of the original value\n   */\n  public void testDecodePreciseLongitudeLatitude() {\n    final String geohash = GeoHashUtils.stringEncode(4.8909347, 52.3738007);\n    final long hash = GeoHashUtils.mortonEncode(geohash);\n\n    assertEquals(52.3738007, GeoEncodingUtils.mortonUnhashLat(hash), 0.00001D);\n    assertEquals(4.8909347, GeoEncodingUtils.mortonUnhashLon(hash), 0.00001D);\n  }\n\n","sourceOld":"  /**\n   * Pass condition: lat=52.3738007, lng=4.8909347 should be encoded and then\n   * decoded within 0.00001 of the original value\n   */\n  public void testDecodePreciseLongitudeLatitude() {\n    final String geohash = GeoHashUtils.stringEncode(4.8909347, 52.3738007);\n    final long hash = GeoHashUtils.mortonEncode(geohash);\n\n    assertEquals(52.3738007, GeoUtils.mortonUnhashLat(hash), 0.00001D);\n    assertEquals(4.8909347, GeoUtils.mortonUnhashLon(hash), 0.00001D);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":1,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoUtils#testDecodePreciseLongitudeLatitude().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/util/TestGeoUtils#testDecodePreciseLongitudeLatitude().mjava","sourceNew":"  /**\n   * Pass condition: lat=52.3738007, lng=4.8909347 should be encoded and then\n   * decoded within 0.00001 of the original value\n   */\n  public void testDecodePreciseLongitudeLatitude() {\n    final String geohash = GeoHashUtils.stringEncode(4.8909347, 52.3738007);\n    final long hash = GeoHashUtils.mortonEncode(geohash);\n\n    assertEquals(52.3738007, GeoEncodingUtils.mortonUnhashLat(hash), 0.00001D);\n    assertEquals(4.8909347, GeoEncodingUtils.mortonUnhashLon(hash), 0.00001D);\n  }\n\n","sourceOld":"  /**\n   * Pass condition: lat=52.3738007, lng=4.8909347 should be encoded and then\n   * decoded within 0.00001 of the original value\n   */\n  public void testDecodePreciseLongitudeLatitude() {\n    final String geohash = GeoHashUtils.stringEncode(4.8909347, 52.3738007);\n    final long hash = GeoHashUtils.mortonEncode(geohash);\n\n    assertEquals(52.3738007, GeoUtils.mortonUnhashLat(hash), 0.00001D);\n    assertEquals(4.8909347, GeoUtils.mortonUnhashLon(hash), 0.00001D);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a207d19eac354d649c3f0e2cce070017c78125e","date":1454776470,"type":3,"author":"Erick Erickson","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoUtils#testDecodePreciseLongitudeLatitude().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoUtils#testDecodePreciseLongitudeLatitude().mjava","sourceNew":"  /**\n   * Pass condition: lat=52.3738007, lng=4.8909347 should be encoded and then\n   * decoded within 0.00001 of the original value\n   */\n  public void testDecodePreciseLongitudeLatitude() {\n    final String geohash = GeoHashUtils.stringEncode(4.8909347, 52.3738007);\n    final long hash = GeoHashUtils.mortonEncode(geohash);\n\n    assertEquals(52.3738007, GeoEncodingUtils.mortonUnhashLat(hash), 0.00001D);\n    assertEquals(4.8909347, GeoEncodingUtils.mortonUnhashLon(hash), 0.00001D);\n  }\n\n","sourceOld":"  /**\n   * Pass condition: lat=52.3738007, lng=4.8909347 should be encoded and then\n   * decoded within 0.00001 of the original value\n   */\n  public void testDecodePreciseLongitudeLatitude() {\n    final String geohash = GeoHashUtils.stringEncode(4.8909347, 52.3738007);\n    final long hash = GeoHashUtils.mortonEncode(geohash);\n\n    assertEquals(52.3738007, GeoUtils.mortonUnhashLat(hash), 0.00001D);\n    assertEquals(4.8909347, GeoUtils.mortonUnhashLon(hash), 0.00001D);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec996bf2daff09d61a876319e8fae4aebbea58e3","date":1458661946,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoUtils#testDecodePreciseLongitudeLatitude().mjava","sourceNew":null,"sourceOld":"  /**\n   * Pass condition: lat=52.3738007, lng=4.8909347 should be encoded and then\n   * decoded within 0.00001 of the original value\n   */\n  public void testDecodePreciseLongitudeLatitude() {\n    final String geohash = GeoHashUtils.stringEncode(4.8909347, 52.3738007);\n    final long hash = GeoHashUtils.mortonEncode(geohash);\n\n    assertEquals(52.3738007, GeoEncodingUtils.mortonUnhashLat(hash), 0.00001D);\n    assertEquals(4.8909347, GeoEncodingUtils.mortonUnhashLon(hash), 0.00001D);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ec996bf2daff09d61a876319e8fae4aebbea58e3":["5a207d19eac354d649c3f0e2cce070017c78125e"],"5a207d19eac354d649c3f0e2cce070017c78125e":["937923083e4d137932336fc80f3d78758ff698a6","62cc423073d23f01208c6cf85844dedd80011121"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","62cc423073d23f01208c6cf85844dedd80011121"],"62cc423073d23f01208c6cf85844dedd80011121":["937923083e4d137932336fc80f3d78758ff698a6"],"937923083e4d137932336fc80f3d78758ff698a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ec996bf2daff09d61a876319e8fae4aebbea58e3"]},"commit2Childs":{"ec996bf2daff09d61a876319e8fae4aebbea58e3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5a207d19eac354d649c3f0e2cce070017c78125e":["ec996bf2daff09d61a876319e8fae4aebbea58e3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","937923083e4d137932336fc80f3d78758ff698a6"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"62cc423073d23f01208c6cf85844dedd80011121":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"937923083e4d137932336fc80f3d78758ff698a6":["5a207d19eac354d649c3f0e2cce070017c78125e","62cc423073d23f01208c6cf85844dedd80011121"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}