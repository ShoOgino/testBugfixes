{"path":"lucene/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    analyzer = new MockAnalyzer(random());\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"name\", docsContent[i].name, TextField.TYPE_STORED));\n      doc.add(newField(\"id\", docsContent[i].id, TextField.TYPE_STORED));\n      w.addDocument(doc);\n    }\n    w.close();\n    reader = IndexReader.open(rd);\n    searcher = new IndexSearcher(reader);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    analyzer = new MockAnalyzer(random());\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"name\", docsContent[i].name, TextField.TYPE_STORED));\n      doc.add(newField(\"id\", docsContent[i].id, TextField.TYPE_STORED));\n      w.addDocument(doc);\n    }\n    w.close();\n    reader = IndexReader.open(rd);\n    searcher = new IndexSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    analyzer = new MockAnalyzer(random());\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"name\", docsContent[i].name, TextField.TYPE_STORED));\n      doc.add(newField(\"id\", docsContent[i].id, TextField.TYPE_STORED));\n      w.addDocument(doc);\n    }\n    w.close();\n    reader = DirectoryReader.open(rd);\n    searcher = new IndexSearcher(reader);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    analyzer = new MockAnalyzer(random());\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"name\", docsContent[i].name, TextField.TYPE_STORED));\n      doc.add(newField(\"id\", docsContent[i].id, TextField.TYPE_STORED));\n      w.addDocument(doc);\n    }\n    w.close();\n    reader = IndexReader.open(rd);\n    searcher = new IndexSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    analyzer = new MockAnalyzer(random());\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"name\", docsContent[i].name, Field.Store.YES));\n      doc.add(newTextField(\"id\", docsContent[i].id, Field.Store.YES));\n      w.addDocument(doc);\n    }\n    w.close();\n    reader = DirectoryReader.open(rd);\n    searcher = new IndexSearcher(reader);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    analyzer = new MockAnalyzer(random());\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"name\", docsContent[i].name, TextField.TYPE_STORED));\n      doc.add(newField(\"id\", docsContent[i].id, TextField.TYPE_STORED));\n      w.addDocument(doc);\n    }\n    w.close();\n    reader = DirectoryReader.open(rd);\n    searcher = new IndexSearcher(reader);\n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc","date":1366056945,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    analyzer = new MockAnalyzer(random());\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"name\", docsContent[i].name, Field.Store.YES));\n      doc.add(newTextField(\"id\", docsContent[i].id, Field.Store.YES));\n      w.addDocument(doc);\n    }\n    w.close();\n    reader = DirectoryReader.open(rd);\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    analyzer = new MockAnalyzer(random());\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"name\", docsContent[i].name, Field.Store.YES));\n      doc.add(newTextField(\"id\", docsContent[i].id, Field.Store.YES));\n      w.addDocument(doc);\n    }\n    w.close();\n    reader = DirectoryReader.open(rd);\n    searcher = new IndexSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cec6d906d357e026331d49bdb721a618ec6577c4","date":1394999319,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    analyzer = new MockAnalyzer(random());\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"name\", docsContent[i].name, Field.Store.YES));\n      doc.add(newTextField(\"id\", docsContent[i].id, Field.Store.YES));\n      doc.add(newTextField(\"role\", docsContent[i].role, Field.Store.YES));\n      w.addDocument(doc);\n    }\n    w.close();\n    reader = DirectoryReader.open(rd);\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    analyzer = new MockAnalyzer(random());\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"name\", docsContent[i].name, Field.Store.YES));\n      doc.add(newTextField(\"id\", docsContent[i].id, Field.Store.YES));\n      w.addDocument(doc);\n    }\n    w.close();\n    reader = DirectoryReader.open(rd);\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    analyzer = new MockAnalyzer(random());\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"name\", docsContent[i].name, Field.Store.YES));\n      doc.add(newTextField(\"id\", docsContent[i].id, Field.Store.YES));\n      doc.add(newTextField(\"role\", docsContent[i].role, Field.Store.YES));\n      w.addDocument(doc);\n    }\n    w.shutdown();\n    reader = DirectoryReader.open(rd);\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    analyzer = new MockAnalyzer(random());\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"name\", docsContent[i].name, Field.Store.YES));\n      doc.add(newTextField(\"id\", docsContent[i].id, Field.Store.YES));\n      doc.add(newTextField(\"role\", docsContent[i].role, Field.Store.YES));\n      w.addDocument(doc);\n    }\n    w.close();\n    reader = DirectoryReader.open(rd);\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    analyzer = new MockAnalyzer(random());\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"name\", docsContent[i].name, Field.Store.YES));\n      doc.add(newTextField(\"id\", docsContent[i].id, Field.Store.YES));\n      doc.add(newTextField(\"role\", docsContent[i].role, Field.Store.YES));\n      w.addDocument(doc);\n    }\n    w.shutdown();\n    reader = DirectoryReader.open(rd);\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    analyzer = new MockAnalyzer(random());\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"name\", docsContent[i].name, Field.Store.YES));\n      doc.add(newTextField(\"id\", docsContent[i].id, Field.Store.YES));\n      doc.add(newTextField(\"role\", docsContent[i].role, Field.Store.YES));\n      w.addDocument(doc);\n    }\n    w.shutdown();\n    reader = DirectoryReader.open(rd);\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    analyzer = new MockAnalyzer(random());\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"name\", docsContent[i].name, Field.Store.YES));\n      doc.add(newTextField(\"id\", docsContent[i].id, Field.Store.YES));\n      doc.add(newTextField(\"role\", docsContent[i].role, Field.Store.YES));\n      w.addDocument(doc);\n    }\n    w.close();\n    reader = DirectoryReader.open(rd);\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    analyzer = new MockAnalyzer(random());\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(\"name\", docsContent[i].name, Field.Store.YES));\n      doc.add(newTextField(\"id\", docsContent[i].id, Field.Store.YES));\n      doc.add(newTextField(\"role\", docsContent[i].role, Field.Store.YES));\n      w.addDocument(doc);\n    }\n    w.shutdown();\n    reader = DirectoryReader.open(rd);\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["cec6d906d357e026331d49bdb721a618ec6577c4"],"cec6d906d357e026331d49bdb721a618ec6577c4":["ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc"],"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"cec6d906d357e026331d49bdb721a618ec6577c4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc":["cec6d906d357e026331d49bdb721a618ec6577c4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}