{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#createAccs(int,int).mjava","commits":[{"id":"9e13d0d4d8b6dc352cb304974502b9a36c153f78","date":1436492687,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#createAccs(int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor[FacetRequest]#createAccs(int,int).mjava","sourceNew":"  protected void createAccs(int docCount, int slotCount) throws IOException {\n    accMap = new LinkedHashMap<>();\n\n    // allow a custom count acc to be used\n    if (countAcc == null) {\n      countAcc = new CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n      acc.key = entry.getKey();\n      accMap.put(acc.key, acc);\n    }\n\n\n    accs = new SlotAcc[accMap.size()];\n    int i=0;\n    for (SlotAcc acc : accMap.values()) {\n      accs[i++] = acc;\n    }\n  }\n\n","sourceOld":"  protected void createAccs(int docCount, int slotCount) throws IOException {\n    accMap = new LinkedHashMap<String,SlotAcc>();\n\n    // allow a custom count acc to be used\n    if (countAcc == null) {\n      countAcc = new CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n      acc.key = entry.getKey();\n      accMap.put(acc.key, acc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79759974460bc59933cd169acc94f5c6b16368d5","date":1471318443,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#createAccs(int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#createAccs(int,int).mjava","sourceNew":"  protected void createAccs(int docCount, int slotCount) throws IOException {\n    accMap = new LinkedHashMap<>();\n\n    // allow a custom count acc to be used\n    if (countAcc == null) {\n      countAcc = new CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n      acc.key = entry.getKey();\n      accMap.put(acc.key, acc);\n    }\n\n    accs = new SlotAcc[accMap.size()];\n    int i=0;\n    for (SlotAcc acc : accMap.values()) {\n      accs[i++] = acc;\n    }\n  }\n\n","sourceOld":"  protected void createAccs(int docCount, int slotCount) throws IOException {\n    accMap = new LinkedHashMap<>();\n\n    // allow a custom count acc to be used\n    if (countAcc == null) {\n      countAcc = new CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n      acc.key = entry.getKey();\n      accMap.put(acc.key, acc);\n    }\n\n\n    accs = new SlotAcc[accMap.size()];\n    int i=0;\n    for (SlotAcc acc : accMap.values()) {\n      accs[i++] = acc;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","date":1471496851,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#createAccs(int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#createAccs(int,int).mjava","sourceNew":"  protected void createAccs(int docCount, int slotCount) throws IOException {\n    accMap = new LinkedHashMap<>();\n\n    // allow a custom count acc to be used\n    if (countAcc == null) {\n      countAcc = new CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n      acc.key = entry.getKey();\n      accMap.put(acc.key, acc);\n    }\n\n    accs = new SlotAcc[accMap.size()];\n    int i=0;\n    for (SlotAcc acc : accMap.values()) {\n      accs[i++] = acc;\n    }\n  }\n\n","sourceOld":"  protected void createAccs(int docCount, int slotCount) throws IOException {\n    accMap = new LinkedHashMap<>();\n\n    // allow a custom count acc to be used\n    if (countAcc == null) {\n      countAcc = new CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n      acc.key = entry.getKey();\n      accMap.put(acc.key, acc);\n    }\n\n\n    accs = new SlotAcc[accMap.size()];\n    int i=0;\n    for (SlotAcc acc : accMap.values()) {\n      accs[i++] = acc;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#createAccs(int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#createAccs(int,int).mjava","sourceNew":"  protected void createAccs(int docCount, int slotCount) throws IOException {\n    accMap = new LinkedHashMap<>();\n\n    // allow a custom count acc to be used\n    if (countAcc == null) {\n      countAcc = new CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n      acc.key = entry.getKey();\n      accMap.put(acc.key, acc);\n    }\n\n    accs = new SlotAcc[accMap.size()];\n    int i=0;\n    for (SlotAcc acc : accMap.values()) {\n      accs[i++] = acc;\n    }\n  }\n\n","sourceOld":"  protected void createAccs(int docCount, int slotCount) throws IOException {\n    accMap = new LinkedHashMap<>();\n\n    // allow a custom count acc to be used\n    if (countAcc == null) {\n      countAcc = new CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n      acc.key = entry.getKey();\n      accMap.put(acc.key, acc);\n    }\n\n\n    accs = new SlotAcc[accMap.size()];\n    int i=0;\n    for (SlotAcc acc : accMap.values()) {\n      accs[i++] = acc;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#createAccs(int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#createAccs(int,int).mjava","sourceNew":"  protected void createAccs(int docCount, int slotCount) throws IOException {\n    accMap = new LinkedHashMap<>();\n\n    // allow a custom count acc to be used\n    if (countAcc == null) {\n      countAcc = new CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n      acc.key = entry.getKey();\n      accMap.put(acc.key, acc);\n    }\n\n    accs = new SlotAcc[accMap.size()];\n    int i=0;\n    for (SlotAcc acc : accMap.values()) {\n      accs[i++] = acc;\n    }\n  }\n\n","sourceOld":"  protected void createAccs(int docCount, int slotCount) throws IOException {\n    accMap = new LinkedHashMap<>();\n\n    // allow a custom count acc to be used\n    if (countAcc == null) {\n      countAcc = new CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n      acc.key = entry.getKey();\n      accMap.put(acc.key, acc);\n    }\n\n\n    accs = new SlotAcc[accMap.size()];\n    int i=0;\n    for (SlotAcc acc : accMap.values()) {\n      accs[i++] = acc;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c841e27891873cab110ebeb89f124a8ec470176","date":1586527220,"type":5,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#createAccs(long,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#createAccs(int,int).mjava","sourceNew":"  protected void createAccs(long docCount, int slotCount) throws IOException {\n    accMap = new LinkedHashMap<>();\n\n    // allow a custom count acc to be used\n    if (countAcc == null) {\n      countAcc = new CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n      acc.key = entry.getKey();\n      accMap.put(acc.key, acc);\n    }\n\n    accs = new SlotAcc[accMap.size()];\n    int i=0;\n    for (SlotAcc acc : accMap.values()) {\n      accs[i++] = acc;\n    }\n  }\n\n","sourceOld":"  protected void createAccs(int docCount, int slotCount) throws IOException {\n    accMap = new LinkedHashMap<>();\n\n    // allow a custom count acc to be used\n    if (countAcc == null) {\n      countAcc = new CountSlotArrAcc(fcontext, slotCount);\n      countAcc.key = \"count\";\n    }\n\n    for (Map.Entry<String,AggValueSource> entry : freq.getFacetStats().entrySet()) {\n      SlotAcc acc = entry.getValue().createSlotAcc(fcontext, docCount, slotCount);\n      acc.key = entry.getKey();\n      accMap.put(acc.key, acc);\n    }\n\n    accs = new SlotAcc[accMap.size()];\n    int i=0;\n    for (SlotAcc acc : accMap.values()) {\n      accs[i++] = acc;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1c841e27891873cab110ebeb89f124a8ec470176":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["9e13d0d4d8b6dc352cb304974502b9a36c153f78","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"9e13d0d4d8b6dc352cb304974502b9a36c153f78":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["9e13d0d4d8b6dc352cb304974502b9a36c153f78","79759974460bc59933cd169acc94f5c6b16368d5"],"79759974460bc59933cd169acc94f5c6b16368d5":["9e13d0d4d8b6dc352cb304974502b9a36c153f78"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["9e13d0d4d8b6dc352cb304974502b9a36c153f78","403d05f7f8d69b65659157eff1bc1d2717f04c66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1c841e27891873cab110ebeb89f124a8ec470176"]},"commit2Childs":{"1c841e27891873cab110ebeb89f124a8ec470176":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["1c841e27891873cab110ebeb89f124a8ec470176","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"9e13d0d4d8b6dc352cb304974502b9a36c153f78":["403d05f7f8d69b65659157eff1bc1d2717f04c66","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","79759974460bc59933cd169acc94f5c6b16368d5","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9e13d0d4d8b6dc352cb304974502b9a36c153f78"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"79759974460bc59933cd169acc94f5c6b16368d5":["2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}