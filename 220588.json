{"path":"solr/solrj/src/java/org/apache/solr/common/util/Utils#toJSON(Object).mjava","commits":[{"id":"b693a83132c9e45afcd564fd65a25b60ed80388b","date":1436882146,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils#toJSON(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#toJSON(Object).mjava","sourceNew":"  //\n  // convenience methods... should these go somewhere else?\n  //\n  public static byte[] toJSON(Object o) {\n    CharArr out = new CharArr();\n    new JSONWriter(out, 2).write(o); // indentation by default\n    return toUTF8(out);\n  }\n\n","sourceOld":"  //\n  // convenience methods... should these go somewhere else?\n  //\n  public static byte[] toJSON(Object o) {\n    CharArr out = new CharArr();\n    new JSONWriter(out, 2).write(o); // indentation by default\n    return toUTF8(out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bdcb86c29922edae9a14852e636303bc52df094","date":1438887454,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils#toJSON(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils#toJSON(Object).mjava","sourceNew":"  public static byte[] toJSON(Object o) {\n    CharArr out = new CharArr();\n    new JSONWriter(out, 2).write(o); // indentation by default\n    return toUTF8(out);\n  }\n\n","sourceOld":"  //\n  // convenience methods... should these go somewhere else?\n  //\n  public static byte[] toJSON(Object o) {\n    CharArr out = new CharArr();\n    new JSONWriter(out, 2).write(o); // indentation by default\n    return toUTF8(out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a2673025c1f6208a4ab731e12f4e98a5e7f257cd","date":1463985317,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils#toJSON(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils#toJSON(Object).mjava","sourceNew":"  public static byte[] toJSON(Object o) {\n    if(o == null) return new byte[0];\n    CharArr out = new CharArr();\n    new JSONWriter(out, 2).write(o); // indentation by default\n    return toUTF8(out);\n  }\n\n","sourceOld":"  public static byte[] toJSON(Object o) {\n    CharArr out = new CharArr();\n    new JSONWriter(out, 2).write(o); // indentation by default\n    return toUTF8(out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils#toJSON(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils#toJSON(Object).mjava","sourceNew":"  public static byte[] toJSON(Object o) {\n    if(o == null) return new byte[0];\n    CharArr out = new CharArr();\n    new JSONWriter(out, 2).write(o); // indentation by default\n    return toUTF8(out);\n  }\n\n","sourceOld":"  public static byte[] toJSON(Object o) {\n    CharArr out = new CharArr();\n    new JSONWriter(out, 2).write(o); // indentation by default\n    return toUTF8(out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b59075a857a3d25d834f6f408491b40845b8ced0","date":1492433183,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils#toJSON(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils#toJSON(Object).mjava","sourceNew":"  public static byte[] toJSON(Object o) {\n    if(o == null) return new byte[0];\n    CharArr out = new CharArr();\n    if (!(o instanceof List) && !(o instanceof Map)) {\n      if (o instanceof MapWriter)  {\n        o = ((MapWriter)o).toMap(new LinkedHashMap<>());\n      } else if(o instanceof IteratorWriter){\n        o = ((IteratorWriter)o).toList(new ArrayList<>());\n      }\n    }\n    new JSONWriter(out, 2).write(o); // indentation by default\n    return toUTF8(out);\n  }\n\n","sourceOld":"  public static byte[] toJSON(Object o) {\n    if(o == null) return new byte[0];\n    CharArr out = new CharArr();\n    new JSONWriter(out, 2).write(o); // indentation by default\n    return toUTF8(out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a513b6a92751e54c76fb5447948c9e7d437163a7","date":1496136565,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils#toJSON(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils#toJSON(Object).mjava","sourceNew":"  public static byte[] toJSON(Object o) {\n    if(o == null) return new byte[0];\n    CharArr out = new CharArr();\n    if (!(o instanceof List) && !(o instanceof Map)) {\n      if (o instanceof MapWriter)  {\n        o = ((MapWriter)o).toMap(new LinkedHashMap<>());\n      } else if(o instanceof IteratorWriter){\n        o = ((IteratorWriter)o).toList(new ArrayList<>());\n      }\n    }\n    new JSONWriter(out, 2).write(o); // indentation by default\n    return toUTF8(out);\n  }\n\n","sourceOld":"  public static byte[] toJSON(Object o) {\n    if(o == null) return new byte[0];\n    CharArr out = new CharArr();\n    new JSONWriter(out, 2).write(o); // indentation by default\n    return toUTF8(out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74aea047dff7f7c38a2d766827bd20d356f98c6a","date":1496721416,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils#toJSON(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils#toJSON(Object).mjava","sourceNew":"  public static byte[] toJSON(Object o) {\n    if(o == null) return new byte[0];\n    CharArr out = new CharArr();\n    if (!(o instanceof List) && !(o instanceof Map)) {\n      if (o instanceof MapWriter)  {\n        o = ((MapWriter)o).toMap(new LinkedHashMap<>());\n      } else if(o instanceof IteratorWriter){\n        o = ((IteratorWriter)o).toList(new ArrayList<>());\n      }\n    }\n    new JSONWriter(out, 2).write(o); // indentation by default\n    return toUTF8(out);\n  }\n\n","sourceOld":"  public static byte[] toJSON(Object o) {\n    if(o == null) return new byte[0];\n    CharArr out = new CharArr();\n    new JSONWriter(out, 2).write(o); // indentation by default\n    return toUTF8(out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils#toJSON(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils#toJSON(Object).mjava","sourceNew":"  public static byte[] toJSON(Object o) {\n    if(o == null) return new byte[0];\n    CharArr out = new CharArr();\n    if (!(o instanceof List) && !(o instanceof Map)) {\n      if (o instanceof MapWriter)  {\n        o = ((MapWriter)o).toMap(new LinkedHashMap<>());\n      } else if(o instanceof IteratorWriter){\n        o = ((IteratorWriter)o).toList(new ArrayList<>());\n      }\n    }\n    new JSONWriter(out, 2).write(o); // indentation by default\n    return toUTF8(out);\n  }\n\n","sourceOld":"  public static byte[] toJSON(Object o) {\n    if(o == null) return new byte[0];\n    CharArr out = new CharArr();\n    new JSONWriter(out, 2).write(o); // indentation by default\n    return toUTF8(out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"976feb6756f29529c6ce5b578e7d6fa8b1efcb30","date":1535461878,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils#toJSON(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils#toJSON(Object).mjava","sourceNew":"  public static byte[] toJSON(Object o) {\n    if(o == null) return new byte[0];\n    CharArr out = new CharArr();\n    if (!(o instanceof List) && !(o instanceof Map)) {\n      if (o instanceof MapWriter)  {\n        o = ((MapWriter)o).toMap(new LinkedHashMap<>());\n      } else if(o instanceof IteratorWriter){\n        o = ((IteratorWriter)o).toList(new ArrayList<>());\n      }\n    }\n    new MapWriterJSONWriter(out, 2).write(o); // indentation by default\n    return toUTF8(out);\n  }\n\n","sourceOld":"  public static byte[] toJSON(Object o) {\n    if(o == null) return new byte[0];\n    CharArr out = new CharArr();\n    if (!(o instanceof List) && !(o instanceof Map)) {\n      if (o instanceof MapWriter)  {\n        o = ((MapWriter)o).toMap(new LinkedHashMap<>());\n      } else if(o instanceof IteratorWriter){\n        o = ((IteratorWriter)o).toList(new ArrayList<>());\n      }\n    }\n    new JSONWriter(out, 2).write(o); // indentation by default\n    return toUTF8(out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb50877dc038c021eba3a70999fd1f6ed85001c1","date":1563596432,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils#toJSON(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils#toJSON(Object).mjava","sourceNew":"  public static byte[] toJSON(Object o) {\n    if (o == null) return new byte[0];\n    CharArr out = new CharArr();\n    if (!(o instanceof List) && !(o instanceof Map)) {\n      if (o instanceof MapWriter) {\n        o = ((MapWriter) o).toMap(new LinkedHashMap<>());\n      } else if (o instanceof IteratorWriter) {\n        o = ((IteratorWriter) o).toList(new ArrayList<>());\n      }\n    }\n    new MapWriterJSONWriter(out, 2).write(o); // indentation by default\n    return toUTF8(out);\n  }\n\n","sourceOld":"  public static byte[] toJSON(Object o) {\n    if(o == null) return new byte[0];\n    CharArr out = new CharArr();\n    if (!(o instanceof List) && !(o instanceof Map)) {\n      if (o instanceof MapWriter)  {\n        o = ((MapWriter)o).toMap(new LinkedHashMap<>());\n      } else if(o instanceof IteratorWriter){\n        o = ((IteratorWriter)o).toList(new ArrayList<>());\n      }\n    }\n    new MapWriterJSONWriter(out, 2).write(o); // indentation by default\n    return toUTF8(out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c44cc06c26e456fe9c215072b79fce30babe3975","date":1570365040,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils#toJSON(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils#toJSON(Object).mjava","sourceNew":"  public static byte[] toJSON(Object o) {\n    if(o == null) return new byte[0];\n    CharArr out = new CharArr();\n    if (!(o instanceof List) && !(o instanceof Map)) {\n      if (o instanceof MapWriter)  {\n        o = ((MapWriter)o).toMap(new LinkedHashMap<>());\n      } else if(o instanceof IteratorWriter){\n        o = ((IteratorWriter)o).toList(new ArrayList<>());\n      }\n    }\n    new MapWriterJSONWriter(out, 2).write(o); // indentation by default\n    return toUTF8(out);\n  }\n\n","sourceOld":"  public static byte[] toJSON(Object o) {\n    if (o == null) return new byte[0];\n    CharArr out = new CharArr();\n    if (!(o instanceof List) && !(o instanceof Map)) {\n      if (o instanceof MapWriter) {\n        o = ((MapWriter) o).toMap(new LinkedHashMap<>());\n      } else if (o instanceof IteratorWriter) {\n        o = ((IteratorWriter) o).toList(new ArrayList<>());\n      }\n    }\n    new MapWriterJSONWriter(out, 2).write(o); // indentation by default\n    return toUTF8(out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8476949555f799dff381770c01cfad051a264487","date":1570505073,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils#toJSON(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils#toJSON(Object).mjava","sourceNew":"  public static byte[] toJSON(Object o) {\n    if (o == null) return new byte[0];\n    CharArr out = new CharArr();\n    if (!(o instanceof List) && !(o instanceof Map)) {\n      if (o instanceof MapWriter) {\n        o = ((MapWriter) o).toMap(new LinkedHashMap<>());\n      } else if (o instanceof IteratorWriter) {\n        o = ((IteratorWriter) o).toList(new ArrayList<>());\n      }\n    }\n    new MapWriterJSONWriter(out, 2).write(o); // indentation by default\n    return toUTF8(out);\n  }\n\n","sourceOld":"  public static byte[] toJSON(Object o) {\n    if(o == null) return new byte[0];\n    CharArr out = new CharArr();\n    if (!(o instanceof List) && !(o instanceof Map)) {\n      if (o instanceof MapWriter)  {\n        o = ((MapWriter)o).toMap(new LinkedHashMap<>());\n      } else if(o instanceof IteratorWriter){\n        o = ((IteratorWriter)o).toList(new ArrayList<>());\n      }\n    }\n    new MapWriterJSONWriter(out, 2).write(o); // indentation by default\n    return toUTF8(out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"233211c3dbff6f367588be5bbb4ac77f72eae193","date":1602085975,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils#toJSON(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils#toJSON(Object).mjava","sourceNew":"  public static byte[] toJSON(Object o) {\n    if (o == null) return new byte[0];\n    CharArr out = new CharArr();\n//    if (!(o instanceof List) && !(o instanceof Map)) {\n//      if (o instanceof MapWriter) {\n//        o = ((MapWriter) o).toMap(new LinkedHashMap<>());\n//      } else if (o instanceof IteratorWriter) {\n//        o = ((IteratorWriter) o).toList(new ArrayList<>());\n//      }\n//    }\n    new MapWriterJSONWriter(out, 2).write(o); // indentation by default\n    return toUTF8(out);\n  }\n\n","sourceOld":"  public static byte[] toJSON(Object o) {\n    if (o == null) return new byte[0];\n    CharArr out = new CharArr();\n    if (!(o instanceof List) && !(o instanceof Map)) {\n      if (o instanceof MapWriter) {\n        o = ((MapWriter) o).toMap(new LinkedHashMap<>());\n      } else if (o instanceof IteratorWriter) {\n        o = ((IteratorWriter) o).toList(new ArrayList<>());\n      }\n    }\n    new MapWriterJSONWriter(out, 2).write(o); // indentation by default\n    return toUTF8(out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6bdcb86c29922edae9a14852e636303bc52df094":["b693a83132c9e45afcd564fd65a25b60ed80388b"],"b693a83132c9e45afcd564fd65a25b60ed80388b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"233211c3dbff6f367588be5bbb4ac77f72eae193":["8476949555f799dff381770c01cfad051a264487"],"8476949555f799dff381770c01cfad051a264487":["c44cc06c26e456fe9c215072b79fce30babe3975"],"c44cc06c26e456fe9c215072b79fce30babe3975":["fb50877dc038c021eba3a70999fd1f6ed85001c1"],"28288370235ed02234a64753cdbf0c6ec096304a":["a2673025c1f6208a4ab731e12f4e98a5e7f257cd","74aea047dff7f7c38a2d766827bd20d356f98c6a"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["6bdcb86c29922edae9a14852e636303bc52df094","a2673025c1f6208a4ab731e12f4e98a5e7f257cd"],"fb50877dc038c021eba3a70999fd1f6ed85001c1":["976feb6756f29529c6ce5b578e7d6fa8b1efcb30"],"74aea047dff7f7c38a2d766827bd20d356f98c6a":["a2673025c1f6208a4ab731e12f4e98a5e7f257cd","a513b6a92751e54c76fb5447948c9e7d437163a7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a513b6a92751e54c76fb5447948c9e7d437163a7":["a2673025c1f6208a4ab731e12f4e98a5e7f257cd"],"b59075a857a3d25d834f6f408491b40845b8ced0":["a2673025c1f6208a4ab731e12f4e98a5e7f257cd"],"976feb6756f29529c6ce5b578e7d6fa8b1efcb30":["28288370235ed02234a64753cdbf0c6ec096304a"],"a2673025c1f6208a4ab731e12f4e98a5e7f257cd":["6bdcb86c29922edae9a14852e636303bc52df094"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["233211c3dbff6f367588be5bbb4ac77f72eae193"]},"commit2Childs":{"6bdcb86c29922edae9a14852e636303bc52df094":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","a2673025c1f6208a4ab731e12f4e98a5e7f257cd"],"b693a83132c9e45afcd564fd65a25b60ed80388b":["6bdcb86c29922edae9a14852e636303bc52df094"],"233211c3dbff6f367588be5bbb4ac77f72eae193":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8476949555f799dff381770c01cfad051a264487":["233211c3dbff6f367588be5bbb4ac77f72eae193"],"c44cc06c26e456fe9c215072b79fce30babe3975":["8476949555f799dff381770c01cfad051a264487"],"28288370235ed02234a64753cdbf0c6ec096304a":["976feb6756f29529c6ce5b578e7d6fa8b1efcb30"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"fb50877dc038c021eba3a70999fd1f6ed85001c1":["c44cc06c26e456fe9c215072b79fce30babe3975"],"74aea047dff7f7c38a2d766827bd20d356f98c6a":["28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b693a83132c9e45afcd564fd65a25b60ed80388b"],"a513b6a92751e54c76fb5447948c9e7d437163a7":["74aea047dff7f7c38a2d766827bd20d356f98c6a"],"b59075a857a3d25d834f6f408491b40845b8ced0":[],"976feb6756f29529c6ce5b578e7d6fa8b1efcb30":["fb50877dc038c021eba3a70999fd1f6ed85001c1"],"a2673025c1f6208a4ab731e12f4e98a5e7f257cd":["28288370235ed02234a64753cdbf0c6ec096304a","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","74aea047dff7f7c38a2d766827bd20d356f98c6a","a513b6a92751e54c76fb5447948c9e7d437163a7","b59075a857a3d25d834f6f408491b40845b8ced0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","b59075a857a3d25d834f6f408491b40845b8ced0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}