{"path":"src/test/org/apache/solr/util/SolrDocumentTest#testUnsupportedStuff().mjava","commits":[{"id":"2090964b44752cbb9eef4d981d8df1e2c13cec1f","date":1181757460,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/util/SolrDocumentTest#testUnsupportedStuff().mjava","pathOld":"/dev/null","sourceNew":"  public void testUnsupportedStuff()\n  {\n    SolrDocument doc = new SolrDocument();\n\n    try { doc.getFieldValueMap().clear();               fail( \"should be unsupported!\" ); } catch( Exception ex ){}\n    try { doc.getFieldValueMap().containsValue( null ); fail( \"should be unsupported!\" ); } catch( Exception ex ){}\n    try { doc.getFieldValueMap().entrySet();            fail( \"should be unsupported!\" ); } catch( Exception ex ){}\n    try { doc.getFieldValueMap().putAll( null );        fail( \"should be unsupported!\" ); } catch( Exception ex ){}\n    try { doc.getFieldValueMap().values();              fail( \"should be unsupported!\" ); } catch( Exception ex ){}\n\n    assertEquals( null, doc.getFieldValueMap().get( \"aaa\" ) );\n    doc.setField( \"aaa\", \"bbb\" );\n    assertEquals( \"bbb\", doc.getFieldValueMap().get( \"aaa\" ) );\n    doc.getFieldValueMap().remove( \"aaa\" );\n    assertEquals( null, doc.getFieldValueMap().get( \"aaa\" ) );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb","date":1181791578,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/common/SolrDocumentTest#testUnsupportedStuff().mjava","pathOld":"src/test/org/apache/solr/util/SolrDocumentTest#testUnsupportedStuff().mjava","sourceNew":"  public void testUnsupportedStuff()\n  {\n    SolrDocument doc = new SolrDocument();\n\n    try { doc.getFieldValueMap().clear();               fail( \"should be unsupported!\" ); } catch( Exception ex ){}\n    try { doc.getFieldValueMap().containsValue( null ); fail( \"should be unsupported!\" ); } catch( Exception ex ){}\n    try { doc.getFieldValueMap().entrySet();            fail( \"should be unsupported!\" ); } catch( Exception ex ){}\n    try { doc.getFieldValueMap().putAll( null );        fail( \"should be unsupported!\" ); } catch( Exception ex ){}\n    try { doc.getFieldValueMap().values();              fail( \"should be unsupported!\" ); } catch( Exception ex ){}\n\n    assertEquals( null, doc.getFieldValueMap().get( \"aaa\" ) );\n    doc.setField( \"aaa\", \"bbb\" );\n    assertEquals( \"bbb\", doc.getFieldValueMap().get( \"aaa\" ) );\n    doc.getFieldValueMap().remove( \"aaa\" );\n    assertEquals( null, doc.getFieldValueMap().get( \"aaa\" ) );\n  }\n\n","sourceOld":"  public void testUnsupportedStuff()\n  {\n    SolrDocument doc = new SolrDocument();\n\n    try { doc.getFieldValueMap().clear();               fail( \"should be unsupported!\" ); } catch( Exception ex ){}\n    try { doc.getFieldValueMap().containsValue( null ); fail( \"should be unsupported!\" ); } catch( Exception ex ){}\n    try { doc.getFieldValueMap().entrySet();            fail( \"should be unsupported!\" ); } catch( Exception ex ){}\n    try { doc.getFieldValueMap().putAll( null );        fail( \"should be unsupported!\" ); } catch( Exception ex ){}\n    try { doc.getFieldValueMap().values();              fail( \"should be unsupported!\" ); } catch( Exception ex ){}\n\n    assertEquals( null, doc.getFieldValueMap().get( \"aaa\" ) );\n    doc.setField( \"aaa\", \"bbb\" );\n    assertEquals( \"bbb\", doc.getFieldValueMap().get( \"aaa\" ) );\n    doc.getFieldValueMap().remove( \"aaa\" );\n    assertEquals( null, doc.getFieldValueMap().get( \"aaa\" ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb":["2090964b44752cbb9eef4d981d8df1e2c13cec1f"],"2090964b44752cbb9eef4d981d8df1e2c13cec1f":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb":[],"2090964b44752cbb9eef4d981d8df1e2c13cec1f":["3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["2090964b44752cbb9eef4d981d8df1e2c13cec1f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}