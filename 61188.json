{"path":"solr/src/java/org/apache/solr/search/SolrQueryParser#SolrQueryParser(IndexSchema,String).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/SolrQueryParser#SolrQueryParser(IndexSchema,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Constructs a SolrQueryParser using the schema to understand the\n   * formats and datatypes of each field.  Only the defaultSearchField\n   * will be used from the IndexSchema (unless overridden),\n   * &lt;solrQueryParser&gt; will not be used.\n   * \n   * @param schema Used for default search field name if defaultField is null and field information is used for analysis\n   * @param defaultField default field used for unspecified search terms.  if null, the schema default field is used\n   * @see IndexSchema#getDefaultSearchFieldName()\n   */\n  public SolrQueryParser(IndexSchema schema, String defaultField) {\n    super(defaultField == null ? schema.getDefaultSearchFieldName() : defaultField, schema.getQueryAnalyzer());\n    this.schema = schema;\n    this.parser  = null;\n    this.defaultField = defaultField;\n    setLowercaseExpandedTerms(false);\n    setEnablePositionIncrements(true);\n    checkAllowLeadingWildcards();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/search/SolrQueryParser#SolrQueryParser(IndexSchema,String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Constructs a SolrQueryParser using the schema to understand the\n   * formats and datatypes of each field.  Only the defaultSearchField\n   * will be used from the IndexSchema (unless overridden),\n   * &lt;solrQueryParser&gt; will not be used.\n   * \n   * @param schema Used for default search field name if defaultField is null and field information is used for analysis\n   * @param defaultField default field used for unspecified search terms.  if null, the schema default field is used\n   * @see IndexSchema#getDefaultSearchFieldName()\n   */\n  public SolrQueryParser(IndexSchema schema, String defaultField) {\n    super(defaultField == null ? schema.getDefaultSearchFieldName() : defaultField, schema.getQueryAnalyzer());\n    this.schema = schema;\n    this.parser  = null;\n    this.defaultField = defaultField;\n    setLowercaseExpandedTerms(false);\n    setEnablePositionIncrements(true);\n    checkAllowLeadingWildcards();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/SolrQueryParser#SolrQueryParser(IndexSchema,String).mjava","pathOld":"src/java/org/apache/solr/search/SolrQueryParser#SolrQueryParser(IndexSchema,String).mjava","sourceNew":"  /**\n   * Constructs a SolrQueryParser using the schema to understand the\n   * formats and datatypes of each field.  Only the defaultSearchField\n   * will be used from the IndexSchema (unless overridden),\n   * &lt;solrQueryParser&gt; will not be used.\n   * \n   * @param schema Used for default search field name if defaultField is null and field information is used for analysis\n   * @param defaultField default field used for unspecified search terms.  if null, the schema default field is used\n   * @see IndexSchema#getDefaultSearchFieldName()\n   */\n  public SolrQueryParser(IndexSchema schema, String defaultField) {\n    super(schema.getSolrConfig().getLuceneVersion(\"luceneMatchVersion\", Version.LUCENE_24), defaultField == null ? schema.getDefaultSearchFieldName() : defaultField, schema.getQueryAnalyzer());\n    this.schema = schema;\n    this.parser  = null;\n    this.defaultField = defaultField;\n    setLowercaseExpandedTerms(false);\n    setEnablePositionIncrements(true);\n    checkAllowLeadingWildcards();\n  }\n\n","sourceOld":"  /**\n   * Constructs a SolrQueryParser using the schema to understand the\n   * formats and datatypes of each field.  Only the defaultSearchField\n   * will be used from the IndexSchema (unless overridden),\n   * &lt;solrQueryParser&gt; will not be used.\n   * \n   * @param schema Used for default search field name if defaultField is null and field information is used for analysis\n   * @param defaultField default field used for unspecified search terms.  if null, the schema default field is used\n   * @see IndexSchema#getDefaultSearchFieldName()\n   */\n  public SolrQueryParser(IndexSchema schema, String defaultField) {\n    super(schema.getSolrConfig().getLuceneVersion(\"luceneMatchVersion\", Version.LUCENE_24), defaultField == null ? schema.getDefaultSearchFieldName() : defaultField, schema.getQueryAnalyzer());\n    this.schema = schema;\n    this.parser  = null;\n    this.defaultField = defaultField;\n    setLowercaseExpandedTerms(false);\n    setEnablePositionIncrements(true);\n    checkAllowLeadingWildcards();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/SolrQueryParser#SolrQueryParser(IndexSchema,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Constructs a SolrQueryParser using the schema to understand the\n   * formats and datatypes of each field.  Only the defaultSearchField\n   * will be used from the IndexSchema (unless overridden),\n   * &lt;solrQueryParser&gt; will not be used.\n   * \n   * @param schema Used for default search field name if defaultField is null and field information is used for analysis\n   * @param defaultField default field used for unspecified search terms.  if null, the schema default field is used\n   * @see IndexSchema#getDefaultSearchFieldName()\n   */\n  public SolrQueryParser(IndexSchema schema, String defaultField) {\n    super(schema.getSolrConfig().getLuceneVersion(\"luceneMatchVersion\", Version.LUCENE_24), defaultField == null ? schema.getDefaultSearchFieldName() : defaultField, schema.getQueryAnalyzer());\n    this.schema = schema;\n    this.parser  = null;\n    this.defaultField = defaultField;\n    setLowercaseExpandedTerms(false);\n    setEnablePositionIncrements(true);\n    checkAllowLeadingWildcards();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cdc85ff8f5e821ac2fed86b5ddd98c5277e09260","date":1279982338,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/SolrQueryParser#SolrQueryParser(IndexSchema,String).mjava","pathOld":"solr/src/java/org/apache/solr/search/SolrQueryParser#SolrQueryParser(IndexSchema,String).mjava","sourceNew":"  /**\n   * Constructs a SolrQueryParser using the schema to understand the\n   * formats and datatypes of each field.  Only the defaultSearchField\n   * will be used from the IndexSchema (unless overridden),\n   * &lt;solrQueryParser&gt; will not be used.\n   * \n   * @param schema Used for default search field name if defaultField is null and field information is used for analysis\n   * @param defaultField default field used for unspecified search terms.  if null, the schema default field is used\n   * @see IndexSchema#getDefaultSearchFieldName()\n   */\n  public SolrQueryParser(IndexSchema schema, String defaultField) {\n    super(Version.LUCENE_24, defaultField == null ? schema.getDefaultSearchFieldName() : defaultField, schema.getQueryAnalyzer());\n    this.schema = schema;\n    this.parser  = null;\n    this.defaultField = defaultField;\n    setLowercaseExpandedTerms(false);\n    setEnablePositionIncrements(true);\n    checkAllowLeadingWildcards();\n  }\n\n","sourceOld":"  /**\n   * Constructs a SolrQueryParser using the schema to understand the\n   * formats and datatypes of each field.  Only the defaultSearchField\n   * will be used from the IndexSchema (unless overridden),\n   * &lt;solrQueryParser&gt; will not be used.\n   * \n   * @param schema Used for default search field name if defaultField is null and field information is used for analysis\n   * @param defaultField default field used for unspecified search terms.  if null, the schema default field is used\n   * @see IndexSchema#getDefaultSearchFieldName()\n   */\n  public SolrQueryParser(IndexSchema schema, String defaultField) {\n    super(schema.getSolrConfig().getLuceneVersion(\"luceneMatchVersion\", Version.LUCENE_24), defaultField == null ? schema.getDefaultSearchFieldName() : defaultField, schema.getQueryAnalyzer());\n    this.schema = schema;\n    this.parser  = null;\n    this.defaultField = defaultField;\n    setLowercaseExpandedTerms(false);\n    setEnablePositionIncrements(true);\n    checkAllowLeadingWildcards();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"205b7b417ae0131bc5ee089518ba2c693274177e","date":1279988571,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/SolrQueryParser#SolrQueryParser(IndexSchema,String).mjava","pathOld":"solr/src/java/org/apache/solr/search/SolrQueryParser#SolrQueryParser(IndexSchema,String).mjava","sourceNew":"  /**\n   * Constructs a SolrQueryParser using the schema to understand the\n   * formats and datatypes of each field.  Only the defaultSearchField\n   * will be used from the IndexSchema (unless overridden),\n   * &lt;solrQueryParser&gt; will not be used.\n   * \n   * @param schema Used for default search field name if defaultField is null and field information is used for analysis\n   * @param defaultField default field used for unspecified search terms.  if null, the schema default field is used\n   * @see IndexSchema#getDefaultSearchFieldName()\n   */\n  public SolrQueryParser(IndexSchema schema, String defaultField) {\n    super(schema.getSolrConfig().getLuceneVersion(\"luceneMatchVersion\", Version.LUCENE_24), defaultField == null ? schema.getDefaultSearchFieldName() : defaultField, schema.getQueryAnalyzer());\n    this.schema = schema;\n    this.parser  = null;\n    this.defaultField = defaultField;\n    setLowercaseExpandedTerms(false);\n    setEnablePositionIncrements(true);\n    checkAllowLeadingWildcards();\n  }\n\n","sourceOld":"  /**\n   * Constructs a SolrQueryParser using the schema to understand the\n   * formats and datatypes of each field.  Only the defaultSearchField\n   * will be used from the IndexSchema (unless overridden),\n   * &lt;solrQueryParser&gt; will not be used.\n   * \n   * @param schema Used for default search field name if defaultField is null and field information is used for analysis\n   * @param defaultField default field used for unspecified search terms.  if null, the schema default field is used\n   * @see IndexSchema#getDefaultSearchFieldName()\n   */\n  public SolrQueryParser(IndexSchema schema, String defaultField) {\n    super(Version.LUCENE_24, defaultField == null ? schema.getDefaultSearchFieldName() : defaultField, schema.getQueryAnalyzer());\n    this.schema = schema;\n    this.parser  = null;\n    this.defaultField = defaultField;\n    setLowercaseExpandedTerms(false);\n    setEnablePositionIncrements(true);\n    checkAllowLeadingWildcards();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"202240bbf7f80302f5b0f7b57464520338b645d7","date":1279990158,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/SolrQueryParser#SolrQueryParser(IndexSchema,String).mjava","pathOld":"solr/src/java/org/apache/solr/search/SolrQueryParser#SolrQueryParser(IndexSchema,String).mjava","sourceNew":"  /**\n   * Constructs a SolrQueryParser using the schema to understand the\n   * formats and datatypes of each field.  Only the defaultSearchField\n   * will be used from the IndexSchema (unless overridden),\n   * &lt;solrQueryParser&gt; will not be used.\n   * \n   * @param schema Used for default search field name if defaultField is null and field information is used for analysis\n   * @param defaultField default field used for unspecified search terms.  if null, the schema default field is used\n   * @see IndexSchema#getDefaultSearchFieldName()\n   */\n  public SolrQueryParser(IndexSchema schema, String defaultField) {\n    super(schema.getSolrConfig().getLuceneVersion(\"luceneMatchVersion\", Version.LUCENE_24), defaultField == null ? schema.getDefaultSearchFieldName() : defaultField, schema.getQueryAnalyzer());\n    this.schema = schema;\n    this.parser  = null;\n    this.defaultField = defaultField;\n    setLowercaseExpandedTerms(false);\n    setEnablePositionIncrements(true);\n    setAutoGeneratePhraseQueries(true);\n    checkAllowLeadingWildcards();\n  }\n\n","sourceOld":"  /**\n   * Constructs a SolrQueryParser using the schema to understand the\n   * formats and datatypes of each field.  Only the defaultSearchField\n   * will be used from the IndexSchema (unless overridden),\n   * &lt;solrQueryParser&gt; will not be used.\n   * \n   * @param schema Used for default search field name if defaultField is null and field information is used for analysis\n   * @param defaultField default field used for unspecified search terms.  if null, the schema default field is used\n   * @see IndexSchema#getDefaultSearchFieldName()\n   */\n  public SolrQueryParser(IndexSchema schema, String defaultField) {\n    super(schema.getSolrConfig().getLuceneVersion(\"luceneMatchVersion\", Version.LUCENE_24), defaultField == null ? schema.getDefaultSearchFieldName() : defaultField, schema.getQueryAnalyzer());\n    this.schema = schema;\n    this.parser  = null;\n    this.defaultField = defaultField;\n    setLowercaseExpandedTerms(false);\n    setEnablePositionIncrements(true);\n    checkAllowLeadingWildcards();\n  }\n\n","bugFix":null,"bugIntro":["d5658c275c711edfbecdaa6035b2c23b3f6c113e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d5658c275c711edfbecdaa6035b2c23b3f6c113e","date":1279990587,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/SolrQueryParser#SolrQueryParser(IndexSchema,String).mjava","pathOld":"solr/src/java/org/apache/solr/search/SolrQueryParser#SolrQueryParser(IndexSchema,String).mjava","sourceNew":"  /**\n   * Constructs a SolrQueryParser using the schema to understand the\n   * formats and datatypes of each field.  Only the defaultSearchField\n   * will be used from the IndexSchema (unless overridden),\n   * &lt;solrQueryParser&gt; will not be used.\n   * \n   * @param schema Used for default search field name if defaultField is null and field information is used for analysis\n   * @param defaultField default field used for unspecified search terms.  if null, the schema default field is used\n   * @see IndexSchema#getDefaultSearchFieldName()\n   */\n  public SolrQueryParser(IndexSchema schema, String defaultField) {\n    super(schema.getSolrConfig().getLuceneVersion(\"luceneMatchVersion\", Version.LUCENE_24), defaultField == null ? schema.getDefaultSearchFieldName() : defaultField, schema.getQueryAnalyzer());\n    this.schema = schema;\n    this.parser  = null;\n    this.defaultField = defaultField;\n    setLowercaseExpandedTerms(false);\n    setEnablePositionIncrements(true);\n    checkAllowLeadingWildcards();\n  }\n\n","sourceOld":"  /**\n   * Constructs a SolrQueryParser using the schema to understand the\n   * formats and datatypes of each field.  Only the defaultSearchField\n   * will be used from the IndexSchema (unless overridden),\n   * &lt;solrQueryParser&gt; will not be used.\n   * \n   * @param schema Used for default search field name if defaultField is null and field information is used for analysis\n   * @param defaultField default field used for unspecified search terms.  if null, the schema default field is used\n   * @see IndexSchema#getDefaultSearchFieldName()\n   */\n  public SolrQueryParser(IndexSchema schema, String defaultField) {\n    super(schema.getSolrConfig().getLuceneVersion(\"luceneMatchVersion\", Version.LUCENE_24), defaultField == null ? schema.getDefaultSearchFieldName() : defaultField, schema.getQueryAnalyzer());\n    this.schema = schema;\n    this.parser  = null;\n    this.defaultField = defaultField;\n    setLowercaseExpandedTerms(false);\n    setEnablePositionIncrements(true);\n    setAutoGeneratePhraseQueries(true);\n    checkAllowLeadingWildcards();\n  }\n\n","bugFix":["202240bbf7f80302f5b0f7b57464520338b645d7"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/SolrQueryParser#SolrQueryParser(IndexSchema,String).mjava","pathOld":"solr/src/java/org/apache/solr/search/SolrQueryParser#SolrQueryParser(IndexSchema,String).mjava","sourceNew":"  /**\n   * Constructs a SolrQueryParser using the schema to understand the\n   * formats and datatypes of each field.  Only the defaultSearchField\n   * will be used from the IndexSchema (unless overridden),\n   * &lt;solrQueryParser&gt; will not be used.\n   * \n   * @param schema Used for default search field name if defaultField is null and field information is used for analysis\n   * @param defaultField default field used for unspecified search terms.  if null, the schema default field is used\n   * @see IndexSchema#getDefaultSearchFieldName()\n   */\n  public SolrQueryParser(IndexSchema schema, String defaultField) {\n    super(schema.getSolrConfig().getLuceneVersion(\"luceneMatchVersion\", Version.LUCENE_30), defaultField == null ? schema.getDefaultSearchFieldName() : defaultField, schema.getQueryAnalyzer());\n    this.schema = schema;\n    this.parser  = null;\n    this.defaultField = defaultField;\n    setLowercaseExpandedTerms(false);\n    setEnablePositionIncrements(true);\n    checkAllowLeadingWildcards();\n  }\n\n","sourceOld":"  /**\n   * Constructs a SolrQueryParser using the schema to understand the\n   * formats and datatypes of each field.  Only the defaultSearchField\n   * will be used from the IndexSchema (unless overridden),\n   * &lt;solrQueryParser&gt; will not be used.\n   * \n   * @param schema Used for default search field name if defaultField is null and field information is used for analysis\n   * @param defaultField default field used for unspecified search terms.  if null, the schema default field is used\n   * @see IndexSchema#getDefaultSearchFieldName()\n   */\n  public SolrQueryParser(IndexSchema schema, String defaultField) {\n    super(schema.getSolrConfig().getLuceneVersion(\"luceneMatchVersion\", Version.LUCENE_24), defaultField == null ? schema.getDefaultSearchFieldName() : defaultField, schema.getQueryAnalyzer());\n    this.schema = schema;\n    this.parser  = null;\n    this.defaultField = defaultField;\n    setLowercaseExpandedTerms(false);\n    setEnablePositionIncrements(true);\n    checkAllowLeadingWildcards();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/SolrQueryParser#SolrQueryParser(IndexSchema,String).mjava","pathOld":"solr/src/java/org/apache/solr/search/SolrQueryParser#SolrQueryParser(IndexSchema,String).mjava","sourceNew":"  /**\n   * Constructs a SolrQueryParser using the schema to understand the\n   * formats and datatypes of each field.  Only the defaultSearchField\n   * will be used from the IndexSchema (unless overridden),\n   * &lt;solrQueryParser&gt; will not be used.\n   * \n   * @param schema Used for default search field name if defaultField is null and field information is used for analysis\n   * @param defaultField default field used for unspecified search terms.  if null, the schema default field is used\n   * @see IndexSchema#getDefaultSearchFieldName()\n   */\n  public SolrQueryParser(IndexSchema schema, String defaultField) {\n    super(schema.getSolrConfig().getLuceneVersion(\"luceneMatchVersion\", Version.LUCENE_30), defaultField == null ? schema.getDefaultSearchFieldName() : defaultField, schema.getQueryAnalyzer());\n    this.schema = schema;\n    this.parser  = null;\n    this.defaultField = defaultField;\n    setLowercaseExpandedTerms(false);\n    setEnablePositionIncrements(true);\n    checkAllowLeadingWildcards();\n  }\n\n","sourceOld":"  /**\n   * Constructs a SolrQueryParser using the schema to understand the\n   * formats and datatypes of each field.  Only the defaultSearchField\n   * will be used from the IndexSchema (unless overridden),\n   * &lt;solrQueryParser&gt; will not be used.\n   * \n   * @param schema Used for default search field name if defaultField is null and field information is used for analysis\n   * @param defaultField default field used for unspecified search terms.  if null, the schema default field is used\n   * @see IndexSchema#getDefaultSearchFieldName()\n   */\n  public SolrQueryParser(IndexSchema schema, String defaultField) {\n    super(schema.getSolrConfig().getLuceneVersion(\"luceneMatchVersion\", Version.LUCENE_24), defaultField == null ? schema.getDefaultSearchFieldName() : defaultField, schema.getQueryAnalyzer());\n    this.schema = schema;\n    this.parser  = null;\n    this.defaultField = defaultField;\n    setLowercaseExpandedTerms(false);\n    setEnablePositionIncrements(true);\n    checkAllowLeadingWildcards();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/SolrQueryParser#SolrQueryParser(IndexSchema,String).mjava","pathOld":"solr/src/java/org/apache/solr/search/SolrQueryParser#SolrQueryParser(IndexSchema,String).mjava","sourceNew":"  /**\n   * Constructs a SolrQueryParser using the schema to understand the\n   * formats and datatypes of each field.  Only the defaultSearchField\n   * will be used from the IndexSchema (unless overridden),\n   * &lt;solrQueryParser&gt; will not be used.\n   * \n   * @param schema Used for default search field name if defaultField is null and field information is used for analysis\n   * @param defaultField default field used for unspecified search terms.  if null, the schema default field is used\n   * @see IndexSchema#getDefaultSearchFieldName()\n   */\n  public SolrQueryParser(IndexSchema schema, String defaultField) {\n    super(schema.getSolrConfig().getLuceneVersion(\"luceneMatchVersion\", Version.LUCENE_30), defaultField == null ? schema.getDefaultSearchFieldName() : defaultField, schema.getQueryAnalyzer());\n    this.schema = schema;\n    this.parser  = null;\n    this.defaultField = defaultField;\n    setLowercaseExpandedTerms(false);\n    setEnablePositionIncrements(true);\n    checkAllowLeadingWildcards();\n  }\n\n","sourceOld":"  /**\n   * Constructs a SolrQueryParser using the schema to understand the\n   * formats and datatypes of each field.  Only the defaultSearchField\n   * will be used from the IndexSchema (unless overridden),\n   * &lt;solrQueryParser&gt; will not be used.\n   * \n   * @param schema Used for default search field name if defaultField is null and field information is used for analysis\n   * @param defaultField default field used for unspecified search terms.  if null, the schema default field is used\n   * @see IndexSchema#getDefaultSearchFieldName()\n   */\n  public SolrQueryParser(IndexSchema schema, String defaultField) {\n    super(schema.getSolrConfig().getLuceneVersion(\"luceneMatchVersion\", Version.LUCENE_24), defaultField == null ? schema.getDefaultSearchFieldName() : defaultField, schema.getQueryAnalyzer());\n    this.schema = schema;\n    this.parser  = null;\n    this.defaultField = defaultField;\n    setLowercaseExpandedTerms(false);\n    setEnablePositionIncrements(true);\n    checkAllowLeadingWildcards();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e48ed0466fe2d4f8ba58a47caef1174d9e856d13","date":1293745585,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/search/SolrQueryParser#SolrQueryParser(IndexSchema,String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Constructs a SolrQueryParser using the schema to understand the\n   * formats and datatypes of each field.  Only the defaultSearchField\n   * will be used from the IndexSchema (unless overridden),\n   * &lt;solrQueryParser&gt; will not be used.\n   * \n   * @param schema Used for default search field name if defaultField is null and field information is used for analysis\n   * @param defaultField default field used for unspecified search terms.  if null, the schema default field is used\n   * @see IndexSchema#getDefaultSearchFieldName()\n   */\n  public SolrQueryParser(IndexSchema schema, String defaultField) {\n    super(schema.getSolrConfig().getLuceneVersion(\"luceneMatchVersion\", Version.LUCENE_30), defaultField == null ? schema.getDefaultSearchFieldName() : defaultField, schema.getQueryAnalyzer());\n    this.schema = schema;\n    this.parser  = null;\n    this.defaultField = defaultField;\n    setLowercaseExpandedTerms(false);\n    setEnablePositionIncrements(true);\n    checkAllowLeadingWildcards();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","date":1294014627,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/search/SolrQueryParser#SolrQueryParser(IndexSchema,String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Constructs a SolrQueryParser using the schema to understand the\n   * formats and datatypes of each field.  Only the defaultSearchField\n   * will be used from the IndexSchema (unless overridden),\n   * &lt;solrQueryParser&gt; will not be used.\n   * \n   * @param schema Used for default search field name if defaultField is null and field information is used for analysis\n   * @param defaultField default field used for unspecified search terms.  if null, the schema default field is used\n   * @see IndexSchema#getDefaultSearchFieldName()\n   */\n  public SolrQueryParser(IndexSchema schema, String defaultField) {\n    super(schema.getSolrConfig().getLuceneVersion(\"luceneMatchVersion\", Version.LUCENE_30), defaultField == null ? schema.getDefaultSearchFieldName() : defaultField, schema.getQueryAnalyzer());\n    this.schema = schema;\n    this.parser  = null;\n    this.defaultField = defaultField;\n    setLowercaseExpandedTerms(false);\n    setEnablePositionIncrements(true);\n    checkAllowLeadingWildcards();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/search/SolrQueryParser#SolrQueryParser(IndexSchema,String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Constructs a SolrQueryParser using the schema to understand the\n   * formats and datatypes of each field.  Only the defaultSearchField\n   * will be used from the IndexSchema (unless overridden),\n   * &lt;solrQueryParser&gt; will not be used.\n   * \n   * @param schema Used for default search field name if defaultField is null and field information is used for analysis\n   * @param defaultField default field used for unspecified search terms.  if null, the schema default field is used\n   * @see IndexSchema#getDefaultSearchFieldName()\n   */\n  public SolrQueryParser(IndexSchema schema, String defaultField) {\n    super(schema.getSolrConfig().getLuceneVersion(\"luceneMatchVersion\", Version.LUCENE_30), defaultField == null ? schema.getDefaultSearchFieldName() : defaultField, schema.getQueryAnalyzer());\n    this.schema = schema;\n    this.parser  = null;\n    this.defaultField = defaultField;\n    setLowercaseExpandedTerms(false);\n    setEnablePositionIncrements(true);\n    checkAllowLeadingWildcards();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["3bb13258feba31ab676502787ab2e1779f129b7a","e48ed0466fe2d4f8ba58a47caef1174d9e856d13"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"e48ed0466fe2d4f8ba58a47caef1174d9e856d13":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["1da8d55113b689b06716246649de6f62430f15c0","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"cdc85ff8f5e821ac2fed86b5ddd98c5277e09260":["1da8d55113b689b06716246649de6f62430f15c0"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","e48ed0466fe2d4f8ba58a47caef1174d9e856d13"],"205b7b417ae0131bc5ee089518ba2c693274177e":["cdc85ff8f5e821ac2fed86b5ddd98c5277e09260"],"202240bbf7f80302f5b0f7b57464520338b645d7":["205b7b417ae0131bc5ee089518ba2c693274177e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"d5658c275c711edfbecdaa6035b2c23b3f6c113e":["202240bbf7f80302f5b0f7b57464520338b645d7"],"3bb13258feba31ab676502787ab2e1779f129b7a":["d5658c275c711edfbecdaa6035b2c23b3f6c113e","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e48ed0466fe2d4f8ba58a47caef1174d9e856d13"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["d5658c275c711edfbecdaa6035b2c23b3f6c113e"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"e48ed0466fe2d4f8ba58a47caef1174d9e856d13":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c"],"1da8d55113b689b06716246649de6f62430f15c0":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cdc85ff8f5e821ac2fed86b5ddd98c5277e09260"],"cdc85ff8f5e821ac2fed86b5ddd98c5277e09260":["205b7b417ae0131bc5ee089518ba2c693274177e"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":[],"205b7b417ae0131bc5ee089518ba2c693274177e":["202240bbf7f80302f5b0f7b57464520338b645d7"],"202240bbf7f80302f5b0f7b57464520338b645d7":["d5658c275c711edfbecdaa6035b2c23b3f6c113e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"d5658c275c711edfbecdaa6035b2c23b3f6c113e":["3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"3bb13258feba31ab676502787ab2e1779f129b7a":["70ad682703b8585f5d0a637efec044d57ec05efb"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["e48ed0466fe2d4f8ba58a47caef1174d9e856d13","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}