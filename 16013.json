{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell/HunspellStemmer#printStemResults(String,List[Stem]).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell/HunspellStemmer#printStemResults(String,List[Stem]).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/hunspell/HunspellStemmer#printStemResults(String,List[Stem]).mjava","sourceNew":"  /**\n   * Prints the results of the stemming of a word\n   *\n   * @param originalWord Word that has been stemmed\n   * @param stems Stems of the word\n   */\n  private static void printStemResults(String originalWord, List<Stem> stems) {\n    StringBuilder builder = new StringBuilder().append(\"stem(\").append(originalWord).append(\")\").append(\"\\n\");\n\n    for (Stem stem : stems) {\n      builder.append(\"- \").append(stem.getStem()).append(\": \");\n\n      for (HunspellAffix prefix : stem.getPrefixes()) {\n        builder.append(prefix.getAppend()).append(\"+\");\n\n        if (hasText(prefix.getStrip())) {\n          builder.append(prefix.getStrip()).append(\"-\");\n        }\n      }\n\n      builder.append(stem.getStem());\n\n      for (HunspellAffix suffix : stem.getSuffixes()) {\n        if (hasText(suffix.getStrip())) {\n          builder.append(\"-\").append(suffix.getStrip());\n        }\n        \n        builder.append(\"+\").append(suffix.getAppend());\n      }\n      builder.append(\"\\n\");\n    }\n\n    System.out.println(builder);\n  }\n\n","sourceOld":"  /**\n   * Prints the results of the stemming of a word\n   *\n   * @param originalWord Word that has been stemmed\n   * @param stems Stems of the word\n   */\n  private static void printStemResults(String originalWord, List<Stem> stems) {\n    StringBuilder builder = new StringBuilder().append(\"stem(\").append(originalWord).append(\")\").append(\"\\n\");\n\n    for (Stem stem : stems) {\n      builder.append(\"- \").append(stem.getStem()).append(\": \");\n\n      for (HunspellAffix prefix : stem.getPrefixes()) {\n        builder.append(prefix.getAppend()).append(\"+\");\n\n        if (hasText(prefix.getStrip())) {\n          builder.append(prefix.getStrip()).append(\"-\");\n        }\n      }\n\n      builder.append(stem.getStem());\n\n      for (HunspellAffix suffix : stem.getSuffixes()) {\n        if (hasText(suffix.getStrip())) {\n          builder.append(\"-\").append(suffix.getStrip());\n        }\n        \n        builder.append(\"+\").append(suffix.getAppend());\n      }\n      builder.append(\"\\n\");\n    }\n\n    System.out.println(builder);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f6156e2f0d1d529001873677c1cc6a22d6b9f9a","date":1342021960,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell/HunspellStemmer#printStemResults(String,List[Stem]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Prints the results of the stemming of a word\n   *\n   * @param originalWord Word that has been stemmed\n   * @param stems Stems of the word\n   */\n  private static void printStemResults(String originalWord, List<Stem> stems) {\n    StringBuilder builder = new StringBuilder().append(\"stem(\").append(originalWord).append(\")\").append(\"\\n\");\n\n    for (Stem stem : stems) {\n      builder.append(\"- \").append(stem.getStem()).append(\": \");\n\n      for (HunspellAffix prefix : stem.getPrefixes()) {\n        builder.append(prefix.getAppend()).append(\"+\");\n\n        if (hasText(prefix.getStrip())) {\n          builder.append(prefix.getStrip()).append(\"-\");\n        }\n      }\n\n      builder.append(stem.getStem());\n\n      for (HunspellAffix suffix : stem.getSuffixes()) {\n        if (hasText(suffix.getStrip())) {\n          builder.append(\"-\").append(suffix.getStrip());\n        }\n        \n        builder.append(\"+\").append(suffix.getAppend());\n      }\n      builder.append(\"\\n\");\n    }\n\n    System.out.println(builder);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell/HunspellStemmer#printStemResults(String,List[Stem]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Prints the results of the stemming of a word\n   *\n   * @param originalWord Word that has been stemmed\n   * @param stems Stems of the word\n   */\n  private static void printStemResults(String originalWord, List<Stem> stems) {\n    StringBuilder builder = new StringBuilder().append(\"stem(\").append(originalWord).append(\")\").append(\"\\n\");\n\n    for (Stem stem : stems) {\n      builder.append(\"- \").append(stem.getStem()).append(\": \");\n\n      for (HunspellAffix prefix : stem.getPrefixes()) {\n        builder.append(prefix.getAppend()).append(\"+\");\n\n        if (hasText(prefix.getStrip())) {\n          builder.append(prefix.getStrip()).append(\"-\");\n        }\n      }\n\n      builder.append(stem.getStem());\n\n      for (HunspellAffix suffix : stem.getSuffixes()) {\n        if (hasText(suffix.getStrip())) {\n          builder.append(\"-\").append(suffix.getStrip());\n        }\n        \n        builder.append(\"+\").append(suffix.getAppend());\n      }\n      builder.append(\"\\n\");\n    }\n\n    System.out.println(builder);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell/HunspellStemmer#printStemResults(String,List[Stem]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Prints the results of the stemming of a word\n   *\n   * @param originalWord Word that has been stemmed\n   * @param stems Stems of the word\n   */\n  private static void printStemResults(String originalWord, List<Stem> stems) {\n    StringBuilder builder = new StringBuilder().append(\"stem(\").append(originalWord).append(\")\").append(\"\\n\");\n\n    for (Stem stem : stems) {\n      builder.append(\"- \").append(stem.getStem()).append(\": \");\n\n      for (HunspellAffix prefix : stem.getPrefixes()) {\n        builder.append(prefix.getAppend()).append(\"+\");\n\n        if (hasText(prefix.getStrip())) {\n          builder.append(prefix.getStrip()).append(\"-\");\n        }\n      }\n\n      builder.append(stem.getStem());\n\n      for (HunspellAffix suffix : stem.getSuffixes()) {\n        if (hasText(suffix.getStrip())) {\n          builder.append(\"-\").append(suffix.getStrip());\n        }\n        \n        builder.append(\"+\").append(suffix.getAppend());\n      }\n      builder.append(\"\\n\");\n    }\n\n    System.out.println(builder);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2f6156e2f0d1d529001873677c1cc6a22d6b9f9a":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aba371508186796cc6151d8223a5b4e16d02e26e":["b89678825b68eccaf09e6ab71675fc0b0af1e099","2f6156e2f0d1d529001873677c1cc6a22d6b9f9a"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","2f6156e2f0d1d529001873677c1cc6a22d6b9f9a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2f6156e2f0d1d529001873677c1cc6a22d6b9f9a"]},"commit2Childs":{"2f6156e2f0d1d529001873677c1cc6a22d6b9f9a":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["2f6156e2f0d1d529001873677c1cc6a22d6b9f9a","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}