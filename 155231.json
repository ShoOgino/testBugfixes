{"path":"lucene/facet/src/test/org/apache/lucene/facet/search/TestSearcherTaxonomyManager#testReplaceTaxonomy().mjava","commits":[{"id":"77925d097d69ba9a9806554c5afe4779fafa142d","date":1365611122,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/TestSearcherTaxonomyManager#testReplaceTaxonomy().mjava","pathOld":"/dev/null","sourceNew":"  public void testReplaceTaxonomy() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    DirectoryTaxonomyWriter tw = new DirectoryTaxonomyWriter(taxoDir);\n\n    Directory taxoDir2 = newDirectory();\n    DirectoryTaxonomyWriter tw2 = new DirectoryTaxonomyWriter(taxoDir2);\n    tw2.close();\n\n    SearcherTaxonomyManager mgr = new SearcherTaxonomyManager(w, true, null, tw);\n    w.addDocument(new Document());\n    tw.replaceTaxonomy(taxoDir2);\n    taxoDir2.close();\n\n    try {\n      mgr.maybeRefresh();\n      fail(\"should have hit exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n\n    IOUtils.close(mgr, tw, w, taxoDir, dir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0","05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ca39562b2d7687143fdb601d5de1b8f7b778f1db","date":1385299806,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSearcherTaxonomyManager#testReplaceTaxonomy().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/TestSearcherTaxonomyManager#testReplaceTaxonomy().mjava","sourceNew":"  public void testReplaceTaxonomy() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    DirectoryTaxonomyWriter tw = new DirectoryTaxonomyWriter(taxoDir);\n\n    Directory taxoDir2 = newDirectory();\n    DirectoryTaxonomyWriter tw2 = new DirectoryTaxonomyWriter(taxoDir2);\n    tw2.close();\n\n    SearcherTaxonomyManager mgr = new SearcherTaxonomyManager(w, true, null, tw);\n    w.addDocument(new Document());\n    tw.replaceTaxonomy(taxoDir2);\n    taxoDir2.close();\n\n    try {\n      mgr.maybeRefresh();\n      fail(\"should have hit exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n\n    IOUtils.close(mgr, tw, w, taxoDir, dir);\n  }\n\n","sourceOld":"  public void testReplaceTaxonomy() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    DirectoryTaxonomyWriter tw = new DirectoryTaxonomyWriter(taxoDir);\n\n    Directory taxoDir2 = newDirectory();\n    DirectoryTaxonomyWriter tw2 = new DirectoryTaxonomyWriter(taxoDir2);\n    tw2.close();\n\n    SearcherTaxonomyManager mgr = new SearcherTaxonomyManager(w, true, null, tw);\n    w.addDocument(new Document());\n    tw.replaceTaxonomy(taxoDir2);\n    taxoDir2.close();\n\n    try {\n      mgr.maybeRefresh();\n      fail(\"should have hit exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n\n    IOUtils.close(mgr, tw, w, taxoDir, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestSearcherTaxonomyManager#testReplaceTaxonomy().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/TestSearcherTaxonomyManager#testReplaceTaxonomy().mjava","sourceNew":"  public void testReplaceTaxonomy() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    DirectoryTaxonomyWriter tw = new DirectoryTaxonomyWriter(taxoDir);\n\n    Directory taxoDir2 = newDirectory();\n    DirectoryTaxonomyWriter tw2 = new DirectoryTaxonomyWriter(taxoDir2);\n    tw2.close();\n\n    SearcherTaxonomyManager mgr = new SearcherTaxonomyManager(w, true, null, tw);\n    w.addDocument(new Document());\n    tw.replaceTaxonomy(taxoDir2);\n    taxoDir2.close();\n\n    try {\n      mgr.maybeRefresh();\n      fail(\"should have hit exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n\n    IOUtils.close(mgr, tw, w, taxoDir, dir);\n  }\n\n","sourceOld":"  public void testReplaceTaxonomy() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    DirectoryTaxonomyWriter tw = new DirectoryTaxonomyWriter(taxoDir);\n\n    Directory taxoDir2 = newDirectory();\n    DirectoryTaxonomyWriter tw2 = new DirectoryTaxonomyWriter(taxoDir2);\n    tw2.close();\n\n    SearcherTaxonomyManager mgr = new SearcherTaxonomyManager(w, true, null, tw);\n    w.addDocument(new Document());\n    tw.replaceTaxonomy(taxoDir2);\n    taxoDir2.close();\n\n    try {\n      mgr.maybeRefresh();\n      fail(\"should have hit exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n\n    IOUtils.close(mgr, tw, w, taxoDir, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"77925d097d69ba9a9806554c5afe4779fafa142d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["77925d097d69ba9a9806554c5afe4779fafa142d","ca39562b2d7687143fdb601d5de1b8f7b778f1db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"ca39562b2d7687143fdb601d5de1b8f7b778f1db":["77925d097d69ba9a9806554c5afe4779fafa142d"]},"commit2Childs":{"77925d097d69ba9a9806554c5afe4779fafa142d":["3cc728b07df73b197e6d940d27f9b08b63918f13","ca39562b2d7687143fdb601d5de1b8f7b778f1db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["77925d097d69ba9a9806554c5afe4779fafa142d"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ca39562b2d7687143fdb601d5de1b8f7b778f1db":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}