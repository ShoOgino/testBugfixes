{"path":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector.GroupHead#GroupHead(Comparable,Sort,int,AtomicReaderContext,Scorer).mjava","commits":[{"id":"7528ec8c6e88061e2e6af98c4ae1f72a30f180b2","date":1327854270,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector.GroupHead#GroupHead(Comparable,Sort,int,AtomicReaderContext,Scorer).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector.GroupHead#GroupHead(Comparable,Sort,int,IndexReader.AtomicReaderContext,Scorer).mjava","sourceNew":"    GroupHead(Comparable groupValue, Sort sort, int doc, AtomicReaderContext readerContext, Scorer scorer) throws IOException {\n      super(groupValue, doc + readerContext.docBase);\n      final SortField[] sortFields = sort.getSort();\n      comparators = new FieldComparator[sortFields.length];\n      for (int i = 0; i < sortFields.length; i++) {\n        comparators[i] = sortFields[i].getComparator(1, i).setNextReader(readerContext);\n        comparators[i].setScorer(scorer);\n        comparators[i].copy(0, doc);\n        comparators[i].setBottom(0);\n      }\n\n      this.readerContext = readerContext;\n      this.scorer = scorer;\n    }\n\n","sourceOld":"    GroupHead(Comparable groupValue, Sort sort, int doc, IndexReader.AtomicReaderContext readerContext, Scorer scorer) throws IOException {\n      super(groupValue, doc + readerContext.docBase);\n      final SortField[] sortFields = sort.getSort();\n      comparators = new FieldComparator[sortFields.length];\n      for (int i = 0; i < sortFields.length; i++) {\n        comparators[i] = sortFields[i].getComparator(1, i).setNextReader(readerContext);\n        comparators[i].setScorer(scorer);\n        comparators[i].copy(0, doc);\n        comparators[i].setBottom(0);\n      }\n\n      this.readerContext = readerContext;\n      this.scorer = scorer;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector.GroupHead#GroupHead(Comparable,Sort,int,AtomicReaderContext,Scorer).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector.GroupHead#GroupHead(Comparable,Sort,int,IndexReader.AtomicReaderContext,Scorer).mjava","sourceNew":"    GroupHead(Comparable groupValue, Sort sort, int doc, AtomicReaderContext readerContext, Scorer scorer) throws IOException {\n      super(groupValue, doc + readerContext.docBase);\n      final SortField[] sortFields = sort.getSort();\n      comparators = new FieldComparator[sortFields.length];\n      for (int i = 0; i < sortFields.length; i++) {\n        comparators[i] = sortFields[i].getComparator(1, i).setNextReader(readerContext);\n        comparators[i].setScorer(scorer);\n        comparators[i].copy(0, doc);\n        comparators[i].setBottom(0);\n      }\n\n      this.readerContext = readerContext;\n      this.scorer = scorer;\n    }\n\n","sourceOld":"    GroupHead(Comparable groupValue, Sort sort, int doc, IndexReader.AtomicReaderContext readerContext, Scorer scorer) throws IOException {\n      super(groupValue, doc + readerContext.docBase);\n      final SortField[] sortFields = sort.getSort();\n      comparators = new FieldComparator[sortFields.length];\n      for (int i = 0; i < sortFields.length; i++) {\n        comparators[i] = sortFields[i].getComparator(1, i).setNextReader(readerContext);\n        comparators[i].setScorer(scorer);\n        comparators[i].copy(0, doc);\n        comparators[i].setBottom(0);\n      }\n\n      this.readerContext = readerContext;\n      this.scorer = scorer;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"10ecbc03c2fc578015d597a26fe35271fe9504d2","date":1331200601,"type":5,"author":"Martijn van Groningen","isMerge":false,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector.GroupHead#GroupHead(Comparable[#],Sort,int,AtomicReaderContext,Scorer).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector.GroupHead#GroupHead(Comparable,Sort,int,AtomicReaderContext,Scorer).mjava","sourceNew":"    GroupHead(Comparable<?> groupValue, Sort sort, int doc, AtomicReaderContext readerContext, Scorer scorer) throws IOException {\n      super(groupValue, doc + readerContext.docBase);\n      final SortField[] sortFields = sort.getSort();\n      comparators = new FieldComparator<?>[sortFields.length];\n      for (int i = 0; i < sortFields.length; i++) {\n        comparators[i] = sortFields[i].getComparator(1, i).setNextReader(readerContext);\n        comparators[i].setScorer(scorer);\n        comparators[i].copy(0, doc);\n        comparators[i].setBottom(0);\n      }\n\n      this.readerContext = readerContext;\n      this.scorer = scorer;\n    }\n\n","sourceOld":"    GroupHead(Comparable groupValue, Sort sort, int doc, AtomicReaderContext readerContext, Scorer scorer) throws IOException {\n      super(groupValue, doc + readerContext.docBase);\n      final SortField[] sortFields = sort.getSort();\n      comparators = new FieldComparator[sortFields.length];\n      for (int i = 0; i < sortFields.length; i++) {\n        comparators[i] = sortFields[i].getComparator(1, i).setNextReader(readerContext);\n        comparators[i].setScorer(scorer);\n        comparators[i].copy(0, doc);\n        comparators[i].setBottom(0);\n      }\n\n      this.readerContext = readerContext;\n      this.scorer = scorer;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":5,"author":"Ryan McKinley","isMerge":true,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector.GroupHead#GroupHead(Comparable[#],Sort,int,AtomicReaderContext,Scorer).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector.GroupHead#GroupHead(Comparable,Sort,int,AtomicReaderContext,Scorer).mjava","sourceNew":"    GroupHead(Comparable<?> groupValue, Sort sort, int doc, AtomicReaderContext readerContext, Scorer scorer) throws IOException {\n      super(groupValue, doc + readerContext.docBase);\n      final SortField[] sortFields = sort.getSort();\n      comparators = new FieldComparator<?>[sortFields.length];\n      for (int i = 0; i < sortFields.length; i++) {\n        comparators[i] = sortFields[i].getComparator(1, i).setNextReader(readerContext);\n        comparators[i].setScorer(scorer);\n        comparators[i].copy(0, doc);\n        comparators[i].setBottom(0);\n      }\n\n      this.readerContext = readerContext;\n      this.scorer = scorer;\n    }\n\n","sourceOld":"    GroupHead(Comparable groupValue, Sort sort, int doc, AtomicReaderContext readerContext, Scorer scorer) throws IOException {\n      super(groupValue, doc + readerContext.docBase);\n      final SortField[] sortFields = sort.getSort();\n      comparators = new FieldComparator[sortFields.length];\n      for (int i = 0; i < sortFields.length; i++) {\n        comparators[i] = sortFields[i].getComparator(1, i).setNextReader(readerContext);\n        comparators[i].setScorer(scorer);\n        comparators[i].copy(0, doc);\n        comparators[i].setBottom(0);\n      }\n\n      this.readerContext = readerContext;\n      this.scorer = scorer;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["5cab9a86bd67202d20b6adc463008c8e982b070a","10ecbc03c2fc578015d597a26fe35271fe9504d2"],"7528ec8c6e88061e2e6af98c4ae1f72a30f180b2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"10ecbc03c2fc578015d597a26fe35271fe9504d2":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5cab9a86bd67202d20b6adc463008c8e982b070a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7528ec8c6e88061e2e6af98c4ae1f72a30f180b2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["10ecbc03c2fc578015d597a26fe35271fe9504d2"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"7528ec8c6e88061e2e6af98c4ae1f72a30f180b2":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"10ecbc03c2fc578015d597a26fe35271fe9504d2":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7528ec8c6e88061e2e6af98c4ae1f72a30f180b2","5cab9a86bd67202d20b6adc463008c8e982b070a"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["38e3b736c7ca086d61b7dbb841c905ee115490da","10ecbc03c2fc578015d597a26fe35271fe9504d2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}