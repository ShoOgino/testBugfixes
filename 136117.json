{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,String,String,int,boolean,Codec,Map[String,String],Map[String,String]).mjava","commits":[{"id":"764b942fd30efcae6e532c19771f32eeeb0037b2","date":1337868546,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,String,String,int,boolean,Codec,Map[String,String],Map[String,String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,String,String,int,Map[Integer,Long],boolean,Codec,Map[String,String],Map[String,String]).mjava","sourceNew":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, String version, String name, int docCount, \n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics, Map<String,String> attributes) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = dir;\n    this.version = version;\n    this.name = name;\n    this.docCount = docCount;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = diagnostics;\n    this.attributes = attributes;\n  }\n\n","sourceOld":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, String version, String name, int docCount, \n                     Map<Integer,Long> normGen, boolean isCompoundFile,\n                     Codec codec, Map<String,String> diagnostics, Map<String,String> attributes) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = dir;\n    this.version = version;\n    this.name = name;\n    this.docCount = docCount;\n    this.normGen = normGen;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = diagnostics;\n    this.attributes = attributes;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,String,String,int,boolean,Codec,Map[String,String],Map[String,String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,String,String,int,long,int,String,boolean,Map[Integer,Long],boolean,int,int,Codec,Map[String,String],int).mjava","sourceNew":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, String version, String name, int docCount, \n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics, Map<String,String> attributes) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = dir;\n    this.version = version;\n    this.name = name;\n    this.docCount = docCount;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = diagnostics;\n    this.attributes = attributes;\n  }\n\n","sourceOld":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, String version, String name, int docCount, long delGen, int docStoreOffset,\n      String docStoreSegment, boolean docStoreIsCompoundFile, Map<Integer,Long> normGen, boolean isCompoundFile,\n      int delCount, int hasProx, Codec codec, Map<String,String> diagnostics, int hasVectors) {\n    this.dir = dir;\n    this.version = version;\n    this.name = name;\n    this.docCount = docCount;\n    this.delGen = delGen;\n    this.docStoreOffset = docStoreOffset;\n    this.docStoreSegment = docStoreSegment;\n    this.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    this.normGen = normGen;\n    this.isCompoundFile = isCompoundFile;\n    this.delCount = delCount;\n    this.hasProx = hasProx;\n    this.codec = codec;\n    this.diagnostics = diagnostics;\n    this.hasVectors = hasVectors;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77f264c55cbf75404f8601ae7290d69157273a56","date":1380484282,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,String,String,int,boolean,Codec,Map[String,String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,String,String,int,boolean,Codec,Map[String,String],Map[String,String]).mjava","sourceNew":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, String version, String name, int docCount, \n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = dir;\n    this.version = version;\n    this.name = name;\n    this.docCount = docCount;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = diagnostics;\n  }\n\n","sourceOld":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, String version, String name, int docCount, \n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics, Map<String,String> attributes) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = dir;\n    this.version = version;\n    this.name = name;\n    this.docCount = docCount;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = diagnostics;\n    this.attributes = attributes;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","764b942fd30efcae6e532c19771f32eeeb0037b2"],"764b942fd30efcae6e532c19771f32eeeb0037b2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"77f264c55cbf75404f8601ae7290d69157273a56":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["77f264c55cbf75404f8601ae7290d69157273a56"]},"commit2Childs":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["77f264c55cbf75404f8601ae7290d69157273a56"],"764b942fd30efcae6e532c19771f32eeeb0037b2":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","764b942fd30efcae6e532c19771f32eeeb0037b2"],"77f264c55cbf75404f8601ae7290d69157273a56":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}