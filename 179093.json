{"path":"lucene/contrib/misc/src/java/org/apache/lucene/index/MultiPassIndexSplitter.FakeDeleteIndexReader#initSubReaders(IndexReader).mjava","commits":[{"id":"7a118fcb91dbf1aea61227687b4241d7b136558d","date":1323554852,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/MultiPassIndexSplitter.FakeDeleteIndexReader#initSubReaders(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"    private static IndexReader[] initSubReaders(IndexReader reader) throws IOException {\n      final ArrayList<IndexReader> subs = new ArrayList<IndexReader>();\n      new ReaderUtil.Gather(reader) {\n        @Override\n        protected void add(int base, IndexReader r) {\n          subs.add(new FakeDeleteAtomicIndexReader(r));\n        }\n      }.run();\n      return subs.toArray(new IndexReader[subs.size()]);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","date":1323720782,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/MultiPassIndexSplitter.FakeDeleteIndexReader#initSubReaders(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"    private static IndexReader[] initSubReaders(IndexReader reader) throws IOException {\n      final ArrayList<IndexReader> subs = new ArrayList<IndexReader>();\n      new ReaderUtil.Gather(reader) {\n        @Override\n        protected void add(int base, IndexReader r) {\n          subs.add(new FakeDeleteAtomicIndexReader(r));\n        }\n      }.run();\n      return subs.toArray(new IndexReader[subs.size()]);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04d96eb3480582ebc4cc14711c2ca1a032791d75","date":1327856672,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/MultiPassIndexSplitter.FakeDeleteIndexReader#initSubReaders(IndexReader).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/MultiPassIndexSplitter.FakeDeleteIndexReader#initSubReaders(IndexReader).mjava","sourceNew":"    private static AtomicIndexReader[] initSubReaders(IndexReader reader) throws IOException {\n      final ArrayList<AtomicIndexReader> subs = new ArrayList<AtomicIndexReader>();\n      new ReaderUtil.Gather(reader) {\n        @Override\n        protected void add(int base, AtomicIndexReader r) {\n          subs.add(new FakeDeleteAtomicIndexReader(r));\n        }\n      }.run();\n      return subs.toArray(new AtomicIndexReader[subs.size()]);\n    }\n\n","sourceOld":"    private static IndexReader[] initSubReaders(IndexReader reader) throws IOException {\n      final ArrayList<IndexReader> subs = new ArrayList<IndexReader>();\n      new ReaderUtil.Gather(reader) {\n        @Override\n        protected void add(int base, IndexReader r) {\n          subs.add(new FakeDeleteAtomicIndexReader(r));\n        }\n      }.run();\n      return subs.toArray(new IndexReader[subs.size()]);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da6d5ac19a80d65b1e864251f155d30960353b7e","date":1327881054,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/MultiPassIndexSplitter.FakeDeleteIndexReader#initSubReaders(IndexReader).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/MultiPassIndexSplitter.FakeDeleteIndexReader#initSubReaders(IndexReader).mjava","sourceNew":"    private static AtomicReader[] initSubReaders(IndexReader reader) throws IOException {\n      final ArrayList<AtomicReader> subs = new ArrayList<AtomicReader>();\n      new ReaderUtil.Gather(reader) {\n        @Override\n        protected void add(int base, AtomicReader r) {\n          subs.add(new FakeDeleteAtomicIndexReader(r));\n        }\n      }.run();\n      return subs.toArray(new AtomicReader[subs.size()]);\n    }\n\n","sourceOld":"    private static AtomicIndexReader[] initSubReaders(IndexReader reader) throws IOException {\n      final ArrayList<AtomicIndexReader> subs = new ArrayList<AtomicIndexReader>();\n      new ReaderUtil.Gather(reader) {\n        @Override\n        protected void add(int base, AtomicIndexReader r) {\n          subs.add(new FakeDeleteAtomicIndexReader(r));\n        }\n      }.run();\n      return subs.toArray(new AtomicIndexReader[subs.size()]);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/MultiPassIndexSplitter.FakeDeleteIndexReader#initSubReaders(IndexReader).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/MultiPassIndexSplitter.FakeDeleteIndexReader#initSubReaders(IndexReader).mjava","sourceNew":"    private static AtomicReader[] initSubReaders(IndexReader reader) throws IOException {\n      final ArrayList<AtomicReader> subs = new ArrayList<AtomicReader>();\n      new ReaderUtil.Gather(reader) {\n        @Override\n        protected void add(int base, AtomicReader r) {\n          subs.add(new FakeDeleteAtomicIndexReader(r));\n        }\n      }.run();\n      return subs.toArray(new AtomicReader[subs.size()]);\n    }\n\n","sourceOld":"    private static IndexReader[] initSubReaders(IndexReader reader) throws IOException {\n      final ArrayList<IndexReader> subs = new ArrayList<IndexReader>();\n      new ReaderUtil.Gather(reader) {\n        @Override\n        protected void add(int base, IndexReader r) {\n          subs.add(new FakeDeleteAtomicIndexReader(r));\n        }\n      }.run();\n      return subs.toArray(new IndexReader[subs.size()]);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/MultiPassIndexSplitter.FakeDeleteIndexReader#initSubReaders(IndexReader).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/MultiPassIndexSplitter.FakeDeleteIndexReader#initSubReaders(IndexReader).mjava","sourceNew":"    private static AtomicReader[] initSubReaders(IndexReader reader) throws IOException {\n      final ArrayList<AtomicReader> subs = new ArrayList<AtomicReader>();\n      new ReaderUtil.Gather(reader) {\n        @Override\n        protected void add(int base, AtomicReader r) {\n          subs.add(new FakeDeleteAtomicIndexReader(r));\n        }\n      }.run();\n      return subs.toArray(new AtomicReader[subs.size()]);\n    }\n\n","sourceOld":"    private static AtomicReader[] initSubReaders(IndexReader reader) throws IOException {\n      final ArrayList<AtomicReader> subs = new ArrayList<AtomicReader>();\n      new ReaderUtil.Gather(reader) {\n        @Override\n        protected void add(int base, AtomicReader r) {\n          subs.add(new FakeDeleteAtomicIndexReader(r));\n        }\n      }.run();\n      return subs.toArray(new AtomicReader[subs.size()]);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"da6d5ac19a80d65b1e864251f155d30960353b7e":["04d96eb3480582ebc4cc14711c2ca1a032791d75"],"7a118fcb91dbf1aea61227687b4241d7b136558d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7a118fcb91dbf1aea61227687b4241d7b136558d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"04d96eb3480582ebc4cc14711c2ca1a032791d75":["7a118fcb91dbf1aea61227687b4241d7b136558d"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["7a118fcb91dbf1aea61227687b4241d7b136558d","da6d5ac19a80d65b1e864251f155d30960353b7e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"da6d5ac19a80d65b1e864251f155d30960353b7e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"7a118fcb91dbf1aea61227687b4241d7b136558d":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","04d96eb3480582ebc4cc14711c2ca1a032791d75","5cab9a86bd67202d20b6adc463008c8e982b070a"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7a118fcb91dbf1aea61227687b4241d7b136558d","93ccd971aca7fb61b7f1b946e44714cfc80bfc7c"],"04d96eb3480582ebc4cc14711c2ca1a032791d75":["da6d5ac19a80d65b1e864251f155d30960353b7e"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}