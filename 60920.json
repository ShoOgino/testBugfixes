{"path":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/AbstractDictionary#getGB2312Id(char).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/AbstractDictionary#getGB2312Id(char).mjava","pathOld":"modules/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/AbstractDictionary#getGB2312Id(char).mjava","sourceNew":"  /**\n   * Transcode from Unicode to GB2312\n   * \n   * @param ch input character in Unicode, or character in Basic Latin range.\n   * @return position in GB2312\n   */\n  public short getGB2312Id(char ch) {\n    try {\n      byte[] buffer = Character.toString(ch).getBytes(\"GB2312\");\n      if (buffer.length != 2) {\n        // Should be a two-byte character\n        return -1;\n      }\n      int b0 = (buffer[0] & 0x0FF) - 161; // Code starts from A1, therefore subtract 0xA1=161\n      int b1 = (buffer[1] & 0x0FF) - 161; // There is no Chinese char for the first and last symbol. \n      \t\t\t\t\t\t\t\t\t\t\t// Therefore, each code page only has 16*6-2=94 characters.\n      return (short) (b0 * 94 + b1);\n    } catch (UnsupportedEncodingException e) {\n      e.printStackTrace();\n    }\n    return -1;\n  }\n\n","sourceOld":"  /**\n   * Transcode from Unicode to GB2312\n   * \n   * @param ch input character in Unicode, or character in Basic Latin range.\n   * @return position in GB2312\n   */\n  public short getGB2312Id(char ch) {\n    try {\n      byte[] buffer = Character.toString(ch).getBytes(\"GB2312\");\n      if (buffer.length != 2) {\n        // Should be a two-byte character\n        return -1;\n      }\n      int b0 = (buffer[0] & 0x0FF) - 161; // Code starts from A1, therefore subtract 0xA1=161\n      int b1 = (buffer[1] & 0x0FF) - 161; // There is no Chinese char for the first and last symbol. \n      \t\t\t\t\t\t\t\t\t\t\t// Therefore, each code page only has 16*6-2=94 characters.\n      return (short) (b0 * 94 + b1);\n    } catch (UnsupportedEncodingException e) {\n      e.printStackTrace();\n    }\n    return -1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f6156e2f0d1d529001873677c1cc6a22d6b9f9a","date":1342021960,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/AbstractDictionary#getGB2312Id(char).mjava","pathOld":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/AbstractDictionary#getGB2312Id(char).mjava","sourceNew":"  /**\n   * Transcode from Unicode to GB2312\n   * \n   * @param ch input character in Unicode, or character in Basic Latin range.\n   * @return position in GB2312\n   */\n  public short getGB2312Id(char ch) {\n    try {\n      byte[] buffer = Character.toString(ch).getBytes(\"GB2312\");\n      if (buffer.length != 2) {\n        // Should be a two-byte character\n        return -1;\n      }\n      int b0 = (buffer[0] & 0x0FF) - 161; // Code starts from A1, therefore subtract 0xA1=161\n      int b1 = (buffer[1] & 0x0FF) - 161; // There is no Chinese char for the first and last symbol. \n      \t\t\t\t\t\t\t\t\t\t\t// Therefore, each code page only has 16*6-2=94 characters.\n      return (short) (b0 * 94 + b1);\n    } catch (UnsupportedEncodingException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  /**\n   * Transcode from Unicode to GB2312\n   * \n   * @param ch input character in Unicode, or character in Basic Latin range.\n   * @return position in GB2312\n   */\n  public short getGB2312Id(char ch) {\n    try {\n      byte[] buffer = Character.toString(ch).getBytes(\"GB2312\");\n      if (buffer.length != 2) {\n        // Should be a two-byte character\n        return -1;\n      }\n      int b0 = (buffer[0] & 0x0FF) - 161; // Code starts from A1, therefore subtract 0xA1=161\n      int b1 = (buffer[1] & 0x0FF) - 161; // There is no Chinese char for the first and last symbol. \n      \t\t\t\t\t\t\t\t\t\t\t// Therefore, each code page only has 16*6-2=94 characters.\n      return (short) (b0 * 94 + b1);\n    } catch (UnsupportedEncodingException e) {\n      e.printStackTrace();\n    }\n    return -1;\n  }\n\n","bugFix":["05ff0cc6e864c7d71a48579f2acfca4f58943568"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/AbstractDictionary#getGB2312Id(char).mjava","pathOld":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/AbstractDictionary#getGB2312Id(char).mjava","sourceNew":"  /**\n   * Transcode from Unicode to GB2312\n   * \n   * @param ch input character in Unicode, or character in Basic Latin range.\n   * @return position in GB2312\n   */\n  public short getGB2312Id(char ch) {\n    try {\n      byte[] buffer = Character.toString(ch).getBytes(\"GB2312\");\n      if (buffer.length != 2) {\n        // Should be a two-byte character\n        return -1;\n      }\n      int b0 = (buffer[0] & 0x0FF) - 161; // Code starts from A1, therefore subtract 0xA1=161\n      int b1 = (buffer[1] & 0x0FF) - 161; // There is no Chinese char for the first and last symbol. \n      \t\t\t\t\t\t\t\t\t\t\t// Therefore, each code page only has 16*6-2=94 characters.\n      return (short) (b0 * 94 + b1);\n    } catch (UnsupportedEncodingException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  /**\n   * Transcode from Unicode to GB2312\n   * \n   * @param ch input character in Unicode, or character in Basic Latin range.\n   * @return position in GB2312\n   */\n  public short getGB2312Id(char ch) {\n    try {\n      byte[] buffer = Character.toString(ch).getBytes(\"GB2312\");\n      if (buffer.length != 2) {\n        // Should be a two-byte character\n        return -1;\n      }\n      int b0 = (buffer[0] & 0x0FF) - 161; // Code starts from A1, therefore subtract 0xA1=161\n      int b1 = (buffer[1] & 0x0FF) - 161; // There is no Chinese char for the first and last symbol. \n      \t\t\t\t\t\t\t\t\t\t\t// Therefore, each code page only has 16*6-2=94 characters.\n      return (short) (b0 * 94 + b1);\n    } catch (UnsupportedEncodingException e) {\n      e.printStackTrace();\n    }\n    return -1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/AbstractDictionary#getGB2312Id(char).mjava","pathOld":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/AbstractDictionary#getGB2312Id(char).mjava","sourceNew":"  /**\n   * Transcode from Unicode to GB2312\n   * \n   * @param ch input character in Unicode, or character in Basic Latin range.\n   * @return position in GB2312\n   */\n  public short getGB2312Id(char ch) {\n    try {\n      byte[] buffer = Character.toString(ch).getBytes(\"GB2312\");\n      if (buffer.length != 2) {\n        // Should be a two-byte character\n        return -1;\n      }\n      int b0 = (buffer[0] & 0x0FF) - 161; // Code starts from A1, therefore subtract 0xA1=161\n      int b1 = (buffer[1] & 0x0FF) - 161; // There is no Chinese char for the first and last symbol. \n      \t\t\t\t\t\t\t\t\t\t\t// Therefore, each code page only has 16*6-2=94 characters.\n      return (short) (b0 * 94 + b1);\n    } catch (UnsupportedEncodingException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  /**\n   * Transcode from Unicode to GB2312\n   * \n   * @param ch input character in Unicode, or character in Basic Latin range.\n   * @return position in GB2312\n   */\n  public short getGB2312Id(char ch) {\n    try {\n      byte[] buffer = Character.toString(ch).getBytes(\"GB2312\");\n      if (buffer.length != 2) {\n        // Should be a two-byte character\n        return -1;\n      }\n      int b0 = (buffer[0] & 0x0FF) - 161; // Code starts from A1, therefore subtract 0xA1=161\n      int b1 = (buffer[1] & 0x0FF) - 161; // There is no Chinese char for the first and last symbol. \n      \t\t\t\t\t\t\t\t\t\t\t// Therefore, each code page only has 16*6-2=94 characters.\n      return (short) (b0 * 94 + b1);\n    } catch (UnsupportedEncodingException e) {\n      e.printStackTrace();\n    }\n    return -1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4093b270ba337f9c25a4c0e6cb2ae2c07f697376","date":1347897716,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/AbstractDictionary#getGB2312Id(char).mjava","pathOld":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/AbstractDictionary#getGB2312Id(char).mjava","sourceNew":"  /**\n   * Transcode from Unicode to GB2312\n   * \n   * @param ch input character in Unicode, or character in Basic Latin range.\n   * @return position in GB2312\n   */\n  public short getGB2312Id(char ch) {\n    try {\n      byte[] buffer = Character.toString(ch).getBytes(\"GB2312\");\n      if (buffer.length != 2) {\n        // Should be a two-byte character\n        return -1;\n      }\n      int b0 = (buffer[0] & 0x0FF) - 161; // Code starts from A1, therefore subtract 0xA1=161\n      int b1 = (buffer[1] & 0x0FF) - 161; // There is no Chinese char for the first and last symbol. \n                                          // Therefore, each code page only has 16*6-2=94 characters.\n      return (short) (b0 * 94 + b1);\n    } catch (UnsupportedEncodingException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  /**\n   * Transcode from Unicode to GB2312\n   * \n   * @param ch input character in Unicode, or character in Basic Latin range.\n   * @return position in GB2312\n   */\n  public short getGB2312Id(char ch) {\n    try {\n      byte[] buffer = Character.toString(ch).getBytes(\"GB2312\");\n      if (buffer.length != 2) {\n        // Should be a two-byte character\n        return -1;\n      }\n      int b0 = (buffer[0] & 0x0FF) - 161; // Code starts from A1, therefore subtract 0xA1=161\n      int b1 = (buffer[1] & 0x0FF) - 161; // There is no Chinese char for the first and last symbol. \n      \t\t\t\t\t\t\t\t\t\t\t// Therefore, each code page only has 16*6-2=94 characters.\n      return (short) (b0 * 94 + b1);\n    } catch (UnsupportedEncodingException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2f6156e2f0d1d529001873677c1cc6a22d6b9f9a":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aba371508186796cc6151d8223a5b4e16d02e26e":["b89678825b68eccaf09e6ab71675fc0b0af1e099","2f6156e2f0d1d529001873677c1cc6a22d6b9f9a"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","2f6156e2f0d1d529001873677c1cc6a22d6b9f9a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["2f6156e2f0d1d529001873677c1cc6a22d6b9f9a"]},"commit2Childs":{"2f6156e2f0d1d529001873677c1cc6a22d6b9f9a":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["2f6156e2f0d1d529001873677c1cc6a22d6b9f9a","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}