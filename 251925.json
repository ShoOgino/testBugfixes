{"path":"solr/core/src/java/org/apache/solr/schema/TrieField#readableToIndexed(String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/TrieField#readableToIndexed(String).mjava","pathOld":"solr/src/java/org/apache/solr/schema/TrieField#readableToIndexed(String).mjava","sourceNew":"  @Override\n  public String readableToIndexed(String val) {\n    // TODO: Numeric should never be handled as String, that may break in future lucene versions! Change to use BytesRef for term texts!\n    final BytesRef bytes = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    readableToIndexed(val, bytes);\n    return bytes.utf8ToString();\n  }\n\n","sourceOld":"  @Override\n  public String readableToIndexed(String val) {\n    // TODO: Numeric should never be handled as String, that may break in future lucene versions! Change to use BytesRef for term texts!\n    final BytesRef bytes = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    readableToIndexed(val, bytes);\n    return bytes.utf8ToString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/TrieField#readableToIndexed(String).mjava","pathOld":"solr/src/java/org/apache/solr/schema/TrieField#readableToIndexed(String).mjava","sourceNew":"  @Override\n  public String readableToIndexed(String val) {\n    // TODO: Numeric should never be handled as String, that may break in future lucene versions! Change to use BytesRef for term texts!\n    final BytesRef bytes = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    readableToIndexed(val, bytes);\n    return bytes.utf8ToString();\n  }\n\n","sourceOld":"  @Override\n  public String readableToIndexed(String val) {\n    // TODO: Numeric should never be handled as String, that may break in future lucene versions! Change to use BytesRef for term texts!\n    final BytesRef bytes = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    readableToIndexed(val, bytes);\n    return bytes.utf8ToString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/TrieField#readableToIndexed(String).mjava","pathOld":"solr/src/java/org/apache/solr/schema/TrieField#readableToIndexed(String).mjava","sourceNew":"  @Override\n  public String readableToIndexed(String val) {\n    // TODO: Numeric should never be handled as String, that may break in future lucene versions! Change to use BytesRef for term texts!\n    final BytesRef bytes = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    readableToIndexed(val, bytes);\n    return bytes.utf8ToString();\n  }\n\n","sourceOld":"  @Override\n  public String readableToIndexed(String val) {\n    // TODO: Numeric should never be handled as String, that may break in future lucene versions! Change to use BytesRef for term texts!\n    final BytesRef bytes = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    readableToIndexed(val, bytes);\n    return bytes.utf8ToString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","date":1407854805,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/TrieField#readableToIndexed(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/TrieField#readableToIndexed(String).mjava","sourceNew":"  @Override\n  public String readableToIndexed(String val) {\n    // TODO: Numeric should never be handled as String, that may break in future lucene versions! Change to use BytesRef for term texts!\n    final BytesRefBuilder bytes = new BytesRefBuilder();\n    readableToIndexed(val, bytes);\n    return bytes.get().utf8ToString();\n  }\n\n","sourceOld":"  @Override\n  public String readableToIndexed(String val) {\n    // TODO: Numeric should never be handled as String, that may break in future lucene versions! Change to use BytesRef for term texts!\n    final BytesRef bytes = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    readableToIndexed(val, bytes);\n    return bytes.utf8ToString();\n  }\n\n","bugFix":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","a1b3a24d5d9b47345473ff564f5cc127a7b526b4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}