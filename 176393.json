{"path":"src/test/org/apache/solr/highlight/HighlighterConfigTest#testConfig().mjava","commits":[{"id":"303b28b90016c2de1b5870759794476dbf4fd6ce","date":1206052767,"type":0,"author":"Mike Klaas","isMerge":false,"pathNew":"src/test/org/apache/solr/highlight/HighlighterConfigTest#testConfig().mjava","pathOld":"/dev/null","sourceNew":"\t  public void testConfig()\n\t  {\n\t    SolrHighlighter highlighter = SolrCore.getSolrCore().getHighlighter();\n\t    System.out.println( \"highlighter\" );\n\n\t    assertTrue( highlighter instanceof DummyHighlighter );\n\t    \n\t    // check to see that doHighlight is called from the DummyHighlighter\n\t    HashMap<String,String> args = new HashMap<String,String>();\n\t    args.put(\"hl\", \"true\");\n\t    args.put(\"df\", \"t_text\");\n\t    args.put(\"hl.fl\", \"\");\n\t    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n\t      \"standard\", 0, 200, args);\n\t    \n\t    assertU(adoc(\"t_text\", \"a long day's night\", \"id\", \"1\"));\n\t    assertU(commit());\n\t    assertU(optimize());\n\t    assertQ(\"Basic summarization\",\n\t            sumLRF.makeRequest(\"long\"),\n\t            \"//lst[@name='highlighting']/str[@name='dummy']\"\n\t            );\n\t  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c90f01e1c0f11ee52212ab38c6d4393b3be8a646","date":1223059437,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/highlight/HighlighterConfigTest#testConfig().mjava","pathOld":"src/test/org/apache/solr/highlight/HighlighterConfigTest#testConfig().mjava","sourceNew":"\t  public void testConfig()\n\t  {\n\t    SolrHighlighter highlighter = h.getCore().getHighlighter();\n\t    System.out.println( \"highlighter\" );\n\n\t    assertTrue( highlighter instanceof DummyHighlighter );\n\t    \n\t    // check to see that doHighlight is called from the DummyHighlighter\n\t    HashMap<String,String> args = new HashMap<String,String>();\n\t    args.put(\"hl\", \"true\");\n\t    args.put(\"df\", \"t_text\");\n\t    args.put(\"hl.fl\", \"\");\n\t    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n\t      \"standard\", 0, 200, args);\n\t    \n\t    assertU(adoc(\"t_text\", \"a long day's night\", \"id\", \"1\"));\n\t    assertU(commit());\n\t    assertU(optimize());\n\t    assertQ(\"Basic summarization\",\n\t            sumLRF.makeRequest(\"long\"),\n\t            \"//lst[@name='highlighting']/str[@name='dummy']\"\n\t            );\n\t  }\n\n","sourceOld":"\t  public void testConfig()\n\t  {\n\t    SolrHighlighter highlighter = SolrCore.getSolrCore().getHighlighter();\n\t    System.out.println( \"highlighter\" );\n\n\t    assertTrue( highlighter instanceof DummyHighlighter );\n\t    \n\t    // check to see that doHighlight is called from the DummyHighlighter\n\t    HashMap<String,String> args = new HashMap<String,String>();\n\t    args.put(\"hl\", \"true\");\n\t    args.put(\"df\", \"t_text\");\n\t    args.put(\"hl.fl\", \"\");\n\t    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n\t      \"standard\", 0, 200, args);\n\t    \n\t    assertU(adoc(\"t_text\", \"a long day's night\", \"id\", \"1\"));\n\t    assertU(commit());\n\t    assertU(optimize());\n\t    assertQ(\"Basic summarization\",\n\t            sumLRF.makeRequest(\"long\"),\n\t            \"//lst[@name='highlighting']/str[@name='dummy']\"\n\t            );\n\t  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/highlight/HighlighterConfigTest#testConfig().mjava","pathOld":"src/test/org/apache/solr/highlight/HighlighterConfigTest#testConfig().mjava","sourceNew":"\t  public void testConfig()\n\t  {\n\t    SolrHighlighter highlighter = h.getCore().getHighlighter();\n\t    System.out.println( \"highlighter\" );\n\n\t    assertTrue( highlighter instanceof DummyHighlighter );\n\t    \n\t    // check to see that doHighlight is called from the DummyHighlighter\n\t    HashMap<String,String> args = new HashMap<String,String>();\n\t    args.put(\"hl\", \"true\");\n\t    args.put(\"df\", \"t_text\");\n\t    args.put(\"hl.fl\", \"\");\n\t    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n\t      \"standard\", 0, 200, args);\n\t    \n\t    assertU(adoc(\"t_text\", \"a long day's night\", \"id\", \"1\"));\n\t    assertU(commit());\n\t    assertU(optimize());\n\t    assertQ(\"Basic summarization\",\n\t            sumLRF.makeRequest(\"long\"),\n\t            \"//lst[@name='highlighting']/str[@name='dummy']\"\n\t            );\n\t  }\n\n","sourceOld":"\t  public void testConfig()\n\t  {\n\t    SolrHighlighter highlighter = h.getCore().getHighlighter();\n\t    System.out.println( \"highlighter\" );\n\n\t    assertTrue( highlighter instanceof DummyHighlighter );\n\t    \n\t    // check to see that doHighlight is called from the DummyHighlighter\n\t    HashMap<String,String> args = new HashMap<String,String>();\n\t    args.put(\"hl\", \"true\");\n\t    args.put(\"df\", \"t_text\");\n\t    args.put(\"hl.fl\", \"\");\n\t    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n\t      \"standard\", 0, 200, args);\n\t    \n\t    assertU(adoc(\"t_text\", \"a long day's night\", \"id\", \"1\"));\n\t    assertU(commit());\n\t    assertU(optimize());\n\t    assertQ(\"Basic summarization\",\n\t            sumLRF.makeRequest(\"long\"),\n\t            \"//lst[@name='highlighting']/str[@name='dummy']\"\n\t            );\n\t  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c90f01e1c0f11ee52212ab38c6d4393b3be8a646":["303b28b90016c2de1b5870759794476dbf4fd6ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["c90f01e1c0f11ee52212ab38c6d4393b3be8a646"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"303b28b90016c2de1b5870759794476dbf4fd6ce":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"]},"commit2Childs":{"c90f01e1c0f11ee52212ab38c6d4393b3be8a646":["ad94625fb8d088209f46650c8097196fec67f00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["303b28b90016c2de1b5870759794476dbf4fd6ce"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"303b28b90016c2de1b5870759794476dbf4fd6ce":["c90f01e1c0f11ee52212ab38c6d4393b3be8a646"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}