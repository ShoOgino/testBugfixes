{"path":"lucene/core/src/java/org/apache/lucene/search/DocValuesTermsFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","commits":[{"id":"9274621789ce990dbfef455dabdf026bb3184821","date":1400046684,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DocValuesTermsFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCacheTermsFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) throws IOException {\n    final SortedDocValues fcsi = DocValues.getSorted(context.reader(), field);\n    final FixedBitSet bits = new FixedBitSet(fcsi.getValueCount());\n    for (int i=0;i<terms.length;i++) {\n      int ord = fcsi.lookupTerm(terms[i]);\n      if (ord >= 0) {\n        bits.set(ord);\n      }\n    }\n    return new DocValuesDocIdSet(context.reader().maxDoc(), acceptDocs) {\n      @Override\n      protected final boolean matchDoc(int doc) {\n        int ord = fcsi.getOrd(doc);\n        if (ord == -1) {\n          // missing\n          return false;\n        } else {\n          return bits.get(ord);\n        }\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) throws IOException {\n    final SortedDocValues fcsi = DocValues.getSorted(context.reader(), field);\n    final FixedBitSet bits = new FixedBitSet(fcsi.getValueCount());\n    for (int i=0;i<terms.length;i++) {\n      int ord = fcsi.lookupTerm(terms[i]);\n      if (ord >= 0) {\n        bits.set(ord);\n      }\n    }\n    return new FieldCacheDocIdSet(context.reader().maxDoc(), acceptDocs) {\n      @Override\n      protected final boolean matchDoc(int doc) {\n        int ord = fcsi.getOrd(doc);\n        if (ord == -1) {\n          // missing\n          return false;\n        } else {\n          return bits.get(ord);\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DocValuesTermsFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCacheTermsFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) throws IOException {\n    final SortedDocValues fcsi = DocValues.getSorted(context.reader(), field);\n    final FixedBitSet bits = new FixedBitSet(fcsi.getValueCount());\n    for (int i=0;i<terms.length;i++) {\n      int ord = fcsi.lookupTerm(terms[i]);\n      if (ord >= 0) {\n        bits.set(ord);\n      }\n    }\n    return new DocValuesDocIdSet(context.reader().maxDoc(), acceptDocs) {\n      @Override\n      protected final boolean matchDoc(int doc) {\n        int ord = fcsi.getOrd(doc);\n        if (ord == -1) {\n          // missing\n          return false;\n        } else {\n          return bits.get(ord);\n        }\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) throws IOException {\n    final SortedDocValues fcsi = getFieldCache().getTermsIndex(context.reader(), field);\n    final FixedBitSet bits = new FixedBitSet(fcsi.getValueCount());\n    for (int i=0;i<terms.length;i++) {\n      int ord = fcsi.lookupTerm(terms[i]);\n      if (ord >= 0) {\n        bits.set(ord);\n      }\n    }\n    return new FieldCacheDocIdSet(context.reader().maxDoc(), acceptDocs) {\n      @Override\n      protected final boolean matchDoc(int doc) {\n        int ord = fcsi.getOrd(doc);\n        if (ord == -1) {\n          // missing\n          return false;\n        } else {\n          return bits.get(ord);\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DocValuesTermsFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCacheTermsFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) throws IOException {\n    final SortedDocValues fcsi = DocValues.getSorted(context.reader(), field);\n    final FixedBitSet bits = new FixedBitSet(fcsi.getValueCount());\n    for (int i=0;i<terms.length;i++) {\n      int ord = fcsi.lookupTerm(terms[i]);\n      if (ord >= 0) {\n        bits.set(ord);\n      }\n    }\n    return new DocValuesDocIdSet(context.reader().maxDoc(), acceptDocs) {\n      @Override\n      protected final boolean matchDoc(int doc) {\n        int ord = fcsi.getOrd(doc);\n        if (ord == -1) {\n          // missing\n          return false;\n        } else {\n          return bits.get(ord);\n        }\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) throws IOException {\n    final SortedDocValues fcsi = getFieldCache().getTermsIndex(context.reader(), field);\n    final FixedBitSet bits = new FixedBitSet(fcsi.getValueCount());\n    for (int i=0;i<terms.length;i++) {\n      int ord = fcsi.lookupTerm(terms[i]);\n      if (ord >= 0) {\n        bits.set(ord);\n      }\n    }\n    return new FieldCacheDocIdSet(context.reader().maxDoc(), acceptDocs) {\n      @Override\n      protected final boolean matchDoc(int doc) {\n        int ord = fcsi.getOrd(doc);\n        if (ord == -1) {\n          // missing\n          return false;\n        } else {\n          return bits.get(ord);\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":4,"author":"Ryan Ernst","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/DocValuesTermsFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","sourceNew":null,"sourceOld":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) throws IOException {\n    final SortedDocValues fcsi = DocValues.getSorted(context.reader(), field);\n    final FixedBitSet bits = new FixedBitSet(fcsi.getValueCount());\n    for (int i=0;i<terms.length;i++) {\n      int ord = fcsi.lookupTerm(terms[i]);\n      if (ord >= 0) {\n        bits.set(ord);\n      }\n    }\n    return new DocValuesDocIdSet(context.reader().maxDoc(), acceptDocs) {\n      @Override\n      protected final boolean matchDoc(int doc) {\n        int ord = fcsi.getOrd(doc);\n        if (ord == -1) {\n          // missing\n          return false;\n        } else {\n          return bits.get(ord);\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9274621789ce990dbfef455dabdf026bb3184821":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9274621789ce990dbfef455dabdf026bb3184821"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"56572ec06f1407c066d6b7399413178b33176cd8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","93dd449115a9247533e44bab47e8429e5dccbc6d"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"9274621789ce990dbfef455dabdf026bb3184821":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9274621789ce990dbfef455dabdf026bb3184821","93dd449115a9247533e44bab47e8429e5dccbc6d","56572ec06f1407c066d6b7399413178b33176cd8"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}