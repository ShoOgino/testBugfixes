{"path":"solr/src/java/org/apache/solr/core/RAMDirectoryFactory#openNew(String).mjava","commits":[{"id":"c194d5d82aa52be285a8de7cbfb68645e01c4f0e","date":1268884955,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/RAMDirectoryFactory#openNew(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Non-public for unit-test access only. Do not use directly\n   */\n  Directory openNew(String path) throws IOException {\n    Directory directory;\n    File dirFile = new File(path);\n    boolean indexExists = dirFile.canRead();\n    if (indexExists) {\n      Directory dir = super.open(path);\n      directory = new RAMDirectory(dir);\n    } else {\n      directory = new RAMDirectory();\n    }\n    return directory;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6fe26e002fd174d26492fd4a9c935092e9ab79dd","date":1269097048,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/RAMDirectoryFactory#openNew(String).mjava","pathOld":"solr/src/java/org/apache/solr/core/RAMDirectoryFactory#openNew(String).mjava","sourceNew":"  /**\n   * Non-public for unit-test access only. Do not use directly\n   */\n  Directory openNew(String path) throws IOException {\n    Directory directory;\n    File dirFile = new File(path);\n    boolean indexExists = dirFile.canRead();\n    if (indexExists) {\n      Directory dir = super.open(path);\n      directory = new RefCntRamDirectory(dir);\n    } else {\n      directory = new RefCntRamDirectory();\n    }\n    return directory;\n  }\n\n","sourceOld":"  /**\n   * Non-public for unit-test access only. Do not use directly\n   */\n  Directory openNew(String path) throws IOException {\n    Directory directory;\n    File dirFile = new File(path);\n    boolean indexExists = dirFile.canRead();\n    if (indexExists) {\n      Directory dir = super.open(path);\n      directory = new RAMDirectory(dir);\n    } else {\n      directory = new RAMDirectory();\n    }\n    return directory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/RAMDirectoryFactory#openNew(String).mjava","pathOld":"solr/src/java/org/apache/solr/core/RAMDirectoryFactory#openNew(String).mjava","sourceNew":"  /**\n   * Non-public for unit-test access only. Do not use directly\n   */\n  Directory openNew(String path) throws IOException {\n    Directory directory;\n    File dirFile = new File(path);\n    boolean indexExists = dirFile.canRead();\n    if (indexExists) {\n      Directory dir = super.open(path);\n      directory = new RefCntRamDirectory(dir);\n    } else {\n      directory = new RefCntRamDirectory();\n    }\n    return directory;\n  }\n\n","sourceOld":"  /**\n   * Non-public for unit-test access only. Do not use directly\n   */\n  Directory openNew(String path) throws IOException {\n    Directory directory;\n    File dirFile = new File(path);\n    boolean indexExists = dirFile.canRead();\n    if (indexExists) {\n      Directory dir = super.open(path);\n      directory = new RefCntRamDirectory(dir);\n    } else {\n      directory = new RefCntRamDirectory();\n    }\n    return directory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/RAMDirectoryFactory#openNew(String).mjava","pathOld":"solr/src/java/org/apache/solr/core/RAMDirectoryFactory#openNew(String).mjava","sourceNew":"  /**\n   * Non-public for unit-test access only. Do not use directly\n   */\n  Directory openNew(String path) throws IOException {\n    Directory directory;\n    File dirFile = new File(path);\n    boolean indexExists = dirFile.canRead();\n    if (indexExists) {\n      Directory dir = super.open(path);\n      directory = new RefCntRamDirectory(dir);\n    } else {\n      directory = new RefCntRamDirectory();\n    }\n    return directory;\n  }\n\n","sourceOld":"  /**\n   * Non-public for unit-test access only. Do not use directly\n   */\n  Directory openNew(String path) throws IOException {\n    Directory directory;\n    File dirFile = new File(path);\n    boolean indexExists = dirFile.canRead();\n    if (indexExists) {\n      Directory dir = super.open(path);\n      directory = new RefCntRamDirectory(dir);\n    } else {\n      directory = new RefCntRamDirectory();\n    }\n    return directory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/RAMDirectoryFactory#openNew(String).mjava","pathOld":"solr/src/java/org/apache/solr/core/RAMDirectoryFactory#openNew(String).mjava","sourceNew":"  /**\n   * Non-public for unit-test access only. Do not use directly\n   */\n  Directory openNew(String path) throws IOException {\n    Directory directory;\n    File dirFile = new File(path);\n    boolean indexExists = dirFile.canRead();\n    if (indexExists) {\n      Directory dir = super.open(path);\n      directory = new RefCntRamDirectory(dir);\n    } else {\n      directory = new RefCntRamDirectory();\n    }\n    return directory;\n  }\n\n","sourceOld":"  /**\n   * Non-public for unit-test access only. Do not use directly\n   */\n  Directory openNew(String path) throws IOException {\n    Directory directory;\n    File dirFile = new File(path);\n    boolean indexExists = dirFile.canRead();\n    if (indexExists) {\n      Directory dir = super.open(path);\n      directory = new RefCntRamDirectory(dir);\n    } else {\n      directory = new RefCntRamDirectory();\n    }\n    return directory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c194d5d82aa52be285a8de7cbfb68645e01c4f0e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6fe26e002fd174d26492fd4a9c935092e9ab79dd":["c194d5d82aa52be285a8de7cbfb68645e01c4f0e"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["6fe26e002fd174d26492fd4a9c935092e9ab79dd"],"c26f00b574427b55127e869b935845554afde1fa":["6fe26e002fd174d26492fd4a9c935092e9ab79dd","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["6fe26e002fd174d26492fd4a9c935092e9ab79dd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"c194d5d82aa52be285a8de7cbfb68645e01c4f0e":["6fe26e002fd174d26492fd4a9c935092e9ab79dd"],"6fe26e002fd174d26492fd4a9c935092e9ab79dd":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c194d5d82aa52be285a8de7cbfb68645e01c4f0e"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}