{"path":"lucene/core/src/java/org/apache/lucene/document/RangeFieldQuery#RangeFieldQuery(String,byte[],int,QueryType).mjava","commits":[{"id":"4a52b01a73cacbd2d360240e72d64c0ba353618f","date":1489389749,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/RangeFieldQuery#RangeFieldQuery(String,byte[],int,QueryType).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/RangeFieldQuery#RangeFieldQuery(String,byte[],int,QueryType).mjava","sourceNew":"  /**\n   * Create a query for searching indexed ranges that match the provided relation.\n   * @param field field name. must not be null.\n   * @param ranges encoded range values; this is done by the {@code RangeField} implementation\n   * @param queryType the query relation\n   */\n  RangeFieldQuery(String field, final byte[] ranges, final int numDims, final QueryType queryType) {\n    checkArgs(field, ranges, numDims);\n    if (queryType == null) {\n      throw new IllegalArgumentException(\"Query type cannot be null\");\n    }\n    this.field = field;\n    this.queryType = queryType;\n    this.numDims = numDims;\n    this.ranges = ranges;\n    this.bytesPerDim = ranges.length / (2*numDims);\n  }\n\n","sourceOld":"  /**\n   * Create a query for searching indexed ranges that match the provided relation.\n   * @param field field name. must not be null.\n   * @param ranges encoded range values; this is done by the {@code RangeField} implementation\n   * @param queryType the query relation\n   */\n  RangeFieldQuery(String field, final byte[] ranges, final int numDims, final QueryType queryType) {\n    checkArgs(field, ranges, numDims);\n    if (queryType == null) {\n      throw new IllegalArgumentException(\"Query type cannot be null\");\n    }\n    this.field = field;\n    this.queryType = queryType;\n    this.numDims = numDims;\n    this.ranges = ranges;\n    this.bytesPerDim = ranges.length / (2*numDims);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4a52b01a73cacbd2d360240e72d64c0ba353618f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4a52b01a73cacbd2d360240e72d64c0ba353618f"]},"commit2Childs":{"4a52b01a73cacbd2d360240e72d64c0ba353618f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4a52b01a73cacbd2d360240e72d64c0ba353618f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}