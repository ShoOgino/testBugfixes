{"path":"solr/core/src/java/org/apache/solr/packagemanager/PackageManager#deployPackage(SolrPackageInstance,boolean,boolean,boolean,List[String],boolean,String[]).mjava","commits":[{"id":"a688687cbff91a8f44c95d31697c3ba8a47c8c25","date":1593512440,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/packagemanager/PackageManager#deployPackage(SolrPackageInstance,boolean,boolean,boolean,List[String],boolean,String[]).mjava","pathOld":"/dev/null","sourceNew":"  private boolean deployPackage(SolrPackageInstance packageInstance, boolean pegToLatest, boolean isUpdate, boolean noprompt,\n      List<String> collections, boolean shouldDeployClusterPlugins, String[] overrides) {\n\n    // Install plugins of type \"cluster\"\n    boolean clusterSuccess = deployClusterPackage(packageInstance, isUpdate, noprompt, shouldDeployClusterPlugins,\n        overrides);\n\n    \n    // Install plugins of type \"collection\"\n    Pair<List<String>, List<String>> deployResult = deployCollectionPackage(packageInstance, pegToLatest, isUpdate, noprompt, collections,\n        shouldDeployClusterPlugins, overrides);\n    List<String> deployedCollections = deployResult.first();\n    List<String> previouslyDeployedOnCollections = deployResult.second();\n    \n    // Verify\n    boolean verifySuccess = true;\n    // Verify that package was successfully deployed\n    verifySuccess = verify(packageInstance, deployedCollections, shouldDeployClusterPlugins, overrides);\n    if (verifySuccess) {\n      PackageUtils.printGreen(\"Deployed on \" + deployedCollections + \" and verified package: \" + packageInstance.name + \", version: \" + packageInstance.version);\n    }\n\n    return clusterSuccess && previouslyDeployedOnCollections.isEmpty() && verifySuccess;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ea3ef3f76ecd22ead5b83d015adf8c16476a0f4","date":1594087785,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/packagemanager/PackageManager#deployPackage(SolrPackageInstance,boolean,boolean,boolean,List[String],boolean,String[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/packagemanager/PackageManager#deployPackage(SolrPackageInstance,boolean,boolean,boolean,List[String],boolean,String[]).mjava","sourceNew":"  private boolean deployPackage(SolrPackageInstance packageInstance, boolean pegToLatest, boolean isUpdate, boolean noprompt,\n      List<String> collections, boolean shouldDeployClusterPlugins, String[] overrides) {\n\n    // Install plugins of type \"cluster\"\n    boolean clusterSuccess = true;\n    if (shouldDeployClusterPlugins) {\n      clusterSuccess = deployClusterPackage(packageInstance, isUpdate, noprompt, overrides);\n    }\n    \n    // Install plugins of type \"collection\"\n    Pair<List<String>, List<String>> deployResult = deployCollectionPackage(packageInstance, pegToLatest, isUpdate, noprompt, collections, overrides);\n    List<String> deployedCollections = deployResult.first();\n    List<String> previouslyDeployedOnCollections = deployResult.second();\n    \n    // Verify\n    boolean verifySuccess = true;\n    // Verify that package was successfully deployed\n    verifySuccess = verify(packageInstance, deployedCollections, shouldDeployClusterPlugins, overrides);\n    if (verifySuccess) {\n      PackageUtils.printGreen(\"Deployed on \" + deployedCollections + \" and verified package: \" + packageInstance.name + \", version: \" + packageInstance.version);\n    }\n\n    return clusterSuccess && previouslyDeployedOnCollections.isEmpty() && verifySuccess;\n  }\n\n","sourceOld":"  private boolean deployPackage(SolrPackageInstance packageInstance, boolean pegToLatest, boolean isUpdate, boolean noprompt,\n      List<String> collections, boolean shouldDeployClusterPlugins, String[] overrides) {\n\n    // Install plugins of type \"cluster\"\n    boolean clusterSuccess = deployClusterPackage(packageInstance, isUpdate, noprompt, shouldDeployClusterPlugins,\n        overrides);\n\n    \n    // Install plugins of type \"collection\"\n    Pair<List<String>, List<String>> deployResult = deployCollectionPackage(packageInstance, pegToLatest, isUpdate, noprompt, collections,\n        shouldDeployClusterPlugins, overrides);\n    List<String> deployedCollections = deployResult.first();\n    List<String> previouslyDeployedOnCollections = deployResult.second();\n    \n    // Verify\n    boolean verifySuccess = true;\n    // Verify that package was successfully deployed\n    verifySuccess = verify(packageInstance, deployedCollections, shouldDeployClusterPlugins, overrides);\n    if (verifySuccess) {\n      PackageUtils.printGreen(\"Deployed on \" + deployedCollections + \" and verified package: \" + packageInstance.name + \", version: \" + packageInstance.version);\n    }\n\n    return clusterSuccess && previouslyDeployedOnCollections.isEmpty() && verifySuccess;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4ea3ef3f76ecd22ead5b83d015adf8c16476a0f4":["a688687cbff91a8f44c95d31697c3ba8a47c8c25"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a688687cbff91a8f44c95d31697c3ba8a47c8c25":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4ea3ef3f76ecd22ead5b83d015adf8c16476a0f4"]},"commit2Childs":{"4ea3ef3f76ecd22ead5b83d015adf8c16476a0f4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a688687cbff91a8f44c95d31697c3ba8a47c8c25"],"a688687cbff91a8f44c95d31697c3ba8a47c8c25":["4ea3ef3f76ecd22ead5b83d015adf8c16476a0f4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}