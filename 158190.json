{"path":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseNumberFilter#testName().mjava","commits":[{"id":"ebe5243ceee1747a4161c2ea5f9be261be499288","date":1422960251,"type":0,"author":"Christian Moen","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseNumberFilter#testName().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testName() throws IOException {\n    // Test name that normalises to number\n    assertAnalyzesTo(analyzer, \"田中京一\",\n        new String[]{\"田中\", \"10000000000000001\"}, // 京一 is normalized to a number\n        new int[]{0, 2},\n        new int[]{2, 4},\n        new int[]{1, 1}\n    );\n\n    // An analyzer that marks 京一 as a keyword\n    Analyzer keywordMarkingAnalyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        CharArraySet set = new CharArraySet(1, false);\n        set.add(\"京一\");\n\n        Tokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), null, false, JapaneseTokenizer.Mode.SEARCH);\n        return new TokenStreamComponents(tokenizer, new JapaneseNumberFilter(new SetKeywordMarkerFilter(tokenizer, set)));\n      }\n    };\n\n    assertAnalyzesTo(keywordMarkingAnalyzer, \"田中京一\",\n        new String[]{\"田中\", \"京一\"}, // 京一 is not normalized\n        new int[]{0, 2},\n        new int[]{2, 4},\n        new int[]{1, 1}\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56958d7f71a28824f20031ffbb2e13502a0274e","date":1425573902,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseNumberFilter#testName().mjava","pathOld":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseNumberFilter#testName().mjava","sourceNew":"  @Test\n  public void testName() throws IOException {\n    // Test name that normalises to number\n    assertAnalyzesTo(analyzer, \"田中京一\",\n        new String[]{\"田中\", \"10000000000000001\"}, // 京一 is normalized to a number\n        new int[]{0, 2},\n        new int[]{2, 4},\n        new int[]{1, 1}\n    );\n\n    // An analyzer that marks 京一 as a keyword\n    Analyzer keywordMarkingAnalyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        CharArraySet set = new CharArraySet(1, false);\n        set.add(\"京一\");\n\n        Tokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), null, false, JapaneseTokenizer.Mode.SEARCH);\n        return new TokenStreamComponents(tokenizer, new JapaneseNumberFilter(new SetKeywordMarkerFilter(tokenizer, set)));\n      }\n    };\n\n    assertAnalyzesTo(keywordMarkingAnalyzer, \"田中京一\",\n        new String[]{\"田中\", \"京一\"}, // 京一 is not normalized\n        new int[]{0, 2},\n        new int[]{2, 4},\n        new int[]{1, 1}\n    );\n    keywordMarkingAnalyzer.close();\n  }\n\n","sourceOld":"  @Test\n  public void testName() throws IOException {\n    // Test name that normalises to number\n    assertAnalyzesTo(analyzer, \"田中京一\",\n        new String[]{\"田中\", \"10000000000000001\"}, // 京一 is normalized to a number\n        new int[]{0, 2},\n        new int[]{2, 4},\n        new int[]{1, 1}\n    );\n\n    // An analyzer that marks 京一 as a keyword\n    Analyzer keywordMarkingAnalyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        CharArraySet set = new CharArraySet(1, false);\n        set.add(\"京一\");\n\n        Tokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), null, false, JapaneseTokenizer.Mode.SEARCH);\n        return new TokenStreamComponents(tokenizer, new JapaneseNumberFilter(new SetKeywordMarkerFilter(tokenizer, set)));\n      }\n    };\n\n    assertAnalyzesTo(keywordMarkingAnalyzer, \"田中京一\",\n        new String[]{\"田中\", \"京一\"}, // 京一 is not normalized\n        new int[]{0, 2},\n        new int[]{2, 4},\n        new int[]{1, 1}\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseNumberFilter#testName().mjava","pathOld":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseNumberFilter#testName().mjava","sourceNew":"  @Test\n  public void testName() throws IOException {\n    // Test name that normalises to number\n    assertAnalyzesTo(analyzer, \"田中京一\",\n        new String[]{\"田中\", \"10000000000000001\"}, // 京一 is normalized to a number\n        new int[]{0, 2},\n        new int[]{2, 4},\n        new int[]{1, 1}\n    );\n\n    // An analyzer that marks 京一 as a keyword\n    Analyzer keywordMarkingAnalyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        CharArraySet set = new CharArraySet(1, false);\n        set.add(\"京一\");\n\n        Tokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), null, false, JapaneseTokenizer.Mode.SEARCH);\n        return new TokenStreamComponents(tokenizer, new JapaneseNumberFilter(new SetKeywordMarkerFilter(tokenizer, set)));\n      }\n    };\n\n    assertAnalyzesTo(keywordMarkingAnalyzer, \"田中京一\",\n        new String[]{\"田中\", \"京一\"}, // 京一 is not normalized\n        new int[]{0, 2},\n        new int[]{2, 4},\n        new int[]{1, 1}\n    );\n    keywordMarkingAnalyzer.close();\n  }\n\n","sourceOld":"  @Test\n  public void testName() throws IOException {\n    // Test name that normalises to number\n    assertAnalyzesTo(analyzer, \"田中京一\",\n        new String[]{\"田中\", \"10000000000000001\"}, // 京一 is normalized to a number\n        new int[]{0, 2},\n        new int[]{2, 4},\n        new int[]{1, 1}\n    );\n\n    // An analyzer that marks 京一 as a keyword\n    Analyzer keywordMarkingAnalyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        CharArraySet set = new CharArraySet(1, false);\n        set.add(\"京一\");\n\n        Tokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), null, false, JapaneseTokenizer.Mode.SEARCH);\n        return new TokenStreamComponents(tokenizer, new JapaneseNumberFilter(new SetKeywordMarkerFilter(tokenizer, set)));\n      }\n    };\n\n    assertAnalyzesTo(keywordMarkingAnalyzer, \"田中京一\",\n        new String[]{\"田中\", \"京一\"}, // 京一 is not normalized\n        new int[]{0, 2},\n        new int[]{2, 4},\n        new int[]{1, 1}\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ebe5243ceee1747a4161c2ea5f9be261be499288":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["ebe5243ceee1747a4161c2ea5f9be261be499288","a56958d7f71a28824f20031ffbb2e13502a0274e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a56958d7f71a28824f20031ffbb2e13502a0274e":["ebe5243ceee1747a4161c2ea5f9be261be499288"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a56958d7f71a28824f20031ffbb2e13502a0274e"]},"commit2Childs":{"ebe5243ceee1747a4161c2ea5f9be261be499288":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a56958d7f71a28824f20031ffbb2e13502a0274e"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ebe5243ceee1747a4161c2ea5f9be261be499288"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}