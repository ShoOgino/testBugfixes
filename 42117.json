{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamDecoratorTest#testParseTSV().mjava","commits":[{"id":"d60fd4bf1b42425aefd75d8a133d8d7ea41722e9","date":1564497726,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamDecoratorTest#testParseTSV().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testParseTSV() throws Exception {\n    String expr = \"parseTSV(list(tuple(file=\\\"file1\\\", line=\\\"a\\tb\\tc\\\"), \" +\n        \"                        tuple(file=\\\"file1\\\", line=\\\"1\\t2\\t3\\\"),\" +\n        \"                        tuple(file=\\\"file1\\\", line=\\\"hello, world\\t9000\\t20\\\"),\" +\n        \"                        tuple(file=\\\"file2\\\", line=\\\"field_1\\tfield_2\\tfield_3\\\"), \"+\n        \"                        tuple(file=\\\"file2\\\", line=\\\"8\\t\\t9\\\")))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", expr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString() + \"/\" + COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertEquals(tuples.size(),  3);\n    assertEquals(tuples.get(0).getString(\"a\"), \"1\");\n    assertEquals(tuples.get(0).getString(\"b\"), \"2\");\n    assertEquals(tuples.get(0).getString(\"c\"), \"3\");\n\n    assertEquals(tuples.get(1).getString(\"a\"), \"hello, world\");\n    assertEquals(tuples.get(1).getString(\"b\"), \"9000\");\n    assertEquals(tuples.get(1).getString(\"c\"), \"20\");\n\n    assertEquals(tuples.get(2).getString(\"field_1\"), \"8\");\n    assertNull(tuples.get(2).get(\"field_2\"));\n    assertEquals(tuples.get(2).getString(\"field_3\"), \"9\");\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":0,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamDecoratorTest#testParseTSV().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testParseTSV() throws Exception {\n    String expr = \"parseTSV(list(tuple(file=\\\"file1\\\", line=\\\"a\\tb\\tc\\\"), \" +\n        \"                        tuple(file=\\\"file1\\\", line=\\\"1\\t2\\t3\\\"),\" +\n        \"                        tuple(file=\\\"file1\\\", line=\\\"hello, world\\t9000\\t20\\\"),\" +\n        \"                        tuple(file=\\\"file2\\\", line=\\\"field_1\\tfield_2\\tfield_3\\\"), \"+\n        \"                        tuple(file=\\\"file2\\\", line=\\\"8\\t\\t9\\\")))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", expr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString() + \"/\" + COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertEquals(tuples.size(),  3);\n    assertEquals(tuples.get(0).getString(\"a\"), \"1\");\n    assertEquals(tuples.get(0).getString(\"b\"), \"2\");\n    assertEquals(tuples.get(0).getString(\"c\"), \"3\");\n\n    assertEquals(tuples.get(1).getString(\"a\"), \"hello, world\");\n    assertEquals(tuples.get(1).getString(\"b\"), \"9000\");\n    assertEquals(tuples.get(1).getString(\"c\"), \"20\");\n\n    assertEquals(tuples.get(2).getString(\"field_1\"), \"8\");\n    assertNull(tuples.get(2).get(\"field_2\"));\n    assertEquals(tuples.get(2).getString(\"field_3\"), \"9\");\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d60fd4bf1b42425aefd75d8a133d8d7ea41722e9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f8061ddd97f3352007d927dae445884a6f3d857b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d60fd4bf1b42425aefd75d8a133d8d7ea41722e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d60fd4bf1b42425aefd75d8a133d8d7ea41722e9"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d60fd4bf1b42425aefd75d8a133d8d7ea41722e9","f8061ddd97f3352007d927dae445884a6f3d857b"],"d60fd4bf1b42425aefd75d8a133d8d7ea41722e9":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}