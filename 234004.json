{"path":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap#remove(Object).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap#remove(Object).mjava","pathOld":"solr/src/java/org/apache/solr/core/JmxMonitoredMap#remove(Object).mjava","sourceNew":"  /**\n   * Removes the SolrInfoMBean object at the given key and unregisters it from\n   * MBeanServer\n   *\n   * @param key the JMX type name for this SolrInfoMBean\n   */\n  @Override\n  public SolrInfoMBean remove(Object key) {\n    SolrInfoMBean infoBean = get(key);\n    if (infoBean != null) {\n      try {\n        unregister((String) key, infoBean);\n      } catch (RuntimeException e) {\n        LOG.warn( \"Failed to unregister info bean: \" + key, e);\n      }\n    }\n    return super.remove(key);\n  }\n\n","sourceOld":"  /**\n   * Removes the SolrInfoMBean object at the given key and unregisters it from\n   * MBeanServer\n   *\n   * @param key the JMX type name for this SolrInfoMBean\n   */\n  @Override\n  public SolrInfoMBean remove(Object key) {\n    SolrInfoMBean infoBean = get(key);\n    if (infoBean != null) {\n      try {\n        unregister((String) key, infoBean);\n      } catch (RuntimeException e) {\n        LOG.warn( \"Failed to unregister info bean: \" + key, e);\n      }\n    }\n    return super.remove(key);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap#remove(Object).mjava","pathOld":"solr/src/java/org/apache/solr/core/JmxMonitoredMap#remove(Object).mjava","sourceNew":"  /**\n   * Removes the SolrInfoMBean object at the given key and unregisters it from\n   * MBeanServer\n   *\n   * @param key the JMX type name for this SolrInfoMBean\n   */\n  @Override\n  public SolrInfoMBean remove(Object key) {\n    SolrInfoMBean infoBean = get(key);\n    if (infoBean != null) {\n      try {\n        unregister((String) key, infoBean);\n      } catch (RuntimeException e) {\n        LOG.warn( \"Failed to unregister info bean: \" + key, e);\n      }\n    }\n    return super.remove(key);\n  }\n\n","sourceOld":"  /**\n   * Removes the SolrInfoMBean object at the given key and unregisters it from\n   * MBeanServer\n   *\n   * @param key the JMX type name for this SolrInfoMBean\n   */\n  @Override\n  public SolrInfoMBean remove(Object key) {\n    SolrInfoMBean infoBean = get(key);\n    if (infoBean != null) {\n      try {\n        unregister((String) key, infoBean);\n      } catch (RuntimeException e) {\n        LOG.warn( \"Failed to unregister info bean: \" + key, e);\n      }\n    }\n    return super.remove(key);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap#remove(Object).mjava","pathOld":"solr/src/java/org/apache/solr/core/JmxMonitoredMap#remove(Object).mjava","sourceNew":"  /**\n   * Removes the SolrInfoMBean object at the given key and unregisters it from\n   * MBeanServer\n   *\n   * @param key the JMX type name for this SolrInfoMBean\n   */\n  @Override\n  public SolrInfoMBean remove(Object key) {\n    SolrInfoMBean infoBean = get(key);\n    if (infoBean != null) {\n      try {\n        unregister((String) key, infoBean);\n      } catch (RuntimeException e) {\n        LOG.warn( \"Failed to unregister info bean: \" + key, e);\n      }\n    }\n    return super.remove(key);\n  }\n\n","sourceOld":"  /**\n   * Removes the SolrInfoMBean object at the given key and unregisters it from\n   * MBeanServer\n   *\n   * @param key the JMX type name for this SolrInfoMBean\n   */\n  @Override\n  public SolrInfoMBean remove(Object key) {\n    SolrInfoMBean infoBean = get(key);\n    if (infoBean != null) {\n      try {\n        unregister((String) key, infoBean);\n      } catch (RuntimeException e) {\n        LOG.warn( \"Failed to unregister info bean: \" + key, e);\n      }\n    }\n    return super.remove(key);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f0c8426396c925de8db3ed3f8ff40fd73670a5c","date":1474556641,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap#remove(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap#remove(Object).mjava","sourceNew":"  /**\n   * Removes the SolrInfoMBean object at the given key and unregisters it from\n   * MBeanServer\n   *\n   * @param key the JMX type name for this SolrInfoMBean\n   */\n  @Override\n  public SolrInfoMBean remove(Object key) {\n    SolrInfoMBean infoBean = get(key);\n    if (infoBean != null) {\n      try {\n        unregister((String) key, infoBean);\n      } catch (RuntimeException e) {\n        log.warn( \"Failed to unregister info bean: \" + key, e);\n      }\n    }\n    return super.remove(key);\n  }\n\n","sourceOld":"  /**\n   * Removes the SolrInfoMBean object at the given key and unregisters it from\n   * MBeanServer\n   *\n   * @param key the JMX type name for this SolrInfoMBean\n   */\n  @Override\n  public SolrInfoMBean remove(Object key) {\n    SolrInfoMBean infoBean = get(key);\n    if (infoBean != null) {\n      try {\n        unregister((String) key, infoBean);\n      } catch (RuntimeException e) {\n        LOG.warn( \"Failed to unregister info bean: \" + key, e);\n      }\n    }\n    return super.remove(key);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"126d6ad24eed13163ba0959435d5a80e5672837c","date":1474567302,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap#remove(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap#remove(Object).mjava","sourceNew":"  /**\n   * Removes the SolrInfoMBean object at the given key and unregisters it from\n   * MBeanServer\n   *\n   * @param key the JMX type name for this SolrInfoMBean\n   */\n  @Override\n  public SolrInfoMBean remove(Object key) {\n    SolrInfoMBean infoBean = get(key);\n    if (infoBean != null) {\n      try {\n        unregister((String) key, infoBean);\n      } catch (RuntimeException e) {\n        log.warn( \"Failed to unregister info bean: \" + key, e);\n      }\n    }\n    return super.remove(key);\n  }\n\n","sourceOld":"  /**\n   * Removes the SolrInfoMBean object at the given key and unregisters it from\n   * MBeanServer\n   *\n   * @param key the JMX type name for this SolrInfoMBean\n   */\n  @Override\n  public SolrInfoMBean remove(Object key) {\n    SolrInfoMBean infoBean = get(key);\n    if (infoBean != null) {\n      try {\n        unregister((String) key, infoBean);\n      } catch (RuntimeException e) {\n        LOG.warn( \"Failed to unregister info bean: \" + key, e);\n      }\n    }\n    return super.remove(key);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap#remove(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap#remove(Object).mjava","sourceNew":"  /**\n   * Removes the SolrInfoMBean object at the given key and unregisters it from\n   * MBeanServer\n   *\n   * @param key the JMX type name for this SolrInfoMBean\n   */\n  @Override\n  public SolrInfoMBean remove(Object key) {\n    SolrInfoMBean infoBean = get(key);\n    if (infoBean != null) {\n      try {\n        unregister((String) key, infoBean);\n      } catch (RuntimeException e) {\n        log.warn( \"Failed to unregister info bean: \" + key, e);\n      }\n    }\n    return super.remove(key);\n  }\n\n","sourceOld":"  /**\n   * Removes the SolrInfoMBean object at the given key and unregisters it from\n   * MBeanServer\n   *\n   * @param key the JMX type name for this SolrInfoMBean\n   */\n  @Override\n  public SolrInfoMBean remove(Object key) {\n    SolrInfoMBean infoBean = get(key);\n    if (infoBean != null) {\n      try {\n        unregister((String) key, infoBean);\n      } catch (RuntimeException e) {\n        LOG.warn( \"Failed to unregister info bean: \" + key, e);\n      }\n    }\n    return super.remove(key);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap#remove(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap#remove(Object).mjava","sourceNew":"  /**\n   * Removes the SolrInfoMBean object at the given key and unregisters it from\n   * MBeanServer\n   *\n   * @param key the JMX type name for this SolrInfoMBean\n   */\n  @Override\n  public SolrInfoMBean remove(Object key) {\n    SolrInfoMBean infoBean = get(key);\n    if (infoBean != null) {\n      try {\n        unregister((String) key, infoBean);\n      } catch (RuntimeException e) {\n        log.warn( \"Failed to unregister info bean: \" + key, e);\n      }\n    }\n    return super.remove(key);\n  }\n\n","sourceOld":"  /**\n   * Removes the SolrInfoMBean object at the given key and unregisters it from\n   * MBeanServer\n   *\n   * @param key the JMX type name for this SolrInfoMBean\n   */\n  @Override\n  public SolrInfoMBean remove(Object key) {\n    SolrInfoMBean infoBean = get(key);\n    if (infoBean != null) {\n      try {\n        unregister((String) key, infoBean);\n      } catch (RuntimeException e) {\n        LOG.warn( \"Failed to unregister info bean: \" + key, e);\n      }\n    }\n    return super.remove(key);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap#remove(Object).mjava","sourceNew":null,"sourceOld":"  /**\n   * Removes the SolrInfoMBean object at the given key and unregisters it from\n   * MBeanServer\n   *\n   * @param key the JMX type name for this SolrInfoMBean\n   */\n  @Override\n  public SolrInfoMBean remove(Object key) {\n    SolrInfoMBean infoBean = get(key);\n    if (infoBean != null) {\n      try {\n        unregister((String) key, infoBean);\n      } catch (RuntimeException e) {\n        log.warn( \"Failed to unregister info bean: \" + key, e);\n      }\n    }\n    return super.remove(key);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap#remove(Object).mjava","sourceNew":null,"sourceOld":"  /**\n   * Removes the SolrInfoMBean object at the given key and unregisters it from\n   * MBeanServer\n   *\n   * @param key the JMX type name for this SolrInfoMBean\n   */\n  @Override\n  public SolrInfoMBean remove(Object key) {\n    SolrInfoMBean infoBean = get(key);\n    if (infoBean != null) {\n      try {\n        unregister((String) key, infoBean);\n      } catch (RuntimeException e) {\n        log.warn( \"Failed to unregister info bean: \" + key, e);\n      }\n    }\n    return super.remove(key);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"126d6ad24eed13163ba0959435d5a80e5672837c":["c26f00b574427b55127e869b935845554afde1fa","7f0c8426396c925de8db3ed3f8ff40fd73670a5c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["c26f00b574427b55127e869b935845554afde1fa","126d6ad24eed13163ba0959435d5a80e5672837c"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"816521ebaad5add9cb96bb88c577394e2938c40b":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"7f0c8426396c925de8db3ed3f8ff40fd73670a5c":["c26f00b574427b55127e869b935845554afde1fa"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["c26f00b574427b55127e869b935845554afde1fa","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["816521ebaad5add9cb96bb88c577394e2938c40b"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"126d6ad24eed13163ba0959435d5a80e5672837c":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["126d6ad24eed13163ba0959435d5a80e5672837c","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","7f0c8426396c925de8db3ed3f8ff40fd73670a5c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","816521ebaad5add9cb96bb88c577394e2938c40b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"7f0c8426396c925de8db3ed3f8ff40fd73670a5c":["126d6ad24eed13163ba0959435d5a80e5672837c"],"816521ebaad5add9cb96bb88c577394e2938c40b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","a258fbb26824fd104ed795e5d9033d2d040049ee","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}