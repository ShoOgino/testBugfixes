{"path":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/bbox/TestBBoxStrategy#testOperations().mjava","commits":[{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/bbox/TestBBoxStrategy#testOperations().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/bbox/TestBBoxStrategy#testOperations().mjava","sourceNew":"  @Test\n  @Repeat(iterations = 15)\n  public void testOperations() throws IOException {\n    //setup\n    if (random().nextInt(4) > 0) {//75% of the time choose geo (more interesting to test)\n      this.ctx = SpatialContext.GEO;\n    } else {\n      SpatialContextFactory factory = new SpatialContextFactory();\n      factory.geo = false;\n      factory.worldBounds = new RectangleImpl(-300, 300, -100, 100, null);\n      this.ctx = factory.newSpatialContext();\n    }\n    this.strategy = new BBoxStrategy(ctx, \"bbox\");\n    //test we can disable docValues for predicate tests\n    if (random().nextBoolean()) {\n      BBoxStrategy bboxStrategy = (BBoxStrategy) strategy;\n      FieldType fieldType = new FieldType(bboxStrategy.getFieldType());\n      fieldType.setDocValuesType(DocValuesType.NONE);\n      bboxStrategy.setFieldType(fieldType);\n    }\n    for (SpatialOperation operation : SpatialOperation.values()) {\n      if (operation == SpatialOperation.Overlaps)\n        continue;//unsupported\n      testOperationRandomShapes(operation);\n\n      deleteAll();\n      commit();\n    }\n  }\n\n","sourceOld":"  @Test\n  @Repeat(iterations = 15)\n  public void testOperations() throws IOException {\n    //setup\n    if (random().nextInt(4) > 0) {//75% of the time choose geo (more interesting to test)\n      this.ctx = SpatialContext.GEO;\n    } else {\n      SpatialContextFactory factory = new SpatialContextFactory();\n      factory.geo = false;\n      factory.worldBounds = new RectangleImpl(-300, 300, -100, 100, null);\n      this.ctx = factory.newSpatialContext();\n    }\n    this.strategy = new BBoxStrategy(ctx, \"bbox\");\n    //test we can disable docValues for predicate tests\n    if (random().nextBoolean()) {\n      BBoxStrategy bboxStrategy = (BBoxStrategy) strategy;\n      FieldType fieldType = new FieldType(bboxStrategy.getFieldType());\n      fieldType.setDocValuesType(DocValuesType.NONE);\n      bboxStrategy.setFieldType(fieldType);\n    }\n    for (SpatialOperation operation : SpatialOperation.values()) {\n      if (operation == SpatialOperation.Overlaps)\n        continue;//unsupported\n      testOperationRandomShapes(operation);\n\n      deleteAll();\n      commit();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/bbox/TestBBoxStrategy#testOperations().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/bbox/TestBBoxStrategy#testOperations().mjava","sourceNew":"  @Test\n  @Repeat(iterations = 15)\n  public void testOperations() throws IOException {\n    //setup\n    if (random().nextInt(4) > 0) {//75% of the time choose geo (more interesting to test)\n      this.ctx = SpatialContext.GEO;\n    } else {\n      SpatialContextFactory factory = new SpatialContextFactory();\n      factory.geo = false;\n      factory.worldBounds = new RectangleImpl(-300, 300, -100, 100, null);\n      this.ctx = factory.newSpatialContext();\n    }\n    this.strategy = new BBoxStrategy(ctx, \"bbox\");\n    //test we can disable docValues for predicate tests\n    if (random().nextBoolean()) {\n      BBoxStrategy bboxStrategy = (BBoxStrategy) strategy;\n      FieldType fieldType = new FieldType(bboxStrategy.getFieldType());\n      fieldType.setDocValuesType(DocValuesType.NONE);\n      bboxStrategy.setFieldType(fieldType);\n    }\n    for (SpatialOperation operation : SpatialOperation.values()) {\n      if (operation == SpatialOperation.Overlaps)\n        continue;//unsupported\n      testOperationRandomShapes(operation);\n\n      deleteAll();\n      commit();\n    }\n  }\n\n","sourceOld":"  @Test\n  @Repeat(iterations = 15)\n  public void testOperations() throws IOException {\n    //setup\n    if (random().nextInt(4) > 0) {//75% of the time choose geo (more interesting to test)\n      this.ctx = SpatialContext.GEO;\n    } else {\n      SpatialContextFactory factory = new SpatialContextFactory();\n      factory.geo = false;\n      factory.worldBounds = new RectangleImpl(-300, 300, -100, 100, null);\n      this.ctx = factory.newSpatialContext();\n    }\n    this.strategy = new BBoxStrategy(ctx, \"bbox\");\n    //test we can disable docValues for predicate tests\n    if (random().nextBoolean()) {\n      BBoxStrategy bboxStrategy = (BBoxStrategy) strategy;\n      FieldType fieldType = new FieldType(bboxStrategy.getFieldType());\n      fieldType.setDocValuesType(DocValuesType.NONE);\n      bboxStrategy.setFieldType(fieldType);\n    }\n    for (SpatialOperation operation : SpatialOperation.values()) {\n      if (operation == SpatialOperation.Overlaps)\n        continue;//unsupported\n      testOperationRandomShapes(operation);\n\n      deleteAll();\n      commit();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4","date":1459379660,"type":3,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/bbox/TestBBoxStrategy#testOperations().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/bbox/TestBBoxStrategy#testOperations().mjava","sourceNew":"  @Test\n  @Repeat(iterations = 15)\n  public void testOperations() throws IOException {\n    //setup\n    if (random().nextInt(4) > 0) {//75% of the time choose geo (more interesting to test)\n      this.ctx = SpatialContext.GEO;\n    } else {\n      SpatialContextFactory factory = new SpatialContextFactory();\n      factory.geo = false;\n      factory.worldBounds = new RectangleImpl(-300, 300, -100, 100, null);\n      this.ctx = factory.newSpatialContext();\n    }\n    // randomly test legacy (numeric) and point based bbox strategy\n    if (random().nextBoolean()) {\n      this.strategy = BBoxStrategy.newInstance(ctx, \"bbox\");\n    } else {\n      this.strategy = BBoxStrategy.newLegacyInstance(ctx, \"bbox\");\n    }\n    //test we can disable docValues for predicate tests\n    if (random().nextBoolean()) {\n      FieldType fieldType = new FieldType(((BBoxStrategy)strategy).getFieldType());\n      fieldType.setDocValuesType(DocValuesType.NONE);\n      strategy = new BBoxStrategy(ctx, strategy.getFieldName(), fieldType);\n    }\n    for (SpatialOperation operation : SpatialOperation.values()) {\n      if (operation == SpatialOperation.Overlaps)\n        continue;//unsupported\n      testOperationRandomShapes(operation);\n\n      deleteAll();\n      commit();\n    }\n  }\n\n","sourceOld":"  @Test\n  @Repeat(iterations = 15)\n  public void testOperations() throws IOException {\n    //setup\n    if (random().nextInt(4) > 0) {//75% of the time choose geo (more interesting to test)\n      this.ctx = SpatialContext.GEO;\n    } else {\n      SpatialContextFactory factory = new SpatialContextFactory();\n      factory.geo = false;\n      factory.worldBounds = new RectangleImpl(-300, 300, -100, 100, null);\n      this.ctx = factory.newSpatialContext();\n    }\n    this.strategy = new BBoxStrategy(ctx, \"bbox\");\n    //test we can disable docValues for predicate tests\n    if (random().nextBoolean()) {\n      BBoxStrategy bboxStrategy = (BBoxStrategy) strategy;\n      FieldType fieldType = new FieldType(bboxStrategy.getFieldType());\n      fieldType.setDocValuesType(DocValuesType.NONE);\n      bboxStrategy.setFieldType(fieldType);\n    }\n    for (SpatialOperation operation : SpatialOperation.values()) {\n      if (operation == SpatialOperation.Overlaps)\n        continue;//unsupported\n      testOperationRandomShapes(operation);\n\n      deleteAll();\n      commit();\n    }\n  }\n\n","bugFix":["3269e69dcc44e7f5024b6bf7511f7322a764eb8d","1eb9cd4e9d9dc2a301efb4dc420fcb069a9dd018"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5af5ba0166322092193d4c29880b0f7670fc7ca0","date":1471440525,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/bbox/TestBBoxStrategy#testOperations().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/bbox/TestBBoxStrategy#testOperations().mjava","sourceNew":"  @Test\n  @Repeat(iterations = 15)\n  public void testOperations() throws IOException {\n    //setup\n    if (random().nextInt(4) > 0) {//75% of the time choose geo (more interesting to test)\n      this.ctx = SpatialContext.GEO;\n    } else {\n      SpatialContextFactory factory = new SpatialContextFactory();\n      factory.geo = false;\n      factory.worldBounds = new RectangleImpl(-300, 300, -100, 100, null);\n      this.ctx = factory.newSpatialContext();\n    }\n    // randomly test legacy (numeric) and point based bbox strategy\n    if (random().nextBoolean()) {\n      this.strategy = BBoxStrategy.newInstance(ctx, \"bbox\");\n    } else {\n      this.strategy = BBoxStrategy.newLegacyInstance(ctx, \"bbox\");\n    }\n    //test we can disable docValues for predicate tests\n    if (random().nextBoolean()) {\n      FieldType fieldType = ((BBoxStrategy)strategy).getFieldType();\n      if (fieldType instanceof LegacyFieldType) {\n        fieldType = new LegacyFieldType((LegacyFieldType)fieldType);\n      } else {\n        fieldType = new FieldType(fieldType);\n      }\n      fieldType.setDocValuesType(DocValuesType.NONE);\n      strategy = new BBoxStrategy(ctx, strategy.getFieldName(), fieldType);\n    }\n    for (SpatialOperation operation : SpatialOperation.values()) {\n      if (operation == SpatialOperation.Overlaps)\n        continue;//unsupported\n      testOperationRandomShapes(operation);\n\n      deleteAll();\n      commit();\n    }\n  }\n\n","sourceOld":"  @Test\n  @Repeat(iterations = 15)\n  public void testOperations() throws IOException {\n    //setup\n    if (random().nextInt(4) > 0) {//75% of the time choose geo (more interesting to test)\n      this.ctx = SpatialContext.GEO;\n    } else {\n      SpatialContextFactory factory = new SpatialContextFactory();\n      factory.geo = false;\n      factory.worldBounds = new RectangleImpl(-300, 300, -100, 100, null);\n      this.ctx = factory.newSpatialContext();\n    }\n    // randomly test legacy (numeric) and point based bbox strategy\n    if (random().nextBoolean()) {\n      this.strategy = BBoxStrategy.newInstance(ctx, \"bbox\");\n    } else {\n      this.strategy = BBoxStrategy.newLegacyInstance(ctx, \"bbox\");\n    }\n    //test we can disable docValues for predicate tests\n    if (random().nextBoolean()) {\n      FieldType fieldType = new FieldType(((BBoxStrategy)strategy).getFieldType());\n      fieldType.setDocValuesType(DocValuesType.NONE);\n      strategy = new BBoxStrategy(ctx, strategy.getFieldName(), fieldType);\n    }\n    for (SpatialOperation operation : SpatialOperation.values()) {\n      if (operation == SpatialOperation.Overlaps)\n        continue;//unsupported\n      testOperationRandomShapes(operation);\n\n      deleteAll();\n      commit();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","date":1471496851,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/bbox/TestBBoxStrategy#testOperations().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/bbox/TestBBoxStrategy#testOperations().mjava","sourceNew":"  @Test\n  @Repeat(iterations = 15)\n  public void testOperations() throws IOException {\n    //setup\n    if (random().nextInt(4) > 0) {//75% of the time choose geo (more interesting to test)\n      this.ctx = SpatialContext.GEO;\n    } else {\n      SpatialContextFactory factory = new SpatialContextFactory();\n      factory.geo = false;\n      factory.worldBounds = new RectangleImpl(-300, 300, -100, 100, null);\n      this.ctx = factory.newSpatialContext();\n    }\n    // randomly test legacy (numeric) and point based bbox strategy\n    if (random().nextBoolean()) {\n      this.strategy = BBoxStrategy.newInstance(ctx, \"bbox\");\n    } else {\n      this.strategy = BBoxStrategy.newLegacyInstance(ctx, \"bbox\");\n    }\n    //test we can disable docValues for predicate tests\n    if (random().nextBoolean()) {\n      FieldType fieldType = ((BBoxStrategy)strategy).getFieldType();\n      if (fieldType instanceof LegacyFieldType) {\n        fieldType = new LegacyFieldType((LegacyFieldType)fieldType);\n      } else {\n        fieldType = new FieldType(fieldType);\n      }\n      fieldType.setDocValuesType(DocValuesType.NONE);\n      strategy = new BBoxStrategy(ctx, strategy.getFieldName(), fieldType);\n    }\n    for (SpatialOperation operation : SpatialOperation.values()) {\n      if (operation == SpatialOperation.Overlaps)\n        continue;//unsupported\n      testOperationRandomShapes(operation);\n\n      deleteAll();\n      commit();\n    }\n  }\n\n","sourceOld":"  @Test\n  @Repeat(iterations = 15)\n  public void testOperations() throws IOException {\n    //setup\n    if (random().nextInt(4) > 0) {//75% of the time choose geo (more interesting to test)\n      this.ctx = SpatialContext.GEO;\n    } else {\n      SpatialContextFactory factory = new SpatialContextFactory();\n      factory.geo = false;\n      factory.worldBounds = new RectangleImpl(-300, 300, -100, 100, null);\n      this.ctx = factory.newSpatialContext();\n    }\n    // randomly test legacy (numeric) and point based bbox strategy\n    if (random().nextBoolean()) {\n      this.strategy = BBoxStrategy.newInstance(ctx, \"bbox\");\n    } else {\n      this.strategy = BBoxStrategy.newLegacyInstance(ctx, \"bbox\");\n    }\n    //test we can disable docValues for predicate tests\n    if (random().nextBoolean()) {\n      FieldType fieldType = new FieldType(((BBoxStrategy)strategy).getFieldType());\n      fieldType.setDocValuesType(DocValuesType.NONE);\n      strategy = new BBoxStrategy(ctx, strategy.getFieldName(), fieldType);\n    }\n    for (SpatialOperation operation : SpatialOperation.values()) {\n      if (operation == SpatialOperation.Overlaps)\n        continue;//unsupported\n      testOperationRandomShapes(operation);\n\n      deleteAll();\n      commit();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/bbox/TestBBoxStrategy#testOperations().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/bbox/TestBBoxStrategy#testOperations().mjava","sourceNew":"  @Test\n  @Repeat(iterations = 15)\n  public void testOperations() throws IOException {\n    //setup\n    if (random().nextInt(4) > 0) {//75% of the time choose geo (more interesting to test)\n      this.ctx = SpatialContext.GEO;\n    } else {\n      SpatialContextFactory factory = new SpatialContextFactory();\n      factory.geo = false;\n      factory.worldBounds = new RectangleImpl(-300, 300, -100, 100, null);\n      this.ctx = factory.newSpatialContext();\n    }\n    // randomly test legacy (numeric) and point based bbox strategy\n    if (random().nextBoolean()) {\n      this.strategy = BBoxStrategy.newInstance(ctx, \"bbox\");\n    } else {\n      this.strategy = BBoxStrategy.newLegacyInstance(ctx, \"bbox\");\n    }\n    //test we can disable docValues for predicate tests\n    if (random().nextBoolean()) {\n      FieldType fieldType = ((BBoxStrategy)strategy).getFieldType();\n      if (fieldType instanceof LegacyFieldType) {\n        fieldType = new LegacyFieldType((LegacyFieldType)fieldType);\n      } else {\n        fieldType = new FieldType(fieldType);\n      }\n      fieldType.setDocValuesType(DocValuesType.NONE);\n      strategy = new BBoxStrategy(ctx, strategy.getFieldName(), fieldType);\n    }\n    for (SpatialOperation operation : SpatialOperation.values()) {\n      if (operation == SpatialOperation.Overlaps)\n        continue;//unsupported\n      testOperationRandomShapes(operation);\n\n      deleteAll();\n      commit();\n    }\n  }\n\n","sourceOld":"  @Test\n  @Repeat(iterations = 15)\n  public void testOperations() throws IOException {\n    //setup\n    if (random().nextInt(4) > 0) {//75% of the time choose geo (more interesting to test)\n      this.ctx = SpatialContext.GEO;\n    } else {\n      SpatialContextFactory factory = new SpatialContextFactory();\n      factory.geo = false;\n      factory.worldBounds = new RectangleImpl(-300, 300, -100, 100, null);\n      this.ctx = factory.newSpatialContext();\n    }\n    // randomly test legacy (numeric) and point based bbox strategy\n    if (random().nextBoolean()) {\n      this.strategy = BBoxStrategy.newInstance(ctx, \"bbox\");\n    } else {\n      this.strategy = BBoxStrategy.newLegacyInstance(ctx, \"bbox\");\n    }\n    //test we can disable docValues for predicate tests\n    if (random().nextBoolean()) {\n      FieldType fieldType = new FieldType(((BBoxStrategy)strategy).getFieldType());\n      fieldType.setDocValuesType(DocValuesType.NONE);\n      strategy = new BBoxStrategy(ctx, strategy.getFieldName(), fieldType);\n    }\n    for (SpatialOperation operation : SpatialOperation.values()) {\n      if (operation == SpatialOperation.Overlaps)\n        continue;//unsupported\n      testOperationRandomShapes(operation);\n\n      deleteAll();\n      commit();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/bbox/TestBBoxStrategy#testOperations().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/bbox/TestBBoxStrategy#testOperations().mjava","sourceNew":"  @Test\n  @Repeat(iterations = 15)\n  public void testOperations() throws IOException {\n    //setup\n    if (random().nextInt(4) > 0) {//75% of the time choose geo (more interesting to test)\n      this.ctx = SpatialContext.GEO;\n    } else {\n      SpatialContextFactory factory = new SpatialContextFactory();\n      factory.geo = false;\n      factory.worldBounds = new RectangleImpl(-300, 300, -100, 100, null);\n      this.ctx = factory.newSpatialContext();\n    }\n    // randomly test legacy (numeric) and point based bbox strategy\n    if (random().nextBoolean()) {\n      this.strategy = BBoxStrategy.newInstance(ctx, \"bbox\");\n    } else {\n      this.strategy = BBoxStrategy.newLegacyInstance(ctx, \"bbox\");\n    }\n    //test we can disable docValues for predicate tests\n    if (random().nextBoolean()) {\n      FieldType fieldType = ((BBoxStrategy)strategy).getFieldType();\n      if (fieldType instanceof LegacyFieldType) {\n        fieldType = new LegacyFieldType((LegacyFieldType)fieldType);\n      } else {\n        fieldType = new FieldType(fieldType);\n      }\n      fieldType.setDocValuesType(DocValuesType.NONE);\n      strategy = new BBoxStrategy(ctx, strategy.getFieldName(), fieldType);\n    }\n    for (SpatialOperation operation : SpatialOperation.values()) {\n      if (operation == SpatialOperation.Overlaps)\n        continue;//unsupported\n      testOperationRandomShapes(operation);\n\n      deleteAll();\n      commit();\n    }\n  }\n\n","sourceOld":"  @Test\n  @Repeat(iterations = 15)\n  public void testOperations() throws IOException {\n    //setup\n    if (random().nextInt(4) > 0) {//75% of the time choose geo (more interesting to test)\n      this.ctx = SpatialContext.GEO;\n    } else {\n      SpatialContextFactory factory = new SpatialContextFactory();\n      factory.geo = false;\n      factory.worldBounds = new RectangleImpl(-300, 300, -100, 100, null);\n      this.ctx = factory.newSpatialContext();\n    }\n    // randomly test legacy (numeric) and point based bbox strategy\n    if (random().nextBoolean()) {\n      this.strategy = BBoxStrategy.newInstance(ctx, \"bbox\");\n    } else {\n      this.strategy = BBoxStrategy.newLegacyInstance(ctx, \"bbox\");\n    }\n    //test we can disable docValues for predicate tests\n    if (random().nextBoolean()) {\n      FieldType fieldType = new FieldType(((BBoxStrategy)strategy).getFieldType());\n      fieldType.setDocValuesType(DocValuesType.NONE);\n      strategy = new BBoxStrategy(ctx, strategy.getFieldName(), fieldType);\n    }\n    for (SpatialOperation operation : SpatialOperation.values()) {\n      if (operation == SpatialOperation.Overlaps)\n        continue;//unsupported\n      testOperationRandomShapes(operation);\n\n      deleteAll();\n      commit();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a178ac3dec643551e66363c457a9074f55545f86","date":1496133188,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/bbox/TestBBoxStrategy#testOperations().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/bbox/TestBBoxStrategy#testOperations().mjava","sourceNew":"  @Test\n  @Repeat(iterations = 15)\n  public void testOperations() throws IOException {\n    //setup\n    if (random().nextInt(4) > 0) {//75% of the time choose geo (more interesting to test)\n      this.ctx = SpatialContext.GEO;\n    } else {\n      SpatialContextFactory factory = new SpatialContextFactory();\n      factory.geo = false;\n      factory.worldBounds = new RectangleImpl(-300, 300, -100, 100, null);\n      this.ctx = factory.newSpatialContext();\n    }\n    this.strategy = BBoxStrategy.newInstance(ctx, \"bbox\");\n    //test we can disable docValues for predicate tests\n    if (random().nextBoolean()) {\n      FieldType fieldType = new FieldType(((BBoxStrategy)strategy).getFieldType());\n      fieldType.setDocValuesType(DocValuesType.NONE);\n      strategy = new BBoxStrategy(ctx, strategy.getFieldName(), fieldType);\n    }\n    for (SpatialOperation operation : SpatialOperation.values()) {\n      if (operation == SpatialOperation.Overlaps)\n        continue;//unsupported\n      testOperationRandomShapes(operation);\n\n      deleteAll();\n      commit();\n    }\n  }\n\n","sourceOld":"  @Test\n  @Repeat(iterations = 15)\n  public void testOperations() throws IOException {\n    //setup\n    if (random().nextInt(4) > 0) {//75% of the time choose geo (more interesting to test)\n      this.ctx = SpatialContext.GEO;\n    } else {\n      SpatialContextFactory factory = new SpatialContextFactory();\n      factory.geo = false;\n      factory.worldBounds = new RectangleImpl(-300, 300, -100, 100, null);\n      this.ctx = factory.newSpatialContext();\n    }\n    // randomly test legacy (numeric) and point based bbox strategy\n    if (random().nextBoolean()) {\n      this.strategy = BBoxStrategy.newInstance(ctx, \"bbox\");\n    } else {\n      this.strategy = BBoxStrategy.newLegacyInstance(ctx, \"bbox\");\n    }\n    //test we can disable docValues for predicate tests\n    if (random().nextBoolean()) {\n      FieldType fieldType = ((BBoxStrategy)strategy).getFieldType();\n      if (fieldType instanceof LegacyFieldType) {\n        fieldType = new LegacyFieldType((LegacyFieldType)fieldType);\n      } else {\n        fieldType = new FieldType(fieldType);\n      }\n      fieldType.setDocValuesType(DocValuesType.NONE);\n      strategy = new BBoxStrategy(ctx, strategy.getFieldName(), fieldType);\n    }\n    for (SpatialOperation operation : SpatialOperation.values()) {\n      if (operation == SpatialOperation.Overlaps)\n        continue;//unsupported\n      testOperationRandomShapes(operation);\n\n      deleteAll();\n      commit();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1f5728f32a4a256b36cfabd7a2636452f599bb9","date":1496231774,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/bbox/TestBBoxStrategy#testOperations().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/bbox/TestBBoxStrategy#testOperations().mjava","sourceNew":"  @Test\n  @Repeat(iterations = 15)\n  public void testOperations() throws IOException {\n    //setup\n    if (random().nextInt(4) > 0) {//75% of the time choose geo (more interesting to test)\n      this.ctx = SpatialContext.GEO;\n    } else {\n      SpatialContextFactory factory = new SpatialContextFactory();\n      factory.geo = false;\n      factory.worldBounds = new RectangleImpl(-300, 300, -100, 100, null);\n      this.ctx = factory.newSpatialContext();\n    }\n    this.strategy = BBoxStrategy.newInstance(ctx, \"bbox\");\n    //test we can disable docValues for predicate tests\n    if (random().nextBoolean()) {\n      FieldType fieldType = new FieldType(((BBoxStrategy)strategy).getFieldType());\n      fieldType.setDocValuesType(DocValuesType.NONE);\n      strategy = new BBoxStrategy(ctx, strategy.getFieldName(), fieldType);\n    }\n    for (SpatialOperation operation : SpatialOperation.values()) {\n      if (operation == SpatialOperation.Overlaps)\n        continue;//unsupported\n      testOperationRandomShapes(operation);\n\n      deleteAll();\n      commit();\n    }\n  }\n\n","sourceOld":"  @Test\n  @Repeat(iterations = 15)\n  public void testOperations() throws IOException {\n    //setup\n    if (random().nextInt(4) > 0) {//75% of the time choose geo (more interesting to test)\n      this.ctx = SpatialContext.GEO;\n    } else {\n      SpatialContextFactory factory = new SpatialContextFactory();\n      factory.geo = false;\n      factory.worldBounds = new RectangleImpl(-300, 300, -100, 100, null);\n      this.ctx = factory.newSpatialContext();\n    }\n    // randomly test legacy (numeric) and point based bbox strategy\n    if (random().nextBoolean()) {\n      this.strategy = BBoxStrategy.newInstance(ctx, \"bbox\");\n    } else {\n      this.strategy = BBoxStrategy.newLegacyInstance(ctx, \"bbox\");\n    }\n    //test we can disable docValues for predicate tests\n    if (random().nextBoolean()) {\n      FieldType fieldType = ((BBoxStrategy)strategy).getFieldType();\n      if (fieldType instanceof LegacyFieldType) {\n        fieldType = new LegacyFieldType((LegacyFieldType)fieldType);\n      } else {\n        fieldType = new FieldType(fieldType);\n      }\n      fieldType.setDocValuesType(DocValuesType.NONE);\n      strategy = new BBoxStrategy(ctx, strategy.getFieldName(), fieldType);\n    }\n    for (SpatialOperation operation : SpatialOperation.values()) {\n      if (operation == SpatialOperation.Overlaps)\n        continue;//unsupported\n      testOperationRandomShapes(operation);\n\n      deleteAll();\n      commit();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/bbox/TestBBoxStrategy#testOperations().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/bbox/TestBBoxStrategy#testOperations().mjava","sourceNew":"  @Test\n  @Repeat(iterations = 15)\n  public void testOperations() throws IOException {\n    //setup\n    if (random().nextInt(4) > 0) {//75% of the time choose geo (more interesting to test)\n      this.ctx = SpatialContext.GEO;\n    } else {\n      SpatialContextFactory factory = new SpatialContextFactory();\n      factory.geo = false;\n      factory.worldBounds = new RectangleImpl(-300, 300, -100, 100, null);\n      this.ctx = factory.newSpatialContext();\n    }\n    this.strategy = BBoxStrategy.newInstance(ctx, \"bbox\");\n    //test we can disable docValues for predicate tests\n    if (random().nextBoolean()) {\n      FieldType fieldType = new FieldType(((BBoxStrategy)strategy).getFieldType());\n      fieldType.setDocValuesType(DocValuesType.NONE);\n      strategy = new BBoxStrategy(ctx, strategy.getFieldName(), fieldType);\n    }\n    for (SpatialOperation operation : SpatialOperation.values()) {\n      if (operation == SpatialOperation.Overlaps)\n        continue;//unsupported\n      testOperationRandomShapes(operation);\n\n      deleteAll();\n      commit();\n    }\n  }\n\n","sourceOld":"  @Test\n  @Repeat(iterations = 15)\n  public void testOperations() throws IOException {\n    //setup\n    if (random().nextInt(4) > 0) {//75% of the time choose geo (more interesting to test)\n      this.ctx = SpatialContext.GEO;\n    } else {\n      SpatialContextFactory factory = new SpatialContextFactory();\n      factory.geo = false;\n      factory.worldBounds = new RectangleImpl(-300, 300, -100, 100, null);\n      this.ctx = factory.newSpatialContext();\n    }\n    // randomly test legacy (numeric) and point based bbox strategy\n    if (random().nextBoolean()) {\n      this.strategy = BBoxStrategy.newInstance(ctx, \"bbox\");\n    } else {\n      this.strategy = BBoxStrategy.newLegacyInstance(ctx, \"bbox\");\n    }\n    //test we can disable docValues for predicate tests\n    if (random().nextBoolean()) {\n      FieldType fieldType = ((BBoxStrategy)strategy).getFieldType();\n      if (fieldType instanceof LegacyFieldType) {\n        fieldType = new LegacyFieldType((LegacyFieldType)fieldType);\n      } else {\n        fieldType = new FieldType(fieldType);\n      }\n      fieldType.setDocValuesType(DocValuesType.NONE);\n      strategy = new BBoxStrategy(ctx, strategy.getFieldName(), fieldType);\n    }\n    for (SpatialOperation operation : SpatialOperation.values()) {\n      if (operation == SpatialOperation.Overlaps)\n        continue;//unsupported\n      testOperationRandomShapes(operation);\n\n      deleteAll();\n      commit();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc1e9ddca40a3ddf8b097f2cf1fe2547fe8e384f","date":1579652839,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/bbox/TestBBoxStrategy#testOperations().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/bbox/TestBBoxStrategy#testOperations().mjava","sourceNew":"  @Test\n  public void testOperations() throws IOException {\n    //setup\n    if (random().nextInt(4) > 0) {//75% of the time choose geo (more interesting to test)\n      this.ctx = SpatialContext.GEO;\n    } else {\n      SpatialContextFactory factory = new SpatialContextFactory();\n      factory.geo = false;\n      factory.worldBounds = new RectangleImpl(-300, 300, -100, 100, null);\n      this.ctx = factory.newSpatialContext();\n    }\n    this.strategy = BBoxStrategy.newInstance(ctx, \"bbox\");\n    //test we can disable docValues for predicate tests\n    if (random().nextBoolean()) {\n      FieldType fieldType = new FieldType(((BBoxStrategy)strategy).getFieldType());\n      fieldType.setDocValuesType(DocValuesType.NONE);\n      strategy = new BBoxStrategy(ctx, strategy.getFieldName(), fieldType);\n    }\n    for (SpatialOperation operation : SpatialOperation.values()) {\n      if (operation == SpatialOperation.Overlaps)\n        continue;//unsupported\n      testOperationRandomShapes(operation);\n\n      deleteAll();\n      commit();\n    }\n  }\n\n","sourceOld":"  @Test\n  @Repeat(iterations = 15)\n  public void testOperations() throws IOException {\n    //setup\n    if (random().nextInt(4) > 0) {//75% of the time choose geo (more interesting to test)\n      this.ctx = SpatialContext.GEO;\n    } else {\n      SpatialContextFactory factory = new SpatialContextFactory();\n      factory.geo = false;\n      factory.worldBounds = new RectangleImpl(-300, 300, -100, 100, null);\n      this.ctx = factory.newSpatialContext();\n    }\n    this.strategy = BBoxStrategy.newInstance(ctx, \"bbox\");\n    //test we can disable docValues for predicate tests\n    if (random().nextBoolean()) {\n      FieldType fieldType = new FieldType(((BBoxStrategy)strategy).getFieldType());\n      fieldType.setDocValuesType(DocValuesType.NONE);\n      strategy = new BBoxStrategy(ctx, strategy.getFieldName(), fieldType);\n    }\n    for (SpatialOperation operation : SpatialOperation.values()) {\n      if (operation == SpatialOperation.Overlaps)\n        continue;//unsupported\n      testOperationRandomShapes(operation);\n\n      deleteAll();\n      commit();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a178ac3dec643551e66363c457a9074f55545f86":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"fc1e9ddca40a3ddf8b097f2cf1fe2547fe8e384f":["d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","112d77ac8d3e10a362516ad834c9a11d35c94234"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5af5ba0166322092193d4c29880b0f7670fc7ca0":["aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4","5af5ba0166322092193d4c29880b0f7670fc7ca0"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4","403d05f7f8d69b65659157eff1bc1d2717f04c66"],"aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4":["af2638813028b254a88b418ebeafb541afb49653"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["403d05f7f8d69b65659157eff1bc1d2717f04c66","a178ac3dec643551e66363c457a9074f55545f86"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["403d05f7f8d69b65659157eff1bc1d2717f04c66","a178ac3dec643551e66363c457a9074f55545f86"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fc1e9ddca40a3ddf8b097f2cf1fe2547fe8e384f"]},"commit2Childs":{"a178ac3dec643551e66363c457a9074f55545f86":["e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"fc1e9ddca40a3ddf8b097f2cf1fe2547fe8e384f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"af2638813028b254a88b418ebeafb541afb49653":["aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["a178ac3dec643551e66363c457a9074f55545f86","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"5af5ba0166322092193d4c29880b0f7670fc7ca0":["2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4":["403d05f7f8d69b65659157eff1bc1d2717f04c66","5af5ba0166322092193d4c29880b0f7670fc7ca0","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["fc1e9ddca40a3ddf8b097f2cf1fe2547fe8e384f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}