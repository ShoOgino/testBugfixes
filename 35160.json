{"path":"lucene/memory/src/test/org/apache/lucene/index/memory/TestMemoryIndexAgainstDirectory#testPassesIfWrapped().mjava","commits":[{"id":"d77dafd89756a5161d244985903e3487ca109182","date":1548679743,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/memory/src/test/org/apache/lucene/index/memory/TestMemoryIndexAgainstDirectory#testPassesIfWrapped().mjava","pathOld":"lucene/memory/src/test/org/apache/lucene/index/memory/TestMemoryIndexAgainstRAMDir#testPassesIfWrapped().mjava","sourceNew":"  // LUCENE-3831\n  public void testPassesIfWrapped() throws IOException {\n    RegexpQuery regex = new RegexpQuery(new Term(\"field\", \"worl.\"));\n    SpanQuery wrappedquery = new SpanOrQuery(new SpanMultiTermQueryWrapper<>(regex));\n\n    MemoryIndex mindex = randomMemoryIndex();\n    mindex.addField(\"field\", new MockAnalyzer(random()).tokenStream(\"field\", \"hello there\"));\n\n    // This passes though\n    assertEquals(0, mindex.search(wrappedquery), 0.00001f);\n    TestUtil.checkReader(mindex.createSearcher().getIndexReader());\n  }\n\n","sourceOld":"  // LUCENE-3831\n  public void testPassesIfWrapped() throws IOException {\n    RegexpQuery regex = new RegexpQuery(new Term(\"field\", \"worl.\"));\n    SpanQuery wrappedquery = new SpanOrQuery(new SpanMultiTermQueryWrapper<>(regex));\n\n    MemoryIndex mindex = randomMemoryIndex();\n    mindex.addField(\"field\", new MockAnalyzer(random()).tokenStream(\"field\", \"hello there\"));\n\n    // This passes though\n    assertEquals(0, mindex.search(wrappedquery), 0.00001f);\n    TestUtil.checkReader(mindex.createSearcher().getIndexReader());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/memory/src/test/org/apache/lucene/index/memory/TestMemoryIndexAgainstDirectory#testPassesIfWrapped().mjava","pathOld":"lucene/memory/src/test/org/apache/lucene/index/memory/TestMemoryIndexAgainstDirectory#testPassesIfWrapped().mjava","sourceNew":"  // LUCENE-3831\n  @SuppressWarnings(\"resource\")\n  public void testPassesIfWrapped() throws IOException {\n    RegexpQuery regex = new RegexpQuery(new Term(\"field\", \"worl.\"));\n    SpanQuery wrappedquery = new SpanOrQuery(new SpanMultiTermQueryWrapper<>(regex));\n\n    MemoryIndex mindex = randomMemoryIndex();\n    mindex.addField(\"field\", new MockAnalyzer(random()).tokenStream(\"field\", \"hello there\"));\n\n    // This passes though\n    assertEquals(0, mindex.search(wrappedquery), 0.00001f);\n    TestUtil.checkReader(mindex.createSearcher().getIndexReader());\n  }\n\n","sourceOld":"  // LUCENE-3831\n  public void testPassesIfWrapped() throws IOException {\n    RegexpQuery regex = new RegexpQuery(new Term(\"field\", \"worl.\"));\n    SpanQuery wrappedquery = new SpanOrQuery(new SpanMultiTermQueryWrapper<>(regex));\n\n    MemoryIndex mindex = randomMemoryIndex();\n    mindex.addField(\"field\", new MockAnalyzer(random()).tokenStream(\"field\", \"hello there\"));\n\n    // This passes though\n    assertEquals(0, mindex.search(wrappedquery), 0.00001f);\n    TestUtil.checkReader(mindex.createSearcher().getIndexReader());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/memory/src/test/org/apache/lucene/index/memory/TestMemoryIndexAgainstDirectory#testPassesIfWrapped().mjava","pathOld":"lucene/memory/src/test/org/apache/lucene/index/memory/TestMemoryIndexAgainstDirectory#testPassesIfWrapped().mjava","sourceNew":"  // LUCENE-3831\n  public void testPassesIfWrapped() throws IOException {\n    RegexpQuery regex = new RegexpQuery(new Term(\"field\", \"worl.\"));\n    SpanQuery wrappedquery = new SpanOrQuery(new SpanMultiTermQueryWrapper<>(regex));\n\n    MemoryIndex mindex = randomMemoryIndex();\n    mindex.addField(\"field\", new MockAnalyzer(random()).tokenStream(\"field\", \"hello there\"));\n\n    // This passes though\n    assertEquals(0, mindex.search(wrappedquery), 0.00001f);\n    TestUtil.checkReader(mindex.createSearcher().getIndexReader());\n  }\n\n","sourceOld":"  // LUCENE-3831\n  @SuppressWarnings(\"resource\")\n  public void testPassesIfWrapped() throws IOException {\n    RegexpQuery regex = new RegexpQuery(new Term(\"field\", \"worl.\"));\n    SpanQuery wrappedquery = new SpanOrQuery(new SpanMultiTermQueryWrapper<>(regex));\n\n    MemoryIndex mindex = randomMemoryIndex();\n    mindex.addField(\"field\", new MockAnalyzer(random()).tokenStream(\"field\", \"hello there\"));\n\n    // This passes though\n    assertEquals(0, mindex.search(wrappedquery), 0.00001f);\n    TestUtil.checkReader(mindex.createSearcher().getIndexReader());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["d77dafd89756a5161d244985903e3487ca109182"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"d77dafd89756a5161d244985903e3487ca109182":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"]},"commit2Childs":{"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d77dafd89756a5161d244985903e3487ca109182"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d77dafd89756a5161d244985903e3487ca109182":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}