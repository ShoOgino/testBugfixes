{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkMaintenanceUtils#checkAllZnodesThere(SolrZkClient,String,String).mjava","commits":[{"id":"9272a617a9cbebf86be127014bbbacd7cf8f8e83","date":1467480344,"type":0,"author":"Erick","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkMaintenanceUtils#checkAllZnodesThere(SolrZkClient,String,String).mjava","pathOld":"/dev/null","sourceNew":"  // Insure that all the nodes in one path match the nodes in the other as a safety check before removing\n  // the source in a 'mv' command.\n  private static void checkAllZnodesThere(SolrZkClient zkClient, String src, String dst) throws KeeperException, InterruptedException, SolrServerException {\n\n    for (String node : zkClient.getChildren(src, null, true)) {\n      if (zkClient.exists(dst + \"/\" + node, true) == false) {\n        throw new SolrServerException(\"mv command did not move node \" + dst + \"/\" + node + \" source left intact\");\n      }\n      checkAllZnodesThere(zkClient, src + \"/\" + node, dst + \"/\" + node);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkMaintenanceUtils#checkAllZnodesThere(SolrZkClient,String,String).mjava","pathOld":"/dev/null","sourceNew":"  // Insure that all the nodes in one path match the nodes in the other as a safety check before removing\n  // the source in a 'mv' command.\n  private static void checkAllZnodesThere(SolrZkClient zkClient, String src, String dst) throws KeeperException, InterruptedException, SolrServerException {\n\n    for (String node : zkClient.getChildren(src, null, true)) {\n      if (zkClient.exists(dst + \"/\" + node, true) == false) {\n        throw new SolrServerException(\"mv command did not move node \" + dst + \"/\" + node + \" source left intact\");\n      }\n      checkAllZnodesThere(zkClient, src + \"/\" + node, dst + \"/\" + node);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9272a617a9cbebf86be127014bbbacd7cf8f8e83":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9272a617a9cbebf86be127014bbbacd7cf8f8e83"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9272a617a9cbebf86be127014bbbacd7cf8f8e83"]},"commit2Childs":{"9272a617a9cbebf86be127014bbbacd7cf8f8e83":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9272a617a9cbebf86be127014bbbacd7cf8f8e83","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}