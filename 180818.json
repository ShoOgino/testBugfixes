{"path":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_1a().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_1a().mjava","pathOld":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_1a().mjava","sourceNew":"        private boolean r_Step_1a() {\n            int among_var;\n            int v_1;\n            int v_2;\n            // (, line 58\n            // try, line 59\n            v_1 = limit - cursor;\n            lab0: do {\n                // (, line 59\n                // [, line 60\n                ket = cursor;\n                // substring, line 60\n                among_var = find_among_b(a_1, 3);\n                if (among_var == 0)\n                {\n                    cursor = limit - v_1;\n                    break lab0;\n                }\n                // ], line 60\n                bra = cursor;\n                switch(among_var) {\n                    case 0:\n                        cursor = limit - v_1;\n                        break lab0;\n                    case 1:\n                        // (, line 62\n                        // delete, line 62\n                        slice_del();\n                        break;\n                }\n            } while (false);\n            // [, line 65\n            ket = cursor;\n            // substring, line 65\n            among_var = find_among_b(a_2, 6);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 65\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 66\n                    // <-, line 66\n                    slice_from(\"ss\");\n                    break;\n                case 2:\n                    // (, line 68\n                    // or, line 68\n                    lab1: do {\n                        v_2 = limit - cursor;\n                        lab2: do {\n                            // (, line 68\n                            // hop, line 68\n                            {\n                                int c = cursor - 2;\n                                if (limit_backward > c || c > limit)\n                                {\n                                    break lab2;\n                                }\n                                cursor = c;\n                            }\n                            // <-, line 68\n                            slice_from(\"i\");\n                            break lab1;\n                        } while (false);\n                        cursor = limit - v_2;\n                        // <-, line 68\n                        slice_from(\"ie\");\n                    } while (false);\n                    break;\n                case 3:\n                    // (, line 69\n                    // next, line 69\n                    if (cursor <= limit_backward)\n                    {\n                        return false;\n                    }\n                    cursor--;\n                    // gopast, line 69\n                    golab3: while(true)\n                    {\n                        lab4: do {\n                            if (!(in_grouping_b(g_v, 97, 121)))\n                            {\n                                break lab4;\n                            }\n                            break golab3;\n                        } while (false);\n                        if (cursor <= limit_backward)\n                        {\n                            return false;\n                        }\n                        cursor--;\n                    }\n                    // delete, line 69\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_Step_1a() {\n            int among_var;\n            int v_1;\n            int v_2;\n            // (, line 58\n            // try, line 59\n            v_1 = limit - cursor;\n            lab0: do {\n                // (, line 59\n                // [, line 60\n                ket = cursor;\n                // substring, line 60\n                among_var = find_among_b(a_1, 3);\n                if (among_var == 0)\n                {\n                    cursor = limit - v_1;\n                    break lab0;\n                }\n                // ], line 60\n                bra = cursor;\n                switch(among_var) {\n                    case 0:\n                        cursor = limit - v_1;\n                        break lab0;\n                    case 1:\n                        // (, line 62\n                        // delete, line 62\n                        slice_del();\n                        break;\n                }\n            } while (false);\n            // [, line 65\n            ket = cursor;\n            // substring, line 65\n            among_var = find_among_b(a_2, 6);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 65\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 66\n                    // <-, line 66\n                    slice_from(\"ss\");\n                    break;\n                case 2:\n                    // (, line 68\n                    // or, line 68\n                    lab1: do {\n                        v_2 = limit - cursor;\n                        lab2: do {\n                            // (, line 68\n                            // hop, line 68\n                            {\n                                int c = cursor - 2;\n                                if (limit_backward > c || c > limit)\n                                {\n                                    break lab2;\n                                }\n                                cursor = c;\n                            }\n                            // <-, line 68\n                            slice_from(\"i\");\n                            break lab1;\n                        } while (false);\n                        cursor = limit - v_2;\n                        // <-, line 68\n                        slice_from(\"ie\");\n                    } while (false);\n                    break;\n                case 3:\n                    // (, line 69\n                    // next, line 69\n                    if (cursor <= limit_backward)\n                    {\n                        return false;\n                    }\n                    cursor--;\n                    // gopast, line 69\n                    golab3: while(true)\n                    {\n                        lab4: do {\n                            if (!(in_grouping_b(g_v, 97, 121)))\n                            {\n                                break lab4;\n                            }\n                            break golab3;\n                        } while (false);\n                        if (cursor <= limit_backward)\n                        {\n                            return false;\n                        }\n                        cursor--;\n                    }\n                    // delete, line 69\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_1a().mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_1a().mjava","sourceNew":"        private boolean r_Step_1a() {\n            int among_var;\n            int v_1;\n            int v_2;\n            // (, line 58\n            // try, line 59\n            v_1 = limit - cursor;\n            lab0: do {\n                // (, line 59\n                // [, line 60\n                ket = cursor;\n                // substring, line 60\n                among_var = find_among_b(a_1, 3);\n                if (among_var == 0)\n                {\n                    cursor = limit - v_1;\n                    break lab0;\n                }\n                // ], line 60\n                bra = cursor;\n                switch(among_var) {\n                    case 0:\n                        cursor = limit - v_1;\n                        break lab0;\n                    case 1:\n                        // (, line 62\n                        // delete, line 62\n                        slice_del();\n                        break;\n                }\n            } while (false);\n            // [, line 65\n            ket = cursor;\n            // substring, line 65\n            among_var = find_among_b(a_2, 6);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 65\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 66\n                    // <-, line 66\n                    slice_from(\"ss\");\n                    break;\n                case 2:\n                    // (, line 68\n                    // or, line 68\n                    lab1: do {\n                        v_2 = limit - cursor;\n                        lab2: do {\n                            // (, line 68\n                            // hop, line 68\n                            {\n                                int c = cursor - 2;\n                                if (limit_backward > c || c > limit)\n                                {\n                                    break lab2;\n                                }\n                                cursor = c;\n                            }\n                            // <-, line 68\n                            slice_from(\"i\");\n                            break lab1;\n                        } while (false);\n                        cursor = limit - v_2;\n                        // <-, line 68\n                        slice_from(\"ie\");\n                    } while (false);\n                    break;\n                case 3:\n                    // (, line 69\n                    // next, line 69\n                    if (cursor <= limit_backward)\n                    {\n                        return false;\n                    }\n                    cursor--;\n                    // gopast, line 69\n                    golab3: while(true)\n                    {\n                        lab4: do {\n                            if (!(in_grouping_b(g_v, 97, 121)))\n                            {\n                                break lab4;\n                            }\n                            break golab3;\n                        } while (false);\n                        if (cursor <= limit_backward)\n                        {\n                            return false;\n                        }\n                        cursor--;\n                    }\n                    // delete, line 69\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_Step_1a() {\n            int among_var;\n            int v_1;\n            int v_2;\n            // (, line 58\n            // try, line 59\n            v_1 = limit - cursor;\n            lab0: do {\n                // (, line 59\n                // [, line 60\n                ket = cursor;\n                // substring, line 60\n                among_var = find_among_b(a_1, 3);\n                if (among_var == 0)\n                {\n                    cursor = limit - v_1;\n                    break lab0;\n                }\n                // ], line 60\n                bra = cursor;\n                switch(among_var) {\n                    case 0:\n                        cursor = limit - v_1;\n                        break lab0;\n                    case 1:\n                        // (, line 62\n                        // delete, line 62\n                        slice_del();\n                        break;\n                }\n            } while (false);\n            // [, line 65\n            ket = cursor;\n            // substring, line 65\n            among_var = find_among_b(a_2, 6);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 65\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 66\n                    // <-, line 66\n                    slice_from(\"ss\");\n                    break;\n                case 2:\n                    // (, line 68\n                    // or, line 68\n                    lab1: do {\n                        v_2 = limit - cursor;\n                        lab2: do {\n                            // (, line 68\n                            // hop, line 68\n                            {\n                                int c = cursor - 2;\n                                if (limit_backward > c || c > limit)\n                                {\n                                    break lab2;\n                                }\n                                cursor = c;\n                            }\n                            // <-, line 68\n                            slice_from(\"i\");\n                            break lab1;\n                        } while (false);\n                        cursor = limit - v_2;\n                        // <-, line 68\n                        slice_from(\"ie\");\n                    } while (false);\n                    break;\n                case 3:\n                    // (, line 69\n                    // next, line 69\n                    if (cursor <= limit_backward)\n                    {\n                        return false;\n                    }\n                    cursor--;\n                    // gopast, line 69\n                    golab3: while(true)\n                    {\n                        lab4: do {\n                            if (!(in_grouping_b(g_v, 97, 121)))\n                            {\n                                break lab4;\n                            }\n                            break golab3;\n                        } while (false);\n                        if (cursor <= limit_backward)\n                        {\n                            return false;\n                        }\n                        cursor--;\n                    }\n                    // delete, line 69\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}