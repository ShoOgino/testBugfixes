{"path":"lucene/core/src/java/org/apache/lucene/search/TermQuery.TermWeight#scorer(LeafReaderContext,Bits,boolean).mjava","commits":[{"id":"781239fc84d36be12b84e4d3e2618f5f07a182e3","date":1423139668,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TermQuery.TermWeight#scorer(LeafReaderContext,Bits,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TermQuery.TermWeight#scorer(LeafReaderContext,Bits).mjava","sourceNew":"    @Override\n    public Scorer scorer(LeafReaderContext context, Bits acceptDocs, boolean needsScores) throws IOException {\n      assert termStates.topReaderContext == ReaderUtil.getTopLevelContext(context) : \"The top-reader used to create Weight (\" + termStates.topReaderContext + \") is not the same as the current reader's top-reader (\" + ReaderUtil.getTopLevelContext(context);\n      final TermsEnum termsEnum = getTermsEnum(context);\n      if (termsEnum == null) {\n        return null;\n      }\n      DocsEnum docs = termsEnum.docs(acceptDocs, null, needsScores ? DocsEnum.FLAG_FREQS : DocsEnum.FLAG_NONE);\n      assert docs != null;\n      return new TermScorer(this, docs, similarity.simScorer(stats, context));\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(LeafReaderContext context, Bits acceptDocs) throws IOException {\n      assert termStates.topReaderContext == ReaderUtil.getTopLevelContext(context) : \"The top-reader used to create Weight (\" + termStates.topReaderContext + \") is not the same as the current reader's top-reader (\" + ReaderUtil.getTopLevelContext(context);\n      final TermsEnum termsEnum = getTermsEnum(context);\n      if (termsEnum == null) {\n        return null;\n      }\n      DocsEnum docs = termsEnum.docs(acceptDocs, null);\n      assert docs != null;\n      return new TermScorer(this, docs, similarity.simScorer(stats, context));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TermQuery.TermWeight#scorer(LeafReaderContext,Bits,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TermQuery.TermWeight#scorer(LeafReaderContext,Bits,boolean).mjava","sourceNew":"    @Override\n    public Scorer scorer(LeafReaderContext context, Bits acceptDocs, boolean needsScores) throws IOException {\n      assert termStates.topReaderContext == ReaderUtil.getTopLevelContext(context) : \"The top-reader used to create Weight (\" + termStates.topReaderContext + \") is not the same as the current reader's top-reader (\" + ReaderUtil.getTopLevelContext(context);\n      final TermsEnum termsEnum = getTermsEnum(context);\n      if (termsEnum == null) {\n        return null;\n      }\n      PostingsEnum docs = termsEnum.postings(acceptDocs, null, needsScores ? PostingsEnum.FLAG_FREQS : PostingsEnum.FLAG_NONE);\n      assert docs != null;\n      return new TermScorer(this, docs, similarity.simScorer(stats, context));\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(LeafReaderContext context, Bits acceptDocs, boolean needsScores) throws IOException {\n      assert termStates.topReaderContext == ReaderUtil.getTopLevelContext(context) : \"The top-reader used to create Weight (\" + termStates.topReaderContext + \") is not the same as the current reader's top-reader (\" + ReaderUtil.getTopLevelContext(context);\n      final TermsEnum termsEnum = getTermsEnum(context);\n      if (termsEnum == null) {\n        return null;\n      }\n      DocsEnum docs = termsEnum.docs(acceptDocs, null, needsScores ? DocsEnum.FLAG_FREQS : DocsEnum.FLAG_NONE);\n      assert docs != null;\n      return new TermScorer(this, docs, similarity.simScorer(stats, context));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb17639909a369c1e64866842e5c213440acc17e","date":1423238093,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TermQuery.TermWeight#scorer(LeafReaderContext,Bits).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TermQuery.TermWeight#scorer(LeafReaderContext,Bits,boolean).mjava","sourceNew":"    @Override\n    public Scorer scorer(LeafReaderContext context, Bits acceptDocs) throws IOException {\n      assert termStates.topReaderContext == ReaderUtil.getTopLevelContext(context) : \"The top-reader used to create Weight (\" + termStates.topReaderContext + \") is not the same as the current reader's top-reader (\" + ReaderUtil.getTopLevelContext(context);\n      final TermsEnum termsEnum = getTermsEnum(context);\n      if (termsEnum == null) {\n        return null;\n      }\n      PostingsEnum docs = termsEnum.postings(acceptDocs, null, needsScores ? PostingsEnum.FLAG_FREQS : PostingsEnum.FLAG_NONE);\n      assert docs != null;\n      return new TermScorer(this, docs, similarity.simScorer(stats, context));\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(LeafReaderContext context, Bits acceptDocs, boolean needsScores) throws IOException {\n      assert termStates.topReaderContext == ReaderUtil.getTopLevelContext(context) : \"The top-reader used to create Weight (\" + termStates.topReaderContext + \") is not the same as the current reader's top-reader (\" + ReaderUtil.getTopLevelContext(context);\n      final TermsEnum termsEnum = getTermsEnum(context);\n      if (termsEnum == null) {\n        return null;\n      }\n      PostingsEnum docs = termsEnum.postings(acceptDocs, null, needsScores ? PostingsEnum.FLAG_FREQS : PostingsEnum.FLAG_NONE);\n      assert docs != null;\n      return new TermScorer(this, docs, similarity.simScorer(stats, context));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb17639909a369c1e64866842e5c213440acc17e":["51f5280f31484820499077f41fcdfe92d527d9dc"],"781239fc84d36be12b84e4d3e2618f5f07a182e3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"51f5280f31484820499077f41fcdfe92d527d9dc":["781239fc84d36be12b84e4d3e2618f5f07a182e3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fb17639909a369c1e64866842e5c213440acc17e"]},"commit2Childs":{"fb17639909a369c1e64866842e5c213440acc17e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"781239fc84d36be12b84e4d3e2618f5f07a182e3":["51f5280f31484820499077f41fcdfe92d527d9dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["781239fc84d36be12b84e4d3e2618f5f07a182e3"],"51f5280f31484820499077f41fcdfe92d527d9dc":["fb17639909a369c1e64866842e5c213440acc17e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}