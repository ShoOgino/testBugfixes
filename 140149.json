{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Row#writeMap(EntryWriter).mjava","commits":[{"id":"6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2","date":1498616740,"type":1,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Row#writeMap(EntryWriter).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Row#writeMap(EntryWriter).mjava","sourceNew":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    ew.put(node, (IteratorWriter) iw -> {\n      iw.add((MapWriter) e -> e.put(\"replicas\", collectionVsShardVsReplicas));\n      for (Cell cell : cells) iw.add(cell);\n    });\n  }\n\n","sourceOld":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    ew.put(node, (IteratorWriter) iw -> {\n      iw.add((MapWriter) e -> e.put(\"replicas\", collectionVsShardVsReplicas));\n      for (Cell cell : cells) iw.add(cell);\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98f11c416d30e556e0004a9a84960702d12d35b1","date":1498628359,"type":1,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Row#writeMap(EntryWriter).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Row#writeMap(EntryWriter).mjava","sourceNew":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    ew.put(node, (IteratorWriter) iw -> {\n      iw.add((MapWriter) e -> e.put(\"replicas\", collectionVsShardVsReplicas));\n      for (Cell cell : cells) iw.add(cell);\n    });\n  }\n\n","sourceOld":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    ew.put(node, (IteratorWriter) iw -> {\n      iw.add((MapWriter) e -> e.put(\"replicas\", collectionVsShardVsReplicas));\n      for (Cell cell : cells) iw.add(cell);\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Row#writeMap(EntryWriter).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    ew.put(node, (IteratorWriter) iw -> {\n      iw.add((MapWriter) e -> e.put(\"replicas\", collectionVsShardVsReplicas));\n      for (Cell cell : cells) iw.add(cell);\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"34dd1818ff2313f17cf59834695ab7ee0c7853d7","date":1527089210,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Row#writeMap(EntryWriter).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Row#writeMap(EntryWriter).mjava","sourceNew":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    ew.put(NODE, node);\n    ew.put(\"replicas\", collectionVsShardVsReplicas);\n    ew.put(\"isLive\", isLive);\n    ew.put(\"attributes\", Arrays.asList(cells));\n  }\n\n","sourceOld":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    ew.put(node, (IteratorWriter) iw -> {\n      iw.add((MapWriter) e -> e.put(\"replicas\", collectionVsShardVsReplicas));\n      for (Cell cell : cells) iw.add(cell);\n    });\n  }\n\n","bugFix":["a513b6a92751e54c76fb5447948c9e7d437163a7"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Row#writeMap(EntryWriter).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    ew.put(NODE, node);\n    ew.put(\"replicas\", collectionVsShardVsReplicas);\n    ew.put(\"isLive\", isLive);\n    ew.put(\"attributes\", Arrays.asList(cells));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3f504512a03d978990cbff30db0522b354e846db":["34dd1818ff2313f17cf59834695ab7ee0c7853d7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"34dd1818ff2313f17cf59834695ab7ee0c7853d7":["28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2"],"98f11c416d30e556e0004a9a84960702d12d35b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2":["28288370235ed02234a64753cdbf0c6ec096304a","98f11c416d30e556e0004a9a84960702d12d35b1"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2","28288370235ed02234a64753cdbf0c6ec096304a","98f11c416d30e556e0004a9a84960702d12d35b1"],"34dd1818ff2313f17cf59834695ab7ee0c7853d7":["3f504512a03d978990cbff30db0522b354e846db"],"28288370235ed02234a64753cdbf0c6ec096304a":["34dd1818ff2313f17cf59834695ab7ee0c7853d7"],"98f11c416d30e556e0004a9a84960702d12d35b1":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["98f11c416d30e556e0004a9a84960702d12d35b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}