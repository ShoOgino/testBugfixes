{"path":"src/java/org/apache/lucene/search/spans/NearSpansUnordered.CellQueue#lessThan(Object,Object).mjava","commits":[{"id":"98bc22650ab0fe51f9c00513397bfa42a64fc663","date":1161986633,"type":1,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/spans/NearSpansUnordered.CellQueue#lessThan(Object,Object).mjava","pathOld":"src/java/org/apache/lucene/search/spans/NearSpans.CellQueue#lessThan(Object,Object).mjava","sourceNew":"    protected final boolean lessThan(Object o1, Object o2) {\n      SpansCell spans1 = (SpansCell)o1;\n      SpansCell spans2 = (SpansCell)o2;\n      if (spans1.doc() == spans2.doc()) {\n        return NearSpansOrdered.docSpansOrdered(spans1, spans2);\n      } else {\n        return spans1.doc() < spans2.doc();\n      }\n    }\n\n","sourceOld":"    protected final boolean lessThan(Object o1, Object o2) {\n      SpansCell spans1 = (SpansCell)o1;\n      SpansCell spans2 = (SpansCell)o2;\n      if (spans1.doc() == spans2.doc()) {\n        if (spans1.start() == spans2.start()) {\n          if (spans1.end() == spans2.end()) {\n            return spans1.index > spans2.index;\n          } else {\n            return spans1.end() < spans2.end();\n          }\n        } else {\n          return spans1.start() < spans2.start();\n        }\n      } else {\n        return spans1.doc() < spans2.doc();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0731e137bcbb58121034de6ddaa67332fbe6e5d1","date":1255233265,"type":5,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/spans/NearSpansUnordered.CellQueue#lessThan(SpansCell,SpansCell).mjava","pathOld":"src/java/org/apache/lucene/search/spans/NearSpansUnordered.CellQueue#lessThan(Object,Object).mjava","sourceNew":"    protected final boolean lessThan(SpansCell spans1, SpansCell spans2) {\n      if (spans1.doc() == spans2.doc()) {\n        return NearSpansOrdered.docSpansOrdered(spans1, spans2);\n      } else {\n        return spans1.doc() < spans2.doc();\n      }\n    }\n\n","sourceOld":"    protected final boolean lessThan(Object o1, Object o2) {\n      SpansCell spans1 = (SpansCell)o1;\n      SpansCell spans2 = (SpansCell)o2;\n      if (spans1.doc() == spans2.doc()) {\n        return NearSpansOrdered.docSpansOrdered(spans1, spans2);\n      } else {\n        return spans1.doc() < spans2.doc();\n      }\n    }\n\n","bugFix":null,"bugIntro":["77301f098b899884dd472e6b27fb5f8136189fe3"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"98bc22650ab0fe51f9c00513397bfa42a64fc663":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0731e137bcbb58121034de6ddaa67332fbe6e5d1":["98bc22650ab0fe51f9c00513397bfa42a64fc663"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0731e137bcbb58121034de6ddaa67332fbe6e5d1"]},"commit2Childs":{"98bc22650ab0fe51f9c00513397bfa42a64fc663":["0731e137bcbb58121034de6ddaa67332fbe6e5d1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["98bc22650ab0fe51f9c00513397bfa42a64fc663"],"0731e137bcbb58121034de6ddaa67332fbe6e5d1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}