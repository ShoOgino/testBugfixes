{"path":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimClusterStateProvider#setupCluster().mjava","commits":[{"id":"a6a5c1c40529f15b445e6720dfde1967e139bff1","date":1535375643,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimClusterStateProvider#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestClusterStateProvider#setupCluster().mjava","sourceNew":"  // set up a real cluster as the source of test data\n  @BeforeClass\n  public static void setupCluster() throws Exception {\n    simulated = random().nextBoolean();\n    log.info(\"####### Using simulated components? \" + simulated);\n\n    configureCluster(NODE_COUNT)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n    CollectionAdminRequest.createCollection(CollectionAdminParams.SYSTEM_COLL, null, 1, 2, 0, 1)\n        .process(cluster.getSolrClient());\n    init();\n  }\n\n","sourceOld":"  // set up a real cluster as the source of test data\n  @BeforeClass\n  public static void setupCluster() throws Exception {\n    simulated = random().nextBoolean();\n    log.info(\"####### Using simulated components? \" + simulated);\n\n    configureCluster(NODE_COUNT)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n    CollectionAdminRequest.createCollection(CollectionAdminParams.SYSTEM_COLL, null, 1, 2, 0, 1)\n        .process(cluster.getSolrClient());\n    init();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5","date":1556572478,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimClusterStateProvider#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimClusterStateProvider#setupCluster().mjava","sourceNew":"  // set up a real cluster as the source of test data\n  @BeforeClass\n  public static void setupCluster() throws Exception {\n    simulated = random().nextBoolean();\n    simulated = true;\n    log.info(\"####### Using simulated components? \" + simulated);\n\n    configureCluster(NODE_COUNT)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n    CollectionAdminRequest.createCollection(CollectionAdminParams.SYSTEM_COLL, null, 1, 2, 0, 1)\n        .process(cluster.getSolrClient());\n    init();\n  }\n\n","sourceOld":"  // set up a real cluster as the source of test data\n  @BeforeClass\n  public static void setupCluster() throws Exception {\n    simulated = random().nextBoolean();\n    log.info(\"####### Using simulated components? \" + simulated);\n\n    configureCluster(NODE_COUNT)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n    CollectionAdminRequest.createCollection(CollectionAdminParams.SYSTEM_COLL, null, 1, 2, 0, 1)\n        .process(cluster.getSolrClient());\n    init();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4","date":1588172214,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimClusterStateProvider#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimClusterStateProvider#setupCluster().mjava","sourceNew":"  // set up a real cluster as the source of test data\n  @BeforeClass\n  public static void setupCluster() throws Exception {\n    simulated = random().nextBoolean();\n    simulated = true;\n    log.info(\"####### Using simulated components? {}\", simulated);\n\n    configureCluster(NODE_COUNT)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n    CollectionAdminRequest.createCollection(CollectionAdminParams.SYSTEM_COLL, null, 1, 2, 0, 1)\n        .process(cluster.getSolrClient());\n    init();\n  }\n\n","sourceOld":"  // set up a real cluster as the source of test data\n  @BeforeClass\n  public static void setupCluster() throws Exception {\n    simulated = random().nextBoolean();\n    simulated = true;\n    log.info(\"####### Using simulated components? \" + simulated);\n\n    configureCluster(NODE_COUNT)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n    CollectionAdminRequest.createCollection(CollectionAdminParams.SYSTEM_COLL, null, 1, 2, 0, 1)\n        .process(cluster.getSolrClient());\n    init();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimClusterStateProvider#setupCluster().mjava","sourceNew":null,"sourceOld":"  // set up a real cluster as the source of test data\n  @BeforeClass\n  public static void setupCluster() throws Exception {\n    simulated = random().nextBoolean();\n    simulated = true;\n    log.info(\"####### Using simulated components? {}\", simulated);\n\n    configureCluster(NODE_COUNT)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n    CollectionAdminRequest.createCollection(CollectionAdminParams.SYSTEM_COLL, null, 1, 2, 0, 1)\n        .process(cluster.getSolrClient());\n    init();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a6a5c1c40529f15b445e6720dfde1967e139bff1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3f504512a03d978990cbff30db0522b354e846db":["fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4"],"fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4":["9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5":["a6a5c1c40529f15b445e6720dfde1967e139bff1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"a6a5c1c40529f15b445e6720dfde1967e139bff1":["9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a6a5c1c40529f15b445e6720dfde1967e139bff1"],"fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4":["3f504512a03d978990cbff30db0522b354e846db"],"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5":["fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}