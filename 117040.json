{"path":"lucene/core/src/test/org/apache/lucene/search/TestTimeLimitingCollector#doTestMultiThreads(boolean).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTimeLimitingCollector#doTestMultiThreads(boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestTimeLimitingCollector#doTestMultiThreads(boolean).mjava","sourceNew":"  private void doTestMultiThreads(final boolean withTimeout) throws Exception {\n    Thread [] threadArray = new Thread[N_THREADS];\n    final BitSet success = new BitSet(N_THREADS);\n    for( int i = 0; i < threadArray.length; ++i ) {\n      final int num = i;\n      threadArray[num] = new Thread() {\n          @Override\n          public void run() {\n            if (withTimeout) {\n              doTestTimeout(true,true);\n            } else {\n              doTestSearch();\n            }\n            synchronized(success) {\n              success.set(num);\n            }\n          }\n      };\n    }\n    for( int i = 0; i < threadArray.length; ++i ) {\n      threadArray[i].start();\n    }\n    for( int i = 0; i < threadArray.length; ++i ) {\n      threadArray[i].join();\n    }\n    assertEquals(\"some threads failed!\", N_THREADS,success.cardinality());\n  }\n\n","sourceOld":"  private void doTestMultiThreads(final boolean withTimeout) throws Exception {\n    Thread [] threadArray = new Thread[N_THREADS];\n    final BitSet success = new BitSet(N_THREADS);\n    for( int i = 0; i < threadArray.length; ++i ) {\n      final int num = i;\n      threadArray[num] = new Thread() {\n          @Override\n          public void run() {\n            if (withTimeout) {\n              doTestTimeout(true,true);\n            } else {\n              doTestSearch();\n            }\n            synchronized(success) {\n              success.set(num);\n            }\n          }\n      };\n    }\n    for( int i = 0; i < threadArray.length; ++i ) {\n      threadArray[i].start();\n    }\n    for( int i = 0; i < threadArray.length; ++i ) {\n      threadArray[i].join();\n    }\n    assertEquals(\"some threads failed!\", N_THREADS,success.cardinality());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}