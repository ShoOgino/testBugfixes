{"path":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#OfflinePointWriter(Directory,String,int,boolean,String,boolean).mjava","commits":[{"id":"416f9e28900210be57b69bc12e2954fb98ed7ebe","date":1458479803,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#OfflinePointWriter(Directory,String,int,boolean,String,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#OfflinePointWriter(Directory,String,int,boolean,String).mjava","sourceNew":"  public OfflinePointWriter(Directory tempDir, String tempFileNamePrefix, int packedBytesLength, boolean longOrds, String desc, boolean singleValuePerDoc) throws IOException {\n    this.out = tempDir.createTempOutput(tempFileNamePrefix, \"bkd_\" + desc, IOContext.DEFAULT);\n    this.tempDir = tempDir;\n    this.packedBytesLength = packedBytesLength;\n    this.longOrds = longOrds;\n    this.singleValuePerDoc = singleValuePerDoc;\n  }\n\n","sourceOld":"  public OfflinePointWriter(Directory tempDir, String tempFileNamePrefix, int packedBytesLength, boolean longOrds, String desc) throws IOException {\n    this.out = tempDir.createTempOutput(tempFileNamePrefix, \"bkd_\" + desc, IOContext.DEFAULT);\n    this.tempDir = tempDir;\n    this.packedBytesLength = packedBytesLength;\n    this.longOrds = longOrds;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51b2a4c0f6c28a8ba7c41911b421cea2ede8ef40","date":1458553787,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#OfflinePointWriter(Directory,String,int,boolean,String,long,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#OfflinePointWriter(Directory,String,int,boolean,String,boolean).mjava","sourceNew":"  /** Create a new writer with an unknown number of incoming points */\n  public OfflinePointWriter(Directory tempDir, String tempFileNamePrefix, int packedBytesLength,\n                            boolean longOrds, String desc, long expectedCount, boolean singleValuePerDoc) throws IOException {\n    this.out = tempDir.createTempOutput(tempFileNamePrefix, \"bkd_\" + desc, IOContext.DEFAULT);\n    this.tempDir = tempDir;\n    this.packedBytesLength = packedBytesLength;\n    this.longOrds = longOrds;\n    this.singleValuePerDoc = singleValuePerDoc;\n    this.expectedCount = expectedCount;\n  }\n\n","sourceOld":"  public OfflinePointWriter(Directory tempDir, String tempFileNamePrefix, int packedBytesLength, boolean longOrds, String desc, boolean singleValuePerDoc) throws IOException {\n    this.out = tempDir.createTempOutput(tempFileNamePrefix, \"bkd_\" + desc, IOContext.DEFAULT);\n    this.tempDir = tempDir;\n    this.packedBytesLength = packedBytesLength;\n    this.longOrds = longOrds;\n    this.singleValuePerDoc = singleValuePerDoc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"51b2a4c0f6c28a8ba7c41911b421cea2ede8ef40":["416f9e28900210be57b69bc12e2954fb98ed7ebe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"416f9e28900210be57b69bc12e2954fb98ed7ebe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["51b2a4c0f6c28a8ba7c41911b421cea2ede8ef40"]},"commit2Childs":{"51b2a4c0f6c28a8ba7c41911b421cea2ede8ef40":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["416f9e28900210be57b69bc12e2954fb98ed7ebe"],"416f9e28900210be57b69bc12e2954fb98ed7ebe":["51b2a4c0f6c28a8ba7c41911b421cea2ede8ef40"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}