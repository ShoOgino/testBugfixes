{"path":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/DutchStemmer#r_prelude().mjava","commits":[{"id":"a5aa159e1ac4009d23cea92797d3804da4f5e7ad","date":1264041909,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/DutchStemmer#r_prelude().mjava","pathOld":"contrib/snowball/src/java/org/tartarus/snowball/ext/DutchStemmer#r_prelude().mjava","sourceNew":"        private boolean r_prelude() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            // (, line 41\n            // test, line 42\n            v_1 = cursor;\n            // repeat, line 42\n            replab0: while(true)\n            {\n                v_2 = cursor;\n                lab1: do {\n                    // (, line 42\n                    // [, line 43\n                    bra = cursor;\n                    // substring, line 43\n                    among_var = find_among(a_0, 11);\n                    if (among_var == 0)\n                    {\n                        break lab1;\n                    }\n                    // ], line 43\n                    ket = cursor;\n                    switch(among_var) {\n                        case 0:\n                            break lab1;\n                        case 1:\n                            // (, line 45\n                            // <-, line 45\n                            slice_from(\"a\");\n                            break;\n                        case 2:\n                            // (, line 47\n                            // <-, line 47\n                            slice_from(\"e\");\n                            break;\n                        case 3:\n                            // (, line 49\n                            // <-, line 49\n                            slice_from(\"i\");\n                            break;\n                        case 4:\n                            // (, line 51\n                            // <-, line 51\n                            slice_from(\"o\");\n                            break;\n                        case 5:\n                            // (, line 53\n                            // <-, line 53\n                            slice_from(\"u\");\n                            break;\n                        case 6:\n                            // (, line 54\n                            // next, line 54\n                            if (cursor >= limit)\n                            {\n                                break lab1;\n                            }\n                            cursor++;\n                            break;\n                    }\n                    continue replab0;\n                } while (false);\n                cursor = v_2;\n                break replab0;\n            }\n            cursor = v_1;\n            // try, line 57\n            v_3 = cursor;\n            lab2: do {\n                // (, line 57\n                // [, line 57\n                bra = cursor;\n                // literal, line 57\n                if (!(eq_s(1, \"y\")))\n                {\n                    cursor = v_3;\n                    break lab2;\n                }\n                // ], line 57\n                ket = cursor;\n                // <-, line 57\n                slice_from(\"Y\");\n            } while (false);\n            // repeat, line 58\n            replab3: while(true)\n            {\n                v_4 = cursor;\n                lab4: do {\n                    // goto, line 58\n                    golab5: while(true)\n                    {\n                        v_5 = cursor;\n                        lab6: do {\n                            // (, line 58\n                            if (!(in_grouping(g_v, 97, 232)))\n                            {\n                                break lab6;\n                            }\n                            // [, line 59\n                            bra = cursor;\n                            // or, line 59\n                            lab7: do {\n                                v_6 = cursor;\n                                lab8: do {\n                                    // (, line 59\n                                    // literal, line 59\n                                    if (!(eq_s(1, \"i\")))\n                                    {\n                                        break lab8;\n                                    }\n                                    // ], line 59\n                                    ket = cursor;\n                                    if (!(in_grouping(g_v, 97, 232)))\n                                    {\n                                        break lab8;\n                                    }\n                                    // <-, line 59\n                                    slice_from(\"I\");\n                                    break lab7;\n                                } while (false);\n                                cursor = v_6;\n                                // (, line 60\n                                // literal, line 60\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab6;\n                                }\n                                // ], line 60\n                                ket = cursor;\n                                // <-, line 60\n                                slice_from(\"Y\");\n                            } while (false);\n                            cursor = v_5;\n                            break golab5;\n                        } while (false);\n                        cursor = v_5;\n                        if (cursor >= limit)\n                        {\n                            break lab4;\n                        }\n                        cursor++;\n                    }\n                    continue replab3;\n                } while (false);\n                cursor = v_4;\n                break replab3;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_prelude() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            // (, line 41\n            // test, line 42\n            v_1 = cursor;\n            // repeat, line 42\n            replab0: while(true)\n            {\n                v_2 = cursor;\n                lab1: do {\n                    // (, line 42\n                    // [, line 43\n                    bra = cursor;\n                    // substring, line 43\n                    among_var = find_among(a_0, 11);\n                    if (among_var == 0)\n                    {\n                        break lab1;\n                    }\n                    // ], line 43\n                    ket = cursor;\n                    switch(among_var) {\n                        case 0:\n                            break lab1;\n                        case 1:\n                            // (, line 45\n                            // <-, line 45\n                            slice_from(\"a\");\n                            break;\n                        case 2:\n                            // (, line 47\n                            // <-, line 47\n                            slice_from(\"e\");\n                            break;\n                        case 3:\n                            // (, line 49\n                            // <-, line 49\n                            slice_from(\"i\");\n                            break;\n                        case 4:\n                            // (, line 51\n                            // <-, line 51\n                            slice_from(\"o\");\n                            break;\n                        case 5:\n                            // (, line 53\n                            // <-, line 53\n                            slice_from(\"u\");\n                            break;\n                        case 6:\n                            // (, line 54\n                            // next, line 54\n                            if (cursor >= limit)\n                            {\n                                break lab1;\n                            }\n                            cursor++;\n                            break;\n                    }\n                    continue replab0;\n                } while (false);\n                cursor = v_2;\n                break replab0;\n            }\n            cursor = v_1;\n            // try, line 57\n            v_3 = cursor;\n            lab2: do {\n                // (, line 57\n                // [, line 57\n                bra = cursor;\n                // literal, line 57\n                if (!(eq_s(1, \"y\")))\n                {\n                    cursor = v_3;\n                    break lab2;\n                }\n                // ], line 57\n                ket = cursor;\n                // <-, line 57\n                slice_from(\"Y\");\n            } while (false);\n            // repeat, line 58\n            replab3: while(true)\n            {\n                v_4 = cursor;\n                lab4: do {\n                    // goto, line 58\n                    golab5: while(true)\n                    {\n                        v_5 = cursor;\n                        lab6: do {\n                            // (, line 58\n                            if (!(in_grouping(g_v, 97, 232)))\n                            {\n                                break lab6;\n                            }\n                            // [, line 59\n                            bra = cursor;\n                            // or, line 59\n                            lab7: do {\n                                v_6 = cursor;\n                                lab8: do {\n                                    // (, line 59\n                                    // literal, line 59\n                                    if (!(eq_s(1, \"i\")))\n                                    {\n                                        break lab8;\n                                    }\n                                    // ], line 59\n                                    ket = cursor;\n                                    if (!(in_grouping(g_v, 97, 232)))\n                                    {\n                                        break lab8;\n                                    }\n                                    // <-, line 59\n                                    slice_from(\"I\");\n                                    break lab7;\n                                } while (false);\n                                cursor = v_6;\n                                // (, line 60\n                                // literal, line 60\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab6;\n                                }\n                                // ], line 60\n                                ket = cursor;\n                                // <-, line 60\n                                slice_from(\"Y\");\n                            } while (false);\n                            cursor = v_5;\n                            break golab5;\n                        } while (false);\n                        cursor = v_5;\n                        if (cursor >= limit)\n                        {\n                            break lab4;\n                        }\n                        cursor++;\n                    }\n                    continue replab3;\n                } while (false);\n                cursor = v_4;\n                break replab3;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/DutchStemmer#r_prelude().mjava","pathOld":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/DutchStemmer#r_prelude().mjava","sourceNew":"        private boolean r_prelude() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            // (, line 41\n            // test, line 42\n            v_1 = cursor;\n            // repeat, line 42\n            replab0: while(true)\n            {\n                v_2 = cursor;\n                lab1: do {\n                    // (, line 42\n                    // [, line 43\n                    bra = cursor;\n                    // substring, line 43\n                    among_var = find_among(a_0, 11);\n                    if (among_var == 0)\n                    {\n                        break lab1;\n                    }\n                    // ], line 43\n                    ket = cursor;\n                    switch(among_var) {\n                        case 0:\n                            break lab1;\n                        case 1:\n                            // (, line 45\n                            // <-, line 45\n                            slice_from(\"a\");\n                            break;\n                        case 2:\n                            // (, line 47\n                            // <-, line 47\n                            slice_from(\"e\");\n                            break;\n                        case 3:\n                            // (, line 49\n                            // <-, line 49\n                            slice_from(\"i\");\n                            break;\n                        case 4:\n                            // (, line 51\n                            // <-, line 51\n                            slice_from(\"o\");\n                            break;\n                        case 5:\n                            // (, line 53\n                            // <-, line 53\n                            slice_from(\"u\");\n                            break;\n                        case 6:\n                            // (, line 54\n                            // next, line 54\n                            if (cursor >= limit)\n                            {\n                                break lab1;\n                            }\n                            cursor++;\n                            break;\n                    }\n                    continue replab0;\n                } while (false);\n                cursor = v_2;\n                break replab0;\n            }\n            cursor = v_1;\n            // try, line 57\n            v_3 = cursor;\n            lab2: do {\n                // (, line 57\n                // [, line 57\n                bra = cursor;\n                // literal, line 57\n                if (!(eq_s(1, \"y\")))\n                {\n                    cursor = v_3;\n                    break lab2;\n                }\n                // ], line 57\n                ket = cursor;\n                // <-, line 57\n                slice_from(\"Y\");\n            } while (false);\n            // repeat, line 58\n            replab3: while(true)\n            {\n                v_4 = cursor;\n                lab4: do {\n                    // goto, line 58\n                    golab5: while(true)\n                    {\n                        v_5 = cursor;\n                        lab6: do {\n                            // (, line 58\n                            if (!(in_grouping(g_v, 97, 232)))\n                            {\n                                break lab6;\n                            }\n                            // [, line 59\n                            bra = cursor;\n                            // or, line 59\n                            lab7: do {\n                                v_6 = cursor;\n                                lab8: do {\n                                    // (, line 59\n                                    // literal, line 59\n                                    if (!(eq_s(1, \"i\")))\n                                    {\n                                        break lab8;\n                                    }\n                                    // ], line 59\n                                    ket = cursor;\n                                    if (!(in_grouping(g_v, 97, 232)))\n                                    {\n                                        break lab8;\n                                    }\n                                    // <-, line 59\n                                    slice_from(\"I\");\n                                    break lab7;\n                                } while (false);\n                                cursor = v_6;\n                                // (, line 60\n                                // literal, line 60\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab6;\n                                }\n                                // ], line 60\n                                ket = cursor;\n                                // <-, line 60\n                                slice_from(\"Y\");\n                            } while (false);\n                            cursor = v_5;\n                            break golab5;\n                        } while (false);\n                        cursor = v_5;\n                        if (cursor >= limit)\n                        {\n                            break lab4;\n                        }\n                        cursor++;\n                    }\n                    continue replab3;\n                } while (false);\n                cursor = v_4;\n                break replab3;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_prelude() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            // (, line 41\n            // test, line 42\n            v_1 = cursor;\n            // repeat, line 42\n            replab0: while(true)\n            {\n                v_2 = cursor;\n                lab1: do {\n                    // (, line 42\n                    // [, line 43\n                    bra = cursor;\n                    // substring, line 43\n                    among_var = find_among(a_0, 11);\n                    if (among_var == 0)\n                    {\n                        break lab1;\n                    }\n                    // ], line 43\n                    ket = cursor;\n                    switch(among_var) {\n                        case 0:\n                            break lab1;\n                        case 1:\n                            // (, line 45\n                            // <-, line 45\n                            slice_from(\"a\");\n                            break;\n                        case 2:\n                            // (, line 47\n                            // <-, line 47\n                            slice_from(\"e\");\n                            break;\n                        case 3:\n                            // (, line 49\n                            // <-, line 49\n                            slice_from(\"i\");\n                            break;\n                        case 4:\n                            // (, line 51\n                            // <-, line 51\n                            slice_from(\"o\");\n                            break;\n                        case 5:\n                            // (, line 53\n                            // <-, line 53\n                            slice_from(\"u\");\n                            break;\n                        case 6:\n                            // (, line 54\n                            // next, line 54\n                            if (cursor >= limit)\n                            {\n                                break lab1;\n                            }\n                            cursor++;\n                            break;\n                    }\n                    continue replab0;\n                } while (false);\n                cursor = v_2;\n                break replab0;\n            }\n            cursor = v_1;\n            // try, line 57\n            v_3 = cursor;\n            lab2: do {\n                // (, line 57\n                // [, line 57\n                bra = cursor;\n                // literal, line 57\n                if (!(eq_s(1, \"y\")))\n                {\n                    cursor = v_3;\n                    break lab2;\n                }\n                // ], line 57\n                ket = cursor;\n                // <-, line 57\n                slice_from(\"Y\");\n            } while (false);\n            // repeat, line 58\n            replab3: while(true)\n            {\n                v_4 = cursor;\n                lab4: do {\n                    // goto, line 58\n                    golab5: while(true)\n                    {\n                        v_5 = cursor;\n                        lab6: do {\n                            // (, line 58\n                            if (!(in_grouping(g_v, 97, 232)))\n                            {\n                                break lab6;\n                            }\n                            // [, line 59\n                            bra = cursor;\n                            // or, line 59\n                            lab7: do {\n                                v_6 = cursor;\n                                lab8: do {\n                                    // (, line 59\n                                    // literal, line 59\n                                    if (!(eq_s(1, \"i\")))\n                                    {\n                                        break lab8;\n                                    }\n                                    // ], line 59\n                                    ket = cursor;\n                                    if (!(in_grouping(g_v, 97, 232)))\n                                    {\n                                        break lab8;\n                                    }\n                                    // <-, line 59\n                                    slice_from(\"I\");\n                                    break lab7;\n                                } while (false);\n                                cursor = v_6;\n                                // (, line 60\n                                // literal, line 60\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab6;\n                                }\n                                // ], line 60\n                                ket = cursor;\n                                // <-, line 60\n                                slice_from(\"Y\");\n                            } while (false);\n                            cursor = v_5;\n                            break golab5;\n                        } while (false);\n                        cursor = v_5;\n                        if (cursor >= limit)\n                        {\n                            break lab4;\n                        }\n                        cursor++;\n                    }\n                    continue replab3;\n                } while (false);\n                cursor = v_4;\n                break replab3;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"]},"commit2Childs":{"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}