{"path":"modules/grouping/src/java/org/apache/lucene/search/grouping/GroupingSearch#[T]_search(IndexSearcher,Filter,Query,int,int).mjava","commits":[{"id":"3ec363f8022f02e8aca0cc8dfc2cdd6bc5d87e29","date":1332432942,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/GroupingSearch#[T]_search(IndexSearcher,Filter,Query,int,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Executes a grouped search. Both the first pass and second pass are executed on the specified searcher.\n   *\n   * @param searcher    The {@link org.apache.lucene.search.IndexSearcher} instance to execute the grouped search on.\n   * @param filter      The filter to execute with the grouping\n   * @param query       The query to execute with the grouping\n   * @param groupOffset The group offset\n   * @param groupLimit  The number of groups to return from the specified group offset\n   * @return the grouped result as a {@link TopGroups} instance\n   * @throws IOException If any I/O related errors occur\n   */\n  @SuppressWarnings(\"unchecked\")\n  public <T> TopGroups<T> search(IndexSearcher searcher, Filter filter, Query query, int groupOffset, int groupLimit) throws IOException {\n    if (groupField != null || groupFunction != null) {\n      return groupByFieldOrFunction(searcher, filter, query, groupOffset, groupLimit);\n    } else if (groupEndDocs != null) {\n      return (TopGroups<T>) groupByDocBlock(searcher, filter, query, groupOffset, groupLimit);\n    } else {\n      throw new IllegalStateException(\"Either groupField, groupFunction or groupEndDocs must be set.\"); // This can't happen...\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/GroupingSearch#[T]_search(IndexSearcher,Filter,Query,int,int).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/GroupingSearch#[T]_search(IndexSearcher,Filter,Query,int,int).mjava","sourceNew":"  /**\n   * Executes a grouped search. Both the first pass and second pass are executed on the specified searcher.\n   *\n   * @param searcher    The {@link org.apache.lucene.search.IndexSearcher} instance to execute the grouped search on.\n   * @param filter      The filter to execute with the grouping\n   * @param query       The query to execute with the grouping\n   * @param groupOffset The group offset\n   * @param groupLimit  The number of groups to return from the specified group offset\n   * @return the grouped result as a {@link TopGroups} instance\n   * @throws IOException If any I/O related errors occur\n   */\n  @SuppressWarnings(\"unchecked\")\n  public <T> TopGroups<T> search(IndexSearcher searcher, Filter filter, Query query, int groupOffset, int groupLimit) throws IOException {\n    if (groupField != null || groupFunction != null) {\n      return groupByFieldOrFunction(searcher, filter, query, groupOffset, groupLimit);\n    } else if (groupEndDocs != null) {\n      return (TopGroups<T>) groupByDocBlock(searcher, filter, query, groupOffset, groupLimit);\n    } else {\n      throw new IllegalStateException(\"Either groupField, groupFunction or groupEndDocs must be set.\"); // This can't happen...\n    }\n  }\n\n","sourceOld":"  /**\n   * Executes a grouped search. Both the first pass and second pass are executed on the specified searcher.\n   *\n   * @param searcher    The {@link org.apache.lucene.search.IndexSearcher} instance to execute the grouped search on.\n   * @param filter      The filter to execute with the grouping\n   * @param query       The query to execute with the grouping\n   * @param groupOffset The group offset\n   * @param groupLimit  The number of groups to return from the specified group offset\n   * @return the grouped result as a {@link TopGroups} instance\n   * @throws IOException If any I/O related errors occur\n   */\n  @SuppressWarnings(\"unchecked\")\n  public <T> TopGroups<T> search(IndexSearcher searcher, Filter filter, Query query, int groupOffset, int groupLimit) throws IOException {\n    if (groupField != null || groupFunction != null) {\n      return groupByFieldOrFunction(searcher, filter, query, groupOffset, groupLimit);\n    } else if (groupEndDocs != null) {\n      return (TopGroups<T>) groupByDocBlock(searcher, filter, query, groupOffset, groupLimit);\n    } else {\n      throw new IllegalStateException(\"Either groupField, groupFunction or groupEndDocs must be set.\"); // This can't happen...\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3ec363f8022f02e8aca0cc8dfc2cdd6bc5d87e29":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["3ec363f8022f02e8aca0cc8dfc2cdd6bc5d87e29"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"3ec363f8022f02e8aca0cc8dfc2cdd6bc5d87e29":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3ec363f8022f02e8aca0cc8dfc2cdd6bc5d87e29"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}