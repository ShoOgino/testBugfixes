{"path":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput.MockFSDirectory#MockFSDirectory(Path,Random).mjava","commits":[{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput.MockFSDirectory#MockFSDirectory(Path,Random).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput.MockFSDirectory#MockFSDirectory(File,Random).mjava","sourceNew":"      public MockFSDirectory(Path path, Random rand) throws IOException {\n        this.rand = rand;\n        lockFactory = NoLockFactory.getNoLockFactory();\n        dir = new SimpleFSDirectory(path, null);\n      }\n\n","sourceOld":"      public MockFSDirectory(File path, Random rand) throws IOException {\n        this.rand = rand;\n        lockFactory = NoLockFactory.getNoLockFactory();\n        dir = new SimpleFSDirectory(path, null);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"285cdc737de75b7cc7c284a156b20214deb67bca","date":1415535483,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput.MockFSDirectory#MockFSDirectory(Path,Random).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput.MockFSDirectory#MockFSDirectory(Path,Random).mjava","sourceNew":"      public MockFSDirectory(Path path, Random rand) throws IOException {\n        super(new SimpleFSDirectory(path));\n        this.rand = rand;\n      }\n\n","sourceOld":"      public MockFSDirectory(Path path, Random rand) throws IOException {\n        this.rand = rand;\n        lockFactory = NoLockFactory.getNoLockFactory();\n        dir = new SimpleFSDirectory(path, null);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ae13d58e10d8dc818c75db483ed8b53c725f1d","date":1583449465,"type":3,"author":"Yannick Welsch","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput.MockFSDirectory#MockFSDirectory(Path,Random).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput.MockFSDirectory#MockFSDirectory(Path,Random).mjava","sourceNew":"      public MockFSDirectory(Path path, Random rand) throws IOException {\n        super(new NIOFSDirectory(path));\n        this.rand = rand;\n      }\n\n","sourceOld":"      public MockFSDirectory(Path path, Random rand) throws IOException {\n        super(new SimpleFSDirectory(path));\n        this.rand = rand;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ca2a57dbb0665332572cf1a0dffa67234089615","date":1583491342,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput.MockFSDirectory#MockFSDirectory(Path,Random).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput.MockFSDirectory#MockFSDirectory(Path,Random).mjava","sourceNew":"      public MockFSDirectory(Path path, Random rand) throws IOException {\n        super(new NIOFSDirectory(path));\n        this.rand = rand;\n      }\n\n","sourceOld":"      public MockFSDirectory(Path path, Random rand) throws IOException {\n        super(new SimpleFSDirectory(path));\n        this.rand = rand;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c924ed848363114bc21dd13c3a1953c42aefb554","date":1586956211,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput.MockFSDirectory#MockFSDirectory(Path,Random).mjava","sourceNew":null,"sourceOld":"      public MockFSDirectory(Path path, Random rand) throws IOException {\n        super(new NIOFSDirectory(path));\n        this.rand = rand;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c924ed848363114bc21dd13c3a1953c42aefb554":["9ca2a57dbb0665332572cf1a0dffa67234089615"],"9ca2a57dbb0665332572cf1a0dffa67234089615":["285cdc737de75b7cc7c284a156b20214deb67bca","09ae13d58e10d8dc818c75db483ed8b53c725f1d"],"09ae13d58e10d8dc818c75db483ed8b53c725f1d":["285cdc737de75b7cc7c284a156b20214deb67bca"],"285cdc737de75b7cc7c284a156b20214deb67bca":["f4abec28b874149a7223e32cc7a01704c27790de"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f4abec28b874149a7223e32cc7a01704c27790de":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c924ed848363114bc21dd13c3a1953c42aefb554"]},"commit2Childs":{"c924ed848363114bc21dd13c3a1953c42aefb554":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9ca2a57dbb0665332572cf1a0dffa67234089615":["c924ed848363114bc21dd13c3a1953c42aefb554"],"09ae13d58e10d8dc818c75db483ed8b53c725f1d":["9ca2a57dbb0665332572cf1a0dffa67234089615"],"285cdc737de75b7cc7c284a156b20214deb67bca":["9ca2a57dbb0665332572cf1a0dffa67234089615","09ae13d58e10d8dc818c75db483ed8b53c725f1d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f4abec28b874149a7223e32cc7a01704c27790de"],"f4abec28b874149a7223e32cc7a01704c27790de":["285cdc737de75b7cc7c284a156b20214deb67bca"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}