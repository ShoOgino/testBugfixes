{"path":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.StopableIndexingThread#run().mjava","commits":[{"id":"2c30e4c1cee08b3b229a77991882594fe7250b66","date":1344448871,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.StopableIndexingThread#run().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest.StopableIndexingThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      int i = startI;\n      int numDeletes = 0;\n      int numAdds = 0;\n      \n      while (true && !stop) {\n        ++i;\n        \n        if (doDeletes && random().nextBoolean() && deletes.size() > 0) {\n          Integer delete = deletes.remove(0);\n          try {\n            numDeletes++;\n            controlClient.deleteById(Integer.toString(delete));\n            cloudClient.deleteById(Integer.toString(delete));\n          } catch (Exception e) {\n            System.err.println(\"REQUEST FAILED:\");\n            e.printStackTrace();\n            if (e instanceof SolrServerException) {\n              System.err.println(\"ROOT CAUSE:\");\n              ((SolrServerException) e).getRootCause().printStackTrace();\n            }\n            fails.incrementAndGet();\n          }\n        }\n        \n        try {\n          numAdds++;\n          indexr(id, i, i1, 50, tlong, 50, t1,\n              \"to come to the aid of their country.\");\n        } catch (Exception e) {\n          System.err.println(\"REQUEST FAILED:\");\n          e.printStackTrace();\n          if (e instanceof SolrServerException) {\n            System.err.println(\"ROOT CAUSE:\");\n            ((SolrServerException) e).getRootCause().printStackTrace();\n          }\n          fails.incrementAndGet();\n        }\n        \n        if (doDeletes && random().nextBoolean()) {\n          deletes.add(i);\n        }\n        \n      }\n      \n      System.err.println(\"added docs:\" + numAdds + \" with \" + fails + \" fails\"\n          + \" deletes:\" + numDeletes);\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      int i = startI;\n      int numDeletes = 0;\n      int numAdds = 0;\n      \n      while (true && !stop) {\n        ++i;\n        \n        if (doDeletes && random().nextBoolean() && deletes.size() > 0) {\n          Integer delete = deletes.remove(0);\n          try {\n            numDeletes++;\n            controlClient.deleteById(Integer.toString(delete));\n            cloudClient.deleteById(Integer.toString(delete));\n          } catch (Exception e) {\n            System.err.println(\"REQUEST FAILED:\");\n            e.printStackTrace();\n            if (e instanceof SolrServerException) {\n              System.err.println(\"ROOT CAUSE:\");\n              ((SolrServerException) e).getRootCause().printStackTrace();\n            }\n            fails.incrementAndGet();\n          }\n        }\n        \n        try {\n          numAdds++;\n          indexr(id, i, i1, 50, tlong, 50, t1,\n              \"to come to the aid of their country.\");\n        } catch (Exception e) {\n          System.err.println(\"REQUEST FAILED:\");\n          e.printStackTrace();\n          if (e instanceof SolrServerException) {\n            System.err.println(\"ROOT CAUSE:\");\n            ((SolrServerException) e).getRootCause().printStackTrace();\n          }\n          fails.incrementAndGet();\n        }\n        \n        if (doDeletes && random().nextBoolean()) {\n          deletes.add(i);\n        }\n        \n      }\n      \n      System.err.println(\"added docs:\" + numAdds + \" with \" + fails + \" fails\"\n          + \" deletes:\" + numDeletes);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.StopableIndexingThread#run().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest.StopableIndexingThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      int i = startI;\n      int numDeletes = 0;\n      int numAdds = 0;\n      \n      while (true && !stop) {\n        ++i;\n        \n        if (doDeletes && random().nextBoolean() && deletes.size() > 0) {\n          Integer delete = deletes.remove(0);\n          try {\n            numDeletes++;\n            controlClient.deleteById(Integer.toString(delete));\n            cloudClient.deleteById(Integer.toString(delete));\n          } catch (Exception e) {\n            System.err.println(\"REQUEST FAILED:\");\n            e.printStackTrace();\n            if (e instanceof SolrServerException) {\n              System.err.println(\"ROOT CAUSE:\");\n              ((SolrServerException) e).getRootCause().printStackTrace();\n            }\n            fails.incrementAndGet();\n          }\n        }\n        \n        try {\n          numAdds++;\n          indexr(id, i, i1, 50, tlong, 50, t1,\n              \"to come to the aid of their country.\");\n        } catch (Exception e) {\n          System.err.println(\"REQUEST FAILED:\");\n          e.printStackTrace();\n          if (e instanceof SolrServerException) {\n            System.err.println(\"ROOT CAUSE:\");\n            ((SolrServerException) e).getRootCause().printStackTrace();\n          }\n          fails.incrementAndGet();\n        }\n        \n        if (doDeletes && random().nextBoolean()) {\n          deletes.add(i);\n        }\n        \n      }\n      \n      System.err.println(\"added docs:\" + numAdds + \" with \" + fails + \" fails\"\n          + \" deletes:\" + numDeletes);\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      int i = startI;\n      int numDeletes = 0;\n      int numAdds = 0;\n      \n      while (true && !stop) {\n        ++i;\n        \n        if (doDeletes && random().nextBoolean() && deletes.size() > 0) {\n          Integer delete = deletes.remove(0);\n          try {\n            numDeletes++;\n            controlClient.deleteById(Integer.toString(delete));\n            cloudClient.deleteById(Integer.toString(delete));\n          } catch (Exception e) {\n            System.err.println(\"REQUEST FAILED:\");\n            e.printStackTrace();\n            if (e instanceof SolrServerException) {\n              System.err.println(\"ROOT CAUSE:\");\n              ((SolrServerException) e).getRootCause().printStackTrace();\n            }\n            fails.incrementAndGet();\n          }\n        }\n        \n        try {\n          numAdds++;\n          indexr(id, i, i1, 50, tlong, 50, t1,\n              \"to come to the aid of their country.\");\n        } catch (Exception e) {\n          System.err.println(\"REQUEST FAILED:\");\n          e.printStackTrace();\n          if (e instanceof SolrServerException) {\n            System.err.println(\"ROOT CAUSE:\");\n            ((SolrServerException) e).getRootCause().printStackTrace();\n          }\n          fails.incrementAndGet();\n        }\n        \n        if (doDeletes && random().nextBoolean()) {\n          deletes.add(i);\n        }\n        \n      }\n      \n      System.err.println(\"added docs:\" + numAdds + \" with \" + fails + \" fails\"\n          + \" deletes:\" + numDeletes);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.StopableIndexingThread#run().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest.StopableIndexingThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      int i = startI;\n      int numDeletes = 0;\n      int numAdds = 0;\n      \n      while (true && !stop) {\n        ++i;\n        \n        if (doDeletes && random().nextBoolean() && deletes.size() > 0) {\n          Integer delete = deletes.remove(0);\n          try {\n            numDeletes++;\n            controlClient.deleteById(Integer.toString(delete));\n            cloudClient.deleteById(Integer.toString(delete));\n          } catch (Exception e) {\n            System.err.println(\"REQUEST FAILED:\");\n            e.printStackTrace();\n            if (e instanceof SolrServerException) {\n              System.err.println(\"ROOT CAUSE:\");\n              ((SolrServerException) e).getRootCause().printStackTrace();\n            }\n            fails.incrementAndGet();\n          }\n        }\n        \n        try {\n          numAdds++;\n          indexr(id, i, i1, 50, tlong, 50, t1,\n              \"to come to the aid of their country.\");\n        } catch (Exception e) {\n          System.err.println(\"REQUEST FAILED:\");\n          e.printStackTrace();\n          if (e instanceof SolrServerException) {\n            System.err.println(\"ROOT CAUSE:\");\n            ((SolrServerException) e).getRootCause().printStackTrace();\n          }\n          fails.incrementAndGet();\n        }\n        \n        if (doDeletes && random().nextBoolean()) {\n          deletes.add(i);\n        }\n        \n      }\n      \n      System.err.println(\"added docs:\" + numAdds + \" with \" + fails + \" fails\"\n          + \" deletes:\" + numDeletes);\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      int i = startI;\n      int numDeletes = 0;\n      int numAdds = 0;\n      \n      while (true && !stop) {\n        ++i;\n        \n        if (doDeletes && random().nextBoolean() && deletes.size() > 0) {\n          Integer delete = deletes.remove(0);\n          try {\n            numDeletes++;\n            controlClient.deleteById(Integer.toString(delete));\n            cloudClient.deleteById(Integer.toString(delete));\n          } catch (Exception e) {\n            System.err.println(\"REQUEST FAILED:\");\n            e.printStackTrace();\n            if (e instanceof SolrServerException) {\n              System.err.println(\"ROOT CAUSE:\");\n              ((SolrServerException) e).getRootCause().printStackTrace();\n            }\n            fails.incrementAndGet();\n          }\n        }\n        \n        try {\n          numAdds++;\n          indexr(id, i, i1, 50, tlong, 50, t1,\n              \"to come to the aid of their country.\");\n        } catch (Exception e) {\n          System.err.println(\"REQUEST FAILED:\");\n          e.printStackTrace();\n          if (e instanceof SolrServerException) {\n            System.err.println(\"ROOT CAUSE:\");\n            ((SolrServerException) e).getRootCause().printStackTrace();\n          }\n          fails.incrementAndGet();\n        }\n        \n        if (doDeletes && random().nextBoolean()) {\n          deletes.add(i);\n        }\n        \n      }\n      \n      System.err.println(\"added docs:\" + numAdds + \" with \" + fails + \" fails\"\n          + \" deletes:\" + numDeletes);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"47fd25cf65c3ded19412634eef4783f4cf6b638e","date":1357089964,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.StopableIndexingThread#run().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.StopableIndexingThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      int i = startI;\n      int numDeletes = 0;\n      int numAdds = 0;\n      \n      while (true && !stop) {\n        ++i;\n        boolean addFailed = false;\n        \n        if (doDeletes && random().nextBoolean() && deletes.size() > 0) {\n          Integer delete = deletes.remove(0);\n          try {\n            numDeletes++;\n            controlClient.deleteById(Integer.toString(delete));\n            cloudClient.deleteById(Integer.toString(delete));\n          } catch (Exception e) {\n            System.err.println(\"REQUEST FAILED:\");\n            e.printStackTrace();\n            if (e instanceof SolrServerException) {\n              System.err.println(\"ROOT CAUSE:\");\n              ((SolrServerException) e).getRootCause().printStackTrace();\n            }\n            fails.incrementAndGet();\n          }\n        }\n        \n        try {\n          numAdds++;\n          indexr(id, i, i1, 50, tlong, 50, t1,\n              \"to come to the aid of their country.\");\n        } catch (Exception e) {\n          addFailed = true;\n          System.err.println(\"REQUEST FAILED:\");\n          e.printStackTrace();\n          if (e instanceof SolrServerException) {\n            System.err.println(\"ROOT CAUSE:\");\n            ((SolrServerException) e).getRootCause().printStackTrace();\n          }\n          fails.incrementAndGet();\n        }\n        \n        if (!addFailed && doDeletes && random().nextBoolean()) {\n          deletes.add(i);\n        }\n        \n      }\n      \n      System.err.println(\"added docs:\" + numAdds + \" with \" + fails + \" fails\"\n          + \" deletes:\" + numDeletes);\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      int i = startI;\n      int numDeletes = 0;\n      int numAdds = 0;\n      \n      while (true && !stop) {\n        ++i;\n        \n        if (doDeletes && random().nextBoolean() && deletes.size() > 0) {\n          Integer delete = deletes.remove(0);\n          try {\n            numDeletes++;\n            controlClient.deleteById(Integer.toString(delete));\n            cloudClient.deleteById(Integer.toString(delete));\n          } catch (Exception e) {\n            System.err.println(\"REQUEST FAILED:\");\n            e.printStackTrace();\n            if (e instanceof SolrServerException) {\n              System.err.println(\"ROOT CAUSE:\");\n              ((SolrServerException) e).getRootCause().printStackTrace();\n            }\n            fails.incrementAndGet();\n          }\n        }\n        \n        try {\n          numAdds++;\n          indexr(id, i, i1, 50, tlong, 50, t1,\n              \"to come to the aid of their country.\");\n        } catch (Exception e) {\n          System.err.println(\"REQUEST FAILED:\");\n          e.printStackTrace();\n          if (e instanceof SolrServerException) {\n            System.err.println(\"ROOT CAUSE:\");\n            ((SolrServerException) e).getRootCause().printStackTrace();\n          }\n          fails.incrementAndGet();\n        }\n        \n        if (doDeletes && random().nextBoolean()) {\n          deletes.add(i);\n        }\n        \n      }\n      \n      System.err.println(\"added docs:\" + numAdds + \" with \" + fails + \" fails\"\n          + \" deletes:\" + numDeletes);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.StopableIndexingThread#run().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.StopableIndexingThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      int i = startI;\n      int numDeletes = 0;\n      int numAdds = 0;\n      \n      while (true && !stop) {\n        ++i;\n        boolean addFailed = false;\n        \n        if (doDeletes && random().nextBoolean() && deletes.size() > 0) {\n          Integer delete = deletes.remove(0);\n          try {\n            numDeletes++;\n            controlClient.deleteById(Integer.toString(delete));\n            cloudClient.deleteById(Integer.toString(delete));\n          } catch (Exception e) {\n            System.err.println(\"REQUEST FAILED:\");\n            e.printStackTrace();\n            if (e instanceof SolrServerException) {\n              System.err.println(\"ROOT CAUSE:\");\n              ((SolrServerException) e).getRootCause().printStackTrace();\n            }\n            fails.incrementAndGet();\n          }\n        }\n        \n        try {\n          numAdds++;\n          indexr(id, i, i1, 50, tlong, 50, t1,\n              \"to come to the aid of their country.\");\n        } catch (Exception e) {\n          addFailed = true;\n          System.err.println(\"REQUEST FAILED:\");\n          e.printStackTrace();\n          if (e instanceof SolrServerException) {\n            System.err.println(\"ROOT CAUSE:\");\n            ((SolrServerException) e).getRootCause().printStackTrace();\n          }\n          fails.incrementAndGet();\n        }\n        \n        if (!addFailed && doDeletes && random().nextBoolean()) {\n          deletes.add(i);\n        }\n        \n      }\n      \n      System.err.println(\"added docs:\" + numAdds + \" with \" + fails + \" fails\"\n          + \" deletes:\" + numDeletes);\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      int i = startI;\n      int numDeletes = 0;\n      int numAdds = 0;\n      \n      while (true && !stop) {\n        ++i;\n        \n        if (doDeletes && random().nextBoolean() && deletes.size() > 0) {\n          Integer delete = deletes.remove(0);\n          try {\n            numDeletes++;\n            controlClient.deleteById(Integer.toString(delete));\n            cloudClient.deleteById(Integer.toString(delete));\n          } catch (Exception e) {\n            System.err.println(\"REQUEST FAILED:\");\n            e.printStackTrace();\n            if (e instanceof SolrServerException) {\n              System.err.println(\"ROOT CAUSE:\");\n              ((SolrServerException) e).getRootCause().printStackTrace();\n            }\n            fails.incrementAndGet();\n          }\n        }\n        \n        try {\n          numAdds++;\n          indexr(id, i, i1, 50, tlong, 50, t1,\n              \"to come to the aid of their country.\");\n        } catch (Exception e) {\n          System.err.println(\"REQUEST FAILED:\");\n          e.printStackTrace();\n          if (e instanceof SolrServerException) {\n            System.err.println(\"ROOT CAUSE:\");\n            ((SolrServerException) e).getRootCause().printStackTrace();\n          }\n          fails.incrementAndGet();\n        }\n        \n        if (doDeletes && random().nextBoolean()) {\n          deletes.add(i);\n        }\n        \n      }\n      \n      System.err.println(\"added docs:\" + numAdds + \" with \" + fails + \" fails\"\n          + \" deletes:\" + numDeletes);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"709ec1e7204705625cbd074102a6ced459df9c99","date":1361046093,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.StopableIndexingThread#run().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.StopableIndexingThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      int i = startI;\n      int numDone = 0;\n      int numDeletes = 0;\n      int numAdds = 0;\n      \n      while (true && !stop) {\n        if (numCycles != -1) {\n          if (numDone > numCycles) {\n            break;\n          }\n        }\n        ++numDone;\n        ++i;\n        boolean addFailed = false;\n        \n        if (doDeletes && random().nextBoolean() && deletes.size() > 0) {\n          Integer delete = deletes.remove(0);\n          try {\n            numDeletes++;\n            controlClient.deleteById(Integer.toString(delete));\n            cloudClient.deleteById(Integer.toString(delete));\n          } catch (Exception e) {\n            System.err.println(\"REQUEST FAILED:\");\n            e.printStackTrace();\n            if (e instanceof SolrServerException) {\n              System.err.println(\"ROOT CAUSE:\");\n              ((SolrServerException) e).getRootCause().printStackTrace();\n            }\n            fails.incrementAndGet();\n          }\n        }\n        \n        try {\n          numAdds++;\n          indexr(id, i, i1, 50, tlong, 50, t1,\n              \"to come to the aid of their country.\");\n        } catch (Exception e) {\n          addFailed = true;\n          System.err.println(\"REQUEST FAILED:\");\n          e.printStackTrace();\n          if (e instanceof SolrServerException) {\n            System.err.println(\"ROOT CAUSE:\");\n            ((SolrServerException) e).getRootCause().printStackTrace();\n          }\n          fails.incrementAndGet();\n        }\n        \n        if (!addFailed && doDeletes && random().nextBoolean()) {\n          deletes.add(i);\n        }\n        \n      }\n      \n      System.err.println(\"added docs:\" + numAdds + \" with \" + fails + \" fails\"\n          + \" deletes:\" + numDeletes);\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      int i = startI;\n      int numDeletes = 0;\n      int numAdds = 0;\n      \n      while (true && !stop) {\n        ++i;\n        boolean addFailed = false;\n        \n        if (doDeletes && random().nextBoolean() && deletes.size() > 0) {\n          Integer delete = deletes.remove(0);\n          try {\n            numDeletes++;\n            controlClient.deleteById(Integer.toString(delete));\n            cloudClient.deleteById(Integer.toString(delete));\n          } catch (Exception e) {\n            System.err.println(\"REQUEST FAILED:\");\n            e.printStackTrace();\n            if (e instanceof SolrServerException) {\n              System.err.println(\"ROOT CAUSE:\");\n              ((SolrServerException) e).getRootCause().printStackTrace();\n            }\n            fails.incrementAndGet();\n          }\n        }\n        \n        try {\n          numAdds++;\n          indexr(id, i, i1, 50, tlong, 50, t1,\n              \"to come to the aid of their country.\");\n        } catch (Exception e) {\n          addFailed = true;\n          System.err.println(\"REQUEST FAILED:\");\n          e.printStackTrace();\n          if (e instanceof SolrServerException) {\n            System.err.println(\"ROOT CAUSE:\");\n            ((SolrServerException) e).getRootCause().printStackTrace();\n          }\n          fails.incrementAndGet();\n        }\n        \n        if (!addFailed && doDeletes && random().nextBoolean()) {\n          deletes.add(i);\n        }\n        \n      }\n      \n      System.err.println(\"added docs:\" + numAdds + \" with \" + fails + \" fails\"\n          + \" deletes:\" + numDeletes);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"95303ff3749680c743b9425f9cf99e6e4065e8a8","date":1361061922,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.StopableIndexingThread#run().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.StopableIndexingThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      int i = startI;\n      int numDone = 0;\n      int numDeletes = 0;\n      int numAdds = 0;\n      \n      while (true && !stop) {\n        if (numCycles != -1) {\n          if (numDone > numCycles) {\n            break;\n          }\n        }\n        ++numDone;\n        ++i;\n        boolean addFailed = false;\n        \n        if (doDeletes && random().nextBoolean() && deletes.size() > 0) {\n          Integer delete = deletes.remove(0);\n          try {\n            numDeletes++;\n            controlClient.deleteById(Integer.toString(delete));\n            cloudClient.deleteById(Integer.toString(delete));\n          } catch (Exception e) {\n            System.err.println(\"REQUEST FAILED:\");\n            e.printStackTrace();\n            if (e instanceof SolrServerException) {\n              System.err.println(\"ROOT CAUSE:\");\n              ((SolrServerException) e).getRootCause().printStackTrace();\n            }\n            fails.incrementAndGet();\n          }\n        }\n        \n        try {\n          numAdds++;\n          indexr(id, i, i1, 50, tlong, 50, t1,\n              \"to come to the aid of their country.\");\n        } catch (Exception e) {\n          addFailed = true;\n          System.err.println(\"REQUEST FAILED:\");\n          e.printStackTrace();\n          if (e instanceof SolrServerException) {\n            System.err.println(\"ROOT CAUSE:\");\n            ((SolrServerException) e).getRootCause().printStackTrace();\n          }\n          fails.incrementAndGet();\n        }\n        \n        if (!addFailed && doDeletes && random().nextBoolean()) {\n          deletes.add(i);\n        }\n        \n      }\n      \n      System.err.println(\"added docs:\" + numAdds + \" with \" + fails + \" fails\"\n          + \" deletes:\" + numDeletes);\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      int i = startI;\n      int numDeletes = 0;\n      int numAdds = 0;\n      \n      while (true && !stop) {\n        ++i;\n        boolean addFailed = false;\n        \n        if (doDeletes && random().nextBoolean() && deletes.size() > 0) {\n          Integer delete = deletes.remove(0);\n          try {\n            numDeletes++;\n            controlClient.deleteById(Integer.toString(delete));\n            cloudClient.deleteById(Integer.toString(delete));\n          } catch (Exception e) {\n            System.err.println(\"REQUEST FAILED:\");\n            e.printStackTrace();\n            if (e instanceof SolrServerException) {\n              System.err.println(\"ROOT CAUSE:\");\n              ((SolrServerException) e).getRootCause().printStackTrace();\n            }\n            fails.incrementAndGet();\n          }\n        }\n        \n        try {\n          numAdds++;\n          indexr(id, i, i1, 50, tlong, 50, t1,\n              \"to come to the aid of their country.\");\n        } catch (Exception e) {\n          addFailed = true;\n          System.err.println(\"REQUEST FAILED:\");\n          e.printStackTrace();\n          if (e instanceof SolrServerException) {\n            System.err.println(\"ROOT CAUSE:\");\n            ((SolrServerException) e).getRootCause().printStackTrace();\n          }\n          fails.incrementAndGet();\n        }\n        \n        if (!addFailed && doDeletes && random().nextBoolean()) {\n          deletes.add(i);\n        }\n        \n      }\n      \n      System.err.println(\"added docs:\" + numAdds + \" with \" + fails + \" fails\"\n          + \" deletes:\" + numDeletes);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"69f8e56ca20869301b79b5b945f28bbd93e9ba25","date":1362339751,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.StopableIndexingThread#run().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.StopableIndexingThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      int i = startI;\n      int numDone = 0;\n      int numDeletes = 0;\n      int numAdds = 0;\n      \n      while (true && !stop) {\n        if (numCycles != -1) {\n          if (numDone > numCycles) {\n            break;\n          }\n        }\n        ++numDone;\n        ++i;\n        boolean addFailed = false;\n        \n        if (doDeletes && random().nextBoolean() && deletes.size() > 0) {\n          Integer delete = deletes.remove(0);\n          try {\n            numDeletes++;\n            controlClient.deleteById(Integer.toString(delete));\n            cloudClient.deleteById(Integer.toString(delete));\n          } catch (Exception e) {\n            System.err.println(\"REQUEST FAILED:\");\n            e.printStackTrace();\n            if (e instanceof SolrServerException) {\n              System.err.println(\"ROOT CAUSE:\");\n              ((SolrServerException) e).getRootCause().printStackTrace();\n            }\n            fails.incrementAndGet();\n          }\n        }\n        \n        try {\n          numAdds++;\n          indexr(id, i, i1, 50, tlong, 50, t1,\n              \"to come to the aid of their country.\");\n        } catch (Exception e) {\n          addFailed = true;\n          System.err.println(\"REQUEST FAILED:\");\n          e.printStackTrace();\n          if (e instanceof SolrServerException) {\n            System.err.println(\"ROOT CAUSE:\");\n            ((SolrServerException) e).getRootCause().printStackTrace();\n          }\n          fails.incrementAndGet();\n        }\n        \n        if (!addFailed && doDeletes && random().nextBoolean()) {\n          deletes.add(i);\n        }\n        \n        try {\n          Thread.currentThread().sleep(random().nextInt(100));\n        } catch (InterruptedException e) {\n          Thread.currentThread().interrupt();\n        }\n      }\n      \n      System.err.println(\"added docs:\" + numAdds + \" with \" + fails + \" fails\"\n          + \" deletes:\" + numDeletes);\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      int i = startI;\n      int numDone = 0;\n      int numDeletes = 0;\n      int numAdds = 0;\n      \n      while (true && !stop) {\n        if (numCycles != -1) {\n          if (numDone > numCycles) {\n            break;\n          }\n        }\n        ++numDone;\n        ++i;\n        boolean addFailed = false;\n        \n        if (doDeletes && random().nextBoolean() && deletes.size() > 0) {\n          Integer delete = deletes.remove(0);\n          try {\n            numDeletes++;\n            controlClient.deleteById(Integer.toString(delete));\n            cloudClient.deleteById(Integer.toString(delete));\n          } catch (Exception e) {\n            System.err.println(\"REQUEST FAILED:\");\n            e.printStackTrace();\n            if (e instanceof SolrServerException) {\n              System.err.println(\"ROOT CAUSE:\");\n              ((SolrServerException) e).getRootCause().printStackTrace();\n            }\n            fails.incrementAndGet();\n          }\n        }\n        \n        try {\n          numAdds++;\n          indexr(id, i, i1, 50, tlong, 50, t1,\n              \"to come to the aid of their country.\");\n        } catch (Exception e) {\n          addFailed = true;\n          System.err.println(\"REQUEST FAILED:\");\n          e.printStackTrace();\n          if (e instanceof SolrServerException) {\n            System.err.println(\"ROOT CAUSE:\");\n            ((SolrServerException) e).getRootCause().printStackTrace();\n          }\n          fails.incrementAndGet();\n        }\n        \n        if (!addFailed && doDeletes && random().nextBoolean()) {\n          deletes.add(i);\n        }\n        \n      }\n      \n      System.err.println(\"added docs:\" + numAdds + \" with \" + fails + \" fails\"\n          + \" deletes:\" + numDeletes);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"140c5f61fa740fb4d64b81f155a7241b7aeae06a","date":1385412377,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.StopableIndexingThread#run().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.StopableIndexingThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      int i = startI;\n      int numDone = 0;\n      int numDeletes = 0;\n      int numAdds = 0;\n      \n      while (true && !stop) {\n        if (numCycles != -1) {\n          if (numDone > numCycles) {\n            break;\n          }\n        }\n        ++numDone;\n        ++i;\n        boolean addFailed = false;\n        \n        if (doDeletes && random().nextBoolean() && deletes.size() > 0) {\n          Integer delete = deletes.remove(0);\n          try {\n            numDeletes++;\n            UpdateRequest req = new UpdateRequest();\n            req.deleteById(Integer.toString(delete));\n            req.setParam(\"CONTROL\", \"TRUE\");\n            req.process(controlClient);\n            \n            cloudClient.deleteById(Integer.toString(delete));\n          } catch (Exception e) {\n            System.err.println(\"REQUEST FAILED:\");\n            e.printStackTrace();\n            if (e instanceof SolrServerException) {\n              System.err.println(\"ROOT CAUSE:\");\n              ((SolrServerException) e).getRootCause().printStackTrace();\n            }\n            fails.incrementAndGet();\n          }\n        }\n        \n        try {\n          numAdds++;\n          indexr(id, i, i1, 50, tlong, 50, t1,\n              \"to come to the aid of their country.\");\n        } catch (Exception e) {\n          addFailed = true;\n          System.err.println(\"REQUEST FAILED:\");\n          e.printStackTrace();\n          if (e instanceof SolrServerException) {\n            System.err.println(\"ROOT CAUSE:\");\n            ((SolrServerException) e).getRootCause().printStackTrace();\n          }\n          fails.incrementAndGet();\n        }\n        \n        if (!addFailed && doDeletes && random().nextBoolean()) {\n          deletes.add(i);\n        }\n        \n        try {\n          Thread.currentThread().sleep(random().nextInt(100));\n        } catch (InterruptedException e) {\n          Thread.currentThread().interrupt();\n        }\n      }\n      \n      System.err.println(\"added docs:\" + numAdds + \" with \" + fails + \" fails\"\n          + \" deletes:\" + numDeletes);\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      int i = startI;\n      int numDone = 0;\n      int numDeletes = 0;\n      int numAdds = 0;\n      \n      while (true && !stop) {\n        if (numCycles != -1) {\n          if (numDone > numCycles) {\n            break;\n          }\n        }\n        ++numDone;\n        ++i;\n        boolean addFailed = false;\n        \n        if (doDeletes && random().nextBoolean() && deletes.size() > 0) {\n          Integer delete = deletes.remove(0);\n          try {\n            numDeletes++;\n            controlClient.deleteById(Integer.toString(delete));\n            cloudClient.deleteById(Integer.toString(delete));\n          } catch (Exception e) {\n            System.err.println(\"REQUEST FAILED:\");\n            e.printStackTrace();\n            if (e instanceof SolrServerException) {\n              System.err.println(\"ROOT CAUSE:\");\n              ((SolrServerException) e).getRootCause().printStackTrace();\n            }\n            fails.incrementAndGet();\n          }\n        }\n        \n        try {\n          numAdds++;\n          indexr(id, i, i1, 50, tlong, 50, t1,\n              \"to come to the aid of their country.\");\n        } catch (Exception e) {\n          addFailed = true;\n          System.err.println(\"REQUEST FAILED:\");\n          e.printStackTrace();\n          if (e instanceof SolrServerException) {\n            System.err.println(\"ROOT CAUSE:\");\n            ((SolrServerException) e).getRootCause().printStackTrace();\n          }\n          fails.incrementAndGet();\n        }\n        \n        if (!addFailed && doDeletes && random().nextBoolean()) {\n          deletes.add(i);\n        }\n        \n        try {\n          Thread.currentThread().sleep(random().nextInt(100));\n        } catch (InterruptedException e) {\n          Thread.currentThread().interrupt();\n        }\n      }\n      \n      System.err.println(\"added docs:\" + numAdds + \" with \" + fails + \" fails\"\n          + \" deletes:\" + numDeletes);\n    }\n\n","bugFix":null,"bugIntro":["67e5fb3e1a3e5763eb7aabb2ee71d10e8617e699"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"67e5fb3e1a3e5763eb7aabb2ee71d10e8617e699","date":1385913128,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.StopableIndexingThread#run().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.StopableIndexingThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      int i = 0;\n      int numDone = 0;\n      int numDeletes = 0;\n      int numAdds = 0;\n      \n      while (true && !stop) {\n        if (numCycles != -1) {\n          if (numDone > numCycles) {\n            break;\n          }\n        }\n        ++numDone;\n        String id = this.id + \"-\" + i;\n        ++i;\n        boolean addFailed = false;\n        \n        if (doDeletes && random().nextBoolean() && deletes.size() > 0) {\n          String delete = deletes.remove(0);\n          try {\n            numDeletes++;\n            UpdateRequest req = new UpdateRequest();\n            req.deleteById(delete);\n            req.setParam(\"CONTROL\", \"TRUE\");\n            req.process(controlClient);\n            \n            cloudClient.deleteById(delete);\n          } catch (Exception e) {\n            System.err.println(\"REQUEST FAILED:\");\n            e.printStackTrace();\n            if (e instanceof SolrServerException) {\n              System.err.println(\"ROOT CAUSE:\");\n              ((SolrServerException) e).getRootCause().printStackTrace();\n            }\n            fails.incrementAndGet();\n          }\n        }\n        \n        try {\n          numAdds++;\n          indexr(\"id\", id, i1, 50, t1,\n              \"to come to the aid of their country.\");\n        } catch (Exception e) {\n          addFailed = true;\n          System.err.println(\"REQUEST FAILED:\");\n          e.printStackTrace();\n          if (e instanceof SolrServerException) {\n            System.err.println(\"ROOT CAUSE:\");\n            ((SolrServerException) e).getRootCause().printStackTrace();\n          }\n          fails.incrementAndGet();\n        }\n        \n        if (!addFailed && doDeletes && random().nextBoolean()) {\n          deletes.add(id);\n        }\n        \n        try {\n          Thread.currentThread().sleep(random().nextInt(100));\n        } catch (InterruptedException e) {\n          Thread.currentThread().interrupt();\n        }\n      }\n      \n      System.err.println(\"added docs:\" + numAdds + \" with \" + fails + \" fails\"\n          + \" deletes:\" + numDeletes);\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      int i = startI;\n      int numDone = 0;\n      int numDeletes = 0;\n      int numAdds = 0;\n      \n      while (true && !stop) {\n        if (numCycles != -1) {\n          if (numDone > numCycles) {\n            break;\n          }\n        }\n        ++numDone;\n        ++i;\n        boolean addFailed = false;\n        \n        if (doDeletes && random().nextBoolean() && deletes.size() > 0) {\n          Integer delete = deletes.remove(0);\n          try {\n            numDeletes++;\n            UpdateRequest req = new UpdateRequest();\n            req.deleteById(Integer.toString(delete));\n            req.setParam(\"CONTROL\", \"TRUE\");\n            req.process(controlClient);\n            \n            cloudClient.deleteById(Integer.toString(delete));\n          } catch (Exception e) {\n            System.err.println(\"REQUEST FAILED:\");\n            e.printStackTrace();\n            if (e instanceof SolrServerException) {\n              System.err.println(\"ROOT CAUSE:\");\n              ((SolrServerException) e).getRootCause().printStackTrace();\n            }\n            fails.incrementAndGet();\n          }\n        }\n        \n        try {\n          numAdds++;\n          indexr(id, i, i1, 50, tlong, 50, t1,\n              \"to come to the aid of their country.\");\n        } catch (Exception e) {\n          addFailed = true;\n          System.err.println(\"REQUEST FAILED:\");\n          e.printStackTrace();\n          if (e instanceof SolrServerException) {\n            System.err.println(\"ROOT CAUSE:\");\n            ((SolrServerException) e).getRootCause().printStackTrace();\n          }\n          fails.incrementAndGet();\n        }\n        \n        if (!addFailed && doDeletes && random().nextBoolean()) {\n          deletes.add(i);\n        }\n        \n        try {\n          Thread.currentThread().sleep(random().nextInt(100));\n        } catch (InterruptedException e) {\n          Thread.currentThread().interrupt();\n        }\n      }\n      \n      System.err.println(\"added docs:\" + numAdds + \" with \" + fails + \" fails\"\n          + \" deletes:\" + numDeletes);\n    }\n\n","bugFix":["140c5f61fa740fb4d64b81f155a7241b7aeae06a","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.StopableIndexingThread#run().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.StopableIndexingThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      int i = 0;\n      int numDone = 0;\n      int numDeletes = 0;\n      int numAdds = 0;\n      \n      while (true && !stop) {\n        if (numCycles != -1) {\n          if (numDone > numCycles) {\n            break;\n          }\n        }\n        ++numDone;\n        String id = this.id + \"-\" + i;\n        ++i;\n        boolean addFailed = false;\n        \n        if (doDeletes && random().nextBoolean() && deletes.size() > 0) {\n          String delete = deletes.remove(0);\n          try {\n            numDeletes++;\n            UpdateRequest req = new UpdateRequest();\n            req.deleteById(delete);\n            req.setParam(\"CONTROL\", \"TRUE\");\n            req.process(controlClient);\n            \n            cloudClient.deleteById(delete);\n          } catch (Exception e) {\n            System.err.println(\"REQUEST FAILED:\");\n            e.printStackTrace();\n            if (e instanceof SolrServerException) {\n              System.err.println(\"ROOT CAUSE:\");\n              ((SolrServerException) e).getRootCause().printStackTrace();\n            }\n            fails.incrementAndGet();\n          }\n        }\n        \n        try {\n          numAdds++;\n          indexr(\"id\", id, i1, 50, t1,\n              \"to come to the aid of their country.\");\n        } catch (Exception e) {\n          addFailed = true;\n          System.err.println(\"REQUEST FAILED:\");\n          e.printStackTrace();\n          if (e instanceof SolrServerException) {\n            System.err.println(\"ROOT CAUSE:\");\n            ((SolrServerException) e).getRootCause().printStackTrace();\n          }\n          fails.incrementAndGet();\n        }\n        \n        if (!addFailed && doDeletes && random().nextBoolean()) {\n          deletes.add(id);\n        }\n        \n        try {\n          Thread.currentThread().sleep(random().nextInt(100));\n        } catch (InterruptedException e) {\n          Thread.currentThread().interrupt();\n        }\n      }\n      \n      System.err.println(\"added docs:\" + numAdds + \" with \" + fails + \" fails\"\n          + \" deletes:\" + numDeletes);\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      int i = startI;\n      int numDone = 0;\n      int numDeletes = 0;\n      int numAdds = 0;\n      \n      while (true && !stop) {\n        if (numCycles != -1) {\n          if (numDone > numCycles) {\n            break;\n          }\n        }\n        ++numDone;\n        ++i;\n        boolean addFailed = false;\n        \n        if (doDeletes && random().nextBoolean() && deletes.size() > 0) {\n          Integer delete = deletes.remove(0);\n          try {\n            numDeletes++;\n            controlClient.deleteById(Integer.toString(delete));\n            cloudClient.deleteById(Integer.toString(delete));\n          } catch (Exception e) {\n            System.err.println(\"REQUEST FAILED:\");\n            e.printStackTrace();\n            if (e instanceof SolrServerException) {\n              System.err.println(\"ROOT CAUSE:\");\n              ((SolrServerException) e).getRootCause().printStackTrace();\n            }\n            fails.incrementAndGet();\n          }\n        }\n        \n        try {\n          numAdds++;\n          indexr(id, i, i1, 50, tlong, 50, t1,\n              \"to come to the aid of their country.\");\n        } catch (Exception e) {\n          addFailed = true;\n          System.err.println(\"REQUEST FAILED:\");\n          e.printStackTrace();\n          if (e instanceof SolrServerException) {\n            System.err.println(\"ROOT CAUSE:\");\n            ((SolrServerException) e).getRootCause().printStackTrace();\n          }\n          fails.incrementAndGet();\n        }\n        \n        if (!addFailed && doDeletes && random().nextBoolean()) {\n          deletes.add(i);\n        }\n        \n        try {\n          Thread.currentThread().sleep(random().nextInt(100));\n        } catch (InterruptedException e) {\n          Thread.currentThread().interrupt();\n        }\n      }\n      \n      System.err.println(\"added docs:\" + numAdds + \" with \" + fails + \" fails\"\n          + \" deletes:\" + numDeletes);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"02c6a0e240c698414e7728a55f07361be84852d8","date":1392675457,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.StopableIndexingThread#run().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.StopableIndexingThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      int i = 0;\n      int numDone = 0;\n      int numDeletes = 0;\n      int numAdds = 0;\n      \n      while (true && !stop) {\n        if (numCycles != -1) {\n          if (numDone > numCycles) {\n            break;\n          }\n        }\n        ++numDone;\n        String id = this.id + \"-\" + i;\n        ++i;\n        boolean addFailed = false;\n        \n        if (doDeletes && random().nextBoolean() && deletes.size() > 0) {\n          String delete = deletes.remove(0);\n          try {\n            numDeletes++;\n            UpdateRequest req = new UpdateRequest();\n            req.deleteById(delete);\n            req.setParam(\"CONTROL\", \"TRUE\");\n            req.process(controlClient);\n            \n            cloudClient.deleteById(delete);\n          } catch (Exception e) {\n            System.err.println(\"REQUEST FAILED:\");\n            e.printStackTrace();\n            if (e instanceof SolrServerException) {\n              System.err.println(\"ROOT CAUSE:\");\n              ((SolrServerException) e).getRootCause().printStackTrace();\n            }\n            deleteFails.add(id);\n          }\n        }\n        \n        try {\n          numAdds++;\n          indexr(\"id\", id, i1, 50, t1,\n              \"to come to the aid of their country.\");\n        } catch (Exception e) {\n          addFailed = true;\n          System.err.println(\"REQUEST FAILED:\");\n          e.printStackTrace();\n          if (e instanceof SolrServerException) {\n            System.err.println(\"ROOT CAUSE:\");\n            ((SolrServerException) e).getRootCause().printStackTrace();\n          }\n          addFails.add(id);\n        }\n        \n        if (!addFailed && doDeletes && random().nextBoolean()) {\n          deletes.add(id);\n        }\n        \n        try {\n          Thread.currentThread().sleep(random().nextInt(100));\n        } catch (InterruptedException e) {\n          Thread.currentThread().interrupt();\n        }\n      }\n      \n      System.err.println(\"added docs:\" + numAdds + \" with \" + (addFails.size() + deleteFails.size()) + \" fails\"\n          + \" deletes:\" + numDeletes);\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      int i = 0;\n      int numDone = 0;\n      int numDeletes = 0;\n      int numAdds = 0;\n      \n      while (true && !stop) {\n        if (numCycles != -1) {\n          if (numDone > numCycles) {\n            break;\n          }\n        }\n        ++numDone;\n        String id = this.id + \"-\" + i;\n        ++i;\n        boolean addFailed = false;\n        \n        if (doDeletes && random().nextBoolean() && deletes.size() > 0) {\n          String delete = deletes.remove(0);\n          try {\n            numDeletes++;\n            UpdateRequest req = new UpdateRequest();\n            req.deleteById(delete);\n            req.setParam(\"CONTROL\", \"TRUE\");\n            req.process(controlClient);\n            \n            cloudClient.deleteById(delete);\n          } catch (Exception e) {\n            System.err.println(\"REQUEST FAILED:\");\n            e.printStackTrace();\n            if (e instanceof SolrServerException) {\n              System.err.println(\"ROOT CAUSE:\");\n              ((SolrServerException) e).getRootCause().printStackTrace();\n            }\n            fails.incrementAndGet();\n          }\n        }\n        \n        try {\n          numAdds++;\n          indexr(\"id\", id, i1, 50, t1,\n              \"to come to the aid of their country.\");\n        } catch (Exception e) {\n          addFailed = true;\n          System.err.println(\"REQUEST FAILED:\");\n          e.printStackTrace();\n          if (e instanceof SolrServerException) {\n            System.err.println(\"ROOT CAUSE:\");\n            ((SolrServerException) e).getRootCause().printStackTrace();\n          }\n          fails.incrementAndGet();\n        }\n        \n        if (!addFailed && doDeletes && random().nextBoolean()) {\n          deletes.add(id);\n        }\n        \n        try {\n          Thread.currentThread().sleep(random().nextInt(100));\n        } catch (InterruptedException e) {\n          Thread.currentThread().interrupt();\n        }\n      }\n      \n      System.err.println(\"added docs:\" + numAdds + \" with \" + fails + \" fails\"\n          + \" deletes:\" + numDeletes);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19389fe47925b510b2811e2b385a75f7ad19dcca","date":1393903127,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.StopableIndexingThread#run().mjava","sourceNew":null,"sourceOld":"    @Override\n    public void run() {\n      int i = 0;\n      int numDone = 0;\n      int numDeletes = 0;\n      int numAdds = 0;\n      \n      while (true && !stop) {\n        if (numCycles != -1) {\n          if (numDone > numCycles) {\n            break;\n          }\n        }\n        ++numDone;\n        String id = this.id + \"-\" + i;\n        ++i;\n        boolean addFailed = false;\n        \n        if (doDeletes && random().nextBoolean() && deletes.size() > 0) {\n          String delete = deletes.remove(0);\n          try {\n            numDeletes++;\n            UpdateRequest req = new UpdateRequest();\n            req.deleteById(delete);\n            req.setParam(\"CONTROL\", \"TRUE\");\n            req.process(controlClient);\n            \n            cloudClient.deleteById(delete);\n          } catch (Exception e) {\n            System.err.println(\"REQUEST FAILED:\");\n            e.printStackTrace();\n            if (e instanceof SolrServerException) {\n              System.err.println(\"ROOT CAUSE:\");\n              ((SolrServerException) e).getRootCause().printStackTrace();\n            }\n            deleteFails.add(id);\n          }\n        }\n        \n        try {\n          numAdds++;\n          indexr(\"id\", id, i1, 50, t1,\n              \"to come to the aid of their country.\");\n        } catch (Exception e) {\n          addFailed = true;\n          System.err.println(\"REQUEST FAILED:\");\n          e.printStackTrace();\n          if (e instanceof SolrServerException) {\n            System.err.println(\"ROOT CAUSE:\");\n            ((SolrServerException) e).getRootCause().printStackTrace();\n          }\n          addFails.add(id);\n        }\n        \n        if (!addFailed && doDeletes && random().nextBoolean()) {\n          deletes.add(id);\n        }\n        \n        try {\n          Thread.currentThread().sleep(random().nextInt(100));\n        } catch (InterruptedException e) {\n          Thread.currentThread().interrupt();\n        }\n      }\n      \n      System.err.println(\"added docs:\" + numAdds + \" with \" + (addFails.size() + deleteFails.size()) + \" fails\"\n          + \" deletes:\" + numDeletes);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96ea64d994d340044e0d57aeb6a5871539d10ca5","date":1394225445,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.StopableIndexingThread#run().mjava","sourceNew":null,"sourceOld":"    @Override\n    public void run() {\n      int i = 0;\n      int numDone = 0;\n      int numDeletes = 0;\n      int numAdds = 0;\n      \n      while (true && !stop) {\n        if (numCycles != -1) {\n          if (numDone > numCycles) {\n            break;\n          }\n        }\n        ++numDone;\n        String id = this.id + \"-\" + i;\n        ++i;\n        boolean addFailed = false;\n        \n        if (doDeletes && random().nextBoolean() && deletes.size() > 0) {\n          String delete = deletes.remove(0);\n          try {\n            numDeletes++;\n            UpdateRequest req = new UpdateRequest();\n            req.deleteById(delete);\n            req.setParam(\"CONTROL\", \"TRUE\");\n            req.process(controlClient);\n            \n            cloudClient.deleteById(delete);\n          } catch (Exception e) {\n            System.err.println(\"REQUEST FAILED:\");\n            e.printStackTrace();\n            if (e instanceof SolrServerException) {\n              System.err.println(\"ROOT CAUSE:\");\n              ((SolrServerException) e).getRootCause().printStackTrace();\n            }\n            deleteFails.add(id);\n          }\n        }\n        \n        try {\n          numAdds++;\n          indexr(\"id\", id, i1, 50, t1,\n              \"to come to the aid of their country.\");\n        } catch (Exception e) {\n          addFailed = true;\n          System.err.println(\"REQUEST FAILED:\");\n          e.printStackTrace();\n          if (e instanceof SolrServerException) {\n            System.err.println(\"ROOT CAUSE:\");\n            ((SolrServerException) e).getRootCause().printStackTrace();\n          }\n          addFails.add(id);\n        }\n        \n        if (!addFailed && doDeletes && random().nextBoolean()) {\n          deletes.add(id);\n        }\n        \n        try {\n          Thread.currentThread().sleep(random().nextInt(100));\n        } catch (InterruptedException e) {\n          Thread.currentThread().interrupt();\n        }\n      }\n      \n      System.err.println(\"added docs:\" + numAdds + \" with \" + (addFails.size() + deleteFails.size()) + \" fails\"\n          + \" deletes:\" + numDeletes);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["2c30e4c1cee08b3b229a77991882594fe7250b66","47fd25cf65c3ded19412634eef4783f4cf6b638e"],"96ea64d994d340044e0d57aeb6a5871539d10ca5":["02c6a0e240c698414e7728a55f07361be84852d8","19389fe47925b510b2811e2b385a75f7ad19dcca"],"02c6a0e240c698414e7728a55f07361be84852d8":["67e5fb3e1a3e5763eb7aabb2ee71d10e8617e699"],"69f8e56ca20869301b79b5b945f28bbd93e9ba25":["709ec1e7204705625cbd074102a6ced459df9c99"],"140c5f61fa740fb4d64b81f155a7241b7aeae06a":["69f8e56ca20869301b79b5b945f28bbd93e9ba25"],"67e5fb3e1a3e5763eb7aabb2ee71d10e8617e699":["140c5f61fa740fb4d64b81f155a7241b7aeae06a"],"19389fe47925b510b2811e2b385a75f7ad19dcca":["02c6a0e240c698414e7728a55f07361be84852d8"],"47fd25cf65c3ded19412634eef4783f4cf6b638e":["2c30e4c1cee08b3b229a77991882594fe7250b66"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c30e4c1cee08b3b229a77991882594fe7250b66"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":["47fd25cf65c3ded19412634eef4783f4cf6b638e","709ec1e7204705625cbd074102a6ced459df9c99"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c30e4c1cee08b3b229a77991882594fe7250b66"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["69f8e56ca20869301b79b5b945f28bbd93e9ba25","67e5fb3e1a3e5763eb7aabb2ee71d10e8617e699"],"709ec1e7204705625cbd074102a6ced459df9c99":["47fd25cf65c3ded19412634eef4783f4cf6b638e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["19389fe47925b510b2811e2b385a75f7ad19dcca"],"2c30e4c1cee08b3b229a77991882594fe7250b66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"96ea64d994d340044e0d57aeb6a5871539d10ca5":[],"02c6a0e240c698414e7728a55f07361be84852d8":["96ea64d994d340044e0d57aeb6a5871539d10ca5","19389fe47925b510b2811e2b385a75f7ad19dcca"],"69f8e56ca20869301b79b5b945f28bbd93e9ba25":["140c5f61fa740fb4d64b81f155a7241b7aeae06a","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"140c5f61fa740fb4d64b81f155a7241b7aeae06a":["67e5fb3e1a3e5763eb7aabb2ee71d10e8617e699"],"67e5fb3e1a3e5763eb7aabb2ee71d10e8617e699":["02c6a0e240c698414e7728a55f07361be84852d8","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"47fd25cf65c3ded19412634eef4783f4cf6b638e":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","95303ff3749680c743b9425f9cf99e6e4065e8a8","709ec1e7204705625cbd074102a6ced459df9c99"],"19389fe47925b510b2811e2b385a75f7ad19dcca":["96ea64d994d340044e0d57aeb6a5871539d10ca5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"95303ff3749680c743b9425f9cf99e6e4065e8a8":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","2c30e4c1cee08b3b229a77991882594fe7250b66"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"709ec1e7204705625cbd074102a6ced459df9c99":["69f8e56ca20869301b79b5b945f28bbd93e9ba25","95303ff3749680c743b9425f9cf99e6e4065e8a8"],"2c30e4c1cee08b3b229a77991882594fe7250b66":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","47fd25cf65c3ded19412634eef4783f4cf6b638e","c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","96ea64d994d340044e0d57aeb6a5871539d10ca5","c7869f64c874ebf7f317d22c00baf2b6857797a6","95303ff3749680c743b9425f9cf99e6e4065e8a8","d6f074e73200c07d54f242d3880a8da5a35ff97b","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}