{"path":"solr/src/java/org/apache/solr/search/TopGroupSortCollector[MultiCollector]#constructComparators(FieldComparator[],int[],SortField[],int).mjava","commits":[{"id":"10d2f7af0975ac83900a2c970a62fe4c8667176b","date":1282358169,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/TopGroupSortCollector[MultiCollector]#constructComparators(FieldComparator[],int[],SortField[],int).mjava","pathOld":"/dev/null","sourceNew":"  void constructComparators(FieldComparator[] comparators, int[] reversed, SortField[] sortFields, int size) throws IOException {\n    for (int i = 0; i < sortFields.length; i++) {\n      SortField sortField = sortFields[i];\n      reversed[i] = sortField.getReverse() ? -1 : 1;\n      comparators[i] = sortField.getComparator(size, i);\n      if (scorer != null) comparators[i].setScorer(scorer);\n      if (reader != null) comparators[i].setNextReader(reader, docBase);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9eed5547b2f58afdc475cc06312622f5bcf220c2","date":1284156494,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/TopGroupSortCollector[MultiCollector]#constructComparators(FieldComparator[],int[],SortField[],int).mjava","pathOld":"solr/src/java/org/apache/solr/search/TopGroupSortCollector[MultiCollector]#constructComparators(FieldComparator[],int[],SortField[],int).mjava","sourceNew":"  void constructComparators(FieldComparator[] comparators, int[] reversed, SortField[] sortFields, int size) throws IOException {\n    for (int i = 0; i < sortFields.length; i++) {\n      SortField sortField = sortFields[i];\n      reversed[i] = sortField.getReverse() ? -1 : 1;\n      comparators[i] = sortField.getComparator(size, i);\n      if (scorer != null) comparators[i].setScorer(scorer);\n      if (reader != null) comparators[i] = comparators[i].setNextReader(reader, docBase);\n    }\n  }\n\n","sourceOld":"  void constructComparators(FieldComparator[] comparators, int[] reversed, SortField[] sortFields, int size) throws IOException {\n    for (int i = 0; i < sortFields.length; i++) {\n      SortField sortField = sortFields[i];\n      reversed[i] = sortField.getReverse() ? -1 : 1;\n      comparators[i] = sortField.getComparator(size, i);\n      if (scorer != null) comparators[i].setScorer(scorer);\n      if (reader != null) comparators[i].setNextReader(reader, docBase);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d9916984e99244c407152f6cfc2c3bf89a30bc8","date":1284760018,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/TopGroupSortCollector[Grouping]#constructComparators(FieldComparator[],int[],SortField[],int).mjava","pathOld":"solr/src/java/org/apache/solr/search/TopGroupSortCollector[MultiCollector]#constructComparators(FieldComparator[],int[],SortField[],int).mjava","sourceNew":"  void constructComparators(FieldComparator[] comparators, int[] reversed, SortField[] sortFields, int size) throws IOException {\n    for (int i = 0; i < sortFields.length; i++) {\n      SortField sortField = sortFields[i];\n      reversed[i] = sortField.getReverse() ? -1 : 1;\n      comparators[i] = sortField.getComparator(size, i);\n      if (scorer != null) comparators[i].setScorer(scorer);\n      if (reader != null) comparators[i] = comparators[i].setNextReader(reader, docBase);\n    }\n  }\n\n","sourceOld":"  void constructComparators(FieldComparator[] comparators, int[] reversed, SortField[] sortFields, int size) throws IOException {\n    for (int i = 0; i < sortFields.length; i++) {\n      SortField sortField = sortFields[i];\n      reversed[i] = sortField.getReverse() ? -1 : 1;\n      comparators[i] = sortField.getComparator(size, i);\n      if (scorer != null) comparators[i].setScorer(scorer);\n      if (reader != null) comparators[i] = comparators[i].setNextReader(reader, docBase);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9d9916984e99244c407152f6cfc2c3bf89a30bc8":["9eed5547b2f58afdc475cc06312622f5bcf220c2"],"10d2f7af0975ac83900a2c970a62fe4c8667176b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9eed5547b2f58afdc475cc06312622f5bcf220c2":["10d2f7af0975ac83900a2c970a62fe4c8667176b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9d9916984e99244c407152f6cfc2c3bf89a30bc8"]},"commit2Childs":{"9d9916984e99244c407152f6cfc2c3bf89a30bc8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"10d2f7af0975ac83900a2c970a62fe4c8667176b":["9eed5547b2f58afdc475cc06312622f5bcf220c2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["10d2f7af0975ac83900a2c970a62fe4c8667176b"],"9eed5547b2f58afdc475cc06312622f5bcf220c2":["9d9916984e99244c407152f6cfc2c3bf89a30bc8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}