{"path":"modules/suggest/src/java/org/apache/lucene/search/spell/LuceneDictionary.LuceneIterator#next().mjava","commits":[{"id":"e230a61047bc041516c811baa08a7174d6f8322a","date":1306175633,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/spell/LuceneDictionary.LuceneIterator#next().mjava","pathOld":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/LuceneDictionary.LuceneIterator#next().mjava","sourceNew":"    public String next() {\n      if (pendingTerm == null) {\n        return null;\n      }\n\n      String result = pendingTerm.utf8ToString();\n\n      try {\n        pendingTerm = termsEnum.next();\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n\n      return result;\n    }\n\n","sourceOld":"    public String next() {\n      if (pendingTerm == null) {\n        return null;\n      }\n\n      String result = pendingTerm.utf8ToString();\n\n      try {\n        pendingTerm = termsEnum.next();\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a1b3a24d5d9b47345473ff564f5cc127a7b526b4","date":1306277076,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/spell/LuceneDictionary.LuceneIterator#next().mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/spell/LuceneDictionary.LuceneIterator#next().mjava","sourceNew":"    public String next() {\n      if (pendingTerm == null) {\n        return null;\n      }\n\n      final String result = pendingTerm.utf8ToChars(spare).toString();\n\n      try {\n        pendingTerm = termsEnum.next();\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n\n      return result;\n    }\n\n","sourceOld":"    public String next() {\n      if (pendingTerm == null) {\n        return null;\n      }\n\n      String result = pendingTerm.utf8ToString();\n\n      try {\n        pendingTerm = termsEnum.next();\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/spell/LuceneDictionary.LuceneIterator#next().mjava","pathOld":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/LuceneDictionary.LuceneIterator#next().mjava","sourceNew":"    public String next() {\n      if (pendingTerm == null) {\n        return null;\n      }\n\n      final String result = pendingTerm.utf8ToChars(spare).toString();\n\n      try {\n        pendingTerm = termsEnum.next();\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n\n      return result;\n    }\n\n","sourceOld":"    public String next() {\n      if (pendingTerm == null) {\n        return null;\n      }\n\n      String result = pendingTerm.utf8ToString();\n\n      try {\n        pendingTerm = termsEnum.next();\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/spell/LuceneDictionary.LuceneIterator#next().mjava","pathOld":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/LuceneDictionary.LuceneIterator#next().mjava","sourceNew":"    public String next() {\n      if (pendingTerm == null) {\n        return null;\n      }\n\n      final String result = pendingTerm.utf8ToChars(spare).toString();\n\n      try {\n        pendingTerm = termsEnum.next();\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n\n      return result;\n    }\n\n","sourceOld":"    public String next() {\n      if (pendingTerm == null) {\n        return null;\n      }\n\n      String result = pendingTerm.utf8ToString();\n\n      try {\n        pendingTerm = termsEnum.next();\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da6c07e76d701edbcc45c3e83ad8464a5e44a4c0","date":1322229341,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/spell/LuceneDictionary.LuceneIterator#next().mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/spell/LuceneDictionary.LuceneIterator#next().mjava","sourceNew":"    public String next() {\n      if (pendingTerm == null) {\n        return null;\n      }\n\n      UnicodeUtil.UTF8toUTF16(pendingTerm, spare);\n\n      try {\n        pendingTerm = termsEnum.next();\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n\n      return spare.toString();\n    }\n\n","sourceOld":"    public String next() {\n      if (pendingTerm == null) {\n        return null;\n      }\n\n      final String result = pendingTerm.utf8ToChars(spare).toString();\n\n      try {\n        pendingTerm = termsEnum.next();\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d334a3e8e6b94298d8cf2802a403a096c06f0b92","date":1329766559,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"modules/suggest/src/java/org/apache/lucene/search/spell/LuceneDictionary.LuceneIterator#next().mjava","sourceNew":null,"sourceOld":"    public String next() {\n      if (pendingTerm == null) {\n        return null;\n      }\n\n      UnicodeUtil.UTF8toUTF16(pendingTerm, spare);\n\n      try {\n        pendingTerm = termsEnum.next();\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n\n      return spare.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":4,"author":"Ryan McKinley","isMerge":true,"pathNew":"/dev/null","pathOld":"modules/suggest/src/java/org/apache/lucene/search/spell/LuceneDictionary.LuceneIterator#next().mjava","sourceNew":null,"sourceOld":"    public String next() {\n      if (pendingTerm == null) {\n        return null;\n      }\n\n      UnicodeUtil.UTF8toUTF16(pendingTerm, spare);\n\n      try {\n        pendingTerm = termsEnum.next();\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n\n      return spare.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"da6c07e76d701edbcc45c3e83ad8464a5e44a4c0":["a1b3a24d5d9b47345473ff564f5cc127a7b526b4"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["da6c07e76d701edbcc45c3e83ad8464a5e44a4c0","d334a3e8e6b94298d8cf2802a403a096c06f0b92"],"e230a61047bc041516c811baa08a7174d6f8322a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a1b3a24d5d9b47345473ff564f5cc127a7b526b4"],"d334a3e8e6b94298d8cf2802a403a096c06f0b92":["da6c07e76d701edbcc45c3e83ad8464a5e44a4c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a1b3a24d5d9b47345473ff564f5cc127a7b526b4":["e230a61047bc041516c811baa08a7174d6f8322a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d334a3e8e6b94298d8cf2802a403a096c06f0b92"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a1b3a24d5d9b47345473ff564f5cc127a7b526b4"]},"commit2Childs":{"da6c07e76d701edbcc45c3e83ad8464a5e44a4c0":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","d334a3e8e6b94298d8cf2802a403a096c06f0b92"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"e230a61047bc041516c811baa08a7174d6f8322a":["a1b3a24d5d9b47345473ff564f5cc127a7b526b4"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"d334a3e8e6b94298d8cf2802a403a096c06f0b92":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e230a61047bc041516c811baa08a7174d6f8322a","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"a1b3a24d5d9b47345473ff564f5cc127a7b526b4":["da6c07e76d701edbcc45c3e83ad8464a5e44a4c0","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}