{"path":"lucene/core/src/java/org/apache/lucene/search/QueryCachingPolicy#shouldCache(Query,LeafReaderContext).mjava","commits":[{"id":"60596f28be69b10c37a56a303c2dbea07b2ca4ba","date":1425060541,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/QueryCachingPolicy#shouldCache(Query,LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FilterCachingPolicy#shouldCache(Filter,LeafReaderContext,DocIdSet).mjava","sourceNew":"  /** Whether the given {@link DocIdSet} should be cached on a given segment.\n   *  This method will be called on each leaf context to know if the filter\n   *  should be cached on this particular leaf. The filter cache will first\n   *  attempt to load a {@link DocIdSet} from the cache. If it is not cached\n   *  yet and this method returns <tt>true</tt> then a cache entry will be\n   *  generated. Otherwise an uncached set will be returned. */\n  boolean shouldCache(Query query, LeafReaderContext context) throws IOException;\n\n","sourceOld":"  /** Whether the given {@link DocIdSet} should be cached on a given segment.\n   *  This method will be called on each leaf context to know if the filter\n   *  should be cached on this particular leaf. The filter cache will first\n   *  attempt to load a {@link DocIdSet} from the cache. If it is not cached\n   *  yet and this method returns <tt>true</tt> then a cache entry will be\n   *  generated. Otherwise an uncached set will be returned. */\n  boolean shouldCache(Filter filter, LeafReaderContext context, DocIdSet set) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/QueryCachingPolicy#shouldCache(Query,LeafReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  /** Whether the given {@link DocIdSet} should be cached on a given segment.\n   *  This method will be called on each leaf context to know if the filter\n   *  should be cached on this particular leaf. The filter cache will first\n   *  attempt to load a {@link DocIdSet} from the cache. If it is not cached\n   *  yet and this method returns <tt>true</tt> then a cache entry will be\n   *  generated. Otherwise an uncached set will be returned. */\n  boolean shouldCache(Query query, LeafReaderContext context) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"25f40dbcd244dc82447a23719db34376cdcc9cfe","date":1461323366,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/QueryCachingPolicy#shouldCache(Query,LeafReaderContext).mjava","sourceNew":null,"sourceOld":"  /** Whether the given {@link DocIdSet} should be cached on a given segment.\n   *  This method will be called on each leaf context to know if the filter\n   *  should be cached on this particular leaf. The filter cache will first\n   *  attempt to load a {@link DocIdSet} from the cache. If it is not cached\n   *  yet and this method returns <tt>true</tt> then a cache entry will be\n   *  generated. Otherwise an uncached set will be returned. */\n  boolean shouldCache(Query query, LeafReaderContext context) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7f901826e47f75f810d7aae24b0455d21ea1fe2","date":1461678892,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/QueryCachingPolicy#shouldCache(Query,LeafReaderContext).mjava","sourceNew":null,"sourceOld":"  /** Whether the given {@link DocIdSet} should be cached on a given segment.\n   *  This method will be called on each leaf context to know if the filter\n   *  should be cached on this particular leaf. The filter cache will first\n   *  attempt to load a {@link DocIdSet} from the cache. If it is not cached\n   *  yet and this method returns <tt>true</tt> then a cache entry will be\n   *  generated. Otherwise an uncached set will be returned. */\n  boolean shouldCache(Query query, LeafReaderContext context) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["60596f28be69b10c37a56a303c2dbea07b2ca4ba","25f40dbcd244dc82447a23719db34376cdcc9cfe"],"25f40dbcd244dc82447a23719db34376cdcc9cfe":["60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","f7f901826e47f75f810d7aae24b0455d21ea1fe2","25f40dbcd244dc82447a23719db34376cdcc9cfe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"25f40dbcd244dc82447a23719db34376cdcc9cfe":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}