{"path":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#getNameInRecord(String,MethodFrameWrapper,Node).mjava","commits":[{"id":"310045472df7463a74daabf6252eafc9d93960e0","date":1413271286,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#getNameInRecord(String,MethodFrameWrapper,Node).mjava","pathOld":"/dev/null","sourceNew":"    private String getNameInRecord(String name,MethodFrameWrapper frameWrapper, Node n) {\n      if(frameWrapper == null || !n.useFqn) return name;\n      StringBuilder sb = new StringBuilder();\n      frameWrapper.prependName(sb);\n      return sb.append(DELIM).append(name).toString();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55980207f1977bd1463465de1659b821347e2fa8","date":1413336386,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#getNameInRecord(String,MethodFrameWrapper,Node).mjava","pathOld":"/dev/null","sourceNew":"    private String getNameInRecord(String name,MethodFrameWrapper frameWrapper, Node n) {\n      if(frameWrapper == null || !n.useFqn) return name;\n      StringBuilder sb = new StringBuilder();\n      frameWrapper.prependName(sb);\n      return sb.append(DELIM).append(name).toString();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2330174b38007b9942205a2679db9ddffe35af89","date":1423653924,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#getNameInRecord(String,MethodFrameWrapper,Node).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#getNameInRecord(String,MethodFrameWrapper,Node).mjava","sourceNew":"    private String getNameInRecord(String name, MethodFrameWrapper frameWrapper, Node n) {\n      if (frameWrapper == null || !n.useFqn) return name;\n      StringBuilder sb = new StringBuilder();\n      frameWrapper.prependName(sb);\n      return sb.append(DELIM).append(name).toString();\n    }\n\n","sourceOld":"    private String getNameInRecord(String name,MethodFrameWrapper frameWrapper, Node n) {\n      if(frameWrapper == null || !n.useFqn) return name;\n      StringBuilder sb = new StringBuilder();\n      frameWrapper.prependName(sb);\n      return sb.append(DELIM).append(name).toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b4e08e2b6886d78c91752d82ea2b436c4324cd55","date":1464786234,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#getNameInRecord(String,MethodFrameWrapper,Node).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#getNameInRecord(String,MethodFrameWrapper,Node).mjava","sourceNew":"    /**\n     * Construct the name as it would appear in the final record\n     */\n    private String getNameInRecord(String name, MethodFrameWrapper frameWrapper, Node n) {\n      if (frameWrapper == null || !n.useFqn || frameWrapper.node.isChildRecord) return name;\n      StringBuilder sb = new StringBuilder();\n      frameWrapper.addName(sb);\n      return sb.append(DELIM).append(name).toString();\n    }\n\n","sourceOld":"    private String getNameInRecord(String name, MethodFrameWrapper frameWrapper, Node n) {\n      if (frameWrapper == null || !n.useFqn) return name;\n      StringBuilder sb = new StringBuilder();\n      frameWrapper.prependName(sb);\n      return sb.append(DELIM).append(name).toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"611f7ea4eee5babadf4129bfa5fbae964738cd7c","date":1464787051,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#getNameInRecord(String,MethodFrameWrapper,Node).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#getNameInRecord(String,MethodFrameWrapper,Node).mjava","sourceNew":"    /**\n     * Construct the name as it would appear in the final record\n     */\n    private String getNameInRecord(String name, MethodFrameWrapper frameWrapper, Node n) {\n      if (frameWrapper == null || !n.useFqn || frameWrapper.node.isChildRecord) return name;\n      StringBuilder sb = new StringBuilder();\n      frameWrapper.addName(sb);\n      return sb.append(DELIM).append(name).toString();\n    }\n\n","sourceOld":"    private String getNameInRecord(String name, MethodFrameWrapper frameWrapper, Node n) {\n      if (frameWrapper == null || !n.useFqn) return name;\n      StringBuilder sb = new StringBuilder();\n      frameWrapper.prependName(sb);\n      return sb.append(DELIM).append(name).toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b8ee93140fd0efef7e101786e3ed5160a700b5f","date":1464820111,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#getNameInRecord(String,MethodFrameWrapper,Node).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#getNameInRecord(String,MethodFrameWrapper,Node).mjava","sourceNew":"    /**\n     * Construct the name as it would appear in the final record\n     */\n    private String getNameInRecord(String name, MethodFrameWrapper frameWrapper, Node n) {\n      if (frameWrapper == null || !n.useFqn || frameWrapper.node.isChildRecord) return name;\n      StringBuilder sb = new StringBuilder();\n      frameWrapper.addName(sb);\n      return sb.append(DELIM).append(name).toString();\n    }\n\n","sourceOld":"    private String getNameInRecord(String name, MethodFrameWrapper frameWrapper, Node n) {\n      if (frameWrapper == null || !n.useFqn) return name;\n      StringBuilder sb = new StringBuilder();\n      frameWrapper.prependName(sb);\n      return sb.append(DELIM).append(name).toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77","date":1464821470,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#getNameInRecord(String,MethodFrameWrapper,Node).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#getNameInRecord(String,MethodFrameWrapper,Node).mjava","sourceNew":"    /**\n     * Construct the name as it would appear in the final record\n     */\n    private String getNameInRecord(String name, MethodFrameWrapper frameWrapper, Node n) {\n      if (frameWrapper == null || !n.useFqn || frameWrapper.node.isChildRecord) return name;\n      StringBuilder sb = new StringBuilder();\n      frameWrapper.addName(sb);\n      return sb.append(DELIM).append(name).toString();\n    }\n\n","sourceOld":"    private String getNameInRecord(String name, MethodFrameWrapper frameWrapper, Node n) {\n      if (frameWrapper == null || !n.useFqn) return name;\n      StringBuilder sb = new StringBuilder();\n      frameWrapper.prependName(sb);\n      return sb.append(DELIM).append(name).toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#getNameInRecord(String,MethodFrameWrapper,Node).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#getNameInRecord(String,MethodFrameWrapper,Node).mjava","sourceNew":"    /**\n     * Construct the name as it would appear in the final record\n     */\n    private String getNameInRecord(String name, MethodFrameWrapper frameWrapper, Node n) {\n      if (frameWrapper == null || !n.useFqn || frameWrapper.node.isChildRecord) return name;\n      StringBuilder sb = new StringBuilder();\n      frameWrapper.addName(sb);\n      return sb.append(DELIM).append(name).toString();\n    }\n\n","sourceOld":"    private String getNameInRecord(String name, MethodFrameWrapper frameWrapper, Node n) {\n      if (frameWrapper == null || !n.useFqn) return name;\n      StringBuilder sb = new StringBuilder();\n      frameWrapper.prependName(sb);\n      return sb.append(DELIM).append(name).toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"310045472df7463a74daabf6252eafc9d93960e0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b4e08e2b6886d78c91752d82ea2b436c4324cd55":["2330174b38007b9942205a2679db9ddffe35af89"],"55980207f1977bd1463465de1659b821347e2fa8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","310045472df7463a74daabf6252eafc9d93960e0"],"2330174b38007b9942205a2679db9ddffe35af89":["310045472df7463a74daabf6252eafc9d93960e0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"611f7ea4eee5babadf4129bfa5fbae964738cd7c":["2330174b38007b9942205a2679db9ddffe35af89","b4e08e2b6886d78c91752d82ea2b436c4324cd55"],"5b8ee93140fd0efef7e101786e3ed5160a700b5f":["2330174b38007b9942205a2679db9ddffe35af89","611f7ea4eee5babadf4129bfa5fbae964738cd7c"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["2330174b38007b9942205a2679db9ddffe35af89","b4e08e2b6886d78c91752d82ea2b436c4324cd55"],"b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77":["2330174b38007b9942205a2679db9ddffe35af89","5b8ee93140fd0efef7e101786e3ed5160a700b5f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b4e08e2b6886d78c91752d82ea2b436c4324cd55"]},"commit2Childs":{"310045472df7463a74daabf6252eafc9d93960e0":["55980207f1977bd1463465de1659b821347e2fa8","2330174b38007b9942205a2679db9ddffe35af89"],"b4e08e2b6886d78c91752d82ea2b436c4324cd55":["611f7ea4eee5babadf4129bfa5fbae964738cd7c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"55980207f1977bd1463465de1659b821347e2fa8":[],"2330174b38007b9942205a2679db9ddffe35af89":["b4e08e2b6886d78c91752d82ea2b436c4324cd55","611f7ea4eee5babadf4129bfa5fbae964738cd7c","5b8ee93140fd0efef7e101786e3ed5160a700b5f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["310045472df7463a74daabf6252eafc9d93960e0","55980207f1977bd1463465de1659b821347e2fa8"],"611f7ea4eee5babadf4129bfa5fbae964738cd7c":["5b8ee93140fd0efef7e101786e3ed5160a700b5f"],"5b8ee93140fd0efef7e101786e3ed5160a700b5f":["b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["55980207f1977bd1463465de1659b821347e2fa8","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}