{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#ConcurrentUpdateSolrServer(String,int,int).mjava","commits":[{"id":"7321b77a7bc3edfebd637ef273e9dfaa9969eba6","date":1333023097,"type":0,"author":"Sami Siren","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#ConcurrentUpdateSolrServer(String,int,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Uses an internal ThreadSafeClientConnManager to manage http\n   * connections.\n   * \n   * @param solrServerUrl\n   *          The Solr server URL\n   * @param queueSize\n   *          The buffer size before the documents are sent to the server\n   * @param threadCount\n   *          The number of background threads used to empty the queue\n   * @throws MalformedURLException\n   */\n  public ConcurrentUpdateSolrServer(String solrServerUrl, int queueSize,\n      int threadCount) throws MalformedURLException {\n    this(solrServerUrl, null, queueSize, threadCount);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#ConcurrentUpdateSolrServer(String,int,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#ConcurrentUpdateSolrServer(String,int,int).mjava","sourceNew":"  /**\n   * Uses an internal ThreadSafeClientConnManager to manage http\n   * connections.\n   * \n   * @param solrServerUrl\n   *          The Solr server URL\n   * @param queueSize\n   *          The buffer size before the documents are sent to the server\n   * @param threadCount\n   *          The number of background threads used to empty the queue\n   */\n  public ConcurrentUpdateSolrServer(String solrServerUrl, int queueSize,\n      int threadCount) {\n    this(solrServerUrl, null, queueSize, threadCount);\n  }\n\n","sourceOld":"  /**\n   * Uses an internal ThreadSafeClientConnManager to manage http\n   * connections.\n   * \n   * @param solrServerUrl\n   *          The Solr server URL\n   * @param queueSize\n   *          The buffer size before the documents are sent to the server\n   * @param threadCount\n   *          The number of background threads used to empty the queue\n   * @throws MalformedURLException\n   */\n  public ConcurrentUpdateSolrServer(String solrServerUrl, int queueSize,\n      int threadCount) throws MalformedURLException {\n    this(solrServerUrl, null, queueSize, threadCount);\n  }\n\n","bugFix":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#ConcurrentUpdateSolrServer(String,int,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#ConcurrentUpdateSolrServer(String,int,int).mjava","sourceNew":"  /**\n   * Uses an internal ThreadSafeClientConnManager to manage http\n   * connections.\n   * \n   * @param solrServerUrl\n   *          The Solr server URL\n   * @param queueSize\n   *          The buffer size before the documents are sent to the server\n   * @param threadCount\n   *          The number of background threads used to empty the queue\n   */\n  public ConcurrentUpdateSolrServer(String solrServerUrl, int queueSize,\n      int threadCount) {\n    this(solrServerUrl, null, queueSize, threadCount);\n  }\n\n","sourceOld":"  /**\n   * Uses an internal ThreadSafeClientConnManager to manage http\n   * connections.\n   * \n   * @param solrServerUrl\n   *          The Solr server URL\n   * @param queueSize\n   *          The buffer size before the documents are sent to the server\n   * @param threadCount\n   *          The number of background threads used to empty the queue\n   * @throws MalformedURLException\n   */\n  public ConcurrentUpdateSolrServer(String solrServerUrl, int queueSize,\n      int threadCount) throws MalformedURLException {\n    this(solrServerUrl, null, queueSize, threadCount);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"10034129a9d9aaaeba391901f4be8f100b21eb7c","date":1360791957,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#ConcurrentUpdateSolrServer(String,int,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#ConcurrentUpdateSolrServer(String,int,int).mjava","sourceNew":"  /**\n   * Uses an internaly managed HttpClient instance.\n   * \n   * @param solrServerUrl\n   *          The Solr server URL\n   * @param queueSize\n   *          The buffer size before the documents are sent to the server\n   * @param threadCount\n   *          The number of background threads used to empty the queue\n   */\n  public ConcurrentUpdateSolrServer(String solrServerUrl, int queueSize,\n      int threadCount) {\n    this(solrServerUrl, null, queueSize, threadCount);\n  }\n\n","sourceOld":"  /**\n   * Uses an internal ThreadSafeClientConnManager to manage http\n   * connections.\n   * \n   * @param solrServerUrl\n   *          The Solr server URL\n   * @param queueSize\n   *          The buffer size before the documents are sent to the server\n   * @param threadCount\n   *          The number of background threads used to empty the queue\n   */\n  public ConcurrentUpdateSolrServer(String solrServerUrl, int queueSize,\n      int threadCount) {\n    this(solrServerUrl, null, queueSize, threadCount);\n  }\n\n","bugFix":null,"bugIntro":["91e069c492cf4895697ef7b81df0ffb9a8bd4b48"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3b41f996b22bd5518650f897d050088ff808ec03","date":1360969107,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#ConcurrentUpdateSolrServer(String,int,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#ConcurrentUpdateSolrServer(String,int,int).mjava","sourceNew":"  /**\n   * Uses an internaly managed HttpClient instance.\n   * \n   * @param solrServerUrl\n   *          The Solr server URL\n   * @param queueSize\n   *          The buffer size before the documents are sent to the server\n   * @param threadCount\n   *          The number of background threads used to empty the queue\n   */\n  public ConcurrentUpdateSolrServer(String solrServerUrl, int queueSize,\n      int threadCount) {\n    this(solrServerUrl, null, queueSize, threadCount);\n  }\n\n","sourceOld":"  /**\n   * Uses an internal ThreadSafeClientConnManager to manage http\n   * connections.\n   * \n   * @param solrServerUrl\n   *          The Solr server URL\n   * @param queueSize\n   *          The buffer size before the documents are sent to the server\n   * @param threadCount\n   *          The number of background threads used to empty the queue\n   */\n  public ConcurrentUpdateSolrServer(String solrServerUrl, int queueSize,\n      int threadCount) {\n    this(solrServerUrl, null, queueSize, threadCount);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91e069c492cf4895697ef7b81df0ffb9a8bd4b48","date":1382134253,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#ConcurrentUpdateSolrServer(String,int,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#ConcurrentUpdateSolrServer(String,int,int).mjava","sourceNew":"  /**\n   * Uses an internally managed HttpClient instance.\n   * \n   * @param solrServerUrl\n   *          The Solr server URL\n   * @param queueSize\n   *          The buffer size before the documents are sent to the server\n   * @param threadCount\n   *          The number of background threads used to empty the queue\n   */\n  public ConcurrentUpdateSolrServer(String solrServerUrl, int queueSize,\n      int threadCount) {\n    this(solrServerUrl, null, queueSize, threadCount);\n    shutdownExecutor = true;\n  }\n\n","sourceOld":"  /**\n   * Uses an internaly managed HttpClient instance.\n   * \n   * @param solrServerUrl\n   *          The Solr server URL\n   * @param queueSize\n   *          The buffer size before the documents are sent to the server\n   * @param threadCount\n   *          The number of background threads used to empty the queue\n   */\n  public ConcurrentUpdateSolrServer(String solrServerUrl, int queueSize,\n      int threadCount) {\n    this(solrServerUrl, null, queueSize, threadCount);\n  }\n\n","bugFix":["10034129a9d9aaaeba391901f4be8f100b21eb7c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#ConcurrentUpdateSolrServer(String,int,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#ConcurrentUpdateSolrServer(String,int,int).mjava","sourceNew":"  public ConcurrentUpdateSolrServer(String solrServerUrl, int queueSize, int threadCount) {\n    super(solrServerUrl, queueSize, threadCount);\n  }\n\n","sourceOld":"  /**\n   * Uses an internally managed HttpClient instance.\n   * \n   * @param solrServerUrl\n   *          The Solr server URL\n   * @param queueSize\n   *          The buffer size before the documents are sent to the server\n   * @param threadCount\n   *          The number of background threads used to empty the queue\n   */\n  public ConcurrentUpdateSolrServer(String solrServerUrl, int queueSize,\n      int threadCount) {\n    this(solrServerUrl, null, queueSize, threadCount);\n    shutdownExecutor = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0080a8fdc299a09124dea014ed206981c1b8c54","date":1420037360,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#ConcurrentUpdateSolrServer(String,int,int).mjava","sourceNew":null,"sourceOld":"  public ConcurrentUpdateSolrServer(String solrServerUrl, int queueSize, int threadCount) {\n    super(solrServerUrl, queueSize, threadCount);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"10034129a9d9aaaeba391901f4be8f100b21eb7c":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"3b41f996b22bd5518650f897d050088ff808ec03":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","10034129a9d9aaaeba391901f4be8f100b21eb7c"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"91e069c492cf4895697ef7b81df0ffb9a8bd4b48":["10034129a9d9aaaeba391901f4be8f100b21eb7c"],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bafca15d8e408346a67f4282ad1143b88023893b":["91e069c492cf4895697ef7b81df0ffb9a8bd4b48"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c0080a8fdc299a09124dea014ed206981c1b8c54"],"c0080a8fdc299a09124dea014ed206981c1b8c54":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"10034129a9d9aaaeba391901f4be8f100b21eb7c":["3b41f996b22bd5518650f897d050088ff808ec03","91e069c492cf4895697ef7b81df0ffb9a8bd4b48"],"3b41f996b22bd5518650f897d050088ff808ec03":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"91e069c492cf4895697ef7b81df0ffb9a8bd4b48":["bafca15d8e408346a67f4282ad1143b88023893b"],"bafca15d8e408346a67f4282ad1143b88023893b":["c0080a8fdc299a09124dea014ed206981c1b8c54"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["10034129a9d9aaaeba391901f4be8f100b21eb7c","3b41f996b22bd5518650f897d050088ff808ec03","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"c0080a8fdc299a09124dea014ed206981c1b8c54":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["3b41f996b22bd5518650f897d050088ff808ec03","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}