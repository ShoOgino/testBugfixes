{"path":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#_testExpand(String,String,String).mjava","commits":[{"id":"8ced52befdc8d88d90766aadbaac496f3fd0e4ee","date":1421070034,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#_testExpand(String,String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void _testExpand(String group, String floatAppend, String hint) throws Exception {\n\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_ti\", \"5\", \"test_tl\", \"10\", \"test_tf\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", group, \"1\"+floatAppend, \"test_ti\", \"50\", \"test_tl\", \"100\", \"test_tf\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc1));\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_ti\", \"5000\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_ti\", \"500\", \"test_tl\", \"1000\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", group, \"2\"+floatAppend, \"test_ti\", \"4\", \"test_tl\", \"10\", \"test_tf\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_ti\", \"10\", \"test_tl\", \"100\", \"test_tf\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n    String[] doc6 = {\"id\",\"7\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_ti\", \"1\", \"test_tl\", \"100000\", \"test_tf\", \"2000\", \"type_s\", \"child\"};\n    assertU(adoc(doc6));\n    assertU(commit());\n    String[] doc7 = {\"id\",\"8\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_ti\", \"2\", \"test_tl\", \"100000\", \"test_tf\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc7));\n\n    assertU(commit());\n\n    //First basic test case.\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n\n    //Basic test case page 2\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"rows\", \"1\");\n    params.add(\"start\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=1]\",\n        \"/response/result/doc[1]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n\n    //Test expand.sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc, sub(1,1) asc\");//the \"sub()\" just testing function queries\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='5.0']\"\n    );\n\n    //Test with nullPolicy, ExpandComponent should ignore docs with null values in the collapse fields.\n    //Main result set should include the doc with null value in the collapse field.\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=3]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='3.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[3]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='5.0']\"\n    );\n\n\n    //Test overide expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_tl desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n\n    //Test overide expand.fq\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_tl desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n    //Test overide expand.fq and expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.fq\", \"*:*\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_tl desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n    //Test expand.rows\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=1]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\"\n    );\n\n\n    //Test no group results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_ti:5\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test zero results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_ti:5532535\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=0]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test key-only fl\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"fl\", \"id\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["cca23c5b56c19b85dda9a06be0959a0d9bdacc2e","6b4ef0126a26f5c29fbbdf5438ec0ba49294115b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cca23c5b56c19b85dda9a06be0959a0d9bdacc2e","date":1421246103,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#_testExpand(String,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#_testExpand(String,String,String).mjava","sourceNew":"  private void _testExpand(String group, String floatAppend, String hint) throws Exception {\n\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_ti\", \"5\",\n\n\n\n\n\n        \"test_tl\", \"10\", \"test_tf\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", group, \"1\"+floatAppend, \"test_ti\", \"50\", \"test_tl\", \"100\", \"test_tf\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc1));\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_ti\", \"5000\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_ti\", \"500\", \"test_tl\", \"1000\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", group, \"2\"+floatAppend, \"test_ti\", \"4\", \"test_tl\", \"10\", \"test_tf\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_ti\", \"10\", \"test_tl\", \"100\", \"test_tf\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n    String[] doc6 = {\"id\",\"7\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_ti\", \"1\", \"test_tl\", \"100000\", \"test_tf\", \"2000\", \"type_s\", \"child\"};\n    assertU(adoc(doc6));\n    assertU(commit());\n    String[] doc7 = {\"id\",\"8\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_ti\", \"2\", \"test_tl\", \"100000\", \"test_tf\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc7));\n\n    assertU(commit());\n\n    //First basic test case.\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n\n    //Basic test case page 2\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"rows\", \"1\");\n    params.add(\"start\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=1]\",\n        \"/response/result/doc[1]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n\n    //Test expand.sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc, sub(1,1) asc\");//the \"sub()\" just testing function queries\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='5.0']\"\n    );\n\n    //Test with nullPolicy, ExpandComponent should ignore docs with null values in the collapse fields.\n    //Main result set should include the doc with null value in the collapse field.\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=3]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='3.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[3]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='5.0']\"\n    );\n\n\n    //Test overide expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_tl desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n\n    //Test overide expand.fq\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_tl desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n    //Test overide expand.fq and expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.fq\", \"*:*\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_tl desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n    //Test expand.rows\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=1]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\"\n    );\n\n\n    //Test no group results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_ti:5\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test zero results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_ti:5532535\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=0]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test key-only fl\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"fl\", \"id\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n  }\n\n","sourceOld":"  private void _testExpand(String group, String floatAppend, String hint) throws Exception {\n\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_ti\", \"5\", \"test_tl\", \"10\", \"test_tf\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", group, \"1\"+floatAppend, \"test_ti\", \"50\", \"test_tl\", \"100\", \"test_tf\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc1));\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_ti\", \"5000\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_ti\", \"500\", \"test_tl\", \"1000\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", group, \"2\"+floatAppend, \"test_ti\", \"4\", \"test_tl\", \"10\", \"test_tf\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_ti\", \"10\", \"test_tl\", \"100\", \"test_tf\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n    String[] doc6 = {\"id\",\"7\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_ti\", \"1\", \"test_tl\", \"100000\", \"test_tf\", \"2000\", \"type_s\", \"child\"};\n    assertU(adoc(doc6));\n    assertU(commit());\n    String[] doc7 = {\"id\",\"8\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_ti\", \"2\", \"test_tl\", \"100000\", \"test_tf\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc7));\n\n    assertU(commit());\n\n    //First basic test case.\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n\n    //Basic test case page 2\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"rows\", \"1\");\n    params.add(\"start\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=1]\",\n        \"/response/result/doc[1]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n\n    //Test expand.sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc, sub(1,1) asc\");//the \"sub()\" just testing function queries\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='5.0']\"\n    );\n\n    //Test with nullPolicy, ExpandComponent should ignore docs with null values in the collapse fields.\n    //Main result set should include the doc with null value in the collapse field.\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=3]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='3.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[3]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='5.0']\"\n    );\n\n\n    //Test overide expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_tl desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n\n    //Test overide expand.fq\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_tl desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n    //Test overide expand.fq and expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.fq\", \"*:*\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_tl desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n    //Test expand.rows\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=1]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\"\n    );\n\n\n    //Test no group results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_ti:5\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test zero results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_ti:5532535\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=0]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test key-only fl\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"fl\", \"id\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n  }\n\n","bugFix":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0a9c4a5022409b649909f75244642a57739b3598","date":1422812185,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#_testExpand(String,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#_testExpand(String,String,String).mjava","sourceNew":"  private void _testExpand(String group, String floatAppend, String hint) throws Exception {\n\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_ti\", \"5\", \"test_tl\", \"10\", \"test_tf\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", group, \"1\"+floatAppend, \"test_ti\", \"50\", \"test_tl\", \"100\", \"test_tf\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc1));\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_ti\", \"5000\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_ti\", \"500\", \"test_tl\", \"1000\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", group, \"2\"+floatAppend, \"test_ti\", \"4\", \"test_tl\", \"10\", \"test_tf\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_ti\", \"10\", \"test_tl\", \"100\", \"test_tf\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n    String[] doc6 = {\"id\",\"7\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_ti\", \"1\", \"test_tl\", \"100000\", \"test_tf\", \"2000\", \"type_s\", \"child\"};\n    assertU(adoc(doc6));\n    assertU(commit());\n    String[] doc7 = {\"id\",\"8\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_ti\", \"2\", \"test_tl\", \"100000\", \"test_tf\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc7));\n\n    assertU(commit());\n\n    //First basic test case.\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n\n    //Basic test case page 2\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"rows\", \"1\");\n    params.add(\"start\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=1]\",\n        \"/response/result/doc[1]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n\n    //Test expand.sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc, sub(1,1) asc\");//the \"sub()\" just testing function queries\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='5.0']\"\n    );\n\n    //Test with nullPolicy, ExpandComponent should ignore docs with null values in the collapse fields.\n    //Main result set should include the doc with null value in the collapse field.\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=3]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='3.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[3]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='5.0']\"\n    );\n\n\n    //Test overide expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_tl desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n\n    //Test overide expand.fq\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_tl desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n    //Test overide expand.fq and expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.fq\", \"*:*\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_tl desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n    //Test expand.rows\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=1]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\"\n    );\n\n\n    //Test no group results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_ti:5\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test zero results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_ti:5532535\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=0]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test key-only fl\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"fl\", \"id\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n  }\n\n","sourceOld":"  private void _testExpand(String group, String floatAppend, String hint) throws Exception {\n\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_ti\", \"5\",\n\n\n\n\n\n        \"test_tl\", \"10\", \"test_tf\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", group, \"1\"+floatAppend, \"test_ti\", \"50\", \"test_tl\", \"100\", \"test_tf\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc1));\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_ti\", \"5000\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_ti\", \"500\", \"test_tl\", \"1000\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", group, \"2\"+floatAppend, \"test_ti\", \"4\", \"test_tl\", \"10\", \"test_tf\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_ti\", \"10\", \"test_tl\", \"100\", \"test_tf\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n    String[] doc6 = {\"id\",\"7\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_ti\", \"1\", \"test_tl\", \"100000\", \"test_tf\", \"2000\", \"type_s\", \"child\"};\n    assertU(adoc(doc6));\n    assertU(commit());\n    String[] doc7 = {\"id\",\"8\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_ti\", \"2\", \"test_tl\", \"100000\", \"test_tf\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc7));\n\n    assertU(commit());\n\n    //First basic test case.\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n\n    //Basic test case page 2\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"rows\", \"1\");\n    params.add(\"start\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=1]\",\n        \"/response/result/doc[1]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n\n    //Test expand.sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc, sub(1,1) asc\");//the \"sub()\" just testing function queries\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='5.0']\"\n    );\n\n    //Test with nullPolicy, ExpandComponent should ignore docs with null values in the collapse fields.\n    //Main result set should include the doc with null value in the collapse field.\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=3]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='3.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[3]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='5.0']\"\n    );\n\n\n    //Test overide expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_tl desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n\n    //Test overide expand.fq\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_tl desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n    //Test overide expand.fq and expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.fq\", \"*:*\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_tl desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n    //Test expand.rows\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=1]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\"\n    );\n\n\n    //Test no group results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_ti:5\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test zero results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_ti:5532535\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=0]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test key-only fl\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"fl\", \"id\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d048016075a0b8589fcfc77fdf8e2a29fc80964","date":1494631326,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#_testExpand(String,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#_testExpand(String,String,String).mjava","sourceNew":"  private void _testExpand(String group, String floatAppend, String hint) throws Exception {\n\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"5\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"50\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc1));\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_i\", \"5000\", \"test_l\", \"100\", \"test_f\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_i\", \"500\", \"test_l\", \"1000\", \"test_f\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"4\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"10\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n    String[] doc6 = {\"id\",\"7\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"1\", \"test_l\", \"100000\", \"test_f\", \"2000\", \"type_s\", \"child\"};\n    assertU(adoc(doc6));\n    assertU(commit());\n    String[] doc7 = {\"id\",\"8\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"2\", \"test_l\", \"100000\", \"test_f\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc7));\n\n    assertU(commit());\n\n    //First basic test case.\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n\n    //Basic test case page 2\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"rows\", \"1\");\n    params.add(\"start\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=1]\",\n        \"/response/result/doc[1]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n\n    //Test expand.sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc, sub(1,1) asc\");//the \"sub()\" just testing function queries\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='5.0']\"\n    );\n\n    //Test with nullPolicy, ExpandComponent should ignore docs with null values in the collapse fields.\n    //Main result set should include the doc with null value in the collapse field.\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=3]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='3.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[3]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='5.0']\"\n    );\n\n\n    //Test overide expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n\n    //Test overide expand.fq\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n    //Test overide expand.fq and expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.fq\", \"*:*\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n    //Test expand.rows\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=1]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\"\n    );\n\n\n    //Test no group results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test zero results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5532535\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=0]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test key-only fl\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"fl\", \"id\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n  }\n\n","sourceOld":"  private void _testExpand(String group, String floatAppend, String hint) throws Exception {\n\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_ti\", \"5\", \"test_tl\", \"10\", \"test_tf\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", group, \"1\"+floatAppend, \"test_ti\", \"50\", \"test_tl\", \"100\", \"test_tf\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc1));\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_ti\", \"5000\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_ti\", \"500\", \"test_tl\", \"1000\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", group, \"2\"+floatAppend, \"test_ti\", \"4\", \"test_tl\", \"10\", \"test_tf\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_ti\", \"10\", \"test_tl\", \"100\", \"test_tf\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n    String[] doc6 = {\"id\",\"7\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_ti\", \"1\", \"test_tl\", \"100000\", \"test_tf\", \"2000\", \"type_s\", \"child\"};\n    assertU(adoc(doc6));\n    assertU(commit());\n    String[] doc7 = {\"id\",\"8\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_ti\", \"2\", \"test_tl\", \"100000\", \"test_tf\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc7));\n\n    assertU(commit());\n\n    //First basic test case.\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n\n    //Basic test case page 2\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"rows\", \"1\");\n    params.add(\"start\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=1]\",\n        \"/response/result/doc[1]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n\n    //Test expand.sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc, sub(1,1) asc\");//the \"sub()\" just testing function queries\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='5.0']\"\n    );\n\n    //Test with nullPolicy, ExpandComponent should ignore docs with null values in the collapse fields.\n    //Main result set should include the doc with null value in the collapse field.\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=3]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='3.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[3]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='5.0']\"\n    );\n\n\n    //Test overide expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_tl desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n\n    //Test overide expand.fq\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_tl desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n    //Test overide expand.fq and expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.fq\", \"*:*\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_tl desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n    //Test expand.rows\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=1]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\"\n    );\n\n\n    //Test no group results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_ti:5\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test zero results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_ti:5532535\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=0]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test key-only fl\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"fl\", \"id\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":["6b4ef0126a26f5c29fbbdf5438ec0ba49294115b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#_testExpand(String,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#_testExpand(String,String,String).mjava","sourceNew":"  private void _testExpand(String group, String floatAppend, String hint) throws Exception {\n\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"5\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"50\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc1));\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_i\", \"5000\", \"test_l\", \"100\", \"test_f\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_i\", \"500\", \"test_l\", \"1000\", \"test_f\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"4\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"10\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n    String[] doc6 = {\"id\",\"7\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"1\", \"test_l\", \"100000\", \"test_f\", \"2000\", \"type_s\", \"child\"};\n    assertU(adoc(doc6));\n    assertU(commit());\n    String[] doc7 = {\"id\",\"8\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"2\", \"test_l\", \"100000\", \"test_f\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc7));\n\n    assertU(commit());\n\n    //First basic test case.\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n\n    //Basic test case page 2\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"rows\", \"1\");\n    params.add(\"start\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=1]\",\n        \"/response/result/doc[1]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n\n    //Test expand.sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc, sub(1,1) asc\");//the \"sub()\" just testing function queries\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='5.0']\"\n    );\n\n    //Test with nullPolicy, ExpandComponent should ignore docs with null values in the collapse fields.\n    //Main result set should include the doc with null value in the collapse field.\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=3]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='3.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[3]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='5.0']\"\n    );\n\n\n    //Test overide expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n\n    //Test overide expand.fq\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n    //Test overide expand.fq and expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.fq\", \"*:*\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n    //Test expand.rows\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=1]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\"\n    );\n\n\n    //Test no group results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test zero results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5532535\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=0]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test key-only fl\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"fl\", \"id\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n  }\n\n","sourceOld":"  private void _testExpand(String group, String floatAppend, String hint) throws Exception {\n\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_ti\", \"5\", \"test_tl\", \"10\", \"test_tf\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", group, \"1\"+floatAppend, \"test_ti\", \"50\", \"test_tl\", \"100\", \"test_tf\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc1));\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_ti\", \"5000\", \"test_tl\", \"100\", \"test_tf\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_ti\", \"500\", \"test_tl\", \"1000\", \"test_tf\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", group, \"2\"+floatAppend, \"test_ti\", \"4\", \"test_tl\", \"10\", \"test_tf\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_ti\", \"10\", \"test_tl\", \"100\", \"test_tf\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n    String[] doc6 = {\"id\",\"7\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_ti\", \"1\", \"test_tl\", \"100000\", \"test_tf\", \"2000\", \"type_s\", \"child\"};\n    assertU(adoc(doc6));\n    assertU(commit());\n    String[] doc7 = {\"id\",\"8\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_ti\", \"2\", \"test_tl\", \"100000\", \"test_tf\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc7));\n\n    assertU(commit());\n\n    //First basic test case.\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n\n    //Basic test case page 2\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"rows\", \"1\");\n    params.add(\"start\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=1]\",\n        \"/response/result/doc[1]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n\n    //Test expand.sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc, sub(1,1) asc\");//the \"sub()\" just testing function queries\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='5.0']\"\n    );\n\n    //Test with nullPolicy, ExpandComponent should ignore docs with null values in the collapse fields.\n    //Main result set should include the doc with null value in the collapse field.\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=3]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='3.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[3]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='5.0']\"\n    );\n\n\n    //Test overide expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_tl desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n\n    //Test overide expand.fq\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_tl desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n    //Test overide expand.fq and expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.fq\", \"*:*\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_tl desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n    //Test expand.rows\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=1]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\"\n    );\n\n\n    //Test no group results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_ti:5\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test zero results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_ti:5532535\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_tl desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=0]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test key-only fl\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"fl\", \"id\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a71f63026529f3c1f03cfdd664910873ab2369ae","date":1497543264,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#_testExpand(String,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#_testExpand(String,String,String).mjava","sourceNew":"  private void _testExpand(String group, String floatAppend, String hint) throws Exception {\n\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"5\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"50\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc1));\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_i\", \"5000\", \"test_l\", \"100\", \"test_f\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_i\", \"500\", \"test_l\", \"1000\", \"test_f\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"4\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"10\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n    String[] doc6 = {\"id\",\"7\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"1\", \"test_l\", \"100000\", \"test_f\", \"2000\", \"type_s\", \"child\"};\n    assertU(adoc(doc6));\n    assertU(commit());\n    String[] doc7 = {\"id\",\"8\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"2\", \"test_l\", \"100000\", \"test_f\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc7));\n\n    assertU(commit());\n\n    //First basic test case.\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n\n    //Basic test case page 2\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"rows\", \"1\");\n    params.add(\"start\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n\n    //Test expand.sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc, sub(1,1) asc\");//the \"sub()\" just testing function queries\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\"\n    );\n\n    //Test with nullPolicy, ExpandComponent should ignore docs with null values in the collapse fields.\n    //Main result set should include the doc with null value in the collapse field.\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=3]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='3']\",\n        \"/response/result/doc[2]/str[@name='id'][.='2']\",\n        \"/response/result/doc[3]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\"\n    );\n\n\n    //Test overide expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n\n    //Test overide expand.fq\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test overide expand.fq and expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.fq\", \"*:*\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test expand.rows\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\"\n    );\n\n\n    //Test no group results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test zero results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5532535\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=0]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test key-only fl\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"fl\", \"id\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n  }\n\n","sourceOld":"  private void _testExpand(String group, String floatAppend, String hint) throws Exception {\n\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"5\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"50\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc1));\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_i\", \"5000\", \"test_l\", \"100\", \"test_f\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_i\", \"500\", \"test_l\", \"1000\", \"test_f\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"4\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"10\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n    String[] doc6 = {\"id\",\"7\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"1\", \"test_l\", \"100000\", \"test_f\", \"2000\", \"type_s\", \"child\"};\n    assertU(adoc(doc6));\n    assertU(commit());\n    String[] doc7 = {\"id\",\"8\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"2\", \"test_l\", \"100000\", \"test_f\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc7));\n\n    assertU(commit());\n\n    //First basic test case.\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n\n    //Basic test case page 2\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"rows\", \"1\");\n    params.add(\"start\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=1]\",\n        \"/response/result/doc[1]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n\n    //Test expand.sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc, sub(1,1) asc\");//the \"sub()\" just testing function queries\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='5.0']\"\n    );\n\n    //Test with nullPolicy, ExpandComponent should ignore docs with null values in the collapse fields.\n    //Main result set should include the doc with null value in the collapse field.\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=3]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='3.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[3]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='5.0']\"\n    );\n\n\n    //Test overide expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n\n    //Test overide expand.fq\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n    //Test overide expand.fq and expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.fq\", \"*:*\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n    //Test expand.rows\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=1]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\"\n    );\n\n\n    //Test no group results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test zero results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5532535\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=0]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test key-only fl\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"fl\", \"id\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":["6b4ef0126a26f5c29fbbdf5438ec0ba49294115b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#_testExpand(String,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#_testExpand(String,String,String).mjava","sourceNew":"  private void _testExpand(String group, String floatAppend, String hint) throws Exception {\n\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"5\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"50\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc1));\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_i\", \"5000\", \"test_l\", \"100\", \"test_f\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_i\", \"500\", \"test_l\", \"1000\", \"test_f\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"4\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"10\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n    String[] doc6 = {\"id\",\"7\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"1\", \"test_l\", \"100000\", \"test_f\", \"2000\", \"type_s\", \"child\"};\n    assertU(adoc(doc6));\n    assertU(commit());\n    String[] doc7 = {\"id\",\"8\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"2\", \"test_l\", \"100000\", \"test_f\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc7));\n\n    assertU(commit());\n\n    //First basic test case.\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n\n    //Basic test case page 2\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"rows\", \"1\");\n    params.add(\"start\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n\n    //Test expand.sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc, sub(1,1) asc\");//the \"sub()\" just testing function queries\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\"\n    );\n\n    //Test with nullPolicy, ExpandComponent should ignore docs with null values in the collapse fields.\n    //Main result set should include the doc with null value in the collapse field.\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=3]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='3']\",\n        \"/response/result/doc[2]/str[@name='id'][.='2']\",\n        \"/response/result/doc[3]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\"\n    );\n\n\n    //Test overide expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n\n    //Test overide expand.fq\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test overide expand.fq and expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.fq\", \"*:*\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test expand.rows\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\"\n    );\n\n\n    //Test no group results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test zero results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5532535\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=0]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test key-only fl\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"fl\", \"id\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n  }\n\n","sourceOld":"  private void _testExpand(String group, String floatAppend, String hint) throws Exception {\n\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"5\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"50\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc1));\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_i\", \"5000\", \"test_l\", \"100\", \"test_f\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_i\", \"500\", \"test_l\", \"1000\", \"test_f\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"4\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"10\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n    String[] doc6 = {\"id\",\"7\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"1\", \"test_l\", \"100000\", \"test_f\", \"2000\", \"type_s\", \"child\"};\n    assertU(adoc(doc6));\n    assertU(commit());\n    String[] doc7 = {\"id\",\"8\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"2\", \"test_l\", \"100000\", \"test_f\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc7));\n\n    assertU(commit());\n\n    //First basic test case.\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n\n    //Basic test case page 2\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"rows\", \"1\");\n    params.add(\"start\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=1]\",\n        \"/response/result/doc[1]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n\n    //Test expand.sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc, sub(1,1) asc\");//the \"sub()\" just testing function queries\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='5.0']\"\n    );\n\n    //Test with nullPolicy, ExpandComponent should ignore docs with null values in the collapse fields.\n    //Main result set should include the doc with null value in the collapse field.\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=3]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='3.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[3]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='5.0']\"\n    );\n\n\n    //Test overide expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n\n    //Test overide expand.fq\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n    //Test overide expand.fq and expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.fq\", \"*:*\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n    //Test expand.rows\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=1]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\"\n    );\n\n\n    //Test no group results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test zero results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5532535\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=0]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test key-only fl\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"fl\", \"id\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#_testExpand(String,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#_testExpand(String,String,String).mjava","sourceNew":"  private void _testExpand(String group, String floatAppend, String hint) throws Exception {\n\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"5\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"50\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc1));\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_i\", \"5000\", \"test_l\", \"100\", \"test_f\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_i\", \"500\", \"test_l\", \"1000\", \"test_f\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"4\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"10\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n    String[] doc6 = {\"id\",\"7\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"1\", \"test_l\", \"100000\", \"test_f\", \"2000\", \"type_s\", \"child\"};\n    assertU(adoc(doc6));\n    assertU(commit());\n    String[] doc7 = {\"id\",\"8\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"2\", \"test_l\", \"100000\", \"test_f\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc7));\n\n    assertU(commit());\n\n    //First basic test case.\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n\n    //Basic test case page 2\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"rows\", \"1\");\n    params.add(\"start\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n\n    //Test expand.sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc, sub(1,1) asc\");//the \"sub()\" just testing function queries\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\"\n    );\n\n    //Test with nullPolicy, ExpandComponent should ignore docs with null values in the collapse fields.\n    //Main result set should include the doc with null value in the collapse field.\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=3]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='3']\",\n        \"/response/result/doc[2]/str[@name='id'][.='2']\",\n        \"/response/result/doc[3]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\"\n    );\n\n\n    //Test overide expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n\n    //Test overide expand.fq\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test overide expand.fq and expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.fq\", \"*:*\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test expand.rows\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\"\n    );\n\n\n    //Test no group results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test zero results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5532535\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=0]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test key-only fl\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"fl\", \"id\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n  }\n\n","sourceOld":"  private void _testExpand(String group, String floatAppend, String hint) throws Exception {\n\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"5\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"50\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc1));\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_i\", \"5000\", \"test_l\", \"100\", \"test_f\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_i\", \"500\", \"test_l\", \"1000\", \"test_f\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"4\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"10\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n    String[] doc6 = {\"id\",\"7\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"1\", \"test_l\", \"100000\", \"test_f\", \"2000\", \"type_s\", \"child\"};\n    assertU(adoc(doc6));\n    assertU(commit());\n    String[] doc7 = {\"id\",\"8\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"2\", \"test_l\", \"100000\", \"test_f\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc7));\n\n    assertU(commit());\n\n    //First basic test case.\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n\n    //Basic test case page 2\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"rows\", \"1\");\n    params.add(\"start\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=1]\",\n        \"/response/result/doc[1]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n\n    //Test expand.sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc, sub(1,1) asc\");//the \"sub()\" just testing function queries\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='5.0']\"\n    );\n\n    //Test with nullPolicy, ExpandComponent should ignore docs with null values in the collapse fields.\n    //Main result set should include the doc with null value in the collapse field.\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=3]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='3.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[3]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='5.0']\"\n    );\n\n\n    //Test overide expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n\n    //Test overide expand.fq\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n    //Test overide expand.fq and expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.fq\", \"*:*\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='2.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='6.0']\"\n    );\n\n    //Test expand.rows\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=1]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='8.0']\"\n    );\n\n\n    //Test no group results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test zero results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5532535\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=0]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test key-only fl\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"fl\", \"id\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/float[@name='id'][.='2.0']\",\n        \"/response/result/doc[2]/float[@name='id'][.='6.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/float[@name='id'][.='1.0']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/float[@name='id'][.='7.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/float[@name='id'][.='5.0']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/float[@name='id'][.='8.0']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6b4ef0126a26f5c29fbbdf5438ec0ba49294115b","date":1571926274,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#_testExpand(String,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#_testExpand(String,String,String).mjava","sourceNew":"  private void _testExpand(String group, String floatAppend, String hint) throws Exception {\n    String[][] docs = {\n        {\"id\",\"1\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"5\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"},\n        {\"id\",\"2\", \"term_s\",\"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"50\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"},\n        {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_i\", \"5000\", \"test_l\", \"100\", \"test_f\", \"200\"},\n        {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_i\", \"500\", \"test_l\", \"1000\", \"test_f\", \"2000\"},\n        {\"id\",\"5\", \"term_s\", \"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"4\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"},\n        {\"id\",\"6\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"10\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"},\n        {\"id\",\"7\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"1\", \"test_l\", \"100000\", \"test_f\", \"2000\", \"type_s\", \"child\"},\n        {\"id\",\"8\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"2\", \"test_l\",  \"100000\", \"test_f\", \"200\", \"type_s\", \"child\"}\n    };\n    // randomize addition of docs into bunch of segments\n    // TODO there ought to be a test utility to do this; even add in batches\n    Collections.shuffle(Arrays.asList(docs), random());\n    for (String[] doc : docs) {\n      assertU(adoc(doc));\n      if (random().nextBoolean()) {\n        assertU(commit());\n      }\n    }\n\n    assertU(commit());\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n\n    //First basic test case.\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n\n    //Basic test case page 2\n\n    assertQ(req(params, \"rows\", \"1\", \"start\", \"1\"), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n\n    //Test expand.sort\n    //the \"sub()\" just testing function queries\n    assertQ(req(params,\"expand.sort\", \"test_l desc, sub(1,1) asc\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\"\n    );\n\n    //Test with nullPolicy, ExpandComponent should ignore docs with null values in the collapse fields.\n    //Main result set should include the doc with null value in the collapse field.\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=3]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='3']\",\n        \"/response/result/doc[2]/str[@name='id'][.='2']\",\n        \"/response/result/doc[3]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\"\n    );\n\n\n    //Test override expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n\n    //Test override expand.fq\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test override expand.fq and expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.fq\", \"*:*\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test expand.rows\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\"\n    );\n\n\n    //Test no group results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test zero results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5532535\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=0]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test key-only fl\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n\n    assertQ(req(params, \"fl\", \"id\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score'])=0\" // score shouldn't be returned when not requested\n    );\n\n    //Test key-only fl with score but no sorting\n\n    assertQ(req(params, \"fl\", \"id,score\"), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score' and .='NaN'])=0\"\n    );\n\n\n    // Test with fl and sort=score desc\n    assertQ(req(params, \"expand.sort\", \"score desc\", \"fl\", \"id,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score' and .='NaN'])=0\"\n    );\n\n    //Test fl with score, sort by non-score\n\n    assertQ(req(params, \"expand.sort\", \"test_l desc\", \"fl\", \"id,test_i,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"count(/response/lst[@name='expanded']/result)=2\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        // note that the expanded docs are score descending order (score is 1 test_i)\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\",\n        \"count(//*[@name='score' and .='NaN'])=0\",\n        \"count(/response/lst[@name='expanded']/result/doc[number(*/@name='score')!=number(*/@name='test_i')])=0\"\n    );\n\n    //Test fl with score with multi-sort\n\n    assertQ(req(params, \"expand.sort\", \"test_l desc, score asc\", \"fl\", \"id,test_i,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"count(/response/lst[@name='expanded']/result)=2\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        // note that the expanded docs are score descending order (score is 1 test_i)\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\",\n        \"count(//*[@name='score' and .='NaN'])=0\",\n        \"count(/response/lst[@name='expanded']/result/doc[number(*/@name='score')!=number(*/@name='test_i')])=0\"\n    );\n  }\n\n","sourceOld":"  private void _testExpand(String group, String floatAppend, String hint) throws Exception {\n\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"5\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\",\"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"50\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc1));\n\n    String[] doc2 = {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_i\", \"5000\", \"test_l\", \"100\", \"test_f\", \"200\"};\n    assertU(adoc(doc2));\n    assertU(commit());\n    String[] doc3 = {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_i\", \"500\", \"test_l\", \"1000\", \"test_f\", \"2000\"};\n    assertU(adoc(doc3));\n\n\n    String[] doc4 = {\"id\",\"5\", \"term_s\", \"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"4\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"};\n    assertU(adoc(doc4));\n    assertU(commit());\n    String[] doc5 = {\"id\",\"6\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"10\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc5));\n    assertU(commit());\n\n    String[] doc6 = {\"id\",\"7\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"1\", \"test_l\", \"100000\", \"test_f\", \"2000\", \"type_s\", \"child\"};\n    assertU(adoc(doc6));\n    assertU(commit());\n    String[] doc7 = {\"id\",\"8\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"2\", \"test_l\", \"100000\", \"test_f\", \"200\", \"type_s\", \"child\"};\n    assertU(adoc(doc7));\n\n    assertU(commit());\n\n    //First basic test case.\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n\n    //Basic test case page 2\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"rows\", \"1\");\n    params.add(\"start\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n\n    //Test expand.sort\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc, sub(1,1) asc\");//the \"sub()\" just testing function queries\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\"\n    );\n\n    //Test with nullPolicy, ExpandComponent should ignore docs with null values in the collapse fields.\n    //Main result set should include the doc with null value in the collapse field.\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=3]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='3']\",\n        \"/response/result/doc[2]/str[@name='id'][.='2']\",\n        \"/response/result/doc[3]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\"\n    );\n\n\n    //Test overide expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n\n    //Test overide expand.fq\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test overide expand.fq and expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.fq\", \"*:*\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test expand.rows\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\"\n    );\n\n\n    //Test no group results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test zero results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5532535\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=0]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test key-only fl\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"fl\", \"id\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n  }\n\n","bugFix":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee","a71f63026529f3c1f03cfdd664910873ab2369ae","4d048016075a0b8589fcfc77fdf8e2a29fc80964"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86cdf663c5df5189beeeb5e9f6a5a1edcbefea34","date":1572337563,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#_testExpand(String,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#_testExpand(String,String,String).mjava","sourceNew":"  private void _testExpand(String group, String floatAppend, String hint) throws Exception {\n    String[][] docs = {\n        {\"id\",\"1\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"5\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"},\n        {\"id\",\"2\", \"term_s\",\"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"50\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"},\n        {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_i\", \"5000\", \"test_l\", \"100\", \"test_f\", \"200\"},\n        {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_i\", \"500\", \"test_l\", \"1000\", \"test_f\", \"2000\"},\n        {\"id\",\"5\", \"term_s\", \"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"4\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"},\n        {\"id\",\"6\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"10\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"},\n        {\"id\",\"7\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"1\", \"test_l\", \"100000\", \"test_f\", \"2000\", \"type_s\", \"child\"},\n        {\"id\",\"8\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"2\", \"test_l\",  \"100000\", \"test_f\", \"200\", \"type_s\", \"child\"}\n    };\n    createIndex(docs);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n\n    //First basic test case.\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n\n    //Basic test case page 2\n\n    assertQ(req(params, \"rows\", \"1\", \"start\", \"1\"), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n\n    //Test expand.sort\n    //the \"sub()\" just testing function queries\n    assertQ(req(params,\"expand.sort\", \"test_l desc, sub(1,1) asc\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\"\n    );\n\n    //Test with nullPolicy, ExpandComponent should ignore docs with null values in the collapse fields.\n    //Main result set should include the doc with null value in the collapse field.\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=3]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='3']\",\n        \"/response/result/doc[2]/str[@name='id'][.='2']\",\n        \"/response/result/doc[3]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\"\n    );\n\n\n    //Test override expand.q\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n\n    //Test override expand.fq\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test override expand.fq and expand.q\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.fq\", \"*:*\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test expand.rows\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\"\n    );\n\n\n    //Test no group results\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test zero results\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5532535\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=0]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test key-only fl\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n\n    assertQ(req(params, \"fl\", \"id\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score'])=0\" // score shouldn't be returned when not requested\n    );\n\n    //Test key-only fl with score but no sorting\n    assertQ(req(params, \"fl\", \"id,score\"), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score' and .='NaN'])=0\"\n    );\n\n\n    // Test with fl and sort=score desc\n    assertQ(req(params, \"expand.sort\", \"score desc\", \"fl\", \"id,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score' and .='NaN'])=0\"\n    );\n\n    //Test fl with score, sort by non-score\n    assertQ(req(params, \"expand.sort\", \"test_l desc\", \"fl\", \"id,test_i,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"count(/response/lst[@name='expanded']/result)=2\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        // note that the expanded docs are score descending order (score is 1 test_i)\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\",\n        \"count(//*[@name='score' and .='NaN'])=0\",\n        \"count(/response/lst[@name='expanded']/result/doc[number(*/@name='score')!=number(*/@name='test_i')])=0\"\n    );\n\n    //Test fl with score with multi-sort\n    assertQ(req(params, \"expand.sort\", \"test_l desc, score asc\", \"fl\", \"id,test_i,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"count(/response/lst[@name='expanded']/result)=2\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        // note that the expanded docs are score descending order (score is 1 test_i)\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\",\n        \"count(//*[@name='score' and .='NaN'])=0\",\n        \"count(/response/lst[@name='expanded']/result/doc[number(*/@name='score')!=number(*/@name='test_i')])=0\"\n    );\n\n    // Test for expand with collapse\n    // when matched docs have fewer unique values\n    params = params(\"q\", \"*:*\", \"sort\", \"id asc\", \"fl\", \"id\", \"rows\", \"6\", \"expand\", \"true\", \"expand.sort\", \"id asc\");\n    assertQ(req(params, \"expand.field\", \"term_s\"),\n        \"*[count(/response/result/doc)=6]\",\n        \"/response/lst[@name='expanded']/result[@name='YYYY']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='YYYY']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score'])=0\"\n    );\n    assertQ(req(params, \"expand.field\", \"test_f\"),\n        \"*[count(/response/result/doc)=6]\",\n        \"/response/lst[@name='expanded']/result[@name='200.0']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2000.0']/doc[1]/str[@name='id'][.='7']\",\n        \"count(//*[@name='score'])=0\"\n    );\n  }\n\n","sourceOld":"  private void _testExpand(String group, String floatAppend, String hint) throws Exception {\n    String[][] docs = {\n        {\"id\",\"1\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"5\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"},\n        {\"id\",\"2\", \"term_s\",\"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"50\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"},\n        {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_i\", \"5000\", \"test_l\", \"100\", \"test_f\", \"200\"},\n        {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_i\", \"500\", \"test_l\", \"1000\", \"test_f\", \"2000\"},\n        {\"id\",\"5\", \"term_s\", \"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"4\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"},\n        {\"id\",\"6\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"10\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"},\n        {\"id\",\"7\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"1\", \"test_l\", \"100000\", \"test_f\", \"2000\", \"type_s\", \"child\"},\n        {\"id\",\"8\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"2\", \"test_l\",  \"100000\", \"test_f\", \"200\", \"type_s\", \"child\"}\n    };\n    // randomize addition of docs into bunch of segments\n    // TODO there ought to be a test utility to do this; even add in batches\n    Collections.shuffle(Arrays.asList(docs), random());\n    for (String[] doc : docs) {\n      assertU(adoc(doc));\n      if (random().nextBoolean()) {\n        assertU(commit());\n      }\n    }\n\n    assertU(commit());\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n\n    //First basic test case.\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n\n    //Basic test case page 2\n\n    assertQ(req(params, \"rows\", \"1\", \"start\", \"1\"), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n\n    //Test expand.sort\n    //the \"sub()\" just testing function queries\n    assertQ(req(params,\"expand.sort\", \"test_l desc, sub(1,1) asc\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\"\n    );\n\n    //Test with nullPolicy, ExpandComponent should ignore docs with null values in the collapse fields.\n    //Main result set should include the doc with null value in the collapse field.\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=3]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='3']\",\n        \"/response/result/doc[2]/str[@name='id'][.='2']\",\n        \"/response/result/doc[3]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\"\n    );\n\n\n    //Test override expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n\n    //Test override expand.fq\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test override expand.fq and expand.q\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.fq\", \"*:*\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test expand.rows\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\"\n    );\n\n\n    //Test no group results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test zero results\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5532535\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=0]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test key-only fl\n\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n\n    assertQ(req(params, \"fl\", \"id\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score'])=0\" // score shouldn't be returned when not requested\n    );\n\n    //Test key-only fl with score but no sorting\n\n    assertQ(req(params, \"fl\", \"id,score\"), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score' and .='NaN'])=0\"\n    );\n\n\n    // Test with fl and sort=score desc\n    assertQ(req(params, \"expand.sort\", \"score desc\", \"fl\", \"id,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score' and .='NaN'])=0\"\n    );\n\n    //Test fl with score, sort by non-score\n\n    assertQ(req(params, \"expand.sort\", \"test_l desc\", \"fl\", \"id,test_i,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"count(/response/lst[@name='expanded']/result)=2\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        // note that the expanded docs are score descending order (score is 1 test_i)\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\",\n        \"count(//*[@name='score' and .='NaN'])=0\",\n        \"count(/response/lst[@name='expanded']/result/doc[number(*/@name='score')!=number(*/@name='test_i')])=0\"\n    );\n\n    //Test fl with score with multi-sort\n\n    assertQ(req(params, \"expand.sort\", \"test_l desc, score asc\", \"fl\", \"id,test_i,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"count(/response/lst[@name='expanded']/result)=2\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        // note that the expanded docs are score descending order (score is 1 test_i)\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\",\n        \"count(//*[@name='score' and .='NaN'])=0\",\n        \"count(/response/lst[@name='expanded']/result/doc[number(*/@name='score')!=number(*/@name='test_i')])=0\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c295155afd43c4478881cf6d7826a66eca4f549","date":1575779373,"type":3,"author":"Michael Gibney","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#_testExpand(String,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#_testExpand(String,String,String).mjava","sourceNew":"  private void _testExpand(String group, String floatAppend, String hint) throws Exception {\n    String[][] docs = {\n        {\"id\",\"1\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"5\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"},\n        {\"id\",\"2\", \"term_s\",\"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"50\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"},\n        {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_i\", \"5000\", \"test_l\", \"100\", \"test_f\", \"200\"},\n        {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_i\", \"500\", \"test_l\", \"1000\", \"test_f\", \"2000\"},\n        {\"id\",\"5\", \"term_s\", \"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"4\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"},\n        {\"id\",\"6\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"10\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"},\n        {\"id\",\"7\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"1\", \"test_l\", \"100000\", \"test_f\", \"2000\", \"type_s\", \"child\"},\n        {\"id\",\"8\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"2\", \"test_l\",  \"100000\", \"test_f\", \"200\", \"type_s\", \"child\"}\n    };\n    createIndex(docs);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n\n    //First basic test case.\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n\n    //Basic test case page 2\n\n    assertQ(req(params, \"rows\", \"1\", \"start\", \"1\"), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n\n    //Test expand.sort\n    //the \"sub()\" just testing function queries\n    assertQ(req(params,\"expand.sort\", \"test_l desc, sub(1,1) asc\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\"\n    );\n\n    //Test with nullPolicy, ExpandComponent should ignore docs with null values in the collapse fields.\n    //Main result set should include the doc with null value in the collapse field.\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=3]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='3']\",\n        \"/response/result/doc[2]/str[@name='id'][.='2']\",\n        \"/response/result/doc[3]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\"\n    );\n\n\n    //Test override expand.q\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n\n    //Test override expand.fq\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test override expand.fq and expand.q\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.fq\", \"*:*\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test expand.rows\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\"\n    );\n\n\n    //Test no group results\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test zero results\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5532535\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=0]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test key-only fl\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n\n    assertQ(req(params, \"fl\", \"id\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score'])=0\" // score shouldn't be returned when not requested\n    );\n\n    //Test key-only fl with score but no sorting\n    assertQ(req(params, \"fl\", \"id,score\"), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score' and .='NaN'])=0\"\n    );\n\n\n    // Test with fl and sort=score desc\n    assertQ(req(params, \"expand.sort\", \"score desc\", \"fl\", \"id,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score' and .='NaN'])=0\"\n    );\n\n    //Test fl with score, sort by non-score\n    assertQ(req(params, \"expand.sort\", \"test_l desc\", \"fl\", \"id,test_i,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"count(/response/lst[@name='expanded']/result)=2\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        // note that the expanded docs are score descending order (score is 1 test_i)\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\",\n        \"count(//*[@name='score' and .='NaN'])=0\",\n        \"count(/response/lst[@name='expanded']/result/doc[number(*/@name='score')!=number(*/@name='test_i')])=0\"\n    );\n\n    //Test fl with score with multi-sort\n    assertQ(req(params, \"expand.sort\", \"test_l desc, score asc\", \"fl\", \"id,test_i,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"count(/response/lst[@name='expanded']/result)=2\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        // note that the expanded docs are score descending order (score is 1 test_i)\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\",\n        \"count(//*[@name='score' and .='NaN'])=0\",\n        \"count(/response/lst[@name='expanded']/result/doc[number(*/@name='score')!=number(*/@name='test_i')])=0\"\n    );\n\n    // Test for expand with collapse\n    // when matched docs have fewer unique values\n    params = params(\"q\", \"*:*\", \"sort\", \"id asc\", \"fl\", \"id\", \"rows\", \"6\", \"expand\", \"true\", \"expand.sort\", \"id asc\");\n    assertQ(req(params, \"expand.field\", \"term_s\"),\n        \"*[count(/response/result/doc)=6]\",\n        \"/response/lst[@name='expanded']/result[@name='YYYY']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='YYYY']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score'])=0\"\n    );\n    assertQ(req(params, \"expand.field\", \"test_f\"),\n        \"*[count(/response/result/doc)=6]\",\n        \"/response/lst[@name='expanded']/result[@name='200.0']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2000.0']/doc[1]/str[@name='id'][.='7']\",\n        \"count(//*[@name='score'])=0\"\n    );\n\n    // Support expand enabled without previous collapse\n    assertQ(req(\"q\", \"type_s:child\", \"sort\", group+\" asc, test_l desc\", \"defType\", \"edismax\",\n        \"expand\", \"true\", \"expand.q\", \"type_s:parent\", \"expand.field\", group),\n        \"*[count(/response/result/doc)=4]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='7']\",\n        \"/response/result/doc[2]/str[@name='id'][.='2']\",\n        \"/response/result/doc[3]/str[@name='id'][.='8']\",\n        \"/response/result/doc[4]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\"\n    );\n  }\n\n","sourceOld":"  private void _testExpand(String group, String floatAppend, String hint) throws Exception {\n    String[][] docs = {\n        {\"id\",\"1\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"5\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"},\n        {\"id\",\"2\", \"term_s\",\"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"50\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"},\n        {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_i\", \"5000\", \"test_l\", \"100\", \"test_f\", \"200\"},\n        {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_i\", \"500\", \"test_l\", \"1000\", \"test_f\", \"2000\"},\n        {\"id\",\"5\", \"term_s\", \"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"4\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"},\n        {\"id\",\"6\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"10\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"},\n        {\"id\",\"7\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"1\", \"test_l\", \"100000\", \"test_f\", \"2000\", \"type_s\", \"child\"},\n        {\"id\",\"8\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"2\", \"test_l\",  \"100000\", \"test_f\", \"200\", \"type_s\", \"child\"}\n    };\n    createIndex(docs);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n\n    //First basic test case.\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n\n    //Basic test case page 2\n\n    assertQ(req(params, \"rows\", \"1\", \"start\", \"1\"), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n\n    //Test expand.sort\n    //the \"sub()\" just testing function queries\n    assertQ(req(params,\"expand.sort\", \"test_l desc, sub(1,1) asc\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\"\n    );\n\n    //Test with nullPolicy, ExpandComponent should ignore docs with null values in the collapse fields.\n    //Main result set should include the doc with null value in the collapse field.\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=3]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='3']\",\n        \"/response/result/doc[2]/str[@name='id'][.='2']\",\n        \"/response/result/doc[3]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\"\n    );\n\n\n    //Test override expand.q\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n\n    //Test override expand.fq\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test override expand.fq and expand.q\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.fq\", \"*:*\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test expand.rows\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\"\n    );\n\n\n    //Test no group results\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test zero results\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5532535\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=0]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test key-only fl\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n\n    assertQ(req(params, \"fl\", \"id\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score'])=0\" // score shouldn't be returned when not requested\n    );\n\n    //Test key-only fl with score but no sorting\n    assertQ(req(params, \"fl\", \"id,score\"), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score' and .='NaN'])=0\"\n    );\n\n\n    // Test with fl and sort=score desc\n    assertQ(req(params, \"expand.sort\", \"score desc\", \"fl\", \"id,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score' and .='NaN'])=0\"\n    );\n\n    //Test fl with score, sort by non-score\n    assertQ(req(params, \"expand.sort\", \"test_l desc\", \"fl\", \"id,test_i,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"count(/response/lst[@name='expanded']/result)=2\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        // note that the expanded docs are score descending order (score is 1 test_i)\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\",\n        \"count(//*[@name='score' and .='NaN'])=0\",\n        \"count(/response/lst[@name='expanded']/result/doc[number(*/@name='score')!=number(*/@name='test_i')])=0\"\n    );\n\n    //Test fl with score with multi-sort\n    assertQ(req(params, \"expand.sort\", \"test_l desc, score asc\", \"fl\", \"id,test_i,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"count(/response/lst[@name='expanded']/result)=2\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        // note that the expanded docs are score descending order (score is 1 test_i)\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\",\n        \"count(//*[@name='score' and .='NaN'])=0\",\n        \"count(/response/lst[@name='expanded']/result/doc[number(*/@name='score')!=number(*/@name='test_i')])=0\"\n    );\n\n    // Test for expand with collapse\n    // when matched docs have fewer unique values\n    params = params(\"q\", \"*:*\", \"sort\", \"id asc\", \"fl\", \"id\", \"rows\", \"6\", \"expand\", \"true\", \"expand.sort\", \"id asc\");\n    assertQ(req(params, \"expand.field\", \"term_s\"),\n        \"*[count(/response/result/doc)=6]\",\n        \"/response/lst[@name='expanded']/result[@name='YYYY']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='YYYY']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score'])=0\"\n    );\n    assertQ(req(params, \"expand.field\", \"test_f\"),\n        \"*[count(/response/result/doc)=6]\",\n        \"/response/lst[@name='expanded']/result[@name='200.0']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2000.0']/doc[1]/str[@name='id'][.='7']\",\n        \"count(//*[@name='score'])=0\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ebdcd7cba625039937ab5b668449544f9dd36927","date":1575885354,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#_testExpand(String,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#_testExpand(String,String,String).mjava","sourceNew":"  private void _testExpand(String group, String floatAppend, String hint) throws Exception {\n    String[][] docs = {\n        {\"id\",\"1\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"5\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"},\n        {\"id\",\"2\", \"term_s\",\"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"50\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"},\n        {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_i\", \"5000\", \"test_l\", \"100\", \"test_f\", \"200\"},\n        {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_i\", \"500\", \"test_l\", \"1000\", \"test_f\", \"2000\"},\n        {\"id\",\"5\", \"term_s\", \"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"4\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"},\n        {\"id\",\"6\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"10\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"},\n        {\"id\",\"7\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"1\", \"test_l\", \"100000\", \"test_f\", \"2000\", \"type_s\", \"child\"},\n        {\"id\",\"8\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"2\", \"test_l\",  \"100000\", \"test_f\", \"200\", \"type_s\", \"child\"}\n    };\n    createIndex(docs);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n\n    //First basic test case.\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n\n    //Basic test case page 2\n\n    assertQ(req(params, \"rows\", \"1\", \"start\", \"1\"), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n\n    //Test expand.sort\n    //the \"sub()\" just testing function queries\n    assertQ(req(params,\"expand.sort\", \"test_l desc, sub(1,1) asc\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\"\n    );\n\n    //Test with nullPolicy, ExpandComponent should ignore docs with null values in the collapse fields.\n    //Main result set should include the doc with null value in the collapse field.\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=3]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='3']\",\n        \"/response/result/doc[2]/str[@name='id'][.='2']\",\n        \"/response/result/doc[3]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\"\n    );\n\n\n    //Test override expand.q\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n\n    //Test override expand.fq\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test override expand.fq and expand.q\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.fq\", \"*:*\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test expand.rows\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\"\n    );\n\n\n    //Test no group results\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test zero results\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5532535\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=0]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test key-only fl\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n\n    assertQ(req(params, \"fl\", \"id\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score'])=0\" // score shouldn't be returned when not requested\n    );\n\n    //Test key-only fl with score but no sorting\n    assertQ(req(params, \"fl\", \"id,score\"), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score' and .='NaN'])=0\"\n    );\n\n\n    // Test with fl and sort=score desc\n    assertQ(req(params, \"expand.sort\", \"score desc\", \"fl\", \"id,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score' and .='NaN'])=0\"\n    );\n\n    //Test fl with score, sort by non-score\n    assertQ(req(params, \"expand.sort\", \"test_l desc\", \"fl\", \"id,test_i,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"count(/response/lst[@name='expanded']/result)=2\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        // note that the expanded docs are score descending order (score is 1 test_i)\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\",\n        \"count(//*[@name='score' and .='NaN'])=0\",\n        \"count(/response/lst[@name='expanded']/result/doc[number(*/@name='score')!=number(*/@name='test_i')])=0\"\n    );\n\n    //Test fl with score with multi-sort\n    assertQ(req(params, \"expand.sort\", \"test_l desc, score asc\", \"fl\", \"id,test_i,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"count(/response/lst[@name='expanded']/result)=2\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        // note that the expanded docs are score descending order (score is 1 test_i)\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\",\n        \"count(//*[@name='score' and .='NaN'])=0\",\n        \"count(/response/lst[@name='expanded']/result/doc[number(*/@name='score')!=number(*/@name='test_i')])=0\"\n    );\n\n    // Test for expand with collapse\n    // when matched docs have fewer unique values\n    params = params(\"q\", \"*:*\", \"sort\", \"id asc\", \"fl\", \"id\", \"rows\", \"6\", \"expand\", \"true\", \"expand.sort\", \"id asc\");\n    assertQ(req(params, \"expand.field\", \"term_s\"),\n        \"*[count(/response/result/doc)=6]\",\n        \"/response/lst[@name='expanded']/result[@name='YYYY']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='YYYY']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score'])=0\"\n    );\n    assertQ(req(params, \"expand.field\", \"test_f\"),\n        \"*[count(/response/result/doc)=6]\",\n        \"/response/lst[@name='expanded']/result[@name='200.0']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2000.0']/doc[1]/str[@name='id'][.='7']\",\n        \"count(//*[@name='score'])=0\"\n    );\n\n    // Support expand enabled without previous collapse\n    assertQ(req(\"q\", \"type_s:child\", \"sort\", group+\" asc, test_l desc\", \"defType\", \"edismax\",\n        \"expand\", \"true\", \"expand.q\", \"type_s:parent\", \"expand.field\", group),\n        \"*[count(/response/result/doc)=4]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='7']\",\n        \"/response/result/doc[2]/str[@name='id'][.='2']\",\n        \"/response/result/doc[3]/str[@name='id'][.='8']\",\n        \"/response/result/doc[4]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\"\n    );\n  }\n\n","sourceOld":"  private void _testExpand(String group, String floatAppend, String hint) throws Exception {\n    String[][] docs = {\n        {\"id\",\"1\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"5\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"},\n        {\"id\",\"2\", \"term_s\",\"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"50\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"},\n        {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_i\", \"5000\", \"test_l\", \"100\", \"test_f\", \"200\"},\n        {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_i\", \"500\", \"test_l\", \"1000\", \"test_f\", \"2000\"},\n        {\"id\",\"5\", \"term_s\", \"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"4\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"},\n        {\"id\",\"6\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"10\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"},\n        {\"id\",\"7\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"1\", \"test_l\", \"100000\", \"test_f\", \"2000\", \"type_s\", \"child\"},\n        {\"id\",\"8\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"2\", \"test_l\",  \"100000\", \"test_f\", \"200\", \"type_s\", \"child\"}\n    };\n    createIndex(docs);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n\n    //First basic test case.\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n\n    //Basic test case page 2\n\n    assertQ(req(params, \"rows\", \"1\", \"start\", \"1\"), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n\n    //Test expand.sort\n    //the \"sub()\" just testing function queries\n    assertQ(req(params,\"expand.sort\", \"test_l desc, sub(1,1) asc\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\"\n    );\n\n    //Test with nullPolicy, ExpandComponent should ignore docs with null values in the collapse fields.\n    //Main result set should include the doc with null value in the collapse field.\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=3]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='3']\",\n        \"/response/result/doc[2]/str[@name='id'][.='2']\",\n        \"/response/result/doc[3]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\"\n    );\n\n\n    //Test override expand.q\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n\n    //Test override expand.fq\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test override expand.fq and expand.q\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.fq\", \"*:*\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test expand.rows\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\"\n    );\n\n\n    //Test no group results\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test zero results\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5532535\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=0]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test key-only fl\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n\n    assertQ(req(params, \"fl\", \"id\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score'])=0\" // score shouldn't be returned when not requested\n    );\n\n    //Test key-only fl with score but no sorting\n    assertQ(req(params, \"fl\", \"id,score\"), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score' and .='NaN'])=0\"\n    );\n\n\n    // Test with fl and sort=score desc\n    assertQ(req(params, \"expand.sort\", \"score desc\", \"fl\", \"id,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score' and .='NaN'])=0\"\n    );\n\n    //Test fl with score, sort by non-score\n    assertQ(req(params, \"expand.sort\", \"test_l desc\", \"fl\", \"id,test_i,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"count(/response/lst[@name='expanded']/result)=2\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        // note that the expanded docs are score descending order (score is 1 test_i)\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\",\n        \"count(//*[@name='score' and .='NaN'])=0\",\n        \"count(/response/lst[@name='expanded']/result/doc[number(*/@name='score')!=number(*/@name='test_i')])=0\"\n    );\n\n    //Test fl with score with multi-sort\n    assertQ(req(params, \"expand.sort\", \"test_l desc, score asc\", \"fl\", \"id,test_i,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"count(/response/lst[@name='expanded']/result)=2\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        // note that the expanded docs are score descending order (score is 1 test_i)\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\",\n        \"count(//*[@name='score' and .='NaN'])=0\",\n        \"count(/response/lst[@name='expanded']/result/doc[number(*/@name='score')!=number(*/@name='test_i')])=0\"\n    );\n\n    // Test for expand with collapse\n    // when matched docs have fewer unique values\n    params = params(\"q\", \"*:*\", \"sort\", \"id asc\", \"fl\", \"id\", \"rows\", \"6\", \"expand\", \"true\", \"expand.sort\", \"id asc\");\n    assertQ(req(params, \"expand.field\", \"term_s\"),\n        \"*[count(/response/result/doc)=6]\",\n        \"/response/lst[@name='expanded']/result[@name='YYYY']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='YYYY']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score'])=0\"\n    );\n    assertQ(req(params, \"expand.field\", \"test_f\"),\n        \"*[count(/response/result/doc)=6]\",\n        \"/response/lst[@name='expanded']/result[@name='200.0']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2000.0']/doc[1]/str[@name='id'][.='7']\",\n        \"count(//*[@name='score'])=0\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93c255ee5a354a24c9d163acebc0457234aed8db","date":1584503584,"type":3,"author":"ameliahenderson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#_testExpand(String,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#_testExpand(String,String,String).mjava","sourceNew":"  private void _testExpand(String group, String floatAppend, String hint) throws Exception {\n    String[][] docs = {\n        {\"id\",\"1\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"5\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"},\n        {\"id\",\"2\", \"term_s\",\"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"50\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"},\n        {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_i\", \"5000\", \"test_l\", \"100\", \"test_f\", \"200\"},\n        {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_i\", \"500\", \"test_l\", \"1000\", \"test_f\", \"2000\"},\n        {\"id\",\"5\", \"term_s\", \"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"4\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"},\n        {\"id\",\"6\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"10\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"},\n        {\"id\",\"7\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"1\", \"test_l\", \"100000\", \"test_f\", \"2000\", \"type_s\", \"child\"},\n        {\"id\",\"8\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"2\", \"test_l\",  \"100000\", \"test_f\", \"200\", \"type_s\", \"child\"}\n    };\n    createIndex(docs);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n\n    //First basic test case.\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n\n    //Basic test case page 2\n\n    assertQ(req(params, \"rows\", \"1\", \"start\", \"1\"), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n\n    //Test expand.sort\n    //the \"sub()\" just testing function queries\n    assertQ(req(params,\"expand.sort\", \"test_l desc, sub(1,1) asc\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\"\n    );\n\n    //Test with nullPolicy, ExpandComponent should ignore docs with null values in the collapse fields.\n    //Main result set should include the doc with null value in the collapse field.\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=3]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='3']\",\n        \"/response/result/doc[2]/str[@name='id'][.='2']\",\n        \"/response/result/doc[3]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\"\n    );\n\n\n    //Test override expand.q\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n\n    //Test override expand.fq\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test override expand.fq and expand.q\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.fq\", \"*:*\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test expand.rows\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\"\n    );\n\n    //Test expand.rows = 0 - no docs only expand count\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.rows\", \"0\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n            \"*[count(/response/lst[@name='expanded']/result)=2]\",\n            \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=0]\",\n            \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=0]\",\n            \"/response/result/doc[1]/str[@name='id'][.='2']\",\n            \"/response/result/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test expand.rows = 0 with expand.field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.rows\", \"0\");\n    assertQ(req(params, \"fl\", \"id\"), \"*[count(/response/result/doc)=2]\",\n            \"*[count(/response/lst[@name='expanded']/result)=2]\",\n            \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=0]\",\n            \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=0]\",\n            \"/response/result/doc[1]/str[@name='id'][.='1']\",\n            \"/response/result/doc[2]/str[@name='id'][.='5']\"\n    );\n\n    //Test score with expand.rows = 0\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"*:*\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.rows\", \"0\");\n    assertQ(req(params, \"fl\", \"id,score\"), \"*[count(/response/result/doc)=2]\",\n            \"*[count(/response/lst[@name='expanded']/result)=2]\",\n            \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=0]\",\n            \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=0]\",\n            \"*[count(/response/lst[@name='expanded']/result[@maxScore])=0]\", //maxScore should not be available\n            \"/response/result/doc[1]/str[@name='id'][.='1']\",\n            \"/response/result/doc[2]/str[@name='id'][.='5']\",\n            \"count(//*[@name='score' and .='NaN'])=0\"\n\n    );\n\n    //Test no group results\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test zero results\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5532535\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=0]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test key-only fl\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n\n    assertQ(req(params, \"fl\", \"id\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score'])=0\" // score shouldn't be returned when not requested\n    );\n\n    //Test key-only fl with score but no sorting\n    assertQ(req(params, \"fl\", \"id,score\"), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score' and .='NaN'])=0\"\n    );\n\n\n    // Test with fl and sort=score desc\n    assertQ(req(params, \"expand.sort\", \"score desc\", \"fl\", \"id,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score' and .='NaN'])=0\"\n    );\n\n    //Test fl with score, sort by non-score\n    assertQ(req(params, \"expand.sort\", \"test_l desc\", \"fl\", \"id,test_i,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"count(/response/lst[@name='expanded']/result)=2\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        // note that the expanded docs are score descending order (score is 1 test_i)\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\",\n        \"count(//*[@name='score' and .='NaN'])=0\",\n        \"count(/response/lst[@name='expanded']/result/doc[number(*/@name='score')!=number(*/@name='test_i')])=0\"\n    );\n\n    //Test fl with score with multi-sort\n    assertQ(req(params, \"expand.sort\", \"test_l desc, score asc\", \"fl\", \"id,test_i,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"count(/response/lst[@name='expanded']/result)=2\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        // note that the expanded docs are score descending order (score is 1 test_i)\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\",\n        \"count(//*[@name='score' and .='NaN'])=0\",\n        \"count(/response/lst[@name='expanded']/result/doc[number(*/@name='score')!=number(*/@name='test_i')])=0\"\n    );\n\n    // Test for expand with collapse\n    // when matched docs have fewer unique values\n    params = params(\"q\", \"*:*\", \"sort\", \"id asc\", \"fl\", \"id\", \"rows\", \"6\", \"expand\", \"true\", \"expand.sort\", \"id asc\");\n    assertQ(req(params, \"expand.field\", \"term_s\"),\n        \"*[count(/response/result/doc)=6]\",\n        \"/response/lst[@name='expanded']/result[@name='YYYY']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='YYYY']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score'])=0\"\n    );\n    assertQ(req(params, \"expand.field\", \"test_f\"),\n        \"*[count(/response/result/doc)=6]\",\n        \"/response/lst[@name='expanded']/result[@name='200.0']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2000.0']/doc[1]/str[@name='id'][.='7']\",\n        \"count(//*[@name='score'])=0\"\n    );\n\n    // Support expand enabled without previous collapse\n    assertQ(req(\"q\", \"type_s:child\", \"sort\", group+\" asc, test_l desc\", \"defType\", \"edismax\",\n        \"expand\", \"true\", \"expand.q\", \"type_s:parent\", \"expand.field\", group),\n        \"*[count(/response/result/doc)=4]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='7']\",\n        \"/response/result/doc[2]/str[@name='id'][.='2']\",\n        \"/response/result/doc[3]/str[@name='id'][.='8']\",\n        \"/response/result/doc[4]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\"\n    );\n  }\n\n","sourceOld":"  private void _testExpand(String group, String floatAppend, String hint) throws Exception {\n    String[][] docs = {\n        {\"id\",\"1\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"5\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"},\n        {\"id\",\"2\", \"term_s\",\"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"50\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"},\n        {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_i\", \"5000\", \"test_l\", \"100\", \"test_f\", \"200\"},\n        {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_i\", \"500\", \"test_l\", \"1000\", \"test_f\", \"2000\"},\n        {\"id\",\"5\", \"term_s\", \"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"4\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"},\n        {\"id\",\"6\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"10\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"},\n        {\"id\",\"7\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"1\", \"test_l\", \"100000\", \"test_f\", \"2000\", \"type_s\", \"child\"},\n        {\"id\",\"8\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"2\", \"test_l\",  \"100000\", \"test_f\", \"200\", \"type_s\", \"child\"}\n    };\n    createIndex(docs);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n\n    //First basic test case.\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n\n    //Basic test case page 2\n\n    assertQ(req(params, \"rows\", \"1\", \"start\", \"1\"), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n\n    //Test expand.sort\n    //the \"sub()\" just testing function queries\n    assertQ(req(params,\"expand.sort\", \"test_l desc, sub(1,1) asc\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\"\n    );\n\n    //Test with nullPolicy, ExpandComponent should ignore docs with null values in the collapse fields.\n    //Main result set should include the doc with null value in the collapse field.\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=3]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='3']\",\n        \"/response/result/doc[2]/str[@name='id'][.='2']\",\n        \"/response/result/doc[3]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\"\n    );\n\n\n    //Test override expand.q\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n\n    //Test override expand.fq\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test override expand.fq and expand.q\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.fq\", \"*:*\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test expand.rows\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\"\n    );\n\n\n    //Test no group results\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test zero results\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5532535\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=0]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test key-only fl\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n\n    assertQ(req(params, \"fl\", \"id\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score'])=0\" // score shouldn't be returned when not requested\n    );\n\n    //Test key-only fl with score but no sorting\n    assertQ(req(params, \"fl\", \"id,score\"), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score' and .='NaN'])=0\"\n    );\n\n\n    // Test with fl and sort=score desc\n    assertQ(req(params, \"expand.sort\", \"score desc\", \"fl\", \"id,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score' and .='NaN'])=0\"\n    );\n\n    //Test fl with score, sort by non-score\n    assertQ(req(params, \"expand.sort\", \"test_l desc\", \"fl\", \"id,test_i,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"count(/response/lst[@name='expanded']/result)=2\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        // note that the expanded docs are score descending order (score is 1 test_i)\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\",\n        \"count(//*[@name='score' and .='NaN'])=0\",\n        \"count(/response/lst[@name='expanded']/result/doc[number(*/@name='score')!=number(*/@name='test_i')])=0\"\n    );\n\n    //Test fl with score with multi-sort\n    assertQ(req(params, \"expand.sort\", \"test_l desc, score asc\", \"fl\", \"id,test_i,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"count(/response/lst[@name='expanded']/result)=2\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        // note that the expanded docs are score descending order (score is 1 test_i)\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\",\n        \"count(//*[@name='score' and .='NaN'])=0\",\n        \"count(/response/lst[@name='expanded']/result/doc[number(*/@name='score')!=number(*/@name='test_i')])=0\"\n    );\n\n    // Test for expand with collapse\n    // when matched docs have fewer unique values\n    params = params(\"q\", \"*:*\", \"sort\", \"id asc\", \"fl\", \"id\", \"rows\", \"6\", \"expand\", \"true\", \"expand.sort\", \"id asc\");\n    assertQ(req(params, \"expand.field\", \"term_s\"),\n        \"*[count(/response/result/doc)=6]\",\n        \"/response/lst[@name='expanded']/result[@name='YYYY']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='YYYY']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score'])=0\"\n    );\n    assertQ(req(params, \"expand.field\", \"test_f\"),\n        \"*[count(/response/result/doc)=6]\",\n        \"/response/lst[@name='expanded']/result[@name='200.0']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2000.0']/doc[1]/str[@name='id'][.='7']\",\n        \"count(//*[@name='score'])=0\"\n    );\n\n    // Support expand enabled without previous collapse\n    assertQ(req(\"q\", \"type_s:child\", \"sort\", group+\" asc, test_l desc\", \"defType\", \"edismax\",\n        \"expand\", \"true\", \"expand.q\", \"type_s:parent\", \"expand.field\", group),\n        \"*[count(/response/result/doc)=4]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='7']\",\n        \"/response/result/doc[2]/str[@name='id'][.='2']\",\n        \"/response/result/doc[3]/str[@name='id'][.='8']\",\n        \"/response/result/doc[4]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"820a47b6a19467558c5c4eb4ff340c4bb224fd71","date":1585374825,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#_testExpand(String,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#_testExpand(String,String,String).mjava","sourceNew":"  private void _testExpand(String group, String floatAppend, String hint) throws Exception {\n    String[][] docs = {\n        {\"id\",\"1\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"5\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"},\n        {\"id\",\"2\", \"term_s\",\"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"50\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"},\n        {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_i\", \"5000\", \"test_l\", \"100\", \"test_f\", \"200\"},\n        {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_i\", \"500\", \"test_l\", \"1000\", \"test_f\", \"2000\"},\n        {\"id\",\"5\", \"term_s\", \"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"4\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"},\n        {\"id\",\"6\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"10\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"},\n        {\"id\",\"7\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"1\", \"test_l\", \"100000\", \"test_f\", \"2000\", \"type_s\", \"child\"},\n        {\"id\",\"8\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"2\", \"test_l\",  \"100000\", \"test_f\", \"200\", \"type_s\", \"child\"}\n    };\n    createIndex(docs);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n\n    //First basic test case.\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n\n    //Basic test case page 2\n\n    assertQ(req(params, \"rows\", \"1\", \"start\", \"1\"), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n\n    //Test expand.sort\n    //the \"sub()\" just testing function queries\n    assertQ(req(params,\"expand.sort\", \"test_l desc, sub(1,1) asc\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\"\n    );\n\n    //Test with nullPolicy, ExpandComponent should ignore docs with null values in the collapse fields.\n    //Main result set should include the doc with null value in the collapse field.\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=3]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='3']\",\n        \"/response/result/doc[2]/str[@name='id'][.='2']\",\n        \"/response/result/doc[3]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\"\n    );\n\n\n    //Test override expand.q\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n\n    //Test override expand.fq\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test override expand.fq and expand.q\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.fq\", \"*:*\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test expand.rows\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\"\n    );\n\n    //Test expand.rows = 0 - no docs only expand count\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.rows\", \"0\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n            \"*[count(/response/lst[@name='expanded']/result)=2]\",\n            \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=0]\",\n            \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=0]\",\n            \"/response/result/doc[1]/str[@name='id'][.='2']\",\n            \"/response/result/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test expand.rows = 0 with expand.field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.rows\", \"0\");\n    assertQ(req(params, \"fl\", \"id\"), \"*[count(/response/result/doc)=2]\",\n            \"*[count(/response/lst[@name='expanded']/result)=2]\",\n            \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=0]\",\n            \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=0]\",\n            \"/response/result/doc[1]/str[@name='id'][.='1']\",\n            \"/response/result/doc[2]/str[@name='id'][.='5']\"\n    );\n\n    //Test score with expand.rows = 0\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"*:*\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.rows\", \"0\");\n    assertQ(req(params, \"fl\", \"id,score\"), \"*[count(/response/result/doc)=2]\",\n            \"*[count(/response/lst[@name='expanded']/result)=2]\",\n            \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=0]\",\n            \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=0]\",\n            \"*[count(/response/lst[@name='expanded']/result[@maxScore])=0]\", //maxScore should not be available\n            \"/response/result/doc[1]/str[@name='id'][.='1']\",\n            \"/response/result/doc[2]/str[@name='id'][.='5']\",\n            \"count(//*[@name='score' and .='NaN'])=0\"\n\n    );\n\n    //Test no group results\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test zero results\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5532535\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=0]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test key-only fl\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n\n    assertQ(req(params, \"fl\", \"id\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score'])=0\" // score shouldn't be returned when not requested\n    );\n\n    //Test key-only fl with score but no sorting\n    assertQ(req(params, \"fl\", \"id,score\"), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score' and .='NaN'])=0\"\n    );\n\n\n    // Test with fl and sort=score desc\n    assertQ(req(params, \"expand.sort\", \"score desc\", \"fl\", \"id,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score' and .='NaN'])=0\"\n    );\n\n    //Test fl with score, sort by non-score\n    assertQ(req(params, \"expand.sort\", \"test_l desc\", \"fl\", \"id,test_i,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"count(/response/lst[@name='expanded']/result)=2\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        // note that the expanded docs are score descending order (score is 1 test_i)\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\",\n        \"count(//*[@name='score' and .='NaN'])=0\",\n        \"count(/response/lst[@name='expanded']/result/doc[number(*/@name='score')!=number(*/@name='test_i')])=0\"\n    );\n\n    //Test fl with score with multi-sort\n    assertQ(req(params, \"expand.sort\", \"test_l desc, score asc\", \"fl\", \"id,test_i,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"count(/response/lst[@name='expanded']/result)=2\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        // note that the expanded docs are score descending order (score is 1 test_i)\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\",\n        \"count(//*[@name='score' and .='NaN'])=0\",\n        \"count(/response/lst[@name='expanded']/result/doc[number(*/@name='score')!=number(*/@name='test_i')])=0\"\n    );\n\n    // Test for expand with collapse\n    // when matched docs have fewer unique values\n    params = params(\"q\", \"*:*\", \"sort\", \"id asc\", \"fl\", \"id\", \"rows\", \"6\", \"expand\", \"true\", \"expand.sort\", \"id asc\");\n    assertQ(req(params, \"expand.field\", \"term_s\"),\n        \"*[count(/response/result/doc)=6]\",\n        \"/response/lst[@name='expanded']/result[@name='YYYY']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='YYYY']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score'])=0\"\n    );\n    assertQ(req(params, \"expand.field\", \"test_f\"),\n        \"*[count(/response/result/doc)=6]\",\n        \"/response/lst[@name='expanded']/result[@name='200.0']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2000.0']/doc[1]/str[@name='id'][.='7']\",\n        \"count(//*[@name='score'])=0\"\n    );\n\n    // Support expand enabled without previous collapse\n    assertQ(req(\"q\", \"type_s:child\", \"sort\", group+\" asc, test_l desc\", \"defType\", \"edismax\",\n        \"expand\", \"true\", \"expand.q\", \"type_s:parent\", \"expand.field\", group),\n        \"*[count(/response/result/doc)=4]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='7']\",\n        \"/response/result/doc[2]/str[@name='id'][.='2']\",\n        \"/response/result/doc[3]/str[@name='id'][.='8']\",\n        \"/response/result/doc[4]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\"\n    );\n\n    // With multiple collapse\n\n    // with different cost\n    params = params(\"q\", \"*:*\", \"defType\", \"edismax\", \"expand\", \"true\",  \"bf\", \"field(test_i)\", \"expand.sort\", \"id asc\");\n    params.set(\"fq\", \"{!collapse cost=1000 field=\"+group+\"}\", \"{!collapse cost=2000 field=test_f}\");\n    assertQ(req(params),\n        \"*[count(/response/result/doc)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\"\n    );\n\n    // with same cost (default cost)\n    params.set(\"fq\", \"{!collapse field=\"+group+\"}\", \"{!collapse field=test_f}\");\n    assertQ(req(params),\n        \"*[count(/response/result/doc)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\"\n    );\n\n    // with different cost but choose the test_f\n    params.set(\"fq\", \"{!collapse cost=3000 field=\"+group+\"}\", \"{!collapse cost=2000 field=test_f}\");\n    assertQ(req(params),\n        \"*[count(/response/result/doc)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='200.0']/doc[1]/str[@name='id'][.='3']\",\n        \"/response/lst[@name='expanded']/result[@name='200.0']/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='200.0']/doc[3]/str[@name='id'][.='8']\"\n    );\n\n    // with different cost and nullPolicy\n    params.set(\"bf\", \"ord(id)\");\n    params.set(\"fq\", \"{!collapse cost=1000 field=\"+group+\" nullPolicy=collapse}\", \"{!collapse cost=2000 field=test_f}\");\n    assertQ(req(params),\n        \"*[count(/response/result/doc)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='8']\",\n        \"/response/result/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\"\n    );\n  }\n\n","sourceOld":"  private void _testExpand(String group, String floatAppend, String hint) throws Exception {\n    String[][] docs = {\n        {\"id\",\"1\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"5\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"},\n        {\"id\",\"2\", \"term_s\",\"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"50\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"},\n        {\"id\",\"3\", \"term_s\", \"YYYY\", \"test_i\", \"5000\", \"test_l\", \"100\", \"test_f\", \"200\"},\n        {\"id\",\"4\", \"term_s\", \"YYYY\", \"test_i\", \"500\", \"test_l\", \"1000\", \"test_f\", \"2000\"},\n        {\"id\",\"5\", \"term_s\", \"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"4\", \"test_l\", \"10\", \"test_f\", \"2000\", \"type_s\", \"parent\"},\n        {\"id\",\"6\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"10\", \"test_l\", \"100\", \"test_f\", \"200\", \"type_s\", \"child\"},\n        {\"id\",\"7\", \"term_s\", \"YYYY\", group, \"1\"+floatAppend, \"test_i\", \"1\", \"test_l\", \"100000\", \"test_f\", \"2000\", \"type_s\", \"child\"},\n        {\"id\",\"8\", \"term_s\",\"YYYY\", group, \"2\"+floatAppend, \"test_i\", \"2\", \"test_l\",  \"100000\", \"test_f\", \"200\", \"type_s\", \"child\"}\n    };\n    createIndex(docs);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n\n    //First basic test case.\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n\n    //Basic test case page 2\n\n    assertQ(req(params, \"rows\", \"1\", \"start\", \"1\"), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\"\n    );\n\n    //Test expand.sort\n    //the \"sub()\" just testing function queries\n    assertQ(req(params,\"expand.sort\", \"test_l desc, sub(1,1) asc\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\"\n    );\n\n    //Test with nullPolicy, ExpandComponent should ignore docs with null values in the collapse fields.\n    //Main result set should include the doc with null value in the collapse field.\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\" nullPolicy=collapse}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=3]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='3']\",\n        \"/response/result/doc[2]/str[@name='id'][.='2']\",\n        \"/response/result/doc[3]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\"\n    );\n\n\n    //Test override expand.q\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n\n    //Test override expand.fq\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test override expand.fq and expand.q\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.q\", \"type_s:child\");\n    params.add(\"expand.fq\", \"*:*\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.sort\", \"test_l desc\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='1']\",\n        \"/response/result/doc[2]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='2']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test expand.rows\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=1]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\"\n    );\n\n    //Test expand.rows = 0 - no docs only expand count\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.rows\", \"0\");\n    assertQ(req(params), \"*[count(/response/result/doc)=2]\",\n            \"*[count(/response/lst[@name='expanded']/result)=2]\",\n            \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=0]\",\n            \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=0]\",\n            \"/response/result/doc[1]/str[@name='id'][.='2']\",\n            \"/response/result/doc[2]/str[@name='id'][.='6']\"\n    );\n\n    //Test expand.rows = 0 with expand.field\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"type_s:child\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.rows\", \"0\");\n    assertQ(req(params, \"fl\", \"id\"), \"*[count(/response/result/doc)=2]\",\n            \"*[count(/response/lst[@name='expanded']/result)=2]\",\n            \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=0]\",\n            \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=0]\",\n            \"/response/result/doc[1]/str[@name='id'][.='1']\",\n            \"/response/result/doc[2]/str[@name='id'][.='5']\"\n    );\n\n    //Test score with expand.rows = 0\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"type_s:parent\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.fq\", \"*:*\");\n    params.add(\"expand.field\", group);\n    params.add(\"expand.rows\", \"0\");\n    assertQ(req(params, \"fl\", \"id,score\"), \"*[count(/response/result/doc)=2]\",\n            \"*[count(/response/lst[@name='expanded']/result)=2]\",\n            \"*[count(/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc)=0]\",\n            \"*[count(/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc)=0]\",\n            \"*[count(/response/lst[@name='expanded']/result[@maxScore])=0]\", //maxScore should not be available\n            \"/response/result/doc[1]/str[@name='id'][.='1']\",\n            \"/response/result/doc[2]/str[@name='id'][.='5']\",\n            \"count(//*[@name='score' and .='NaN'])=0\"\n\n    );\n\n    //Test no group results\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=1]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test zero results\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"test_i:5532535\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n    params.add(\"expand.sort\", \"test_l desc\");\n    params.add(\"expand.rows\", \"1\");\n    assertQ(req(params), \"*[count(/response/result/doc)=0]\",\n        \"*[count(/response/lst[@name='expanded']/result)=0]\"\n    );\n\n    //Test key-only fl\n    params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=\"+group+hint+\"}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_i)\");\n    params.add(\"expand\", \"true\");\n\n    assertQ(req(params, \"fl\", \"id\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score'])=0\" // score shouldn't be returned when not requested\n    );\n\n    //Test key-only fl with score but no sorting\n    assertQ(req(params, \"fl\", \"id,score\"), \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score' and .='NaN'])=0\"\n    );\n\n\n    // Test with fl and sort=score desc\n    assertQ(req(params, \"expand.sort\", \"score desc\", \"fl\", \"id,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score' and .='NaN'])=0\"\n    );\n\n    //Test fl with score, sort by non-score\n    assertQ(req(params, \"expand.sort\", \"test_l desc\", \"fl\", \"id,test_i,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"count(/response/lst[@name='expanded']/result)=2\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        // note that the expanded docs are score descending order (score is 1 test_i)\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\",\n        \"count(//*[@name='score' and .='NaN'])=0\",\n        \"count(/response/lst[@name='expanded']/result/doc[number(*/@name='score')!=number(*/@name='test_i')])=0\"\n    );\n\n    //Test fl with score with multi-sort\n    assertQ(req(params, \"expand.sort\", \"test_l desc, score asc\", \"fl\", \"id,test_i,score\"),\n        \"*[count(/response/result/doc)=2]\",\n        \"count(/response/lst[@name='expanded']/result)=2\",\n        \"/response/result/doc[1]/str[@name='id'][.='2']\",\n        \"/response/result/doc[2]/str[@name='id'][.='6']\",\n        // note that the expanded docs are score descending order (score is 1 test_i)\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[2]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[2]/str[@name='id'][.='5']\",\n        \"count(//*[@name='score' and .='NaN'])=0\",\n        \"count(/response/lst[@name='expanded']/result/doc[number(*/@name='score')!=number(*/@name='test_i')])=0\"\n    );\n\n    // Test for expand with collapse\n    // when matched docs have fewer unique values\n    params = params(\"q\", \"*:*\", \"sort\", \"id asc\", \"fl\", \"id\", \"rows\", \"6\", \"expand\", \"true\", \"expand.sort\", \"id asc\");\n    assertQ(req(params, \"expand.field\", \"term_s\"),\n        \"*[count(/response/result/doc)=6]\",\n        \"/response/lst[@name='expanded']/result[@name='YYYY']/doc[1]/str[@name='id'][.='7']\",\n        \"/response/lst[@name='expanded']/result[@name='YYYY']/doc[2]/str[@name='id'][.='8']\",\n        \"count(//*[@name='score'])=0\"\n    );\n    assertQ(req(params, \"expand.field\", \"test_f\"),\n        \"*[count(/response/result/doc)=6]\",\n        \"/response/lst[@name='expanded']/result[@name='200.0']/doc[1]/str[@name='id'][.='8']\",\n        \"/response/lst[@name='expanded']/result[@name='2000.0']/doc[1]/str[@name='id'][.='7']\",\n        \"count(//*[@name='score'])=0\"\n    );\n\n    // Support expand enabled without previous collapse\n    assertQ(req(\"q\", \"type_s:child\", \"sort\", group+\" asc, test_l desc\", \"defType\", \"edismax\",\n        \"expand\", \"true\", \"expand.q\", \"type_s:parent\", \"expand.field\", group),\n        \"*[count(/response/result/doc)=4]\",\n        \"*[count(/response/lst[@name='expanded']/result)=2]\",\n        \"/response/result/doc[1]/str[@name='id'][.='7']\",\n        \"/response/result/doc[2]/str[@name='id'][.='2']\",\n        \"/response/result/doc[3]/str[@name='id'][.='8']\",\n        \"/response/result/doc[4]/str[@name='id'][.='6']\",\n        \"/response/lst[@name='expanded']/result[@name='1\"+floatAppend+\"']/doc[1]/str[@name='id'][.='1']\",\n        \"/response/lst[@name='expanded']/result[@name='2\"+floatAppend+\"']/doc[1]/str[@name='id'][.='5']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"820a47b6a19467558c5c4eb4ff340c4bb224fd71":["93c255ee5a354a24c9d163acebc0457234aed8db"],"4d048016075a0b8589fcfc77fdf8e2a29fc80964":["0a9c4a5022409b649909f75244642a57739b3598"],"a71f63026529f3c1f03cfdd664910873ab2369ae":["4d048016075a0b8589fcfc77fdf8e2a29fc80964"],"6b4ef0126a26f5c29fbbdf5438ec0ba49294115b":["28288370235ed02234a64753cdbf0c6ec096304a"],"ebdcd7cba625039937ab5b668449544f9dd36927":["86cdf663c5df5189beeeb5e9f6a5a1edcbefea34","1c295155afd43c4478881cf6d7826a66eca4f549"],"28288370235ed02234a64753cdbf0c6ec096304a":["4d048016075a0b8589fcfc77fdf8e2a29fc80964","a71f63026529f3c1f03cfdd664910873ab2369ae"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["0a9c4a5022409b649909f75244642a57739b3598","4d048016075a0b8589fcfc77fdf8e2a29fc80964"],"cca23c5b56c19b85dda9a06be0959a0d9bdacc2e":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"],"8ced52befdc8d88d90766aadbaac496f3fd0e4ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"93c255ee5a354a24c9d163acebc0457234aed8db":["1c295155afd43c4478881cf6d7826a66eca4f549"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0a9c4a5022409b649909f75244642a57739b3598":["cca23c5b56c19b85dda9a06be0959a0d9bdacc2e"],"1c295155afd43c4478881cf6d7826a66eca4f549":["86cdf663c5df5189beeeb5e9f6a5a1edcbefea34"],"86cdf663c5df5189beeeb5e9f6a5a1edcbefea34":["6b4ef0126a26f5c29fbbdf5438ec0ba49294115b"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["e9017cf144952056066919f1ebc7897ff9bd71b1","a71f63026529f3c1f03cfdd664910873ab2369ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["820a47b6a19467558c5c4eb4ff340c4bb224fd71"]},"commit2Childs":{"820a47b6a19467558c5c4eb4ff340c4bb224fd71":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4d048016075a0b8589fcfc77fdf8e2a29fc80964":["a71f63026529f3c1f03cfdd664910873ab2369ae","28288370235ed02234a64753cdbf0c6ec096304a","e9017cf144952056066919f1ebc7897ff9bd71b1"],"a71f63026529f3c1f03cfdd664910873ab2369ae":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"6b4ef0126a26f5c29fbbdf5438ec0ba49294115b":["86cdf663c5df5189beeeb5e9f6a5a1edcbefea34"],"ebdcd7cba625039937ab5b668449544f9dd36927":[],"28288370235ed02234a64753cdbf0c6ec096304a":["6b4ef0126a26f5c29fbbdf5438ec0ba49294115b"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"cca23c5b56c19b85dda9a06be0959a0d9bdacc2e":["0a9c4a5022409b649909f75244642a57739b3598"],"8ced52befdc8d88d90766aadbaac496f3fd0e4ee":["cca23c5b56c19b85dda9a06be0959a0d9bdacc2e"],"93c255ee5a354a24c9d163acebc0457234aed8db":["820a47b6a19467558c5c4eb4ff340c4bb224fd71"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"],"0a9c4a5022409b649909f75244642a57739b3598":["4d048016075a0b8589fcfc77fdf8e2a29fc80964","e9017cf144952056066919f1ebc7897ff9bd71b1"],"1c295155afd43c4478881cf6d7826a66eca4f549":["ebdcd7cba625039937ab5b668449544f9dd36927","93c255ee5a354a24c9d163acebc0457234aed8db"],"86cdf663c5df5189beeeb5e9f6a5a1edcbefea34":["ebdcd7cba625039937ab5b668449544f9dd36927","1c295155afd43c4478881cf6d7826a66eca4f549"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ebdcd7cba625039937ab5b668449544f9dd36927","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}