{"path":"lucene/core/src/test/org/apache/lucene/util/TestQueryBuilder#testCJKSynonymsPhrase().mjava","commits":[{"id":"c1c1dd5dce93e4fa48898dabc7e012560acda425","date":1381334364,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestQueryBuilder#testCJKSynonymsPhrase().mjava","pathOld":"/dev/null","sourceNew":"  /** forms multiphrase query */\n  public void testCJKSynonymsPhrase() throws Exception {\n    MultiPhraseQuery expected = new MultiPhraseQuery();\n    expected.add(new Term(\"field\", \"中\"));\n    expected.add(new Term[] { new Term(\"field\", \"国\"), new Term(\"field\", \"國\")});\n    QueryBuilder builder = new QueryBuilder(new MockCJKSynonymAnalyzer());\n    assertEquals(expected, builder.createPhraseQuery(\"field\", \"中国\"));\n    expected.setSlop(3);\n    assertEquals(expected, builder.createPhraseQuery(\"field\", \"中国\", 3));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92b4a131f1796dd57cc6698aae3d589d32a29deb","date":1457087316,"type":3,"author":"Luc Vanlerberghe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestQueryBuilder#testCJKSynonymsPhrase().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestQueryBuilder#testCJKSynonymsPhrase().mjava","sourceNew":"  /** forms multiphrase query */\n  public void testCJKSynonymsPhrase() throws Exception {\n    MultiPhraseQuery.Builder expectedBuilder = new MultiPhraseQuery.Builder();\n    expectedBuilder.add(new Term(\"field\", \"中\"));\n    expectedBuilder.add(new Term[] { new Term(\"field\", \"国\"), new Term(\"field\", \"國\")});\n    QueryBuilder builder = new QueryBuilder(new MockCJKSynonymAnalyzer());\n    assertEquals(expectedBuilder.build(), builder.createPhraseQuery(\"field\", \"中国\"));\n    expectedBuilder.setSlop(3);\n    assertEquals(expectedBuilder.build(), builder.createPhraseQuery(\"field\", \"中国\", 3));\n  }\n\n","sourceOld":"  /** forms multiphrase query */\n  public void testCJKSynonymsPhrase() throws Exception {\n    MultiPhraseQuery expected = new MultiPhraseQuery();\n    expected.add(new Term(\"field\", \"中\"));\n    expected.add(new Term[] { new Term(\"field\", \"国\"), new Term(\"field\", \"國\")});\n    QueryBuilder builder = new QueryBuilder(new MockCJKSynonymAnalyzer());\n    assertEquals(expected, builder.createPhraseQuery(\"field\", \"中国\"));\n    expected.setSlop(3);\n    assertEquals(expected, builder.createPhraseQuery(\"field\", \"中国\", 3));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestQueryBuilder#testCJKSynonymsPhrase().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestQueryBuilder#testCJKSynonymsPhrase().mjava","sourceNew":"  /** forms multiphrase query */\n  public void testCJKSynonymsPhrase() throws Exception {\n    MultiPhraseQuery.Builder expectedBuilder = new MultiPhraseQuery.Builder();\n    expectedBuilder.add(new Term(\"field\", \"中\"));\n    expectedBuilder.add(new Term[] { new Term(\"field\", \"国\"), new Term(\"field\", \"國\")});\n    QueryBuilder builder = new QueryBuilder(new MockCJKSynonymAnalyzer());\n    assertEquals(expectedBuilder.build(), builder.createPhraseQuery(\"field\", \"中国\"));\n    expectedBuilder.setSlop(3);\n    assertEquals(expectedBuilder.build(), builder.createPhraseQuery(\"field\", \"中国\", 3));\n  }\n\n","sourceOld":"  /** forms multiphrase query */\n  public void testCJKSynonymsPhrase() throws Exception {\n    MultiPhraseQuery expected = new MultiPhraseQuery();\n    expected.add(new Term(\"field\", \"中\"));\n    expected.add(new Term[] { new Term(\"field\", \"国\"), new Term(\"field\", \"國\")});\n    QueryBuilder builder = new QueryBuilder(new MockCJKSynonymAnalyzer());\n    assertEquals(expected, builder.createPhraseQuery(\"field\", \"中国\"));\n    expected.setSlop(3);\n    assertEquals(expected, builder.createPhraseQuery(\"field\", \"中国\", 3));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"92b4a131f1796dd57cc6698aae3d589d32a29deb":["c1c1dd5dce93e4fa48898dabc7e012560acda425"],"c1c1dd5dce93e4fa48898dabc7e012560acda425":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["c1c1dd5dce93e4fa48898dabc7e012560acda425","92b4a131f1796dd57cc6698aae3d589d32a29deb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"]},"commit2Childs":{"92b4a131f1796dd57cc6698aae3d589d32a29deb":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"c1c1dd5dce93e4fa48898dabc7e012560acda425":["92b4a131f1796dd57cc6698aae3d589d32a29deb","cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c1c1dd5dce93e4fa48898dabc7e012560acda425"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}