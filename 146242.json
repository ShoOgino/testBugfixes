{"path":"solr/core/src/java/org/apache/solr/update/processor/TolerantUpdateProcessor.FirstErrTracker#caught(Throwable).mjava","commits":[{"id":"f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef","date":1458928975,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/TolerantUpdateProcessor.FirstErrTracker#caught(Throwable).mjava","pathOld":"/dev/null","sourceNew":"    /** \n     * Call this method immediately anytime an exception is caught from a down stream method -- \n     * even if you are going to ignore it (for now).  If you plan to rethrow the Exception, use \n     * {@link #throwFirst} instead.\n     */\n    public void caught(Throwable t) {\n      assert null != t;\n      if (null == first) {\n        if (t instanceof SolrException) {\n          first = (SolrException)t;\n        } else {\n          first = new SolrException(ErrorCode.SERVER_ERROR, \"Tolerantly Caught Exception: \" + t.getMessage(), t);\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef"],"f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}