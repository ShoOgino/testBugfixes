{"path":"lucene/core/src/java/org/apache/lucene/search/ReqOptSumScorer#freq().mjava","commits":[{"id":"ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45","date":1342645458,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ReqOptSumScorer#freq().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public float freq() throws IOException {\n    // we might have deferred advance()\n    score();\n    return (optScorer != null && optScorer.docID() == reqScorer.docID()) ? 2 : 1;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ReqOptSumScorer#freq().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public float freq() throws IOException {\n    // we might have deferred advance()\n    score();\n    return (optScorer != null && optScorer.docID() == reqScorer.docID()) ? 2 : 1;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ReqOptSumScorer#freq().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public float freq() throws IOException {\n    // we might have deferred advance()\n    score();\n    return (optScorer != null && optScorer.docID() == reqScorer.docID()) ? 2 : 1;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05a9119f665d52b16e936bb48c5b836609aadbc5","date":1351605383,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ReqOptSumScorer#freq().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ReqOptSumScorer#freq().mjava","sourceNew":"  @Override\n  public int freq() throws IOException {\n    // we might have deferred advance()\n    score();\n    return (optScorer != null && optScorer.docID() == reqScorer.docID()) ? 2 : 1;\n  }\n\n","sourceOld":"  @Override\n  public float freq() throws IOException {\n    // we might have deferred advance()\n    score();\n    return (optScorer != null && optScorer.docID() == reqScorer.docID()) ? 2 : 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"757496f10c991c553a874f78fb06c3f0dc110dff","date":1351616733,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ReqOptSumScorer#freq().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ReqOptSumScorer#freq().mjava","sourceNew":"  @Override\n  public int freq() throws IOException {\n    // we might have deferred advance()\n    score();\n    return (optScorer != null && optScorer.docID() == reqScorer.docID()) ? 2 : 1;\n  }\n\n","sourceOld":"  @Override\n  public float freq() throws IOException {\n    // we might have deferred advance()\n    score();\n    return (optScorer != null && optScorer.docID() == reqScorer.docID()) ? 2 : 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dd748bb245633a8195281556bb0e68a6ea97d18","date":1449755030,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ReqOptSumScorer#freq().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ReqOptSumScorer#freq().mjava","sourceNew":"  @Override\n  public int freq() throws IOException {\n    // we might have deferred advance()\n    score();\n    return optIterator.docID() == reqScorer.docID() ? 2 : 1;\n  }\n\n","sourceOld":"  @Override\n  public int freq() throws IOException {\n    // we might have deferred advance()\n    score();\n    return (optScorer != null && optScorer.docID() == reqScorer.docID()) ? 2 : 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dc14da055888b63b4f8c922d0e1579f3cb315ad7","date":1510744456,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/ReqOptSumScorer#freq().mjava","sourceNew":null,"sourceOld":"  @Override\n  public int freq() throws IOException {\n    // we might have deferred advance()\n    score();\n    return optIterator.docID() == reqScorer.docID() ? 2 : 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45"],"dc14da055888b63b4f8c922d0e1579f3cb315ad7":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"757496f10c991c553a874f78fb06c3f0dc110dff":["ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45","05a9119f665d52b16e936bb48c5b836609aadbc5"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["757496f10c991c553a874f78fb06c3f0dc110dff"],"05a9119f665d52b16e936bb48c5b836609aadbc5":["ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dc14da055888b63b4f8c922d0e1579f3cb315ad7"]},"commit2Childs":{"aba371508186796cc6151d8223a5b4e16d02e26e":[],"dc14da055888b63b4f8c922d0e1579f3cb315ad7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","757496f10c991c553a874f78fb06c3f0dc110dff","05a9119f665d52b16e936bb48c5b836609aadbc5"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"757496f10c991c553a874f78fb06c3f0dc110dff":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["dc14da055888b63b4f8c922d0e1579f3cb315ad7"],"05a9119f665d52b16e936bb48c5b836609aadbc5":["757496f10c991c553a874f78fb06c3f0dc110dff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}