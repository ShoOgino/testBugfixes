{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTDocsEnum#reset(BytesRef,int).mjava","commits":[{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTDocsEnum#reset(BytesRef,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTDocsEnum#reset(BytesRef,Bits,int).mjava","sourceNew":"    public FSTDocsEnum reset(BytesRef bufferIn, int numDocs) {\n      assert numDocs > 0;\n      if (buffer.length < bufferIn.length) {\n        buffer = ArrayUtil.grow(buffer, bufferIn.length);\n      }\n      in.reset(buffer, 0, bufferIn.length);\n      System.arraycopy(bufferIn.bytes, bufferIn.offset, buffer, 0, bufferIn.length);\n      docID = -1;\n      accum = 0;\n      docUpto = 0;\n      freq = 1;\n      payloadLen = 0;\n      this.numDocs = numDocs;\n      return this;\n    }\n\n","sourceOld":"    public FSTDocsEnum reset(BytesRef bufferIn, Bits liveDocs, int numDocs) {\n      assert numDocs > 0;\n      if (buffer.length < bufferIn.length) {\n        buffer = ArrayUtil.grow(buffer, bufferIn.length);\n      }\n      in.reset(buffer, 0, bufferIn.length);\n      System.arraycopy(bufferIn.bytes, bufferIn.offset, buffer, 0, bufferIn.length);\n      this.liveDocs = liveDocs;\n      docID = -1;\n      accum = 0;\n      docUpto = 0;\n      freq = 1;\n      payloadLen = 0;\n      this.numDocs = numDocs;\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24f89e8a6aac05753cde4c83d62a74356098200d","date":1525768331,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTDocsEnum#reset(BytesRef,int).mjava","sourceNew":null,"sourceOld":"    public FSTDocsEnum reset(BytesRef bufferIn, int numDocs) {\n      assert numDocs > 0;\n      if (buffer.length < bufferIn.length) {\n        buffer = ArrayUtil.grow(buffer, bufferIn.length);\n      }\n      in.reset(buffer, 0, bufferIn.length);\n      System.arraycopy(bufferIn.bytes, bufferIn.offset, buffer, 0, bufferIn.length);\n      docID = -1;\n      accum = 0;\n      docUpto = 0;\n      freq = 1;\n      payloadLen = 0;\n      this.numDocs = numDocs;\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"24f89e8a6aac05753cde4c83d62a74356098200d":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["24f89e8a6aac05753cde4c83d62a74356098200d"]},"commit2Childs":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["24f89e8a6aac05753cde4c83d62a74356098200d"],"24f89e8a6aac05753cde4c83d62a74356098200d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}