{"path":"src/java/org/apache/lucene/store/FSDirectory#sync(String).mjava","commits":[{"id":"e82780afe6097066eb5befb86e9432f077667e3d","date":1202756169,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/FSDirectory#sync(String).mjava","pathOld":"/dev/null","sourceNew":"  public void sync(String name) throws IOException {\n    File fullFile = new File(directory, name);\n    boolean success = false;\n    int retryCount = 0;\n    IOException exc = null;\n    while(!success && retryCount < 5) {\n      retryCount++;\n      RandomAccessFile file = null;\n      try {\n        try {\n          file = new RandomAccessFile(fullFile, \"rw\");\n          file.getFD().sync();\n          success = true;\n        } finally {\n          if (file != null)\n            file.close();\n        }\n      } catch (IOException ioe) {\n        if (exc == null)\n          exc = ioe;\n        try {\n          // Pause 5 msec\n          Thread.sleep(5);\n        } catch (InterruptedException ie) {\n          Thread.currentThread().interrupt();\n        }\n      }\n    }\n    if (!success)\n      // Throw original exception\n      throw exc;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0bf957228b21d5093ca182ac6e90ce6da3eab00","date":1215682064,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/FSDirectory#sync(String).mjava","pathOld":"src/java/org/apache/lucene/store/FSDirectory#sync(String).mjava","sourceNew":"  public void sync(String name) throws IOException {\n    ensureOpen();\n    File fullFile = new File(directory, name);\n    boolean success = false;\n    int retryCount = 0;\n    IOException exc = null;\n    while(!success && retryCount < 5) {\n      retryCount++;\n      RandomAccessFile file = null;\n      try {\n        try {\n          file = new RandomAccessFile(fullFile, \"rw\");\n          file.getFD().sync();\n          success = true;\n        } finally {\n          if (file != null)\n            file.close();\n        }\n      } catch (IOException ioe) {\n        if (exc == null)\n          exc = ioe;\n        try {\n          // Pause 5 msec\n          Thread.sleep(5);\n        } catch (InterruptedException ie) {\n          Thread.currentThread().interrupt();\n        }\n      }\n    }\n    if (!success)\n      // Throw original exception\n      throw exc;\n  }\n\n","sourceOld":"  public void sync(String name) throws IOException {\n    File fullFile = new File(directory, name);\n    boolean success = false;\n    int retryCount = 0;\n    IOException exc = null;\n    while(!success && retryCount < 5) {\n      retryCount++;\n      RandomAccessFile file = null;\n      try {\n        try {\n          file = new RandomAccessFile(fullFile, \"rw\");\n          file.getFD().sync();\n          success = true;\n        } finally {\n          if (file != null)\n            file.close();\n        }\n      } catch (IOException ioe) {\n        if (exc == null)\n          exc = ioe;\n        try {\n          // Pause 5 msec\n          Thread.sleep(5);\n        } catch (InterruptedException ie) {\n          Thread.currentThread().interrupt();\n        }\n      }\n    }\n    if (!success)\n      // Throw original exception\n      throw exc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba7fd1181f778e9954547e8e6a47587ebf08e3fb","date":1238267455,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/FSDirectory#sync(String).mjava","pathOld":"src/java/org/apache/lucene/store/FSDirectory#sync(String).mjava","sourceNew":"  public void sync(String name) throws IOException {\n    ensureOpen();\n    File fullFile = new File(directory, name);\n    boolean success = false;\n    int retryCount = 0;\n    IOException exc = null;\n    while(!success && retryCount < 5) {\n      retryCount++;\n      RandomAccessFile file = null;\n      try {\n        try {\n          file = new RandomAccessFile(fullFile, \"rw\");\n          file.getFD().sync();\n          success = true;\n        } finally {\n          if (file != null)\n            file.close();\n        }\n      } catch (IOException ioe) {\n        if (exc == null)\n          exc = ioe;\n        try {\n          // Pause 5 msec\n          Thread.sleep(5);\n        } catch (InterruptedException ie) {\n          // In 3.0 we will change this to throw\n          // InterruptedException instead\n          Thread.currentThread().interrupt();\n          throw new RuntimeException(ie);\n        }\n      }\n    }\n    if (!success)\n      // Throw original exception\n      throw exc;\n  }\n\n","sourceOld":"  public void sync(String name) throws IOException {\n    ensureOpen();\n    File fullFile = new File(directory, name);\n    boolean success = false;\n    int retryCount = 0;\n    IOException exc = null;\n    while(!success && retryCount < 5) {\n      retryCount++;\n      RandomAccessFile file = null;\n      try {\n        try {\n          file = new RandomAccessFile(fullFile, \"rw\");\n          file.getFD().sync();\n          success = true;\n        } finally {\n          if (file != null)\n            file.close();\n        }\n      } catch (IOException ioe) {\n        if (exc == null)\n          exc = ioe;\n        try {\n          // Pause 5 msec\n          Thread.sleep(5);\n        } catch (InterruptedException ie) {\n          Thread.currentThread().interrupt();\n        }\n      }\n    }\n    if (!success)\n      // Throw original exception\n      throw exc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/FSDirectory#sync(String).mjava","pathOld":"src/java/org/apache/lucene/store/FSDirectory#sync(String).mjava","sourceNew":"  @Override\n  public void sync(String name) throws IOException {\n    ensureOpen();\n    File fullFile = new File(directory, name);\n    boolean success = false;\n    int retryCount = 0;\n    IOException exc = null;\n    while(!success && retryCount < 5) {\n      retryCount++;\n      RandomAccessFile file = null;\n      try {\n        try {\n          file = new RandomAccessFile(fullFile, \"rw\");\n          file.getFD().sync();\n          success = true;\n        } finally {\n          if (file != null)\n            file.close();\n        }\n      } catch (IOException ioe) {\n        if (exc == null)\n          exc = ioe;\n        try {\n          // Pause 5 msec\n          Thread.sleep(5);\n        } catch (InterruptedException ie) {\n          // In 3.0 we will change this to throw\n          // InterruptedException instead\n          Thread.currentThread().interrupt();\n          throw new RuntimeException(ie);\n        }\n      }\n    }\n    if (!success)\n      // Throw original exception\n      throw exc;\n  }\n\n","sourceOld":"  public void sync(String name) throws IOException {\n    ensureOpen();\n    File fullFile = new File(directory, name);\n    boolean success = false;\n    int retryCount = 0;\n    IOException exc = null;\n    while(!success && retryCount < 5) {\n      retryCount++;\n      RandomAccessFile file = null;\n      try {\n        try {\n          file = new RandomAccessFile(fullFile, \"rw\");\n          file.getFD().sync();\n          success = true;\n        } finally {\n          if (file != null)\n            file.close();\n        }\n      } catch (IOException ioe) {\n        if (exc == null)\n          exc = ioe;\n        try {\n          // Pause 5 msec\n          Thread.sleep(5);\n        } catch (InterruptedException ie) {\n          // In 3.0 we will change this to throw\n          // InterruptedException instead\n          Thread.currentThread().interrupt();\n          throw new RuntimeException(ie);\n        }\n      }\n    }\n    if (!success)\n      // Throw original exception\n      throw exc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa4b66eb16ead894fa7130904af6ecf34331f050","date":1258198413,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/FSDirectory#sync(String).mjava","pathOld":"src/java/org/apache/lucene/store/FSDirectory#sync(String).mjava","sourceNew":"  @Override\n  public void sync(String name) throws IOException {\n    ensureOpen();\n    File fullFile = new File(directory, name);\n    boolean success = false;\n    int retryCount = 0;\n    IOException exc = null;\n    while(!success && retryCount < 5) {\n      retryCount++;\n      RandomAccessFile file = null;\n      try {\n        try {\n          file = new RandomAccessFile(fullFile, \"rw\");\n          file.getFD().sync();\n          success = true;\n        } finally {\n          if (file != null)\n            file.close();\n        }\n      } catch (IOException ioe) {\n        if (exc == null)\n          exc = ioe;\n        try {\n          // Pause 5 msec\n          Thread.sleep(5);\n        } catch (InterruptedException ie) {\n          throw new ThreadInterruptedException(ie);\n        }\n      }\n    }\n    if (!success)\n      // Throw original exception\n      throw exc;\n  }\n\n","sourceOld":"  @Override\n  public void sync(String name) throws IOException {\n    ensureOpen();\n    File fullFile = new File(directory, name);\n    boolean success = false;\n    int retryCount = 0;\n    IOException exc = null;\n    while(!success && retryCount < 5) {\n      retryCount++;\n      RandomAccessFile file = null;\n      try {\n        try {\n          file = new RandomAccessFile(fullFile, \"rw\");\n          file.getFD().sync();\n          success = true;\n        } finally {\n          if (file != null)\n            file.close();\n        }\n      } catch (IOException ioe) {\n        if (exc == null)\n          exc = ioe;\n        try {\n          // Pause 5 msec\n          Thread.sleep(5);\n        } catch (InterruptedException ie) {\n          // In 3.0 we will change this to throw\n          // InterruptedException instead\n          Thread.currentThread().interrupt();\n          throw new RuntimeException(ie);\n        }\n      }\n    }\n    if (!success)\n      // Throw original exception\n      throw exc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/FSDirectory#sync(String).mjava","pathOld":"src/java/org/apache/lucene/store/FSDirectory#sync(String).mjava","sourceNew":"  @Override\n  public void sync(String name) throws IOException {\n    ensureOpen();\n    File fullFile = new File(directory, name);\n    boolean success = false;\n    int retryCount = 0;\n    IOException exc = null;\n    while(!success && retryCount < 5) {\n      retryCount++;\n      RandomAccessFile file = null;\n      try {\n        try {\n          file = new RandomAccessFile(fullFile, \"rw\");\n          file.getFD().sync();\n          success = true;\n        } finally {\n          if (file != null)\n            file.close();\n        }\n      } catch (IOException ioe) {\n        if (exc == null)\n          exc = ioe;\n        try {\n          // Pause 5 msec\n          Thread.sleep(5);\n        } catch (InterruptedException ie) {\n          throw new ThreadInterruptedException(ie);\n        }\n      }\n    }\n    if (!success)\n      // Throw original exception\n      throw exc;\n  }\n\n","sourceOld":"  @Override\n  public void sync(String name) throws IOException {\n    ensureOpen();\n    File fullFile = new File(directory, name);\n    boolean success = false;\n    int retryCount = 0;\n    IOException exc = null;\n    while(!success && retryCount < 5) {\n      retryCount++;\n      RandomAccessFile file = null;\n      try {\n        try {\n          file = new RandomAccessFile(fullFile, \"rw\");\n          file.getFD().sync();\n          success = true;\n        } finally {\n          if (file != null)\n            file.close();\n        }\n      } catch (IOException ioe) {\n        if (exc == null)\n          exc = ioe;\n        try {\n          // Pause 5 msec\n          Thread.sleep(5);\n        } catch (InterruptedException ie) {\n          throw new ThreadInterruptedException(ie);\n        }\n      }\n    }\n    if (!success)\n      // Throw original exception\n      throw exc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8a9e385641d717e641408d8fbbc62be8fc766357":["ba7fd1181f778e9954547e8e6a47587ebf08e3fb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0bf957228b21d5093ca182ac6e90ce6da3eab00":["e82780afe6097066eb5befb86e9432f077667e3d"],"e82780afe6097066eb5befb86e9432f077667e3d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aa4b66eb16ead894fa7130904af6ecf34331f050":["8a9e385641d717e641408d8fbbc62be8fc766357"],"ba7fd1181f778e9954547e8e6a47587ebf08e3fb":["d0bf957228b21d5093ca182ac6e90ce6da3eab00"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["aa4b66eb16ead894fa7130904af6ecf34331f050"]},"commit2Childs":{"8a9e385641d717e641408d8fbbc62be8fc766357":["aa4b66eb16ead894fa7130904af6ecf34331f050"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e82780afe6097066eb5befb86e9432f077667e3d"],"d0bf957228b21d5093ca182ac6e90ce6da3eab00":["ba7fd1181f778e9954547e8e6a47587ebf08e3fb"],"e82780afe6097066eb5befb86e9432f077667e3d":["d0bf957228b21d5093ca182ac6e90ce6da3eab00"],"ba7fd1181f778e9954547e8e6a47587ebf08e3fb":["8a9e385641d717e641408d8fbbc62be8fc766357"],"aa4b66eb16ead894fa7130904af6ecf34331f050":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}