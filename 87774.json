{"path":"lucene/facet/src/java/org/apache/lucene/facet/search/TotalFacetCountsCache#computeAndCache(TFCKey,CategoryListCache).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/TotalFacetCountsCache#computeAndCache(TFCKey,CategoryListCache).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/search/TotalFacetCountsCache#computeAndCache(TFCKey,CategoryListCache).mjava","sourceNew":"  /**\n   * compute TFC and cache it, after verifying it was not just added - for this\n   * matter this method is synchronized, which is not too bad, because there is\n   * lots of work done in the computations.\n   */\n  private synchronized TotalFacetCounts computeAndCache(TFCKey key, CategoryListCache clCache) throws IOException {\n    TotalFacetCounts tfc = cache.get(key); \n    if (tfc == null) {\n      tfc = TotalFacetCounts.compute(key.indexReader, key.taxonomy, key.facetIndexingParams, clCache);\n      lruKeys.add(key);\n      cache.put(key,tfc);\n      trimCache();\n    }\n    return tfc;\n  }\n\n","sourceOld":"  /**\n   * compute TFC and cache it, after verifying it was not just added - for this\n   * matter this method is synchronized, which is not too bad, because there is\n   * lots of work done in the computations.\n   */\n  private synchronized TotalFacetCounts computeAndCache(TFCKey key, CategoryListCache clCache) throws IOException {\n    TotalFacetCounts tfc = cache.get(key); \n    if (tfc == null) {\n      tfc = TotalFacetCounts.compute(key.indexReader, key.taxonomy, key.facetIndexingParams, clCache);\n      lruKeys.add(key);\n      cache.put(key,tfc);\n      trimCache();\n    }\n    return tfc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c2cd18c7da6f499a33f06fc89c07a463ec074c0","date":1358329431,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/TotalFacetCountsCache#computeAndCache(TFCKey).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/TotalFacetCountsCache#computeAndCache(TFCKey,CategoryListCache).mjava","sourceNew":"  /**\n   * compute TFC and cache it, after verifying it was not just added - for this\n   * matter this method is synchronized, which is not too bad, because there is\n   * lots of work done in the computations.\n   */\n  private synchronized TotalFacetCounts computeAndCache(TFCKey key) throws IOException {\n    TotalFacetCounts tfc = cache.get(key); \n    if (tfc == null) {\n      tfc = TotalFacetCounts.compute(key.indexReader, key.taxonomy, key.facetIndexingParams);\n      lruKeys.add(key);\n      cache.put(key,tfc);\n      trimCache();\n    }\n    return tfc;\n  }\n\n","sourceOld":"  /**\n   * compute TFC and cache it, after verifying it was not just added - for this\n   * matter this method is synchronized, which is not too bad, because there is\n   * lots of work done in the computations.\n   */\n  private synchronized TotalFacetCounts computeAndCache(TFCKey key, CategoryListCache clCache) throws IOException {\n    TotalFacetCounts tfc = cache.get(key); \n    if (tfc == null) {\n      tfc = TotalFacetCounts.compute(key.indexReader, key.taxonomy, key.facetIndexingParams, clCache);\n      lruKeys.add(key);\n      cache.put(key,tfc);\n      trimCache();\n    }\n    return tfc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4015cd39dff8d4dec562d909f9766debac53aa6","date":1358548736,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/TotalFacetCountsCache#computeAndCache(TFCKey).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/TotalFacetCountsCache#computeAndCache(TFCKey,CategoryListCache).mjava","sourceNew":"  /**\n   * compute TFC and cache it, after verifying it was not just added - for this\n   * matter this method is synchronized, which is not too bad, because there is\n   * lots of work done in the computations.\n   */\n  private synchronized TotalFacetCounts computeAndCache(TFCKey key) throws IOException {\n    TotalFacetCounts tfc = cache.get(key); \n    if (tfc == null) {\n      tfc = TotalFacetCounts.compute(key.indexReader, key.taxonomy, key.facetIndexingParams);\n      lruKeys.add(key);\n      cache.put(key,tfc);\n      trimCache();\n    }\n    return tfc;\n  }\n\n","sourceOld":"  /**\n   * compute TFC and cache it, after verifying it was not just added - for this\n   * matter this method is synchronized, which is not too bad, because there is\n   * lots of work done in the computations.\n   */\n  private synchronized TotalFacetCounts computeAndCache(TFCKey key, CategoryListCache clCache) throws IOException {\n    TotalFacetCounts tfc = cache.get(key); \n    if (tfc == null) {\n      tfc = TotalFacetCounts.compute(key.indexReader, key.taxonomy, key.facetIndexingParams, clCache);\n      lruKeys.add(key);\n      cache.put(key,tfc);\n      trimCache();\n    }\n    return tfc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c4015cd39dff8d4dec562d909f9766debac53aa6":["b89678825b68eccaf09e6ab71675fc0b0af1e099","6c2cd18c7da6f499a33f06fc89c07a463ec074c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6c2cd18c7da6f499a33f06fc89c07a463ec074c0":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6c2cd18c7da6f499a33f06fc89c07a463ec074c0"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["c4015cd39dff8d4dec562d909f9766debac53aa6","6c2cd18c7da6f499a33f06fc89c07a463ec074c0"],"c4015cd39dff8d4dec562d909f9766debac53aa6":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"6c2cd18c7da6f499a33f06fc89c07a463ec074c0":["c4015cd39dff8d4dec562d909f9766debac53aa6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c4015cd39dff8d4dec562d909f9766debac53aa6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}