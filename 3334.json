{"path":"solr/solrj/src/java/org/apache/solr/common/util/JsonTextWriter#writeMap(String,Map,boolean,boolean).mjava","commits":[{"id":"26dad91f15019714a045b4d8c5f40162b2058b54","date":1528551655,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonTextWriter#writeMap(String,Map,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/JSONWriter#writeMap(String,Map,boolean,boolean).mjava","sourceNew":"  default void writeMap(String name, Map val, boolean excludeOuter, boolean isFirstVal) throws IOException {\n    if (!excludeOuter) {\n      writeMapOpener(val.size());\n      incLevel();\n      isFirstVal = true;\n    }\n\n    boolean doIndent = excludeOuter || val.size() > 1;\n\n    for (Map.Entry entry : (Set<Map.Entry>) val.entrySet()) {\n      Object e = entry.getKey();\n      String k = e == null ? \"\" : e.toString();\n      Object v = entry.getValue();\n\n      if (isFirstVal) {\n        isFirstVal = false;\n      } else {\n        writeMapSeparator();\n      }\n\n      if (doIndent) indent();\n      writeKey(k, true);\n      writeVal(k, v);\n    }\n\n    if (!excludeOuter) {\n      decLevel();\n      writeMapCloser();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void writeMap(String name, Map val, boolean excludeOuter, boolean isFirstVal) throws IOException {\n    if (!excludeOuter) {\n      writeMapOpener(val.size());\n      incLevel();\n      isFirstVal=true;\n    }\n\n    boolean doIndent = excludeOuter || val.size() > 1;\n\n    for (Map.Entry entry : (Set<Map.Entry>)val.entrySet()) {\n      Object e = entry.getKey();\n      String k = e==null ? \"\" : e.toString();\n      Object v = entry.getValue();\n\n      if (isFirstVal) {\n        isFirstVal=false;\n      } else {\n        writeMapSeparator();\n      }\n\n      if (doIndent) indent();\n      writeKey(k,true);\n      writeVal(k,v);\n    }\n\n    if (!excludeOuter) {\n      decLevel();\n      writeMapCloser();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":0,"author":"Michael Braun","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonTextWriter#writeMap(String,Map,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  default void writeMap(String name, Map val, boolean excludeOuter, boolean isFirstVal) throws IOException {\n    if (!excludeOuter) {\n      writeMapOpener(val.size());\n      incLevel();\n      isFirstVal = true;\n    }\n\n    boolean doIndent = excludeOuter || val.size() > 1;\n\n    for (Map.Entry entry : (Set<Map.Entry>) val.entrySet()) {\n      Object e = entry.getKey();\n      String k = e == null ? \"\" : e.toString();\n      Object v = entry.getValue();\n\n      if (isFirstVal) {\n        isFirstVal = false;\n      } else {\n        writeMapSeparator();\n      }\n\n      if (doIndent) indent();\n      writeKey(k, true);\n      writeVal(k, v);\n    }\n\n    if (!excludeOuter) {\n      decLevel();\n      writeMapCloser();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":0,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonTextWriter#writeMap(String,Map,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  default void writeMap(String name, Map val, boolean excludeOuter, boolean isFirstVal) throws IOException {\n    if (!excludeOuter) {\n      writeMapOpener(val.size());\n      incLevel();\n      isFirstVal = true;\n    }\n\n    boolean doIndent = excludeOuter || val.size() > 1;\n\n    for (Map.Entry entry : (Set<Map.Entry>) val.entrySet()) {\n      Object e = entry.getKey();\n      String k = e == null ? \"\" : e.toString();\n      Object v = entry.getValue();\n\n      if (isFirstVal) {\n        isFirstVal = false;\n      } else {\n        writeMapSeparator();\n      }\n\n      if (doIndent) indent();\n      writeKey(k, true);\n      writeVal(k, v);\n    }\n\n    if (!excludeOuter) {\n      decLevel();\n      writeMapCloser();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonTextWriter#writeMap(String,Map,boolean,boolean).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonTextWriter#writeMap(String,Map,boolean,boolean).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  default void writeMap(String name, Map val, boolean excludeOuter, boolean isFirstVal) throws IOException {\n    if (!excludeOuter) {\n      writeMapOpener(val.size());\n      incLevel();\n      isFirstVal = true;\n    }\n\n    boolean doIndent = excludeOuter || val.size() > 1;\n\n    for (Map.Entry entry : (Set<Map.Entry>) val.entrySet()) {\n      Object e = entry.getKey();\n      String k = e == null ? \"\" : e.toString();\n      Object v = entry.getValue();\n\n      if (isFirstVal) {\n        isFirstVal = false;\n      } else {\n        writeMapSeparator();\n      }\n\n      if (doIndent) indent();\n      writeKey(k, true);\n      writeVal(k, v);\n    }\n\n    if (!excludeOuter) {\n      decLevel();\n      writeMapCloser();\n    }\n  }\n\n","sourceOld":"  default void writeMap(String name, Map val, boolean excludeOuter, boolean isFirstVal) throws IOException {\n    if (!excludeOuter) {\n      writeMapOpener(val.size());\n      incLevel();\n      isFirstVal = true;\n    }\n\n    boolean doIndent = excludeOuter || val.size() > 1;\n\n    for (Map.Entry entry : (Set<Map.Entry>) val.entrySet()) {\n      Object e = entry.getKey();\n      String k = e == null ? \"\" : e.toString();\n      Object v = entry.getValue();\n\n      if (isFirstVal) {\n        isFirstVal = false;\n      } else {\n        writeMapSeparator();\n      }\n\n      if (doIndent) indent();\n      writeKey(k, true);\n      writeVal(k, v);\n    }\n\n    if (!excludeOuter) {\n      decLevel();\n      writeMapCloser();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonTextWriter#writeMap(String,Map,boolean,boolean).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonTextWriter#writeMap(String,Map,boolean,boolean).mjava","sourceNew":"  default void writeMap(String name, Map val, boolean excludeOuter, boolean isFirstVal) throws IOException {\n    if (!excludeOuter) {\n      writeMapOpener(val.size());\n      incLevel();\n      isFirstVal = true;\n    }\n\n    boolean doIndent = excludeOuter || val.size() > 1;\n\n    for (Map.Entry entry : (Set<Map.Entry>) val.entrySet()) {\n      Object e = entry.getKey();\n      String k = e == null ? \"\" : e.toString();\n      Object v = entry.getValue();\n\n      if (isFirstVal) {\n        isFirstVal = false;\n      } else {\n        writeMapSeparator();\n      }\n\n      if (doIndent) indent();\n      writeKey(k, true);\n      writeVal(k, v);\n    }\n\n    if (!excludeOuter) {\n      decLevel();\n      writeMapCloser();\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  default void writeMap(String name, Map val, boolean excludeOuter, boolean isFirstVal) throws IOException {\n    if (!excludeOuter) {\n      writeMapOpener(val.size());\n      incLevel();\n      isFirstVal = true;\n    }\n\n    boolean doIndent = excludeOuter || val.size() > 1;\n\n    for (Map.Entry entry : (Set<Map.Entry>) val.entrySet()) {\n      Object e = entry.getKey();\n      String k = e == null ? \"\" : e.toString();\n      Object v = entry.getValue();\n\n      if (isFirstVal) {\n        isFirstVal = false;\n      } else {\n        writeMapSeparator();\n      }\n\n      if (doIndent) indent();\n      writeKey(k, true);\n      writeVal(k, v);\n    }\n\n    if (!excludeOuter) {\n      decLevel();\n      writeMapCloser();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76","date":1591450217,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonTextWriter#writeMap(String,Map,boolean,boolean).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonTextWriter#writeMap(String,Map,boolean,boolean).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  default void writeMap(String name, Map val, boolean excludeOuter, boolean isFirstVal) throws IOException {\n    if (!excludeOuter) {\n      writeMapOpener(val.size());\n      incLevel();\n      isFirstVal = true;\n    }\n\n    boolean doIndent = excludeOuter || val.size() > 1;\n\n    for (Map.Entry entry : (Set<Map.Entry>) val.entrySet()) {\n      Object e = entry.getKey();\n      String k = e == null ? \"\" : e.toString();\n      Object v = entry.getValue();\n\n      if (isFirstVal) {\n        isFirstVal = false;\n      } else {\n        writeMapSeparator();\n      }\n\n      if (doIndent) indent();\n      writeKey(k, true);\n      writeVal(k, v);\n    }\n\n    if (!excludeOuter) {\n      decLevel();\n      writeMapCloser();\n    }\n  }\n\n","sourceOld":"  default void writeMap(String name, Map val, boolean excludeOuter, boolean isFirstVal) throws IOException {\n    if (!excludeOuter) {\n      writeMapOpener(val.size());\n      incLevel();\n      isFirstVal = true;\n    }\n\n    boolean doIndent = excludeOuter || val.size() > 1;\n\n    for (Map.Entry entry : (Set<Map.Entry>) val.entrySet()) {\n      Object e = entry.getKey();\n      String k = e == null ? \"\" : e.toString();\n      Object v = entry.getValue();\n\n      if (isFirstVal) {\n        isFirstVal = false;\n      } else {\n        writeMapSeparator();\n      }\n\n      if (doIndent) indent();\n      writeKey(k, true);\n      writeVal(k, v);\n    }\n\n    if (!excludeOuter) {\n      decLevel();\n      writeMapCloser();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","26dad91f15019714a045b4d8c5f40162b2058b54"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["26dad91f15019714a045b4d8c5f40162b2058b54"],"26dad91f15019714a045b4d8c5f40162b2058b54":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","26dad91f15019714a045b4d8c5f40162b2058b54"]},"commit2Childs":{"8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"26dad91f15019714a045b4d8c5f40162b2058b54":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","26dad91f15019714a045b4d8c5f40162b2058b54","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}