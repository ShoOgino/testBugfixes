{"path":"lucene/highlighter/src/java/org/apache/lucene/search/postingshighlight/PostingsHighlighter#highlightField(String,String[],BreakIterator,BytesRef[],int[],List[AtomicReaderContext],int).mjava","commits":[{"id":"4831dd345148fcd7c33877b449ade21fc45459d8","date":1363963811,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/postingshighlight/PostingsHighlighter#highlightField(String,String[],BreakIterator,BytesRef[],int[],List[AtomicReaderContext],int).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/postingshighlight/PostingsHighlighter#highlightField(String,String[],BreakIterator,Term[],int[],List[AtomicReaderContext],int).mjava","sourceNew":"  private Map<Integer,String> highlightField(String field, String contents[], BreakIterator bi, BytesRef terms[], int[] docids, List<AtomicReaderContext> leaves, int maxPassages) throws IOException {  \n    Map<Integer,String> highlights = new HashMap<Integer,String>();\n    \n    // reuse in the real sense... for docs in same segment we just advance our old enum\n    DocsAndPositionsEnum postings[] = null;\n    TermsEnum termsEnum = null;\n    int lastLeaf = -1;\n\n    PassageFormatter fieldFormatter = getFormatter(field);\n    if (fieldFormatter == null) {\n      throw new NullPointerException(\"PassageFormatter cannot be null\");\n    }\n\n    for (int i = 0; i < docids.length; i++) {\n      String content = contents[i];\n      if (content.length() == 0) {\n        continue; // nothing to do\n      }\n      bi.setText(content);\n      int doc = docids[i];\n      int leaf = ReaderUtil.subIndex(doc, leaves);\n      AtomicReaderContext subContext = leaves.get(leaf);\n      AtomicReader r = subContext.reader();\n      Terms t = r.terms(field);\n      if (t == null) {\n        continue; // nothing to do\n      }\n      if (leaf != lastLeaf) {\n        termsEnum = t.iterator(null);\n        postings = new DocsAndPositionsEnum[terms.length];\n      }\n      Passage passages[] = highlightDoc(field, terms, content.length(), bi, doc - subContext.docBase, termsEnum, postings, maxPassages);\n      if (passages.length == 0) {\n        passages = getEmptyHighlight(field, bi, maxPassages);\n      }\n      if (passages.length > 0) {\n        // otherwise a null snippet (eg if field is missing\n        // entirely from the doc)\n        highlights.put(doc, fieldFormatter.format(passages, content));\n      }\n      lastLeaf = leaf;\n    }\n    \n    return highlights;\n  }\n\n","sourceOld":"  private Map<Integer,String> highlightField(String field, String contents[], BreakIterator bi, Term terms[], int[] docids, List<AtomicReaderContext> leaves, int maxPassages) throws IOException {  \n    Map<Integer,String> highlights = new HashMap<Integer,String>();\n    \n    // reuse in the real sense... for docs in same segment we just advance our old enum\n    DocsAndPositionsEnum postings[] = null;\n    TermsEnum termsEnum = null;\n    int lastLeaf = -1;\n\n    for (int i = 0; i < docids.length; i++) {\n      String content = contents[i];\n      if (content.length() == 0) {\n        continue; // nothing to do\n      }\n      bi.setText(content);\n      int doc = docids[i];\n      int leaf = ReaderUtil.subIndex(doc, leaves);\n      AtomicReaderContext subContext = leaves.get(leaf);\n      AtomicReader r = subContext.reader();\n      Terms t = r.terms(field);\n      if (t == null) {\n        continue; // nothing to do\n      }\n      if (leaf != lastLeaf) {\n        termsEnum = t.iterator(null);\n        postings = new DocsAndPositionsEnum[terms.length];\n      }\n      Passage passages[] = highlightDoc(field, terms, content.length(), bi, doc - subContext.docBase, termsEnum, postings, maxPassages);\n      if (passages.length == 0) {\n        passages = getEmptyHighlight(field, bi, maxPassages);\n      }\n      if (passages.length > 0) {\n        // otherwise a null snippet (eg if field is missing\n        // entirely from the doc)\n        highlights.put(doc, formatter.format(passages, content));\n      }\n      lastLeaf = leaf;\n    }\n    \n    return highlights;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b93d3a9b49519a58eab214c690c3df946003b9b5","date":1379000095,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/postingshighlight/PostingsHighlighter#highlightField(String,String[],BreakIterator,BytesRef[],int[],List[AtomicReaderContext],int).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/postingshighlight/PostingsHighlighter#highlightField(String,String[],BreakIterator,BytesRef[],int[],List[AtomicReaderContext],int).mjava","sourceNew":"  private Map<Integer,Object> highlightField(String field, String contents[], BreakIterator bi, BytesRef terms[], int[] docids, List<AtomicReaderContext> leaves, int maxPassages) throws IOException {  \n    Map<Integer,Object> highlights = new HashMap<Integer,Object>();\n    \n    // reuse in the real sense... for docs in same segment we just advance our old enum\n    DocsAndPositionsEnum postings[] = null;\n    TermsEnum termsEnum = null;\n    int lastLeaf = -1;\n\n    PassageFormatter fieldFormatter = getFormatter(field);\n    if (fieldFormatter == null) {\n      throw new NullPointerException(\"PassageFormatter cannot be null\");\n    }\n\n    for (int i = 0; i < docids.length; i++) {\n      String content = contents[i];\n      if (content.length() == 0) {\n        continue; // nothing to do\n      }\n      bi.setText(content);\n      int doc = docids[i];\n      int leaf = ReaderUtil.subIndex(doc, leaves);\n      AtomicReaderContext subContext = leaves.get(leaf);\n      AtomicReader r = subContext.reader();\n      Terms t = r.terms(field);\n      if (t == null) {\n        continue; // nothing to do\n      }\n      if (leaf != lastLeaf) {\n        termsEnum = t.iterator(null);\n        postings = new DocsAndPositionsEnum[terms.length];\n      }\n      Passage passages[] = highlightDoc(field, terms, content.length(), bi, doc - subContext.docBase, termsEnum, postings, maxPassages);\n      if (passages.length == 0) {\n        passages = getEmptyHighlight(field, bi, maxPassages);\n      }\n      if (passages.length > 0) {\n        // otherwise a null snippet (eg if field is missing\n        // entirely from the doc)\n        highlights.put(doc, fieldFormatter.format(passages, content));\n      }\n      lastLeaf = leaf;\n    }\n    \n    return highlights;\n  }\n\n","sourceOld":"  private Map<Integer,String> highlightField(String field, String contents[], BreakIterator bi, BytesRef terms[], int[] docids, List<AtomicReaderContext> leaves, int maxPassages) throws IOException {  \n    Map<Integer,String> highlights = new HashMap<Integer,String>();\n    \n    // reuse in the real sense... for docs in same segment we just advance our old enum\n    DocsAndPositionsEnum postings[] = null;\n    TermsEnum termsEnum = null;\n    int lastLeaf = -1;\n\n    PassageFormatter fieldFormatter = getFormatter(field);\n    if (fieldFormatter == null) {\n      throw new NullPointerException(\"PassageFormatter cannot be null\");\n    }\n\n    for (int i = 0; i < docids.length; i++) {\n      String content = contents[i];\n      if (content.length() == 0) {\n        continue; // nothing to do\n      }\n      bi.setText(content);\n      int doc = docids[i];\n      int leaf = ReaderUtil.subIndex(doc, leaves);\n      AtomicReaderContext subContext = leaves.get(leaf);\n      AtomicReader r = subContext.reader();\n      Terms t = r.terms(field);\n      if (t == null) {\n        continue; // nothing to do\n      }\n      if (leaf != lastLeaf) {\n        termsEnum = t.iterator(null);\n        postings = new DocsAndPositionsEnum[terms.length];\n      }\n      Passage passages[] = highlightDoc(field, terms, content.length(), bi, doc - subContext.docBase, termsEnum, postings, maxPassages);\n      if (passages.length == 0) {\n        passages = getEmptyHighlight(field, bi, maxPassages);\n      }\n      if (passages.length > 0) {\n        // otherwise a null snippet (eg if field is missing\n        // entirely from the doc)\n        highlights.put(doc, fieldFormatter.format(passages, content));\n      }\n      lastLeaf = leaf;\n    }\n    \n    return highlights;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd81b1d062b9688a18721a1adfc489577479856a","date":1390711758,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/postingshighlight/PostingsHighlighter#highlightField(String,String[],BreakIterator,BytesRef[],int[],List[AtomicReaderContext],int,Query).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/postingshighlight/PostingsHighlighter#highlightField(String,String[],BreakIterator,BytesRef[],int[],List[AtomicReaderContext],int).mjava","sourceNew":"  private Map<Integer,Object> highlightField(String field, String contents[], BreakIterator bi, BytesRef terms[], int[] docids, List<AtomicReaderContext> leaves, int maxPassages, Query query) throws IOException {  \n    Map<Integer,Object> highlights = new HashMap<Integer,Object>();\n    \n    // reuse in the real sense... for docs in same segment we just advance our old enum\n    DocsAndPositionsEnum postings[] = null;\n    TermsEnum termsEnum = null;\n    int lastLeaf = -1;\n\n    PassageFormatter fieldFormatter = getFormatter(field);\n    if (fieldFormatter == null) {\n      throw new NullPointerException(\"PassageFormatter cannot be null\");\n    }\n    \n    // check if we should do any multitermprocessing\n    Analyzer analyzer = getIndexAnalyzer(field);\n    CharacterRunAutomaton automata[] = new CharacterRunAutomaton[0];\n    if (analyzer != null) {\n      automata = MultiTermHighlighting.extractAutomata(query, field);\n    }\n    \n    final BytesRef allTerms[];\n    if (automata.length > 0) {\n      allTerms = new BytesRef[terms.length + 1];\n      System.arraycopy(terms, 0, allTerms, 0, terms.length);\n    } else {\n      allTerms = terms;\n    }\n\n    for (int i = 0; i < docids.length; i++) {\n      String content = contents[i];\n      if (content.length() == 0) {\n        continue; // nothing to do\n      }\n      bi.setText(content);\n      int doc = docids[i];\n      int leaf = ReaderUtil.subIndex(doc, leaves);\n      AtomicReaderContext subContext = leaves.get(leaf);\n      AtomicReader r = subContext.reader();\n      Terms t = r.terms(field);\n      if (t == null) {\n        continue; // nothing to do\n      }\n      if (leaf != lastLeaf) {\n        termsEnum = t.iterator(null);\n        postings = new DocsAndPositionsEnum[allTerms.length];\n      }\n      if (automata.length > 0) {\n        DocsAndPositionsEnum dp = MultiTermHighlighting.getDocsEnum(analyzer.tokenStream(field, content), automata);\n        dp.advance(doc - subContext.docBase);\n        postings[terms.length] = dp;\n      }\n      Passage passages[] = highlightDoc(field, allTerms, content.length(), bi, doc - subContext.docBase, termsEnum, postings, maxPassages);\n      if (passages.length == 0) {\n        passages = getEmptyHighlight(field, bi, maxPassages);\n      }\n      if (passages.length > 0) {\n        // otherwise a null snippet (eg if field is missing\n        // entirely from the doc)\n        highlights.put(doc, fieldFormatter.format(passages, content));\n      }\n      lastLeaf = leaf;\n    }\n    \n    return highlights;\n  }\n\n","sourceOld":"  private Map<Integer,Object> highlightField(String field, String contents[], BreakIterator bi, BytesRef terms[], int[] docids, List<AtomicReaderContext> leaves, int maxPassages) throws IOException {  \n    Map<Integer,Object> highlights = new HashMap<Integer,Object>();\n    \n    // reuse in the real sense... for docs in same segment we just advance our old enum\n    DocsAndPositionsEnum postings[] = null;\n    TermsEnum termsEnum = null;\n    int lastLeaf = -1;\n\n    PassageFormatter fieldFormatter = getFormatter(field);\n    if (fieldFormatter == null) {\n      throw new NullPointerException(\"PassageFormatter cannot be null\");\n    }\n\n    for (int i = 0; i < docids.length; i++) {\n      String content = contents[i];\n      if (content.length() == 0) {\n        continue; // nothing to do\n      }\n      bi.setText(content);\n      int doc = docids[i];\n      int leaf = ReaderUtil.subIndex(doc, leaves);\n      AtomicReaderContext subContext = leaves.get(leaf);\n      AtomicReader r = subContext.reader();\n      Terms t = r.terms(field);\n      if (t == null) {\n        continue; // nothing to do\n      }\n      if (leaf != lastLeaf) {\n        termsEnum = t.iterator(null);\n        postings = new DocsAndPositionsEnum[terms.length];\n      }\n      Passage passages[] = highlightDoc(field, terms, content.length(), bi, doc - subContext.docBase, termsEnum, postings, maxPassages);\n      if (passages.length == 0) {\n        passages = getEmptyHighlight(field, bi, maxPassages);\n      }\n      if (passages.length > 0) {\n        // otherwise a null snippet (eg if field is missing\n        // entirely from the doc)\n        highlights.put(doc, fieldFormatter.format(passages, content));\n      }\n      lastLeaf = leaf;\n    }\n    \n    return highlights;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4831dd345148fcd7c33877b449ade21fc45459d8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b93d3a9b49519a58eab214c690c3df946003b9b5":["4831dd345148fcd7c33877b449ade21fc45459d8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dd81b1d062b9688a18721a1adfc489577479856a":["b93d3a9b49519a58eab214c690c3df946003b9b5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dd81b1d062b9688a18721a1adfc489577479856a"]},"commit2Childs":{"4831dd345148fcd7c33877b449ade21fc45459d8":["b93d3a9b49519a58eab214c690c3df946003b9b5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4831dd345148fcd7c33877b449ade21fc45459d8"],"b93d3a9b49519a58eab214c690c3df946003b9b5":["dd81b1d062b9688a18721a1adfc489577479856a"],"dd81b1d062b9688a18721a1adfc489577479856a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}