{"path":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/TurkishStemmer#r_is_reserved_word().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/TurkishStemmer#r_is_reserved_word().mjava","pathOld":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/TurkishStemmer#r_is_reserved_word().mjava","sourceNew":"        private boolean r_is_reserved_word() {\n            int v_1;\n            int v_2;\n            int v_4;\n            // (, line 449\n            // or, line 451\n            lab0: do {\n                v_1 = cursor;\n                lab1: do {\n                    // test, line 450\n                    v_2 = cursor;\n                    // (, line 450\n                    // gopast, line 450\n                    golab2: while(true)\n                    {\n                        lab3: do {\n                            // literal, line 450\n                            if (!(eq_s(2, \"ad\")))\n                            {\n                                break lab3;\n                            }\n                            break golab2;\n                        } while (false);\n                        if (cursor >= limit)\n                        {\n                            break lab1;\n                        }\n                        cursor++;\n                    }\n                    // (, line 450\n                    I_strlen = 2;\n                    // (, line 450\n                    if (!(I_strlen == limit))\n                    {\n                        break lab1;\n                    }\n                    cursor = v_2;\n                    break lab0;\n                } while (false);\n                cursor = v_1;\n                // test, line 452\n                v_4 = cursor;\n                // (, line 452\n                // gopast, line 452\n                golab4: while(true)\n                {\n                    lab5: do {\n                        // literal, line 452\n                        if (!(eq_s(5, \"soyad\")))\n                        {\n                            break lab5;\n                        }\n                        break golab4;\n                    } while (false);\n                    if (cursor >= limit)\n                    {\n                        return false;\n                    }\n                    cursor++;\n                }\n                // (, line 452\n                I_strlen = 5;\n                // (, line 452\n                if (!(I_strlen == limit))\n                {\n                    return false;\n                }\n                cursor = v_4;\n            } while (false);\n            return true;\n        }\n\n","sourceOld":"        private boolean r_is_reserved_word() {\n            int v_1;\n            int v_2;\n            int v_4;\n            // (, line 449\n            // or, line 451\n            lab0: do {\n                v_1 = cursor;\n                lab1: do {\n                    // test, line 450\n                    v_2 = cursor;\n                    // (, line 450\n                    // gopast, line 450\n                    golab2: while(true)\n                    {\n                        lab3: do {\n                            // literal, line 450\n                            if (!(eq_s(2, \"ad\")))\n                            {\n                                break lab3;\n                            }\n                            break golab2;\n                        } while (false);\n                        if (cursor >= limit)\n                        {\n                            break lab1;\n                        }\n                        cursor++;\n                    }\n                    // (, line 450\n                    I_strlen = 2;\n                    // (, line 450\n                    if (!(I_strlen == limit))\n                    {\n                        break lab1;\n                    }\n                    cursor = v_2;\n                    break lab0;\n                } while (false);\n                cursor = v_1;\n                // test, line 452\n                v_4 = cursor;\n                // (, line 452\n                // gopast, line 452\n                golab4: while(true)\n                {\n                    lab5: do {\n                        // literal, line 452\n                        if (!(eq_s(5, \"soyad\")))\n                        {\n                            break lab5;\n                        }\n                        break golab4;\n                    } while (false);\n                    if (cursor >= limit)\n                    {\n                        return false;\n                    }\n                    cursor++;\n                }\n                // (, line 452\n                I_strlen = 5;\n                // (, line 452\n                if (!(I_strlen == limit))\n                {\n                    return false;\n                }\n                cursor = v_4;\n            } while (false);\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/tartarus/snowball/ext/TurkishStemmer#r_is_reserved_word().mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/TurkishStemmer#r_is_reserved_word().mjava","sourceNew":"        private boolean r_is_reserved_word() {\n            int v_1;\n            int v_2;\n            int v_4;\n            // (, line 449\n            // or, line 451\n            lab0: do {\n                v_1 = cursor;\n                lab1: do {\n                    // test, line 450\n                    v_2 = cursor;\n                    // (, line 450\n                    // gopast, line 450\n                    golab2: while(true)\n                    {\n                        lab3: do {\n                            // literal, line 450\n                            if (!(eq_s(2, \"ad\")))\n                            {\n                                break lab3;\n                            }\n                            break golab2;\n                        } while (false);\n                        if (cursor >= limit)\n                        {\n                            break lab1;\n                        }\n                        cursor++;\n                    }\n                    // (, line 450\n                    I_strlen = 2;\n                    // (, line 450\n                    if (!(I_strlen == limit))\n                    {\n                        break lab1;\n                    }\n                    cursor = v_2;\n                    break lab0;\n                } while (false);\n                cursor = v_1;\n                // test, line 452\n                v_4 = cursor;\n                // (, line 452\n                // gopast, line 452\n                golab4: while(true)\n                {\n                    lab5: do {\n                        // literal, line 452\n                        if (!(eq_s(5, \"soyad\")))\n                        {\n                            break lab5;\n                        }\n                        break golab4;\n                    } while (false);\n                    if (cursor >= limit)\n                    {\n                        return false;\n                    }\n                    cursor++;\n                }\n                // (, line 452\n                I_strlen = 5;\n                // (, line 452\n                if (!(I_strlen == limit))\n                {\n                    return false;\n                }\n                cursor = v_4;\n            } while (false);\n            return true;\n        }\n\n","sourceOld":"        private boolean r_is_reserved_word() {\n            int v_1;\n            int v_2;\n            int v_4;\n            // (, line 449\n            // or, line 451\n            lab0: do {\n                v_1 = cursor;\n                lab1: do {\n                    // test, line 450\n                    v_2 = cursor;\n                    // (, line 450\n                    // gopast, line 450\n                    golab2: while(true)\n                    {\n                        lab3: do {\n                            // literal, line 450\n                            if (!(eq_s(2, \"ad\")))\n                            {\n                                break lab3;\n                            }\n                            break golab2;\n                        } while (false);\n                        if (cursor >= limit)\n                        {\n                            break lab1;\n                        }\n                        cursor++;\n                    }\n                    // (, line 450\n                    I_strlen = 2;\n                    // (, line 450\n                    if (!(I_strlen == limit))\n                    {\n                        break lab1;\n                    }\n                    cursor = v_2;\n                    break lab0;\n                } while (false);\n                cursor = v_1;\n                // test, line 452\n                v_4 = cursor;\n                // (, line 452\n                // gopast, line 452\n                golab4: while(true)\n                {\n                    lab5: do {\n                        // literal, line 452\n                        if (!(eq_s(5, \"soyad\")))\n                        {\n                            break lab5;\n                        }\n                        break golab4;\n                    } while (false);\n                    if (cursor >= limit)\n                    {\n                        return false;\n                    }\n                    cursor++;\n                }\n                // (, line 452\n                I_strlen = 5;\n                // (, line 452\n                if (!(I_strlen == limit))\n                {\n                    return false;\n                }\n                cursor = v_4;\n            } while (false);\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}