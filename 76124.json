{"path":"src/java/org/apache/solr/core/Config#evaluate(String,QName).mjava","commits":[{"id":"0c3e228bf650e96f3002a8fb73dd0c13d55af077","date":1138253849,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/Config#evaluate(String,QName).mjava","pathOld":"/dev/null","sourceNew":"  public Object evaluate(String path, QName type) {\n    XPath xpath = xpathFactory.newXPath();\n    try {\n      String xstr=normalize(path);\n\n      // TODO: instead of prepending /prefix/, we could do the search rooted at /prefix...\n      Object o = xpath.evaluate(xstr, doc, type);\n      return o;\n\n    } catch (XPathExpressionException e) {\n      throw new SolrException(500,\"Error in xpath:\" + path +\" for \" + name,e,false);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996","date":1180477701,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/Config#evaluate(String,QName).mjava","pathOld":"src/java/org/apache/solr/core/Config#evaluate(String,QName).mjava","sourceNew":"  public Object evaluate(String path, QName type) {\n    XPath xpath = xpathFactory.newXPath();\n    try {\n      String xstr=normalize(path);\n\n      // TODO: instead of prepending /prefix/, we could do the search rooted at /prefix...\n      Object o = xpath.evaluate(xstr, doc, type);\n      return o;\n\n    } catch (XPathExpressionException e) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + path +\" for \" + name,e,false);\n    }\n  }\n\n","sourceOld":"  public Object evaluate(String path, QName type) {\n    XPath xpath = xpathFactory.newXPath();\n    try {\n      String xstr=normalize(path);\n\n      // TODO: instead of prepending /prefix/, we could do the search rooted at /prefix...\n      Object o = xpath.evaluate(xstr, doc, type);\n      return o;\n\n    } catch (XPathExpressionException e) {\n      throw new SolrException(500,\"Error in xpath:\" + path +\" for \" + name,e,false);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/Config#evaluate(String,QName).mjava","pathOld":"src/java/org/apache/solr/core/Config#evaluate(String,QName).mjava","sourceNew":"  public Object evaluate(String path, QName type) {\n    XPath xpath = xpathFactory.newXPath();\n    try {\n      String xstr=normalize(path);\n\n      // TODO: instead of prepending /prefix/, we could do the search rooted at /prefix...\n      Object o = xpath.evaluate(xstr, doc, type);\n      return o;\n\n    } catch (XPathExpressionException e) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + path +\" for \" + name,e,false);\n    }\n  }\n\n","sourceOld":"  public Object evaluate(String path, QName type) {\n    XPath xpath = xpathFactory.newXPath();\n    try {\n      String xstr=normalize(path);\n\n      // TODO: instead of prepending /prefix/, we could do the search rooted at /prefix...\n      Object o = xpath.evaluate(xstr, doc, type);\n      return o;\n\n    } catch (XPathExpressionException e) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + path +\" for \" + name,e,false);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["c4abe53aaee39b5f2f41dd9a0b905c1ddf880996"],"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["c4abe53aaee39b5f2f41dd9a0b905c1ddf880996"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}