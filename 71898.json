{"path":"modules/spatial/src/test/java/org/apache/lucene/spatial/base/shape/AbstractTestShapes#_assertIntersect(String,SpatialRelation,Shape,Shape).mjava","commits":[{"id":"ef186f4ac90644cd4e8df6b66acb56a52e5ca602","date":1329778037,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"modules/spatial/src/test/java/org/apache/lucene/spatial/base/shape/AbstractTestShapes#_assertIntersect(String,SpatialRelation,Shape,Shape).mjava","pathOld":"modules/spatial-lucene/src/test/java/org/apache/lucene/spatial/base/shape/AbstractTestShapes#_assertIntersect(String,SpatialRelation,Shape,Shape).mjava","sourceNew":"  private void _assertIntersect(String msg, SpatialRelation expected, Shape a, Shape b) {\n    SpatialRelation sect = a.relate(b, ctx);\n    if (sect == expected)\n      return;\n    if (expected == WITHIN || expected == CONTAINS) {\n      if (a.getClass().equals(b.getClass())) // they are the same shape type\n        assertEquals(msg,a,b);\n      else {\n        //they are effectively points or lines that are the same location\n        assertTrue(msg,!a.hasArea());\n        assertTrue(msg,!b.hasArea());\n\n        Rectangle aBBox = a.getBoundingBox();\n        Rectangle bBBox = b.getBoundingBox();\n        if (aBBox.getHeight() == 0 && bBBox.getHeight() == 0\n            && (aBBox.getMaxY() == 90 && bBBox.getMaxY() == 90\n          || aBBox.getMinY() == -90 && bBBox.getMinY() == -90))\n          ;//== a point at the pole\n        else\n          assertEquals(msg, aBBox, bBBox);\n      }\n    } else {\n      assertEquals(msg,expected,sect);\n    }\n  }\n\n","sourceOld":"  private void _assertIntersect(String msg, SpatialRelation expected, Shape a, Shape b) {\n    SpatialRelation sect = a.relate(b, ctx);\n    if (sect == expected)\n      return;\n    if (expected == WITHIN || expected == CONTAINS) {\n      if (a.getClass().equals(b.getClass())) // they are the same shape type\n        assertEquals(msg,a,b);\n      else {\n        //they are effectively points or lines that are the same location\n        assertTrue(msg,!a.hasArea());\n        assertTrue(msg,!b.hasArea());\n\n        Rectangle aBBox = a.getBoundingBox();\n        Rectangle bBBox = b.getBoundingBox();\n        if (aBBox.getHeight() == 0 && bBBox.getHeight() == 0\n            && (aBBox.getMaxY() == 90 && bBBox.getMaxY() == 90\n          || aBBox.getMinY() == -90 && bBBox.getMinY() == -90))\n          ;//== a point at the pole\n        else\n          assertEquals(msg, aBBox, bBBox);\n      }\n    } else {\n      assertEquals(msg,expected,sect);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"935445a30e9e8dc0240a7c78efc73d08c2faa6a8","date":1329778521,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"modules/spatial/src/test/org/apache/lucene/spatial/base/shape/AbstractTestShapes#_assertIntersect(String,SpatialRelation,Shape,Shape).mjava","pathOld":"modules/spatial/src/test/java/org/apache/lucene/spatial/base/shape/AbstractTestShapes#_assertIntersect(String,SpatialRelation,Shape,Shape).mjava","sourceNew":"  private void _assertIntersect(String msg, SpatialRelation expected, Shape a, Shape b) {\n    SpatialRelation sect = a.relate(b, ctx);\n    if (sect == expected)\n      return;\n    if (expected == WITHIN || expected == CONTAINS) {\n      if (a.getClass().equals(b.getClass())) // they are the same shape type\n        assertEquals(msg,a,b);\n      else {\n        //they are effectively points or lines that are the same location\n        assertTrue(msg,!a.hasArea());\n        assertTrue(msg,!b.hasArea());\n\n        Rectangle aBBox = a.getBoundingBox();\n        Rectangle bBBox = b.getBoundingBox();\n        if (aBBox.getHeight() == 0 && bBBox.getHeight() == 0\n            && (aBBox.getMaxY() == 90 && bBBox.getMaxY() == 90\n          || aBBox.getMinY() == -90 && bBBox.getMinY() == -90))\n          ;//== a point at the pole\n        else\n          assertEquals(msg, aBBox, bBBox);\n      }\n    } else {\n      assertEquals(msg,expected,sect);\n    }\n  }\n\n","sourceOld":"  private void _assertIntersect(String msg, SpatialRelation expected, Shape a, Shape b) {\n    SpatialRelation sect = a.relate(b, ctx);\n    if (sect == expected)\n      return;\n    if (expected == WITHIN || expected == CONTAINS) {\n      if (a.getClass().equals(b.getClass())) // they are the same shape type\n        assertEquals(msg,a,b);\n      else {\n        //they are effectively points or lines that are the same location\n        assertTrue(msg,!a.hasArea());\n        assertTrue(msg,!b.hasArea());\n\n        Rectangle aBBox = a.getBoundingBox();\n        Rectangle bBBox = b.getBoundingBox();\n        if (aBBox.getHeight() == 0 && bBBox.getHeight() == 0\n            && (aBBox.getMaxY() == 90 && bBBox.getMaxY() == 90\n          || aBBox.getMinY() == -90 && bBBox.getMinY() == -90))\n          ;//== a point at the pole\n        else\n          assertEquals(msg, aBBox, bBBox);\n      }\n    } else {\n      assertEquals(msg,expected,sect);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"935445a30e9e8dc0240a7c78efc73d08c2faa6a8":["ef186f4ac90644cd4e8df6b66acb56a52e5ca602"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ef186f4ac90644cd4e8df6b66acb56a52e5ca602":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"935445a30e9e8dc0240a7c78efc73d08c2faa6a8":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ef186f4ac90644cd4e8df6b66acb56a52e5ca602","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ef186f4ac90644cd4e8df6b66acb56a52e5ca602":["935445a30e9e8dc0240a7c78efc73d08c2faa6a8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["935445a30e9e8dc0240a7c78efc73d08c2faa6a8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}