{"path":"solr/core/src/java/org/apache/solr/rest/ManagedResource#notifyObserversDuringInit(NamedList[#],Collection[ManagedResourceObserver]).mjava","commits":[{"id":"716cfb7876e1d813737493c55157adc5883673ae","date":1568392527,"type":1,"author":"Thomas WÃ¶ckinger","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/ManagedResource#notifyObserversDuringInit(NamedList[#],Collection[ManagedResourceObserver]).mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/ManagedResource#notifyObserversDuringInit(NamedList[#],List[ManagedResourceObserver]).mjava","sourceNew":"  /**\n   * Notifies all registered observers that the ManagedResource is initialized.\n   * This event only occurs once when the core is loaded. Thus, you need to\n   * reload the core to get updates applied to the analysis components that\n   * depend on the ManagedResource data.\n   */\n  protected void notifyObserversDuringInit(NamedList<?> args, Collection<ManagedResourceObserver> observers)\n      throws SolrException {\n\n    if (observers == null || observers.isEmpty())\n      return;\n    \n    for (ManagedResourceObserver observer : observers) {\n      // clone the args for each observer as some components\n      // remove args as they process them, e.g. AbstractAnalysisFactory\n      NamedList<?> clonedArgs = args.clone();\n      observer.onManagedResourceInitialized(clonedArgs,this);\n    }\n    log.info(\"Notified {} observers of {}\", observers.size(), getResourceId());\n  }  \n\n","sourceOld":"  /**\n   * Notifies all registered observers that the ManagedResource is initialized.\n   * This event only occurs once when the core is loaded. Thus, you need to\n   * reload the core to get updates applied to the analysis components that\n   * depend on the ManagedResource data.\n   */\n  @SuppressWarnings(\"unchecked\")\n  protected void notifyObserversDuringInit(NamedList<?> args, List<ManagedResourceObserver> observers)\n      throws SolrException {\n\n    if (observers == null || observers.isEmpty())\n      return;\n    \n    for (ManagedResourceObserver observer : observers) {\n      // clone the args for each observer as some components\n      // remove args as they process them, e.g. AbstractAnalysisFactory\n      NamedList<?> clonedArgs = args.clone();\n      observer.onManagedResourceInitialized(clonedArgs,this);\n    }\n    log.info(\"Notified {} observers of {}\", observers.size(), getResourceId());\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"140be51d03394488536f4aacedace29f9b318347","date":1587170432,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/ManagedResource#notifyObserversDuringInit(NamedList[#],Collection[ManagedResourceObserver]).mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/ManagedResource#notifyObserversDuringInit(NamedList[#],Collection[ManagedResourceObserver]).mjava","sourceNew":"  /**\n   * Notifies all registered observers that the ManagedResource is initialized.\n   * This event only occurs once when the core is loaded. Thus, you need to\n   * reload the core to get updates applied to the analysis components that\n   * depend on the ManagedResource data.\n   */\n  protected void notifyObserversDuringInit(NamedList<?> args, Collection<ManagedResourceObserver> observers)\n      throws SolrException {\n\n    if (observers == null || observers.isEmpty())\n      return;\n    \n    for (ManagedResourceObserver observer : observers) {\n      // clone the args for each observer as some components\n      // remove args as they process them, e.g. AbstractAnalysisFactory\n      NamedList<?> clonedArgs = args.clone();\n      observer.onManagedResourceInitialized(clonedArgs,this);\n    }\n    if (log.isInfoEnabled()) {\n      log.info(\"Notified {} observers of {}\", observers.size(), getResourceId());\n    }\n  }  \n\n","sourceOld":"  /**\n   * Notifies all registered observers that the ManagedResource is initialized.\n   * This event only occurs once when the core is loaded. Thus, you need to\n   * reload the core to get updates applied to the analysis components that\n   * depend on the ManagedResource data.\n   */\n  protected void notifyObserversDuringInit(NamedList<?> args, Collection<ManagedResourceObserver> observers)\n      throws SolrException {\n\n    if (observers == null || observers.isEmpty())\n      return;\n    \n    for (ManagedResourceObserver observer : observers) {\n      // clone the args for each observer as some components\n      // remove args as they process them, e.g. AbstractAnalysisFactory\n      NamedList<?> clonedArgs = args.clone();\n      observer.onManagedResourceInitialized(clonedArgs,this);\n    }\n    log.info(\"Notified {} observers of {}\", observers.size(), getResourceId());\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716cfb7876e1d813737493c55157adc5883673ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"140be51d03394488536f4aacedace29f9b318347":["716cfb7876e1d813737493c55157adc5883673ae"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["140be51d03394488536f4aacedace29f9b318347"]},"commit2Childs":{"716cfb7876e1d813737493c55157adc5883673ae":["140be51d03394488536f4aacedace29f9b318347"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["716cfb7876e1d813737493c55157adc5883673ae"],"140be51d03394488536f4aacedace29f9b318347":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}