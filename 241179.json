{"path":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest#testParseDateFormats().mjava","commits":[{"id":"039a98d0ba2c3095541adb3e3ecbdee7812fc4b8","date":1372293867,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest#testParseDateFormats().mjava","pathOld":"/dev/null","sourceNew":"  public void testParseDateFormats() throws Exception {\n    String[] formatExamples = { \n        \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\",  \"2010-01-15T00:00:00.000Z\",\n        \"yyyy-MM-dd'T'HH:mm:ss,SSSZ\",  \"2010-01-15T00:00:00,000Z\",\n        \"yyyy-MM-dd'T'HH:mm:ss.SSS\",   \"2010-01-15T00:00:00.000\",\n        \"yyyy-MM-dd'T'HH:mm:ss,SSS\",   \"2010-01-15T00:00:00,000\",\n        \"yyyy-MM-dd'T'HH:mm:ssZ\",      \"2010-01-15T00:00:00Z\",\n        \"yyyy-MM-dd'T'HH:mm:ss\",       \"2010-01-15T00:00:00\",\n        \"yyyy-MM-dd'T'HH:mmZ\",         \"2010-01-15T00:00Z\",\n        \"yyyy-MM-dd'T'HH:mm\",          \"2010-01-15T00:00\",\n        \"yyyy-MM-dd HH:mm:ss.SSSZ\",    \"2010-01-15 00:00:00.000Z\",\n        \"yyyy-MM-dd HH:mm:ss,SSSZ\",    \"2010-01-15 00:00:00,000Z\",\n        \"yyyy-MM-dd HH:mm:ss.SSS\",     \"2010-01-15 00:00:00.000\",\n        \"yyyy-MM-dd HH:mm:ss,SSS\",     \"2010-01-15 00:00:00,000\",\n        \"yyyy-MM-dd HH:mm:ssZ\",        \"2010-01-15 00:00:00Z\",\n        \"yyyy-MM-dd HH:mm:ss\",         \"2010-01-15 00:00:00\",\n        \"yyyy-MM-dd HH:mmZ\",           \"2010-01-15 00:00Z\",\n        \"yyyy-MM-dd HH:mm\",            \"2010-01-15 00:00\",\n        \"yyyy-MM-dd hh:mm a\",          \"2010-01-15 12:00 AM\",\n        \"yyyy-MM-dd hh:mma\",           \"2010-01-15 12:00AM\",\n        \"yyyy-MM-dd\",                  \"2010-01-15\",\n        \"EEE MMM dd HH:mm:ss Z yyyy\",  \"Fri Jan 15 00:00:00 +0000 2010\",\n        \"EEE MMM dd HH:mm:ss yyyy Z\",  \"Fri Jan 15 00:00:00 2010 +00:00\",\n        \"EEE MMM dd HH:mm:ss yyyy\",    \"Fri Jan 15 00:00:00 2010\",\n        \"EEE, dd MMM yyyy HH:mm:ss Z\", \"Fri, 15 Jan 2010 00:00:00 +00:00\",\n        \"EEEE, dd-MMM-yy HH:mm:ss Z\",  \"Friday, 15-Jan-10 00:00:00 +00:00\",\n        \"EEEE, MMMM dd, yyyy\",         \"Friday, January 15, 2010\",\n        \"MMMM dd, yyyy\",               \"January 15, 2010\",\n        \"MMM. dd, yyyy\",               \"Jan. 15, 2010\"\n    };\n\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"dateUTC_dt\")); // should match \"*_dt\" dynamic field\n\n    String dateTimePattern = \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\";\n    DateTimeFormatter dateTimeFormatterUTC = DateTimeFormat.forPattern(dateTimePattern);\n    DateTime dateTimeUTC = dateTimeFormatterUTC.parseDateTime(formatExamples[1]);\n\n    for (int i = 0 ; i < formatExamples.length ; i += 2) {\n      String format = formatExamples[i];\n      String dateString = formatExamples[i + 1];\n      String id = \"95\" + i;\n      SolrInputDocument d = processAdd(\"parse-date-UTC-defaultTimeZone-no-run-processor\", \n                                       doc(f(\"id\", id), f(\"dateUTC_dt\", dateString)));\n      assertNotNull(d);\n      assertTrue(\"date '\" + dateString + \"' with format '\" + format + \"' is not mutated to a Date\",\n          d.getFieldValue(\"dateUTC_dt\") instanceof Date);\n      assertEquals(\"date '\" + dateString + \"' with format '\" + format + \"' mismatched milliseconds\",\n                   dateTimeUTC.getMillis(), ((Date)d.getFieldValue(\"dateUTC_dt\")).getTime());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest#testParseDateFormats().mjava","pathOld":"/dev/null","sourceNew":"  public void testParseDateFormats() throws Exception {\n    String[] formatExamples = { \n        \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\",  \"2010-01-15T00:00:00.000Z\",\n        \"yyyy-MM-dd'T'HH:mm:ss,SSSZ\",  \"2010-01-15T00:00:00,000Z\",\n        \"yyyy-MM-dd'T'HH:mm:ss.SSS\",   \"2010-01-15T00:00:00.000\",\n        \"yyyy-MM-dd'T'HH:mm:ss,SSS\",   \"2010-01-15T00:00:00,000\",\n        \"yyyy-MM-dd'T'HH:mm:ssZ\",      \"2010-01-15T00:00:00Z\",\n        \"yyyy-MM-dd'T'HH:mm:ss\",       \"2010-01-15T00:00:00\",\n        \"yyyy-MM-dd'T'HH:mmZ\",         \"2010-01-15T00:00Z\",\n        \"yyyy-MM-dd'T'HH:mm\",          \"2010-01-15T00:00\",\n        \"yyyy-MM-dd HH:mm:ss.SSSZ\",    \"2010-01-15 00:00:00.000Z\",\n        \"yyyy-MM-dd HH:mm:ss,SSSZ\",    \"2010-01-15 00:00:00,000Z\",\n        \"yyyy-MM-dd HH:mm:ss.SSS\",     \"2010-01-15 00:00:00.000\",\n        \"yyyy-MM-dd HH:mm:ss,SSS\",     \"2010-01-15 00:00:00,000\",\n        \"yyyy-MM-dd HH:mm:ssZ\",        \"2010-01-15 00:00:00Z\",\n        \"yyyy-MM-dd HH:mm:ss\",         \"2010-01-15 00:00:00\",\n        \"yyyy-MM-dd HH:mmZ\",           \"2010-01-15 00:00Z\",\n        \"yyyy-MM-dd HH:mm\",            \"2010-01-15 00:00\",\n        \"yyyy-MM-dd hh:mm a\",          \"2010-01-15 12:00 AM\",\n        \"yyyy-MM-dd hh:mma\",           \"2010-01-15 12:00AM\",\n        \"yyyy-MM-dd\",                  \"2010-01-15\",\n        \"EEE MMM dd HH:mm:ss Z yyyy\",  \"Fri Jan 15 00:00:00 +0000 2010\",\n        \"EEE MMM dd HH:mm:ss yyyy Z\",  \"Fri Jan 15 00:00:00 2010 +00:00\",\n        \"EEE MMM dd HH:mm:ss yyyy\",    \"Fri Jan 15 00:00:00 2010\",\n        \"EEE, dd MMM yyyy HH:mm:ss Z\", \"Fri, 15 Jan 2010 00:00:00 +00:00\",\n        \"EEEE, dd-MMM-yy HH:mm:ss Z\",  \"Friday, 15-Jan-10 00:00:00 +00:00\",\n        \"EEEE, MMMM dd, yyyy\",         \"Friday, January 15, 2010\",\n        \"MMMM dd, yyyy\",               \"January 15, 2010\",\n        \"MMM. dd, yyyy\",               \"Jan. 15, 2010\"\n    };\n\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"dateUTC_dt\")); // should match \"*_dt\" dynamic field\n\n    String dateTimePattern = \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\";\n    DateTimeFormatter dateTimeFormatterUTC = DateTimeFormat.forPattern(dateTimePattern);\n    DateTime dateTimeUTC = dateTimeFormatterUTC.parseDateTime(formatExamples[1]);\n\n    for (int i = 0 ; i < formatExamples.length ; i += 2) {\n      String format = formatExamples[i];\n      String dateString = formatExamples[i + 1];\n      String id = \"95\" + i;\n      SolrInputDocument d = processAdd(\"parse-date-UTC-defaultTimeZone-no-run-processor\", \n                                       doc(f(\"id\", id), f(\"dateUTC_dt\", dateString)));\n      assertNotNull(d);\n      assertTrue(\"date '\" + dateString + \"' with format '\" + format + \"' is not mutated to a Date\",\n          d.getFieldValue(\"dateUTC_dt\") instanceof Date);\n      assertEquals(\"date '\" + dateString + \"' with format '\" + format + \"' mismatched milliseconds\",\n                   dateTimeUTC.getMillis(), ((Date)d.getFieldValue(\"dateUTC_dt\")).getTime());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf8fff0b8b3db9ffa5f8afde8c855baff0d2d141","date":1533657076,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest#testParseDateFormats().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest#testParseDateFormats().mjava","sourceNew":"  public void testParseDateFormats() throws Exception {\n    String[] formatExamples = { \n        \"2010-01-15T00:00:00.000Z\",\n        \"2010-01-15T00:00:00,000Z\",\n        \"2010-01-15T00:00:00.000\",\n        \"2010-01-15T00:00:00,000\",\n        \"2010-01-15T00:00:00Z\",\n        \"2010-01-15T00:00:00\",\n        \"2010-01-15T00:00Z\",\n        \"2010-01-15T00:00\",\n        \"2010-01-15 00:00:00.000Z\",\n        \"2010-01-15 00:00:00,000Z\",\n        \"2010-01-15 00:00:00.000\",\n        \"2010-01-15 00:00:00,000\",\n        \"2010-01-15 00:00:00Z\",\n        \"2010-01-15 00:00:00\",\n        \"2010-01-15 00:00Z\",\n        \"2010-01-15 00:00\",\n        \"2010-01-15 12:00 AM\",\n        \"2010-01-15 12:00AM\",\n        \"2010-01-15\",\n        \"Fri Jan 15 00:00:00 +0000 2010\",\n        \"Fri Jan 15 00:00:00 2010 +00:00\",\n        \"Fri Jan 15 00:00:00 2010\",\n        \"Fri, 15 Jan 2010 00:00:00 +00:00\",\n        \"Friday, 15-Jan-10 00:00:00 +00:00\",\n        \"Friday, January 15, 2010\",\n        \"January 15, 2010\",\n        \"Jan. 15, 2010\"\n    };\n\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"dateUTC_dt\")); // should match \"*_dt\" dynamic field\n\n    Instant expectedInstant = Instant.parse(formatExamples[0]);\n\n    for (int i = 0 ; i < formatExamples.length ; ++i) {\n      String dateString = formatExamples[i];\n      String id = \"95\" + i;\n      SolrInputDocument d = processAdd(\"parse-date-UTC-defaultTimeZone-no-run-processor\", \n                                       doc(f(\"id\", id), f(\"dateUTC_dt\", dateString)));\n      assertNotNull(d);\n      assertTrue(\"index: \" + i + \" date '\" + dateString + \"' is not mutated to a Date\",\n          d.getFieldValue(\"dateUTC_dt\") instanceof Date);\n      assertEquals(\"date '\" + dateString + \"' mismatched milliseconds\",\n          expectedInstant, ((Date)d.getFieldValue(\"dateUTC_dt\")).toInstant());\n    }\n  }\n\n","sourceOld":"  public void testParseDateFormats() throws Exception {\n    String[] formatExamples = { \n        \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\",  \"2010-01-15T00:00:00.000Z\",\n        \"yyyy-MM-dd'T'HH:mm:ss,SSSZ\",  \"2010-01-15T00:00:00,000Z\",\n        \"yyyy-MM-dd'T'HH:mm:ss.SSS\",   \"2010-01-15T00:00:00.000\",\n        \"yyyy-MM-dd'T'HH:mm:ss,SSS\",   \"2010-01-15T00:00:00,000\",\n        \"yyyy-MM-dd'T'HH:mm:ssZ\",      \"2010-01-15T00:00:00Z\",\n        \"yyyy-MM-dd'T'HH:mm:ss\",       \"2010-01-15T00:00:00\",\n        \"yyyy-MM-dd'T'HH:mmZ\",         \"2010-01-15T00:00Z\",\n        \"yyyy-MM-dd'T'HH:mm\",          \"2010-01-15T00:00\",\n        \"yyyy-MM-dd HH:mm:ss.SSSZ\",    \"2010-01-15 00:00:00.000Z\",\n        \"yyyy-MM-dd HH:mm:ss,SSSZ\",    \"2010-01-15 00:00:00,000Z\",\n        \"yyyy-MM-dd HH:mm:ss.SSS\",     \"2010-01-15 00:00:00.000\",\n        \"yyyy-MM-dd HH:mm:ss,SSS\",     \"2010-01-15 00:00:00,000\",\n        \"yyyy-MM-dd HH:mm:ssZ\",        \"2010-01-15 00:00:00Z\",\n        \"yyyy-MM-dd HH:mm:ss\",         \"2010-01-15 00:00:00\",\n        \"yyyy-MM-dd HH:mmZ\",           \"2010-01-15 00:00Z\",\n        \"yyyy-MM-dd HH:mm\",            \"2010-01-15 00:00\",\n        \"yyyy-MM-dd hh:mm a\",          \"2010-01-15 12:00 AM\",\n        \"yyyy-MM-dd hh:mma\",           \"2010-01-15 12:00AM\",\n        \"yyyy-MM-dd\",                  \"2010-01-15\",\n        \"EEE MMM dd HH:mm:ss Z yyyy\",  \"Fri Jan 15 00:00:00 +0000 2010\",\n        \"EEE MMM dd HH:mm:ss yyyy Z\",  \"Fri Jan 15 00:00:00 2010 +00:00\",\n        \"EEE MMM dd HH:mm:ss yyyy\",    \"Fri Jan 15 00:00:00 2010\",\n        \"EEE, dd MMM yyyy HH:mm:ss Z\", \"Fri, 15 Jan 2010 00:00:00 +00:00\",\n        \"EEEE, dd-MMM-yy HH:mm:ss Z\",  \"Friday, 15-Jan-10 00:00:00 +00:00\",\n        \"EEEE, MMMM dd, yyyy\",         \"Friday, January 15, 2010\",\n        \"MMMM dd, yyyy\",               \"January 15, 2010\",\n        \"MMM. dd, yyyy\",               \"Jan. 15, 2010\"\n    };\n\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"dateUTC_dt\")); // should match \"*_dt\" dynamic field\n\n    String dateTimePattern = \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\";\n    DateTimeFormatter dateTimeFormatterUTC = DateTimeFormat.forPattern(dateTimePattern);\n    DateTime dateTimeUTC = dateTimeFormatterUTC.parseDateTime(formatExamples[1]);\n\n    for (int i = 0 ; i < formatExamples.length ; i += 2) {\n      String format = formatExamples[i];\n      String dateString = formatExamples[i + 1];\n      String id = \"95\" + i;\n      SolrInputDocument d = processAdd(\"parse-date-UTC-defaultTimeZone-no-run-processor\", \n                                       doc(f(\"id\", id), f(\"dateUTC_dt\", dateString)));\n      assertNotNull(d);\n      assertTrue(\"date '\" + dateString + \"' with format '\" + format + \"' is not mutated to a Date\",\n          d.getFieldValue(\"dateUTC_dt\") instanceof Date);\n      assertEquals(\"date '\" + dateString + \"' with format '\" + format + \"' mismatched milliseconds\",\n                   dateTimeUTC.getMillis(), ((Date)d.getFieldValue(\"dateUTC_dt\")).getTime());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c843fa9bddf5f2c12667fc941acd33da03c62a3","date":1535566664,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest#testParseDateManyFormats().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest#testParseDateFormats().mjava","sourceNew":"  public void testParseDateManyFormats() throws Exception {\n    String[] formatExamples = { \n        \"2010-01-15T00:00:00.000Z\",\n        \"2010-01-15T00:00:00,000Z\",\n        \"2010-01-15T00:00:00.000\",\n        \"2010-01-15T00:00:00,000\",\n        \"2010-01-15T00:00:00Z\",\n        \"2010-01-15T00:00:00\",\n        \"2010-01-15T00:00Z\",\n        \"2010-01-15T00:00\",\n        \"2010-01-15 00:00:00.000Z\",\n        \"2010-01-15 00:00:00,000Z\",\n        \"2010-01-15 00:00:00.000\",\n        \"2010-01-15 00:00:00,000\",\n        \"2010-01-15 00:00:00Z\",\n        \"2010-01-15 00:00:00\",\n        \"2010-01-15 00:00Z\",\n        \"2010-01-15 00:00\",\n        \"2010-01-15 12:00 AM\",\n        \"2010-01-15 12:00AM\",\n        \"2010-01-15\",\n        \"Fri Jan 15 00:00:00 +0000 2010\",\n        \"Fri Jan 15 00:00:00 2010 +00:00\",\n        \"Fri Jan 15 00:00:00 2010\",\n        \"Fri, 15 Jan 2010 00:00:00 +00:00\",\n        \"Friday, 15-Jan-10 00:00:00 +00:00\",\n        \"Friday, January 15, 2010\",\n        \"January 15, 2010\",\n        \"Jan. 15, 2010\"\n    };\n\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"dateUTC_dt\")); // should match \"*_dt\" dynamic field\n\n    Instant expectedInstant = Instant.parse(formatExamples[0]);\n\n    for (int i = 0 ; i < formatExamples.length ; ++i) {\n      String dateString = formatExamples[i];\n      String id = \"95\" + i;\n      SolrInputDocument d = processAdd(\"parse-date-many-formats-no-run-processor\",\n                                       doc(f(\"id\", id), f(\"dateUTC_dt\", dateString)));\n      assertNotNull(d);\n      assertTrue(\"index: \" + i + \" date '\" + dateString + \"' is not mutated to a Date\",\n          d.getFieldValue(\"dateUTC_dt\") instanceof Date);\n      assertEquals(\"date '\" + dateString + \"' mismatched milliseconds\",\n          expectedInstant, ((Date)d.getFieldValue(\"dateUTC_dt\")).toInstant());\n    }\n  }\n\n","sourceOld":"  public void testParseDateFormats() throws Exception {\n    String[] formatExamples = { \n        \"2010-01-15T00:00:00.000Z\",\n        \"2010-01-15T00:00:00,000Z\",\n        \"2010-01-15T00:00:00.000\",\n        \"2010-01-15T00:00:00,000\",\n        \"2010-01-15T00:00:00Z\",\n        \"2010-01-15T00:00:00\",\n        \"2010-01-15T00:00Z\",\n        \"2010-01-15T00:00\",\n        \"2010-01-15 00:00:00.000Z\",\n        \"2010-01-15 00:00:00,000Z\",\n        \"2010-01-15 00:00:00.000\",\n        \"2010-01-15 00:00:00,000\",\n        \"2010-01-15 00:00:00Z\",\n        \"2010-01-15 00:00:00\",\n        \"2010-01-15 00:00Z\",\n        \"2010-01-15 00:00\",\n        \"2010-01-15 12:00 AM\",\n        \"2010-01-15 12:00AM\",\n        \"2010-01-15\",\n        \"Fri Jan 15 00:00:00 +0000 2010\",\n        \"Fri Jan 15 00:00:00 2010 +00:00\",\n        \"Fri Jan 15 00:00:00 2010\",\n        \"Fri, 15 Jan 2010 00:00:00 +00:00\",\n        \"Friday, 15-Jan-10 00:00:00 +00:00\",\n        \"Friday, January 15, 2010\",\n        \"January 15, 2010\",\n        \"Jan. 15, 2010\"\n    };\n\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"dateUTC_dt\")); // should match \"*_dt\" dynamic field\n\n    Instant expectedInstant = Instant.parse(formatExamples[0]);\n\n    for (int i = 0 ; i < formatExamples.length ; ++i) {\n      String dateString = formatExamples[i];\n      String id = \"95\" + i;\n      SolrInputDocument d = processAdd(\"parse-date-UTC-defaultTimeZone-no-run-processor\", \n                                       doc(f(\"id\", id), f(\"dateUTC_dt\", dateString)));\n      assertNotNull(d);\n      assertTrue(\"index: \" + i + \" date '\" + dateString + \"' is not mutated to a Date\",\n          d.getFieldValue(\"dateUTC_dt\") instanceof Date);\n      assertEquals(\"date '\" + dateString + \"' mismatched milliseconds\",\n          expectedInstant, ((Date)d.getFieldValue(\"dateUTC_dt\")).toInstant());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","039a98d0ba2c3095541adb3e3ecbdee7812fc4b8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cf8fff0b8b3db9ffa5f8afde8c855baff0d2d141":["039a98d0ba2c3095541adb3e3ecbdee7812fc4b8"],"039a98d0ba2c3095541adb3e3ecbdee7812fc4b8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2c843fa9bddf5f2c12667fc941acd33da03c62a3":["cf8fff0b8b3db9ffa5f8afde8c855baff0d2d141"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2c843fa9bddf5f2c12667fc941acd33da03c62a3"]},"commit2Childs":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","039a98d0ba2c3095541adb3e3ecbdee7812fc4b8"],"039a98d0ba2c3095541adb3e3ecbdee7812fc4b8":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cf8fff0b8b3db9ffa5f8afde8c855baff0d2d141"],"cf8fff0b8b3db9ffa5f8afde8c855baff0d2d141":["2c843fa9bddf5f2c12667fc941acd33da03c62a3"],"2c843fa9bddf5f2c12667fc941acd33da03c62a3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}