{"path":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#parse(JSONParser,Handler,Map[String,Object]).mjava","commits":[{"id":"7272013f8448f299f54112ec41cb3dc047cda543","date":1453483707,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#parse(JSONParser,Handler,Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#parse(JSONParser,Handler,Map[String,Object],Stack[Set[String]],boolean).mjava","sourceNew":"    private void parse(JSONParser parser,\n                       Handler handler,\n                       Map<String, Object> values) throws IOException {\n\n      int event = -1;\n      boolean recordStarted = false;\n      for (; ; ) {\n        event = parser.nextEvent();\n        if (event == EOF) break;\n        if (event == OBJECT_START) {\n          handleObjectStart(parser, handler, values, new Stack<Set<String>>(), recordStarted, null);\n        } else if (event == ARRAY_START) {\n          for (; ; ) {\n            event = parser.nextEvent();\n            if (event == ARRAY_END) break;\n            if (event == OBJECT_START) {\n              handleObjectStart(parser, handler, values, new Stack<Set<String>>(), recordStarted, null);\n            }\n          }\n        }\n      }\n\n    }\n\n","sourceOld":"    private void parse(JSONParser parser,\n                       Handler handler,\n                       Map<String, Object> values,\n                       Stack<Set<String>> stack, // lists of values to purge\n                       boolean recordStarted) throws IOException {\n\n      int event = -1;\n      for (; ; ) {\n        event = parser.nextEvent();\n        if (event == EOF) break;\n        if (event == OBJECT_START) {\n          handleObjectStart(parser, new HashSet<Node>(), handler, values, stack, recordStarted, null);\n        } else if (event == ARRAY_START) {\n          for (; ; ) {\n            event = parser.nextEvent();\n            if (event == ARRAY_END) break;\n            if (event == OBJECT_START) {\n              handleObjectStart(parser, new HashSet<Node>(), handler, values, stack, recordStarted, null);\n            }\n          }\n        }\n      }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fd61945b522c69b4bdd1a107f06659c8fee30c3","date":1464716529,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#parse(JSONParser,Handler,Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#parse(JSONParser,Handler,Map[String,Object]).mjava","sourceNew":"    private void parse(JSONParser parser,\n                       Handler handler,\n                       Map<String, Object> values) throws IOException {\n\n      int event = -1;\n      boolean recordStarted = false;\n      for (; ; ) {\n        event = parser.nextEvent();\n        if (event == EOF) break;\n        if (event == OBJECT_START) {\n          handleObjectStart(parser, handler, values, new Stack<>(), recordStarted, null);\n        } else if (event == ARRAY_START) {\n          for (; ; ) {\n            event = parser.nextEvent();\n            if (event == ARRAY_END) break;\n            if (event == OBJECT_START) {\n              handleObjectStart(parser, handler, values, new Stack<>(), recordStarted, null);\n            }\n          }\n        }\n      }\n\n    }\n\n","sourceOld":"    private void parse(JSONParser parser,\n                       Handler handler,\n                       Map<String, Object> values) throws IOException {\n\n      int event = -1;\n      boolean recordStarted = false;\n      for (; ; ) {\n        event = parser.nextEvent();\n        if (event == EOF) break;\n        if (event == OBJECT_START) {\n          handleObjectStart(parser, handler, values, new Stack<Set<String>>(), recordStarted, null);\n        } else if (event == ARRAY_START) {\n          for (; ; ) {\n            event = parser.nextEvent();\n            if (event == ARRAY_END) break;\n            if (event == OBJECT_START) {\n              handleObjectStart(parser, handler, values, new Stack<Set<String>>(), recordStarted, null);\n            }\n          }\n        }\n      }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b8ee93140fd0efef7e101786e3ed5160a700b5f","date":1464820111,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#parse(JSONParser,Handler,Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#parse(JSONParser,Handler,Map[String,Object]).mjava","sourceNew":"    private void parse(JSONParser parser,\n                       Handler handler,\n                       Map<String, Object> values) throws IOException {\n\n      int event = -1;\n      boolean recordStarted = false;\n      for (; ; ) {\n        event = parser.nextEvent();\n        if (event == EOF) break;\n        if (event == OBJECT_START) {\n          handleObjectStart(parser, handler, values, new Stack<>(), recordStarted, null);\n        } else if (event == ARRAY_START) {\n          for (; ; ) {\n            event = parser.nextEvent();\n            if (event == ARRAY_END) break;\n            if (event == OBJECT_START) {\n              handleObjectStart(parser, handler, values, new Stack<>(), recordStarted, null);\n            }\n          }\n        }\n      }\n\n    }\n\n","sourceOld":"    private void parse(JSONParser parser,\n                       Handler handler,\n                       Map<String, Object> values) throws IOException {\n\n      int event = -1;\n      boolean recordStarted = false;\n      for (; ; ) {\n        event = parser.nextEvent();\n        if (event == EOF) break;\n        if (event == OBJECT_START) {\n          handleObjectStart(parser, handler, values, new Stack<Set<String>>(), recordStarted, null);\n        } else if (event == ARRAY_START) {\n          for (; ; ) {\n            event = parser.nextEvent();\n            if (event == ARRAY_END) break;\n            if (event == OBJECT_START) {\n              handleObjectStart(parser, handler, values, new Stack<Set<String>>(), recordStarted, null);\n            }\n          }\n        }\n      }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77","date":1464821470,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#parse(JSONParser,Handler,Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#parse(JSONParser,Handler,Map[String,Object]).mjava","sourceNew":"    private void parse(JSONParser parser,\n                       Handler handler,\n                       Map<String, Object> values) throws IOException {\n\n      int event = -1;\n      boolean recordStarted = false;\n      for (; ; ) {\n        event = parser.nextEvent();\n        if (event == EOF) break;\n        if (event == OBJECT_START) {\n          handleObjectStart(parser, handler, values, new Stack<>(), recordStarted, null);\n        } else if (event == ARRAY_START) {\n          for (; ; ) {\n            event = parser.nextEvent();\n            if (event == ARRAY_END) break;\n            if (event == OBJECT_START) {\n              handleObjectStart(parser, handler, values, new Stack<>(), recordStarted, null);\n            }\n          }\n        }\n      }\n\n    }\n\n","sourceOld":"    private void parse(JSONParser parser,\n                       Handler handler,\n                       Map<String, Object> values) throws IOException {\n\n      int event = -1;\n      boolean recordStarted = false;\n      for (; ; ) {\n        event = parser.nextEvent();\n        if (event == EOF) break;\n        if (event == OBJECT_START) {\n          handleObjectStart(parser, handler, values, new Stack<Set<String>>(), recordStarted, null);\n        } else if (event == ARRAY_START) {\n          for (; ; ) {\n            event = parser.nextEvent();\n            if (event == ARRAY_END) break;\n            if (event == OBJECT_START) {\n              handleObjectStart(parser, handler, values, new Stack<Set<String>>(), recordStarted, null);\n            }\n          }\n        }\n      }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#parse(JSONParser,Handler,Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#parse(JSONParser,Handler,Map[String,Object]).mjava","sourceNew":"    private void parse(JSONParser parser,\n                       Handler handler,\n                       Map<String, Object> values) throws IOException {\n\n      int event = -1;\n      boolean recordStarted = false;\n      for (; ; ) {\n        event = parser.nextEvent();\n        if (event == EOF) break;\n        if (event == OBJECT_START) {\n          handleObjectStart(parser, handler, values, new Stack<>(), recordStarted, null);\n        } else if (event == ARRAY_START) {\n          for (; ; ) {\n            event = parser.nextEvent();\n            if (event == ARRAY_END) break;\n            if (event == OBJECT_START) {\n              handleObjectStart(parser, handler, values, new Stack<>(), recordStarted, null);\n            }\n          }\n        }\n      }\n\n    }\n\n","sourceOld":"    private void parse(JSONParser parser,\n                       Handler handler,\n                       Map<String, Object> values) throws IOException {\n\n      int event = -1;\n      boolean recordStarted = false;\n      for (; ; ) {\n        event = parser.nextEvent();\n        if (event == EOF) break;\n        if (event == OBJECT_START) {\n          handleObjectStart(parser, handler, values, new Stack<Set<String>>(), recordStarted, null);\n        } else if (event == ARRAY_START) {\n          for (; ; ) {\n            event = parser.nextEvent();\n            if (event == ARRAY_END) break;\n            if (event == OBJECT_START) {\n              handleObjectStart(parser, handler, values, new Stack<Set<String>>(), recordStarted, null);\n            }\n          }\n        }\n      }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9440b5b1eec7788a0edd10385e4d7a614d1024d7","date":1528992889,"type":3,"author":"user","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#parse(JSONParser,Handler,Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#parse(JSONParser,Handler,Map[String,Object]).mjava","sourceNew":"    private void parse(JSONParser parser,\n                       Handler handler,\n                       Map<String, Object> values) throws IOException {\n\n      int event = -1;\n      boolean recordStarted = false;\n      for (; ; ) {\n        event = parser.nextEvent();\n        if (event == EOF) break;\n        if (event == OBJECT_START) {\n          handleObjectStart(parser, handler, new LinkedHashMap<>(), new Stack<>(), recordStarted, null);\n        } else if (event == ARRAY_START) {\n          for (; ; ) {\n            event = parser.nextEvent();\n            if (event == ARRAY_END) break;\n            if (event == OBJECT_START) {\n              handleObjectStart(parser, handler, new LinkedHashMap<>(), new Stack<>(), recordStarted, null);\n            }\n          }\n        }\n      }\n\n    }\n\n","sourceOld":"    private void parse(JSONParser parser,\n                       Handler handler,\n                       Map<String, Object> values) throws IOException {\n\n      int event = -1;\n      boolean recordStarted = false;\n      for (; ; ) {\n        event = parser.nextEvent();\n        if (event == EOF) break;\n        if (event == OBJECT_START) {\n          handleObjectStart(parser, handler, values, new Stack<>(), recordStarted, null);\n        } else if (event == ARRAY_START) {\n          for (; ; ) {\n            event = parser.nextEvent();\n            if (event == ARRAY_END) break;\n            if (event == OBJECT_START) {\n              handleObjectStart(parser, handler, values, new Stack<>(), recordStarted, null);\n            }\n          }\n        }\n      }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#parse(JSONParser,Handler,Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#parse(JSONParser,Handler,Map[String,Object]).mjava","sourceNew":"    private void parse(JSONParser parser,\n                       Handler handler,\n                       Map<String, Object> values) throws IOException {\n\n      int event = -1;\n      boolean recordStarted = false;\n      for (; ; ) {\n        event = parser.nextEvent();\n        if (event == EOF) break;\n        if (event == OBJECT_START) {\n          handleObjectStart(parser, handler, new LinkedHashMap<>(), new Stack<>(), recordStarted, null);\n        } else if (event == ARRAY_START) {\n          for (; ; ) {\n            event = parser.nextEvent();\n            if (event == ARRAY_END) break;\n            if (event == OBJECT_START) {\n              handleObjectStart(parser, handler, new LinkedHashMap<>(), new Stack<>(), recordStarted, null);\n            }\n          }\n        }\n      }\n\n    }\n\n","sourceOld":"    private void parse(JSONParser parser,\n                       Handler handler,\n                       Map<String, Object> values) throws IOException {\n\n      int event = -1;\n      boolean recordStarted = false;\n      for (; ; ) {\n        event = parser.nextEvent();\n        if (event == EOF) break;\n        if (event == OBJECT_START) {\n          handleObjectStart(parser, handler, values, new Stack<>(), recordStarted, null);\n        } else if (event == ARRAY_START) {\n          for (; ; ) {\n            event = parser.nextEvent();\n            if (event == ARRAY_END) break;\n            if (event == OBJECT_START) {\n              handleObjectStart(parser, handler, values, new Stack<>(), recordStarted, null);\n            }\n          }\n        }\n      }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#parse(JSONParser,Handler,Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader.Node#parse(JSONParser,Handler,Map[String,Object]).mjava","sourceNew":"    private void parse(JSONParser parser,\n                       Handler handler,\n                       Map<String, Object> values) throws IOException {\n\n      int event = -1;\n      boolean recordStarted = false;\n      for (; ; ) {\n        event = parser.nextEvent();\n        if (event == EOF) break;\n        if (event == OBJECT_START) {\n          handleObjectStart(parser, handler, new LinkedHashMap<>(), new Stack<>(), recordStarted, null);\n        } else if (event == ARRAY_START) {\n          for (; ; ) {\n            event = parser.nextEvent();\n            if (event == ARRAY_END) break;\n            if (event == OBJECT_START) {\n              handleObjectStart(parser, handler, new LinkedHashMap<>(), new Stack<>(), recordStarted, null);\n            }\n          }\n        }\n      }\n\n    }\n\n","sourceOld":"    private void parse(JSONParser parser,\n                       Handler handler,\n                       Map<String, Object> values) throws IOException {\n\n      int event = -1;\n      boolean recordStarted = false;\n      for (; ; ) {\n        event = parser.nextEvent();\n        if (event == EOF) break;\n        if (event == OBJECT_START) {\n          handleObjectStart(parser, handler, values, new Stack<>(), recordStarted, null);\n        } else if (event == ARRAY_START) {\n          for (; ; ) {\n            event = parser.nextEvent();\n            if (event == ARRAY_END) break;\n            if (event == OBJECT_START) {\n              handleObjectStart(parser, handler, values, new Stack<>(), recordStarted, null);\n            }\n          }\n        }\n      }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["9fd61945b522c69b4bdd1a107f06659c8fee30c3","9440b5b1eec7788a0edd10385e4d7a614d1024d7"],"7272013f8448f299f54112ec41cb3dc047cda543":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9440b5b1eec7788a0edd10385e4d7a614d1024d7":["9fd61945b522c69b4bdd1a107f06659c8fee30c3"],"9fd61945b522c69b4bdd1a107f06659c8fee30c3":["7272013f8448f299f54112ec41cb3dc047cda543"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5b8ee93140fd0efef7e101786e3ed5160a700b5f":["7272013f8448f299f54112ec41cb3dc047cda543","9fd61945b522c69b4bdd1a107f06659c8fee30c3"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["7272013f8448f299f54112ec41cb3dc047cda543","9fd61945b522c69b4bdd1a107f06659c8fee30c3"],"b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77":["7272013f8448f299f54112ec41cb3dc047cda543","5b8ee93140fd0efef7e101786e3ed5160a700b5f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9440b5b1eec7788a0edd10385e4d7a614d1024d7"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["9fd61945b522c69b4bdd1a107f06659c8fee30c3","9440b5b1eec7788a0edd10385e4d7a614d1024d7"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"7272013f8448f299f54112ec41cb3dc047cda543":["9fd61945b522c69b4bdd1a107f06659c8fee30c3","5b8ee93140fd0efef7e101786e3ed5160a700b5f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77"],"9fd61945b522c69b4bdd1a107f06659c8fee30c3":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","9440b5b1eec7788a0edd10385e4d7a614d1024d7","5b8ee93140fd0efef7e101786e3ed5160a700b5f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"9440b5b1eec7788a0edd10385e4d7a614d1024d7":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7272013f8448f299f54112ec41cb3dc047cda543"],"5b8ee93140fd0efef7e101786e3ed5160a700b5f":["b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}