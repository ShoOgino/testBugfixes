{"path":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(ResourceLoader,Node).mjava","commits":[{"id":"f09ac0abea5345f77c4cf8d9f0d531da9139debc","date":1311103501,"type":1,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(ResourceLoader,Node).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(Node).mjava","sourceNew":"  static Similarity readSimilarity(ResourceLoader loader, Node node) throws XPathExpressionException {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final Object obj = loader.newInstance(((Element) node).getAttribute(\"class\"));\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        SolrParams params = SolrParams.toSolrParams(DOMUtil.childNodesToNamedList(node));\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory.getSimilarity();\n    }\n  }\n\n","sourceOld":"  private Similarity readSimilarity(Node node) throws XPathExpressionException {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final Object obj = loader.newInstance(((Element) node).getAttribute(\"class\"));\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        SolrParams params = SolrParams.toSolrParams(DOMUtil.childNodesToNamedList(node));\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory.getSimilarity();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa6d0ca44ce171ad041951fa8fb94731b7d778d9","date":1316629244,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(ResourceLoader,Node).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(ResourceLoader,Node).mjava","sourceNew":"  static Similarity readSimilarity(ResourceLoader loader, Node node) throws XPathExpressionException {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final Object obj = loader.newInstance(((Element) node).getAttribute(\"class\"), \"search.similarities.\");\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        SolrParams params = SolrParams.toSolrParams(DOMUtil.childNodesToNamedList(node));\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory.getSimilarity();\n    }\n  }\n\n","sourceOld":"  static Similarity readSimilarity(ResourceLoader loader, Node node) throws XPathExpressionException {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final Object obj = loader.newInstance(((Element) node).getAttribute(\"class\"));\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        SolrParams params = SolrParams.toSolrParams(DOMUtil.childNodesToNamedList(node));\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory.getSimilarity();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b","date":1328532481,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(ResourceLoader,Node).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(ResourceLoader,Node).mjava","sourceNew":"  static SimilarityFactory readSimilarity(ResourceLoader loader, Node node) throws XPathExpressionException {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final Object obj = loader.newInstance(((Element) node).getAttribute(\"class\"), \"search.similarities.\");\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        SolrParams params = SolrParams.toSolrParams(DOMUtil.childNodesToNamedList(node));\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory;\n    }\n  }\n\n","sourceOld":"  static Similarity readSimilarity(ResourceLoader loader, Node node) throws XPathExpressionException {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final Object obj = loader.newInstance(((Element) node).getAttribute(\"class\"), \"search.similarities.\");\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        SolrParams params = SolrParams.toSolrParams(DOMUtil.childNodesToNamedList(node));\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory.getSimilarity();\n    }\n  }\n\n","bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41","date":1334628185,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(ResourceLoader,Node).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(ResourceLoader,Node).mjava","sourceNew":"  static SimilarityFactory readSimilarity(ResourceLoader loader, Node node) throws XPathExpressionException {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final Object obj = loader.newInstance(((Element) node).getAttribute(\"class\"), Object.class, \"search.similarities.\");\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        SolrParams params = SolrParams.toSolrParams(DOMUtil.childNodesToNamedList(node));\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory;\n    }\n  }\n\n","sourceOld":"  static SimilarityFactory readSimilarity(ResourceLoader loader, Node node) throws XPathExpressionException {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final Object obj = loader.newInstance(((Element) node).getAttribute(\"class\"), \"search.similarities.\");\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        SolrParams params = SolrParams.toSolrParams(DOMUtil.childNodesToNamedList(node));\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(ResourceLoader,Node).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(ResourceLoader,Node).mjava","sourceNew":"  static SimilarityFactory readSimilarity(ResourceLoader loader, Node node) {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final Object obj = loader.newInstance(((Element) node).getAttribute(\"class\"), Object.class, \"search.similarities.\");\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        SolrParams params = SolrParams.toSolrParams(DOMUtil.childNodesToNamedList(node));\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory;\n    }\n  }\n\n","sourceOld":"  static SimilarityFactory readSimilarity(ResourceLoader loader, Node node) throws XPathExpressionException {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final Object obj = loader.newInstance(((Element) node).getAttribute(\"class\"), Object.class, \"search.similarities.\");\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        SolrParams params = SolrParams.toSolrParams(DOMUtil.childNodesToNamedList(node));\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory;\n    }\n  }\n\n","bugFix":["1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(ResourceLoader,Node).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(ResourceLoader,Node).mjava","sourceNew":"  static SimilarityFactory readSimilarity(ResourceLoader loader, Node node) {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final Object obj = loader.newInstance(((Element) node).getAttribute(\"class\"), Object.class, \"search.similarities.\");\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        SolrParams params = SolrParams.toSolrParams(DOMUtil.childNodesToNamedList(node));\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory;\n    }\n  }\n\n","sourceOld":"  static SimilarityFactory readSimilarity(ResourceLoader loader, Node node) throws XPathExpressionException {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final Object obj = loader.newInstance(((Element) node).getAttribute(\"class\"), Object.class, \"search.similarities.\");\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        SolrParams params = SolrParams.toSolrParams(DOMUtil.childNodesToNamedList(node));\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c028362918f0b06bbdb243dfd35486218b89dbde","date":1343391303,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(SolrResourceLoader,Node).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(ResourceLoader,Node).mjava","sourceNew":"  static SimilarityFactory readSimilarity(SolrResourceLoader loader, Node node) {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final Object obj = loader.newInstance(((Element) node).getAttribute(\"class\"), Object.class, \"search.similarities.\");\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        SolrParams params = SolrParams.toSolrParams(DOMUtil.childNodesToNamedList(node));\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory;\n    }\n  }\n\n","sourceOld":"  static SimilarityFactory readSimilarity(ResourceLoader loader, Node node) {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final Object obj = loader.newInstance(((Element) node).getAttribute(\"class\"), Object.class, \"search.similarities.\");\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        SolrParams params = SolrParams.toSolrParams(DOMUtil.childNodesToNamedList(node));\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(ResourceLoader,Node).mjava","sourceNew":null,"sourceOld":"  static SimilarityFactory readSimilarity(ResourceLoader loader, Node node) {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final Object obj = loader.newInstance(((Element) node).getAttribute(\"class\"), Object.class, \"search.similarities.\");\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        SolrParams params = SolrParams.toSolrParams(DOMUtil.childNodesToNamedList(node));\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(ResourceLoader,Node).mjava","sourceNew":null,"sourceOld":"  static SimilarityFactory readSimilarity(ResourceLoader loader, Node node) {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final Object obj = loader.newInstance(((Element) node).getAttribute(\"class\"), Object.class, \"search.similarities.\");\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        SolrParams params = SolrParams.toSolrParams(DOMUtil.childNodesToNamedList(node));\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aba371508186796cc6151d8223a5b4e16d02e26e":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","c028362918f0b06bbdb243dfd35486218b89dbde"],"c028362918f0b06bbdb243dfd35486218b89dbde":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"aa6d0ca44ce171ad041951fa8fb94731b7d778d9":["f09ac0abea5345f77c4cf8d9f0d531da9139debc"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41":["1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["fe33227f6805edab2036cbb80645cc4e2d1fa424","c028362918f0b06bbdb243dfd35486218b89dbde"],"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b":["aa6d0ca44ce171ad041951fa8fb94731b7d778d9"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c028362918f0b06bbdb243dfd35486218b89dbde"],"f09ac0abea5345f77c4cf8d9f0d531da9139debc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"aba371508186796cc6151d8223a5b4e16d02e26e":[],"c028362918f0b06bbdb243dfd35486218b89dbde":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"aa6d0ca44ce171ad041951fa8fb94731b7d778d9":["1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f"],"a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f09ac0abea5345f77c4cf8d9f0d531da9139debc"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b":["a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["aba371508186796cc6151d8223a5b4e16d02e26e","c028362918f0b06bbdb243dfd35486218b89dbde","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"f09ac0abea5345f77c4cf8d9f0d531da9139debc":["aa6d0ca44ce171ad041951fa8fb94731b7d778d9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}