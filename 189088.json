{"path":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminHandlerTest#testNonexistentCoreReload().mjava","commits":[{"id":"a186504f1a3b9b01975b92a172e3081e034ec90b","date":1389804265,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminHandlerTest#testNonexistentCoreReload().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testNonexistentCoreReload() throws Exception {\n    final CoreAdminHandler admin = new CoreAdminHandler(h.getCoreContainer());\n    SolrQueryResponse resp = new SolrQueryResponse();\n\n    try {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString(),\n              CoreAdminParams.CORE, \"non-existent-core\")\n          , resp);\n      fail(\"Was able to successfully reload non-existent-core\");\n    } catch (Exception e) {\n      assertEquals(\"Expected error message for non-existent core.\", \"Core with core name [non-existent-core] does not exist.\", e.getMessage());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"130496c25626b9e6af5f1833f861e778722b9894","date":1436679365,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminHandlerTest#testNonexistentCoreReload().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminHandlerTest#testNonexistentCoreReload().mjava","sourceNew":"  @Test\n  public void testNonexistentCoreReload() throws Exception {\n    final CoreAdminHandler admin = new CoreAdminHandler(h.getCoreContainer());\n    SolrQueryResponse resp = new SolrQueryResponse();\n\n    try {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString(),\n              CoreAdminParams.CORE, \"non-existent-core\")\n          , resp);\n      fail(\"Was able to successfully reload non-existent-core\");\n    } catch (Exception e) {\n      assertEquals(\"Expected error message for non-existent core.\", \"Core with core name [non-existent-core] does not exist.\", e.getMessage());\n    }\n\n    // test null core\n    try {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString())\n          , resp);\n      fail(\"Was able to successfully reload null core\");\n    }\n    catch (Exception e) {\n      if (!(e instanceof SolrException)) {\n        fail(\"Expected SolrException but got \" + e);\n      }\n      assertEquals(\"Expected error message for non-existent core.\", \"Core with core name [null] does not exist.\", e.getMessage());\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testNonexistentCoreReload() throws Exception {\n    final CoreAdminHandler admin = new CoreAdminHandler(h.getCoreContainer());\n    SolrQueryResponse resp = new SolrQueryResponse();\n\n    try {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString(),\n              CoreAdminParams.CORE, \"non-existent-core\")\n          , resp);\n      fail(\"Was able to successfully reload non-existent-core\");\n    } catch (Exception e) {\n      assertEquals(\"Expected error message for non-existent core.\", \"Core with core name [non-existent-core] does not exist.\", e.getMessage());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d48ddeb7e5d775a58702f6c2aaf0d501b12f0e6","date":1487814396,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminHandlerTest#testNonexistentCoreReload().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminHandlerTest#testNonexistentCoreReload().mjava","sourceNew":"  @Test\n  public void testNonexistentCoreReload() throws Exception {\n    final CoreAdminHandler admin = new CoreAdminHandler(h.getCoreContainer());\n    SolrQueryResponse resp = new SolrQueryResponse();\n\n    try {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString(),\n              CoreAdminParams.CORE, \"non-existent-core\")\n          , resp);\n      fail(\"Was able to successfully reload non-existent-core\");\n    } catch (Exception e) {\n      String e1 = e.getCause().getMessage();\n      assertEquals(\"Expected error message for non-existent core.\", \"No such core: non-existent-core\", e.getCause().getMessage());\n    }\n\n    // test null core\n    try {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString())\n          , resp);\n      fail(\"Was able to successfully reload null core\");\n    }\n    catch (Exception e) {\n      if (!(e instanceof SolrException)) {\n        fail(\"Expected SolrException but got \" + e);\n      }\n      assertEquals(\"Expected error message for non-existent core.\", \"Missing required parameter: core\", e.getMessage());\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testNonexistentCoreReload() throws Exception {\n    final CoreAdminHandler admin = new CoreAdminHandler(h.getCoreContainer());\n    SolrQueryResponse resp = new SolrQueryResponse();\n\n    try {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString(),\n              CoreAdminParams.CORE, \"non-existent-core\")\n          , resp);\n      fail(\"Was able to successfully reload non-existent-core\");\n    } catch (Exception e) {\n      assertEquals(\"Expected error message for non-existent core.\", \"Core with core name [non-existent-core] does not exist.\", e.getMessage());\n    }\n\n    // test null core\n    try {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString())\n          , resp);\n      fail(\"Was able to successfully reload null core\");\n    }\n    catch (Exception e) {\n      if (!(e instanceof SolrException)) {\n        fail(\"Expected SolrException but got \" + e);\n      }\n      assertEquals(\"Expected error message for non-existent core.\", \"Core with core name [null] does not exist.\", e.getMessage());\n    }\n\n  }\n\n","bugFix":null,"bugIntro":["63a1a94d02abb8cde5dd6ea0defbbc751ce71603"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"63a1a94d02abb8cde5dd6ea0defbbc751ce71603","date":1521902895,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminHandlerTest#testNonexistentCoreReload().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminHandlerTest#testNonexistentCoreReload().mjava","sourceNew":"  @Test\n  public void testNonexistentCoreReload() throws Exception {\n    final CoreAdminHandler admin = new CoreAdminHandler(h.getCoreContainer());\n    SolrQueryResponse resp = new SolrQueryResponse();\n\n    try {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString(),\n              CoreAdminParams.CORE, \"non-existent-core\")\n          , resp);\n      fail(\"Was able to successfully reload non-existent-core\");\n    } catch (Exception e) {\n      assertEquals(\"Expected error message for non-existent core.\", \"No such core: non-existent-core\", e.getMessage());\n    }\n\n    // test null core\n    try {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString())\n          , resp);\n      fail(\"Was able to successfully reload null core\");\n    }\n    catch (Exception e) {\n      if (!(e instanceof SolrException)) {\n        fail(\"Expected SolrException but got \" + e);\n      }\n      assertEquals(\"Expected error message for non-existent core.\", \"Missing required parameter: core\", e.getMessage());\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testNonexistentCoreReload() throws Exception {\n    final CoreAdminHandler admin = new CoreAdminHandler(h.getCoreContainer());\n    SolrQueryResponse resp = new SolrQueryResponse();\n\n    try {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString(),\n              CoreAdminParams.CORE, \"non-existent-core\")\n          , resp);\n      fail(\"Was able to successfully reload non-existent-core\");\n    } catch (Exception e) {\n      String e1 = e.getCause().getMessage();\n      assertEquals(\"Expected error message for non-existent core.\", \"No such core: non-existent-core\", e.getCause().getMessage());\n    }\n\n    // test null core\n    try {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString())\n          , resp);\n      fail(\"Was able to successfully reload null core\");\n    }\n    catch (Exception e) {\n      if (!(e instanceof SolrException)) {\n        fail(\"Expected SolrException but got \" + e);\n      }\n      assertEquals(\"Expected error message for non-existent core.\", \"Missing required parameter: core\", e.getMessage());\n    }\n\n  }\n\n","bugFix":["1d48ddeb7e5d775a58702f6c2aaf0d501b12f0e6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3fa95fb629298e03fe5e3d71a0ce792f1256f711","date":1521903809,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminHandlerTest#testNonexistentCoreReload().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminHandlerTest#testNonexistentCoreReload().mjava","sourceNew":"  @Test\n  public void testNonexistentCoreReload() throws Exception {\n    final CoreAdminHandler admin = new CoreAdminHandler(h.getCoreContainer());\n    SolrQueryResponse resp = new SolrQueryResponse();\n\n    try {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString(),\n              CoreAdminParams.CORE, \"non-existent-core\")\n          , resp);\n      fail(\"Was able to successfully reload non-existent-core\");\n    } catch (Exception e) {\n      assertEquals(\"Expected error message for non-existent core.\", \"No such core: non-existent-core\", e.getMessage());\n    }\n\n    // test null core\n    try {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString())\n          , resp);\n      fail(\"Was able to successfully reload null core\");\n    }\n    catch (Exception e) {\n      if (!(e instanceof SolrException)) {\n        fail(\"Expected SolrException but got \" + e);\n      }\n      assertEquals(\"Expected error message for non-existent core.\", \"Missing required parameter: core\", e.getMessage());\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testNonexistentCoreReload() throws Exception {\n    final CoreAdminHandler admin = new CoreAdminHandler(h.getCoreContainer());\n    SolrQueryResponse resp = new SolrQueryResponse();\n\n    try {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString(),\n              CoreAdminParams.CORE, \"non-existent-core\")\n          , resp);\n      fail(\"Was able to successfully reload non-existent-core\");\n    } catch (Exception e) {\n      String e1 = e.getCause().getMessage();\n      assertEquals(\"Expected error message for non-existent core.\", \"No such core: non-existent-core\", e.getCause().getMessage());\n    }\n\n    // test null core\n    try {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString())\n          , resp);\n      fail(\"Was able to successfully reload null core\");\n    }\n    catch (Exception e) {\n      if (!(e instanceof SolrException)) {\n        fail(\"Expected SolrException but got \" + e);\n      }\n      assertEquals(\"Expected error message for non-existent core.\", \"Missing required parameter: core\", e.getMessage());\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1a307447328c95a00248512b40d7a5ff12ecd6a","date":1564817449,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminHandlerTest#testNonexistentCoreReload().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminHandlerTest#testNonexistentCoreReload().mjava","sourceNew":"  @Test\n  public void testNonexistentCoreReload() throws Exception {\n    final CoreAdminHandler admin = new CoreAdminHandler(h.getCoreContainer());\n    SolrQueryResponse resp = new SolrQueryResponse();\n\n    SolrException e = expectThrows(SolrException.class, () -> {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString(),\n              CoreAdminParams.CORE, \"non-existent-core\")\n          , resp);\n    });\n    assertEquals(\"Expected error message for non-existent core.\", \"No such core: non-existent-core\", e.getMessage());\n\n    // test null core\n    e = expectThrows(SolrException.class, () -> {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString())\n          , resp);\n    });\n    assertEquals(\"Expected error message for non-existent core.\", \"Missing required parameter: core\", e.getMessage());\n  }\n\n","sourceOld":"  @Test\n  public void testNonexistentCoreReload() throws Exception {\n    final CoreAdminHandler admin = new CoreAdminHandler(h.getCoreContainer());\n    SolrQueryResponse resp = new SolrQueryResponse();\n\n    try {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString(),\n              CoreAdminParams.CORE, \"non-existent-core\")\n          , resp);\n      fail(\"Was able to successfully reload non-existent-core\");\n    } catch (Exception e) {\n      assertEquals(\"Expected error message for non-existent core.\", \"No such core: non-existent-core\", e.getMessage());\n    }\n\n    // test null core\n    try {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString())\n          , resp);\n      fail(\"Was able to successfully reload null core\");\n    }\n    catch (Exception e) {\n      if (!(e instanceof SolrException)) {\n        fail(\"Expected SolrException but got \" + e);\n      }\n      assertEquals(\"Expected error message for non-existent core.\", \"Missing required parameter: core\", e.getMessage());\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminHandlerTest#testNonexistentCoreReload().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminHandlerTest#testNonexistentCoreReload().mjava","sourceNew":"  @Test\n  public void testNonexistentCoreReload() throws Exception {\n    final CoreAdminHandler admin = new CoreAdminHandler(h.getCoreContainer());\n    SolrQueryResponse resp = new SolrQueryResponse();\n\n    SolrException e = expectThrows(SolrException.class, () -> {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString(),\n              CoreAdminParams.CORE, \"non-existent-core\")\n          , resp);\n    });\n    assertEquals(\"Expected error message for non-existent core.\", \"No such core: non-existent-core\", e.getMessage());\n\n    // test null core\n    e = expectThrows(SolrException.class, () -> {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString())\n          , resp);\n    });\n    assertEquals(\"Expected error message for non-existent core.\", \"Missing required parameter: core\", e.getMessage());\n  }\n\n","sourceOld":"  @Test\n  public void testNonexistentCoreReload() throws Exception {\n    final CoreAdminHandler admin = new CoreAdminHandler(h.getCoreContainer());\n    SolrQueryResponse resp = new SolrQueryResponse();\n\n    try {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString(),\n              CoreAdminParams.CORE, \"non-existent-core\")\n          , resp);\n      fail(\"Was able to successfully reload non-existent-core\");\n    } catch (Exception e) {\n      assertEquals(\"Expected error message for non-existent core.\", \"No such core: non-existent-core\", e.getMessage());\n    }\n\n    // test null core\n    try {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString())\n          , resp);\n      fail(\"Was able to successfully reload null core\");\n    }\n    catch (Exception e) {\n      if (!(e instanceof SolrException)) {\n        fail(\"Expected SolrException but got \" + e);\n      }\n      assertEquals(\"Expected error message for non-existent core.\", \"Missing required parameter: core\", e.getMessage());\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","date":1565097295,"type":3,"author":"Jan Høydahl","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminHandlerTest#testNonexistentCoreReload().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminHandlerTest#testNonexistentCoreReload().mjava","sourceNew":"  @Test\n  public void testNonexistentCoreReload() throws Exception {\n    final CoreAdminHandler admin = new CoreAdminHandler(h.getCoreContainer());\n    SolrQueryResponse resp = new SolrQueryResponse();\n\n    SolrException e = expectThrows(SolrException.class, () -> {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString(),\n              CoreAdminParams.CORE, \"non-existent-core\")\n          , resp);\n    });\n    assertEquals(\"Expected error message for non-existent core.\", \"No such core: non-existent-core\", e.getMessage());\n\n    // test null core\n    e = expectThrows(SolrException.class, () -> {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString())\n          , resp);\n    });\n    assertEquals(\"Expected error message for non-existent core.\", \"Missing required parameter: core\", e.getMessage());\n  }\n\n","sourceOld":"  @Test\n  public void testNonexistentCoreReload() throws Exception {\n    final CoreAdminHandler admin = new CoreAdminHandler(h.getCoreContainer());\n    SolrQueryResponse resp = new SolrQueryResponse();\n\n    try {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString(),\n              CoreAdminParams.CORE, \"non-existent-core\")\n          , resp);\n      fail(\"Was able to successfully reload non-existent-core\");\n    } catch (Exception e) {\n      assertEquals(\"Expected error message for non-existent core.\", \"No such core: non-existent-core\", e.getMessage());\n    }\n\n    // test null core\n    try {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString())\n          , resp);\n      fail(\"Was able to successfully reload null core\");\n    }\n    catch (Exception e) {\n      if (!(e instanceof SolrException)) {\n        fail(\"Expected SolrException but got \" + e);\n      }\n      assertEquals(\"Expected error message for non-existent core.\", \"Missing required parameter: core\", e.getMessage());\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba055e19afc289adcb5bedaf68513793a7254012","date":1591268575,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminHandlerTest#testNonexistentCoreReload().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminHandlerTest#testNonexistentCoreReload().mjava","sourceNew":"  @Test\n  public void testNonexistentCoreReload() throws Exception {\n    final CoreAdminHandler admin = new CoreAdminHandler(h.getCoreContainer());\n    SolrQueryResponse resp = new SolrQueryResponse();\n\n    SolrException e = expectThrows(SolrException.class, () -> {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString(),\n              CoreAdminParams.CORE, \"non-existent-core\")\n          , resp);\n    });\n    assertEquals(\"Expected error message for non-existent core.\", \"No such core: non-existent-core\", e.getMessage());\n\n    // test null core\n    e = expectThrows(SolrException.class, () -> {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString())\n          , resp);\n    });\n    assertEquals(\"Expected error message for non-existent core.\", \"Missing required parameter: core\", e.getMessage());\n    admin.close();\n  }\n\n","sourceOld":"  @Test\n  public void testNonexistentCoreReload() throws Exception {\n    final CoreAdminHandler admin = new CoreAdminHandler(h.getCoreContainer());\n    SolrQueryResponse resp = new SolrQueryResponse();\n\n    SolrException e = expectThrows(SolrException.class, () -> {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString(),\n              CoreAdminParams.CORE, \"non-existent-core\")\n          , resp);\n    });\n    assertEquals(\"Expected error message for non-existent core.\", \"No such core: non-existent-core\", e.getMessage());\n\n    // test null core\n    e = expectThrows(SolrException.class, () -> {\n      admin.handleRequestBody(\n          req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RELOAD.toString())\n          , resp);\n    });\n    assertEquals(\"Expected error message for non-existent core.\", \"Missing required parameter: core\", e.getMessage());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a186504f1a3b9b01975b92a172e3081e034ec90b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"130496c25626b9e6af5f1833f861e778722b9894":["a186504f1a3b9b01975b92a172e3081e034ec90b"],"ba055e19afc289adcb5bedaf68513793a7254012":["d1a307447328c95a00248512b40d7a5ff12ecd6a"],"3fa95fb629298e03fe5e3d71a0ce792f1256f711":["1d48ddeb7e5d775a58702f6c2aaf0d501b12f0e6","63a1a94d02abb8cde5dd6ea0defbbc751ce71603"],"1d48ddeb7e5d775a58702f6c2aaf0d501b12f0e6":["130496c25626b9e6af5f1833f861e778722b9894"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["3fa95fb629298e03fe5e3d71a0ce792f1256f711"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":["3fa95fb629298e03fe5e3d71a0ce792f1256f711","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"f8061ddd97f3352007d927dae445884a6f3d857b":["3fa95fb629298e03fe5e3d71a0ce792f1256f711","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba055e19afc289adcb5bedaf68513793a7254012"],"63a1a94d02abb8cde5dd6ea0defbbc751ce71603":["1d48ddeb7e5d775a58702f6c2aaf0d501b12f0e6"]},"commit2Childs":{"a186504f1a3b9b01975b92a172e3081e034ec90b":["130496c25626b9e6af5f1833f861e778722b9894"],"130496c25626b9e6af5f1833f861e778722b9894":["1d48ddeb7e5d775a58702f6c2aaf0d501b12f0e6"],"ba055e19afc289adcb5bedaf68513793a7254012":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3fa95fb629298e03fe5e3d71a0ce792f1256f711":["d1a307447328c95a00248512b40d7a5ff12ecd6a","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a186504f1a3b9b01975b92a172e3081e034ec90b"],"1d48ddeb7e5d775a58702f6c2aaf0d501b12f0e6":["3fa95fb629298e03fe5e3d71a0ce792f1256f711","63a1a94d02abb8cde5dd6ea0defbbc751ce71603"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["ba055e19afc289adcb5bedaf68513793a7254012","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":[],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"63a1a94d02abb8cde5dd6ea0defbbc751ce71603":["3fa95fb629298e03fe5e3d71a0ce792f1256f711"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}