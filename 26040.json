{"path":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testIllegalTypeChange().mjava","commits":[{"id":"f7164ff9d826023a8e7b35d8c4e9ee03e4f6fb3a","date":1359473765,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testIllegalTypeChange().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testIllegalTypeChange().mjava","sourceNew":"  public void testIllegalTypeChange() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"dv\", 0L));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"foo\")));\n    try {\n      writer.addDocument(doc);\n      fail(\"did not hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testIllegalTypeChange() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"dv\", 0L));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"foo\")));\n    try {\n      writer.addDocument(doc);\n      fail(\"did not hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testIllegalTypeChange().mjava","pathOld":"/dev/null","sourceNew":"  public void testIllegalTypeChange() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"dv\", 0L));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"foo\")));\n    try {\n      writer.addDocument(doc);\n      fail(\"did not hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testIllegalTypeChange().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testIllegalTypeChange().mjava","sourceNew":"  public void testIllegalTypeChange() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"dv\", 0L));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"foo\")));\n    try {\n      writer.addDocument(doc);\n      fail(\"did not hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    writer.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  public void testIllegalTypeChange() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"dv\", 0L));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"foo\")));\n    try {\n      writer.addDocument(doc);\n      fail(\"did not hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"15b65fdb55ac25c30b38ad720f9cf68c69647a31","date":1398941528,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testIllegalTypeChange().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testIllegalTypeChange().mjava","sourceNew":"  public void testIllegalTypeChange() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"dv\", 0L));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"foo\")));\n    try {\n      writer.addDocument(doc);\n      fail(\"did not hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    IndexReader ir = writer.getReader();\n    assertEquals(1, ir.numDocs());\n    ir.close();\n    writer.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  public void testIllegalTypeChange() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"dv\", 0L));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"foo\")));\n    try {\n      writer.addDocument(doc);\n      fail(\"did not hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    writer.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testIllegalTypeChange().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testIllegalTypeChange().mjava","sourceNew":"  public void testIllegalTypeChange() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"dv\", 0L));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"foo\")));\n    try {\n      writer.addDocument(doc);\n      fail(\"did not hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    IndexReader ir = writer.getReader();\n    assertEquals(1, ir.numDocs());\n    ir.close();\n    writer.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  public void testIllegalTypeChange() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"dv\", 0L));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"foo\")));\n    try {\n      writer.addDocument(doc);\n      fail(\"did not hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    IndexReader ir = writer.getReader();\n    assertEquals(1, ir.numDocs());\n    ir.close();\n    writer.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testIllegalTypeChange().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testIllegalTypeChange().mjava","sourceNew":"  public void testIllegalTypeChange() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"dv\", 0L));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"foo\")));\n    try {\n      writer.addDocument(doc);\n      fail(\"did not hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    IndexReader ir = writer.getReader();\n    assertEquals(1, ir.numDocs());\n    ir.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testIllegalTypeChange() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"dv\", 0L));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"foo\")));\n    try {\n      writer.addDocument(doc);\n      fail(\"did not hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    IndexReader ir = writer.getReader();\n    assertEquals(1, ir.numDocs());\n    ir.close();\n    writer.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testIllegalTypeChange().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testIllegalTypeChange().mjava","sourceNew":"  public void testIllegalTypeChange() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"dv\", 0L));\n    writer.addDocument(doc);\n    Document doc2 = new Document();\n    doc2.add(new SortedDocValuesField(\"dv\", new BytesRef(\"foo\")));\n    expectThrows(IllegalArgumentException.class, () -> {\n      writer.addDocument(doc2);\n    });\n\n    IndexReader ir = writer.getReader();\n    assertEquals(1, ir.numDocs());\n    ir.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testIllegalTypeChange() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"dv\", 0L));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"foo\")));\n    try {\n      writer.addDocument(doc);\n      fail(\"did not hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    IndexReader ir = writer.getReader();\n    assertEquals(1, ir.numDocs());\n    ir.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":["b2d77b004f96b9d924a87db1ab7f85d93e673a65"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f7164ff9d826023a8e7b35d8c4e9ee03e4f6fb3a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"15b65fdb55ac25c30b38ad720f9cf68c69647a31":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["15b65fdb55ac25c30b38ad720f9cf68c69647a31"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f7164ff9d826023a8e7b35d8c4e9ee03e4f6fb3a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"]},"commit2Childs":{"f7164ff9d826023a8e7b35d8c4e9ee03e4f6fb3a":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"15b65fdb55ac25c30b38ad720f9cf68c69647a31":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f7164ff9d826023a8e7b35d8c4e9ee03e4f6fb3a","d4d69c535930b5cce125cff868d40f6373dc27d4"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["05fe562aa248790944d43cdd478f512572835ba0"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["15b65fdb55ac25c30b38ad720f9cf68c69647a31"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}