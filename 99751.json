{"path":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarity2#setUp().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarity2#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/similarities/TestSimilarity2#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    sims = new ArrayList<Similarity>();\n    sims.add(new DefaultSimilarity());\n    sims.add(new BM25Similarity());\n    // TODO: not great that we dup this all with TestSimilarityBase\n    for (BasicModel basicModel : TestSimilarityBase.BASIC_MODELS) {\n      for (AfterEffect afterEffect : TestSimilarityBase.AFTER_EFFECTS) {\n        for (Normalization normalization : TestSimilarityBase.NORMALIZATIONS) {\n          sims.add(new DFRSimilarity(basicModel, afterEffect, normalization));\n        }\n      }\n    }\n    for (Distribution distribution : TestSimilarityBase.DISTRIBUTIONS) {\n      for (Lambda lambda : TestSimilarityBase.LAMBDAS) {\n        for (Normalization normalization : TestSimilarityBase.NORMALIZATIONS) {\n          sims.add(new IBSimilarity(distribution, lambda, normalization));\n        }\n      }\n    }\n    sims.add(new LMDirichletSimilarity());\n    sims.add(new LMJelinekMercerSimilarity(0.1f));\n    sims.add(new LMJelinekMercerSimilarity(0.7f));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    sims = new ArrayList<Similarity>();\n    sims.add(new DefaultSimilarity());\n    sims.add(new BM25Similarity());\n    // TODO: not great that we dup this all with TestSimilarityBase\n    for (BasicModel basicModel : TestSimilarityBase.BASIC_MODELS) {\n      for (AfterEffect afterEffect : TestSimilarityBase.AFTER_EFFECTS) {\n        for (Normalization normalization : TestSimilarityBase.NORMALIZATIONS) {\n          sims.add(new DFRSimilarity(basicModel, afterEffect, normalization));\n        }\n      }\n    }\n    for (Distribution distribution : TestSimilarityBase.DISTRIBUTIONS) {\n      for (Lambda lambda : TestSimilarityBase.LAMBDAS) {\n        for (Normalization normalization : TestSimilarityBase.NORMALIZATIONS) {\n          sims.add(new IBSimilarity(distribution, lambda, normalization));\n        }\n      }\n    }\n    sims.add(new LMDirichletSimilarity());\n    sims.add(new LMJelinekMercerSimilarity(0.1f));\n    sims.add(new LMJelinekMercerSimilarity(0.7f));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarity2#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarity2#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    sims = new ArrayList<>();\n    sims.add(new DefaultSimilarity());\n    sims.add(new BM25Similarity());\n    // TODO: not great that we dup this all with TestSimilarityBase\n    for (BasicModel basicModel : TestSimilarityBase.BASIC_MODELS) {\n      for (AfterEffect afterEffect : TestSimilarityBase.AFTER_EFFECTS) {\n        for (Normalization normalization : TestSimilarityBase.NORMALIZATIONS) {\n          sims.add(new DFRSimilarity(basicModel, afterEffect, normalization));\n        }\n      }\n    }\n    for (Distribution distribution : TestSimilarityBase.DISTRIBUTIONS) {\n      for (Lambda lambda : TestSimilarityBase.LAMBDAS) {\n        for (Normalization normalization : TestSimilarityBase.NORMALIZATIONS) {\n          sims.add(new IBSimilarity(distribution, lambda, normalization));\n        }\n      }\n    }\n    sims.add(new LMDirichletSimilarity());\n    sims.add(new LMJelinekMercerSimilarity(0.1f));\n    sims.add(new LMJelinekMercerSimilarity(0.7f));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    sims = new ArrayList<Similarity>();\n    sims.add(new DefaultSimilarity());\n    sims.add(new BM25Similarity());\n    // TODO: not great that we dup this all with TestSimilarityBase\n    for (BasicModel basicModel : TestSimilarityBase.BASIC_MODELS) {\n      for (AfterEffect afterEffect : TestSimilarityBase.AFTER_EFFECTS) {\n        for (Normalization normalization : TestSimilarityBase.NORMALIZATIONS) {\n          sims.add(new DFRSimilarity(basicModel, afterEffect, normalization));\n        }\n      }\n    }\n    for (Distribution distribution : TestSimilarityBase.DISTRIBUTIONS) {\n      for (Lambda lambda : TestSimilarityBase.LAMBDAS) {\n        for (Normalization normalization : TestSimilarityBase.NORMALIZATIONS) {\n          sims.add(new IBSimilarity(distribution, lambda, normalization));\n        }\n      }\n    }\n    sims.add(new LMDirichletSimilarity());\n    sims.add(new LMJelinekMercerSimilarity(0.1f));\n    sims.add(new LMJelinekMercerSimilarity(0.7f));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81d0720146de53dd3a4a023d2a3d1089d86d748d","date":1442268215,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarity2#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarity2#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    sims = new ArrayList<>();\n    sims.add(new ClassicSimilarity());\n    sims.add(new BM25Similarity());\n    // TODO: not great that we dup this all with TestSimilarityBase\n    for (BasicModel basicModel : TestSimilarityBase.BASIC_MODELS) {\n      for (AfterEffect afterEffect : TestSimilarityBase.AFTER_EFFECTS) {\n        for (Normalization normalization : TestSimilarityBase.NORMALIZATIONS) {\n          sims.add(new DFRSimilarity(basicModel, afterEffect, normalization));\n        }\n      }\n    }\n    for (Distribution distribution : TestSimilarityBase.DISTRIBUTIONS) {\n      for (Lambda lambda : TestSimilarityBase.LAMBDAS) {\n        for (Normalization normalization : TestSimilarityBase.NORMALIZATIONS) {\n          sims.add(new IBSimilarity(distribution, lambda, normalization));\n        }\n      }\n    }\n    sims.add(new LMDirichletSimilarity());\n    sims.add(new LMJelinekMercerSimilarity(0.1f));\n    sims.add(new LMJelinekMercerSimilarity(0.7f));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    sims = new ArrayList<>();\n    sims.add(new DefaultSimilarity());\n    sims.add(new BM25Similarity());\n    // TODO: not great that we dup this all with TestSimilarityBase\n    for (BasicModel basicModel : TestSimilarityBase.BASIC_MODELS) {\n      for (AfterEffect afterEffect : TestSimilarityBase.AFTER_EFFECTS) {\n        for (Normalization normalization : TestSimilarityBase.NORMALIZATIONS) {\n          sims.add(new DFRSimilarity(basicModel, afterEffect, normalization));\n        }\n      }\n    }\n    for (Distribution distribution : TestSimilarityBase.DISTRIBUTIONS) {\n      for (Lambda lambda : TestSimilarityBase.LAMBDAS) {\n        for (Normalization normalization : TestSimilarityBase.NORMALIZATIONS) {\n          sims.add(new IBSimilarity(distribution, lambda, normalization));\n        }\n      }\n    }\n    sims.add(new LMDirichletSimilarity());\n    sims.add(new LMJelinekMercerSimilarity(0.1f));\n    sims.add(new LMJelinekMercerSimilarity(0.7f));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a836deab3a09546740b8ee2f1f776e83062f39e7","date":1453109062,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarity2#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarity2#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    sims = new ArrayList<>();\n    sims.add(new ClassicSimilarity());\n    sims.add(new BM25Similarity());\n    // TODO: not great that we dup this all with TestSimilarityBase\n    for (BasicModel basicModel : TestSimilarityBase.BASIC_MODELS) {\n      for (AfterEffect afterEffect : TestSimilarityBase.AFTER_EFFECTS) {\n        for (Normalization normalization : TestSimilarityBase.NORMALIZATIONS) {\n          sims.add(new DFRSimilarity(basicModel, afterEffect, normalization));\n        }\n      }\n    }\n    for (Distribution distribution : TestSimilarityBase.DISTRIBUTIONS) {\n      for (Lambda lambda : TestSimilarityBase.LAMBDAS) {\n        for (Normalization normalization : TestSimilarityBase.NORMALIZATIONS) {\n          sims.add(new IBSimilarity(distribution, lambda, normalization));\n        }\n      }\n    }\n    sims.add(new LMDirichletSimilarity());\n    sims.add(new LMJelinekMercerSimilarity(0.1f));\n    sims.add(new LMJelinekMercerSimilarity(0.7f));\n    sims.add(new DFISimilarity());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    sims = new ArrayList<>();\n    sims.add(new ClassicSimilarity());\n    sims.add(new BM25Similarity());\n    // TODO: not great that we dup this all with TestSimilarityBase\n    for (BasicModel basicModel : TestSimilarityBase.BASIC_MODELS) {\n      for (AfterEffect afterEffect : TestSimilarityBase.AFTER_EFFECTS) {\n        for (Normalization normalization : TestSimilarityBase.NORMALIZATIONS) {\n          sims.add(new DFRSimilarity(basicModel, afterEffect, normalization));\n        }\n      }\n    }\n    for (Distribution distribution : TestSimilarityBase.DISTRIBUTIONS) {\n      for (Lambda lambda : TestSimilarityBase.LAMBDAS) {\n        for (Normalization normalization : TestSimilarityBase.NORMALIZATIONS) {\n          sims.add(new IBSimilarity(distribution, lambda, normalization));\n        }\n      }\n    }\n    sims.add(new LMDirichletSimilarity());\n    sims.add(new LMJelinekMercerSimilarity(0.1f));\n    sims.add(new LMJelinekMercerSimilarity(0.7f));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dd5c7feba82d3857622c10a26e9391ffcebe04a","date":1453469412,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarity2#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarity2#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    sims = new ArrayList<>();\n    sims.add(new ClassicSimilarity());\n    sims.add(new BM25Similarity());\n    // TODO: not great that we dup this all with TestSimilarityBase\n    for (BasicModel basicModel : TestSimilarityBase.BASIC_MODELS) {\n      for (AfterEffect afterEffect : TestSimilarityBase.AFTER_EFFECTS) {\n        for (Normalization normalization : TestSimilarityBase.NORMALIZATIONS) {\n          sims.add(new DFRSimilarity(basicModel, afterEffect, normalization));\n        }\n      }\n    }\n    for (Distribution distribution : TestSimilarityBase.DISTRIBUTIONS) {\n      for (Lambda lambda : TestSimilarityBase.LAMBDAS) {\n        for (Normalization normalization : TestSimilarityBase.NORMALIZATIONS) {\n          sims.add(new IBSimilarity(distribution, lambda, normalization));\n        }\n      }\n    }\n    sims.add(new LMDirichletSimilarity());\n    sims.add(new LMJelinekMercerSimilarity(0.1f));\n    sims.add(new LMJelinekMercerSimilarity(0.7f));\n    for (Independence independence : TestSimilarityBase.INDEPENDENCE_MEASURES) {\n      sims.add(new DFISimilarity(independence));\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    sims = new ArrayList<>();\n    sims.add(new ClassicSimilarity());\n    sims.add(new BM25Similarity());\n    // TODO: not great that we dup this all with TestSimilarityBase\n    for (BasicModel basicModel : TestSimilarityBase.BASIC_MODELS) {\n      for (AfterEffect afterEffect : TestSimilarityBase.AFTER_EFFECTS) {\n        for (Normalization normalization : TestSimilarityBase.NORMALIZATIONS) {\n          sims.add(new DFRSimilarity(basicModel, afterEffect, normalization));\n        }\n      }\n    }\n    for (Distribution distribution : TestSimilarityBase.DISTRIBUTIONS) {\n      for (Lambda lambda : TestSimilarityBase.LAMBDAS) {\n        for (Normalization normalization : TestSimilarityBase.NORMALIZATIONS) {\n          sims.add(new IBSimilarity(distribution, lambda, normalization));\n        }\n      }\n    }\n    sims.add(new LMDirichletSimilarity());\n    sims.add(new LMJelinekMercerSimilarity(0.1f));\n    sims.add(new LMJelinekMercerSimilarity(0.7f));\n    sims.add(new DFISimilarity());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a18036a6b5e6cd6aae4eb93545afff11bc73b6e","date":1514538360,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarity2#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarity2#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    sims = new ArrayList<>();\n    sims.add(new ClassicSimilarity());\n    sims.add(new BM25Similarity());\n    sims.add(new BooleanSimilarity());\n    sims.add(new AxiomaticF1EXP());\n    sims.add(new AxiomaticF1LOG());\n    sims.add(new AxiomaticF2EXP());\n    sims.add(new AxiomaticF2LOG());\n    sims.add(new AxiomaticF3EXP(0.25f, 3));\n    sims.add(new AxiomaticF3LOG(0.25f, 3));\n    // TODO: not great that we dup this all with TestSimilarityBase\n    for (BasicModel basicModel : TestSimilarityBase.BASIC_MODELS) {\n      for (AfterEffect afterEffect : TestSimilarityBase.AFTER_EFFECTS) {\n        for (Normalization normalization : TestSimilarityBase.NORMALIZATIONS) {\n          sims.add(new DFRSimilarity(basicModel, afterEffect, normalization));\n        }\n      }\n    }\n    for (Distribution distribution : TestSimilarityBase.DISTRIBUTIONS) {\n      for (Lambda lambda : TestSimilarityBase.LAMBDAS) {\n        for (Normalization normalization : TestSimilarityBase.NORMALIZATIONS) {\n          sims.add(new IBSimilarity(distribution, lambda, normalization));\n        }\n      }\n    }\n    sims.add(new LMDirichletSimilarity());\n    sims.add(new LMJelinekMercerSimilarity(0.1f));\n    sims.add(new LMJelinekMercerSimilarity(0.7f));\n    for (Independence independence : TestSimilarityBase.INDEPENDENCE_MEASURES) {\n      sims.add(new DFISimilarity(independence));\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    sims = new ArrayList<>();\n    sims.add(new ClassicSimilarity());\n    sims.add(new BM25Similarity());\n    // TODO: not great that we dup this all with TestSimilarityBase\n    for (BasicModel basicModel : TestSimilarityBase.BASIC_MODELS) {\n      for (AfterEffect afterEffect : TestSimilarityBase.AFTER_EFFECTS) {\n        for (Normalization normalization : TestSimilarityBase.NORMALIZATIONS) {\n          sims.add(new DFRSimilarity(basicModel, afterEffect, normalization));\n        }\n      }\n    }\n    for (Distribution distribution : TestSimilarityBase.DISTRIBUTIONS) {\n      for (Lambda lambda : TestSimilarityBase.LAMBDAS) {\n        for (Normalization normalization : TestSimilarityBase.NORMALIZATIONS) {\n          sims.add(new IBSimilarity(distribution, lambda, normalization));\n        }\n      }\n    }\n    sims.add(new LMDirichletSimilarity());\n    sims.add(new LMJelinekMercerSimilarity(0.1f));\n    sims.add(new LMJelinekMercerSimilarity(0.7f));\n    for (Independence independence : TestSimilarityBase.INDEPENDENCE_MEASURES) {\n      sims.add(new DFISimilarity(independence));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7dd5c7feba82d3857622c10a26e9391ffcebe04a":["a836deab3a09546740b8ee2f1f776e83062f39e7"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a836deab3a09546740b8ee2f1f776e83062f39e7":["81d0720146de53dd3a4a023d2a3d1089d86d748d"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4a18036a6b5e6cd6aae4eb93545afff11bc73b6e":["7dd5c7feba82d3857622c10a26e9391ffcebe04a"],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4a18036a6b5e6cd6aae4eb93545afff11bc73b6e"]},"commit2Childs":{"7dd5c7feba82d3857622c10a26e9391ffcebe04a":["4a18036a6b5e6cd6aae4eb93545afff11bc73b6e"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["81d0720146de53dd3a4a023d2a3d1089d86d748d"],"a836deab3a09546740b8ee2f1f776e83062f39e7":["7dd5c7feba82d3857622c10a26e9391ffcebe04a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4a18036a6b5e6cd6aae4eb93545afff11bc73b6e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["a836deab3a09546740b8ee2f1f776e83062f39e7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}