{"path":"modules/analysis/uima/src/java/org/apache/lucene/analysis/uima/UIMATypeAwareAnnotationsTokenizer#analyzeText().mjava","commits":[{"id":"2ac3b0ef79dfcf20e23ceb1d0e4165591014307f","date":1329257614,"type":0,"author":"Tommaso Teofili","isMerge":false,"pathNew":"modules/analysis/uima/src/java/org/apache/lucene/analysis/uima/UIMATypeAwareAnnotationsTokenizer#analyzeText().mjava","pathOld":"/dev/null","sourceNew":"  private void analyzeText() throws IOException, ResourceInitializationException, AnalysisEngineProcessException,\n      CASException {\n    AnalysisEngine ae = AEProviderFactory.getInstance().getAEProvider(\"\", descriptorPath).getAE();\n    CAS cas = analyzeInput(ae);\n    finalOffset = correctOffset(cas.getDocumentText().length());\n    Type tokenType = cas.getTypeSystem().getType(tokenTypeString);\n    iterator = cas.getAnnotationIndex(tokenType).iterator();\n    featurePath = cas.createFeaturePath();\n    featurePath.initialize(typeAttributeFeaturePath);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"182a24bbb41c826d0ccff1e503b8d57583f7f1fb","date":1329337760,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/uima/src/java/org/apache/lucene/analysis/uima/UIMATypeAwareAnnotationsTokenizer#analyzeText().mjava","pathOld":"modules/analysis/uima/src/java/org/apache/lucene/analysis/uima/UIMATypeAwareAnnotationsTokenizer#analyzeText().mjava","sourceNew":"  private void analyzeText() throws IOException, AnalysisEngineProcessException, CASException {\n    analyzeInput();\n    finalOffset = correctOffset(cas.getDocumentText().length());\n    Type tokenType = cas.getTypeSystem().getType(tokenTypeString);\n    iterator = cas.getAnnotationIndex(tokenType).iterator();\n    featurePath = cas.createFeaturePath();\n    featurePath.initialize(typeAttributeFeaturePath);\n  }\n\n","sourceOld":"  private void analyzeText() throws IOException, ResourceInitializationException, AnalysisEngineProcessException,\n      CASException {\n    AnalysisEngine ae = AEProviderFactory.getInstance().getAEProvider(\"\", descriptorPath).getAE();\n    CAS cas = analyzeInput(ae);\n    finalOffset = correctOffset(cas.getDocumentText().length());\n    Type tokenType = cas.getTypeSystem().getType(tokenTypeString);\n    iterator = cas.getAnnotationIndex(tokenType).iterator();\n    featurePath = cas.createFeaturePath();\n    featurePath.initialize(typeAttributeFeaturePath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aec84e8d8ab512aa75776fc6700cd109cc26b1a1","date":1330179240,"type":5,"author":"Tommaso Teofili","isMerge":false,"pathNew":"modules/analysis/uima/src/java/org/apache/lucene/analysis/uima/UIMATypeAwareAnnotationsTokenizer#initializeIterator().mjava","pathOld":"modules/analysis/uima/src/java/org/apache/lucene/analysis/uima/UIMATypeAwareAnnotationsTokenizer#analyzeText().mjava","sourceNew":"  protected void initializeIterator() throws IOException {\n    try {\n      analyzeInput();\n    } catch (AnalysisEngineProcessException e) {\n      throw new IOException(e);\n    }\n    featurePath = cas.createFeaturePath();\n    try {\n      featurePath.initialize(typeAttributeFeaturePath);\n    } catch (CASException e) {\n      featurePath = null;\n      throw new IOException(e);\n    }\n    finalOffset = correctOffset(cas.getDocumentText().length());\n    Type tokenType = cas.getTypeSystem().getType(tokenTypeString);\n    iterator = cas.getAnnotationIndex(tokenType).iterator();\n\n  }\n\n","sourceOld":"  private void analyzeText() throws IOException, AnalysisEngineProcessException, CASException {\n    analyzeInput();\n    finalOffset = correctOffset(cas.getDocumentText().length());\n    Type tokenType = cas.getTypeSystem().getType(tokenTypeString);\n    iterator = cas.getAnnotationIndex(tokenType).iterator();\n    featurePath = cas.createFeaturePath();\n    featurePath.initialize(typeAttributeFeaturePath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":4,"author":"Ryan McKinley","isMerge":true,"pathNew":"/dev/null","pathOld":"modules/analysis/uima/src/java/org/apache/lucene/analysis/uima/UIMATypeAwareAnnotationsTokenizer#analyzeText().mjava","sourceNew":null,"sourceOld":"  private void analyzeText() throws IOException, AnalysisEngineProcessException, CASException {\n    analyzeInput();\n    finalOffset = correctOffset(cas.getDocumentText().length());\n    Type tokenType = cas.getTypeSystem().getType(tokenTypeString);\n    iterator = cas.getAnnotationIndex(tokenType).iterator();\n    featurePath = cas.createFeaturePath();\n    featurePath.initialize(typeAttributeFeaturePath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2ac3b0ef79dfcf20e23ceb1d0e4165591014307f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["182a24bbb41c826d0ccff1e503b8d57583f7f1fb","aec84e8d8ab512aa75776fc6700cd109cc26b1a1"],"aec84e8d8ab512aa75776fc6700cd109cc26b1a1":["182a24bbb41c826d0ccff1e503b8d57583f7f1fb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"182a24bbb41c826d0ccff1e503b8d57583f7f1fb":["2ac3b0ef79dfcf20e23ceb1d0e4165591014307f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["aec84e8d8ab512aa75776fc6700cd109cc26b1a1"]},"commit2Childs":{"2ac3b0ef79dfcf20e23ceb1d0e4165591014307f":["182a24bbb41c826d0ccff1e503b8d57583f7f1fb"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"aec84e8d8ab512aa75776fc6700cd109cc26b1a1":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2ac3b0ef79dfcf20e23ceb1d0e4165591014307f"],"182a24bbb41c826d0ccff1e503b8d57583f7f1fb":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","aec84e8d8ab512aa75776fc6700cd109cc26b1a1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}