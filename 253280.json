{"path":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/DisjunctionIntervalsSource.DisjunctionIntervalIterator#nextInterval().mjava","commits":[{"id":"361b1afc99f68598c73d37074aec089c9c951586","date":1522744632,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/DisjunctionIntervalsSource.DisjunctionIntervalIterator#nextInterval().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public int nextInterval() throws IOException {\n      if (current == EMPTY) {\n        if (intervalQueue.size() > 0) {\n          current = intervalQueue.top();\n        }\n        return current.start();\n      }\n      int start = current.start(), end = current.end();\n      while (intervalQueue.size() > 0 && contains(intervalQueue.top(), start, end)) {\n        IntervalIterator it = intervalQueue.pop();\n        if (it != null && it.nextInterval() != NO_MORE_INTERVALS) {\n          intervalQueue.add(it);\n        }\n      }\n      if (intervalQueue.size() == 0) {\n        current = EMPTY;\n        return NO_MORE_INTERVALS;\n      }\n      current = intervalQueue.top();\n      return current.start();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73e8ff95f8cffc428b122a76c499792dbea283c0","date":1543916862,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/DisjunctionIntervalsSource.DisjunctionIntervalIterator#nextInterval().mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/DisjunctionIntervalsSource.DisjunctionIntervalIterator#nextInterval().mjava","sourceNew":"    @Override\n    public int nextInterval() throws IOException {\n      if (current == EMPTY || current == EXHAUSTED) {\n        if (intervalQueue.size() > 0) {\n          current = intervalQueue.top();\n        }\n        return current.start();\n      }\n      int start = current.start(), end = current.end();\n      while (intervalQueue.size() > 0 && contains(intervalQueue.top(), start, end)) {\n        IntervalIterator it = intervalQueue.pop();\n        if (it != null && it.nextInterval() != NO_MORE_INTERVALS) {\n          intervalQueue.add(it);\n        }\n      }\n      if (intervalQueue.size() == 0) {\n        current = EXHAUSTED;\n        return NO_MORE_INTERVALS;\n      }\n      current = intervalQueue.top();\n      return current.start();\n    }\n\n","sourceOld":"    @Override\n    public int nextInterval() throws IOException {\n      if (current == EMPTY) {\n        if (intervalQueue.size() > 0) {\n          current = intervalQueue.top();\n        }\n        return current.start();\n      }\n      int start = current.start(), end = current.end();\n      while (intervalQueue.size() > 0 && contains(intervalQueue.top(), start, end)) {\n        IntervalIterator it = intervalQueue.pop();\n        if (it != null && it.nextInterval() != NO_MORE_INTERVALS) {\n          intervalQueue.add(it);\n        }\n      }\n      if (intervalQueue.size() == 0) {\n        current = EMPTY;\n        return NO_MORE_INTERVALS;\n      }\n      current = intervalQueue.top();\n      return current.start();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97ee2282ff806e9bc9d705f389cf40451ab81c3e","date":1561721333,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/intervals/DisjunctionIntervalsSource.DisjunctionIntervalIterator#nextInterval().mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/DisjunctionIntervalsSource.DisjunctionIntervalIterator#nextInterval().mjava","sourceNew":"    @Override\n    public int nextInterval() throws IOException {\n      if (current == EMPTY || current == EXHAUSTED) {\n        if (intervalQueue.size() > 0) {\n          current = intervalQueue.top();\n        }\n        return current.start();\n      }\n      int start = current.start(), end = current.end();\n      while (intervalQueue.size() > 0 && contains(intervalQueue.top(), start, end)) {\n        IntervalIterator it = intervalQueue.pop();\n        if (it != null && it.nextInterval() != NO_MORE_INTERVALS) {\n          intervalQueue.add(it);\n        }\n      }\n      if (intervalQueue.size() == 0) {\n        current = EXHAUSTED;\n        return NO_MORE_INTERVALS;\n      }\n      current = intervalQueue.top();\n      return current.start();\n    }\n\n","sourceOld":"    @Override\n    public int nextInterval() throws IOException {\n      if (current == EMPTY || current == EXHAUSTED) {\n        if (intervalQueue.size() > 0) {\n          current = intervalQueue.top();\n        }\n        return current.start();\n      }\n      int start = current.start(), end = current.end();\n      while (intervalQueue.size() > 0 && contains(intervalQueue.top(), start, end)) {\n        IntervalIterator it = intervalQueue.pop();\n        if (it != null && it.nextInterval() != NO_MORE_INTERVALS) {\n          intervalQueue.add(it);\n        }\n      }\n      if (intervalQueue.size() == 0) {\n        current = EXHAUSTED;\n        return NO_MORE_INTERVALS;\n      }\n      current = intervalQueue.top();\n      return current.start();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["73e8ff95f8cffc428b122a76c499792dbea283c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"361b1afc99f68598c73d37074aec089c9c951586":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"73e8ff95f8cffc428b122a76c499792dbea283c0":["361b1afc99f68598c73d37074aec089c9c951586"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"]},"commit2Childs":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["361b1afc99f68598c73d37074aec089c9c951586"],"361b1afc99f68598c73d37074aec089c9c951586":["73e8ff95f8cffc428b122a76c499792dbea283c0"],"73e8ff95f8cffc428b122a76c499792dbea283c0":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}