{"path":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testTwoNumbersOneMissing().mjava","commits":[{"id":"9faa42f41b6adb98daf009cf99a4ee239189e469","date":1376648738,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testTwoNumbersOneMissing().mjava","pathOld":"/dev/null","sourceNew":"  public void testTwoNumbersOneMissing() throws IOException {\n    assumeTrue(\"Codec does not support getDocsWithField\", codecSupportsDocsWithField(\"dv1\"));\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"dv1\", 0));\n    iw.addDocument(doc);\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.forceMerge(1);\n    iw.close();\n    \n    IndexReader ir = DirectoryReader.open(directory);\n    assertEquals(1, ir.leaves().size());\n    AtomicReader ar = ir.leaves().get(0).reader();\n    NumericDocValues dv = ar.getNumericDocValues(\"dv1\");\n    assertEquals(0, dv.get(0));\n    assertEquals(0, dv.get(1));\n    Bits docsWithField = ar.getDocsWithField(\"dv1\");\n    assertTrue(docsWithField.get(0));\n    assertFalse(docsWithField.get(1));\n    ir.close();\n    directory.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d12774649e77a6efccc3502c735c2893b52af6d6","date":1376964312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testTwoNumbersOneMissing().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testTwoNumbersOneMissing().mjava","sourceNew":"  public void testTwoNumbersOneMissing() throws IOException {\n    assumeTrue(\"Codec does not support getDocsWithField\", defaultCodecSupportsDocsWithField());\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"dv1\", 0));\n    iw.addDocument(doc);\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.forceMerge(1);\n    iw.close();\n    \n    IndexReader ir = DirectoryReader.open(directory);\n    assertEquals(1, ir.leaves().size());\n    AtomicReader ar = ir.leaves().get(0).reader();\n    NumericDocValues dv = ar.getNumericDocValues(\"dv1\");\n    assertEquals(0, dv.get(0));\n    assertEquals(0, dv.get(1));\n    Bits docsWithField = ar.getDocsWithField(\"dv1\");\n    assertTrue(docsWithField.get(0));\n    assertFalse(docsWithField.get(1));\n    ir.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testTwoNumbersOneMissing() throws IOException {\n    assumeTrue(\"Codec does not support getDocsWithField\", codecSupportsDocsWithField(\"dv1\"));\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"dv1\", 0));\n    iw.addDocument(doc);\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.forceMerge(1);\n    iw.close();\n    \n    IndexReader ir = DirectoryReader.open(directory);\n    assertEquals(1, ir.leaves().size());\n    AtomicReader ar = ir.leaves().get(0).reader();\n    NumericDocValues dv = ar.getNumericDocValues(\"dv1\");\n    assertEquals(0, dv.get(0));\n    assertEquals(0, dv.get(1));\n    Bits docsWithField = ar.getDocsWithField(\"dv1\");\n    assertTrue(docsWithField.get(0));\n    assertFalse(docsWithField.get(1));\n    ir.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","date":1377034255,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testTwoNumbersOneMissing().mjava","pathOld":"/dev/null","sourceNew":"  public void testTwoNumbersOneMissing() throws IOException {\n    assumeTrue(\"Codec does not support getDocsWithField\", defaultCodecSupportsDocsWithField());\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"dv1\", 0));\n    iw.addDocument(doc);\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.forceMerge(1);\n    iw.close();\n    \n    IndexReader ir = DirectoryReader.open(directory);\n    assertEquals(1, ir.leaves().size());\n    AtomicReader ar = ir.leaves().get(0).reader();\n    NumericDocValues dv = ar.getNumericDocValues(\"dv1\");\n    assertEquals(0, dv.get(0));\n    assertEquals(0, dv.get(1));\n    Bits docsWithField = ar.getDocsWithField(\"dv1\");\n    assertTrue(docsWithField.get(0));\n    assertFalse(docsWithField.get(1));\n    ir.close();\n    directory.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testTwoNumbersOneMissing().mjava","pathOld":"/dev/null","sourceNew":"  public void testTwoNumbersOneMissing() throws IOException {\n    assumeTrue(\"Codec does not support getDocsWithField\", defaultCodecSupportsDocsWithField());\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"dv1\", 0));\n    iw.addDocument(doc);\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.forceMerge(1);\n    iw.close();\n    \n    IndexReader ir = DirectoryReader.open(directory);\n    assertEquals(1, ir.leaves().size());\n    AtomicReader ar = ir.leaves().get(0).reader();\n    NumericDocValues dv = ar.getNumericDocValues(\"dv1\");\n    assertEquals(0, dv.get(0));\n    assertEquals(0, dv.get(1));\n    Bits docsWithField = ar.getDocsWithField(\"dv1\");\n    assertTrue(docsWithField.get(0));\n    assertFalse(docsWithField.get(1));\n    ir.close();\n    directory.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"487204058e79506a6ddba0065cfff810bc15b06a","date":1378216488,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testTwoNumbersOneMissing().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testTwoNumbersOneMissing().mjava","sourceNew":"  public void testTwoNumbersOneMissing() throws IOException {\n    assumeTrue(\"Codec does not support getDocsWithField\", defaultCodecSupportsDocsWithField(\"dv1\"));\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"dv1\", 0));\n    iw.addDocument(doc);\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.forceMerge(1);\n    iw.close();\n    \n    IndexReader ir = DirectoryReader.open(directory);\n    assertEquals(1, ir.leaves().size());\n    AtomicReader ar = ir.leaves().get(0).reader();\n    NumericDocValues dv = ar.getNumericDocValues(\"dv1\");\n    assertEquals(0, dv.get(0));\n    assertEquals(0, dv.get(1));\n    Bits docsWithField = ar.getDocsWithField(\"dv1\");\n    assertTrue(docsWithField.get(0));\n    assertFalse(docsWithField.get(1));\n    ir.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testTwoNumbersOneMissing() throws IOException {\n    assumeTrue(\"Codec does not support getDocsWithField\", defaultCodecSupportsDocsWithField());\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"dv1\", 0));\n    iw.addDocument(doc);\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.forceMerge(1);\n    iw.close();\n    \n    IndexReader ir = DirectoryReader.open(directory);\n    assertEquals(1, ir.leaves().size());\n    AtomicReader ar = ir.leaves().get(0).reader();\n    NumericDocValues dv = ar.getNumericDocValues(\"dv1\");\n    assertEquals(0, dv.get(0));\n    assertEquals(0, dv.get(1));\n    Bits docsWithField = ar.getDocsWithField(\"dv1\");\n    assertTrue(docsWithField.get(0));\n    assertFalse(docsWithField.get(1));\n    ir.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"820c994610cafbde5892c00924bdf69fffaaf38f","date":1378227060,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testTwoNumbersOneMissing().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testTwoNumbersOneMissing().mjava","sourceNew":"  public void testTwoNumbersOneMissing() throws IOException {\n    assumeTrue(\"Codec does not support getDocsWithField\", defaultCodecSupportsDocsWithField());\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"dv1\", 0));\n    iw.addDocument(doc);\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.forceMerge(1);\n    iw.close();\n    \n    IndexReader ir = DirectoryReader.open(directory);\n    assertEquals(1, ir.leaves().size());\n    AtomicReader ar = ir.leaves().get(0).reader();\n    NumericDocValues dv = ar.getNumericDocValues(\"dv1\");\n    assertEquals(0, dv.get(0));\n    assertEquals(0, dv.get(1));\n    Bits docsWithField = ar.getDocsWithField(\"dv1\");\n    assertTrue(docsWithField.get(0));\n    assertFalse(docsWithField.get(1));\n    ir.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testTwoNumbersOneMissing() throws IOException {\n    assumeTrue(\"Codec does not support getDocsWithField\", defaultCodecSupportsDocsWithField(\"dv1\"));\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"dv1\", 0));\n    iw.addDocument(doc);\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.forceMerge(1);\n    iw.close();\n    \n    IndexReader ir = DirectoryReader.open(directory);\n    assertEquals(1, ir.leaves().size());\n    AtomicReader ar = ir.leaves().get(0).reader();\n    NumericDocValues dv = ar.getNumericDocValues(\"dv1\");\n    assertEquals(0, dv.get(0));\n    assertEquals(0, dv.get(1));\n    Bits docsWithField = ar.getDocsWithField(\"dv1\");\n    assertTrue(docsWithField.get(0));\n    assertFalse(docsWithField.get(1));\n    ir.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testTwoNumbersOneMissing().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testTwoNumbersOneMissing().mjava","sourceNew":"  public void testTwoNumbersOneMissing() throws IOException {\n    assumeTrue(\"Codec does not support getDocsWithField\", defaultCodecSupportsDocsWithField());\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"dv1\", 0));\n    iw.addDocument(doc);\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.forceMerge(1);\n    iw.shutdown();\n    \n    IndexReader ir = DirectoryReader.open(directory);\n    assertEquals(1, ir.leaves().size());\n    AtomicReader ar = ir.leaves().get(0).reader();\n    NumericDocValues dv = ar.getNumericDocValues(\"dv1\");\n    assertEquals(0, dv.get(0));\n    assertEquals(0, dv.get(1));\n    Bits docsWithField = ar.getDocsWithField(\"dv1\");\n    assertTrue(docsWithField.get(0));\n    assertFalse(docsWithField.get(1));\n    ir.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testTwoNumbersOneMissing() throws IOException {\n    assumeTrue(\"Codec does not support getDocsWithField\", defaultCodecSupportsDocsWithField());\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"dv1\", 0));\n    iw.addDocument(doc);\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.forceMerge(1);\n    iw.close();\n    \n    IndexReader ir = DirectoryReader.open(directory);\n    assertEquals(1, ir.leaves().size());\n    AtomicReader ar = ir.leaves().get(0).reader();\n    NumericDocValues dv = ar.getNumericDocValues(\"dv1\");\n    assertEquals(0, dv.get(0));\n    assertEquals(0, dv.get(1));\n    Bits docsWithField = ar.getDocsWithField(\"dv1\");\n    assertTrue(docsWithField.get(0));\n    assertFalse(docsWithField.get(1));\n    ir.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testTwoNumbersOneMissing().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testTwoNumbersOneMissing().mjava","sourceNew":"  public void testTwoNumbersOneMissing() throws IOException {\n    assumeTrue(\"Codec does not support getDocsWithField\", defaultCodecSupportsDocsWithField());\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(null);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"dv1\", 0));\n    iw.addDocument(doc);\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.forceMerge(1);\n    iw.shutdown();\n    \n    IndexReader ir = DirectoryReader.open(directory);\n    assertEquals(1, ir.leaves().size());\n    AtomicReader ar = ir.leaves().get(0).reader();\n    NumericDocValues dv = ar.getNumericDocValues(\"dv1\");\n    assertEquals(0, dv.get(0));\n    assertEquals(0, dv.get(1));\n    Bits docsWithField = ar.getDocsWithField(\"dv1\");\n    assertTrue(docsWithField.get(0));\n    assertFalse(docsWithField.get(1));\n    ir.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testTwoNumbersOneMissing() throws IOException {\n    assumeTrue(\"Codec does not support getDocsWithField\", defaultCodecSupportsDocsWithField());\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"dv1\", 0));\n    iw.addDocument(doc);\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.forceMerge(1);\n    iw.shutdown();\n    \n    IndexReader ir = DirectoryReader.open(directory);\n    assertEquals(1, ir.leaves().size());\n    AtomicReader ar = ir.leaves().get(0).reader();\n    NumericDocValues dv = ar.getNumericDocValues(\"dv1\");\n    assertEquals(0, dv.get(0));\n    assertEquals(0, dv.get(1));\n    Bits docsWithField = ar.getDocsWithField(\"dv1\");\n    assertTrue(docsWithField.get(0));\n    assertFalse(docsWithField.get(1));\n    ir.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testTwoNumbersOneMissing().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testTwoNumbersOneMissing().mjava","sourceNew":"  public void testTwoNumbersOneMissing() throws IOException {\n    assumeTrue(\"Codec does not support getDocsWithField\", defaultCodecSupportsDocsWithField());\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(null);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"dv1\", 0));\n    iw.addDocument(doc);\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.forceMerge(1);\n    iw.close();\n    \n    IndexReader ir = DirectoryReader.open(directory);\n    assertEquals(1, ir.leaves().size());\n    AtomicReader ar = ir.leaves().get(0).reader();\n    NumericDocValues dv = ar.getNumericDocValues(\"dv1\");\n    assertEquals(0, dv.get(0));\n    assertEquals(0, dv.get(1));\n    Bits docsWithField = ar.getDocsWithField(\"dv1\");\n    assertTrue(docsWithField.get(0));\n    assertFalse(docsWithField.get(1));\n    ir.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testTwoNumbersOneMissing() throws IOException {\n    assumeTrue(\"Codec does not support getDocsWithField\", defaultCodecSupportsDocsWithField());\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(null);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"dv1\", 0));\n    iw.addDocument(doc);\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.forceMerge(1);\n    iw.shutdown();\n    \n    IndexReader ir = DirectoryReader.open(directory);\n    assertEquals(1, ir.leaves().size());\n    AtomicReader ar = ir.leaves().get(0).reader();\n    NumericDocValues dv = ar.getNumericDocValues(\"dv1\");\n    assertEquals(0, dv.get(0));\n    assertEquals(0, dv.get(1));\n    Bits docsWithField = ar.getDocsWithField(\"dv1\");\n    assertTrue(docsWithField.get(0));\n    assertFalse(docsWithField.get(1));\n    ir.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad2a673349939e48652bf304cccf673c3412198f","date":1409585169,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testTwoNumbersOneMissing().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testTwoNumbersOneMissing().mjava","sourceNew":"  public void testTwoNumbersOneMissing() throws IOException {\n    assumeTrue(\"Codec does not support getDocsWithField\", codecSupportsDocsWithField());\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(null);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"dv1\", 0));\n    iw.addDocument(doc);\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.forceMerge(1);\n    iw.close();\n    \n    IndexReader ir = DirectoryReader.open(directory);\n    assertEquals(1, ir.leaves().size());\n    AtomicReader ar = ir.leaves().get(0).reader();\n    NumericDocValues dv = ar.getNumericDocValues(\"dv1\");\n    assertEquals(0, dv.get(0));\n    assertEquals(0, dv.get(1));\n    Bits docsWithField = ar.getDocsWithField(\"dv1\");\n    assertTrue(docsWithField.get(0));\n    assertFalse(docsWithField.get(1));\n    ir.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testTwoNumbersOneMissing() throws IOException {\n    assumeTrue(\"Codec does not support getDocsWithField\", defaultCodecSupportsDocsWithField());\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(null);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"dv1\", 0));\n    iw.addDocument(doc);\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.forceMerge(1);\n    iw.close();\n    \n    IndexReader ir = DirectoryReader.open(directory);\n    assertEquals(1, ir.leaves().size());\n    AtomicReader ar = ir.leaves().get(0).reader();\n    NumericDocValues dv = ar.getNumericDocValues(\"dv1\");\n    assertEquals(0, dv.get(0));\n    assertEquals(0, dv.get(1));\n    Bits docsWithField = ar.getDocsWithField(\"dv1\");\n    assertTrue(docsWithField.get(0));\n    assertFalse(docsWithField.get(1));\n    ir.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testTwoNumbersOneMissing().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testTwoNumbersOneMissing().mjava","sourceNew":"  public void testTwoNumbersOneMissing() throws IOException {\n    assumeTrue(\"Codec does not support getDocsWithField\", codecSupportsDocsWithField());\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(null);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"dv1\", 0));\n    iw.addDocument(doc);\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.forceMerge(1);\n    iw.close();\n    \n    IndexReader ir = DirectoryReader.open(directory);\n    assertEquals(1, ir.leaves().size());\n    AtomicReader ar = ir.leaves().get(0).reader();\n    NumericDocValues dv = ar.getNumericDocValues(\"dv1\");\n    assertEquals(0, dv.get(0));\n    assertEquals(0, dv.get(1));\n    Bits docsWithField = ar.getDocsWithField(\"dv1\");\n    assertTrue(docsWithField.get(0));\n    assertFalse(docsWithField.get(1));\n    ir.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testTwoNumbersOneMissing() throws IOException {\n    assumeTrue(\"Codec does not support getDocsWithField\", defaultCodecSupportsDocsWithField());\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(null);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"dv1\", 0));\n    iw.addDocument(doc);\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.forceMerge(1);\n    iw.close();\n    \n    IndexReader ir = DirectoryReader.open(directory);\n    assertEquals(1, ir.leaves().size());\n    AtomicReader ar = ir.leaves().get(0).reader();\n    NumericDocValues dv = ar.getNumericDocValues(\"dv1\");\n    assertEquals(0, dv.get(0));\n    assertEquals(0, dv.get(1));\n    Bits docsWithField = ar.getDocsWithField(\"dv1\");\n    assertTrue(docsWithField.get(0));\n    assertFalse(docsWithField.get(1));\n    ir.close();\n    directory.close();\n  }\n\n","bugFix":["820c994610cafbde5892c00924bdf69fffaaf38f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testTwoNumbersOneMissing().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testTwoNumbersOneMissing().mjava","sourceNew":"  public void testTwoNumbersOneMissing() throws IOException {\n    assumeTrue(\"Codec does not support getDocsWithField\", codecSupportsDocsWithField());\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(null);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"dv1\", 0));\n    iw.addDocument(doc);\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.forceMerge(1);\n    iw.close();\n    \n    IndexReader ir = DirectoryReader.open(directory);\n    assertEquals(1, ir.leaves().size());\n    LeafReader ar = ir.leaves().get(0).reader();\n    NumericDocValues dv = ar.getNumericDocValues(\"dv1\");\n    assertEquals(0, dv.get(0));\n    assertEquals(0, dv.get(1));\n    Bits docsWithField = ar.getDocsWithField(\"dv1\");\n    assertTrue(docsWithField.get(0));\n    assertFalse(docsWithField.get(1));\n    ir.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testTwoNumbersOneMissing() throws IOException {\n    assumeTrue(\"Codec does not support getDocsWithField\", codecSupportsDocsWithField());\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(null);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"dv1\", 0));\n    iw.addDocument(doc);\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.forceMerge(1);\n    iw.close();\n    \n    IndexReader ir = DirectoryReader.open(directory);\n    assertEquals(1, ir.leaves().size());\n    AtomicReader ar = ir.leaves().get(0).reader();\n    NumericDocValues dv = ar.getNumericDocValues(\"dv1\");\n    assertEquals(0, dv.get(0));\n    assertEquals(0, dv.get(1));\n    Bits docsWithField = ar.getDocsWithField(\"dv1\");\n    assertTrue(docsWithField.get(0));\n    assertFalse(docsWithField.get(1));\n    ir.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testTwoNumbersOneMissing().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testTwoNumbersOneMissing().mjava","sourceNew":"  public void testTwoNumbersOneMissing() throws IOException {\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(null);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"dv1\", 0));\n    iw.addDocument(doc);\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.forceMerge(1);\n    iw.close();\n    \n    IndexReader ir = DirectoryReader.open(directory);\n    assertEquals(1, ir.leaves().size());\n    LeafReader ar = ir.leaves().get(0).reader();\n    NumericDocValues dv = ar.getNumericDocValues(\"dv1\");\n    assertEquals(0, dv.nextDoc());\n    assertEquals(0, dv.longValue());\n    assertEquals(NO_MORE_DOCS, dv.nextDoc());\n    ir.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testTwoNumbersOneMissing() throws IOException {\n    assumeTrue(\"Codec does not support getDocsWithField\", codecSupportsDocsWithField());\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(null);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"dv1\", 0));\n    iw.addDocument(doc);\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.forceMerge(1);\n    iw.close();\n    \n    IndexReader ir = DirectoryReader.open(directory);\n    assertEquals(1, ir.leaves().size());\n    LeafReader ar = ir.leaves().get(0).reader();\n    NumericDocValues dv = ar.getNumericDocValues(\"dv1\");\n    assertEquals(0, dv.get(0));\n    assertEquals(0, dv.get(1));\n    Bits docsWithField = ar.getDocsWithField(\"dv1\");\n    assertTrue(docsWithField.get(0));\n    assertFalse(docsWithField.get(1));\n    ir.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testTwoNumbersOneMissing().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testTwoNumbersOneMissing().mjava","sourceNew":"  public void testTwoNumbersOneMissing() throws IOException {\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(null);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"dv1\", 0));\n    iw.addDocument(doc);\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.forceMerge(1);\n    iw.close();\n    \n    IndexReader ir = DirectoryReader.open(directory);\n    assertEquals(1, ir.leaves().size());\n    LeafReader ar = ir.leaves().get(0).reader();\n    NumericDocValues dv = ar.getNumericDocValues(\"dv1\");\n    assertEquals(0, dv.nextDoc());\n    assertEquals(0, dv.longValue());\n    assertEquals(NO_MORE_DOCS, dv.nextDoc());\n    ir.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testTwoNumbersOneMissing() throws IOException {\n    assumeTrue(\"Codec does not support getDocsWithField\", codecSupportsDocsWithField());\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(null);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"dv1\", 0));\n    iw.addDocument(doc);\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.forceMerge(1);\n    iw.close();\n    \n    IndexReader ir = DirectoryReader.open(directory);\n    assertEquals(1, ir.leaves().size());\n    LeafReader ar = ir.leaves().get(0).reader();\n    NumericDocValues dv = ar.getNumericDocValues(\"dv1\");\n    assertEquals(0, dv.get(0));\n    assertEquals(0, dv.get(1));\n    Bits docsWithField = ar.getDocsWithField(\"dv1\");\n    assertTrue(docsWithField.get(0));\n    assertFalse(docsWithField.get(1));\n    ir.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testTwoNumbersOneMissing().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testTwoNumbersOneMissing().mjava","sourceNew":"  public void testTwoNumbersOneMissing() throws IOException {\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(null);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"dv1\", 0));\n    iw.addDocument(doc);\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.forceMerge(1);\n    iw.close();\n    \n    IndexReader ir = DirectoryReader.open(directory);\n    assertEquals(1, ir.leaves().size());\n    LeafReader ar = ir.leaves().get(0).reader();\n    NumericDocValues dv = ar.getNumericDocValues(\"dv1\");\n    assertEquals(0, dv.nextDoc());\n    assertEquals(0, dv.longValue());\n    assertEquals(NO_MORE_DOCS, dv.nextDoc());\n    ir.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testTwoNumbersOneMissing() throws IOException {\n    assumeTrue(\"Codec does not support getDocsWithField\", codecSupportsDocsWithField());\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(null);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.YES));\n    doc.add(new NumericDocValuesField(\"dv1\", 0));\n    iw.addDocument(doc);\n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.forceMerge(1);\n    iw.close();\n    \n    IndexReader ir = DirectoryReader.open(directory);\n    assertEquals(1, ir.leaves().size());\n    LeafReader ar = ir.leaves().get(0).reader();\n    NumericDocValues dv = ar.getNumericDocValues(\"dv1\");\n    assertEquals(0, dv.get(0));\n    assertEquals(0, dv.get(1));\n    Bits docsWithField = ar.getDocsWithField(\"dv1\");\n    assertTrue(docsWithField.get(0));\n    assertFalse(docsWithField.get(1));\n    ir.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"9faa42f41b6adb98daf009cf99a4ee239189e469":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d12774649e77a6efccc3502c735c2893b52af6d6"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["c9fb5f46e264daf5ba3860defe623a89d202dd87","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["d0ef034a4f10871667ae75181537775ddcf8ade4","ad2a673349939e48652bf304cccf673c3412198f"],"487204058e79506a6ddba0065cfff810bc15b06a":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["c9fb5f46e264daf5ba3860defe623a89d202dd87","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"820c994610cafbde5892c00924bdf69fffaaf38f":["487204058e79506a6ddba0065cfff810bc15b06a"],"d12774649e77a6efccc3502c735c2893b52af6d6":["9faa42f41b6adb98daf009cf99a4ee239189e469"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["820c994610cafbde5892c00924bdf69fffaaf38f"],"ad2a673349939e48652bf304cccf673c3412198f":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"9faa42f41b6adb98daf009cf99a4ee239189e469":["d12774649e77a6efccc3502c735c2893b52af6d6"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","487204058e79506a6ddba0065cfff810bc15b06a"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"487204058e79506a6ddba0065cfff810bc15b06a":["820c994610cafbde5892c00924bdf69fffaaf38f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9faa42f41b6adb98daf009cf99a4ee239189e469","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["402ad3ddc9da7b70da1b167667a60ece6a1381fb","ad2a673349939e48652bf304cccf673c3412198f"],"d12774649e77a6efccc3502c735c2893b52af6d6":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"820c994610cafbde5892c00924bdf69fffaaf38f":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ad2a673349939e48652bf304cccf673c3412198f":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}