{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#setUp().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    httpClient = new HttpClient(new MultiThreadedHttpConnectionManager());\n\n    httpClient.getParams().setParameter(\"http.connection.timeout\", new Integer(1000));\n    for (int i = 0; i < solr.length; i++) {\n      solr[i] = new SolrInstance(\"solr\" + i, 0);\n      solr[i].setUp();\n      solr[i].startJetty();\n      addDocs(solr[i]);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    httpClient = new HttpClient(new MultiThreadedHttpConnectionManager());\n\n    httpClient.getParams().setParameter(\"http.connection.timeout\", new Integer(1000));\n    for (int i = 0; i < solr.length; i++) {\n      solr[i] = new SolrInstance(\"solr\" + i, 0);\n      solr[i].setUp();\n      solr[i].startJetty();\n      addDocs(solr[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    httpClient = new HttpClient(new MultiThreadedHttpConnectionManager());\n\n    httpClient.getParams().setParameter(\"http.connection.timeout\", new Integer(1000));\n    for (int i = 0; i < solr.length; i++) {\n      solr[i] = new SolrInstance(\"solr\" + i, 0);\n      solr[i].setUp();\n      solr[i].startJetty();\n      addDocs(solr[i]);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    httpClient = new HttpClient(new MultiThreadedHttpConnectionManager());\n\n    httpClient.getParams().setParameter(\"http.connection.timeout\", new Integer(1000));\n    for (int i = 0; i < solr.length; i++) {\n      solr[i] = new SolrInstance(\"solr\" + i, 0);\n      solr[i].setUp();\n      solr[i].startJetty();\n      addDocs(solr[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    httpClient = new HttpClient(new MultiThreadedHttpConnectionManager());\n\n    httpClient.getParams().setParameter(\"http.connection.timeout\", new Integer(1000));\n    for (int i = 0; i < solr.length; i++) {\n      solr[i] = new SolrInstance(\"solr\" + i, 0);\n      solr[i].setUp();\n      solr[i].startJetty();\n      addDocs(solr[i]);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    httpClient = new HttpClient(new MultiThreadedHttpConnectionManager());\n\n    httpClient.getParams().setParameter(\"http.connection.timeout\", new Integer(1000));\n    for (int i = 0; i < solr.length; i++) {\n      solr[i] = new SolrInstance(\"solr\" + i, 0);\n      solr[i].setUp();\n      solr[i].startJetty();\n      addDocs(solr[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7321b77a7bc3edfebd637ef273e9dfaa9969eba6","date":1333023097,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#setUp().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    httpClient = new DefaultHttpClient(new ThreadSafeClientConnManager());\n\n    httpClient.getParams().setParameter(\"http.connection.timeout\", new Integer(1000));\n    for (int i = 0; i < solr.length; i++) {\n      solr[i] = new SolrInstance(\"solr\" + i, 0);\n      solr[i].setUp();\n      solr[i].startJetty();\n      addDocs(solr[i]);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    httpClient = new HttpClient(new MultiThreadedHttpConnectionManager());\n\n    httpClient.getParams().setParameter(\"http.connection.timeout\", new Integer(1000));\n    for (int i = 0; i < solr.length; i++) {\n      solr[i] = new SolrInstance(\"solr\" + i, 0);\n      solr[i].setUp();\n      solr[i].startJetty();\n      addDocs(solr[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eb99886ff640d94edb43e0d36112a2b7023379ba","date":1338292884,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#setUp().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    httpClient = HttpClientUtil.createClient(null);\n    HttpClientUtil.setConnectionTimeout(httpClient,  1000);\n    for (int i = 0; i < solr.length; i++) {\n      solr[i] = new SolrInstance(\"solr\" + i, 0);\n      solr[i].setUp();\n      solr[i].startJetty();\n      addDocs(solr[i]);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    httpClient = new DefaultHttpClient(new ThreadSafeClientConnManager());\n\n    httpClient.getParams().setParameter(\"http.connection.timeout\", new Integer(1000));\n    for (int i = 0; i < solr.length; i++) {\n      solr[i] = new SolrInstance(\"solr\" + i, 0);\n      solr[i].setUp();\n      solr[i].startJetty();\n      addDocs(solr[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21591922fb4db3e2a6ffb2cb342b3d61c053a973","date":1340761680,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#setUp().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    httpClient = HttpClientUtil.createClient(null);\n    HttpClientUtil.setConnectionTimeout(httpClient,  1000);\n    for (int i = 0; i < solr.length; i++) {\n      solr[i] = new SolrInstance(\"solr/collection1\" + i, 0);\n      solr[i].setUp();\n      solr[i].startJetty();\n      addDocs(solr[i]);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    httpClient = HttpClientUtil.createClient(null);\n    HttpClientUtil.setConnectionTimeout(httpClient,  1000);\n    for (int i = 0; i < solr.length; i++) {\n      solr[i] = new SolrInstance(\"solr\" + i, 0);\n      solr[i].setUp();\n      solr[i].startJetty();\n      addDocs(solr[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#setUp().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    httpClient = HttpClientUtil.createClient(null);\n    HttpClientUtil.setConnectionTimeout(httpClient,  1000);\n    for (int i = 0; i < solr.length; i++) {\n      solr[i] = new SolrInstance(\"solr/collection1\" + i, 0);\n      solr[i].setUp();\n      solr[i].startJetty();\n      addDocs(solr[i]);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    httpClient = HttpClientUtil.createClient(null);\n    HttpClientUtil.setConnectionTimeout(httpClient,  1000);\n    for (int i = 0; i < solr.length; i++) {\n      solr[i] = new SolrInstance(\"solr\" + i, 0);\n      solr[i].setUp();\n      solr[i].startJetty();\n      addDocs(solr[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a9c941a7004ea2e95b10aa67dafa319ff8d8c19","date":1400739326,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#setUp().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    httpClient = HttpClientUtil.createClient(null);\n    HttpClientUtil.setConnectionTimeout(httpClient,  1000);\n    for (int i = 0; i < solr.length; i++) {\n      solr[i] = new SolrInstance(\"solr/collection1\" + i, createTempDir(\"instance-\" + i), 0);\n      solr[i].setUp();\n      solr[i].startJetty();\n      addDocs(solr[i]);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    httpClient = HttpClientUtil.createClient(null);\n    HttpClientUtil.setConnectionTimeout(httpClient,  1000);\n    for (int i = 0; i < solr.length; i++) {\n      solr[i] = new SolrInstance(\"solr/collection1\" + i, 0);\n      solr[i].setUp();\n      solr[i].startJetty();\n      addDocs(solr[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7605579001505896d48b07160075a5c8b8e128e","date":1400758727,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#setUp().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    httpClient = HttpClientUtil.createClient(null);\n    HttpClientUtil.setConnectionTimeout(httpClient,  1000);\n    for (int i = 0; i < solr.length; i++) {\n      solr[i] = new SolrInstance(\"solr/collection1\" + i, createTempDir(\"instance-\" + i), 0);\n      solr[i].setUp();\n      solr[i].startJetty();\n      addDocs(solr[i]);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    httpClient = HttpClientUtil.createClient(null);\n    HttpClientUtil.setConnectionTimeout(httpClient,  1000);\n    for (int i = 0; i < solr.length; i++) {\n      solr[i] = new SolrInstance(\"solr/collection1\" + i, 0);\n      solr[i].setUp();\n      solr[i].startJetty();\n      addDocs(solr[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#setUp().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    httpClient = HttpClientUtil.createClient(null);\n    HttpClientUtil.setConnectionTimeout(httpClient,  1000);\n    for (int i = 0; i < solr.length; i++) {\n      solr[i] = new SolrInstance(\"solr/collection1\" + i, createTempDir(\"instance-\" + i).toFile(), 0);\n      solr[i].setUp();\n      solr[i].startJetty();\n      addDocs(solr[i]);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    httpClient = HttpClientUtil.createClient(null);\n    HttpClientUtil.setConnectionTimeout(httpClient,  1000);\n    for (int i = 0; i < solr.length; i++) {\n      solr[i] = new SolrInstance(\"solr/collection1\" + i, createTempDir(\"instance-\" + i), 0);\n      solr[i].setUp();\n      solr[i].startJetty();\n      addDocs(solr[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrClient#setUp().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    httpClient = HttpClientUtil.createClient(null);\n    HttpClientUtil.setConnectionTimeout(httpClient,  1000);\n    for (int i = 0; i < solr.length; i++) {\n      solr[i] = new SolrInstance(\"solr/collection1\" + i, createTempDir(\"instance-\" + i).toFile(), 0);\n      solr[i].setUp();\n      solr[i].startJetty();\n      addDocs(solr[i]);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    httpClient = HttpClientUtil.createClient(null);\n    HttpClientUtil.setConnectionTimeout(httpClient,  1000);\n    for (int i = 0; i < solr.length; i++) {\n      solr[i] = new SolrInstance(\"solr/collection1\" + i, createTempDir(\"instance-\" + i).toFile(), 0);\n      solr[i].setUp();\n      solr[i].startJetty();\n      addDocs(solr[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"21591922fb4db3e2a6ffb2cb342b3d61c053a973":["eb99886ff640d94edb43e0d36112a2b7023379ba"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["c26f00b574427b55127e869b935845554afde1fa"],"bafca15d8e408346a67f4282ad1143b88023893b":["f4abec28b874149a7223e32cc7a01704c27790de"],"b7605579001505896d48b07160075a5c8b8e128e":["21591922fb4db3e2a6ffb2cb342b3d61c053a973","4a9c941a7004ea2e95b10aa67dafa319ff8d8c19"],"f4abec28b874149a7223e32cc7a01704c27790de":["4a9c941a7004ea2e95b10aa67dafa319ff8d8c19"],"eb99886ff640d94edb43e0d36112a2b7023379ba":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"4a9c941a7004ea2e95b10aa67dafa319ff8d8c19":["21591922fb4db3e2a6ffb2cb342b3d61c053a973"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["eb99886ff640d94edb43e0d36112a2b7023379ba","21591922fb4db3e2a6ffb2cb342b3d61c053a973"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"21591922fb4db3e2a6ffb2cb342b3d61c053a973":["b7605579001505896d48b07160075a5c8b8e128e","4a9c941a7004ea2e95b10aa67dafa319ff8d8c19","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"c26f00b574427b55127e869b935845554afde1fa":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["eb99886ff640d94edb43e0d36112a2b7023379ba"],"bafca15d8e408346a67f4282ad1143b88023893b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b7605579001505896d48b07160075a5c8b8e128e":[],"f4abec28b874149a7223e32cc7a01704c27790de":["bafca15d8e408346a67f4282ad1143b88023893b"],"eb99886ff640d94edb43e0d36112a2b7023379ba":["21591922fb4db3e2a6ffb2cb342b3d61c053a973","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"4a9c941a7004ea2e95b10aa67dafa319ff8d8c19":["b7605579001505896d48b07160075a5c8b8e128e","f4abec28b874149a7223e32cc7a01704c27790de"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7605579001505896d48b07160075a5c8b8e128e","fe33227f6805edab2036cbb80645cc4e2d1fa424","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}