{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiDocMaker.Parser#next().mjava","commits":[{"id":"dbeed263e6233e327186a2d90fd6848347f2883a","date":1186649846,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiDocMaker.Parser#next().mjava","pathOld":"/dev/null","sourceNew":"    String[] next() throws NoMoreDataException {\n      String[] result;\n      synchronized(this){\n        while(tuple == null && nmde == null){\n          try {\n            wait();\n          } catch (InterruptedException ie) {\n          }\n        }\n        if (nmde != null) {\n          throw nmde;\n        }\n        result = tuple;\n        tuple = null;\n        notify();\n      }\n      return result;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["fda21570063402edad2501896b67026c202b0b32"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ee93bdd695e4b87f4f05de6a7fa42ec9a5923a63","date":1199497913,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiDocMaker.Parser#next().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiDocMaker.Parser#next().mjava","sourceNew":"    String[] next() throws NoMoreDataException {\n      if (t == null) {\n        t = new Thread(this);\n        t.setDaemon(true);\n        t.start();\n      }\n      String[] result;\n      synchronized(this){\n        while(tuple == null && nmde == null){\n          try {\n            wait();\n          } catch (InterruptedException ie) {\n          }\n        }\n        if (nmde != null) {\n          // Set to null so we will re-start thread in case\n          // we are re-used:\n          t = null;\n          throw nmde;\n        }\n        result = tuple;\n        tuple = null;\n        notify();\n      }\n      return result;\n    }\n\n","sourceOld":"    String[] next() throws NoMoreDataException {\n      String[] result;\n      synchronized(this){\n        while(tuple == null && nmde == null){\n          try {\n            wait();\n          } catch (InterruptedException ie) {\n          }\n        }\n        if (nmde != null) {\n          throw nmde;\n        }\n        result = tuple;\n        tuple = null;\n        notify();\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fda21570063402edad2501896b67026c202b0b32","date":1199959938,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiDocMaker.Parser#next().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiDocMaker.Parser#next().mjava","sourceNew":"    String[] next() throws NoMoreDataException {\n      if (t == null) {\n        threadDone = false;\n        t = new Thread(this);\n        t.setDaemon(true);\n        t.start();\n      }\n      String[] result;\n      synchronized(this){\n        while(tuple == null && nmde == null && !threadDone) {\n          try {\n            wait();\n          } catch (InterruptedException ie) {\n          }\n        }\n        if (nmde != null) {\n          // Set to null so we will re-start thread in case\n          // we are re-used:\n          t = null;\n          throw nmde;\n        }\n        if (t != null && threadDone)\n          // The thread has exited yet did not hit end of\n          // data, so this means it hit an exception.  We\n          // throw NoMorDataException here to force\n          // benchmark to stop the current alg:\n          throw new NoMoreDataException();\n        result = tuple;\n        tuple = null;\n        notify();\n      }\n      return result;\n    }\n\n","sourceOld":"    String[] next() throws NoMoreDataException {\n      if (t == null) {\n        t = new Thread(this);\n        t.setDaemon(true);\n        t.start();\n      }\n      String[] result;\n      synchronized(this){\n        while(tuple == null && nmde == null){\n          try {\n            wait();\n          } catch (InterruptedException ie) {\n          }\n        }\n        if (nmde != null) {\n          // Set to null so we will re-start thread in case\n          // we are re-used:\n          t = null;\n          throw nmde;\n        }\n        result = tuple;\n        tuple = null;\n        notify();\n      }\n      return result;\n    }\n\n","bugFix":["dbeed263e6233e327186a2d90fd6848347f2883a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4bea909b475e3f9d726f4fee3c27d3c870b9027","date":1239875190,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiDocMaker.Parser#next().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiDocMaker.Parser#next().mjava","sourceNew":"    String[] next() throws NoMoreDataException {\n      if (t == null) {\n        threadDone = false;\n        t = new Thread(this);\n        t.setDaemon(true);\n        t.start();\n      }\n      String[] result;\n      synchronized(this){\n        while(tuple == null && nmde == null && !threadDone) {\n          try {\n            wait();\n          } catch (InterruptedException ie) {\n          }\n        }\n        if (nmde != null) {\n          // Set to null so we will re-start thread in case\n          // we are re-used:\n          t = null;\n          throw nmde;\n        }\n        if (t != null && threadDone) {\n          // The thread has exited yet did not hit end of\n          // data, so this means it hit an exception.  We\n          // throw NoMorDataException here to force\n          // benchmark to stop the current alg:\n          throw new NoMoreDataException();\n        }\n        result = tuple;\n        tuple = null;\n        notify();\n      }\n      return result;\n    }\n\n","sourceOld":"    String[] next() throws NoMoreDataException {\n      if (t == null) {\n        threadDone = false;\n        t = new Thread(this);\n        t.setDaemon(true);\n        t.start();\n      }\n      String[] result;\n      synchronized(this){\n        while(tuple == null && nmde == null && !threadDone) {\n          try {\n            wait();\n          } catch (InterruptedException ie) {\n          }\n        }\n        if (nmde != null) {\n          // Set to null so we will re-start thread in case\n          // we are re-used:\n          t = null;\n          throw nmde;\n        }\n        if (t != null && threadDone)\n          // The thread has exited yet did not hit end of\n          // data, so this means it hit an exception.  We\n          // throw NoMorDataException here to force\n          // benchmark to stop the current alg:\n          throw new NoMoreDataException();\n        result = tuple;\n        tuple = null;\n        notify();\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b","date":1245355139,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#next().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiDocMaker.Parser#next().mjava","sourceNew":"    String[] next() throws NoMoreDataException {\n      if (t == null) {\n        threadDone = false;\n        t = new Thread(this);\n        t.setDaemon(true);\n        t.start();\n      }\n      String[] result;\n      synchronized(this){\n        while(tuple == null && nmde == null && !threadDone) {\n          try {\n            wait();\n          } catch (InterruptedException ie) {\n          }\n        }\n        if (nmde != null) {\n          // Set to null so we will re-start thread in case\n          // we are re-used:\n          t = null;\n          throw nmde;\n        }\n        if (t != null && threadDone) {\n          // The thread has exited yet did not hit end of\n          // data, so this means it hit an exception.  We\n          // throw NoMorDataException here to force\n          // benchmark to stop the current alg:\n          throw new NoMoreDataException();\n        }\n        result = tuple;\n        tuple = null;\n        notify();\n      }\n      return result;\n    }\n\n","sourceOld":"    String[] next() throws NoMoreDataException {\n      if (t == null) {\n        threadDone = false;\n        t = new Thread(this);\n        t.setDaemon(true);\n        t.start();\n      }\n      String[] result;\n      synchronized(this){\n        while(tuple == null && nmde == null && !threadDone) {\n          try {\n            wait();\n          } catch (InterruptedException ie) {\n          }\n        }\n        if (nmde != null) {\n          // Set to null so we will re-start thread in case\n          // we are re-used:\n          t = null;\n          throw nmde;\n        }\n        if (t != null && threadDone) {\n          // The thread has exited yet did not hit end of\n          // data, so this means it hit an exception.  We\n          // throw NoMorDataException here to force\n          // benchmark to stop the current alg:\n          throw new NoMoreDataException();\n        }\n        result = tuple;\n        tuple = null;\n        notify();\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b":["c4bea909b475e3f9d726f4fee3c27d3c870b9027"],"fda21570063402edad2501896b67026c202b0b32":["ee93bdd695e4b87f4f05de6a7fa42ec9a5923a63"],"ee93bdd695e4b87f4f05de6a7fa42ec9a5923a63":["dbeed263e6233e327186a2d90fd6848347f2883a"],"dbeed263e6233e327186a2d90fd6848347f2883a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c4bea909b475e3f9d726f4fee3c27d3c870b9027":["fda21570063402edad2501896b67026c202b0b32"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6944b9fa6d8ef96b83ae2d3a4332d03b3857355b"]},"commit2Childs":{"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fda21570063402edad2501896b67026c202b0b32":["c4bea909b475e3f9d726f4fee3c27d3c870b9027"],"ee93bdd695e4b87f4f05de6a7fa42ec9a5923a63":["fda21570063402edad2501896b67026c202b0b32"],"dbeed263e6233e327186a2d90fd6848347f2883a":["ee93bdd695e4b87f4f05de6a7fa42ec9a5923a63"],"c4bea909b475e3f9d726f4fee3c27d3c870b9027":["6944b9fa6d8ef96b83ae2d3a4332d03b3857355b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dbeed263e6233e327186a2d90fd6848347f2883a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}