{"path":"lucene/misc/src/test/org/apache/lucene/search/TestDiversifiedTopDocsCollector#getTestQuery().mjava","commits":[{"id":"45ccb604e99f21f1c05722c0e28bcfa64b94a861","date":1423735816,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/search/TestDiversifiedTopDocsCollector#getTestQuery().mjava","pathOld":"/dev/null","sourceNew":"  private Query getTestQuery() {\n    BooleanQuery testQuery = new BooleanQuery();\n    testQuery.add(new BooleanClause(new TermQuery(new Term(\"year\", \"1966\")),\n        Occur.SHOULD));\n    testQuery.add(new BooleanClause(new TermQuery(new Term(\"year\", \"1967\")),\n        Occur.SHOULD));\n    testQuery.add(new BooleanClause(new TermQuery(new Term(\"year\", \"1968\")),\n        Occur.SHOULD));\n    testQuery.add(new BooleanClause(new TermQuery(new Term(\"year\", \"1969\")),\n        Occur.SHOULD));\n    return testQuery;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/search/TestDiversifiedTopDocsCollector#getTestQuery().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/search/TestDiversifiedTopDocsCollector#getTestQuery().mjava","sourceNew":"  private Query getTestQuery() {\n    BooleanQuery.Builder testQuery = new BooleanQuery.Builder();\n    testQuery.add(new BooleanClause(new TermQuery(new Term(\"year\", \"1966\")),\n        Occur.SHOULD));\n    testQuery.add(new BooleanClause(new TermQuery(new Term(\"year\", \"1967\")),\n        Occur.SHOULD));\n    testQuery.add(new BooleanClause(new TermQuery(new Term(\"year\", \"1968\")),\n        Occur.SHOULD));\n    testQuery.add(new BooleanClause(new TermQuery(new Term(\"year\", \"1969\")),\n        Occur.SHOULD));\n    return testQuery.build();\n  }\n\n","sourceOld":"  private Query getTestQuery() {\n    BooleanQuery testQuery = new BooleanQuery();\n    testQuery.add(new BooleanClause(new TermQuery(new Term(\"year\", \"1966\")),\n        Occur.SHOULD));\n    testQuery.add(new BooleanClause(new TermQuery(new Term(\"year\", \"1967\")),\n        Occur.SHOULD));\n    testQuery.add(new BooleanClause(new TermQuery(new Term(\"year\", \"1968\")),\n        Occur.SHOULD));\n    testQuery.add(new BooleanClause(new TermQuery(new Term(\"year\", \"1969\")),\n        Occur.SHOULD));\n    return testQuery;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68d6cb7f0f019661a784bd0e5a21e85b5f812af6","date":1515075216,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/search/TestDiversifiedTopDocsCollector#getTestQuery().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/search/TestDiversifiedTopDocsCollector#getTestQuery().mjava","sourceNew":"  private Query getTestQuery() {\n    BooleanQuery.Builder testQuery = new BooleanQuery.Builder();\n    testQuery.add(new BooleanClause(new TermQuery(new Term(\"year\", \"1966\")),\n        Occur.SHOULD));\n    testQuery.add(new BooleanClause(new TermQuery(new Term(\"year\", \"1967\")),\n        Occur.SHOULD));\n    testQuery.add(new BooleanClause(new TermQuery(new Term(\"year\", \"1968\")),\n        Occur.SHOULD));\n    testQuery.add(new BooleanClause(new TermQuery(new Term(\"year\", \"1969\")),\n        Occur.SHOULD));\n    return new DocValueScoreQuery(testQuery.build(), \"weeksAtNumberOne\");\n  }\n\n","sourceOld":"  private Query getTestQuery() {\n    BooleanQuery.Builder testQuery = new BooleanQuery.Builder();\n    testQuery.add(new BooleanClause(new TermQuery(new Term(\"year\", \"1966\")),\n        Occur.SHOULD));\n    testQuery.add(new BooleanClause(new TermQuery(new Term(\"year\", \"1967\")),\n        Occur.SHOULD));\n    testQuery.add(new BooleanClause(new TermQuery(new Term(\"year\", \"1968\")),\n        Occur.SHOULD));\n    testQuery.add(new BooleanClause(new TermQuery(new Term(\"year\", \"1969\")),\n        Occur.SHOULD));\n    return testQuery.build();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/misc/src/test/org/apache/lucene/search/TestDiversifiedTopDocsCollector#getTestQuery().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/search/TestDiversifiedTopDocsCollector#getTestQuery().mjava","sourceNew":"  private Query getTestQuery() {\n    BooleanQuery.Builder testQuery = new BooleanQuery.Builder();\n    testQuery.add(new BooleanClause(new TermQuery(new Term(\"year\", \"1966\")),\n        Occur.SHOULD));\n    testQuery.add(new BooleanClause(new TermQuery(new Term(\"year\", \"1967\")),\n        Occur.SHOULD));\n    testQuery.add(new BooleanClause(new TermQuery(new Term(\"year\", \"1968\")),\n        Occur.SHOULD));\n    testQuery.add(new BooleanClause(new TermQuery(new Term(\"year\", \"1969\")),\n        Occur.SHOULD));\n    return new DocValueScoreQuery(testQuery.build(), \"weeksAtNumberOne\");\n  }\n\n","sourceOld":"  private Query getTestQuery() {\n    BooleanQuery.Builder testQuery = new BooleanQuery.Builder();\n    testQuery.add(new BooleanClause(new TermQuery(new Term(\"year\", \"1966\")),\n        Occur.SHOULD));\n    testQuery.add(new BooleanClause(new TermQuery(new Term(\"year\", \"1967\")),\n        Occur.SHOULD));\n    testQuery.add(new BooleanClause(new TermQuery(new Term(\"year\", \"1968\")),\n        Occur.SHOULD));\n    testQuery.add(new BooleanClause(new TermQuery(new Term(\"year\", \"1969\")),\n        Occur.SHOULD));\n    return testQuery.build();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["45ccb604e99f21f1c05722c0e28bcfa64b94a861"],"b94236357aaa22b76c10629851fe4e376e0cea82":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747","68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"45ccb604e99f21f1c05722c0e28bcfa64b94a861":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["b94236357aaa22b76c10629851fe4e376e0cea82","68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["b94236357aaa22b76c10629851fe4e376e0cea82"],"45ccb604e99f21f1c05722c0e28bcfa64b94a861":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["45ccb604e99f21f1c05722c0e28bcfa64b94a861"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}